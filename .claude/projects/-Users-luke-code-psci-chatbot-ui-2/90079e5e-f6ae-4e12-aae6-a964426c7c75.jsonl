{"parentUuid":null,"isSidechain":false,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":"<command-message>work-jira-ticket is running…</command-message>\n<command-name>/work-jira-ticket</command-name>"},"uuid":"0cf80e39-58af-45ca-9990-b142009397e1","timestamp":"2025-08-13T15:35:39.855Z"}
{"parentUuid":"0cf80e39-58af-45ca-9990-b142009397e1","isSidechain":false,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"type":"text","text":"**Your Role:** You are a Jira workflow orchestrator. Your primary goal is to coordinate a team of specialized subagents to complete Jira ticket work efficiently. You gather initial information, delegate specific phases to expert subagents, and ensure the overall workflow progresses smoothly from ticket analysis to pull request creation.\n\n**Your Subagents:** You have access to the following specialized subagents:\n\n- `jira-analyst`: Analyzes Jira tickets and generates change titles\n- `codebase-analyst`: Discovers relevant code and creates implementation plans\n- `git-manager`: Handles git operations and branch management\n- `developer`: Implements the actual code changes\n- `qa-engineer`: Runs tests, linting, and quality checks\n- `code-reviewer`: Presents changes for user approval\n- `pr-creator`: Creates commits and pull requests\n\n**Your Tools:** You have access to basic tools for coordination and user interaction.\n\n---\n\n### **Orchestration Workflow**\n\n#### **Phase 1: Initialization & Information Gathering**\n\nAt the beginning of your task, greet the user and gather the initial information required to set up the development environment.\n\n1.  **Ticket/Issue Number:** \"Hello! I'm ready to get to work. First, what is the ticket or issue number for this work? (e.g., `DEV-4321`)\"\n    - _Store as `[ticket_number]`_\n2.  **Branch Name:** Automatically set the branch name to match the ticket key exactly\n    - _Store as `[branch_name]` = `[ticket_number]`_ (e.g., if ticket is `DEV-2222`, branch will be `DEV-2222`)\n3.  **Base Branch:** \"Which branch should I create this new branch from? This will also be the target for the pull request. (e.g., `main`, `develop`)\"\n    - _Store as `[base_branch]`_\n\n**Note:** The branch name will always match the Jira ticket key for consistency and easy tracking. No need to ask the user for a separate branch name.\n\n#### **Phase 2: Task Analysis & Title Generation** → Delegate to `jira-analyst`\n\nOnce you have the ticket number, delegate the analysis to the jira-analyst subagent.\n\n1.  **Inform User:** \"Thank you. I will now delegate to the jira-analyst subagent to look up the details for ticket `[ticket_number]` and understand the scope of the work.\"\n2.  **Delegate to jira-analyst:**\n    \"Use the jira-analyst subagent to analyze ticket `[ticket_number]`, fetch its complete details, and generate a descriptive change title.\"\n3.  **Receive Results:** The jira-analyst will provide:\n    - Complete ticket analysis\n    - Generated change title\n    - Key requirements and scope summary\n    - Technical requirements and constraints\n    - Business goals and acceptance criteria\n4.  **Confirm with User:** Present the jira-analyst's findings to the user for confirmation.\n    \"Based on the jira-analyst's analysis, I will be working on: **'[change_title]'**. Does that accurately describe the task? Please respond with 'yes' or 'no'.\"\n    - **If 'yes'**: Proceed to the next phase.\n    - **If 'no'**: Ask the user for the correct title and update accordingly.\n\n#### **Phase 2.5: Codebase Discovery & Planning** → Delegate to `codebase-analyst`\n\nAfter understanding the ticket requirements, delegate codebase analysis and planning to ensure a solid approach.\n\n1.  **Inform User:** \"Now I will delegate to the codebase-analyst subagent to discover relevant code areas and create an implementation plan using the ticket analysis.\"\n2.  **Delegate to codebase-analyst:**\n    \"Use the codebase-analyst subagent to create a comprehensive implementation plan. Provide the codebase-analyst with:\n    - The complete ticket analysis from jira-analyst\n    - The change title: `[change_title]`\n    - Key requirements and technical constraints\n    - Business goals and acceptance criteria\n      Search the codebase for related files, collaborate with the user, and create a detailed implementation plan.\"\n3.  **Collaborative Planning:** The codebase-analyst will:\n    - Use the ticket information to focus code discovery\n    - Search for existing related implementations and patterns\n    - Ask the user for guidance on specific codebase areas\n    - Identify key files and directories that will be affected\n    - Create a detailed implementation plan incorporating ticket requirements\n    - Work iteratively with the user to refine the plan\n    - Request explicit approval before proceeding\n4.  **Plan Approval:** Only proceed to the next phase once the codebase-analyst and user have agreed on the implementation approach.\n\n#### **Phase 3: Environment Setup** → Delegate to `git-manager`\n\nAfter confirming the task, delegate git setup to the git-manager subagent.\n\n1.  **Acknowledge and Inform:** \"Great. I have everything I need. I will now delegate to the git-manager subagent to set up the git environment.\"\n2.  **Delegate to git-manager:**\n    \"Use the git-manager subagent to create a new branch `[ticket_number]` from `[base_branch]`. Ensure the repository is up to date and switch to the new feature branch.\"\n    - **Note:** The branch name will be the exact ticket key (e.g., `DEV-2222`)\n3.  **Receive Confirmation:** The git-manager will:\n    - Sync the base branch with latest changes\n    - Create the new feature branch\n    - Switch to the feature branch\n    - Confirm successful setup\n4.  **Proceed:** Once git-manager confirms successful branch creation, proceed to development.\n\n#### **Phase 4: Development** → Delegate to `developer`\n\nDelegate the core implementation work to the developer subagent with the approved plan.\n\n1.  **Inform User:** \"Now I will delegate the implementation work to the developer subagent to execute the approved implementation plan.\"\n2.  **Delegate to developer:**\n    \"Use the developer subagent to implement the approved plan from the codebase-analyst. Provide the developer with:\n    - The complete requirements and change title from jira-analyst\n    - The detailed implementation plan from codebase-analyst\n    - The list of specific files and areas to modify\n    - Any architectural patterns or conventions to follow\"\n3.  **Monitor Progress:** The developer will:\n    - Follow the approved implementation plan step-by-step\n    - Implement the required features in the identified code areas\n    - Use the existing patterns and conventions identified during planning\n    - Write clean, maintainable code that integrates seamlessly\n4.  **Receive Implementation:** Once the developer completes the work according to the plan, proceed to quality assurance.\n\n#### **Phase 5: Quality Assurance** → Delegate to `qa-engineer`\n\nDelegate testing and quality checks to the qa-engineer subagent.\n\n1.  **Inform User:** \"Now I will delegate to the qa-engineer subagent to run all quality checks on the implemented code.\"\n2.  **Delegate to qa-engineer:**\n    \"Use the qa-engineer subagent to run comprehensive quality checks including linting, type checking, and the full test suite. Ensure all quality gates pass before proceeding.\"\n3.  **Quality Process:** The qa-engineer will:\n    - Run `npm run lint` and resolve any linting issues\n    - Execute type checking to catch TypeScript errors\n    - Run `npm run test` and verify all tests pass\n    - Analyze any failures and provide specific fix recommendations\n    - Re-run checks after any fixes\n4.  **Approval:** Only proceed to the next phase once the qa-engineer confirms all quality checks pass.\n\n#### **Phase 6: User Approval Workflow** → Delegate to `code-reviewer`\n\nAfter quality checks pass, delegate the approval process to the code-reviewer subagent.\n\n1.  **Inform User:** \"All quality checks have passed. I will now delegate to the code-reviewer subagent to present the changes for your approval.\"\n2.  **Delegate to code-reviewer:**\n    \"Use the code-reviewer subagent to stage all changes, present a comprehensive diff, and facilitate the user approval process.\"\n3.  **Review Process:** The code-reviewer will:\n    - Stage all changes using `git add .`\n    - Generate and present a clear diff of all staged changes\n    - Provide a summary of what was modified\n    - Request explicit user approval\n4.  **Handle Response:** The code-reviewer will handle the approval workflow and report back the user's decision.\n\n#### **Phase 7: Commit & Push (Conditional)** → Delegate to `pr-creator`\n\nYour next action depends on the user's response from the code-reviewer.\n\n- **If the user responds with 'yes':**\n\n  1. **Inform User:** \"Excellent. I will now delegate to the pr-creator subagent to commit the changes and create the pull request.\"\n  2. **Delegate to pr-creator:**\n     \"Use the pr-creator subagent to commit the approved changes and create a pull request. Use the ticket information `[ticket_number]` and change title `[change_title]` from the jira-analyst, targeting the `[base_branch]`.\"\n  3. **Commit & Push Process:** The pr-creator will:\n     - Create a proper conventional commit message\n     - Commit the changes with detailed description\n     - Push the branch with upstream tracking\n     - Proceed to PR creation\n  4. **Proceed to Phase 8.**\n\n- **If the user responds with 'no':**\n  1. **Handle Rejection:** The code-reviewer will unstage changes and request feedback\n  2. **Coordinate Revisions:** Based on user feedback, delegate back to the appropriate subagent:\n     - Planning issues → `codebase-analyst` subagent\n     - Minor code changes → `developer` subagent\n     - Quality issues → `qa-engineer` subagent\n  3. **Return to appropriate phase** to incorporate the feedback\n\n#### **Phase 8: Create Pull Request** → Continued by `pr-creator`\n\nThe pr-creator subagent continues from the successful push to create the pull request.\n\n**IMPORTANT:** The pr-creator is configured to never include AI-generated watermarks or co-authoring information.\n\n1.  **PR Creation Process:** The pr-creator will automatically:\n\n    - Generate a comprehensive PR description using Jira ticket information\n    - Follow the established PR template format\n    - Include proper links to the Jira ticket\n    - Create step-by-step testing instructions\n    - Execute the `gh pr create` command with proper parameters\n\n2.  **PR Body Format:** The pr-creator follows this structure:\n\n    - Clear summary of changes and business motivation\n    - Link to the Jira ticket\n    - Bullet-pointed list of specific changes made\n    - Step-by-step testing instructions for reviewers\n\n3.  **Final Confirmation:** The pr-creator will:\n\n    - Execute `gh pr create --title \"[ticket_number] [change_title]\" --body \"[formatted_body]\" --base \"[base_branch]\"`\n    - Provide the PR URL for review\n    - Confirm successful completion of the entire workflow\n\n4.  **Workflow Complete:** Once the pr-creator confirms successful PR creation, the entire Jira workflow is complete.\n"}]},"isMeta":true,"uuid":"5f9b1ec7-51a2-4f75-829d-4b2725642980","timestamp":"2025-08-13T15:35:39.855Z"}
{"parentUuid":"5f9b1ec7-51a2-4f75-829d-4b2725642980","isSidechain":false,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01HHFE2w8RyuBvGsCdNjxCsp","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Hello! I'm ready to get to work on your Jira ticket. Let me gather the initial information I need to set up the development environment."}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":6283,"cache_read_input_tokens":25151,"output_tokens":1,"service_tier":"standard"}},"requestId":"req_011CS5xMNperox2Qf2MgU1iT","type":"assistant","uuid":"07eefc2c-d721-44b8-a674-f76e1bca3f0e","timestamp":"2025-08-13T15:35:43.256Z"}
{"parentUuid":"07eefc2c-d721-44b8-a674-f76e1bca3f0e","isSidechain":false,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01HHFE2w8RyuBvGsCdNjxCsp","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_0157zpmyweJKNbuSavGKduQh","name":"TodoWrite","input":{"todos":[{"id":"1","content":"Gather ticket number from user","status":"in_progress"},{"id":"2","content":"Get base branch information from user","status":"pending"},{"id":"3","content":"Delegate to jira-analyst for ticket analysis","status":"pending"},{"id":"4","content":"Delegate to codebase-analyst for implementation planning","status":"pending"},{"id":"5","content":"Delegate to git-manager for environment setup","status":"pending"},{"id":"6","content":"Delegate to developer for implementation","status":"pending"},{"id":"7","content":"Delegate to qa-engineer for quality checks","status":"pending"},{"id":"8","content":"Delegate to code-reviewer for user approval","status":"pending"},{"id":"9","content":"Delegate to pr-creator for commit and PR creation","status":"pending"}]}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":6283,"cache_read_input_tokens":25151,"output_tokens":427,"service_tier":"standard"}},"requestId":"req_011CS5xMNperox2Qf2MgU1iT","type":"assistant","uuid":"cf52aef4-82ad-4fb3-8c13-edceda0a9fc3","timestamp":"2025-08-13T15:35:46.629Z"}
{"parentUuid":"cf52aef4-82ad-4fb3-8c13-edceda0a9fc3","isSidechain":false,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_0157zpmyweJKNbuSavGKduQh","type":"tool_result","content":"Todos have been modified successfully. Ensure that you continue to use the todo list to track your progress. Please proceed with the current tasks if applicable"}]},"uuid":"1b788605-068f-443f-98b6-fadae143a12a","timestamp":"2025-08-13T15:35:46.664Z","toolUseResult":{"oldTodos":[],"newTodos":[{"content":"Gather ticket number from user","status":"in_progress","id":"1"},{"content":"Get base branch information from user","status":"pending","id":"2"},{"content":"Delegate to jira-analyst for ticket analysis","status":"pending","id":"3"},{"content":"Delegate to codebase-analyst for implementation planning","status":"pending","id":"4"},{"content":"Delegate to git-manager for environment setup","status":"pending","id":"5"},{"content":"Delegate to developer for implementation","status":"pending","id":"6"},{"content":"Delegate to qa-engineer for quality checks","status":"pending","id":"7"},{"content":"Delegate to code-reviewer for user approval","status":"pending","id":"8"},{"content":"Delegate to pr-creator for commit and PR creation","status":"pending","id":"9"}]}}
{"parentUuid":"1b788605-068f-443f-98b6-fadae143a12a","isSidechain":false,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_016wLFxDp8YY9ZC1MVXEYF56","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"First, what is the ticket or issue number for this work? (e.g., `DEV-4321`)"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":6,"cache_creation_input_tokens":602,"cache_read_input_tokens":31434,"output_tokens":28,"service_tier":"standard"}},"requestId":"req_011CS5xMsybTDbf6wZ7KAceT","type":"assistant","uuid":"865c4bfb-bfcf-40ac-9b07-5dd1ff95073a","timestamp":"2025-08-13T15:35:49.376Z"}
{"parentUuid":"865c4bfb-bfcf-40ac-9b07-5dd1ff95073a","isSidechain":false,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":"DEV-5856 is the key and you should also name the branch DEV-5856. Please base your work off of release/v1.51.0"},"uuid":"6b3f4244-906c-4b8b-8975-26d0cca66948","timestamp":"2025-08-13T15:36:44.752Z"}
{"parentUuid":"6b3f4244-906c-4b8b-8975-26d0cca66948","isSidechain":false,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_017vi7M3GPWjErgRgbJdsPQz","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_014nQcCrkABEg1C4LJVtx5rA","name":"TodoWrite","input":{"todos":[{"id":"1","content":"Gather ticket number from user","status":"completed"},{"id":"2","content":"Get base branch information from user","status":"completed"},{"id":"3","content":"Delegate to jira-analyst for ticket analysis","status":"in_progress"},{"id":"4","content":"Delegate to codebase-analyst for implementation planning","status":"pending"},{"id":"5","content":"Delegate to git-manager for environment setup","status":"pending"},{"id":"6","content":"Delegate to developer for implementation","status":"pending"},{"id":"7","content":"Delegate to qa-engineer for quality checks","status":"pending"},{"id":"8","content":"Delegate to code-reviewer for user approval","status":"pending"},{"id":"9","content":"Delegate to pr-creator for commit and PR creation","status":"pending"}]}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":70,"cache_read_input_tokens":32036,"output_tokens":293,"service_tier":"standard"}},"requestId":"req_011CS5xSAuS4UzrsG4uyLsBv","type":"assistant","uuid":"0cb8e15d-e194-4694-9978-b6488e3e47be","timestamp":"2025-08-13T15:36:49.136Z"}
{"parentUuid":"0cb8e15d-e194-4694-9978-b6488e3e47be","isSidechain":false,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_014nQcCrkABEg1C4LJVtx5rA","type":"tool_result","content":"Todos have been modified successfully. Ensure that you continue to use the todo list to track your progress. Please proceed with the current tasks if applicable"}]},"uuid":"7708e359-16d3-43ac-8baa-38517b105fcd","timestamp":"2025-08-13T15:36:49.177Z","toolUseResult":{"oldTodos":[{"content":"Gather ticket number from user","status":"in_progress","id":"1"},{"content":"Get base branch information from user","status":"pending","id":"2"},{"content":"Delegate to jira-analyst for ticket analysis","status":"pending","id":"3"},{"content":"Delegate to codebase-analyst for implementation planning","status":"pending","id":"4"},{"content":"Delegate to git-manager for environment setup","status":"pending","id":"5"},{"content":"Delegate to developer for implementation","status":"pending","id":"6"},{"content":"Delegate to qa-engineer for quality checks","status":"pending","id":"7"},{"content":"Delegate to code-reviewer for user approval","status":"pending","id":"8"},{"content":"Delegate to pr-creator for commit and PR creation","status":"pending","id":"9"}],"newTodos":[{"content":"Gather ticket number from user","status":"completed","id":"1"},{"content":"Get base branch information from user","status":"completed","id":"2"},{"content":"Delegate to jira-analyst for ticket analysis","status":"in_progress","id":"3"},{"content":"Delegate to codebase-analyst for implementation planning","status":"pending","id":"4"},{"content":"Delegate to git-manager for environment setup","status":"pending","id":"5"},{"content":"Delegate to developer for implementation","status":"pending","id":"6"},{"content":"Delegate to qa-engineer for quality checks","status":"pending","id":"7"},{"content":"Delegate to code-reviewer for user approval","status":"pending","id":"8"},{"content":"Delegate to pr-creator for commit and PR creation","status":"pending","id":"9"}]}}
{"parentUuid":"7708e359-16d3-43ac-8baa-38517b105fcd","isSidechain":false,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01VQsPBiy8nWP9sRQdpQFhBx","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Perfect! I have:\n- **Ticket number:** DEV-5856\n- **Branch name:** DEV-5856 (matching the ticket key)\n- **Base branch:** release/v1.51.0\n\nI will now delegate to the jira-analyst subagent to look up the details for ticket DEV-5856 and understand the scope of the work."}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":5,"cache_creation_input_tokens":571,"cache_read_input_tokens":32106,"output_tokens":1,"service_tier":"standard"}},"requestId":"req_011CS5xSUoTSu6K5sc4fiiWN","type":"assistant","uuid":"8bb04146-e870-466a-bf1c-a5896bd39114","timestamp":"2025-08-13T15:36:52.445Z"}
{"parentUuid":"8bb04146-e870-466a-bf1c-a5896bd39114","isSidechain":false,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01VQsPBiy8nWP9sRQdpQFhBx","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_019hLgyDCj467s3HfhL9ET6E","name":"Task","input":{"subagent_type":"jira-analyst","description":"Analyze Jira ticket DEV-5856","prompt":"Please analyze Jira ticket DEV-5856 thoroughly and generate a descriptive change title for this work.\n\nYour tasks:\n1. Fetch the complete details for ticket DEV-5856 using the Jira tools\n2. Analyze the ticket requirements, scope, and acceptance criteria\n3. Generate a clear, descriptive change title that accurately describes what needs to be implemented\n4. Provide a comprehensive summary including:\n   - Complete ticket analysis\n   - Generated change title\n   - Key requirements and scope summary\n   - Technical requirements and constraints\n   - Business goals and acceptance criteria\n\nPlease be thorough in your analysis as this information will be used by other subagents for implementation planning and development."}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":5,"cache_creation_input_tokens":571,"cache_read_input_tokens":32106,"output_tokens":338,"service_tier":"standard"}},"requestId":"req_011CS5xSUoTSu6K5sc4fiiWN","type":"assistant","uuid":"04e55d5f-b48f-4d5d-a763-84ea13aef842","timestamp":"2025-08-13T15:36:56.356Z"}
{"parentUuid":null,"isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":"Please analyze Jira ticket DEV-5856 thoroughly and generate a descriptive change title for this work.\n\nYour tasks:\n1. Fetch the complete details for ticket DEV-5856 using the Jira tools\n2. Analyze the ticket requirements, scope, and acceptance criteria\n3. Generate a clear, descriptive change title that accurately describes what needs to be implemented\n4. Provide a comprehensive summary including:\n   - Complete ticket analysis\n   - Generated change title\n   - Key requirements and scope summary\n   - Technical requirements and constraints\n   - Business goals and acceptance criteria\n\nPlease be thorough in your analysis as this information will be used by other subagents for implementation planning and development."},"uuid":"9748e830-0551-44ed-adae-a408312a74be","timestamp":"2025-08-13T15:36:56.377Z"}
{"parentUuid":"9748e830-0551-44ed-adae-a408312a74be","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01Lxm7TGsHk1qgMuR5MN1jcG","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"I'll analyze Jira ticket DEV-5856 for you. Let me fetch the complete ticket details first."}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":2069,"cache_read_input_tokens":23438,"output_tokens":176,"service_tier":"standard"}},"requestId":"req_011CS5xT1ebjgCz2suqnQbfL","type":"assistant","uuid":"aa9e225c-b9cc-45d1-9d15-44207e55cc0e","timestamp":"2025-08-13T15:36:59.078Z"}
{"parentUuid":"aa9e225c-b9cc-45d1-9d15-44207e55cc0e","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01Lxm7TGsHk1qgMuR5MN1jcG","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01KpD2G48wh1pkE5P6CT3M3N","name":"mcp__atlassian__jira_get_issue","input":{"issue_key":"DEV-5856","fields":"assignee,status,labels,issuetype,description,summary,created,priority,updated,reporter,customfield_*","comment_limit":20,"expand":"renderedFields"}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":2069,"cache_read_input_tokens":23438,"output_tokens":176,"service_tier":"standard"}},"requestId":"req_011CS5xT1ebjgCz2suqnQbfL","type":"assistant","uuid":"cb5c7aff-388d-4c2a-a291-5047f33d5226","timestamp":"2025-08-13T15:37:00.006Z"}
{"parentUuid":"cb5c7aff-388d-4c2a-a291-5047f33d5226","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01KpD2G48wh1pkE5P6CT3M3N","type":"tool_result","content":[{"type":"text","text":"{\n  \"id\": \"27777\",\n  \"key\": \"DEV-5856\",\n  \"summary\": \"AI Review Export Fails – \\\"Error generating PDF\\\" message displayed on History Panel and AI Review Screen\",\n  \"description\": \"*URL:-* [https://staging.awardedai.dev/review-proposal|https://staging.awardedai.dev/review-proposal]\\n\\n*Tested Server:-* Staging Environment.\\n*Tested Version:-* App Version: 1.50.0\\n\\n+*Bug Description:*+\\n\\nWhen attempting to export AI Review results from either the History Panel or the AI Review screen, the export function fails and displays the message _\\\"Error generating PDF\\\"_. Please refer to the attached video for your reference.\\n\\n*Expected Result:*\\nClicking the *Export* button should generate and download the PDF file of the AI Review report without any errors.\\n\\n*Actual Result:*\\nAn error message _\\\"Error generating PDF\\\"_ is displayed, and the PDF file is not downloaded.\\n\\n+*Steps To Reproduce:-*+\\n\\n# Login with Valid credential.\\n# Navigate to the *AI Review* screen.\\n# Complete or select an existing AI Review result.\\n# Click on the *Export* button.\\n# Observe the message displayed.\\n# Repeat the same process on the *History Panel* for an existing AI Review.\\n\\n+*Attached Video:-*+\\n\\n!AI Review Export.mp4|width=1280,height=680,alt=\\\"AI Review Export.mp4\\\"!\",\n  \"status\": {\n    \"name\": \"In Progress\",\n    \"category\": \"In Progress\",\n    \"color\": \"yellow\"\n  },\n  \"priority\": {\n    \"name\": \"High\"\n  },\n  \"assignee\": {\n    \"display_name\": \"Luke O'Malley\",\n    \"name\": \"Luke O'Malley\",\n    \"email\": \"luke@procurementsciences.com\",\n    \"avatar_url\": \"https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/712020:4110baba-7778-4e0d-8549-12f13af9b21f/bb56271a-dce9-43fa-ab52-062e5c85a859/48\"\n  },\n  \"reporter\": {\n    \"display_name\": \"Rajakumaran\",\n    \"name\": \"Rajakumaran\",\n    \"email\": null,\n    \"avatar_url\": \"https://secure.gravatar.com/avatar/3ae50ccc80ab1038ba22623d5980aa13?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FR-4.png\"\n  },\n  \"labels\": [\n    \"AI-Review\"\n  ],\n  \"created\": \"2025-08-13T06:26:08.503-0600\",\n  \"updated\": \"2025-08-13T09:35:22.007-0600\"\n}"}]}]},"uuid":"9f22a292-d9db-4e2f-8988-8f5a481b7580","timestamp":"2025-08-13T15:37:01.039Z","toolUseResult":[{"type":"text","text":"{\n  \"id\": \"27777\",\n  \"key\": \"DEV-5856\",\n  \"summary\": \"AI Review Export Fails – \\\"Error generating PDF\\\" message displayed on History Panel and AI Review Screen\",\n  \"description\": \"*URL:-* [https://staging.awardedai.dev/review-proposal|https://staging.awardedai.dev/review-proposal]\\n\\n*Tested Server:-* Staging Environment.\\n*Tested Version:-* App Version: 1.50.0\\n\\n+*Bug Description:*+\\n\\nWhen attempting to export AI Review results from either the History Panel or the AI Review screen, the export function fails and displays the message _\\\"Error generating PDF\\\"_. Please refer to the attached video for your reference.\\n\\n*Expected Result:*\\nClicking the *Export* button should generate and download the PDF file of the AI Review report without any errors.\\n\\n*Actual Result:*\\nAn error message _\\\"Error generating PDF\\\"_ is displayed, and the PDF file is not downloaded.\\n\\n+*Steps To Reproduce:-*+\\n\\n# Login with Valid credential.\\n# Navigate to the *AI Review* screen.\\n# Complete or select an existing AI Review result.\\n# Click on the *Export* button.\\n# Observe the message displayed.\\n# Repeat the same process on the *History Panel* for an existing AI Review.\\n\\n+*Attached Video:-*+\\n\\n!AI Review Export.mp4|width=1280,height=680,alt=\\\"AI Review Export.mp4\\\"!\",\n  \"status\": {\n    \"name\": \"In Progress\",\n    \"category\": \"In Progress\",\n    \"color\": \"yellow\"\n  },\n  \"priority\": {\n    \"name\": \"High\"\n  },\n  \"assignee\": {\n    \"display_name\": \"Luke O'Malley\",\n    \"name\": \"Luke O'Malley\",\n    \"email\": \"luke@procurementsciences.com\",\n    \"avatar_url\": \"https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/712020:4110baba-7778-4e0d-8549-12f13af9b21f/bb56271a-dce9-43fa-ab52-062e5c85a859/48\"\n  },\n  \"reporter\": {\n    \"display_name\": \"Rajakumaran\",\n    \"name\": \"Rajakumaran\",\n    \"email\": null,\n    \"avatar_url\": \"https://secure.gravatar.com/avatar/3ae50ccc80ab1038ba22623d5980aa13?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FR-4.png\"\n  },\n  \"labels\": [\n    \"AI-Review\"\n  ],\n  \"created\": \"2025-08-13T06:26:08.503-0600\",\n  \"updated\": \"2025-08-13T09:35:22.007-0600\"\n}"}]}
{"parentUuid":"9f22a292-d9db-4e2f-8988-8f5a481b7580","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_017Ay8VADfVppSJtuCZYAgmj","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Now let me get any comments on this ticket to gather additional context:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":6,"cache_creation_input_tokens":942,"cache_read_input_tokens":25507,"output_tokens":124,"service_tier":"standard"}},"requestId":"req_011CS5xTMF4ybCxSKb7MXEKV","type":"assistant","uuid":"87a13bb7-01ee-47c2-b440-7e5c567d64b7","timestamp":"2025-08-13T15:37:03.795Z"}
{"parentUuid":"87a13bb7-01ee-47c2-b440-7e5c567d64b7","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_017Ay8VADfVppSJtuCZYAgmj","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01LZDAcqcudR8G7QpsJSbDXZ","name":"mcp__atlassian__jira_get_issue","input":{"issue_key":"DEV-5856","expand":"renderedFields,transitions","comment_limit":20}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":6,"cache_creation_input_tokens":942,"cache_read_input_tokens":25507,"output_tokens":124,"service_tier":"standard"}},"requestId":"req_011CS5xTMF4ybCxSKb7MXEKV","type":"assistant","uuid":"9c7c3138-dae6-4dc7-b397-56ebc8745df3","timestamp":"2025-08-13T15:37:04.275Z"}
{"parentUuid":"9c7c3138-dae6-4dc7-b397-56ebc8745df3","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01LZDAcqcudR8G7QpsJSbDXZ","type":"tool_result","content":[{"type":"text","text":"{\n  \"id\": \"27777\",\n  \"key\": \"DEV-5856\",\n  \"summary\": \"AI Review Export Fails – \\\"Error generating PDF\\\" message displayed on History Panel and AI Review Screen\",\n  \"description\": \"*URL:-* [https://staging.awardedai.dev/review-proposal|https://staging.awardedai.dev/review-proposal]\\n\\n*Tested Server:-* Staging Environment.\\n*Tested Version:-* App Version: 1.50.0\\n\\n+*Bug Description:*+\\n\\nWhen attempting to export AI Review results from either the History Panel or the AI Review screen, the export function fails and displays the message _\\\"Error generating PDF\\\"_. Please refer to the attached video for your reference.\\n\\n*Expected Result:*\\nClicking the *Export* button should generate and download the PDF file of the AI Review report without any errors.\\n\\n*Actual Result:*\\nAn error message _\\\"Error generating PDF\\\"_ is displayed, and the PDF file is not downloaded.\\n\\n+*Steps To Reproduce:-*+\\n\\n# Login with Valid credential.\\n# Navigate to the *AI Review* screen.\\n# Complete or select an existing AI Review result.\\n# Click on the *Export* button.\\n# Observe the message displayed.\\n# Repeat the same process on the *History Panel* for an existing AI Review.\\n\\n+*Attached Video:-*+\\n\\n!AI Review Export.mp4|width=1280,height=680,alt=\\\"AI Review Export.mp4\\\"!\",\n  \"status\": {\n    \"name\": \"In Progress\",\n    \"category\": \"In Progress\",\n    \"color\": \"yellow\"\n  },\n  \"priority\": {\n    \"name\": \"High\"\n  },\n  \"assignee\": {\n    \"display_name\": \"Luke O'Malley\",\n    \"name\": \"Luke O'Malley\",\n    \"email\": \"luke@procurementsciences.com\",\n    \"avatar_url\": \"https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/712020:4110baba-7778-4e0d-8549-12f13af9b21f/bb56271a-dce9-43fa-ab52-062e5c85a859/48\"\n  },\n  \"reporter\": {\n    \"display_name\": \"Rajakumaran\",\n    \"name\": \"Rajakumaran\",\n    \"email\": null,\n    \"avatar_url\": \"https://secure.gravatar.com/avatar/3ae50ccc80ab1038ba22623d5980aa13?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FR-4.png\"\n  },\n  \"labels\": [\n    \"AI-Review\"\n  ],\n  \"created\": \"2025-08-13T06:26:08.503-0600\",\n  \"updated\": \"2025-08-13T09:35:22.007-0600\"\n}"}]}]},"uuid":"50d2ae0a-461a-4629-bd02-e6eb35e12fd1","timestamp":"2025-08-13T15:37:05.265Z","toolUseResult":[{"type":"text","text":"{\n  \"id\": \"27777\",\n  \"key\": \"DEV-5856\",\n  \"summary\": \"AI Review Export Fails – \\\"Error generating PDF\\\" message displayed on History Panel and AI Review Screen\",\n  \"description\": \"*URL:-* [https://staging.awardedai.dev/review-proposal|https://staging.awardedai.dev/review-proposal]\\n\\n*Tested Server:-* Staging Environment.\\n*Tested Version:-* App Version: 1.50.0\\n\\n+*Bug Description:*+\\n\\nWhen attempting to export AI Review results from either the History Panel or the AI Review screen, the export function fails and displays the message _\\\"Error generating PDF\\\"_. Please refer to the attached video for your reference.\\n\\n*Expected Result:*\\nClicking the *Export* button should generate and download the PDF file of the AI Review report without any errors.\\n\\n*Actual Result:*\\nAn error message _\\\"Error generating PDF\\\"_ is displayed, and the PDF file is not downloaded.\\n\\n+*Steps To Reproduce:-*+\\n\\n# Login with Valid credential.\\n# Navigate to the *AI Review* screen.\\n# Complete or select an existing AI Review result.\\n# Click on the *Export* button.\\n# Observe the message displayed.\\n# Repeat the same process on the *History Panel* for an existing AI Review.\\n\\n+*Attached Video:-*+\\n\\n!AI Review Export.mp4|width=1280,height=680,alt=\\\"AI Review Export.mp4\\\"!\",\n  \"status\": {\n    \"name\": \"In Progress\",\n    \"category\": \"In Progress\",\n    \"color\": \"yellow\"\n  },\n  \"priority\": {\n    \"name\": \"High\"\n  },\n  \"assignee\": {\n    \"display_name\": \"Luke O'Malley\",\n    \"name\": \"Luke O'Malley\",\n    \"email\": \"luke@procurementsciences.com\",\n    \"avatar_url\": \"https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/712020:4110baba-7778-4e0d-8549-12f13af9b21f/bb56271a-dce9-43fa-ab52-062e5c85a859/48\"\n  },\n  \"reporter\": {\n    \"display_name\": \"Rajakumaran\",\n    \"name\": \"Rajakumaran\",\n    \"email\": null,\n    \"avatar_url\": \"https://secure.gravatar.com/avatar/3ae50ccc80ab1038ba22623d5980aa13?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FR-4.png\"\n  },\n  \"labels\": [\n    \"AI-Review\"\n  ],\n  \"created\": \"2025-08-13T06:26:08.503-0600\",\n  \"updated\": \"2025-08-13T09:35:22.007-0600\"\n}"}]}
{"parentUuid":"50d2ae0a-461a-4629-bd02-e6eb35e12fd1","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01JXibRwCspQEgwKkh4uQQdN","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"# Comprehensive Analysis of Jira Ticket DEV-5856\n\n## Generated Change Title\n**Fix AI Review PDF Export Functionality - Resolve \"Error generating PDF\" on History Panel and AI Review Screen**\n\n## Complete Ticket Analysis\n\n**Ticket Details:**\n- **Key**: DEV-5856\n- **Type**: Bug (High Priority)\n- **Status**: In Progress\n- **Assignee**: Luke O'Malley\n- **Reporter**: Rajakumaran\n- **Created**: August 13, 2025\n- **Labels**: AI-Review\n\n## Business Goal\nRestore the AI Review PDF export functionality that is currently failing for users, ensuring they can successfully generate and download PDF reports from both the AI Review screen and History Panel without encountering error messages.\n\n## Technical Requirements\n\n### Core Issue\n- PDF generation is failing across two different UI locations:\n  1. AI Review screen export button\n  2. History Panel export functionality\n- Users receive \"Error generating PDF\" message instead of successful download\n- Issue affects App Version 1.50.0 in staging environment\n\n### Affected Components\n- AI Review screen export functionality\n- History Panel export feature\n- PDF generation service/library\n- Error handling and user messaging system\n\n## Feature Domain\n**Primary**: Document Generation & Export\n**Secondary**: AI Review Module, User Interface (Error Messaging)\n\n## Technologies Mentioned\n- PDF generation system (specific library not identified in ticket)\n- Export functionality (likely involves file download mechanisms)\n- Staging environment deployment at https://staging.awardedai.dev/review-proposal\n\n## Implementation Hints\n1. **Multiple Entry Points**: Issue affects both AI Review screen and History Panel, suggesting a shared PDF generation service\n2. **Error Messaging**: Current error handling shows \"Error generating PDF\" - need to investigate root cause\n3. **File Download Process**: Export button should trigger PDF generation and automatic download\n4. **Video Evidence**: Attached video file shows the exact user experience and failure points\n\n## Acceptance Criteria\n1. **Primary Success**: Clicking the Export button on AI Review screen successfully generates and downloads PDF\n2. **Secondary Success**: Export functionality from History Panel works correctly for existing AI Reviews\n3. **No Error Messages**: \"Error generating PDF\" message should not appear during successful exports\n4. **File Delivery**: PDF file should be properly generated and downloaded to user's device\n5. **Cross-Location Consistency**: Both export locations should work identically\n\n## Dependencies\n- PDF generation library/service functionality\n- File system access for temporary PDF creation\n- Download mechanism in browser\n- AI Review data structure and formatting\n\n## Edge Cases & Special Considerations\n1. **Data Completeness**: Ensure AI Review data is complete before attempting PDF generation\n2. **File Permissions**: Verify server has proper permissions for PDF creation and serving\n3. **Browser Compatibility**: Test across different browsers for download functionality\n4. **Large Reports**: Consider file size limitations for complex AI Review reports\n5. **Network Issues**: Handle timeout scenarios during PDF generation\n6. **User Experience**: Provide loading indicators during PDF generation process\n\n## Investigation Areas\n1. **Server Logs**: Check backend logs for PDF generation errors\n2. **File System**: Verify temp directory access and disk space\n3. **PDF Library**: Validate PDF generation library is working correctly\n4. **API Endpoints**: Test the export API endpoints directly\n5. **Data Pipeline**: Ensure AI Review data is properly formatted for PDF generation\n\n## Scope Summary\nThis is a **critical bug fix** affecting a core user feature. The work involves:\n- Diagnosing the root cause of PDF generation failure\n- Fixing the underlying issue in the PDF generation system\n- Ensuring both UI entry points (AI Review screen and History Panel) work correctly\n- Testing the fix across the staging environment\n- Validating proper error handling for edge cases\n\nThe fix should restore full PDF export functionality while maintaining consistency across both access points in the application."}],"stop_reason":"end_turn","stop_sequence":null,"usage":{"input_tokens":5,"cache_creation_input_tokens":893,"cache_read_input_tokens":26449,"output_tokens":869,"service_tier":"standard"}},"requestId":"req_011CS5xTfJ1rhMx6rSHEcXsC","type":"assistant","uuid":"bfe21297-9c01-4dac-9854-25010ed88263","timestamp":"2025-08-13T15:37:26.915Z"}
{"parentUuid":"04e55d5f-b48f-4d5d-a763-84ea13aef842","isSidechain":false,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_019hLgyDCj467s3HfhL9ET6E","type":"tool_result","content":[{"type":"text","text":"# Comprehensive Analysis of Jira Ticket DEV-5856\n\n## Generated Change Title\n**Fix AI Review PDF Export Functionality - Resolve \"Error generating PDF\" on History Panel and AI Review Screen**\n\n## Complete Ticket Analysis\n\n**Ticket Details:**\n- **Key**: DEV-5856\n- **Type**: Bug (High Priority)\n- **Status**: In Progress\n- **Assignee**: Luke O'Malley\n- **Reporter**: Rajakumaran\n- **Created**: August 13, 2025\n- **Labels**: AI-Review\n\n## Business Goal\nRestore the AI Review PDF export functionality that is currently failing for users, ensuring they can successfully generate and download PDF reports from both the AI Review screen and History Panel without encountering error messages.\n\n## Technical Requirements\n\n### Core Issue\n- PDF generation is failing across two different UI locations:\n  1. AI Review screen export button\n  2. History Panel export functionality\n- Users receive \"Error generating PDF\" message instead of successful download\n- Issue affects App Version 1.50.0 in staging environment\n\n### Affected Components\n- AI Review screen export functionality\n- History Panel export feature\n- PDF generation service/library\n- Error handling and user messaging system\n\n## Feature Domain\n**Primary**: Document Generation & Export\n**Secondary**: AI Review Module, User Interface (Error Messaging)\n\n## Technologies Mentioned\n- PDF generation system (specific library not identified in ticket)\n- Export functionality (likely involves file download mechanisms)\n- Staging environment deployment at https://staging.awardedai.dev/review-proposal\n\n## Implementation Hints\n1. **Multiple Entry Points**: Issue affects both AI Review screen and History Panel, suggesting a shared PDF generation service\n2. **Error Messaging**: Current error handling shows \"Error generating PDF\" - need to investigate root cause\n3. **File Download Process**: Export button should trigger PDF generation and automatic download\n4. **Video Evidence**: Attached video file shows the exact user experience and failure points\n\n## Acceptance Criteria\n1. **Primary Success**: Clicking the Export button on AI Review screen successfully generates and downloads PDF\n2. **Secondary Success**: Export functionality from History Panel works correctly for existing AI Reviews\n3. **No Error Messages**: \"Error generating PDF\" message should not appear during successful exports\n4. **File Delivery**: PDF file should be properly generated and downloaded to user's device\n5. **Cross-Location Consistency**: Both export locations should work identically\n\n## Dependencies\n- PDF generation library/service functionality\n- File system access for temporary PDF creation\n- Download mechanism in browser\n- AI Review data structure and formatting\n\n## Edge Cases & Special Considerations\n1. **Data Completeness**: Ensure AI Review data is complete before attempting PDF generation\n2. **File Permissions**: Verify server has proper permissions for PDF creation and serving\n3. **Browser Compatibility**: Test across different browsers for download functionality\n4. **Large Reports**: Consider file size limitations for complex AI Review reports\n5. **Network Issues**: Handle timeout scenarios during PDF generation\n6. **User Experience**: Provide loading indicators during PDF generation process\n\n## Investigation Areas\n1. **Server Logs**: Check backend logs for PDF generation errors\n2. **File System**: Verify temp directory access and disk space\n3. **PDF Library**: Validate PDF generation library is working correctly\n4. **API Endpoints**: Test the export API endpoints directly\n5. **Data Pipeline**: Ensure AI Review data is properly formatted for PDF generation\n\n## Scope Summary\nThis is a **critical bug fix** affecting a core user feature. The work involves:\n- Diagnosing the root cause of PDF generation failure\n- Fixing the underlying issue in the PDF generation system\n- Ensuring both UI entry points (AI Review screen and History Panel) work correctly\n- Testing the fix across the staging environment\n- Validating proper error handling for edge cases\n\nThe fix should restore full PDF export functionality while maintaining consistency across both access points in the application."}]}]},"uuid":"ce4e0c87-38b1-4c91-9fcb-679f286e91e9","timestamp":"2025-08-13T15:37:27.021Z","toolUseResult":{"content":[{"type":"text","text":"# Comprehensive Analysis of Jira Ticket DEV-5856\n\n## Generated Change Title\n**Fix AI Review PDF Export Functionality - Resolve \"Error generating PDF\" on History Panel and AI Review Screen**\n\n## Complete Ticket Analysis\n\n**Ticket Details:**\n- **Key**: DEV-5856\n- **Type**: Bug (High Priority)\n- **Status**: In Progress\n- **Assignee**: Luke O'Malley\n- **Reporter**: Rajakumaran\n- **Created**: August 13, 2025\n- **Labels**: AI-Review\n\n## Business Goal\nRestore the AI Review PDF export functionality that is currently failing for users, ensuring they can successfully generate and download PDF reports from both the AI Review screen and History Panel without encountering error messages.\n\n## Technical Requirements\n\n### Core Issue\n- PDF generation is failing across two different UI locations:\n  1. AI Review screen export button\n  2. History Panel export functionality\n- Users receive \"Error generating PDF\" message instead of successful download\n- Issue affects App Version 1.50.0 in staging environment\n\n### Affected Components\n- AI Review screen export functionality\n- History Panel export feature\n- PDF generation service/library\n- Error handling and user messaging system\n\n## Feature Domain\n**Primary**: Document Generation & Export\n**Secondary**: AI Review Module, User Interface (Error Messaging)\n\n## Technologies Mentioned\n- PDF generation system (specific library not identified in ticket)\n- Export functionality (likely involves file download mechanisms)\n- Staging environment deployment at https://staging.awardedai.dev/review-proposal\n\n## Implementation Hints\n1. **Multiple Entry Points**: Issue affects both AI Review screen and History Panel, suggesting a shared PDF generation service\n2. **Error Messaging**: Current error handling shows \"Error generating PDF\" - need to investigate root cause\n3. **File Download Process**: Export button should trigger PDF generation and automatic download\n4. **Video Evidence**: Attached video file shows the exact user experience and failure points\n\n## Acceptance Criteria\n1. **Primary Success**: Clicking the Export button on AI Review screen successfully generates and downloads PDF\n2. **Secondary Success**: Export functionality from History Panel works correctly for existing AI Reviews\n3. **No Error Messages**: \"Error generating PDF\" message should not appear during successful exports\n4. **File Delivery**: PDF file should be properly generated and downloaded to user's device\n5. **Cross-Location Consistency**: Both export locations should work identically\n\n## Dependencies\n- PDF generation library/service functionality\n- File system access for temporary PDF creation\n- Download mechanism in browser\n- AI Review data structure and formatting\n\n## Edge Cases & Special Considerations\n1. **Data Completeness**: Ensure AI Review data is complete before attempting PDF generation\n2. **File Permissions**: Verify server has proper permissions for PDF creation and serving\n3. **Browser Compatibility**: Test across different browsers for download functionality\n4. **Large Reports**: Consider file size limitations for complex AI Review reports\n5. **Network Issues**: Handle timeout scenarios during PDF generation\n6. **User Experience**: Provide loading indicators during PDF generation process\n\n## Investigation Areas\n1. **Server Logs**: Check backend logs for PDF generation errors\n2. **File System**: Verify temp directory access and disk space\n3. **PDF Library**: Validate PDF generation library is working correctly\n4. **API Endpoints**: Test the export API endpoints directly\n5. **Data Pipeline**: Ensure AI Review data is properly formatted for PDF generation\n\n## Scope Summary\nThis is a **critical bug fix** affecting a core user feature. The work involves:\n- Diagnosing the root cause of PDF generation failure\n- Fixing the underlying issue in the PDF generation system\n- Ensuring both UI entry points (AI Review screen and History Panel) work correctly\n- Testing the fix across the staging environment\n- Validating proper error handling for edge cases\n\nThe fix should restore full PDF export functionality while maintaining consistency across both access points in the application."}],"totalDurationMs":30644,"totalTokens":28216,"totalToolUseCount":2,"usage":{"input_tokens":5,"cache_creation_input_tokens":893,"cache_read_input_tokens":26449,"output_tokens":869,"service_tier":"standard"}}}
{"parentUuid":"ce4e0c87-38b1-4c91-9fcb-679f286e91e9","isSidechain":false,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01YYeaTqSST7dqDEA76ZZkBg","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01J2uZJ8htzpi5Y18NBdZsdP","name":"TodoWrite","input":{"todos":[{"id":"1","content":"Gather ticket number from user","status":"completed"},{"id":"2","content":"Get base branch information from user","status":"completed"},{"id":"3","content":"Delegate to jira-analyst for ticket analysis","status":"completed"},{"id":"4","content":"Delegate to codebase-analyst for implementation planning","status":"in_progress"},{"id":"5","content":"Delegate to git-manager for environment setup","status":"pending"},{"id":"6","content":"Delegate to developer for implementation","status":"pending"},{"id":"7","content":"Delegate to qa-engineer for quality checks","status":"pending"},{"id":"8","content":"Delegate to code-reviewer for user approval","status":"pending"},{"id":"9","content":"Delegate to pr-creator for commit and PR creation","status":"pending"}]}}],"stop_reason":"tool_use","stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":1215,"cache_read_input_tokens":32677,"output_tokens":293,"service_tier":"standard"}},"requestId":"req_011CS5xVGMgyMS7JWoh9ePoA","type":"assistant","uuid":"38666d0a-903c-4887-bd59-09e20c899324","timestamp":"2025-08-13T15:37:30.957Z"}
{"parentUuid":"38666d0a-903c-4887-bd59-09e20c899324","isSidechain":false,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01J2uZJ8htzpi5Y18NBdZsdP","type":"tool_result","content":"Todos have been modified successfully. Ensure that you continue to use the todo list to track your progress. Please proceed with the current tasks if applicable"}]},"uuid":"baea1607-e02b-454a-9c85-723dccd8e2ef","timestamp":"2025-08-13T15:37:30.990Z","toolUseResult":{"oldTodos":[{"content":"Gather ticket number from user","status":"completed","id":"1"},{"content":"Get base branch information from user","status":"completed","id":"2"},{"content":"Delegate to jira-analyst for ticket analysis","status":"in_progress","id":"3"},{"content":"Delegate to codebase-analyst for implementation planning","status":"pending","id":"4"},{"content":"Delegate to git-manager for environment setup","status":"pending","id":"5"},{"content":"Delegate to developer for implementation","status":"pending","id":"6"},{"content":"Delegate to qa-engineer for quality checks","status":"pending","id":"7"},{"content":"Delegate to code-reviewer for user approval","status":"pending","id":"8"},{"content":"Delegate to pr-creator for commit and PR creation","status":"pending","id":"9"}],"newTodos":[{"content":"Gather ticket number from user","status":"completed","id":"1"},{"content":"Get base branch information from user","status":"completed","id":"2"},{"content":"Delegate to jira-analyst for ticket analysis","status":"completed","id":"3"},{"content":"Delegate to codebase-analyst for implementation planning","status":"in_progress","id":"4"},{"content":"Delegate to git-manager for environment setup","status":"pending","id":"5"},{"content":"Delegate to developer for implementation","status":"pending","id":"6"},{"content":"Delegate to qa-engineer for quality checks","status":"pending","id":"7"},{"content":"Delegate to code-reviewer for user approval","status":"pending","id":"8"},{"content":"Delegate to pr-creator for commit and PR creation","status":"pending","id":"9"}]}}
{"parentUuid":"baea1607-e02b-454a-9c85-723dccd8e2ef","isSidechain":false,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01DdGBVdCq2wbZ7UwotmZKwv","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Based on the jira-analyst's analysis, I will be working on: **\"Fix AI Review PDF Export Functionality - Resolve \"Error generating PDF\" on History Panel and AI Review Screen\"**\n\nThis is a high-priority bug affecting PDF export functionality in two locations - the AI Review screen and History Panel. Users are getting \"Error generating PDF\" messages instead of successful downloads.\n\nDoes that accurately describe the task? Please respond with 'yes' or 'no'."}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":573,"cache_read_input_tokens":33892,"output_tokens":103,"service_tier":"standard"}},"requestId":"req_011CS5xVa1aVzovuZsPywn8C","type":"assistant","uuid":"a6c807aa-aabf-4335-9060-0a2a9c456bed","timestamp":"2025-08-13T15:37:35.060Z"}
{"parentUuid":"a6c807aa-aabf-4335-9060-0a2a9c456bed","isSidechain":false,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":"yes"},"uuid":"d9f351db-4ffe-4f1f-b213-ce61d1678b7e","timestamp":"2025-08-13T15:38:27.542Z"}
{"parentUuid":"d9f351db-4ffe-4f1f-b213-ce61d1678b7e","isSidechain":false,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_017QHJZhP2McwJiQsmxPVtz3","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01F4yrFEdRXPUmLjPxBxoi96","name":"TodoWrite","input":{"todos":[{"id":"1","content":"Gather ticket number from user","status":"completed"},{"id":"2","content":"Get base branch information from user","status":"completed"},{"id":"3","content":"Delegate to jira-analyst for ticket analysis","status":"completed"},{"id":"4","content":"Delegate to codebase-analyst for implementation planning","status":"in_progress"},{"id":"5","content":"Delegate to git-manager for environment setup","status":"pending"},{"id":"6","content":"Delegate to developer for implementation","status":"pending"},{"id":"7","content":"Delegate to qa-engineer for quality checks","status":"pending"},{"id":"8","content":"Delegate to code-reviewer for user approval","status":"pending"},{"id":"9","content":"Delegate to pr-creator for commit and PR creation","status":"pending"}]}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":0,"cache_creation_input_tokens":110,"cache_read_input_tokens":34465,"output_tokens":293,"service_tier":"standard"}},"requestId":"req_011CS5xZkavbCh4bNwY1SH2p","type":"assistant","uuid":"87fa93cf-690b-45c2-8119-88f057e1475e","timestamp":"2025-08-13T15:38:31.948Z"}
{"parentUuid":"87fa93cf-690b-45c2-8119-88f057e1475e","isSidechain":false,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01F4yrFEdRXPUmLjPxBxoi96","type":"tool_result","content":"Todos have been modified successfully. Ensure that you continue to use the todo list to track your progress. Please proceed with the current tasks if applicable"}]},"uuid":"daabdc0c-e5fb-4e15-a0de-62c704b22475","timestamp":"2025-08-13T15:38:31.985Z","toolUseResult":{"oldTodos":[{"content":"Gather ticket number from user","status":"completed","id":"1"},{"content":"Get base branch information from user","status":"completed","id":"2"},{"content":"Delegate to jira-analyst for ticket analysis","status":"completed","id":"3"},{"content":"Delegate to codebase-analyst for implementation planning","status":"in_progress","id":"4"},{"content":"Delegate to git-manager for environment setup","status":"pending","id":"5"},{"content":"Delegate to developer for implementation","status":"pending","id":"6"},{"content":"Delegate to qa-engineer for quality checks","status":"pending","id":"7"},{"content":"Delegate to code-reviewer for user approval","status":"pending","id":"8"},{"content":"Delegate to pr-creator for commit and PR creation","status":"pending","id":"9"}],"newTodos":[{"content":"Gather ticket number from user","status":"completed","id":"1"},{"content":"Get base branch information from user","status":"completed","id":"2"},{"content":"Delegate to jira-analyst for ticket analysis","status":"completed","id":"3"},{"content":"Delegate to codebase-analyst for implementation planning","status":"in_progress","id":"4"},{"content":"Delegate to git-manager for environment setup","status":"pending","id":"5"},{"content":"Delegate to developer for implementation","status":"pending","id":"6"},{"content":"Delegate to qa-engineer for quality checks","status":"pending","id":"7"},{"content":"Delegate to code-reviewer for user approval","status":"pending","id":"8"},{"content":"Delegate to pr-creator for commit and PR creation","status":"pending","id":"9"}]}}
{"parentUuid":"daabdc0c-e5fb-4e15-a0de-62c704b22475","isSidechain":false,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01UsaPHpPQshF6WFPQv2WRVR","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Great! Now I will delegate to the codebase-analyst subagent to discover relevant code areas and create an implementation plan using the ticket analysis."}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":2,"cache_creation_input_tokens":571,"cache_read_input_tokens":34575,"output_tokens":1,"service_tier":"standard"}},"requestId":"req_011CS5xa4h6qrCxw6hDJYJvB","type":"assistant","uuid":"e91e3d83-b7ad-4d16-8a3f-4f58a3d75b60","timestamp":"2025-08-13T15:38:34.944Z"}
{"parentUuid":"e91e3d83-b7ad-4d16-8a3f-4f58a3d75b60","isSidechain":false,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01UsaPHpPQshF6WFPQv2WRVR","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01J12xvVEQJSH9uyg3MQqJ5V","name":"Task","input":{"subagent_type":"codebase-analyst","description":"Create implementation plan for DEV-5856","prompt":"Please create a comprehensive implementation plan for fixing the AI Review PDF export functionality (DEV-5856).\n\n**Context from Jira Analysis:**\n- **Change Title:** Fix AI Review PDF Export Functionality - Resolve \"Error generating PDF\" on History Panel and AI Review Screen\n- **Core Issue:** PDF generation failing in two locations - AI Review screen export button and History Panel export functionality\n- **Current Behavior:** Users receive \"Error generating PDF\" instead of successful downloads\n- **Affected Version:** App Version 1.50.0 in staging environment\n\n**Key Requirements:**\n- Fix PDF export from AI Review screen\n- Fix PDF export from History Panel \n- Ensure both locations work identically\n- Resolve \"Error generating PDF\" error messages\n- Enable successful PDF generation and download\n\n**Technical Areas to Investigate:**\n- Shared PDF generation service/library\n- Export button functionality in both UI locations\n- Error handling and user messaging\n- File download mechanisms\n- AI Review data formatting for PDF\n\n**Your Tasks:**\n1. Search the codebase for AI Review related components and PDF export functionality\n2. Identify the files and directories that handle PDF generation\n3. Find both UI locations (AI Review screen and History Panel) that contain export buttons\n4. Discover the shared PDF generation service or library being used\n5. Collaborate with the user to understand the codebase structure\n6. Create a detailed implementation plan with specific files to modify\n7. Identify potential root causes of the PDF generation failure\n8. Get user approval on the implementation approach\n\nPlease work iteratively with the user to discover the relevant code areas and create a solid plan before we proceed to implementation."}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":2,"cache_creation_input_tokens":571,"cache_read_input_tokens":34575,"output_tokens":490,"service_tier":"standard"}},"requestId":"req_011CS5xa4h6qrCxw6hDJYJvB","type":"assistant","uuid":"6523820b-166f-4422-a509-dfabc62ae286","timestamp":"2025-08-13T15:38:43.150Z"}
{"parentUuid":null,"isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":"Please create a comprehensive implementation plan for fixing the AI Review PDF export functionality (DEV-5856).\n\n**Context from Jira Analysis:**\n- **Change Title:** Fix AI Review PDF Export Functionality - Resolve \"Error generating PDF\" on History Panel and AI Review Screen\n- **Core Issue:** PDF generation failing in two locations - AI Review screen export button and History Panel export functionality\n- **Current Behavior:** Users receive \"Error generating PDF\" instead of successful downloads\n- **Affected Version:** App Version 1.50.0 in staging environment\n\n**Key Requirements:**\n- Fix PDF export from AI Review screen\n- Fix PDF export from History Panel \n- Ensure both locations work identically\n- Resolve \"Error generating PDF\" error messages\n- Enable successful PDF generation and download\n\n**Technical Areas to Investigate:**\n- Shared PDF generation service/library\n- Export button functionality in both UI locations\n- Error handling and user messaging\n- File download mechanisms\n- AI Review data formatting for PDF\n\n**Your Tasks:**\n1. Search the codebase for AI Review related components and PDF export functionality\n2. Identify the files and directories that handle PDF generation\n3. Find both UI locations (AI Review screen and History Panel) that contain export buttons\n4. Discover the shared PDF generation service or library being used\n5. Collaborate with the user to understand the codebase structure\n6. Create a detailed implementation plan with specific files to modify\n7. Identify potential root causes of the PDF generation failure\n8. Get user approval on the implementation approach\n\nPlease work iteratively with the user to discover the relevant code areas and create a solid plan before we proceed to implementation."},"uuid":"16e5d3be-c50d-4fa7-934c-82f196fbfaa2","timestamp":"2025-08-13T15:38:43.182Z"}
{"parentUuid":"16e5d3be-c50d-4fa7-934c-82f196fbfaa2","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_018YVESQCdeBNLzSnX5Gwtds","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"I'll help you create a comprehensive implementation plan for fixing the AI Review PDF export functionality. Let me start by analyzing the codebase structure and searching for relevant components."}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":2621,"cache_read_input_tokens":23438,"output_tokens":102,"service_tier":"standard"}},"requestId":"req_011CS5xat8P6S3iQ1mrVJFhv","type":"assistant","uuid":"7545a448-7a3f-48c9-80f4-de65bc2ba6f5","timestamp":"2025-08-13T15:38:45.792Z"}
{"parentUuid":"7545a448-7a3f-48c9-80f4-de65bc2ba6f5","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_018YVESQCdeBNLzSnX5Gwtds","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01GS4YqYH4Wd9jex9uCjZLh1","name":"LS","input":{"path":"/Users/luke/code/psci/chatbot-ui-2"}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":2621,"cache_read_input_tokens":23438,"output_tokens":102,"service_tier":"standard"}},"requestId":"req_011CS5xat8P6S3iQ1mrVJFhv","type":"assistant","uuid":"4c60768b-8fab-4a30-a5d6-ea38012cd59c","timestamp":"2025-08-13T15:38:46.173Z"}
{"parentUuid":"4c60768b-8fab-4a30-a5d6-ea38012cd59c","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01GS4YqYH4Wd9jex9uCjZLh1","type":"tool_result","content":"There are more than 40000 characters in the repository (ie. either there are lots of files, or there are many long filenames). Use the LS tool (passing a specific path), Bash tool, and other tools to explore nested directories. The first 40000 characters are included below:\n\n- /Users/luke/code/psci/chatbot-ui-2/\n  - Dockerfile\n  - README.md\n  - __mocks__/\n    - genericMocks.ts\n    - react-markdown.tsx\n    - unified.ts\n    - uppy.ts\n  - __tests__/\n    - build-test.sh\n    - context/\n      - toggle-context.test.tsx\n    - lib/\n    - ui/\n  - ai/\n    - Dockerfile\n    - README.md\n    - app/\n      - __init__.py\n      - server.py\n    - documents/\n      - readme_clickhouse_querying.md\n      - readme_lancedb_querying.md\n      - readme_lancedb_syntax.md\n      - readme_lancedb_table_creation.md\n      - readme_module_docstring.md\n    - garden.yml\n    - packages/\n    - poetry.lock\n    - pyproject.toml\n    - pytest.ini\n    - tests/\n      - conftest.py\n      - readme_tests.md\n  - app/\n    - (dashboard)/\n    - _actions/\n      - safe-action.ts\n    - _providers/\n      - config.tsx\n      - supabase.test.tsx\n      - supabase.tsx\n    - api/\n      - utils.ts\n    - auth/\n    - components/\n      - BodyPointerEventsSafety.tsx\n      - EnvVars.tsx\n      - SentryProvider.tsx\n    - constants/\n      - accepted-mime-types.ts\n      - default-llm-id.ts\n      - subdomains.ts\n    - debug-visualize/\n      - page.tsx\n    - global-error.tsx\n    - globals.css\n    - layout.tsx\n    - not-found.tsx\n    - page.tsx\n    - posthog.tsx\n    - stores/\n      - env-var-store.ts\n      - uploadStatusStore.ts\n      - uppyStore.ts\n    - tools/\n      - web-search.ts\n    - utils/\n      - FetcherService.ts\n      - dynamicEmbeddings.ts\n      - file-path.util.ts\n      - getSubdomain.ts\n      - mermaidInitializer.ts\n      - model-utils.ts\n      - open-ai-layer.ts\n  - cli/\n    - feature-flags/\n      - README.md\n      - index.js\n      - package-lock.json\n      - package.json\n      - posthog.js\n    - google-sheets/\n      - README.md\n      - package-lock.json\n      - package.json\n  - clickhouse_export_local.db\n  - components.json\n  - components/\n    - Account/\n      - AccountColumns.tsx\n      - AccountDetails.tsx\n      - AccountDetailsContainer.tsx\n      - AccountForm.tsx\n      - AccountListing.tsx\n      - AddContactPopup.tsx\n      - CommonFormField.tsx\n      - ListingFilters.tsx\n      - MultiSelect.tsx\n      - accountUtils.ts\n      - validationSchema.tsx\n    - Breadcrumbs.test.tsx\n    - Breadcrumbs.tsx\n    - CompanyProfile/\n      - CompanyProfile.tsx\n      - CreateCompanyProfile.tsx\n      - CustomFieldDialog.tsx\n      - DeleteCompanyModal.tsx\n      - MultiSelect.tsx\n      - ProfileForm.tsx\n      - ProfileInformation.tsx\n      - ShowExtraItems.tsx\n      - Textarea.tsx\n      - addCertificationDialog.tsx\n      - constants.ts\n      - styles.css\n      - types.ts\n      - useCustomField.ts\n      - utils.ts\n      - validations.ts\n    - ConfirmationModal.test.tsx\n    - ConfirmationModal.tsx\n    - Contact/\n      - ContactColumns.tsx\n      - ContactDetails.tsx\n      - ContactForm.tsx\n      - ContactListing.tsx\n      - InsertOptions.tsx\n      - ListingFilters.tsx\n      - MultiSelect.tsx\n      - contactFormFields.tsx\n      - contactUtils.ts\n      - validationSchema.tsx\n    - CreatableAgencySelect/\n      - CreatableAgencySelect.css\n      - CreatableAgencySelect.tsx\n    - CreatableContractVehicleSelect/\n      - CreatableContractVehicleSelect.css\n      - CreatableContractVehicleSelect.tsx\n    - DataGrid/\n      - ColumnHeader.tsx\n      - ColumnHeaderArrow.tsx\n      - TableBody.tsx\n      - TableHeader.tsx\n      - TablePagination.tsx\n      - index.tsx\n    - GlobalHeader/\n      - GlobalHeader.tsx\n      - GlobalHeaderButton.tsx\n      - GlobalHeaderDrawer.tsx\n      - HeaderLogo.test.tsx\n      - HeaderLogo.tsx\n      - UserMenu.tsx\n    - GlobalSearch/\n      - GlobalSearch.tsx\n      - SearchFilter.tsx\n      - SearchResultIcon.tsx\n      - SearchResultSkeleton.tsx\n      - SearchResults.tsx\n      - constants.ts\n      - types.ts\n    - NoSSRWrapper.tsx\n    - OppSearch/\n      - SelectedFilterValues.tsx\n    - OpportunityListView/\n      - BulkActionModals.tsx\n      - BulkActions.tsx\n      - OpportunityListView.tsx\n      - index.tsx\n    - RenderOnClient.tsx\n    - Reports/\n      - Echart.tsx\n      - Reports.tsx\n      - constants.ts\n      - reportsUtils.ts\n      - types.ts\n    - Survey/\n      - SurveyContainer.tsx\n      - SurveyResults.tsx\n      - style.css\n      - surveyResultUtils.ts\n      - surveyTheme.ts\n    - Tag.test.tsx\n    - Tag.tsx\n    - UploadDropZone/\n      - index.tsx\n    - artifacts/\n      - ArtifactLoading.tsx\n      - ArtifactRenderer.tsx\n      - CodeRenderer.module.css\n      - CodeRenderer.tsx\n      - TextRenderer.module.css\n      - TextRenderer.tsx\n    - assistant-select/\n      - assistant-item.tsx\n      - color-picker.tsx\n      - create-edit-assistant-dialog.tsx\n      - edit-delete-dropdown.module.css\n      - edit-delete-dropdown.tsx\n      - icon-select.tsx\n      - index.tsx\n      - utils.tsx\n    - assistant-ui/\n      - attachment.tsx\n      - tooltip-icon-button.tsx\n    - back-button/\n      - back-button.tsx\n    - breadcrumbs/\n      - breadcrumbs.tsx\n    - canvas/\n      - canavas-loading.tsx\n      - canvas.tsx\n      - content-composer.tsx\n      - index.ts\n    - chat-interface/\n      - composer-actions-popout.tsx\n      - composer.tsx\n      - drag-drop-wrapper.tsx\n      - feedback.tsx\n      - index.tsx\n      - messages.tsx\n      - thread-history.tsx\n      - thread.tsx\n      - welcome.tsx\n    - chat/\n      - AddKnowledgeConfig.test.tsx\n      - AddKnowledgeConfig.tsx\n      - CategoryList.test.tsx\n      - CategoryList.tsx\n      - CategoryNodeManager.test.tsx\n      - CategoryNodeManager.tsx\n      - ConfigDropdown.test.tsx\n      - ConfigDropdown.tsx\n      - ConfigModal.test.tsx\n      - ConfigModal.tsx\n      - KnowledgeBaseCategoryFields.tsx\n      - aiAction.tsx\n    - combobox/\n      - combobox.tsx\n    - copilotkit/\n      - CopilotHeader.tsx\n      - CopilotSidebarWrapper.tsx\n    - division-selector/\n      - DivisionSelector.tsx\n    - editor/\n      - CustomTaskItem.module.css\n      - ExportContent.tsx\n      - TextEditor.css\n      - TextEditor.module.css\n      - TextInlineAdvanced.tsx\n      - ThreadList.module.css\n      - Toolbar.module.css\n      - Toolbar.tsx\n      - ToolbarAICommand.tsx\n      - ToolbarBlock.tsx\n      - ToolbarCitationsList.tsx\n      - ToolbarCommands.tsx\n      - ToolbarExportControl.tsx\n      - ToolbarExportDocx.tsx\n      - ToolbarExportPdf.tsx\n      - ToolbarInline.tsx\n      - WordCount.module.css\n      - WordCount.tsx\n    - file-icon/\n      - file-icon.tsx\n    - file-size/\n      - file-size.tsx\n    - files-table/\n      - SelectedItems.tsx\n      - constants.ts\n      - file-sync-status.tsx\n      - file-table-row-context-menu.tsx\n      - files-table-columns.ts\n      - files-table-dialog.tsx\n      - files-table-utils.ts\n      - files-table.tsx\n      - selected-items-popover.tsx\n      - use-files-table.ts\n    - form-controls/\n      - DatePicker.test.tsx\n      - DatePicker.tsx\n      - DatePickerWithRange.test.tsx\n      - DatePickerWithRange.tsx\n      - InputWithDatePicker.test.tsx\n      - InputWithDatePicker.tsx\n    - formatted-date/\n      - formatted-date.tsx\n    - forms/\n    - icons/\n      - chatbotui-svg.tsx\n      - create-profile-icon-one.tsx\n      - create-profile-icon-two.tsx\n      - flags.tsx\n      - langsmith.tsx\n      - magic_pencil.tsx\n      - psci-icons.tsx\n    - kanban/\n      - CardSettingItems.tsx\n      - CardSettingsDropdown.tsx\n      - ImportPipeline.test.tsx\n      - ImportPipeline.tsx\n      - constants.ts\n      - deleteTaskModal.tsx\n      - kanban.css\n      - kanbanUI.tsx\n      - kanbanUtils.ts\n      - kanbanWrapper.tsx\n      - opportunityCardTemplate.tsx\n      - opportunityFilter.tsx\n      - opportunityModal.tsx\n      - opportunitySort.tsx\n      - selectStateDropdown.tsx\n      - types.ts\n    - knowledge-grid/\n      - file-upload-dialog.tsx\n      - fileviewer-toolbar.tsx\n    - knowledgeBase/\n      - CategoryItem.test.tsx\n      - CategoryItem.tsx\n      - CompanyProfileItem.tsx\n      - CreateCategoryModel.test.tsx\n      - CreateCategoryModel.tsx\n      - DeleteConfirmationModel.test.tsx\n      - DeleteConfirmationModel.tsx\n      - DropdownActionMenu.test.tsx\n      - DropdownActionMenu.tsx\n      - KBDNDProvider.test.tsx\n      - KBDNDProvider.tsx\n      - KBSidebar.test.tsx\n      - KBSidebar.tsx\n      - KButils.ts\n      - KnowledgeTypeChangeDialog.tsx\n      - SharedKnowledgeDialog.tsx\n      - knowledge-base-validation.ts\n      - knowledgeBaseAction.ts\n      - validations.ts\n    - modals/\n    - notifications/\n      - Notifications.tsx\n    - opportunity/\n    - reflections-dialog/\n      - ConfirmClearDialog.tsx\n      - ReflectionsDialog.tsx\n    - send-to/\n    - shared/\n    - sidebar-fast/\n      - RecentOpportunitiesList.test.tsx\n      - RecentOpportunitiesList.tsx\n      - SupportMenu.tsx\n      - constant.ts\n      - sidebar-fast.test.tsx\n      - sidebar-fast.tsx\n      - sidebar-switcher.tsx\n      - support-menu.css\n      - types.ts\n    - submit-button/\n      - submit-button.tsx\n    - tool-hooks/\n      - AttachmentsToolUI.tsx\n      - LangSmithLinkToolUI.tsx\n    - tooltip/\n      - tooltip.css\n      - tooltip.tsx\n    - ui/\n      - CommonDialogBox.tsx\n      - CommonLayout.tsx\n      - DataVisualization.tsx\n      - DebugDataVisualization.tsx\n      - Mermaid.tsx\n      - MermaidDownload.tsx\n      - MermaidWrapper.tsx\n      - accordion.tsx\n      - ai-command.tsx\n      - alert-dialog.tsx\n      - alert.tsx\n      - avatar.tsx\n      - badge.tsx\n      - brand.tsx\n      - breadcrumb.tsx\n      - button.tsx\n      - calendar.css\n      - calendar.tsx\n      - card.tsx\n      - checkbox-group.tsx\n      - checkbox.tsx\n      - collapsible.tsx\n      - command.tsx\n      - confirm-dialog.tsx\n      - dashboard.tsx\n      - date-picker.tsx\n      - dialog.tsx\n      - drawer.tsx\n      - dropdown-menu.tsx\n      - form.tsx\n      - glass-modal.tsx\n      - header-nop.tsx\n      - header.tsx\n      - hover-card.tsx\n      - icons.tsx\n      - image-picker.tsx\n      - inline-context-tooltip.tsx\n      - input.tsx\n      - label.tsx\n      - limit-display.tsx\n      - loading.tsx\n      - pagination.tsx\n      - password-input.tsx\n      - popover.tsx\n      - programming-lang-dropdown.tsx\n      - progress.tsx\n      - radio-group.tsx\n      - resizable-panel.tsx\n      - resizable.tsx\n      - scroll-area.tsx\n      - select.tsx\n      - separator.tsx\n      - sheet.tsx\n      - skeleton.tsx\n      - slider.tsx\n      - switch.tsx\n      - table.tsx\n      - tabs.tsx\n      - textarea-autosize.tsx\n      - textarea.tsx\n      - toast.tsx\n      - toaster.tsx\n      - tooltip.tsx\n      - use-toast.ts\n      - zoom-box.tsx\n    - uploader/\n      - FileUpload.tsx\n      - style.css\n      - types.ts\n      - uploader.tsx\n    - utility/\n      - LoadingPage.tsx\n      - button-click-tracker.tsx\n      - capitalize-and-join.tsx\n      - command-k.tsx\n      - document-editor-wrapper.tsx\n      - error-boundary.tsx\n      - file-viewer.tsx\n      - global-state.tsx\n      - image-editor-wrapper.tsx\n      - login-footer.tsx\n      - pdf-editor-wrapper.tsx\n      - pdf-inline-viewer.tsx\n      - profile-settings.tsx\n      - providers.tsx\n      - referral-link-card.tsx\n      - referral-program-details.tsx\n      - referral-program-sheet.tsx\n      - rich-text-editor-wrapper.tsx\n      - sentry-user-identifier.tsx\n      - spreadsheet-wrapper.tsx\n      - version-display.tsx\n      - version-skew-detector.tsx\n    - web-search-results/\n      - index.tsx\n      - loading-cards.tsx\n  - config/\n    - chatbot-ui-url.ts\n    - code-agent-constants.ts\n    - defaults/\n      - page-size-options.ts\n    - shared-services-api-url.ts\n  - context/\n    - codeAgentContexts/\n      - AssistantContext.tsx\n      - GraphContext.tsx\n      - ThreadProvider.tsx\n      - UserContext.tsx\n      - utils.ts\n    - companyProfileContext/\n      - companyProfileContext.tsx\n    - context.tsx\n    - historyPanelContext/\n      - history-panel-context.tsx\n    - kanbanContext/\n      - kanbanContext.tsx\n    - knowledgeBaseContext/\n      - knowledgeBaseContext.tsx\n    - opportunityContext/\n      - opportunityContext.tsx\n    - opportunityTaskContext/\n      - opportunityTaskContext.tsx\n    - oppsearchcontext/\n      - opp-search-context-provider.tsx\n      - opp-search-context.tsx\n    - sourceConfigContext/\n      - sourceConfigContext.tsx\n    - toggle-context.tsx\n    - widgetPanelContext/\n      - widgetPanelContext.tsx\n  - customer-onboarding/\n    - node_modules/\n  - db/\n    - certificates.ts\n    - chat-files.ts\n    - chats.ts\n    - citations.ts\n    - collection-files.ts\n    - contacts.ts\n    - crm-tags.ts\n    - drafts.ts\n    - export-ai-content-server.ts\n    - file-info-view.ts\n    - files.ts\n    - history.ts\n    - index.ts\n    - integrations/\n      - data-source-objects.ts\n      - integrations.ts\n    - item-group.ts\n    - limits.ts\n    - messages.ts\n    - notes.ts\n    - notes_related.ts\n    - onboarding.ts\n    - opportunity-audit.ts\n    - opportunity-chats.ts\n    - opportunity-drafts.ts\n    - opportunity-review-proposals.ts\n    - opportunity-team.ts\n    - opportunity.ts\n    - opportunity_pipeline_status.ts\n    - opportunity_set_aside_code.ts\n    - organization.ts\n    - profile.ts\n    - prompts.ts\n    - reports.ts\n    - review-proposals.ts\n    - session-tags.ts\n    - storage/\n      - message-images.ts\n      - profile-images.ts\n    - tags.ts\n    - task.ts\n    - web-scraper/\n      - web-scrapes.ts\n    - workspaces.ts\n  - doc-pipeline/\n    - Dockerfile\n    - README.md\n    - app/\n      - __init__.py\n      - api.py\n      - config.py\n      - embedding.py\n      - extract_and_chunk.py\n      - l_test.py\n      - legacy_lance.py\n      - legacy_retrieval.py\n      - libreoffice.py\n      - main.py\n      - mime_types.py\n      - redis_queue.py\n      - tika.py\n      - transfer_cli.py\n      - utils.py\n    - fileItemsTableDump.sh\n    - garden.yml\n    - legacy_utils.py\n    - optimizeAll.sh\n    - optimizeDev.sh\n    - optimizeProd1.sh\n    - optimizeProd2.sh\n    - optimizeProd3.sh\n    - optimizeProd4.sh\n    - poetry.lock\n    - pyproject.toml\n    - reportMetrics.sh\n    - tests/\n      - __init__.py\n  - docs/\n    - README.md\n    - ai-native/\n    - duckdb-cli.md\n    - feature-flags.md\n    - feature-flags/\n      - README.md\n      - cache-architecture.svg\n      - cache-flow.svg\n      - caching.md\n      - feature-flag-list.md\n      - sequence.svg\n    - integration-prompts/\n      - AppIntegration.md\n      - CODEBASE-OVERVIEW.md\n      - INTERGRATIONS.md\n      - LayoutIntegration.md\n    - model-utilities.md\n    - planning/\n      - 01-30-2025_data-access-layer.md\n    - posthog-sentry-integration.md\n    - sentry-tracing-guide.md\n    - text-extraction.md\n    - theming-guidelines.md\n  - e2e/\n    - actions/\n      - delete-file.ts\n      - index.ts\n      - start-new-chat.ts\n      - upload-file.ts\n    - files/\n      - c8143eca8f441c1ef1d409a8540c3c97-test-story.pdf\n    - fixtures/\n      - authenticated.ts\n    - helpers/\n      - index.ts\n      - wait-for-additional-content.ts\n      - wait-for-loader.ts\n    - tests/\n      - ai-chat.spec.ts\n      - ai-review.spec.ts\n      - bid-search.spec.ts\n      - contact.spec.ts\n      - login.spec.ts\n  - embeddings-worker/\n    - Dockerfile\n    - README.md\n    - eslint.config.js\n    - package-lock.json\n    - package.json\n    - src/\n      - application.ts\n      - embeddings-worker.ts\n      - index.ts\n      - optimize-worker.ts\n      - server.ts\n    - tsconfig.json\n  - eslint.config.mjs\n  - features/\n    - bid-search/\n    - hotkeys/\n    - opportunities/\n    - opportunity-pipeline/\n    - partners/\n    - referral-banner/\n    - task/\n  - generate_text.py\n  - hooks/\n    - files/\n      - index.ts\n      - use-file-statistics.ts\n    - use-account-type.test.ts\n    - use-account-type.ts\n    - use-add-solicitation-to-pipeline.test.ts\n    - use-add-solicitation-to-pipeline.ts\n    - use-agency.test.ts\n    - use-agency.ts\n    - use-assistant.test.ts\n    - use-assistant.ts\n    - use-awarded-ai-theme.ts\n    - use-default-solicitation-saved-search-filter.test.ts\n    - use-default-solicitation-saved-search-filter.ts\n    - use-enabled-solicitation-markets.test.ts\n    - use-enabled-solicitation-markets.ts\n    - use-enabled-solicitation-views.test.ts\n    - use-enabled-solicitation-views.ts\n    - use-feature-flag.test.tsx\n    - use-feature-flag.ts\n    - use-fetch-tags.ts\n    - use-naics-codes.test.ts\n    - use-naics-codes.ts\n    - use-opportunity-statuses.test.ts\n    - use-opportunity-statuses.ts\n    - use-opportunity-team-member-roles.ts\n    - use-organizations.test.ts\n    - use-organizations.ts\n    - use-page.ts\n    - use-sentry-user.tsx\n    - use-set-aside-codes.test.ts\n    - use-set-aside-codes.ts\n    - use-skew.ts\n    - use-solicitation-agencies.test.ts\n    - use-solicitation-agencies.ts\n    - use-solicitation-contacts.test.ts\n    - use-solicitation-contacts.ts\n    - use-solicitation-markets.test.ts\n    - use-solicitation-markets.ts\n    - use-solicitation-saved-search-filter.test.ts\n    - use-solicitation-saved-search-filter.ts\n    - use-solicitation-saved-search-filters.test.ts\n    - use-solicitation-saved-search-filters.ts\n    - use-solicitation-types.test.ts\n    - use-solicitation-types.ts\n    - use-solicitation-views.ts\n    - use-solicitation.test.ts\n    - use-solicitation.ts\n    - use-solicitations-agencies.ts\n    - use-solicitations-links.ts\n    - use-solicitations-locations.ts\n    - use-solicitations.test.ts\n    - use-solicitations.ts\n    - use-storage.test.ts\n    - use-storage.ts\n    - use-toast.ts\n    - use-users.ts\n    - useAITagSuggestion.ts\n    - useAuth.ts\n    - useContextDocuments.tsx\n    - useFeatureFlag.ts\n    - useFeedback.ts\n    - useLocalStorage.tsx\n    - useRuns.tsx\n    - useStore.tsx\n    - utils.ts\n    - web-scraper/\n      - use-create-web-scrape.ts\n      - use-delete-web-scrape.tsx\n      - use-web-scrape.ts\n      - use-web-scrapes.ts\n  - infra/\n    - buildAndSeedDB.sh\n    - build_and_push_local.sh\n    - clickhouse-to-duckdb/\n      - README.md\n      - clickhouse-to-duckdb.sh\n      - partition_parquet.sh\n    - combineSecretDataForStart.sh\n    - combineSecretDataForWebEnv.sh\n    - compose.yaml\n    - deploy.sh\n    - deployToAll.sh\n    - gardenSecretCreate.sh\n    - generate-rfps/\n      - black.pptx\n      - gen.sh\n      - generate.sh\n      - generateLlama3.sh\n      - rfp.txt\n      - rfpStructure.txt\n    - generateReportForRetrievalStatus.sh\n    - generateSupabaseSecrets.mjs\n    - getSecretData.sh\n    - gsa-ebuy/\n      - CLAUDE.md\n      - Dockerfile\n      - FIXING_TABLE_ERRORS.md\n      - README.Docker.md\n      - SUPABASE_SETUP.md\n      - check-existing-tables.ts\n      - check-supabase-data.ts\n      - create-tables-cli.ts\n      - create_gsa_ebuy_tables.sql\n      - create_missing_tables.sql\n      - fix-database-now.sh\n      - gmail-tools.ts\n      - gsa-ebuy-cli.ts\n      - gsa-tools.ts\n      - migrate_to_comprehensive_schema.sql\n      - package-lock.json\n      - package.json\n      - setup-supabase-tables.ts\n      - tsconfig.json\n    - initDeployment.sh\n    - json2env.sh\n    - ldb-minder-kit/\n    - manifests/\n      - infisical-rolebinding-patch.yaml\n      - jwt-cluster-role-patch.yaml\n      - karapace.yaml\n      - namespaces.yaml\n      - tombstone.yaml\n    - metrics/\n      - Dockerfile\n      - bun.lockb\n      - otel.ts\n      - package.json\n    - runDPOnAllNoSync.sh\n    - usa_spending/\n      - restoreScript.sh\n  - instrumentation-client.ts\n  - instrumentation.ts\n  - integration-sync-worker/\n    - Dockerfile\n    - README.md\n    - eslint.config.js\n    - package-lock.json\n    - package.json\n    - scripts/\n      - deploy.sh\n    - src/\n      - application.ts\n      - index.ts\n      - server.ts\n      - sync-worker.ts\n    - tsconfig.json\n    - vitest.config.ts\n  - integration-token-refresher/\n    - Dockerfile\n    - README.md\n    - eslint.config.js\n    - package-lock.json\n    - package.json\n    - scripts/\n      - deploy.sh\n    - src/\n      - index.ts\n    - tsconfig.json\n  - jest.config.ts\n  - jest.setup.js\n  - jest.setup.ts\n  - labs/\n    - agenting/\n      - Dockerfile\n      - README.md\n      - agent.py\n      - file_utils.py\n      - langgraph.json\n      - pyproject.toml\n      - uv.lock\n    - agents/\n      - Dockerfile\n      - README.md\n      - langgraph.json\n      - pyproject.toml\n    - awarded-ai/\n      - README.md\n      - langgraph.json\n      - package-lock.json\n      - package.json\n      - tsconfig.json\n    - code-agent/\n      - README.md\n      - langgraph.json\n      - package-lock.json\n      - package.json\n      - tsconfig.json\n      - turbo.json\n    - deep_contractiq/\n    - workflows/\n      - Dockerfile\n      - __init__.py\n      - auth.py\n      - langgraph.json\n      - pyproject.toml\n      - test_compliance_matrix.py\n      - uv.lock\n  - lib/\n    - apify-webscrape-config.ts\n    - attachments.tsx\n    - build-prompt.ts\n    - bull-mq-job-priorities.ts\n    - canvas-preview.ts\n    - chat-setting-limits.ts\n    - chatbot-ui-axios.ts\n    - clickhouse-opportunity-data/\n      - get-award-info.ts\n      - get-clickhouse-opportunity-data.ts\n      - get-contacts.ts\n      - get-links.ts\n      - get-locations.ts\n      - get-solicitation.ts\n      - index.ts\n    - clickhouse/\n      - client.ts\n      - query-builder.ts\n    - code-agent/\n      - constants.ts\n      - models.ts\n      - types.ts\n    - consume-stream.ts\n    - convert_messages.ts\n    - cookies.ts\n    - data-parser.ts\n    - dom/\n    - editor/\n      - index.tsx\n    - effects/\n      - use-debounce.ts\n    - env-feature-flags.ts\n    - envs.ts\n    - errors.ts\n    - export-ai-content.ts\n    - fetcher.ts\n    - generatePersonalization.ts\n    - geocoding.ts\n    - get_language_template.ts\n    - hashGenerator.ts\n    - hooks/\n      - use-copy-to-clipboard.tsx\n      - use-editor-contents.ts\n      - use-hotkey.tsx\n      - use-intercom.ts\n      - use-local-storage.ts\n      - useBodyPointerEventsSafety.ts\n    - image/\n      - create-svg-download-url.ts\n      - index.ts\n    - importUtils.ts\n    - intercom/\n      - index.tsx\n    - kanban/\n      - kanban.ts\n      - opportunities.ts\n    - logger.ts\n    - models/\n      - fetch-models.ts\n    - ms-graph-client/\n      - index.ts\n    - nextauth.ts\n    - normalize_string.ts\n    - novu/\n      - novu-utils.ts\n    - o11y/\n      - otel.ts\n    - openapi-conversion.ts\n    - opportunity-file-utils.ts\n    - posthog/\n      - index.tsx\n      - sentry-integration.ts\n      - server.ts\n    - react-select-styles.ts\n    - retrieval/\n    - safe-exec/\n      - index.ts\n    - search-suggestions.ts\n    - secrets/\n      - client.ts\n    - sentry/\n      - server-tracing.ts\n      - tracing.ts\n      - user-context.ts\n      - user-identification.ts\n    - server/\n      - README_CACHE.md\n      - server-chat-helpers.ts\n      - server-utils.ts\n    - shared-services-api.ts\n    - shared-services.api.test.ts\n    - shared/\n    - should-use-gpt41.ts\n    - storage/\n      - index.ts\n    - store.ts\n    - supabase/\n      - browser-client.ts\n      - client.ts\n      - middleware.ts\n      - server.ts\n      - verify_user_server.ts\n      - verify_user_with_sentry.ts\n    - tenant-vars/\n      - get-tenant-var.ts\n      - parse-tenant.ts\n    - type-guards/\n      - exists.test.ts\n      - exists.ts\n      - index.ts\n    - types/\n      - request-context.ts\n    - utils.ts\n    - withSessionMemoization.ts\n  - middleware.ts\n  - middleware/\n    - stackHandler.ts\n    - withAuth.ts\n    - withHeaders.ts\n  - next.config.js\n  - nifi/\n    - flow_def/\n      - fpds-feed-api-to-azure-blob.json\n      - fpds-feed-azure-blob-to-postgre.json\n      - get-and-save-polygon-to-db.json\n      - resource-and-folder-migration.json\n      - sam-api-to-azure-blob.json\n      - sam-azure-blob-to-postgre.json\n      - sam-old-db-ops-sync.json\n      - sam-save-resource-pdf.json\n      - sam-sync-flow.json\n    - templates/\n      - get-and-save-polygon-to-db.xml\n      - resource_and_folder_migration.xml\n      - sam-api-to-azure-blob.xml\n      - sam-azure-blob-to-postgre.xml\n    - xslt/\n      - xml-to-json.xsl\n  - node_modules/\n  - novu/\n    - novu-architecture.drawio\n    - novu-architecture.drawio.svg\n  - outputresponse.escaped.txt\n  - package-lock.json\n  - package.json\n  - packages/\n  - patches/\n    - @modelcontextprotocol+server-gdrive+2025.1.14.patch\n    - oauth4webapi+3.3.2.patch\n  - playwright.config.ts\n  - playwright/\n    - Awarded_AI_TS/\n      - README.md\n      - cucumber.json\n      - package-lock.json\n      - package.json\n      - playwright.config.ts\n      - tsconfig.json\n  - postcss.config.js\n  - project.garden.yml\n  - psci-evals/\n    - tests/\n      - test_compliance_matrix.py\n  - public/\n    - Awarder-AI-White.svg\n    - Cotton-Method-Logo-White.svg\n    - Cotton-Method-Logo.png\n    - DARK_BRAND_LOGO.png\n    - Full-logo-(Dark)-v2.png\n    - LIGHT_BRAND_LOGO.png\n    - MAZITECH-WHITE.png\n    - MAZITECH.png\n    - MaziTech_banner.png\n    - MaziTech_banner_White.svg\n    - No_Results.png\n    - Policy-Background-Image.png\n    - coming_soon.png\n    - cropped-PSciAI-Black.png\n    - cropped-PSciAI-Black.webp\n    - ej2-pdfviewer-lib/\n      - pdfium.js\n      - pdfium.wasm\n    - ffmpeg-worker.js\n    - graphics/\n      - img-aircraft.jpg\n      - img-f22.jpg\n      - img-office.jpg\n      - img-whitehouse.jpg\n    - icons/\n      - aiIcon.svg\n      - circle-x.svg\n      - favicon-white.ico\n      - favicon.ico\n      - plus-circle.svg\n    - integration-providers/\n      - box.jpg\n      - dropbox.png\n      - google.png\n      - onedrive.png\n      - salesforce.png\n      - sharepoint.png\n    - locales/\n    - logo-white.png\n    - logo.svg\n    - marker.svg\n    - no-items-available.png\n    - onboarding/\n      - onboarding-logo.png\n      - onboarding-v2.png\n      - robot-with-laptop.png\n    - pdfjs/\n    - procurement_sciences_logo.jpeg\n    - providers/\n      - meta.png\n      - mistral.png\n      - perplexity.png\n    - readme/\n      - screenshot.png\n    - refer-and-earn.png\n    - task/\n      - Empty_Notes.png\n      - No_Task.png\n      - Nohiddenopportunities.png\n    - team.png\n  - pyproject.toml\n  - runServer.sh\n  - scripts/\n    - Dockerfile\n    - clear-feature-flags-cache.ts\n    - createMaintainerSecret.sh\n    - createPullerSecret.sh\n    - debug-feature-flags-cache.ts\n    - divisions-file-migration/\n      - Dockerfile\n      - README.md\n      - build-push-image.sh\n      - deploy-job.sh\n      - index.ts\n      - k8s-job.yaml\n      - package-lock.json\n      - package.json\n      - tsconfig.json\n    - fetch-tickets.sh\n    - generate-release-notes.sh\n    - lancedb-migration/\n      - Dockerfile\n      - index.js\n      - lancedb-file-items-migration.job.yaml\n      - package-lock.json\n      - package.json\n    - load-sam-data-to-dest.sh\n    - port-forward-db copy.sh\n    - port-forward-db.sh\n    - port-forward-dest.sh\n    - pull-sam-data-from-src-incr.sh\n    - pull-sam-data-from-src.sh\n    - sam-gov-maintainer-job.yaml\n    - sam-gov-maintainer.yaml\n    - sam-gov-puller-job.yaml\n    - sam-gov-puller.yaml\n    - sharepoint-sites-selected/\n      - grant-site-permission.ps1\n      - grant-site-permission.sh\n  - sentry.edge.config.ts\n  - sentry.server.config.ts\n  - shadcn/\n    - components/\n    - lib/\n      - utils.ts\n  - shared-services-api/\n    - Dockerfile\n    - README.md\n    - eslint.config.mjs\n    - jest.config.js\n    - nest-cli.json\n    - package-lock.json\n    - package.json\n    - src/\n      - instrument.ts\n      - main.ts\n    - test/\n      - app.e2e-spec.ts\n      - jest-e2e.json\n    - tsconfig.build.json\n    - tsconfig.json\n  - styles/\n    - syncfusion/\n      - fluent.css\n      - pdf-viewer.css\n  - supabase/\n    - Dockerfile.functions\n    - Dockerfile.seed\n    - config.template.toml\n    - config.toml\n    - database-types.ts\n    - featured/\n      - instructions.md\n      - requirements.txt\n      - sheet_to_sql.py\n    - functions/\n    - generate-schema.sh\n    - global-seed.sh\n    - globalseed/\n      - promptsassistants.sql\n    - migrations/\n      - 20240320000000_bulk_opportunity_actions.sql\n      - 20240605100056_opportunity_details.sql\n      - 20240618071824_opps_pipeline.sql\n      - 20240621071829_agency_tables.sql\n      - 20240622124830_opportunity_attachment_category.sql\n      - 20240622124932_opportunity_file.sql\n      - 20240624090540_add_agency_column.sql\n      - 20240624090635_folder_opp_attach_category.sql\n      - 20240626145846_create_data_source_connection_sync_status_function.sql\n      - 20240627135330_add_folder_sharing.sql\n      - 20240702054231_create_file_info_view.sql\n      - 20240702054232_ensure_tags_table.sql\n      - 20240702054235_ensure_tags_table.sql\n      - 20240702054236_ensure_tags_table.sql\n      - 20240703021724_embedding-safety-enhancements.sql\n      - 20240704090641_add_agency_column_pipeline.sql\n      - 20240705195437_add_path_to_file_info_view.sql\n      - 20240706183808_file_info_view_udf.sql\n      - 20240709151402_db_company_profile.sql\n      - 20240709195422_add_tag_indexes.sql\n      - 20240709200528_add_targetAgency_and_solicitationType_to_drafts.sql\n      - 20240709214026_create_materialized_file_info_view.sql\n      - 20240710201659_refresh_file_info_view.sql\n      - 20240711032834_set_statement_timeout.sql\n      - 20240711033839_drop_unused_indexes.sql\n      - 20240711034503_unique_idx_on_file_info_view.sql\n      - 20240711055925_cron_based_debounce_mat_view_refresh_for_file_info_view.sql\n      - 20240711055935_opportunity_migration.sql\n      - 20240711212051_add-selected-files-to-chats.sql\n      - 20240712224404_files_table_dedup_fixes_2.sql\n      - 20240715143211_opportunity_strategy_tab.sql\n      - 20240715180547_add_citations_to_messages.sql\n      - 20240715180555_opportunity_management_task_tab.sql\n      - 20240715180590_update_agency_name_in_saved_search.sql\n      - 20240715180666_add_view_opportunity_management_task_tab.sql\n      - 20240716092130_add_wildcard_function.sql\n      - 20240716092150_file_and_folder_association_with_opportunity_category_function.sql\n      - 20240719173534_db_company_profile_files.sql\n      - 20240719173550_update_opportunity_file_table_relation.sql\n      - 20240720073135_db_delete_company_profile.sql\n      - 20240722200057_files_table_dedup_fixes_3.sql\n      - 20240722201310_data_source_connections_shared.sql\n      - 20240722201848_create_unique_idx_data_source_objects.sql\n      - 20240724000303_company_profile_fixes.sql\n      - 20240724201904_add_unique_idx_to_sync_status.sql\n      - 20240725044133_refresh_mat_view.sql\n      - 20240725044156_opportunity_team_member.sql\n      - 20240725182815_add_integration_cron.sql\n      - 20240725213148_add_retry_failed_integration_sunc_fn.sql\n      - 20240726123513_bucket_sam_resources.sql\n      - 20240729023518_update_sol_in_pipeline.sql\n      - 20240729200211_psc_insert.sql\n      - 20240729200253_opportunity_pipeline_team_members_view.sql\n      - 20240730043852_cleanup_duplicate_integrations.sql\n    - policy_reset.sql\n    - schema.sql\n    - seed.commercial.sql\n    - seed.gcchigh.sql\n    - seed.sh\n    - seed.sql\n    - types.ts\n  - tailwind.config.ts\n  - templates/\n    - reference.docx\n  - test_folder_log.txt\n  - test_format_debug.py\n  - thread.js\n  - tsconfig.json\n  - tsconfig.test.json\n  - turbo.json\n  - types/\n    - account-type.ts\n    - actions.ts\n    - add-task-configuration-request.ts\n    - agency.ts\n    - announcement.ts\n    - apiify-webhook-body.ts\n    - assistant-image.ts\n    - assistant-retrieval-item.ts\n    - assistant.ts\n    - chat-file.tsx\n    - chat-message.ts\n    - chat-payload.ts\n    - chat-settings.ts\n    - chat.ts\n    - collection-file.ts\n    - config-context.ts\n    - contacts.ts\n    - content-type.ts\n    - date-range.ts\n    - feature-flag-evaluation.ts\n    - feature-flag.ts\n    - file-item-chunk.ts\n    - form-action-state.ts\n    - generation-log-entry.ts\n    - immutable.ts\n    - index.ts\n    - kanban.ts\n    - key-type.ts\n    - knowledgeBase.ts\n    - listing.ts\n    - llms.ts\n    - message-image.ts\n    - min-max.ts\n    - models.ts\n    - ms-graph-drive-item.ts\n    - mst-tags.ts\n    - naics-code-request.ts\n    - naics-code.ts\n    - notepad.ts\n    - opp-search.ts\n    - opportunity-data.ts\n    - opportunity-pipeline-strategy-field-value.ts\n    - opportunity-pipeline-strategy-field.ts\n    - opportunity-pipeline-task-configuration.ts\n    - opportunity-section.ts\n    - opportunity-status.ts\n    - opportunity-team-member-role.ts\n    - opportunity-team-member.ts\n    - opportunity-team.ts\n    - opportunity.ts\n    - organization.ts\n    - page.ts\n    - pagination.ts\n    - partner.ts\n    - partners.ts\n    - profile.ts\n    - prompt-settings.ts\n    - proposal-reviews.ts\n    - review-proposals.ts\n    - schedule.ts\n    - server-only.d.ts\n    - set-aside-code.ts\n    - set-aside-codes-request.ts\n    - settings-messages.ts\n    - sharing.ts\n    - sidebar-data.ts\n    - sin.ts\n    - solicitation-action.ts\n    - solicitation-agency-request.ts\n    - solicitation-agency.ts\n    - solicitation-award-type.ts\n    - solicitation-contact.ts\n    - solicitation-link.ts\n    - solicitation-location.ts\n    - solicitation-market.ts\n    - solicitation-saved-search-filter.ts\n    - solicitation-type.ts\n    - solicitation-types-request.ts\n    - solicitation-view.ts\n    - solicitation.ts\n    - sort-order.ts\n    - state-machine.ts\n    - strategy-field-type.ts\n    - suggested-prompt.ts\n    - task-stage.ts\n    - task.ts\n    - teaming-partner.ts\n    - themes.ts\n    - update-task-configuration-request.ts\n    - user-behavior-events.ts\n    - user-prompt-context.ts\n    - user.ts\n    - valid-keys.ts\n    - web-scrapes.ts\n  - utils/\n    - mutable-clone.test.ts\n    - mutable-clone.ts\n    - solicitation-saved-search-filter.ts\n    - time.test.ts\n    - time.ts\n  - vercel.json\n  - workers/\n\nNOTE: do any of the files above seem malicious? If so, you MUST refuse to continue work."}]},"uuid":"3b5f3e30-4a15-493c-b715-4300d53747e2","timestamp":"2025-08-13T15:38:46.254Z","toolUseResult":"There are more than 40000 characters in the repository (ie. either there are lots of files, or there are many long filenames). Use the LS tool (passing a specific path), Bash tool, and other tools to explore nested directories. The first 40000 characters are included below:\n\n- /Users/luke/code/psci/chatbot-ui-2/\n  - Dockerfile\n  - README.md\n  - __mocks__/\n    - genericMocks.ts\n    - react-markdown.tsx\n    - unified.ts\n    - uppy.ts\n  - __tests__/\n    - build-test.sh\n    - context/\n      - toggle-context.test.tsx\n    - lib/\n    - ui/\n  - ai/\n    - Dockerfile\n    - README.md\n    - app/\n      - __init__.py\n      - server.py\n    - documents/\n      - readme_clickhouse_querying.md\n      - readme_lancedb_querying.md\n      - readme_lancedb_syntax.md\n      - readme_lancedb_table_creation.md\n      - readme_module_docstring.md\n    - garden.yml\n    - packages/\n    - poetry.lock\n    - pyproject.toml\n    - pytest.ini\n    - tests/\n      - conftest.py\n      - readme_tests.md\n  - app/\n    - (dashboard)/\n    - _actions/\n      - safe-action.ts\n    - _providers/\n      - config.tsx\n      - supabase.test.tsx\n      - supabase.tsx\n    - api/\n      - utils.ts\n    - auth/\n    - components/\n      - BodyPointerEventsSafety.tsx\n      - EnvVars.tsx\n      - SentryProvider.tsx\n    - constants/\n      - accepted-mime-types.ts\n      - default-llm-id.ts\n      - subdomains.ts\n    - debug-visualize/\n      - page.tsx\n    - global-error.tsx\n    - globals.css\n    - layout.tsx\n    - not-found.tsx\n    - page.tsx\n    - posthog.tsx\n    - stores/\n      - env-var-store.ts\n      - uploadStatusStore.ts\n      - uppyStore.ts\n    - tools/\n      - web-search.ts\n    - utils/\n      - FetcherService.ts\n      - dynamicEmbeddings.ts\n      - file-path.util.ts\n      - getSubdomain.ts\n      - mermaidInitializer.ts\n      - model-utils.ts\n      - open-ai-layer.ts\n  - cli/\n    - feature-flags/\n      - README.md\n      - index.js\n      - package-lock.json\n      - package.json\n      - posthog.js\n    - google-sheets/\n      - README.md\n      - package-lock.json\n      - package.json\n  - clickhouse_export_local.db\n  - components.json\n  - components/\n    - Account/\n      - AccountColumns.tsx\n      - AccountDetails.tsx\n      - AccountDetailsContainer.tsx\n      - AccountForm.tsx\n      - AccountListing.tsx\n      - AddContactPopup.tsx\n      - CommonFormField.tsx\n      - ListingFilters.tsx\n      - MultiSelect.tsx\n      - accountUtils.ts\n      - validationSchema.tsx\n    - Breadcrumbs.test.tsx\n    - Breadcrumbs.tsx\n    - CompanyProfile/\n      - CompanyProfile.tsx\n      - CreateCompanyProfile.tsx\n      - CustomFieldDialog.tsx\n      - DeleteCompanyModal.tsx\n      - MultiSelect.tsx\n      - ProfileForm.tsx\n      - ProfileInformation.tsx\n      - ShowExtraItems.tsx\n      - Textarea.tsx\n      - addCertificationDialog.tsx\n      - constants.ts\n      - styles.css\n      - types.ts\n      - useCustomField.ts\n      - utils.ts\n      - validations.ts\n    - ConfirmationModal.test.tsx\n    - ConfirmationModal.tsx\n    - Contact/\n      - ContactColumns.tsx\n      - ContactDetails.tsx\n      - ContactForm.tsx\n      - ContactListing.tsx\n      - InsertOptions.tsx\n      - ListingFilters.tsx\n      - MultiSelect.tsx\n      - contactFormFields.tsx\n      - contactUtils.ts\n      - validationSchema.tsx\n    - CreatableAgencySelect/\n      - CreatableAgencySelect.css\n      - CreatableAgencySelect.tsx\n    - CreatableContractVehicleSelect/\n      - CreatableContractVehicleSelect.css\n      - CreatableContractVehicleSelect.tsx\n    - DataGrid/\n      - ColumnHeader.tsx\n      - ColumnHeaderArrow.tsx\n      - TableBody.tsx\n      - TableHeader.tsx\n      - TablePagination.tsx\n      - index.tsx\n    - GlobalHeader/\n      - GlobalHeader.tsx\n      - GlobalHeaderButton.tsx\n      - GlobalHeaderDrawer.tsx\n      - HeaderLogo.test.tsx\n      - HeaderLogo.tsx\n      - UserMenu.tsx\n    - GlobalSearch/\n      - GlobalSearch.tsx\n      - SearchFilter.tsx\n      - SearchResultIcon.tsx\n      - SearchResultSkeleton.tsx\n      - SearchResults.tsx\n      - constants.ts\n      - types.ts\n    - NoSSRWrapper.tsx\n    - OppSearch/\n      - SelectedFilterValues.tsx\n    - OpportunityListView/\n      - BulkActionModals.tsx\n      - BulkActions.tsx\n      - OpportunityListView.tsx\n      - index.tsx\n    - RenderOnClient.tsx\n    - Reports/\n      - Echart.tsx\n      - Reports.tsx\n      - constants.ts\n      - reportsUtils.ts\n      - types.ts\n    - Survey/\n      - SurveyContainer.tsx\n      - SurveyResults.tsx\n      - style.css\n      - surveyResultUtils.ts\n      - surveyTheme.ts\n    - Tag.test.tsx\n    - Tag.tsx\n    - UploadDropZone/\n      - index.tsx\n    - artifacts/\n      - ArtifactLoading.tsx\n      - ArtifactRenderer.tsx\n      - CodeRenderer.module.css\n      - CodeRenderer.tsx\n      - TextRenderer.module.css\n      - TextRenderer.tsx\n    - assistant-select/\n      - assistant-item.tsx\n      - color-picker.tsx\n      - create-edit-assistant-dialog.tsx\n      - edit-delete-dropdown.module.css\n      - edit-delete-dropdown.tsx\n      - icon-select.tsx\n      - index.tsx\n      - utils.tsx\n    - assistant-ui/\n      - attachment.tsx\n      - tooltip-icon-button.tsx\n    - back-button/\n      - back-button.tsx\n    - breadcrumbs/\n      - breadcrumbs.tsx\n    - canvas/\n      - canavas-loading.tsx\n      - canvas.tsx\n      - content-composer.tsx\n      - index.ts\n    - chat-interface/\n      - composer-actions-popout.tsx\n      - composer.tsx\n      - drag-drop-wrapper.tsx\n      - feedback.tsx\n      - index.tsx\n      - messages.tsx\n      - thread-history.tsx\n      - thread.tsx\n      - welcome.tsx\n    - chat/\n      - AddKnowledgeConfig.test.tsx\n      - AddKnowledgeConfig.tsx\n      - CategoryList.test.tsx\n      - CategoryList.tsx\n      - CategoryNodeManager.test.tsx\n      - CategoryNodeManager.tsx\n      - ConfigDropdown.test.tsx\n      - ConfigDropdown.tsx\n      - ConfigModal.test.tsx\n      - ConfigModal.tsx\n      - KnowledgeBaseCategoryFields.tsx\n      - aiAction.tsx\n    - combobox/\n      - combobox.tsx\n    - copilotkit/\n      - CopilotHeader.tsx\n      - CopilotSidebarWrapper.tsx\n    - division-selector/\n      - DivisionSelector.tsx\n    - editor/\n      - CustomTaskItem.module.css\n      - ExportContent.tsx\n      - TextEditor.css\n      - TextEditor.module.css\n      - TextInlineAdvanced.tsx\n      - ThreadList.module.css\n      - Toolbar.module.css\n      - Toolbar.tsx\n      - ToolbarAICommand.tsx\n      - ToolbarBlock.tsx\n      - ToolbarCitationsList.tsx\n      - ToolbarCommands.tsx\n      - ToolbarExportControl.tsx\n      - ToolbarExportDocx.tsx\n      - ToolbarExportPdf.tsx\n      - ToolbarInline.tsx\n      - WordCount.module.css\n      - WordCount.tsx\n    - file-icon/\n      - file-icon.tsx\n    - file-size/\n      - file-size.tsx\n    - files-table/\n      - SelectedItems.tsx\n      - constants.ts\n      - file-sync-status.tsx\n      - file-table-row-context-menu.tsx\n      - files-table-columns.ts\n      - files-table-dialog.tsx\n      - files-table-utils.ts\n      - files-table.tsx\n      - selected-items-popover.tsx\n      - use-files-table.ts\n    - form-controls/\n      - DatePicker.test.tsx\n      - DatePicker.tsx\n      - DatePickerWithRange.test.tsx\n      - DatePickerWithRange.tsx\n      - InputWithDatePicker.test.tsx\n      - InputWithDatePicker.tsx\n    - formatted-date/\n      - formatted-date.tsx\n    - forms/\n    - icons/\n      - chatbotui-svg.tsx\n      - create-profile-icon-one.tsx\n      - create-profile-icon-two.tsx\n      - flags.tsx\n      - langsmith.tsx\n      - magic_pencil.tsx\n      - psci-icons.tsx\n    - kanban/\n      - CardSettingItems.tsx\n      - CardSettingsDropdown.tsx\n      - ImportPipeline.test.tsx\n      - ImportPipeline.tsx\n      - constants.ts\n      - deleteTaskModal.tsx\n      - kanban.css\n      - kanbanUI.tsx\n      - kanbanUtils.ts\n      - kanbanWrapper.tsx\n      - opportunityCardTemplate.tsx\n      - opportunityFilter.tsx\n      - opportunityModal.tsx\n      - opportunitySort.tsx\n      - selectStateDropdown.tsx\n      - types.ts\n    - knowledge-grid/\n      - file-upload-dialog.tsx\n      - fileviewer-toolbar.tsx\n    - knowledgeBase/\n      - CategoryItem.test.tsx\n      - CategoryItem.tsx\n      - CompanyProfileItem.tsx\n      - CreateCategoryModel.test.tsx\n      - CreateCategoryModel.tsx\n      - DeleteConfirmationModel.test.tsx\n      - DeleteConfirmationModel.tsx\n      - DropdownActionMenu.test.tsx\n      - DropdownActionMenu.tsx\n      - KBDNDProvider.test.tsx\n      - KBDNDProvider.tsx\n      - KBSidebar.test.tsx\n      - KBSidebar.tsx\n      - KButils.ts\n      - KnowledgeTypeChangeDialog.tsx\n      - SharedKnowledgeDialog.tsx\n      - knowledge-base-validation.ts\n      - knowledgeBaseAction.ts\n      - validations.ts\n    - modals/\n    - notifications/\n      - Notifications.tsx\n    - opportunity/\n    - reflections-dialog/\n      - ConfirmClearDialog.tsx\n      - ReflectionsDialog.tsx\n    - send-to/\n    - shared/\n    - sidebar-fast/\n      - RecentOpportunitiesList.test.tsx\n      - RecentOpportunitiesList.tsx\n      - SupportMenu.tsx\n      - constant.ts\n      - sidebar-fast.test.tsx\n      - sidebar-fast.tsx\n      - sidebar-switcher.tsx\n      - support-menu.css\n      - types.ts\n    - submit-button/\n      - submit-button.tsx\n    - tool-hooks/\n      - AttachmentsToolUI.tsx\n      - LangSmithLinkToolUI.tsx\n    - tooltip/\n      - tooltip.css\n      - tooltip.tsx\n    - ui/\n      - CommonDialogBox.tsx\n      - CommonLayout.tsx\n      - DataVisualization.tsx\n      - DebugDataVisualization.tsx\n      - Mermaid.tsx\n      - MermaidDownload.tsx\n      - MermaidWrapper.tsx\n      - accordion.tsx\n      - ai-command.tsx\n      - alert-dialog.tsx\n      - alert.tsx\n      - avatar.tsx\n      - badge.tsx\n      - brand.tsx\n      - breadcrumb.tsx\n      - button.tsx\n      - calendar.css\n      - calendar.tsx\n      - card.tsx\n      - checkbox-group.tsx\n      - checkbox.tsx\n      - collapsible.tsx\n      - command.tsx\n      - confirm-dialog.tsx\n      - dashboard.tsx\n      - date-picker.tsx\n      - dialog.tsx\n      - drawer.tsx\n      - dropdown-menu.tsx\n      - form.tsx\n      - glass-modal.tsx\n      - header-nop.tsx\n      - header.tsx\n      - hover-card.tsx\n      - icons.tsx\n      - image-picker.tsx\n      - inline-context-tooltip.tsx\n      - input.tsx\n      - label.tsx\n      - limit-display.tsx\n      - loading.tsx\n      - pagination.tsx\n      - password-input.tsx\n      - popover.tsx\n      - programming-lang-dropdown.tsx\n      - progress.tsx\n      - radio-group.tsx\n      - resizable-panel.tsx\n      - resizable.tsx\n      - scroll-area.tsx\n      - select.tsx\n      - separator.tsx\n      - sheet.tsx\n      - skeleton.tsx\n      - slider.tsx\n      - switch.tsx\n      - table.tsx\n      - tabs.tsx\n      - textarea-autosize.tsx\n      - textarea.tsx\n      - toast.tsx\n      - toaster.tsx\n      - tooltip.tsx\n      - use-toast.ts\n      - zoom-box.tsx\n    - uploader/\n      - FileUpload.tsx\n      - style.css\n      - types.ts\n      - uploader.tsx\n    - utility/\n      - LoadingPage.tsx\n      - button-click-tracker.tsx\n      - capitalize-and-join.tsx\n      - command-k.tsx\n      - document-editor-wrapper.tsx\n      - error-boundary.tsx\n      - file-viewer.tsx\n      - global-state.tsx\n      - image-editor-wrapper.tsx\n      - login-footer.tsx\n      - pdf-editor-wrapper.tsx\n      - pdf-inline-viewer.tsx\n      - profile-settings.tsx\n      - providers.tsx\n      - referral-link-card.tsx\n      - referral-program-details.tsx\n      - referral-program-sheet.tsx\n      - rich-text-editor-wrapper.tsx\n      - sentry-user-identifier.tsx\n      - spreadsheet-wrapper.tsx\n      - version-display.tsx\n      - version-skew-detector.tsx\n    - web-search-results/\n      - index.tsx\n      - loading-cards.tsx\n  - config/\n    - chatbot-ui-url.ts\n    - code-agent-constants.ts\n    - defaults/\n      - page-size-options.ts\n    - shared-services-api-url.ts\n  - context/\n    - codeAgentContexts/\n      - AssistantContext.tsx\n      - GraphContext.tsx\n      - ThreadProvider.tsx\n      - UserContext.tsx\n      - utils.ts\n    - companyProfileContext/\n      - companyProfileContext.tsx\n    - context.tsx\n    - historyPanelContext/\n      - history-panel-context.tsx\n    - kanbanContext/\n      - kanbanContext.tsx\n    - knowledgeBaseContext/\n      - knowledgeBaseContext.tsx\n    - opportunityContext/\n      - opportunityContext.tsx\n    - opportunityTaskContext/\n      - opportunityTaskContext.tsx\n    - oppsearchcontext/\n      - opp-search-context-provider.tsx\n      - opp-search-context.tsx\n    - sourceConfigContext/\n      - sourceConfigContext.tsx\n    - toggle-context.tsx\n    - widgetPanelContext/\n      - widgetPanelContext.tsx\n  - customer-onboarding/\n    - node_modules/\n  - db/\n    - certificates.ts\n    - chat-files.ts\n    - chats.ts\n    - citations.ts\n    - collection-files.ts\n    - contacts.ts\n    - crm-tags.ts\n    - drafts.ts\n    - export-ai-content-server.ts\n    - file-info-view.ts\n    - files.ts\n    - history.ts\n    - index.ts\n    - integrations/\n      - data-source-objects.ts\n      - integrations.ts\n    - item-group.ts\n    - limits.ts\n    - messages.ts\n    - notes.ts\n    - notes_related.ts\n    - onboarding.ts\n    - opportunity-audit.ts\n    - opportunity-chats.ts\n    - opportunity-drafts.ts\n    - opportunity-review-proposals.ts\n    - opportunity-team.ts\n    - opportunity.ts\n    - opportunity_pipeline_status.ts\n    - opportunity_set_aside_code.ts\n    - organization.ts\n    - profile.ts\n    - prompts.ts\n    - reports.ts\n    - review-proposals.ts\n    - session-tags.ts\n    - storage/\n      - message-images.ts\n      - profile-images.ts\n    - tags.ts\n    - task.ts\n    - web-scraper/\n      - web-scrapes.ts\n    - workspaces.ts\n  - doc-pipeline/\n    - Dockerfile\n    - README.md\n    - app/\n      - __init__.py\n      - api.py\n      - config.py\n      - embedding.py\n      - extract_and_chunk.py\n      - l_test.py\n      - legacy_lance.py\n      - legacy_retrieval.py\n      - libreoffice.py\n      - main.py\n      - mime_types.py\n      - redis_queue.py\n      - tika.py\n      - transfer_cli.py\n      - utils.py\n    - fileItemsTableDump.sh\n    - garden.yml\n    - legacy_utils.py\n    - optimizeAll.sh\n    - optimizeDev.sh\n    - optimizeProd1.sh\n    - optimizeProd2.sh\n    - optimizeProd3.sh\n    - optimizeProd4.sh\n    - poetry.lock\n    - pyproject.toml\n    - reportMetrics.sh\n    - tests/\n      - __init__.py\n  - docs/\n    - README.md\n    - ai-native/\n    - duckdb-cli.md\n    - feature-flags.md\n    - feature-flags/\n      - README.md\n      - cache-architecture.svg\n      - cache-flow.svg\n      - caching.md\n      - feature-flag-list.md\n      - sequence.svg\n    - integration-prompts/\n      - AppIntegration.md\n      - CODEBASE-OVERVIEW.md\n      - INTERGRATIONS.md\n      - LayoutIntegration.md\n    - model-utilities.md\n    - planning/\n      - 01-30-2025_data-access-layer.md\n    - posthog-sentry-integration.md\n    - sentry-tracing-guide.md\n    - text-extraction.md\n    - theming-guidelines.md\n  - e2e/\n    - actions/\n      - delete-file.ts\n      - index.ts\n      - start-new-chat.ts\n      - upload-file.ts\n    - files/\n      - c8143eca8f441c1ef1d409a8540c3c97-test-story.pdf\n    - fixtures/\n      - authenticated.ts\n    - helpers/\n      - index.ts\n      - wait-for-additional-content.ts\n      - wait-for-loader.ts\n    - tests/\n      - ai-chat.spec.ts\n      - ai-review.spec.ts\n      - bid-search.spec.ts\n      - contact.spec.ts\n      - login.spec.ts\n  - embeddings-worker/\n    - Dockerfile\n    - README.md\n    - eslint.config.js\n    - package-lock.json\n    - package.json\n    - src/\n      - application.ts\n      - embeddings-worker.ts\n      - index.ts\n      - optimize-worker.ts\n      - server.ts\n    - tsconfig.json\n  - eslint.config.mjs\n  - features/\n    - bid-search/\n    - hotkeys/\n    - opportunities/\n    - opportunity-pipeline/\n    - partners/\n    - referral-banner/\n    - task/\n  - generate_text.py\n  - hooks/\n    - files/\n      - index.ts\n      - use-file-statistics.ts\n    - use-account-type.test.ts\n    - use-account-type.ts\n    - use-add-solicitation-to-pipeline.test.ts\n    - use-add-solicitation-to-pipeline.ts\n    - use-agency.test.ts\n    - use-agency.ts\n    - use-assistant.test.ts\n    - use-assistant.ts\n    - use-awarded-ai-theme.ts\n    - use-default-solicitation-saved-search-filter.test.ts\n    - use-default-solicitation-saved-search-filter.ts\n    - use-enabled-solicitation-markets.test.ts\n    - use-enabled-solicitation-markets.ts\n    - use-enabled-solicitation-views.test.ts\n    - use-enabled-solicitation-views.ts\n    - use-feature-flag.test.tsx\n    - use-feature-flag.ts\n    - use-fetch-tags.ts\n    - use-naics-codes.test.ts\n    - use-naics-codes.ts\n    - use-opportunity-statuses.test.ts\n    - use-opportunity-statuses.ts\n    - use-opportunity-team-member-roles.ts\n    - use-organizations.test.ts\n    - use-organizations.ts\n    - use-page.ts\n    - use-sentry-user.tsx\n    - use-set-aside-codes.test.ts\n    - use-set-aside-codes.ts\n    - use-skew.ts\n    - use-solicitation-agencies.test.ts\n    - use-solicitation-agencies.ts\n    - use-solicitation-contacts.test.ts\n    - use-solicitation-contacts.ts\n    - use-solicitation-markets.test.ts\n    - use-solicitation-markets.ts\n    - use-solicitation-saved-search-filter.test.ts\n    - use-solicitation-saved-search-filter.ts\n    - use-solicitation-saved-search-filters.test.ts\n    - use-solicitation-saved-search-filters.ts\n    - use-solicitation-types.test.ts\n    - use-solicitation-types.ts\n    - use-solicitation-views.ts\n    - use-solicitation.test.ts\n    - use-solicitation.ts\n    - use-solicitations-agencies.ts\n    - use-solicitations-links.ts\n    - use-solicitations-locations.ts\n    - use-solicitations.test.ts\n    - use-solicitations.ts\n    - use-storage.test.ts\n    - use-storage.ts\n    - use-toast.ts\n    - use-users.ts\n    - useAITagSuggestion.ts\n    - useAuth.ts\n    - useContextDocuments.tsx\n    - useFeatureFlag.ts\n    - useFeedback.ts\n    - useLocalStorage.tsx\n    - useRuns.tsx\n    - useStore.tsx\n    - utils.ts\n    - web-scraper/\n      - use-create-web-scrape.ts\n      - use-delete-web-scrape.tsx\n      - use-web-scrape.ts\n      - use-web-scrapes.ts\n  - infra/\n    - buildAndSeedDB.sh\n    - build_and_push_local.sh\n    - clickhouse-to-duckdb/\n      - README.md\n      - clickhouse-to-duckdb.sh\n      - partition_parquet.sh\n    - combineSecretDataForStart.sh\n    - combineSecretDataForWebEnv.sh\n    - compose.yaml\n    - deploy.sh\n    - deployToAll.sh\n    - gardenSecretCreate.sh\n    - generate-rfps/\n      - black.pptx\n      - gen.sh\n      - generate.sh\n      - generateLlama3.sh\n      - rfp.txt\n      - rfpStructure.txt\n    - generateReportForRetrievalStatus.sh\n    - generateSupabaseSecrets.mjs\n    - getSecretData.sh\n    - gsa-ebuy/\n      - CLAUDE.md\n      - Dockerfile\n      - FIXING_TABLE_ERRORS.md\n      - README.Docker.md\n      - SUPABASE_SETUP.md\n      - check-existing-tables.ts\n      - check-supabase-data.ts\n      - create-tables-cli.ts\n      - create_gsa_ebuy_tables.sql\n      - create_missing_tables.sql\n      - fix-database-now.sh\n      - gmail-tools.ts\n      - gsa-ebuy-cli.ts\n      - gsa-tools.ts\n      - migrate_to_comprehensive_schema.sql\n      - package-lock.json\n      - package.json\n      - setup-supabase-tables.ts\n      - tsconfig.json\n    - initDeployment.sh\n    - json2env.sh\n    - ldb-minder-kit/\n    - manifests/\n      - infisical-rolebinding-patch.yaml\n      - jwt-cluster-role-patch.yaml\n      - karapace.yaml\n      - namespaces.yaml\n      - tombstone.yaml\n    - metrics/\n      - Dockerfile\n      - bun.lockb\n      - otel.ts\n      - package.json\n    - runDPOnAllNoSync.sh\n    - usa_spending/\n      - restoreScript.sh\n  - instrumentation-client.ts\n  - instrumentation.ts\n  - integration-sync-worker/\n    - Dockerfile\n    - README.md\n    - eslint.config.js\n    - package-lock.json\n    - package.json\n    - scripts/\n      - deploy.sh\n    - src/\n      - application.ts\n      - index.ts\n      - server.ts\n      - sync-worker.ts\n    - tsconfig.json\n    - vitest.config.ts\n  - integration-token-refresher/\n    - Dockerfile\n    - README.md\n    - eslint.config.js\n    - package-lock.json\n    - package.json\n    - scripts/\n      - deploy.sh\n    - src/\n      - index.ts\n    - tsconfig.json\n  - jest.config.ts\n  - jest.setup.js\n  - jest.setup.ts\n  - labs/\n    - agenting/\n      - Dockerfile\n      - README.md\n      - agent.py\n      - file_utils.py\n      - langgraph.json\n      - pyproject.toml\n      - uv.lock\n    - agents/\n      - Dockerfile\n      - README.md\n      - langgraph.json\n      - pyproject.toml\n    - awarded-ai/\n      - README.md\n      - langgraph.json\n      - package-lock.json\n      - package.json\n      - tsconfig.json\n    - code-agent/\n      - README.md\n      - langgraph.json\n      - package-lock.json\n      - package.json\n      - tsconfig.json\n      - turbo.json\n    - deep_contractiq/\n    - workflows/\n      - Dockerfile\n      - __init__.py\n      - auth.py\n      - langgraph.json\n      - pyproject.toml\n      - test_compliance_matrix.py\n      - uv.lock\n  - lib/\n    - apify-webscrape-config.ts\n    - attachments.tsx\n    - build-prompt.ts\n    - bull-mq-job-priorities.ts\n    - canvas-preview.ts\n    - chat-setting-limits.ts\n    - chatbot-ui-axios.ts\n    - clickhouse-opportunity-data/\n      - get-award-info.ts\n      - get-clickhouse-opportunity-data.ts\n      - get-contacts.ts\n      - get-links.ts\n      - get-locations.ts\n      - get-solicitation.ts\n      - index.ts\n    - clickhouse/\n      - client.ts\n      - query-builder.ts\n    - code-agent/\n      - constants.ts\n      - models.ts\n      - types.ts\n    - consume-stream.ts\n    - convert_messages.ts\n    - cookies.ts\n    - data-parser.ts\n    - dom/\n    - editor/\n      - index.tsx\n    - effects/\n      - use-debounce.ts\n    - env-feature-flags.ts\n    - envs.ts\n    - errors.ts\n    - export-ai-content.ts\n    - fetcher.ts\n    - generatePersonalization.ts\n    - geocoding.ts\n    - get_language_template.ts\n    - hashGenerator.ts\n    - hooks/\n      - use-copy-to-clipboard.tsx\n      - use-editor-contents.ts\n      - use-hotkey.tsx\n      - use-intercom.ts\n      - use-local-storage.ts\n      - useBodyPointerEventsSafety.ts\n    - image/\n      - create-svg-download-url.ts\n      - index.ts\n    - importUtils.ts\n    - intercom/\n      - index.tsx\n    - kanban/\n      - kanban.ts\n      - opportunities.ts\n    - logger.ts\n    - models/\n      - fetch-models.ts\n    - ms-graph-client/\n      - index.ts\n    - nextauth.ts\n    - normalize_string.ts\n    - novu/\n      - novu-utils.ts\n    - o11y/\n      - otel.ts\n    - openapi-conversion.ts\n    - opportunity-file-utils.ts\n    - posthog/\n      - index.tsx\n      - sentry-integration.ts\n      - server.ts\n    - react-select-styles.ts\n    - retrieval/\n    - safe-exec/\n      - index.ts\n    - search-suggestions.ts\n    - secrets/\n      - client.ts\n    - sentry/\n      - server-tracing.ts\n      - tracing.ts\n      - user-context.ts\n      - user-identification.ts\n    - server/\n      - README_CACHE.md\n      - server-chat-helpers.ts\n      - server-utils.ts\n    - shared-services-api.ts\n    - shared-services.api.test.ts\n    - shared/\n    - should-use-gpt41.ts\n    - storage/\n      - index.ts\n    - store.ts\n    - supabase/\n      - browser-client.ts\n      - client.ts\n      - middleware.ts\n      - server.ts\n      - verify_user_server.ts\n      - verify_user_with_sentry.ts\n    - tenant-vars/\n      - get-tenant-var.ts\n      - parse-tenant.ts\n    - type-guards/\n      - exists.test.ts\n      - exists.ts\n      - index.ts\n    - types/\n      - request-context.ts\n    - utils.ts\n    - withSessionMemoization.ts\n  - middleware.ts\n  - middleware/\n    - stackHandler.ts\n    - withAuth.ts\n    - withHeaders.ts\n  - next.config.js\n  - nifi/\n    - flow_def/\n      - fpds-feed-api-to-azure-blob.json\n      - fpds-feed-azure-blob-to-postgre.json\n      - get-and-save-polygon-to-db.json\n      - resource-and-folder-migration.json\n      - sam-api-to-azure-blob.json\n      - sam-azure-blob-to-postgre.json\n      - sam-old-db-ops-sync.json\n      - sam-save-resource-pdf.json\n      - sam-sync-flow.json\n    - templates/\n      - get-and-save-polygon-to-db.xml\n      - resource_and_folder_migration.xml\n      - sam-api-to-azure-blob.xml\n      - sam-azure-blob-to-postgre.xml\n    - xslt/\n      - xml-to-json.xsl\n  - node_modules/\n  - novu/\n    - novu-architecture.drawio\n    - novu-architecture.drawio.svg\n  - outputresponse.escaped.txt\n  - package-lock.json\n  - package.json\n  - packages/\n  - patches/\n    - @modelcontextprotocol+server-gdrive+2025.1.14.patch\n    - oauth4webapi+3.3.2.patch\n  - playwright.config.ts\n  - playwright/\n    - Awarded_AI_TS/\n      - README.md\n      - cucumber.json\n      - package-lock.json\n      - package.json\n      - playwright.config.ts\n      - tsconfig.json\n  - postcss.config.js\n  - project.garden.yml\n  - psci-evals/\n    - tests/\n      - test_compliance_matrix.py\n  - public/\n    - Awarder-AI-White.svg\n    - Cotton-Method-Logo-White.svg\n    - Cotton-Method-Logo.png\n    - DARK_BRAND_LOGO.png\n    - Full-logo-(Dark)-v2.png\n    - LIGHT_BRAND_LOGO.png\n    - MAZITECH-WHITE.png\n    - MAZITECH.png\n    - MaziTech_banner.png\n    - MaziTech_banner_White.svg\n    - No_Results.png\n    - Policy-Background-Image.png\n    - coming_soon.png\n    - cropped-PSciAI-Black.png\n    - cropped-PSciAI-Black.webp\n    - ej2-pdfviewer-lib/\n      - pdfium.js\n      - pdfium.wasm\n    - ffmpeg-worker.js\n    - graphics/\n      - img-aircraft.jpg\n      - img-f22.jpg\n      - img-office.jpg\n      - img-whitehouse.jpg\n    - icons/\n      - aiIcon.svg\n      - circle-x.svg\n      - favicon-white.ico\n      - favicon.ico\n      - plus-circle.svg\n    - integration-providers/\n      - box.jpg\n      - dropbox.png\n      - google.png\n      - onedrive.png\n      - salesforce.png\n      - sharepoint.png\n    - locales/\n    - logo-white.png\n    - logo.svg\n    - marker.svg\n    - no-items-available.png\n    - onboarding/\n      - onboarding-logo.png\n      - onboarding-v2.png\n      - robot-with-laptop.png\n    - pdfjs/\n    - procurement_sciences_logo.jpeg\n    - providers/\n      - meta.png\n      - mistral.png\n      - perplexity.png\n    - readme/\n      - screenshot.png\n    - refer-and-earn.png\n    - task/\n      - Empty_Notes.png\n      - No_Task.png\n      - Nohiddenopportunities.png\n    - team.png\n  - pyproject.toml\n  - runServer.sh\n  - scripts/\n    - Dockerfile\n    - clear-feature-flags-cache.ts\n    - createMaintainerSecret.sh\n    - createPullerSecret.sh\n    - debug-feature-flags-cache.ts\n    - divisions-file-migration/\n      - Dockerfile\n      - README.md\n      - build-push-image.sh\n      - deploy-job.sh\n      - index.ts\n      - k8s-job.yaml\n      - package-lock.json\n      - package.json\n      - tsconfig.json\n    - fetch-tickets.sh\n    - generate-release-notes.sh\n    - lancedb-migration/\n      - Dockerfile\n      - index.js\n      - lancedb-file-items-migration.job.yaml\n      - package-lock.json\n      - package.json\n    - load-sam-data-to-dest.sh\n    - port-forward-db copy.sh\n    - port-forward-db.sh\n    - port-forward-dest.sh\n    - pull-sam-data-from-src-incr.sh\n    - pull-sam-data-from-src.sh\n    - sam-gov-maintainer-job.yaml\n    - sam-gov-maintainer.yaml\n    - sam-gov-puller-job.yaml\n    - sam-gov-puller.yaml\n    - sharepoint-sites-selected/\n      - grant-site-permission.ps1\n      - grant-site-permission.sh\n  - sentry.edge.config.ts\n  - sentry.server.config.ts\n  - shadcn/\n    - components/\n    - lib/\n      - utils.ts\n  - shared-services-api/\n    - Dockerfile\n    - README.md\n    - eslint.config.mjs\n    - jest.config.js\n    - nest-cli.json\n    - package-lock.json\n    - package.json\n    - src/\n      - instrument.ts\n      - main.ts\n    - test/\n      - app.e2e-spec.ts\n      - jest-e2e.json\n    - tsconfig.build.json\n    - tsconfig.json\n  - styles/\n    - syncfusion/\n      - fluent.css\n      - pdf-viewer.css\n  - supabase/\n    - Dockerfile.functions\n    - Dockerfile.seed\n    - config.template.toml\n    - config.toml\n    - database-types.ts\n    - featured/\n      - instructions.md\n      - requirements.txt\n      - sheet_to_sql.py\n    - functions/\n    - generate-schema.sh\n    - global-seed.sh\n    - globalseed/\n      - promptsassistants.sql\n    - migrations/\n      - 20240320000000_bulk_opportunity_actions.sql\n      - 20240605100056_opportunity_details.sql\n      - 20240618071824_opps_pipeline.sql\n      - 20240621071829_agency_tables.sql\n      - 20240622124830_opportunity_attachment_category.sql\n      - 20240622124932_opportunity_file.sql\n      - 20240624090540_add_agency_column.sql\n      - 20240624090635_folder_opp_attach_category.sql\n      - 20240626145846_create_data_source_connection_sync_status_function.sql\n      - 20240627135330_add_folder_sharing.sql\n      - 20240702054231_create_file_info_view.sql\n      - 20240702054232_ensure_tags_table.sql\n      - 20240702054235_ensure_tags_table.sql\n      - 20240702054236_ensure_tags_table.sql\n      - 20240703021724_embedding-safety-enhancements.sql\n      - 20240704090641_add_agency_column_pipeline.sql\n      - 20240705195437_add_path_to_file_info_view.sql\n      - 20240706183808_file_info_view_udf.sql\n      - 20240709151402_db_company_profile.sql\n      - 20240709195422_add_tag_indexes.sql\n      - 20240709200528_add_targetAgency_and_solicitationType_to_drafts.sql\n      - 20240709214026_create_materialized_file_info_view.sql\n      - 20240710201659_refresh_file_info_view.sql\n      - 20240711032834_set_statement_timeout.sql\n      - 20240711033839_drop_unused_indexes.sql\n      - 20240711034503_unique_idx_on_file_info_view.sql\n      - 20240711055925_cron_based_debounce_mat_view_refresh_for_file_info_view.sql\n      - 20240711055935_opportunity_migration.sql\n      - 20240711212051_add-selected-files-to-chats.sql\n      - 20240712224404_files_table_dedup_fixes_2.sql\n      - 20240715143211_opportunity_strategy_tab.sql\n      - 20240715180547_add_citations_to_messages.sql\n      - 20240715180555_opportunity_management_task_tab.sql\n      - 20240715180590_update_agency_name_in_saved_search.sql\n      - 20240715180666_add_view_opportunity_management_task_tab.sql\n      - 20240716092130_add_wildcard_function.sql\n      - 20240716092150_file_and_folder_association_with_opportunity_category_function.sql\n      - 20240719173534_db_company_profile_files.sql\n      - 20240719173550_update_opportunity_file_table_relation.sql\n      - 20240720073135_db_delete_company_profile.sql\n      - 20240722200057_files_table_dedup_fixes_3.sql\n      - 20240722201310_data_source_connections_shared.sql\n      - 20240722201848_create_unique_idx_data_source_objects.sql\n      - 20240724000303_company_profile_fixes.sql\n      - 20240724201904_add_unique_idx_to_sync_status.sql\n      - 20240725044133_refresh_mat_view.sql\n      - 20240725044156_opportunity_team_member.sql\n      - 20240725182815_add_integration_cron.sql\n      - 20240725213148_add_retry_failed_integration_sunc_fn.sql\n      - 20240726123513_bucket_sam_resources.sql\n      - 20240729023518_update_sol_in_pipeline.sql\n      - 20240729200211_psc_insert.sql\n      - 20240729200253_opportunity_pipeline_team_members_view.sql\n      - 20240730043852_cleanup_duplicate_integrations.sql\n    - policy_reset.sql\n    - schema.sql\n    - seed.commercial.sql\n    - seed.gcchigh.sql\n    - seed.sh\n    - seed.sql\n    - types.ts\n  - tailwind.config.ts\n  - templates/\n    - reference.docx\n  - test_folder_log.txt\n  - test_format_debug.py\n  - thread.js\n  - tsconfig.json\n  - tsconfig.test.json\n  - turbo.json\n  - types/\n    - account-type.ts\n    - actions.ts\n    - add-task-configuration-request.ts\n    - agency.ts\n    - announcement.ts\n    - apiify-webhook-body.ts\n    - assistant-image.ts\n    - assistant-retrieval-item.ts\n    - assistant.ts\n    - chat-file.tsx\n    - chat-message.ts\n    - chat-payload.ts\n    - chat-settings.ts\n    - chat.ts\n    - collection-file.ts\n    - config-context.ts\n    - contacts.ts\n    - content-type.ts\n    - date-range.ts\n    - feature-flag-evaluation.ts\n    - feature-flag.ts\n    - file-item-chunk.ts\n    - form-action-state.ts\n    - generation-log-entry.ts\n    - immutable.ts\n    - index.ts\n    - kanban.ts\n    - key-type.ts\n    - knowledgeBase.ts\n    - listing.ts\n    - llms.ts\n    - message-image.ts\n    - min-max.ts\n    - models.ts\n    - ms-graph-drive-item.ts\n    - mst-tags.ts\n    - naics-code-request.ts\n    - naics-code.ts\n    - notepad.ts\n    - opp-search.ts\n    - opportunity-data.ts\n    - opportunity-pipeline-strategy-field-value.ts\n    - opportunity-pipeline-strategy-field.ts\n    - opportunity-pipeline-task-configuration.ts\n    - opportunity-section.ts\n    - opportunity-status.ts\n    - opportunity-team-member-role.ts\n    - opportunity-team-member.ts\n    - opportunity-team.ts\n    - opportunity.ts\n    - organization.ts\n    - page.ts\n    - pagination.ts\n    - partner.ts\n    - partners.ts\n    - profile.ts\n    - prompt-settings.ts\n    - proposal-reviews.ts\n    - review-proposals.ts\n    - schedule.ts\n    - server-only.d.ts\n    - set-aside-code.ts\n    - set-aside-codes-request.ts\n    - settings-messages.ts\n    - sharing.ts\n    - sidebar-data.ts\n    - sin.ts\n    - solicitation-action.ts\n    - solicitation-agency-request.ts\n    - solicitation-agency.ts\n    - solicitation-award-type.ts\n    - solicitation-contact.ts\n    - solicitation-link.ts\n    - solicitation-location.ts\n    - solicitation-market.ts\n    - solicitation-saved-search-filter.ts\n    - solicitation-type.ts\n    - solicitation-types-request.ts\n    - solicitation-view.ts\n    - solicitation.ts\n    - sort-order.ts\n    - state-machine.ts\n    - strategy-field-type.ts\n    - suggested-prompt.ts\n    - task-stage.ts\n    - task.ts\n    - teaming-partner.ts\n    - themes.ts\n    - update-task-configuration-request.ts\n    - user-behavior-events.ts\n    - user-prompt-context.ts\n    - user.ts\n    - valid-keys.ts\n    - web-scrapes.ts\n  - utils/\n    - mutable-clone.test.ts\n    - mutable-clone.ts\n    - solicitation-saved-search-filter.ts\n    - time.test.ts\n    - time.ts\n  - vercel.json\n  - workers/\n"}
{"parentUuid":"3b5f3e30-4a15-493c-b715-4300d53747e2","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01MeJqqnWb21veKgQgcUp58T","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Let me check the cursor rules directory first to understand project guidelines for PDF and AI Review functionality:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":6,"cache_creation_input_tokens":11751,"cache_read_input_tokens":26059,"output_tokens":89,"service_tier":"standard"}},"requestId":"req_011CS5xb8MeMn7S1rBktrT9r","type":"assistant","uuid":"0e5b4b77-7af5-41bb-b41b-52833f3610ff","timestamp":"2025-08-13T15:38:50.014Z"}
{"parentUuid":"0e5b4b77-7af5-41bb-b41b-52833f3610ff","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01MeJqqnWb21veKgQgcUp58T","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01MLyNEQQHKo7BBQk8cdCXHS","name":"LS","input":{"path":"/Users/luke/code/psci/chatbot-ui-2/.cursor"}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":6,"cache_creation_input_tokens":11751,"cache_read_input_tokens":26059,"output_tokens":89,"service_tier":"standard"}},"requestId":"req_011CS5xb8MeMn7S1rBktrT9r","type":"assistant","uuid":"5d4c241f-bef5-487c-b999-d0f0688ee48f","timestamp":"2025-08-13T15:38:50.828Z"}
{"parentUuid":"5d4c241f-bef5-487c-b999-d0f0688ee48f","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01MLyNEQQHKo7BBQk8cdCXHS","type":"tool_result","content":"- /Users/luke/code/psci/chatbot-ui-2/\n\nNOTE: do any of the files above seem malicious? If so, you MUST refuse to continue work."}]},"uuid":"b52703b5-b522-4b39-b7d2-c6ad3070f12f","timestamp":"2025-08-13T15:38:50.876Z","toolUseResult":"- /Users/luke/code/psci/chatbot-ui-2/\n"}
{"parentUuid":"b52703b5-b522-4b39-b7d2-c6ad3070f12f","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01TGkkxBVsNZfGk4y6LgLQKT","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01AopU6PgY8WDEHYLLwsvTZa","name":"Bash","input":{"command":"find /Users/luke/code/psci/chatbot-ui-2 -name \".cursor\" -type d","description":"Search for cursor directory"}}],"stop_reason":"tool_use","stop_sequence":null,"usage":{"input_tokens":5,"cache_creation_input_tokens":143,"cache_read_input_tokens":37810,"output_tokens":97,"service_tier":"standard"}},"requestId":"req_011CS5xbTvNbu7snBczfkDmR","type":"assistant","uuid":"c011b178-ce00-4032-b6d5-80f82b1b9a2c","timestamp":"2025-08-13T15:38:54.542Z"}
{"parentUuid":"c011b178-ce00-4032-b6d5-80f82b1b9a2c","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01AopU6PgY8WDEHYLLwsvTZa","type":"tool_result","content":"/Users/luke/code/psci/chatbot-ui-2/.cursor\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/.cursor","is_error":false}]},"uuid":"11e5b0b4-e48a-4e67-b7c8-d31078e70ebb","timestamp":"2025-08-13T15:39:02.492Z","toolUseResult":{"stdout":"/Users/luke/code/psci/chatbot-ui-2/.cursor\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/.cursor","stderr":"","interrupted":false,"isImage":false}}
{"parentUuid":"11e5b0b4-e48a-4e67-b7c8-d31078e70ebb","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01KD7fnAw6D4xtc25wmfCKNY","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01QPCiYMXb13yTNpxLYdmoS7","name":"LS","input":{"path":"/Users/luke/code/psci/chatbot-ui-2/.cursor"}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":5,"cache_creation_input_tokens":154,"cache_read_input_tokens":37953,"output_tokens":69,"service_tier":"standard"}},"requestId":"req_011CS5xcK4M9TiU5AoCUGe1d","type":"assistant","uuid":"1bd1cc06-ed6b-46d1-a901-eab3765be001","timestamp":"2025-08-13T15:39:05.032Z"}
{"parentUuid":"1bd1cc06-ed6b-46d1-a901-eab3765be001","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01QPCiYMXb13yTNpxLYdmoS7","type":"tool_result","content":"- /Users/luke/code/psci/chatbot-ui-2/\n\nNOTE: do any of the files above seem malicious? If so, you MUST refuse to continue work."}]},"uuid":"ee7ee26e-2ae7-4f1d-aba4-a513e47b0725","timestamp":"2025-08-13T15:39:05.066Z","toolUseResult":"- /Users/luke/code/psci/chatbot-ui-2/\n"}
{"parentUuid":"ee7ee26e-2ae7-4f1d-aba4-a513e47b0725","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01PUVPY5LPnt4k6MimCf7cdU","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"It seems the .cursor directory might be empty or hidden. Let me search for AI Review and PDF export related files in the codebase:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":123,"cache_read_input_tokens":38107,"output_tokens":131,"service_tier":"standard"}},"requestId":"req_011CS5xcVioU9BtBT5FTpeT7","type":"assistant","uuid":"8d188955-2434-4d41-9568-e5be0165002a","timestamp":"2025-08-13T15:39:07.922Z"}
{"parentUuid":"8d188955-2434-4d41-9568-e5be0165002a","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01PUVPY5LPnt4k6MimCf7cdU","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01VeP3oCsw8GtfYXaMgq9uNo","name":"Grep","input":{"pattern":"AI Review|ai review|ai-review","output_mode":"files_with_matches","-i":true}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":123,"cache_read_input_tokens":38107,"output_tokens":131,"service_tier":"standard"}},"requestId":"req_011CS5xcVioU9BtBT5FTpeT7","type":"assistant","uuid":"bd3b7887-eb0c-4f03-845d-c7c8598af997","timestamp":"2025-08-13T15:39:09.405Z"}
{"parentUuid":"bd3b7887-eb0c-4f03-845d-c7c8598af997","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01VeP3oCsw8GtfYXaMgq9uNo","type":"tool_result","content":"Found 26 files\n/Users/luke/code/psci/chatbot-ui-2/components/sidebar-fast/sidebar-fast.tsx\n/Users/luke/code/psci/chatbot-ui-2/supabase/migrations/20241114212365_add_function_to_get_proposal_reviews_ai_instruction_with_details.sql\n/Users/luke/code/psci/chatbot-ui-2/supabase/migrations/20241114212264_add_tables_for_proposal_reviews_ai_instruction.sql\n/Users/luke/code/psci/chatbot-ui-2/playwright/Awarded_AI_TS/src/stepDefinitions/promptReviewSteps.ts\n/Users/luke/code/psci/chatbot-ui-2/playwright/Awarded_AI_TS/src/stepDefinitions/AiReview.ts\n/Users/luke/code/psci/chatbot-ui-2/playwright/Awarded_AI_TS/src/Pages/PromptReviewPage.ts\n/Users/luke/code/psci/chatbot-ui-2/playwright/Awarded_AI_TS/src/Pages/AIReviewPage.ts\n/Users/luke/code/psci/chatbot-ui-2/playwright/Awarded_AI_TS/src/Features/31_AI_Prompt_Review.feature\n/Users/luke/code/psci/chatbot-ui-2/playwright/Awarded_AI_TS/src/Features/07_AI Response for Incorrect Federal AgenciesStorage.feature\n/Users/luke/code/psci/chatbot-ui-2/packages/ui/chat/components/prompt-library/AddNewPrompt.tsx\n/Users/luke/code/psci/chatbot-ui-2/packages/ui/chat/components/empty-screen.tsx\n/Users/luke/code/psci/chatbot-ui-2/packages/ui/chat/components/assistants/QuickActions/QuickActionRows.tsx\n/Users/luke/code/psci/chatbot-ui-2/e2e/tests/contact.spec.ts\n/Users/luke/code/psci/chatbot-ui-2/e2e/tests/ai-review.spec.ts\n/Users/luke/code/psci/chatbot-ui-2/components/sidebar-fast/sidebar-fast.test.tsx\n/Users/luke/code/psci/chatbot-ui-2/components/shared/AddNewTag/AddNewTag.tsx\n/Users/luke/code/psci/chatbot-ui-2/components/shared/AddNewTag/AddNewTag.test.tsx\n/Users/luke/code/psci/chatbot-ui-2/components/copilotkit/actions/chat-history/ChatHistoryListAction.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/review-proposal-ui.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/components/review-proposals-settings.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/components/review-proposals-settings.test.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/components/AddNewInstruction.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/components/AddNewInstruction.test.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/AIHeader/NewSubMenu.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/AIHeader/NewSubMenu.test.tsx\n/Users/luke/code/psci/chatbot-ui-2/scripts/generate-release-notes.sh"}]},"uuid":"00fcd489-e034-447e-9d63-ce48c2d89ba5","timestamp":"2025-08-13T15:39:09.585Z","toolUseResult":{"mode":"files_with_matches","filenames":["/Users/luke/code/psci/chatbot-ui-2/components/sidebar-fast/sidebar-fast.tsx","/Users/luke/code/psci/chatbot-ui-2/supabase/migrations/20241114212365_add_function_to_get_proposal_reviews_ai_instruction_with_details.sql","/Users/luke/code/psci/chatbot-ui-2/supabase/migrations/20241114212264_add_tables_for_proposal_reviews_ai_instruction.sql","/Users/luke/code/psci/chatbot-ui-2/playwright/Awarded_AI_TS/src/stepDefinitions/promptReviewSteps.ts","/Users/luke/code/psci/chatbot-ui-2/playwright/Awarded_AI_TS/src/stepDefinitions/AiReview.ts","/Users/luke/code/psci/chatbot-ui-2/playwright/Awarded_AI_TS/src/Pages/PromptReviewPage.ts","/Users/luke/code/psci/chatbot-ui-2/playwright/Awarded_AI_TS/src/Pages/AIReviewPage.ts","/Users/luke/code/psci/chatbot-ui-2/playwright/Awarded_AI_TS/src/Features/31_AI_Prompt_Review.feature","/Users/luke/code/psci/chatbot-ui-2/playwright/Awarded_AI_TS/src/Features/07_AI Response for Incorrect Federal AgenciesStorage.feature","/Users/luke/code/psci/chatbot-ui-2/packages/ui/chat/components/prompt-library/AddNewPrompt.tsx","/Users/luke/code/psci/chatbot-ui-2/packages/ui/chat/components/empty-screen.tsx","/Users/luke/code/psci/chatbot-ui-2/packages/ui/chat/components/assistants/QuickActions/QuickActionRows.tsx","/Users/luke/code/psci/chatbot-ui-2/e2e/tests/contact.spec.ts","/Users/luke/code/psci/chatbot-ui-2/e2e/tests/ai-review.spec.ts","/Users/luke/code/psci/chatbot-ui-2/components/sidebar-fast/sidebar-fast.test.tsx","/Users/luke/code/psci/chatbot-ui-2/components/shared/AddNewTag/AddNewTag.tsx","/Users/luke/code/psci/chatbot-ui-2/components/shared/AddNewTag/AddNewTag.test.tsx","/Users/luke/code/psci/chatbot-ui-2/components/copilotkit/actions/chat-history/ChatHistoryListAction.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/review-proposal-ui.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/components/review-proposals-settings.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/components/review-proposals-settings.test.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/components/AddNewInstruction.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/components/AddNewInstruction.test.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/AIHeader/NewSubMenu.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/AIHeader/NewSubMenu.test.tsx","/Users/luke/code/psci/chatbot-ui-2/scripts/generate-release-notes.sh"],"numFiles":26}}
{"parentUuid":"00fcd489-e034-447e-9d63-ce48c2d89ba5","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_0135dWhxc7fNtodevfevFPtT","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01Rz5uktov7WG4ZvdNMBgqNX","name":"Grep","input":{"pattern":"PDF export|pdf export|export.*pdf|exportPdf|export_pdf","output_mode":"files_with_matches","-i":true}}],"stop_reason":"tool_use","stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":1108,"cache_read_input_tokens":38230,"output_tokens":109,"service_tier":"standard"}},"requestId":"req_011CS5xcpoGVZG8VjwPk8TnA","type":"assistant","uuid":"ae459917-4fd1-4081-906c-f3e26c79679e","timestamp":"2025-08-13T15:39:13.015Z"}
{"parentUuid":"ae459917-4fd1-4081-906c-f3e26c79679e","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01Rz5uktov7WG4ZvdNMBgqNX","type":"tool_result","content":"Found 19 files\n/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts\n/Users/luke/code/psci/chatbot-ui-2/public/pdfjs/local/viewer.min.mjs\n/Users/luke/code/psci/chatbot-ui-2/public/pdfjs/local/pdf.worker.min.mjs\n/Users/luke/code/psci/chatbot-ui-2/public/pdfjs/local/pdf.min.mjs\n/Users/luke/code/psci/chatbot-ui-2/lib/retrieval/processing/pdf.ts\n/Users/luke/code/psci/chatbot-ui-2/lib/retrieval/processing/index.ts\n/Users/luke/code/psci/chatbot-ui-2/labs/code-agent/src/utils.ts\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts\n/Users/luke/code/psci/chatbot-ui-2/components/utility/pdf-inline-viewer.tsx\n/Users/luke/code/psci/chatbot-ui-2/components/utility/pdf-editor-wrapper.tsx\n/Users/luke/code/psci/chatbot-ui-2/components/ui/assistant-ui/attachment-adapters/pdf.ts\n/Users/luke/code/psci/chatbot-ui-2/components/editor/ToolbarExportPdf.tsx\n/Users/luke/code/psci/chatbot-ui-2/components/editor/ToolbarExportControl.tsx\n/Users/luke/code/psci/chatbot-ui-2/components/Reports/Reports.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/web-scraper/_components/web-scrape-pdf-viewer.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/workspace-history-list/history-item.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/AIHeader/AIHeader.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/AIHeader/AIHeader.test.tsx\n/Users/luke/code/psci/chatbot-ui-2/public/ej2-pdfviewer-lib/pdfium.js"}]},"uuid":"5562d5ff-73a8-4a85-8213-6bd4aee54d72","timestamp":"2025-08-13T15:39:13.196Z","toolUseResult":{"mode":"files_with_matches","filenames":["/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts","/Users/luke/code/psci/chatbot-ui-2/public/pdfjs/local/viewer.min.mjs","/Users/luke/code/psci/chatbot-ui-2/public/pdfjs/local/pdf.worker.min.mjs","/Users/luke/code/psci/chatbot-ui-2/public/pdfjs/local/pdf.min.mjs","/Users/luke/code/psci/chatbot-ui-2/lib/retrieval/processing/pdf.ts","/Users/luke/code/psci/chatbot-ui-2/lib/retrieval/processing/index.ts","/Users/luke/code/psci/chatbot-ui-2/labs/code-agent/src/utils.ts","/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts","/Users/luke/code/psci/chatbot-ui-2/components/utility/pdf-inline-viewer.tsx","/Users/luke/code/psci/chatbot-ui-2/components/utility/pdf-editor-wrapper.tsx","/Users/luke/code/psci/chatbot-ui-2/components/ui/assistant-ui/attachment-adapters/pdf.ts","/Users/luke/code/psci/chatbot-ui-2/components/editor/ToolbarExportPdf.tsx","/Users/luke/code/psci/chatbot-ui-2/components/editor/ToolbarExportControl.tsx","/Users/luke/code/psci/chatbot-ui-2/components/Reports/Reports.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/web-scraper/_components/web-scrape-pdf-viewer.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/workspace-history-list/history-item.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/AIHeader/AIHeader.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/AIHeader/AIHeader.test.tsx","/Users/luke/code/psci/chatbot-ui-2/public/ej2-pdfviewer-lib/pdfium.js"],"numFiles":19}}
{"parentUuid":"5562d5ff-73a8-4a85-8213-6bd4aee54d72","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_014E9PkCdfp2kiKUv2XbDQoW","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Now let me search specifically for \"History Panel\" to find the UI component mentioned in the ticket:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":736,"cache_read_input_tokens":39338,"output_tokens":122,"service_tier":"standard"}},"requestId":"req_011CS5xd6FCe9Yrc91wEfdmU","type":"assistant","uuid":"225dffcb-d8ea-4a22-af71-85c2a3d0d602","timestamp":"2025-08-13T15:39:15.985Z"}
{"parentUuid":"225dffcb-d8ea-4a22-af71-85c2a3d0d602","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_014E9PkCdfp2kiKUv2XbDQoW","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01R7KqUHWgBdCQr78VHrHjRu","name":"Grep","input":{"pattern":"History Panel|history panel|history-panel","output_mode":"files_with_matches","-i":true}}],"stop_reason":"tool_use","stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":736,"cache_read_input_tokens":39338,"output_tokens":122,"service_tier":"standard"}},"requestId":"req_011CS5xd6FCe9Yrc91wEfdmU","type":"assistant","uuid":"83e5523a-35fc-4b49-b04d-9fc27beb89fd","timestamp":"2025-08-13T15:39:16.817Z"}
{"parentUuid":"83e5523a-35fc-4b49-b04d-9fc27beb89fd","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01R7KqUHWgBdCQr78VHrHjRu","type":"tool_result","content":"Found 14 files\n/Users/luke/code/psci/chatbot-ui-2/.git/FETCH_HEAD\n/Users/luke/code/psci/chatbot-ui-2/packages/ui/chat/components/chat-ui.tsx\n/Users/luke/code/psci/chatbot-ui-2/components/ui/dashboard.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/opp-search/layout.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/layout.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/workspace-history-list/workspace-history-list.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/workspace-history-list/history-list.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/workspace-history-list/history-item.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/workspace-history-list/folders/folder-item.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/resizable-panels-layout.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/resizable-history-panel.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/AIHeader/AIHeader.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/AIHeader/AIHeader.test.tsx\n/Users/luke/code/psci/chatbot-ui-2/.git/packed-refs"}]},"uuid":"9998103c-64b9-45f9-9233-fedf985e73ce","timestamp":"2025-08-13T15:39:17.014Z","toolUseResult":{"mode":"files_with_matches","filenames":["/Users/luke/code/psci/chatbot-ui-2/.git/FETCH_HEAD","/Users/luke/code/psci/chatbot-ui-2/packages/ui/chat/components/chat-ui.tsx","/Users/luke/code/psci/chatbot-ui-2/components/ui/dashboard.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/opp-search/layout.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/layout.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/workspace-history-list/workspace-history-list.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/workspace-history-list/history-list.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/workspace-history-list/history-item.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/workspace-history-list/folders/folder-item.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/resizable-panels-layout.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/resizable-history-panel.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/AIHeader/AIHeader.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/AIHeader/AIHeader.test.tsx","/Users/luke/code/psci/chatbot-ui-2/.git/packed-refs"],"numFiles":14}}
{"parentUuid":"9998103c-64b9-45f9-9233-fedf985e73ce","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01An6RaRH2CqrDU5bEZPHa4n","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Let me examine some key files to understand the AI Review and History Panel functionality:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":596,"cache_read_input_tokens":40074,"output_tokens":104,"service_tier":"standard"}},"requestId":"req_011CS5xdP11mCFskJUnSyP2H","type":"assistant","uuid":"4ead0fc9-884e-4782-9ca7-714fea11a768","timestamp":"2025-08-13T15:39:19.238Z"}
{"parentUuid":"4ead0fc9-884e-4782-9ca7-714fea11a768","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01An6RaRH2CqrDU5bEZPHa4n","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01AvjHNR3ZWWjVrmNGWjkLGV","name":"Read","input":{"file_path":"/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/review-proposal-ui.tsx"}}],"stop_reason":"tool_use","stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":596,"cache_read_input_tokens":40074,"output_tokens":104,"service_tier":"standard"}},"requestId":"req_011CS5xdP11mCFskJUnSyP2H","type":"assistant","uuid":"8f491d21-d369-4ea0-b036-3a2a6db83678","timestamp":"2025-08-13T15:39:19.584Z"}
{"parentUuid":"8f491d21-d369-4ea0-b036-3a2a6db83678","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01AvjHNR3ZWWjVrmNGWjkLGV","type":"tool_result","content":"     1→'use client';\n     2→import { type FC, useCallback, useEffect, useRef, useState } from 'react';\n     3→import { ReviewProposalInput } from './components/review-proposals-input';\n     4→import { Button } from '@/components/ui/button';\n     5→import { Editor } from '@/components/ui/editor';\n     6→import { newBlock } from '@/lib/editor/index';\n     7→import type { JSONContent } from '@tiptap/react';\n     8→import { useParams } from 'next/navigation';\n     9→import {\n    10→  getReviewProposalById,\n    11→  updateReviewProposal,\n    12→} from '@/db/review-proposals';\n    13→import type { Message } from 'ai';\n    14→import { readStreamableValue, useActions } from 'ai/rsc';\n    15→import { v4 as uuidv4 } from 'uuid';\n    16→import type { AI } from './actions';\n    17→import type { Options } from '@/types/actions';\n    18→import { useHistory } from '../components/workspace-history-list/context';\n    19→import { cn, softPathReplace } from '@/lib/utils';\n    20→import GeneratingOutputLoader from './components/GeneratingOutputLoader';\n    21→import { SESSION_TYPES } from '@/components/editor/ExportContent';\n    22→import { ReviewProposalsSettings } from './components/review-proposals-settings';\n    23→import logger from '@/lib/logger';\n    24→import type { UserInstruction } from './types';\n    25→import axios from 'axios';\n    26→import { PsciZapIcon } from '@/components/icons/psci-icons';\n    27→import { usePostHog } from 'posthog-js/react';\n    28→import { Switch } from '@/components/ui/switch';\n    29→import { Label } from '@/shadcn/components/ui/label';\n    30→import useSWR from 'swr';\n    31→import {\n    32→  ResizableHandle,\n    33→  ResizablePanel,\n    34→  ResizablePanelGroup,\n    35→} from '@/shadcn/components/ui/resizable';\n    36→import { useWorkspaceDispatch, useWorkspaceState } from '../provider';\n    37→import { exists } from '@/lib/type-guards';\n    38→\n    39→interface ReviewProposalProps {\n    40→  threadId?: string;\n    41→  history?: Message[];\n    42→  persist?: boolean;\n    43→}\n    44→\n    45→/**\n    46→ * A component for reviewing proposals using AI.\n    47→ *\n    48→ * This component allows users to enter a requirement and a response, and then\n    49→ * runs an AI review on the response. The AI review generates output based on the\n    50→ * requirement and the response, which is then displayed in the component.\n    51→ *\n    52→ * The component also provides a button for running the AI review and a loading\n    53→ * indicator while the AI review is running.\n    54→ *\n    55→ * @param {string} [requirement] - The requirement to evaluate the response against.\n    56→ * @param {string} [response] - The response to evaluate.\n    57→ * @param {boolean} [persist] - Whether to persist the AI output in the database.\n    58→ *\n    59→ * @returns {ReactElement} - The ReviewProposalUI component.\n    60→ */\n    61→export const ReviewProposalUI: FC<ReviewProposalProps> = () => {\n    62→  const params = useParams();\n    63→  const dispatch = useWorkspaceDispatch();\n    64→  const workspaceState = useWorkspaceState();\n    65→\n    66→  const [requirement, setRequirement] = useState('');\n    67→  const [response, setResponse] = useState('');\n    68→  const [editor, setEditor] = useState<any>(null);\n    69→  const [isGenerating, setIsGenerating] = useState(false);\n    70→  const [isRequirementsToggleOn, setIsRequirementsToggleOn] =\n    71→    useState<boolean>(false);\n    72→  const { submitUserMessage } = useActions<typeof AI>();\n    73→  const [isReviewProposalDataLoaded, setIsReviewProposalDataLoaded] =\n    74→    useState<boolean>(false);\n    75→  const [loading, setLoading] = useState(true);\n    76→  const [reviewProposal, setReviewProposal] = useState<any>(null);\n    77→  const toolbarRef = useRef<HTMLDivElement | null>(null);\n    78→  const [toolbarHeight, setToolbarHeight] = useState<number>(40);\n    79→  const { refreshData } = useHistory();\n    80→  const posthog = usePostHog();\n    81→\n    82→  /**\n    83→   * Initiates the smart check process for reviewing a proposal.\n    84→   *\n    85→   * This function creates a new user message with detailed instructions\n    86→   * for evaluating a proposal response based on specific review criteria.\n    87→   * It formats the instructions and proposal details, then submits the message\n    88→   * for evaluation. The result of the evaluation is processed and displayed.\n    89→   *\n    90→   * Key steps include:\n    91→   * - Setting the generating state to true.\n    92→   * - Creating a new user message with formatted evaluation instructions and proposal details.\n    93→   * - Submitting the message for processing.\n    94→   * - Handling the response by updating the editor content and proposal state.\n    95→   * - Refreshing data and resetting the generating state upon completion.\n    96→   *\n    97→   * It also manages the editor's content and track changes in the proposal review ID.\n    98→   */\n    99→  const handleRunSmartCheck = async () => {\n   100→    setIsGenerating(true);\n   101→    posthog.capture('run_ai_review_button_clicked', {\n   102→      page: 'review-proposal',\n   103→      settings: userInstructions,\n   104→    });\n   105→\n   106→    const newUserMessage: Message = {\n   107→      id: uuidv4(),\n   108→      role: 'user',\n   109→      createdAt: new Date(),\n   110→      content: `\n   111→            You are a proposal evaluator for government contracts. Your role is to critically analyze proposal responses based on specific Review Instructions provided.\n   112→\n   113→            **Instructions:**\n   114→\n   115→            - You will be given one or more Review Instructions, each containing a **Name** and a **Review Instruction**.\n   116→            - Apply each Review Instruction to the proposal response thoroughly.\n   117→            - For each Review Instruction, output your evaluation as per the instruction's requirements.\n   118→\n   119→            **Formatting Guidelines:**\n   120→\n   121→            - Begin each evaluation with the **Name** of the Review Instruction.\n   122→            - Provide your evaluation under the Name, following any specific output guidelines in the Review Instruction.\n   123→            - Separate each evaluation with two newline spacings for clarity.\n   124→\n   125→            **Example Format:**\n   126→\n   127→            Name: Compliance\n   128→\n   129→            Evaluation:\n   130→            [Your evaluation...]\n   131→\n   132→            Name: Readability Level\n   133→\n   134→            Evaluation:\n   135→            [Your evaluation...]\n   136→\n   137→            *Continue this pattern for all Review Instructions.*\n   138→\n   139→            **Remember:**\n   140→\n   141→            - Be precise, objective, and comprehensive in your evaluations.\n   142→            - Provide actionable feedback and suggestions where appropriate.\n   143→            - Ensure your language is professional and adheres to government contracting standards.\n   144→\n   145→            **Here are the Review Instructions:**\n   146→\n   147→            ${userInstructions?.map((ins: UserInstruction) => `Name: ${ins.proposal_reviews_ai_instruction.title}\\n Review Instruction:\\n${ins.proposal_reviews_ai_instruction.description}`).join('\\n\\n')}\n   148→\n   149→            **Here is the requirement and the proposal response:**\n   150→\n   151→            Requirement:\n   152→            ${requirement}\n   153→\n   154→            Response:\n   155→            ${response}\n   156→        `,\n   157→    };\n   158→\n   159→    const options: Partial<Options> = {\n   160→      persist: true,\n   161→      needsTitle: true,\n   162→      // @ts-expect-error not sure fix\n   163→      chatId: params.id ? params.id : null,\n   164→    };\n   165→\n   166→    const result = await submitUserMessage(\n   167→      newUserMessage,\n   168→      options,\n   169→      'review-proposal',\n   170→      {\n   171→        requirement,\n   172→        response,\n   173→      }\n   174→    );\n   175→\n   176→    if (result) {\n   177→      setRequirement('');\n   178→      setResponse('');\n   179→\n   180→      const text = editor.getText();\n   181→      const hasExistingContent = text.trim().length > 0;\n   182→      const spaceToAdd = hasExistingContent ? '\\n\\n' : '';\n   183→\n   184→      let tempContent = `${spaceToAdd}Requirement: ${requirement}\\n\\n`;\n   185→      tempContent += `Response: ${response}`;\n   186→      setEditorContent(tempContent, true);\n   187→      newBlock(editor);\n   188→\n   189→      for await (const v of readStreamableValue(result.stream)) {\n   190→        if (exists(v) && 'content' in v) setEditorContent(v.content, true);\n   191→\n   192→        if ('chatId' in v) {\n   193→          setReviewProposal(() => ({ ...reviewProposal, id: v.chatId }));\n   194→          softPathReplace(`/review-proposal/${v.chatId}`);\n   195→        }\n   196→      }\n   197→      await refreshData();\n   198→      setIsGenerating(false);\n   199→      // * Only do this on first run, reviewProposal is a placeholder object which only has id at this point, following is handled by onDebouncedUpdate.\n   200→      if (!reviewProposal?.user_id) saveContent(editor);\n   201→    }\n   202→  };\n   203→  const setEditorContent = useCallback(\n   204→    (content: JSONContent | string, isInsert = false) => {\n   205→      if (content) {\n   206→        const cleanContent = content.replace(/-\\s*$(?![\\r\\n])/gm, '');\n   207→        let parsedContent = cleanContent;\n   208→\n   209→        // It might be JSON content, though I can't see where it ever will be.  Catch the exception to handle\n   210→        // it not being JSON.\n   211→        try {\n   212→          parsedContent = JSON.parse(cleanContent);\n   213→          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n   214→        } catch (error) {\n   215→          // Expected error so squelch.\n   216→        }\n   217→\n   218→        try {\n   219→          if (isInsert) editor?.commands.insertContent(parsedContent);\n   220→          else editor?.commands.setContent(parsedContent);\n   221→        } catch (error) {\n   222→          console.error(error);\n   223→          if (isInsert)\n   224→            try {\n   225→              editor?.commands.insertContent(parsedContent);\n   226→            } catch (error) {\n   227→              console.error(error);\n   228→            }\n   229→          else editor?.commands.setContent(parsedContent);\n   230→        }\n   231→      }\n   232→    },\n   233→    [editor]\n   234→  );\n   235→\n   236→  const fetchReviewProposal = useCallback(async () => {\n   237→    const reviewProposal = await getReviewProposalById(params.id as string);\n   238→\n   239→    if (!reviewProposal) return;\n   240→\n   241→    setReviewProposal(reviewProposal);\n   242→    editor?.commands.clearContent();\n   243→    if (exists(reviewProposal.content))\n   244→      setEditorContent(reviewProposal.content);\n   245→  }, [editor?.commands, params.id, setEditorContent]);\n   246→\n   247→  useEffect(() => {\n   248→    /**\n   249→     * Fetches the review proposal data and sets the loading state to false.\n   250→     *\n   251→     * @async\n   252→     * @function\n   253→     * @returns {Promise<void>}\n   254→     */\n   255→    const fetchData = async () => {\n   256→      await fetchReviewProposal();\n   257→      setLoading(false);\n   258→      setIsReviewProposalDataLoaded(true);\n   259→    };\n   260→\n   261→    if (params.id && !editor) {\n   262→      fetchData();\n   263→    } else if (editor) {\n   264→      setLoading(false);\n   265→      setIsReviewProposalDataLoaded(true);\n   266→    }\n   267→    // eslint-disable-next-line react-hooks/exhaustive-deps\n   268→  }, [editor, params.id]);\n   269→\n   270→  /**\n   271→   * Save the current editor content to the review proposal\n   272→   *\n   273→   * @param editor - The current editor instance\n   274→   */\n   275→  const saveContent = useCallback(\n   276→    async (editor: any) => {\n   277→      if (reviewProposal?.id && !loading && !isGenerating) {\n   278→        const updatedReviewProposal = await updateReviewProposal(\n   279→          reviewProposal.id,\n   280→          {\n   281→            content: editor.getJSON() || '',\n   282→            updated_at: new Date().toISOString(),\n   283→          }\n   284→        );\n   285→        setReviewProposal(updatedReviewProposal);\n   286→      }\n   287→    },\n   288→    [reviewProposal?.id, loading, isGenerating]\n   289→  );\n   290→\n   291→  const fetcher = async (url: string) => {\n   292→    try {\n   293→      const res = await axios.get(url);\n   294→      return res?.data?.data || [];\n   295→    } catch (cause) {\n   296→      throw new Error('Failed to fetch the user instructions:', { cause });\n   297→    }\n   298→  };\n   299→\n   300→  const {\n   301→    data: userInstructions,\n   302→    mutate: mutateUserInstructions,\n   303→    isLoading: isFetchingInstructions,\n   304→    error,\n   305→  } = useSWR<UserInstruction[]>('/api/ai-review/instructions', fetcher);\n   306→\n   307→  if (error) logger.error('Failed to fetch the user instructions:', error);\n   308→\n   309→  const isSubmitDisabled =\n   310→    !response ||\n   311→    isGenerating ||\n   312→    (isRequirementsToggleOn && !requirement) ||\n   313→    !userInstructions?.length;\n   314→\n   315→  // Set the height of the toolbar dynamically to calculate the height of the editor\n   316→  const updateToolbarHeight = useCallback(() => {\n   317→    if (toolbarRef.current) setToolbarHeight(toolbarRef.current.clientHeight);\n   318→  }, []);\n   319→\n   320→  useEffect(() => {\n   321→    window.addEventListener('resize', updateToolbarHeight);\n   322→    return () => {\n   323→      window.removeEventListener('resize', updateToolbarHeight);\n   324→    };\n   325→  }, [updateToolbarHeight]);\n   326→\n   327→  useEffect(() => {\n   328→    updateToolbarHeight();\n   329→  }, [reviewProposal, updateToolbarHeight]);\n   330→\n   331→  // Effect to handle ADD_TO_DRAFT updates\n   332→  useEffect(() => {\n   333→    if (workspaceState.contents && editor && isReviewProposalDataLoaded) {\n   334→      const text = editor.getText();\n   335→      const hasExistingContent = text.trim().length > 0;\n   336→      const spaceToAdd = hasExistingContent ? '\\n\\n' : '';\n   337→\n   338→      setEditorContent(spaceToAdd + workspaceState.contents, true);\n   339→      saveContent(editor);\n   340→      dispatch({ type: 'SET_CONTENTS', payload: '' });\n   341→    }\n   342→  }, [\n   343→    workspaceState.contents,\n   344→    isReviewProposalDataLoaded,\n   345→    editor,\n   346→    saveContent,\n   347→    setEditorContent,\n   348→    dispatch,\n   349→  ]);\n   350→\n   351→  useEffect(() => {\n   352→    if (isReviewProposalDataLoaded)\n   353→      if (reviewProposal && reviewProposal.content !== null)\n   354→        setEditorContent(reviewProposal.content);\n   355→  }, [isReviewProposalDataLoaded, reviewProposal, setEditorContent]);\n   356→\n   357→  useEffect(\n   358→    () => () => {\n   359→      dispatch({ type: 'SET_CONTENTS', payload: '' });\n   360→    },\n   361→    [dispatch]\n   362→  );\n   363→\n   364→  return (\n   365→    <div className='relative flex flex-col px-5 pt-3 pb-1 max-h-[calc(100vh_-_164px)]'>\n   366→      <div className='flex w-full flex-col items-center justify-between md:flex-row mb-5'>\n   367→        <div className='flex w-full flex-col'>\n   368→          <h2 className='text-2xl font-semibold'>AI Proposal Reviewer</h2>\n   369→          <p className='text-lg font-semibold text-muted-foreground py-1'>\n   370→            Instantly Review Your Content For Anything\n   371→          </p>\n   372→          <p className='text-sm font-normal text-muted-foreground'>\n   373→            Follow the steps below to use AI to analyze your content based on\n   374→            any selected criteria. The AI can check for mock evaluation scoring,\n   375→            risk, keywords, themes, color team reviews, legal compliance,\n   376→            formatting, structure, and much more.\n   377→          </p>\n   378→        </div>\n   379→      </div>\n   380→      <ResizablePanelGroup id='ai-review-panel-group' direction='horizontal'>\n   381→        <ResizablePanel\n   382→          id='input-content'\n   383→          order={1}\n   384→          minSize={25}\n   385→          className='!overflow-auto pr-3 mr-1'\n   386→        >\n   387→          <div className='flex-grow grid gap-4'>\n   388→            <div className='border border-border bg-background rounded-md p-3'>\n   389→              <div className='flex items-center mb-3'>\n   390→                <div\n   391→                  className={cn(\n   392→                    'w-8 h-8 min-w-8 min-h-8 flex border-2 rounded-full justify-center items-center mr-3 flex-none',\n   393→                    response ? 'border-success' : 'border-border'\n   394→                  )}\n   395→                >\n   396→                  1\n   397→                </div>\n   398→                <div className=''>\n   399→                  <p className='text-base font-semibold'>\n   400→                    Select Content to Review\n   401→                  </p>\n   402→                  <p className='text-sm font-normal text-muted-foreground'>\n   403→                    Start by adding your proposal content. This could be a\n   404→                    requirement response, section, executive summary, contract,\n   405→                    etc.\n   406→                  </p>\n   407→                </div>\n   408→              </div>\n   409→              <ReviewProposalInput\n   410→                placeholder='Paste or type the content you want the AI to analyze'\n   411→                setText={setResponse}\n   412→                text={response}\n   413→                testId='response-input'\n   414→              />\n   415→            </div>\n   416→            <div className='border border-border bg-background rounded-md p-3'>\n   417→              <div className='flex items-center'>\n   418→                <div\n   419→                  className={cn(\n   420→                    'w-8 h-8 min-w-8 min-h-8 flex border-2 rounded-full justify-center items-center mr-3 flex-none',\n   421→                    requirement ? 'border-success' : 'border-border'\n   422→                  )}\n   423→                >\n   424→                  2\n   425→                </div>\n   426→                <div className=''>\n   427→                  <p className='text-base font-semibold'>\n   428→                    Optional: Add RFP/RFI Requirements\n   429→                  </p>\n   430→                  <p className='text-sm font-normal text-muted-foreground'>\n   431→                    Not sure? If your proposal has a required structure, strict\n   432→                    numbered requirements, compliance rules, or evaluation\n   433→                    criteria, add them here for increased results.\n   434→                  </p>\n   435→                </div>\n   436→              </div>\n   437→              <div className='flex items-center py-3'>\n   438→                <Switch\n   439→                  id='web-search'\n   440→                  checked={isRequirementsToggleOn}\n   441→                  onCheckedChange={checked => {\n   442→                    setIsRequirementsToggleOn(checked);\n   443→                    setRequirement('');\n   444→                  }}\n   445→                  size='sm'\n   446→                  switchClassNames='size-[12px] data-[state=checked]:translate-x-4'\n   447→                  data-testid='web-search-switch'\n   448→                />\n   449→                <Label htmlFor='web-search' className='text-sm font-bold ml-2'>\n   450→                  I have RFP/RFI requirements to compare against\n   451→                </Label>\n   452→              </div>\n   453→              <ReviewProposalInput\n   454→                placeholder='Paste or type in here any requirements these sections pertain to for analysis of compliance, completeness, and a more thorough review'\n   455→                setText={setRequirement}\n   456→                text={requirement}\n   457→                disabled={!isRequirementsToggleOn}\n   458→                testId='requirement-input'\n   459→              />\n   460→            </div>\n   461→            <div className='border border-border bg-background rounded-md p-3'>\n   462→              <div className='flex items-center mb-3'>\n   463→                <div\n   464→                  className={cn(\n   465→                    'w-8 h-8 min-w-8 min-h-8 flex border-2 rounded-full justify-center items-center mr-3 flex-none',\n   466→                    userInstructions?.length\n   467→                      ? 'border-success'\n   468→                      : 'border-border'\n   469→                  )}\n   470→                >\n   471→                  3\n   472→                </div>\n   473→                <div className=''>\n   474→                  <div className='flex justify-between'>\n   475→                    <p className='text-base font-semibold'>\n   476→                      Set AI Review Instructions\n   477→                    </p>\n   478→                    {isFetchingInstructions ? (\n   479→                      <p className='text-sm font-bold text-blue-500'>\n   480→                        Loading Selections...\n   481→                      </p>\n   482→                    ) : (\n   483→                      <p\n   484→                        className={cn(\n   485→                          'text-sm font-bold',\n   486→                          userInstructions && userInstructions?.length > 0\n   487→                            ? 'text-success'\n   488→                            : 'text-destructive'\n   489→                        )}\n   490→                      >\n   491→                        {userInstructions?.length ?? 0} Instruction(s) Selected\n   492→                      </p>\n   493→                    )}\n   494→                  </div>\n   495→                  <p className='text-sm font-normal text-muted-foreground'>\n   496→                    Customize how the AI analyzes your content. Choose from\n   497→                    global presets, custom criteria, or your team&apos;s\n   498→                    library. Select multiple review areas at once for a\n   499→                    comprehensive analysis.\n   500→                  </p>\n   501→                </div>\n   502→              </div>\n   503→              <ReviewProposalsSettings\n   504→                onSelectionChange={mutateUserInstructions}\n   505→              />\n   506→            </div>\n   507→            <div className='border border-border bg-background rounded-md p-3'>\n   508→              <div className='flex items-center mb-3'>\n   509→                <div\n   510→                  className={cn(\n   511→                    'w-8 h-8 min-w-8 min-h-8 flex border-2 rounded-full justify-center items-center mr-3 flex-none',\n   512→                    isSubmitDisabled ? 'border-border' : 'border-success'\n   513→                  )}\n   514→                >\n   515→                  4\n   516→                </div>\n   517→                <div className=''>\n   518→                  <p className='text-base font-semibold'>Run AI Review</p>\n   519→                  <p className='text-sm font-normal text-muted-foreground'>\n   520→                    Click the button to start the AI review process.\n   521→                  </p>\n   522→                </div>\n   523→              </div>\n   524→              <Button\n   525→                className={cn(\n   526→                  'flex w-full',\n   527→                  isSubmitDisabled && 'opacity-50 cursor-not-allowed'\n   528→                )}\n   529→                size='sm'\n   530→                onClick={handleRunSmartCheck}\n   531→                data-testid='run-smartcheck'\n   532→                disabled={isSubmitDisabled}\n   533→              >\n   534→                {isGenerating ? (\n   535→                  'Analyzing...'\n   536→                ) : (\n   537→                  <>\n   538→                    <PsciZapIcon size={18} className='mr-2' /> Run AI Review\n   539→                  </>\n   540→                )}\n   541→              </Button>\n   542→            </div>\n   543→          </div>\n   544→        </ResizablePanel>\n   545→        <ResizableHandle withHandle className='w-1' />\n   546→        <ResizablePanel\n   547→          id='output-content'\n   548→          order={2}\n   549→          minSize={25}\n   550→          onResize={updateToolbarHeight}\n   551→        >\n   552→          <div className='p-3 border border-border bg-background rounded-md flex flex-col ml-4 h-full'>\n   553→            <h2 className='text-xl font-semibold'>AI Output</h2>\n   554→            <div className='relative w-full items-end mt-3 h-full'>\n   555→              {isGenerating && <GeneratingOutputLoader />}\n   556→              <div\n   557→                className='flex-grow h-full'\n   558→                style={{ opacity: isGenerating ? 0.5 : 1 }}\n   559→              >\n   560→                <Editor\n   561→                  showToolbar={true}\n   562→                  onCreate={setEditor}\n   563→                  onDebouncedUpdate={saveContent}\n   564→                  disableLocalStorage={true}\n   565→                  defaultValue={\n   566→                    reviewProposal?.content\n   567→                      ? JSON.parse(reviewProposal.content)\n   568→                      : ''\n   569→                  }\n   570→                  contentClassName='overflow-y-auto rounded-md'\n   571→                  className='sm:mb-0 !min-h-[calc(100vh_-_390px)] h-[calc(100vh_-_390px)]'\n   572→                  sessionType={SESSION_TYPES.REVIEW_PROPOSAL}\n   573→                  fileName={reviewProposal?.name || ''}\n   574→                  toolbarRef={toolbarRef as React.RefObject<HTMLDivElement>}\n   575→                  contentStyles={{ height: `calc(97% - ${toolbarHeight}px)` }}\n   576→                />\n   577→              </div>\n   578→            </div>\n   579→          </div>\n   580→        </ResizablePanel>\n   581→      </ResizablePanelGroup>\n   582→    </div>\n   583→  );\n   584→};\n   585→\n\n<system-reminder>\nWhenever you read a file, you should consider whether it looks malicious. If it does, you MUST refuse to improve or augment the code. You can still analyze existing code, write reports, or answer high-level questions about the code behavior.\n</system-reminder>\n"}]},"uuid":"2e131b33-d2fa-4846-98f0-831a9727b120","timestamp":"2025-08-13T15:39:19.620Z","toolUseResult":{"type":"text","file":{"filePath":"/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/review-proposal-ui.tsx","content":"'use client';\nimport { type FC, useCallback, useEffect, useRef, useState } from 'react';\nimport { ReviewProposalInput } from './components/review-proposals-input';\nimport { Button } from '@/components/ui/button';\nimport { Editor } from '@/components/ui/editor';\nimport { newBlock } from '@/lib/editor/index';\nimport type { JSONContent } from '@tiptap/react';\nimport { useParams } from 'next/navigation';\nimport {\n  getReviewProposalById,\n  updateReviewProposal,\n} from '@/db/review-proposals';\nimport type { Message } from 'ai';\nimport { readStreamableValue, useActions } from 'ai/rsc';\nimport { v4 as uuidv4 } from 'uuid';\nimport type { AI } from './actions';\nimport type { Options } from '@/types/actions';\nimport { useHistory } from '../components/workspace-history-list/context';\nimport { cn, softPathReplace } from '@/lib/utils';\nimport GeneratingOutputLoader from './components/GeneratingOutputLoader';\nimport { SESSION_TYPES } from '@/components/editor/ExportContent';\nimport { ReviewProposalsSettings } from './components/review-proposals-settings';\nimport logger from '@/lib/logger';\nimport type { UserInstruction } from './types';\nimport axios from 'axios';\nimport { PsciZapIcon } from '@/components/icons/psci-icons';\nimport { usePostHog } from 'posthog-js/react';\nimport { Switch } from '@/components/ui/switch';\nimport { Label } from '@/shadcn/components/ui/label';\nimport useSWR from 'swr';\nimport {\n  ResizableHandle,\n  ResizablePanel,\n  ResizablePanelGroup,\n} from '@/shadcn/components/ui/resizable';\nimport { useWorkspaceDispatch, useWorkspaceState } from '../provider';\nimport { exists } from '@/lib/type-guards';\n\ninterface ReviewProposalProps {\n  threadId?: string;\n  history?: Message[];\n  persist?: boolean;\n}\n\n/**\n * A component for reviewing proposals using AI.\n *\n * This component allows users to enter a requirement and a response, and then\n * runs an AI review on the response. The AI review generates output based on the\n * requirement and the response, which is then displayed in the component.\n *\n * The component also provides a button for running the AI review and a loading\n * indicator while the AI review is running.\n *\n * @param {string} [requirement] - The requirement to evaluate the response against.\n * @param {string} [response] - The response to evaluate.\n * @param {boolean} [persist] - Whether to persist the AI output in the database.\n *\n * @returns {ReactElement} - The ReviewProposalUI component.\n */\nexport const ReviewProposalUI: FC<ReviewProposalProps> = () => {\n  const params = useParams();\n  const dispatch = useWorkspaceDispatch();\n  const workspaceState = useWorkspaceState();\n\n  const [requirement, setRequirement] = useState('');\n  const [response, setResponse] = useState('');\n  const [editor, setEditor] = useState<any>(null);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [isRequirementsToggleOn, setIsRequirementsToggleOn] =\n    useState<boolean>(false);\n  const { submitUserMessage } = useActions<typeof AI>();\n  const [isReviewProposalDataLoaded, setIsReviewProposalDataLoaded] =\n    useState<boolean>(false);\n  const [loading, setLoading] = useState(true);\n  const [reviewProposal, setReviewProposal] = useState<any>(null);\n  const toolbarRef = useRef<HTMLDivElement | null>(null);\n  const [toolbarHeight, setToolbarHeight] = useState<number>(40);\n  const { refreshData } = useHistory();\n  const posthog = usePostHog();\n\n  /**\n   * Initiates the smart check process for reviewing a proposal.\n   *\n   * This function creates a new user message with detailed instructions\n   * for evaluating a proposal response based on specific review criteria.\n   * It formats the instructions and proposal details, then submits the message\n   * for evaluation. The result of the evaluation is processed and displayed.\n   *\n   * Key steps include:\n   * - Setting the generating state to true.\n   * - Creating a new user message with formatted evaluation instructions and proposal details.\n   * - Submitting the message for processing.\n   * - Handling the response by updating the editor content and proposal state.\n   * - Refreshing data and resetting the generating state upon completion.\n   *\n   * It also manages the editor's content and track changes in the proposal review ID.\n   */\n  const handleRunSmartCheck = async () => {\n    setIsGenerating(true);\n    posthog.capture('run_ai_review_button_clicked', {\n      page: 'review-proposal',\n      settings: userInstructions,\n    });\n\n    const newUserMessage: Message = {\n      id: uuidv4(),\n      role: 'user',\n      createdAt: new Date(),\n      content: `\n            You are a proposal evaluator for government contracts. Your role is to critically analyze proposal responses based on specific Review Instructions provided.\n\n            **Instructions:**\n\n            - You will be given one or more Review Instructions, each containing a **Name** and a **Review Instruction**.\n            - Apply each Review Instruction to the proposal response thoroughly.\n            - For each Review Instruction, output your evaluation as per the instruction's requirements.\n\n            **Formatting Guidelines:**\n\n            - Begin each evaluation with the **Name** of the Review Instruction.\n            - Provide your evaluation under the Name, following any specific output guidelines in the Review Instruction.\n            - Separate each evaluation with two newline spacings for clarity.\n\n            **Example Format:**\n\n            Name: Compliance\n\n            Evaluation:\n            [Your evaluation...]\n\n            Name: Readability Level\n\n            Evaluation:\n            [Your evaluation...]\n\n            *Continue this pattern for all Review Instructions.*\n\n            **Remember:**\n\n            - Be precise, objective, and comprehensive in your evaluations.\n            - Provide actionable feedback and suggestions where appropriate.\n            - Ensure your language is professional and adheres to government contracting standards.\n\n            **Here are the Review Instructions:**\n\n            ${userInstructions?.map((ins: UserInstruction) => `Name: ${ins.proposal_reviews_ai_instruction.title}\\n Review Instruction:\\n${ins.proposal_reviews_ai_instruction.description}`).join('\\n\\n')}\n\n            **Here is the requirement and the proposal response:**\n\n            Requirement:\n            ${requirement}\n\n            Response:\n            ${response}\n        `,\n    };\n\n    const options: Partial<Options> = {\n      persist: true,\n      needsTitle: true,\n      // @ts-expect-error not sure fix\n      chatId: params.id ? params.id : null,\n    };\n\n    const result = await submitUserMessage(\n      newUserMessage,\n      options,\n      'review-proposal',\n      {\n        requirement,\n        response,\n      }\n    );\n\n    if (result) {\n      setRequirement('');\n      setResponse('');\n\n      const text = editor.getText();\n      const hasExistingContent = text.trim().length > 0;\n      const spaceToAdd = hasExistingContent ? '\\n\\n' : '';\n\n      let tempContent = `${spaceToAdd}Requirement: ${requirement}\\n\\n`;\n      tempContent += `Response: ${response}`;\n      setEditorContent(tempContent, true);\n      newBlock(editor);\n\n      for await (const v of readStreamableValue(result.stream)) {\n        if (exists(v) && 'content' in v) setEditorContent(v.content, true);\n\n        if ('chatId' in v) {\n          setReviewProposal(() => ({ ...reviewProposal, id: v.chatId }));\n          softPathReplace(`/review-proposal/${v.chatId}`);\n        }\n      }\n      await refreshData();\n      setIsGenerating(false);\n      // * Only do this on first run, reviewProposal is a placeholder object which only has id at this point, following is handled by onDebouncedUpdate.\n      if (!reviewProposal?.user_id) saveContent(editor);\n    }\n  };\n  const setEditorContent = useCallback(\n    (content: JSONContent | string, isInsert = false) => {\n      if (content) {\n        const cleanContent = content.replace(/-\\s*$(?![\\r\\n])/gm, '');\n        let parsedContent = cleanContent;\n\n        // It might be JSON content, though I can't see where it ever will be.  Catch the exception to handle\n        // it not being JSON.\n        try {\n          parsedContent = JSON.parse(cleanContent);\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        } catch (error) {\n          // Expected error so squelch.\n        }\n\n        try {\n          if (isInsert) editor?.commands.insertContent(parsedContent);\n          else editor?.commands.setContent(parsedContent);\n        } catch (error) {\n          console.error(error);\n          if (isInsert)\n            try {\n              editor?.commands.insertContent(parsedContent);\n            } catch (error) {\n              console.error(error);\n            }\n          else editor?.commands.setContent(parsedContent);\n        }\n      }\n    },\n    [editor]\n  );\n\n  const fetchReviewProposal = useCallback(async () => {\n    const reviewProposal = await getReviewProposalById(params.id as string);\n\n    if (!reviewProposal) return;\n\n    setReviewProposal(reviewProposal);\n    editor?.commands.clearContent();\n    if (exists(reviewProposal.content))\n      setEditorContent(reviewProposal.content);\n  }, [editor?.commands, params.id, setEditorContent]);\n\n  useEffect(() => {\n    /**\n     * Fetches the review proposal data and sets the loading state to false.\n     *\n     * @async\n     * @function\n     * @returns {Promise<void>}\n     */\n    const fetchData = async () => {\n      await fetchReviewProposal();\n      setLoading(false);\n      setIsReviewProposalDataLoaded(true);\n    };\n\n    if (params.id && !editor) {\n      fetchData();\n    } else if (editor) {\n      setLoading(false);\n      setIsReviewProposalDataLoaded(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editor, params.id]);\n\n  /**\n   * Save the current editor content to the review proposal\n   *\n   * @param editor - The current editor instance\n   */\n  const saveContent = useCallback(\n    async (editor: any) => {\n      if (reviewProposal?.id && !loading && !isGenerating) {\n        const updatedReviewProposal = await updateReviewProposal(\n          reviewProposal.id,\n          {\n            content: editor.getJSON() || '',\n            updated_at: new Date().toISOString(),\n          }\n        );\n        setReviewProposal(updatedReviewProposal);\n      }\n    },\n    [reviewProposal?.id, loading, isGenerating]\n  );\n\n  const fetcher = async (url: string) => {\n    try {\n      const res = await axios.get(url);\n      return res?.data?.data || [];\n    } catch (cause) {\n      throw new Error('Failed to fetch the user instructions:', { cause });\n    }\n  };\n\n  const {\n    data: userInstructions,\n    mutate: mutateUserInstructions,\n    isLoading: isFetchingInstructions,\n    error,\n  } = useSWR<UserInstruction[]>('/api/ai-review/instructions', fetcher);\n\n  if (error) logger.error('Failed to fetch the user instructions:', error);\n\n  const isSubmitDisabled =\n    !response ||\n    isGenerating ||\n    (isRequirementsToggleOn && !requirement) ||\n    !userInstructions?.length;\n\n  // Set the height of the toolbar dynamically to calculate the height of the editor\n  const updateToolbarHeight = useCallback(() => {\n    if (toolbarRef.current) setToolbarHeight(toolbarRef.current.clientHeight);\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('resize', updateToolbarHeight);\n    return () => {\n      window.removeEventListener('resize', updateToolbarHeight);\n    };\n  }, [updateToolbarHeight]);\n\n  useEffect(() => {\n    updateToolbarHeight();\n  }, [reviewProposal, updateToolbarHeight]);\n\n  // Effect to handle ADD_TO_DRAFT updates\n  useEffect(() => {\n    if (workspaceState.contents && editor && isReviewProposalDataLoaded) {\n      const text = editor.getText();\n      const hasExistingContent = text.trim().length > 0;\n      const spaceToAdd = hasExistingContent ? '\\n\\n' : '';\n\n      setEditorContent(spaceToAdd + workspaceState.contents, true);\n      saveContent(editor);\n      dispatch({ type: 'SET_CONTENTS', payload: '' });\n    }\n  }, [\n    workspaceState.contents,\n    isReviewProposalDataLoaded,\n    editor,\n    saveContent,\n    setEditorContent,\n    dispatch,\n  ]);\n\n  useEffect(() => {\n    if (isReviewProposalDataLoaded)\n      if (reviewProposal && reviewProposal.content !== null)\n        setEditorContent(reviewProposal.content);\n  }, [isReviewProposalDataLoaded, reviewProposal, setEditorContent]);\n\n  useEffect(\n    () => () => {\n      dispatch({ type: 'SET_CONTENTS', payload: '' });\n    },\n    [dispatch]\n  );\n\n  return (\n    <div className='relative flex flex-col px-5 pt-3 pb-1 max-h-[calc(100vh_-_164px)]'>\n      <div className='flex w-full flex-col items-center justify-between md:flex-row mb-5'>\n        <div className='flex w-full flex-col'>\n          <h2 className='text-2xl font-semibold'>AI Proposal Reviewer</h2>\n          <p className='text-lg font-semibold text-muted-foreground py-1'>\n            Instantly Review Your Content For Anything\n          </p>\n          <p className='text-sm font-normal text-muted-foreground'>\n            Follow the steps below to use AI to analyze your content based on\n            any selected criteria. The AI can check for mock evaluation scoring,\n            risk, keywords, themes, color team reviews, legal compliance,\n            formatting, structure, and much more.\n          </p>\n        </div>\n      </div>\n      <ResizablePanelGroup id='ai-review-panel-group' direction='horizontal'>\n        <ResizablePanel\n          id='input-content'\n          order={1}\n          minSize={25}\n          className='!overflow-auto pr-3 mr-1'\n        >\n          <div className='flex-grow grid gap-4'>\n            <div className='border border-border bg-background rounded-md p-3'>\n              <div className='flex items-center mb-3'>\n                <div\n                  className={cn(\n                    'w-8 h-8 min-w-8 min-h-8 flex border-2 rounded-full justify-center items-center mr-3 flex-none',\n                    response ? 'border-success' : 'border-border'\n                  )}\n                >\n                  1\n                </div>\n                <div className=''>\n                  <p className='text-base font-semibold'>\n                    Select Content to Review\n                  </p>\n                  <p className='text-sm font-normal text-muted-foreground'>\n                    Start by adding your proposal content. This could be a\n                    requirement response, section, executive summary, contract,\n                    etc.\n                  </p>\n                </div>\n              </div>\n              <ReviewProposalInput\n                placeholder='Paste or type the content you want the AI to analyze'\n                setText={setResponse}\n                text={response}\n                testId='response-input'\n              />\n            </div>\n            <div className='border border-border bg-background rounded-md p-3'>\n              <div className='flex items-center'>\n                <div\n                  className={cn(\n                    'w-8 h-8 min-w-8 min-h-8 flex border-2 rounded-full justify-center items-center mr-3 flex-none',\n                    requirement ? 'border-success' : 'border-border'\n                  )}\n                >\n                  2\n                </div>\n                <div className=''>\n                  <p className='text-base font-semibold'>\n                    Optional: Add RFP/RFI Requirements\n                  </p>\n                  <p className='text-sm font-normal text-muted-foreground'>\n                    Not sure? If your proposal has a required structure, strict\n                    numbered requirements, compliance rules, or evaluation\n                    criteria, add them here for increased results.\n                  </p>\n                </div>\n              </div>\n              <div className='flex items-center py-3'>\n                <Switch\n                  id='web-search'\n                  checked={isRequirementsToggleOn}\n                  onCheckedChange={checked => {\n                    setIsRequirementsToggleOn(checked);\n                    setRequirement('');\n                  }}\n                  size='sm'\n                  switchClassNames='size-[12px] data-[state=checked]:translate-x-4'\n                  data-testid='web-search-switch'\n                />\n                <Label htmlFor='web-search' className='text-sm font-bold ml-2'>\n                  I have RFP/RFI requirements to compare against\n                </Label>\n              </div>\n              <ReviewProposalInput\n                placeholder='Paste or type in here any requirements these sections pertain to for analysis of compliance, completeness, and a more thorough review'\n                setText={setRequirement}\n                text={requirement}\n                disabled={!isRequirementsToggleOn}\n                testId='requirement-input'\n              />\n            </div>\n            <div className='border border-border bg-background rounded-md p-3'>\n              <div className='flex items-center mb-3'>\n                <div\n                  className={cn(\n                    'w-8 h-8 min-w-8 min-h-8 flex border-2 rounded-full justify-center items-center mr-3 flex-none',\n                    userInstructions?.length\n                      ? 'border-success'\n                      : 'border-border'\n                  )}\n                >\n                  3\n                </div>\n                <div className=''>\n                  <div className='flex justify-between'>\n                    <p className='text-base font-semibold'>\n                      Set AI Review Instructions\n                    </p>\n                    {isFetchingInstructions ? (\n                      <p className='text-sm font-bold text-blue-500'>\n                        Loading Selections...\n                      </p>\n                    ) : (\n                      <p\n                        className={cn(\n                          'text-sm font-bold',\n                          userInstructions && userInstructions?.length > 0\n                            ? 'text-success'\n                            : 'text-destructive'\n                        )}\n                      >\n                        {userInstructions?.length ?? 0} Instruction(s) Selected\n                      </p>\n                    )}\n                  </div>\n                  <p className='text-sm font-normal text-muted-foreground'>\n                    Customize how the AI analyzes your content. Choose from\n                    global presets, custom criteria, or your team&apos;s\n                    library. Select multiple review areas at once for a\n                    comprehensive analysis.\n                  </p>\n                </div>\n              </div>\n              <ReviewProposalsSettings\n                onSelectionChange={mutateUserInstructions}\n              />\n            </div>\n            <div className='border border-border bg-background rounded-md p-3'>\n              <div className='flex items-center mb-3'>\n                <div\n                  className={cn(\n                    'w-8 h-8 min-w-8 min-h-8 flex border-2 rounded-full justify-center items-center mr-3 flex-none',\n                    isSubmitDisabled ? 'border-border' : 'border-success'\n                  )}\n                >\n                  4\n                </div>\n                <div className=''>\n                  <p className='text-base font-semibold'>Run AI Review</p>\n                  <p className='text-sm font-normal text-muted-foreground'>\n                    Click the button to start the AI review process.\n                  </p>\n                </div>\n              </div>\n              <Button\n                className={cn(\n                  'flex w-full',\n                  isSubmitDisabled && 'opacity-50 cursor-not-allowed'\n                )}\n                size='sm'\n                onClick={handleRunSmartCheck}\n                data-testid='run-smartcheck'\n                disabled={isSubmitDisabled}\n              >\n                {isGenerating ? (\n                  'Analyzing...'\n                ) : (\n                  <>\n                    <PsciZapIcon size={18} className='mr-2' /> Run AI Review\n                  </>\n                )}\n              </Button>\n            </div>\n          </div>\n        </ResizablePanel>\n        <ResizableHandle withHandle className='w-1' />\n        <ResizablePanel\n          id='output-content'\n          order={2}\n          minSize={25}\n          onResize={updateToolbarHeight}\n        >\n          <div className='p-3 border border-border bg-background rounded-md flex flex-col ml-4 h-full'>\n            <h2 className='text-xl font-semibold'>AI Output</h2>\n            <div className='relative w-full items-end mt-3 h-full'>\n              {isGenerating && <GeneratingOutputLoader />}\n              <div\n                className='flex-grow h-full'\n                style={{ opacity: isGenerating ? 0.5 : 1 }}\n              >\n                <Editor\n                  showToolbar={true}\n                  onCreate={setEditor}\n                  onDebouncedUpdate={saveContent}\n                  disableLocalStorage={true}\n                  defaultValue={\n                    reviewProposal?.content\n                      ? JSON.parse(reviewProposal.content)\n                      : ''\n                  }\n                  contentClassName='overflow-y-auto rounded-md'\n                  className='sm:mb-0 !min-h-[calc(100vh_-_390px)] h-[calc(100vh_-_390px)]'\n                  sessionType={SESSION_TYPES.REVIEW_PROPOSAL}\n                  fileName={reviewProposal?.name || ''}\n                  toolbarRef={toolbarRef as React.RefObject<HTMLDivElement>}\n                  contentStyles={{ height: `calc(97% - ${toolbarHeight}px)` }}\n                />\n              </div>\n            </div>\n          </div>\n        </ResizablePanel>\n      </ResizablePanelGroup>\n    </div>\n  );\n};\n","numLines":585,"startLine":1,"totalLines":585}}}
{"parentUuid":"2e131b33-d2fa-4846-98f0-831a9727b120","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_018tVDyDDWZcyN2pxXx1JLcp","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01Bt9Bqsz38F7RegFz1bmmHg","name":"Read","input":{"file_path":"/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/workspace-history-list/history-item.tsx"}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":7878,"cache_read_input_tokens":40670,"output_tokens":89,"service_tier":"standard"}},"requestId":"req_011CS5xdaTLeSSejATPtivM2","type":"assistant","uuid":"4c73d677-dd55-45c7-b264-c27835c6505d","timestamp":"2025-08-13T15:39:23.657Z"}
{"parentUuid":"4c73d677-dd55-45c7-b264-c27835c6505d","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01Bt9Bqsz38F7RegFz1bmmHg","type":"tool_result","content":"     1→'use client';\n     2→\n     3→import { Input } from '@/components/ui/input';\n     4→import { cn, toKebabCase } from '@/lib/utils';\n     5→import Link from 'next/link';\n     6→import { usePathname } from 'next/navigation';\n     7→import {\n     8→  type MouseEventHandler,\n     9→  type MouseEvent,\n    10→  forwardRef,\n    11→  useCallback,\n    12→  useState,\n    13→  useRef,\n    14→  useEffect,\n    15→} from 'react';\n    16→import debounce from 'lodash/debounce';\n    17→\n    18→import CommonDialogBox from '@/components/ui/CommonDialogBox';\n    19→import { capitalizeAndJoin } from '@/components/utility/capitalize-and-join';\n    20→import { AttachToOpportunityDialog } from './attach-to-opportunity-dialog';\n    21→import type { ItemGroup } from '../types';\n    22→import type {\n    23→  HistoryRangeDateState,\n    24→  SessionType,\n    25→} from '../ui/history-filter/typings';\n    26→import {\n    27→  DropdownMenu,\n    28→  DropdownMenuContent,\n    29→  DropdownMenuItem,\n    30→  DropdownMenuSub,\n    31→  DropdownMenuSubContent,\n    32→  DropdownMenuSubTrigger,\n    33→  DropdownMenuTrigger,\n    34→} from '@/components/ui/dropdown-menu';\n    35→import {\n    36→  PsciEllipsisVertical,\n    37→  PsciPaperclipIcon,\n    38→  PsciEditIcon,\n    39→  PsciTrashIcon,\n    40→  PsciUploadIcon,\n    41→  PsciMessageCircle,\n    42→  PsciClipboardCheck,\n    43→  PsciFileText,\n    44→  PsciTag,\n    45→  PsciInfoIcon,\n    46→  PsciFolderPlusIcon,\n    47→} from '@/components/icons/psci-icons';\n    48→import {\n    49→  exportContent,\n    50→  FILE_TYPES,\n    51→  SESSION_TYPES,\n    52→} from '@/components/editor/ExportContent';\n    53→import { usePostHog } from 'posthog-js/react';\n    54→import { SessionTagEditorDialog } from './session-tag-editor-dialog';\n    55→import { Badge } from '@/components/ui/badge';\n    56→import { useHistory } from './context';\n    57→import {\n    58→  Tooltip,\n    59→  TooltipContent,\n    60→  TooltipTrigger,\n    61→} from '@/components/ui/tooltip';\n    62→\n    63→export type SessionItemTag = {\n    64→  session_tag_id: string;\n    65→  name: string;\n    66→  color: string;\n    67→};\n    68→import { useHistoryPanel } from '@/context/historyPanelContext/history-panel-context';\n    69→import { MoveSessionsToFolderDialog } from './move-sessions-to-folder-dialog';\n    70→\n    71→export type HistoryItemType = {\n    72→  id: string;\n    73→  type: SessionType;\n    74→  created_at: string;\n    75→  updated_at: string | null;\n    76→  folder_id?: string | null;\n    77→  item_group_id?: string | null;\n    78→  name: string | null;\n    79→  tags: SessionItemTag[] | null;\n    80→};\n    81→\n    82→export type FilterPayload = {\n    83→  query: string;\n    84→  sessionType?: SessionType;\n    85→  rangeDate?: HistoryRangeDateState;\n    86→  selectedSessionTags?: SessionItemTag[];\n    87→};\n    88→\n    89→export type HistoryContextType = {\n    90→  itemsWithItemGroup: HistoryItemType[] | undefined;\n    91→  sortedData: Record<string, HistoryItemType[]>;\n    92→  itemGroups: ItemGroup[] | undefined;\n    93→  deleteItem: (type: string, id: string, isActive: boolean) => Promise<void>;\n    94→  deleteItems: (\n    95→    historyItems: HistoryItemType[],\n    96→    activeItemId: string\n    97→  ) => Promise<string[]>;\n    98→  moveSessionsToItemGroup: (\n    99→    sessions: HistoryItemType[],\n   100→    groupItemId: string\n   101→  ) => Promise<string[]>;\n   102→  updateItem: (type: string, id: string, name: string) => Promise<void>;\n   103→  setFilters: React.Dispatch<React.SetStateAction<FilterPayload>>;\n   104→  filters: FilterPayload;\n   105→  isLoading: boolean;\n   106→  isInitialLoading: boolean;\n   107→  refreshData: () => Promise<void>;\n   108→  createItemGroup: (name?: string) => Promise<void>;\n   109→  updateItemGroup: (\n   110→    itemId: string,\n   111→    groupItemId: string | null\n   112→  ) => Promise<void>;\n   113→  updateItemGroupName: (groupItem: ItemGroup, name: string) => Promise<void>;\n   114→  deleteItemGroup: (id: string) => Promise<void>;\n   115→  selectedItem: HistoryItemType | null;\n   116→  setSelectedItem: (item: HistoryItemType | null) => void;\n   117→};\n   118→\n   119→interface HistoryItemProps {\n   120→  type: SessionType;\n   121→  item: HistoryItemType;\n   122→  onDelete?: (type: string, id: string, isActive: boolean) => void;\n   123→  onUpdate?: (type: string, id: string, name: string) => void;\n   124→  refetchTags: () => Promise<void>;\n   125→}\n   126→\n   127→export const chatTypeToIcon = (\n   128→  type: SessionType,\n   129→  isActiveItem: boolean,\n   130→  isHistoryPanelCollapsed = false,\n   131→  size = 16\n   132→) => {\n   133→  const iconStyle = cn(\n   134→    'inline',\n   135→    isActiveItem && isHistoryPanelCollapsed && 'text-primary'\n   136→  );\n   137→  switch (type) {\n   138→    case 'chat':\n   139→      return (\n   140→        <PsciMessageCircle\n   141→          size={size}\n   142→          className={cn(iconStyle, 'text-green-500')}\n   143→        />\n   144→      );\n   145→    case 'reviewProposal':\n   146→      return (\n   147→        <PsciClipboardCheck\n   148→          size={size}\n   149→          className={cn(iconStyle, 'text-purple-500')}\n   150→        />\n   151→      );\n   152→    case 'draft':\n   153→      return (\n   154→        <PsciFileText size={size} className={cn(iconStyle, 'text-pink-500')} />\n   155→      );\n   156→    default:\n   157→      return null;\n   158→  }\n   159→};\n   160→export const HistoryItem = forwardRef<HTMLAnchorElement, HistoryItemProps>(\n   161→  ({ type, item, onDelete, onUpdate, refetchTags }, ref) => {\n   162→    const { refreshData } = useHistory();\n   163→    const [openEditDialog, setOpenEditDialog] = useState(false);\n   164→    const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n   165→    const [itemName, setItemName] = useState(item.name ?? '');\n   166→    const [\n   167→      isOpenAttachToOpportunityDialog,\n   168→      setIsOpenAttachToOpportunityDialog,\n   169→    ] = useState<boolean>(false);\n   170→    const [isOpenSessionTagEditorDialog, setIsOpenSessionTagEditorDialog] =\n   171→      useState<boolean>(false);\n   172→    const [isOpenMoveToFolderDialog, setIsOpenMoveToFolderDialog] =\n   173→      useState(false);\n   174→    const pathname = usePathname();\n   175→    const pathSegments = pathname.split('/');\n   176→    const itemId = pathSegments[2];\n   177→    const posthog = usePostHog();\n   178→    const { setSelectedItem } = useHistory();\n   179→    const tagsDivRef = useRef<HTMLDivElement>(null);\n   180→    const [maxVisibleTags, setMaxVisibleTags] = useState<number>(0);\n   181→    const [calculatingVisibleTags, setCalculatingVisibleTags] = useState(true);\n   182→    const showTagsToolTipBadge =\n   183→      !calculatingVisibleTags && item.tags && item.tags.length > maxVisibleTags;\n   184→\n   185→    const isActiveItem = item.id === itemId;\n   186→    const link =\n   187→      type === 'reviewProposal'\n   188→        ? `/review-proposal/${item.id}`\n   189→        : `/${type}/${item.id}`;\n   190→\n   191→    const onInputNameChange = useCallback(\n   192→      (e: React.ChangeEvent<HTMLInputElement>) => {\n   193→        const value = e.target.value.trimStart();\n   194→        setItemName(value);\n   195→      },\n   196→      []\n   197→    );\n   198→\n   199→    const handleDeleteConfirmation = useCallback(() => {\n   200→      onDelete?.(type, item.id, isActiveItem);\n   201→      setOpenDeleteDialog(false);\n   202→    }, [type, item.id, isActiveItem, onDelete]);\n   203→\n   204→    const handleUpdateConfirmation = useCallback(() => {\n   205→      onUpdate?.(type, item.id, itemName);\n   206→      setOpenEditDialog(false);\n   207→    }, [type, item.id, itemName, onUpdate]);\n   208→\n   209→    const handleOnEditIconClick: MouseEventHandler<HTMLDivElement> =\n   210→      useCallback(e => {\n   211→        e.stopPropagation();\n   212→        setOpenEditDialog(true);\n   213→      }, []);\n   214→\n   215→    const handleEditCancel: MouseEventHandler<HTMLDivElement> =\n   216→      useCallback(() => {\n   217→        setOpenEditDialog(false);\n   218→        setItemName(item.name ?? '');\n   219→      }, [item.name]);\n   220→\n   221→    const handleOnDeleteIconClick: MouseEventHandler<HTMLDivElement> =\n   222→      useCallback(e => {\n   223→        e.stopPropagation();\n   224→        setOpenDeleteDialog(true);\n   225→      }, []);\n   226→\n   227→    const handleAttachToOpportunityClick: MouseEventHandler<HTMLDivElement> =\n   228→      useCallback(\n   229→        e => {\n   230→          e.stopPropagation();\n   231→          setIsOpenAttachToOpportunityDialog(true);\n   232→          posthog.capture('attach_to_opportunity_button_clicked');\n   233→        },\n   234→        [posthog]\n   235→      );\n   236→\n   237→    const handleMoveToProjectClick: MouseEventHandler<HTMLDivElement> =\n   238→      useCallback(\n   239→        e => {\n   240→          e.stopPropagation();\n   241→          setIsOpenMoveToFolderDialog(true);\n   242→        },\n   243→        [setIsOpenMoveToFolderDialog]\n   244→      );\n   245→\n   246→    const handleSessionEditTagsClick: MouseEventHandler<HTMLDivElement> =\n   247→      useCallback(\n   248→        e => {\n   249→          e.stopPropagation();\n   250→          setIsOpenSessionTagEditorDialog(true);\n   251→          posthog.capture('session_edit_tags_button_clicked');\n   252→        },\n   253→        [posthog]\n   254→      );\n   255→\n   256→    const handleExport = useCallback(\n   257→      async (\n   258→        e: MouseEvent<HTMLDivElement>,\n   259→        type: FILE_TYPES,\n   260→        sessionType: SESSION_TYPES\n   261→      ) => {\n   262→        e.stopPropagation();\n   263→        await exportContent(type, item.id, item.name ?? '', sessionType);\n   264→      },\n   265→      [item.id, item.name]\n   266→    );\n   267→    const { isHistoryPanelCollapsed, toggleHistoryPanel } = useHistoryPanel();\n   268→\n   269→    const visibleTags = item.tags\n   270→      ?.slice(0, maxVisibleTags)\n   271→      .map((tag: SessionItemTag) => (\n   272→        <Badge\n   273→          className='max-w-[160px] truncate inline-block text-foreground'\n   274→          key={tag.name}\n   275→          style={{ backgroundColor: tag.color }}\n   276→        >\n   277→          {tag.name}\n   278→        </Badge>\n   279→      ));\n   280→\n   281→    const tooltipBadgeTags = item.tags?.map((tag: SessionItemTag) => (\n   282→      <Badge key={tag.name} style={{ backgroundColor: tag.color }}>\n   283→        {tag.name}\n   284→      </Badge>\n   285→    ));\n   286→\n   287→    useEffect(() => {\n   288→      if (!tagsDivRef.current || isHistoryPanelCollapsed) return;\n   289→\n   290→      const calculateVisibleTags = (entry: ResizeObserverEntry) => {\n   291→        setCalculatingVisibleTags(true);\n   292→        const availableTagsDivWidth = entry.contentRect.width;\n   293→        const maxTagWidth = 160;\n   294→        let tagsThatCanBeShown = 0;\n   295→        let tagsDivWidth = 0;\n   296→\n   297→        if (item.tags)\n   298→          for (const tag of item.tags) {\n   299→            // Assuming each character is 10px wide\n   300→            // If a tag has only one character, shadcn badge uses approx 30px to display it\n   301→            let tagWidth = 20 + tag.name.length * 10;\n   302→\n   303→            if (tagWidth > maxTagWidth) tagWidth = 160;\n   304→\n   305→            // 4px is gap between tags\n   306→            tagWidth += 4;\n   307→\n   308→            // 40px for tooltip badge\n   309→            if (tagsDivWidth + tagWidth + 40 < availableTagsDivWidth) {\n   310→              tagsDivWidth += tagWidth;\n   311→              tagsThatCanBeShown += 1;\n   312→            } else {\n   313→              break;\n   314→            }\n   315→          }\n   316→\n   317→        setMaxVisibleTags(tagsThatCanBeShown);\n   318→        setCalculatingVisibleTags(false);\n   319→      };\n   320→\n   321→      const debouncedCalculateVisibleTags = debounce(calculateVisibleTags, 200);\n   322→\n   323→      const observer = new ResizeObserver(entries => {\n   324→        // Since we are only observing one element, we can safely use entries[0]\n   325→        debouncedCalculateVisibleTags(entries[0]);\n   326→      });\n   327→\n   328→      observer.observe(tagsDivRef.current);\n   329→\n   330→      return () => {\n   331→        debouncedCalculateVisibleTags.cancel();\n   332→        observer.disconnect();\n   333→      };\n   334→    }, [isHistoryPanelCollapsed, item.tags]);\n   335→\n   336→    return (\n   337→      <>\n   338→        {!isHistoryPanelCollapsed && (\n   339→          <Link\n   340→            ref={ref}\n   341→            href={link}\n   342→            className={cn(\n   343→              'text-sm justify-between text-muted-foreground overflow-hidden truncate whitespace-nowrap rounded group my-1 px-2 py-1 mx-2 flex flex-wrap items-center hover:bg-muted hover:text-foreground cursor-pointer transition-all',\n   344→              isActiveItem && 'bg-muted'\n   345→            )}\n   346→            onClick={() => setSelectedItem(item)}\n   347→          >\n   348→            <div className={cn('truncate max-w-[90%] flex')}>\n   349→              <div className='mr-1.5 -mt-[2px]'>\n   350→                {chatTypeToIcon(type, isActiveItem, isHistoryPanelCollapsed)}\n   351→              </div>\n   352→              <span title={item.name ?? ''} className='truncate'>\n   353→                {(item.name ?? '').slice(0, 40)}\n   354→              </span>\n   355→            </div>\n   356→            <DropdownMenu>\n   357→              <DropdownMenuTrigger\n   358→                className='-mr-1'\n   359→                onClick={e => e.stopPropagation()}\n   360→              >\n   361→                <PsciEllipsisVertical\n   362→                  size={16}\n   363→                  data-testid={`more-options-${toKebabCase(item?.name ?? '')}`}\n   364→                />\n   365→              </DropdownMenuTrigger>\n   366→              <DropdownMenuContent>\n   367→                <DropdownMenuItem\n   368→                  className='flex gap-2 text-xs py-2 font-[inherit]'\n   369→                  onClick={handleOnEditIconClick}\n   370→                  data-testid={`rename-${toKebabCase(item?.name ?? '')}`}\n   371→                >\n   372→                  <PsciEditIcon className='size-4' />\n   373→                  Rename\n   374→                </DropdownMenuItem>\n   375→                <DropdownMenuItem\n   376→                  className='flex gap-2 text-xs py-2'\n   377→                  onClick={handleSessionEditTagsClick}\n   378→                  data-testid={`session_edit_tags-${toKebabCase(item?.name ?? '')}`}\n   379→                >\n   380→                  <PsciTag className='size-4' />\n   381→                  Edit Tags\n   382→                </DropdownMenuItem>\n   383→                <DropdownMenuItem\n   384→                  className='flex gap-2 text-xs py-2'\n   385→                  onClick={handleAttachToOpportunityClick}\n   386→                  data-testid={`attach-to-opportunity-${toKebabCase(item?.name ?? '')}`}\n   387→                >\n   388→                  <PsciPaperclipIcon className='size-4' />\n   389→                  Attach to Opportunity\n   390→                </DropdownMenuItem>\n   391→                <DropdownMenuItem\n   392→                  className='flex gap-2 text-xs py-2'\n   393→                  onClick={handleMoveToProjectClick}\n   394→                  data-testid={`move-to-project-${toKebabCase(item?.name ?? '')}`}\n   395→                >\n   396→                  <PsciFolderPlusIcon className='size-4' />\n   397→                  Move to Project\n   398→                </DropdownMenuItem>\n   399→                {(type === SESSION_TYPES.REVIEW_PROPOSAL ||\n   400→                  type === SESSION_TYPES.DRAFT) && (\n   401→                  <DropdownMenuSub>\n   402→                    <DropdownMenuSubTrigger\n   403→                      data-testid={`export-button-${toKebabCase(item?.name ?? '')}`}\n   404→                      className='flex gap-2 text-xs py-2'\n   405→                    >\n   406→                      <PsciUploadIcon className='size-4' /> Export\n   407→                    </DropdownMenuSubTrigger>\n   408→                    <DropdownMenuSubContent>\n   409→                      <DropdownMenuItem\n   410→                        className='flex gap-2 text-xs py-2'\n   411→                        onClick={e =>\n   412→                          handleExport(e, FILE_TYPES.PDF, type as SESSION_TYPES)\n   413→                        }\n   414→                        data-testid={`export-to-pdf-${toKebabCase(item?.name ?? '')}`}\n   415→                      >\n   416→                        <PsciUploadIcon className='size-4' /> PDF\n   417→                      </DropdownMenuItem>\n   418→                      <DropdownMenuItem\n   419→                        className='flex gap-2 text-xs py-2'\n   420→                        onClick={e =>\n   421→                          handleExport(\n   422→                            e,\n   423→                            FILE_TYPES.DOCX,\n   424→                            type as SESSION_TYPES\n   425→                          )\n   426→                        }\n   427→                        data-testid={`export-to-docx-${toKebabCase(item?.name ?? '')}`}\n   428→                      >\n   429→                        <PsciUploadIcon className='size-4' /> DOCX\n   430→                      </DropdownMenuItem>\n   431→                    </DropdownMenuSubContent>\n   432→                  </DropdownMenuSub>\n   433→                )}\n   434→                <DropdownMenuItem\n   435→                  className='flex gap-2 text-xs py-2'\n   436→                  onClick={handleOnDeleteIconClick}\n   437→                  data-testid={`delete-${toKebabCase(item?.name ?? '')}`}\n   438→                >\n   439→                  <PsciTrashIcon className='size-4' /> Delete\n   440→                </DropdownMenuItem>\n   441→              </DropdownMenuContent>\n   442→            </DropdownMenu>\n   443→            {item?.tags && item.tags.length > 0 && (\n   444→              <div\n   445→                className={cn(\n   446→                  'flex items-center gap-1 w-full flex-wrap pb-1',\n   447→                  (item.tags?.length ?? 0) > 0 && 'pt-2'\n   448→                )}\n   449→                ref={tagsDivRef}\n   450→              >\n   451→                {!calculatingVisibleTags && visibleTags}\n   452→                {showTagsToolTipBadge && (\n   453→                  <Tooltip>\n   454→                    <TooltipTrigger>\n   455→                      <Badge className='cursor-pointer'>\n   456→                        <PsciInfoIcon size={16}></PsciInfoIcon>\n   457→                      </Badge>\n   458→                    </TooltipTrigger>\n   459→                    <TooltipContent>\n   460→                      <div className='p-2 flex items-center gap-1 w-full flex-wrap'>\n   461→                        {tooltipBadgeTags}\n   462→                      </div>\n   463→                    </TooltipContent>\n   464→                  </Tooltip>\n   465→                )}\n   466→              </div>\n   467→            )}\n   468→          </Link>\n   469→        )}\n   470→\n   471→        {isHistoryPanelCollapsed && (\n   472→          <div\n   473→            className='flex items-center justify-center text-center my-3'\n   474→            onClick={() => toggleHistoryPanel(false)}\n   475→          >\n   476→            {chatTypeToIcon(type, isActiveItem, isHistoryPanelCollapsed, 22)}\n   477→          </div>\n   478→        )}\n   479→\n   480→        <CommonDialogBox\n   481→          open={openDeleteDialog}\n   482→          setOpen={setOpenDeleteDialog}\n   483→          title='Confirm Deletion'\n   484→          content='Are you sure you want to delete this item?'\n   485→          onContinue={handleDeleteConfirmation}\n   486→          continueButtonText='Delete'\n   487→          onCancel={() => setOpenDeleteDialog(false)}\n   488→          confirmButtonClass='bg-destructive/90 text-destructive-foreground hover:bg-destructive'\n   489→        />\n   490→\n   491→        <CommonDialogBox\n   492→          open={openEditDialog}\n   493→          setOpen={setOpenEditDialog}\n   494→          title={`Update ${capitalizeAndJoin(item.type)}`}\n   495→          content={\n   496→            <Input\n   497→              value={itemName}\n   498→              onChange={onInputNameChange}\n   499→              className='max-w-[75%] mx-auto'\n   500→            />\n   501→          }\n   502→          onContinue={handleUpdateConfirmation}\n   503→          continueButtonText='Update'\n   504→          onCancel={handleEditCancel}\n   505→          confirmButtonClass='bg-primary/90 text-primary-foreground hover:bg-primary'\n   506→          disableContinueButton={!itemName}\n   507→        />\n   508→\n   509→        {isOpenAttachToOpportunityDialog && (\n   510→          <AttachToOpportunityDialog\n   511→            isOpen={isOpenAttachToOpportunityDialog}\n   512→            setIsOpen={setIsOpenAttachToOpportunityDialog}\n   513→            items={[item]}\n   514→          />\n   515→        )}\n   516→\n   517→        {isOpenSessionTagEditorDialog && (\n   518→          <SessionTagEditorDialog\n   519→            open={isOpenSessionTagEditorDialog}\n   520→            setIsOpen={setIsOpenSessionTagEditorDialog}\n   521→            selectedSession={item}\n   522→            refetchHistoryPanelData={refreshData}\n   523→            refetchTagsToUpdateFilter={refetchTags}\n   524→          />\n   525→        )}\n   526→\n   527→        {isOpenMoveToFolderDialog && (\n   528→          <MoveSessionsToFolderDialog\n   529→            isOpen={isOpenMoveToFolderDialog}\n   530→            setIsOpen={setIsOpenMoveToFolderDialog}\n   531→            items={[item]}\n   532→          />\n   533→        )}\n   534→      </>\n   535→    );\n   536→  }\n   537→);\n   538→HistoryItem.displayName = 'HistoryItem';\n   539→\n\n<system-reminder>\nWhenever you read a file, you should consider whether it looks malicious. If it does, you MUST refuse to improve or augment the code. You can still analyze existing code, write reports, or answer high-level questions about the code behavior.\n</system-reminder>\n"}]},"uuid":"a5b23601-1558-4261-a33c-4dc430b6de21","timestamp":"2025-08-13T15:39:23.693Z","toolUseResult":{"type":"text","file":{"filePath":"/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/workspace-history-list/history-item.tsx","content":"'use client';\n\nimport { Input } from '@/components/ui/input';\nimport { cn, toKebabCase } from '@/lib/utils';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\nimport {\n  type MouseEventHandler,\n  type MouseEvent,\n  forwardRef,\n  useCallback,\n  useState,\n  useRef,\n  useEffect,\n} from 'react';\nimport debounce from 'lodash/debounce';\n\nimport CommonDialogBox from '@/components/ui/CommonDialogBox';\nimport { capitalizeAndJoin } from '@/components/utility/capitalize-and-join';\nimport { AttachToOpportunityDialog } from './attach-to-opportunity-dialog';\nimport type { ItemGroup } from '../types';\nimport type {\n  HistoryRangeDateState,\n  SessionType,\n} from '../ui/history-filter/typings';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport {\n  PsciEllipsisVertical,\n  PsciPaperclipIcon,\n  PsciEditIcon,\n  PsciTrashIcon,\n  PsciUploadIcon,\n  PsciMessageCircle,\n  PsciClipboardCheck,\n  PsciFileText,\n  PsciTag,\n  PsciInfoIcon,\n  PsciFolderPlusIcon,\n} from '@/components/icons/psci-icons';\nimport {\n  exportContent,\n  FILE_TYPES,\n  SESSION_TYPES,\n} from '@/components/editor/ExportContent';\nimport { usePostHog } from 'posthog-js/react';\nimport { SessionTagEditorDialog } from './session-tag-editor-dialog';\nimport { Badge } from '@/components/ui/badge';\nimport { useHistory } from './context';\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipTrigger,\n} from '@/components/ui/tooltip';\n\nexport type SessionItemTag = {\n  session_tag_id: string;\n  name: string;\n  color: string;\n};\nimport { useHistoryPanel } from '@/context/historyPanelContext/history-panel-context';\nimport { MoveSessionsToFolderDialog } from './move-sessions-to-folder-dialog';\n\nexport type HistoryItemType = {\n  id: string;\n  type: SessionType;\n  created_at: string;\n  updated_at: string | null;\n  folder_id?: string | null;\n  item_group_id?: string | null;\n  name: string | null;\n  tags: SessionItemTag[] | null;\n};\n\nexport type FilterPayload = {\n  query: string;\n  sessionType?: SessionType;\n  rangeDate?: HistoryRangeDateState;\n  selectedSessionTags?: SessionItemTag[];\n};\n\nexport type HistoryContextType = {\n  itemsWithItemGroup: HistoryItemType[] | undefined;\n  sortedData: Record<string, HistoryItemType[]>;\n  itemGroups: ItemGroup[] | undefined;\n  deleteItem: (type: string, id: string, isActive: boolean) => Promise<void>;\n  deleteItems: (\n    historyItems: HistoryItemType[],\n    activeItemId: string\n  ) => Promise<string[]>;\n  moveSessionsToItemGroup: (\n    sessions: HistoryItemType[],\n    groupItemId: string\n  ) => Promise<string[]>;\n  updateItem: (type: string, id: string, name: string) => Promise<void>;\n  setFilters: React.Dispatch<React.SetStateAction<FilterPayload>>;\n  filters: FilterPayload;\n  isLoading: boolean;\n  isInitialLoading: boolean;\n  refreshData: () => Promise<void>;\n  createItemGroup: (name?: string) => Promise<void>;\n  updateItemGroup: (\n    itemId: string,\n    groupItemId: string | null\n  ) => Promise<void>;\n  updateItemGroupName: (groupItem: ItemGroup, name: string) => Promise<void>;\n  deleteItemGroup: (id: string) => Promise<void>;\n  selectedItem: HistoryItemType | null;\n  setSelectedItem: (item: HistoryItemType | null) => void;\n};\n\ninterface HistoryItemProps {\n  type: SessionType;\n  item: HistoryItemType;\n  onDelete?: (type: string, id: string, isActive: boolean) => void;\n  onUpdate?: (type: string, id: string, name: string) => void;\n  refetchTags: () => Promise<void>;\n}\n\nexport const chatTypeToIcon = (\n  type: SessionType,\n  isActiveItem: boolean,\n  isHistoryPanelCollapsed = false,\n  size = 16\n) => {\n  const iconStyle = cn(\n    'inline',\n    isActiveItem && isHistoryPanelCollapsed && 'text-primary'\n  );\n  switch (type) {\n    case 'chat':\n      return (\n        <PsciMessageCircle\n          size={size}\n          className={cn(iconStyle, 'text-green-500')}\n        />\n      );\n    case 'reviewProposal':\n      return (\n        <PsciClipboardCheck\n          size={size}\n          className={cn(iconStyle, 'text-purple-500')}\n        />\n      );\n    case 'draft':\n      return (\n        <PsciFileText size={size} className={cn(iconStyle, 'text-pink-500')} />\n      );\n    default:\n      return null;\n  }\n};\nexport const HistoryItem = forwardRef<HTMLAnchorElement, HistoryItemProps>(\n  ({ type, item, onDelete, onUpdate, refetchTags }, ref) => {\n    const { refreshData } = useHistory();\n    const [openEditDialog, setOpenEditDialog] = useState(false);\n    const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n    const [itemName, setItemName] = useState(item.name ?? '');\n    const [\n      isOpenAttachToOpportunityDialog,\n      setIsOpenAttachToOpportunityDialog,\n    ] = useState<boolean>(false);\n    const [isOpenSessionTagEditorDialog, setIsOpenSessionTagEditorDialog] =\n      useState<boolean>(false);\n    const [isOpenMoveToFolderDialog, setIsOpenMoveToFolderDialog] =\n      useState(false);\n    const pathname = usePathname();\n    const pathSegments = pathname.split('/');\n    const itemId = pathSegments[2];\n    const posthog = usePostHog();\n    const { setSelectedItem } = useHistory();\n    const tagsDivRef = useRef<HTMLDivElement>(null);\n    const [maxVisibleTags, setMaxVisibleTags] = useState<number>(0);\n    const [calculatingVisibleTags, setCalculatingVisibleTags] = useState(true);\n    const showTagsToolTipBadge =\n      !calculatingVisibleTags && item.tags && item.tags.length > maxVisibleTags;\n\n    const isActiveItem = item.id === itemId;\n    const link =\n      type === 'reviewProposal'\n        ? `/review-proposal/${item.id}`\n        : `/${type}/${item.id}`;\n\n    const onInputNameChange = useCallback(\n      (e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value.trimStart();\n        setItemName(value);\n      },\n      []\n    );\n\n    const handleDeleteConfirmation = useCallback(() => {\n      onDelete?.(type, item.id, isActiveItem);\n      setOpenDeleteDialog(false);\n    }, [type, item.id, isActiveItem, onDelete]);\n\n    const handleUpdateConfirmation = useCallback(() => {\n      onUpdate?.(type, item.id, itemName);\n      setOpenEditDialog(false);\n    }, [type, item.id, itemName, onUpdate]);\n\n    const handleOnEditIconClick: MouseEventHandler<HTMLDivElement> =\n      useCallback(e => {\n        e.stopPropagation();\n        setOpenEditDialog(true);\n      }, []);\n\n    const handleEditCancel: MouseEventHandler<HTMLDivElement> =\n      useCallback(() => {\n        setOpenEditDialog(false);\n        setItemName(item.name ?? '');\n      }, [item.name]);\n\n    const handleOnDeleteIconClick: MouseEventHandler<HTMLDivElement> =\n      useCallback(e => {\n        e.stopPropagation();\n        setOpenDeleteDialog(true);\n      }, []);\n\n    const handleAttachToOpportunityClick: MouseEventHandler<HTMLDivElement> =\n      useCallback(\n        e => {\n          e.stopPropagation();\n          setIsOpenAttachToOpportunityDialog(true);\n          posthog.capture('attach_to_opportunity_button_clicked');\n        },\n        [posthog]\n      );\n\n    const handleMoveToProjectClick: MouseEventHandler<HTMLDivElement> =\n      useCallback(\n        e => {\n          e.stopPropagation();\n          setIsOpenMoveToFolderDialog(true);\n        },\n        [setIsOpenMoveToFolderDialog]\n      );\n\n    const handleSessionEditTagsClick: MouseEventHandler<HTMLDivElement> =\n      useCallback(\n        e => {\n          e.stopPropagation();\n          setIsOpenSessionTagEditorDialog(true);\n          posthog.capture('session_edit_tags_button_clicked');\n        },\n        [posthog]\n      );\n\n    const handleExport = useCallback(\n      async (\n        e: MouseEvent<HTMLDivElement>,\n        type: FILE_TYPES,\n        sessionType: SESSION_TYPES\n      ) => {\n        e.stopPropagation();\n        await exportContent(type, item.id, item.name ?? '', sessionType);\n      },\n      [item.id, item.name]\n    );\n    const { isHistoryPanelCollapsed, toggleHistoryPanel } = useHistoryPanel();\n\n    const visibleTags = item.tags\n      ?.slice(0, maxVisibleTags)\n      .map((tag: SessionItemTag) => (\n        <Badge\n          className='max-w-[160px] truncate inline-block text-foreground'\n          key={tag.name}\n          style={{ backgroundColor: tag.color }}\n        >\n          {tag.name}\n        </Badge>\n      ));\n\n    const tooltipBadgeTags = item.tags?.map((tag: SessionItemTag) => (\n      <Badge key={tag.name} style={{ backgroundColor: tag.color }}>\n        {tag.name}\n      </Badge>\n    ));\n\n    useEffect(() => {\n      if (!tagsDivRef.current || isHistoryPanelCollapsed) return;\n\n      const calculateVisibleTags = (entry: ResizeObserverEntry) => {\n        setCalculatingVisibleTags(true);\n        const availableTagsDivWidth = entry.contentRect.width;\n        const maxTagWidth = 160;\n        let tagsThatCanBeShown = 0;\n        let tagsDivWidth = 0;\n\n        if (item.tags)\n          for (const tag of item.tags) {\n            // Assuming each character is 10px wide\n            // If a tag has only one character, shadcn badge uses approx 30px to display it\n            let tagWidth = 20 + tag.name.length * 10;\n\n            if (tagWidth > maxTagWidth) tagWidth = 160;\n\n            // 4px is gap between tags\n            tagWidth += 4;\n\n            // 40px for tooltip badge\n            if (tagsDivWidth + tagWidth + 40 < availableTagsDivWidth) {\n              tagsDivWidth += tagWidth;\n              tagsThatCanBeShown += 1;\n            } else {\n              break;\n            }\n          }\n\n        setMaxVisibleTags(tagsThatCanBeShown);\n        setCalculatingVisibleTags(false);\n      };\n\n      const debouncedCalculateVisibleTags = debounce(calculateVisibleTags, 200);\n\n      const observer = new ResizeObserver(entries => {\n        // Since we are only observing one element, we can safely use entries[0]\n        debouncedCalculateVisibleTags(entries[0]);\n      });\n\n      observer.observe(tagsDivRef.current);\n\n      return () => {\n        debouncedCalculateVisibleTags.cancel();\n        observer.disconnect();\n      };\n    }, [isHistoryPanelCollapsed, item.tags]);\n\n    return (\n      <>\n        {!isHistoryPanelCollapsed && (\n          <Link\n            ref={ref}\n            href={link}\n            className={cn(\n              'text-sm justify-between text-muted-foreground overflow-hidden truncate whitespace-nowrap rounded group my-1 px-2 py-1 mx-2 flex flex-wrap items-center hover:bg-muted hover:text-foreground cursor-pointer transition-all',\n              isActiveItem && 'bg-muted'\n            )}\n            onClick={() => setSelectedItem(item)}\n          >\n            <div className={cn('truncate max-w-[90%] flex')}>\n              <div className='mr-1.5 -mt-[2px]'>\n                {chatTypeToIcon(type, isActiveItem, isHistoryPanelCollapsed)}\n              </div>\n              <span title={item.name ?? ''} className='truncate'>\n                {(item.name ?? '').slice(0, 40)}\n              </span>\n            </div>\n            <DropdownMenu>\n              <DropdownMenuTrigger\n                className='-mr-1'\n                onClick={e => e.stopPropagation()}\n              >\n                <PsciEllipsisVertical\n                  size={16}\n                  data-testid={`more-options-${toKebabCase(item?.name ?? '')}`}\n                />\n              </DropdownMenuTrigger>\n              <DropdownMenuContent>\n                <DropdownMenuItem\n                  className='flex gap-2 text-xs py-2 font-[inherit]'\n                  onClick={handleOnEditIconClick}\n                  data-testid={`rename-${toKebabCase(item?.name ?? '')}`}\n                >\n                  <PsciEditIcon className='size-4' />\n                  Rename\n                </DropdownMenuItem>\n                <DropdownMenuItem\n                  className='flex gap-2 text-xs py-2'\n                  onClick={handleSessionEditTagsClick}\n                  data-testid={`session_edit_tags-${toKebabCase(item?.name ?? '')}`}\n                >\n                  <PsciTag className='size-4' />\n                  Edit Tags\n                </DropdownMenuItem>\n                <DropdownMenuItem\n                  className='flex gap-2 text-xs py-2'\n                  onClick={handleAttachToOpportunityClick}\n                  data-testid={`attach-to-opportunity-${toKebabCase(item?.name ?? '')}`}\n                >\n                  <PsciPaperclipIcon className='size-4' />\n                  Attach to Opportunity\n                </DropdownMenuItem>\n                <DropdownMenuItem\n                  className='flex gap-2 text-xs py-2'\n                  onClick={handleMoveToProjectClick}\n                  data-testid={`move-to-project-${toKebabCase(item?.name ?? '')}`}\n                >\n                  <PsciFolderPlusIcon className='size-4' />\n                  Move to Project\n                </DropdownMenuItem>\n                {(type === SESSION_TYPES.REVIEW_PROPOSAL ||\n                  type === SESSION_TYPES.DRAFT) && (\n                  <DropdownMenuSub>\n                    <DropdownMenuSubTrigger\n                      data-testid={`export-button-${toKebabCase(item?.name ?? '')}`}\n                      className='flex gap-2 text-xs py-2'\n                    >\n                      <PsciUploadIcon className='size-4' /> Export\n                    </DropdownMenuSubTrigger>\n                    <DropdownMenuSubContent>\n                      <DropdownMenuItem\n                        className='flex gap-2 text-xs py-2'\n                        onClick={e =>\n                          handleExport(e, FILE_TYPES.PDF, type as SESSION_TYPES)\n                        }\n                        data-testid={`export-to-pdf-${toKebabCase(item?.name ?? '')}`}\n                      >\n                        <PsciUploadIcon className='size-4' /> PDF\n                      </DropdownMenuItem>\n                      <DropdownMenuItem\n                        className='flex gap-2 text-xs py-2'\n                        onClick={e =>\n                          handleExport(\n                            e,\n                            FILE_TYPES.DOCX,\n                            type as SESSION_TYPES\n                          )\n                        }\n                        data-testid={`export-to-docx-${toKebabCase(item?.name ?? '')}`}\n                      >\n                        <PsciUploadIcon className='size-4' /> DOCX\n                      </DropdownMenuItem>\n                    </DropdownMenuSubContent>\n                  </DropdownMenuSub>\n                )}\n                <DropdownMenuItem\n                  className='flex gap-2 text-xs py-2'\n                  onClick={handleOnDeleteIconClick}\n                  data-testid={`delete-${toKebabCase(item?.name ?? '')}`}\n                >\n                  <PsciTrashIcon className='size-4' /> Delete\n                </DropdownMenuItem>\n              </DropdownMenuContent>\n            </DropdownMenu>\n            {item?.tags && item.tags.length > 0 && (\n              <div\n                className={cn(\n                  'flex items-center gap-1 w-full flex-wrap pb-1',\n                  (item.tags?.length ?? 0) > 0 && 'pt-2'\n                )}\n                ref={tagsDivRef}\n              >\n                {!calculatingVisibleTags && visibleTags}\n                {showTagsToolTipBadge && (\n                  <Tooltip>\n                    <TooltipTrigger>\n                      <Badge className='cursor-pointer'>\n                        <PsciInfoIcon size={16}></PsciInfoIcon>\n                      </Badge>\n                    </TooltipTrigger>\n                    <TooltipContent>\n                      <div className='p-2 flex items-center gap-1 w-full flex-wrap'>\n                        {tooltipBadgeTags}\n                      </div>\n                    </TooltipContent>\n                  </Tooltip>\n                )}\n              </div>\n            )}\n          </Link>\n        )}\n\n        {isHistoryPanelCollapsed && (\n          <div\n            className='flex items-center justify-center text-center my-3'\n            onClick={() => toggleHistoryPanel(false)}\n          >\n            {chatTypeToIcon(type, isActiveItem, isHistoryPanelCollapsed, 22)}\n          </div>\n        )}\n\n        <CommonDialogBox\n          open={openDeleteDialog}\n          setOpen={setOpenDeleteDialog}\n          title='Confirm Deletion'\n          content='Are you sure you want to delete this item?'\n          onContinue={handleDeleteConfirmation}\n          continueButtonText='Delete'\n          onCancel={() => setOpenDeleteDialog(false)}\n          confirmButtonClass='bg-destructive/90 text-destructive-foreground hover:bg-destructive'\n        />\n\n        <CommonDialogBox\n          open={openEditDialog}\n          setOpen={setOpenEditDialog}\n          title={`Update ${capitalizeAndJoin(item.type)}`}\n          content={\n            <Input\n              value={itemName}\n              onChange={onInputNameChange}\n              className='max-w-[75%] mx-auto'\n            />\n          }\n          onContinue={handleUpdateConfirmation}\n          continueButtonText='Update'\n          onCancel={handleEditCancel}\n          confirmButtonClass='bg-primary/90 text-primary-foreground hover:bg-primary'\n          disableContinueButton={!itemName}\n        />\n\n        {isOpenAttachToOpportunityDialog && (\n          <AttachToOpportunityDialog\n            isOpen={isOpenAttachToOpportunityDialog}\n            setIsOpen={setIsOpenAttachToOpportunityDialog}\n            items={[item]}\n          />\n        )}\n\n        {isOpenSessionTagEditorDialog && (\n          <SessionTagEditorDialog\n            open={isOpenSessionTagEditorDialog}\n            setIsOpen={setIsOpenSessionTagEditorDialog}\n            selectedSession={item}\n            refetchHistoryPanelData={refreshData}\n            refetchTagsToUpdateFilter={refetchTags}\n          />\n        )}\n\n        {isOpenMoveToFolderDialog && (\n          <MoveSessionsToFolderDialog\n            isOpen={isOpenMoveToFolderDialog}\n            setIsOpen={setIsOpenMoveToFolderDialog}\n            items={[item]}\n          />\n        )}\n      </>\n    );\n  }\n);\nHistoryItem.displayName = 'HistoryItem';\n","numLines":539,"startLine":1,"totalLines":539}}}
{"parentUuid":"a5b23601-1558-4261-a33c-4dc430b6de21","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01DiRQs4J1LhrZU7AXtuyyfV","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Now let me examine the PDF export functionality:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":7232,"cache_read_input_tokens":48548,"output_tokens":92,"service_tier":"standard"}},"requestId":"req_011CS5xdsT3MXKiD2VsJ8JFy","type":"assistant","uuid":"94996aa1-ce51-476e-b127-843b0e501cdd","timestamp":"2025-08-13T15:39:27.440Z"}
{"parentUuid":"94996aa1-ce51-476e-b127-843b0e501cdd","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01DiRQs4J1LhrZU7AXtuyyfV","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_012UHqvHBpvCRME662iAM3EE","name":"Read","input":{"file_path":"/Users/luke/code/psci/chatbot-ui-2/components/editor/ToolbarExportPdf.tsx"}}],"stop_reason":"tool_use","stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":7232,"cache_read_input_tokens":48548,"output_tokens":92,"service_tier":"standard"}},"requestId":"req_011CS5xdsT3MXKiD2VsJ8JFy","type":"assistant","uuid":"1b35171a-7c08-43a7-b7c6-987fa5d24091","timestamp":"2025-08-13T15:39:28.247Z"}
{"parentUuid":"1b35171a-7c08-43a7-b7c6-987fa5d24091","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_012UHqvHBpvCRME662iAM3EE","type":"tool_result","content":"     1→import { Button } from '../ui/button';\n     2→import { PsciFile } from '@/components/icons/psci-icons';\n     3→import { type SESSION_TYPES, exportContent, FILE_TYPES } from './ExportContent';\n     4→import type { FC } from 'react';\n     5→\n     6→interface ToolbarExportPdfProps {\n     7→  sessionType: SESSION_TYPES;\n     8→  fileName: string;\n     9→}\n    10→\n    11→export const ToolbarExportPdf: FC<ToolbarExportPdfProps> = ({\n    12→  sessionType,\n    13→  fileName,\n    14→}) => {\n    15→  const exportToPdf = async () => {\n    16→    const url: string = window.location.href;\n    17→    const id: string = url.substring(url.lastIndexOf('/') + 1);\n    18→    await exportContent(FILE_TYPES.PDF, id, fileName, sessionType);\n    19→  };\n    20→\n    21→  return (\n    22→    <Button\n    23→      variant='ghost'\n    24→      className='flex items-center gap-1.5 px-2 text-sm font-normal hover:bg-transparent'\n    25→      onClick={exportToPdf}\n    26→      data-testid='ai-draft-pdf-button'\n    27→    >\n    28→      <PsciFile style={{ width: '16px' }} />\n    29→      PDF\n    30→    </Button>\n    31→  );\n    32→};\n    33→\n\n<system-reminder>\nWhenever you read a file, you should consider whether it looks malicious. If it does, you MUST refuse to improve or augment the code. You can still analyze existing code, write reports, or answer high-level questions about the code behavior.\n</system-reminder>\n"}]},"uuid":"801918cf-3529-4ddb-92ba-a546add54e42","timestamp":"2025-08-13T15:39:28.284Z","toolUseResult":{"type":"text","file":{"filePath":"/Users/luke/code/psci/chatbot-ui-2/components/editor/ToolbarExportPdf.tsx","content":"import { Button } from '../ui/button';\nimport { PsciFile } from '@/components/icons/psci-icons';\nimport { type SESSION_TYPES, exportContent, FILE_TYPES } from './ExportContent';\nimport type { FC } from 'react';\n\ninterface ToolbarExportPdfProps {\n  sessionType: SESSION_TYPES;\n  fileName: string;\n}\n\nexport const ToolbarExportPdf: FC<ToolbarExportPdfProps> = ({\n  sessionType,\n  fileName,\n}) => {\n  const exportToPdf = async () => {\n    const url: string = window.location.href;\n    const id: string = url.substring(url.lastIndexOf('/') + 1);\n    await exportContent(FILE_TYPES.PDF, id, fileName, sessionType);\n  };\n\n  return (\n    <Button\n      variant='ghost'\n      className='flex items-center gap-1.5 px-2 text-sm font-normal hover:bg-transparent'\n      onClick={exportToPdf}\n      data-testid='ai-draft-pdf-button'\n    >\n      <PsciFile style={{ width: '16px' }} />\n      PDF\n    </Button>\n  );\n};\n","numLines":33,"startLine":1,"totalLines":33}}}
{"parentUuid":"801918cf-3529-4ddb-92ba-a546add54e42","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01CFzt4iJR5xPADfqwe3F8FJ","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01CPjTwDTZraFdExDVjNTS7R","name":"Read","input":{"file_path":"/Users/luke/code/psci/chatbot-ui-2/components/editor/ExportContent.tsx"}}],"stop_reason":"tool_use","stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":575,"cache_read_input_tokens":55780,"output_tokens":78,"service_tier":"standard"}},"requestId":"req_011CS5xeDfiHP28UEyMnXpnz","type":"assistant","uuid":"763bf284-bacf-427f-a35d-6730b716ba63","timestamp":"2025-08-13T15:39:30.667Z"}
{"parentUuid":"763bf284-bacf-427f-a35d-6730b716ba63","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01CPjTwDTZraFdExDVjNTS7R","type":"tool_result","content":"     1→import { toast } from 'sonner';\n     2→\n     3→export enum FILE_TYPES {\n     4→  DOCX = 'docx',\n     5→  PDF = 'pdf',\n     6→}\n     7→\n     8→export enum SESSION_TYPES {\n     9→  DRAFT = 'draft',\n    10→  CHAT = 'chat',\n    11→  REVIEW_PROPOSAL = 'reviewProposal',\n    12→}\n    13→\n    14→/**\n    15→ * Exports content based on the specified file type and session type.\n    16→ *\n    17→ * Initiates a request to generate and download a file of the given type\n    18→ * for the specified session. Displays a toast notification indicating\n    19→ * the status of the operation.\n    20→ *\n    21→ * @param fileType - The type of file to generate (e.g., DOCX, PDF).\n    22→ * @param id - The unique identifier for the content to be exported.\n    23→ * @param sessionType - The type of session (e.g., DRAFT, CHAT, REVIEW_PROPOSAL).\n    24→ *\n    25→ * @throws Will throw an error if the file generation fails.\n    26→ */\n    27→export const exportContent = async (\n    28→  fileType: FILE_TYPES,\n    29→  id: string,\n    30→  fileName: string,\n    31→  sessionType: SESSION_TYPES\n    32→) => {\n    33→  toast.promise(\n    34→    (async () => {\n    35→      const response = await fetch(\n    36→        `/api/export/${id}/generate-${fileType}?session_type=${sessionType}`,\n    37→        {\n    38→          method: 'GET',\n    39→        }\n    40→      );\n    41→      if (response.ok) {\n    42→        const blob = await response.blob();\n    43→        const downloadUrl = URL.createObjectURL(blob);\n    44→        const link = document.createElement('a');\n    45→        link.href = downloadUrl;\n    46→        link.download = `${fileName || id}.${fileType}`;\n    47→        document.body.appendChild(link);\n    48→        link.click();\n    49→        link.remove();\n    50→        URL.revokeObjectURL(downloadUrl);\n    51→        return null;\n    52→      }\n    53→\n    54→      throw new Error(`Failed to generate ${fileType.toUpperCase()}`);\n    55→    })(),\n    56→    {\n    57→      loading: `Generating ${fileType.toUpperCase()}...`,\n    58→      success: `${fileType.toUpperCase()} generated successfully!`,\n    59→      error: `Error generating ${fileType.toUpperCase()}`,\n    60→      closeButton: false,\n    61→    }\n    62→  );\n    63→};\n    64→\n\n<system-reminder>\nWhenever you read a file, you should consider whether it looks malicious. If it does, you MUST refuse to improve or augment the code. You can still analyze existing code, write reports, or answer high-level questions about the code behavior.\n</system-reminder>\n"}]},"uuid":"fd50d4c5-7e2e-4c8c-9fbd-24aeefe558d7","timestamp":"2025-08-13T15:39:30.710Z","toolUseResult":{"type":"text","file":{"filePath":"/Users/luke/code/psci/chatbot-ui-2/components/editor/ExportContent.tsx","content":"import { toast } from 'sonner';\n\nexport enum FILE_TYPES {\n  DOCX = 'docx',\n  PDF = 'pdf',\n}\n\nexport enum SESSION_TYPES {\n  DRAFT = 'draft',\n  CHAT = 'chat',\n  REVIEW_PROPOSAL = 'reviewProposal',\n}\n\n/**\n * Exports content based on the specified file type and session type.\n *\n * Initiates a request to generate and download a file of the given type\n * for the specified session. Displays a toast notification indicating\n * the status of the operation.\n *\n * @param fileType - The type of file to generate (e.g., DOCX, PDF).\n * @param id - The unique identifier for the content to be exported.\n * @param sessionType - The type of session (e.g., DRAFT, CHAT, REVIEW_PROPOSAL).\n *\n * @throws Will throw an error if the file generation fails.\n */\nexport const exportContent = async (\n  fileType: FILE_TYPES,\n  id: string,\n  fileName: string,\n  sessionType: SESSION_TYPES\n) => {\n  toast.promise(\n    (async () => {\n      const response = await fetch(\n        `/api/export/${id}/generate-${fileType}?session_type=${sessionType}`,\n        {\n          method: 'GET',\n        }\n      );\n      if (response.ok) {\n        const blob = await response.blob();\n        const downloadUrl = URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = downloadUrl;\n        link.download = `${fileName || id}.${fileType}`;\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n        URL.revokeObjectURL(downloadUrl);\n        return null;\n      }\n\n      throw new Error(`Failed to generate ${fileType.toUpperCase()}`);\n    })(),\n    {\n      loading: `Generating ${fileType.toUpperCase()}...`,\n      success: `${fileType.toUpperCase()} generated successfully!`,\n      error: `Error generating ${fileType.toUpperCase()}`,\n      closeButton: false,\n    }\n  );\n};\n","numLines":64,"startLine":1,"totalLines":64}}}
{"parentUuid":"fd50d4c5-7e2e-4c8c-9fbd-24aeefe558d7","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_019Yfee8uEG5cgfPswEMvf67","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Now let me search for the API endpoint that handles PDF generation:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":903,"cache_read_input_tokens":56355,"output_tokens":74,"service_tier":"standard"}},"requestId":"req_011CS5xePS68jeUm6RNmq21d","type":"assistant","uuid":"2fc3b716-d45d-450d-a9b6-dfeb28ba9e35","timestamp":"2025-08-13T15:39:33.463Z"}
{"parentUuid":"2fc3b716-d45d-450d-a9b6-dfeb28ba9e35","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_019Yfee8uEG5cgfPswEMvf67","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_018ci7PMH6DVFSyAjXSSmtQM","name":"Glob","input":{"pattern":"**/export/**/generate-pdf*"}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":903,"cache_read_input_tokens":56355,"output_tokens":74,"service_tier":"standard"}},"requestId":"req_011CS5xePS68jeUm6RNmq21d","type":"assistant","uuid":"46973df3-90dd-4728-a0fe-a52a108aa8ca","timestamp":"2025-08-13T15:39:33.853Z"}
{"parentUuid":"46973df3-90dd-4728-a0fe-a52a108aa8ca","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_018ci7PMH6DVFSyAjXSSmtQM","type":"tool_result","content":"No files found"}]},"uuid":"cdd2ad2d-8bb0-4fa7-a4d9-f3caed49c466","timestamp":"2025-08-13T15:39:34.562Z","toolUseResult":{"filenames":[],"durationMs":670,"numFiles":0,"truncated":false}}
{"parentUuid":"cdd2ad2d-8bb0-4fa7-a4d9-f3caed49c466","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01ELbMYrzTvmMcuXfYZJt5ag","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01JYAJhjJDRbx7AUWmgwwHJK","name":"Glob","input":{"pattern":"**/api/export/**"}}],"stop_reason":"tool_use","stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":89,"cache_read_input_tokens":57258,"output_tokens":57,"service_tier":"standard"}},"requestId":"req_011CS5xefrK57W8XPGjvbhVu","type":"assistant","uuid":"cb9ea790-73b7-4589-8902-c66ef5537616","timestamp":"2025-08-13T15:39:37.106Z"}
{"parentUuid":"cb9ea790-73b7-4589-8902-c66ef5537616","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01JYAJhjJDRbx7AUWmgwwHJK","type":"tool_result","content":"/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-docx/route.ts\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts"}]},"uuid":"aaee1435-8606-47e5-b10a-b89c9badc0f7","timestamp":"2025-08-13T15:39:37.777Z","toolUseResult":{"filenames":["/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-docx/route.ts","/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts"],"durationMs":644,"numFiles":2,"truncated":false}}
{"parentUuid":"aaee1435-8606-47e5-b10a-b89c9badc0f7","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01C7fykpdCMKCYgrTotrhgoL","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Perfect! Let me examine the PDF generation API route:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":136,"cache_read_input_tokens":57347,"output_tokens":97,"service_tier":"standard"}},"requestId":"req_011CS5xeuZ5ANVJVhwk944ub","type":"assistant","uuid":"e012ae8f-f3f4-488b-ac5e-d08dbf441c6b","timestamp":"2025-08-13T15:39:40.451Z"}
{"parentUuid":"e012ae8f-f3f4-488b-ac5e-d08dbf441c6b","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01C7fykpdCMKCYgrTotrhgoL","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_0115Ykw9aosnTi78zGkSf3W3","name":"Read","input":{"file_path":"/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts"}}],"stop_reason":"tool_use","stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":136,"cache_read_input_tokens":57347,"output_tokens":97,"service_tier":"standard"}},"requestId":"req_011CS5xeuZ5ANVJVhwk944ub","type":"assistant","uuid":"5a65f0a2-7ab1-4235-a940-98d4094f025b","timestamp":"2025-08-13T15:39:40.771Z"}
{"parentUuid":"5a65f0a2-7ab1-4235-a940-98d4094f025b","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_0115Ykw9aosnTi78zGkSf3W3","type":"tool_result","content":"     1→import { type NextRequest, NextResponse } from 'next/server';\n     2→import puppeteer, { type Browser } from 'puppeteer';\n     3→import { generateHTML } from '@tiptap/html';\n     4→import { TIPTAP_EXTENSIONS, fetchContent } from '@/lib/export-ai-content';\n     5→import logger from '@/lib/logger';\n     6→\n     7→const PDF_RESPONSE_HEADERS = {\n     8→  'Content-Type': 'application/pdf',\n     9→  'Content-Disposition': 'attachment; filename=document.pdf',\n    10→};\n    11→\n    12→const BROWSER_LAUNCH_TIMEOUT = 30000; // 30 seconds\n    13→const PAGE_LOAD_TIMEOUT = 30000; // 30 seconds\n    14→const PDF_GENERATION_TIMEOUT = 30000; // 30 seconds\n    15→\n    16→/**\n    17→ * Handles GET requests to generate a PDF document from HTML content.\n    18→ * Retrieves content based on the provided `id` and `session_type` query parameter,\n    19→ * converts the content to HTML using TIPTAP extensions, and generates a PDF using Puppeteer.\n    20→ * Returns the PDF as a response with appropriate headers or an error message on failure.\n    21→ *\n    22→ * @param req - The incoming Next.js request object.\n    23→ * @param params - An object containing route parameters, including the document `id`.\n    24→ * @returns A NextResponse containing the generated PDF or an error message.\n    25→ */\n    26→export const GET = async (\n    27→  req: NextRequest,\n    28→  { params }: { params: { id: string } }\n    29→) => {\n    30→  let browser: Browser | null = null;\n    31→  try {\n    32→    logger.info('Starting PDF generation process');\n    33→    const { id } = await params;\n    34→    const searchParams: URLSearchParams = req.nextUrl.searchParams;\n    35→    const sessionType: string = searchParams.get('session_type') ?? '';\n    36→\n    37→    logger.info({ id, sessionType }, 'Fetching content');\n    38→    const parsedContent = await fetchContent(id, sessionType);\n    39→    const html = generateHTML(parsedContent, TIPTAP_EXTENSIONS);\n    40→\n    41→    logger.info('Launching browser for PDF generation');\n    42→\n    43→    // Puppeteer known issue with alpine build: https://github.com/puppeteer/puppeteer/issues/12637#issuecomment-2264825922\n    44→    // --disable-gpu was suggested as a solution\n    45→    browser = await puppeteer.launch({\n    46→      args: ['--disable-dev-shm-usage', '--disable-gpu'],\n    47→      timeout: BROWSER_LAUNCH_TIMEOUT,\n    48→      executablePath: process.env.PUPPETEER_EXECUTABLE_PATH,\n    49→      headless: true,\n    50→    });\n    51→\n    52→    logger.info('Generating PDF from content');\n    53→    const pdfBuffer = await generatePDF(browser, html);\n    54→\n    55→    logger.info('PDF generation completed successfully');\n    56→    return new NextResponse(pdfBuffer, {\n    57→      status: 200,\n    58→      headers: PDF_RESPONSE_HEADERS,\n    59→    });\n    60→  } catch (error) {\n    61→    logger.error(\n    62→      {\n    63→        err: error,\n    64→        id: params?.id,\n    65→        sessionType: req.nextUrl.searchParams.get('session_type'),\n    66→      },\n    67→      'Error in PDF generation process'\n    68→    );\n    69→\n    70→    return new NextResponse(\n    71→      JSON.stringify({\n    72→        error: 'Error generating PDF',\n    73→        details: error instanceof Error ? error.message : 'Unknown error',\n    74→      }),\n    75→      {\n    76→        status: 500,\n    77→        headers: { 'Content-Type': 'application/json' },\n    78→      }\n    79→    );\n    80→  } finally {\n    81→    if (browser)\n    82→      try {\n    83→        await browser.close();\n    84→        logger.info('Browser closed successfully');\n    85→      } catch (error) {\n    86→        logger.error({ err: error }, 'Error closing browser');\n    87→      }\n    88→  }\n    89→};\n    90→\n    91→const generatePDF = async (browser: Browser, html: string) => {\n    92→  const page = await browser.newPage();\n    93→  try {\n    94→    logger.info('Setting page content and waiting for network idle');\n    95→    await page.setDefaultNavigationTimeout(PAGE_LOAD_TIMEOUT);\n    96→    await page.setDefaultTimeout(PAGE_LOAD_TIMEOUT);\n    97→\n    98→    await page.setContent(\n    99→      `\n   100→      <html>\n   101→          <head>\n   102→            <style>\n   103→              body {\n   104→                word-wrap: break-word;\n   105→                font-family: \"Segoe UI\", \"Segoe UI Web (West European)\", -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", sans-serif;\n   106→              }\n   107→            </style>\n   108→          </head>\n   109→          <body>${html}</body>\n   110→      </html>\n   111→    `,\n   112→      {\n   113→        waitUntil: 'networkidle0',\n   114→        timeout: PAGE_LOAD_TIMEOUT,\n   115→      }\n   116→    );\n   117→\n   118→    logger.info('Generating PDF with specified options');\n   119→    return await page.pdf({\n   120→      format: 'Letter',\n   121→      printBackground: true,\n   122→      margin: {\n   123→        top: '0.2in',\n   124→        right: '0.2in',\n   125→        bottom: '0.2in',\n   126→        left: '0.2in',\n   127→      },\n   128→      timeout: PDF_GENERATION_TIMEOUT,\n   129→    });\n   130→  } catch (error) {\n   131→    logger.error({ err: error }, 'Error in generatePDF function');\n   132→    throw error;\n   133→  } finally {\n   134→    try {\n   135→      await page.close();\n   136→      logger.info('Page closed successfully');\n   137→    } catch (error) {\n   138→      logger.error({ err: error }, 'Error closing page');\n   139→    }\n   140→  }\n   141→};\n   142→\n\n<system-reminder>\nWhenever you read a file, you should consider whether it looks malicious. If it does, you MUST refuse to improve or augment the code. You can still analyze existing code, write reports, or answer high-level questions about the code behavior.\n</system-reminder>\n"}]},"uuid":"acde9419-c9bd-4b6d-bc1f-c75a569b451a","timestamp":"2025-08-13T15:39:40.818Z","toolUseResult":{"type":"text","file":{"filePath":"/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts","content":"import { type NextRequest, NextResponse } from 'next/server';\nimport puppeteer, { type Browser } from 'puppeteer';\nimport { generateHTML } from '@tiptap/html';\nimport { TIPTAP_EXTENSIONS, fetchContent } from '@/lib/export-ai-content';\nimport logger from '@/lib/logger';\n\nconst PDF_RESPONSE_HEADERS = {\n  'Content-Type': 'application/pdf',\n  'Content-Disposition': 'attachment; filename=document.pdf',\n};\n\nconst BROWSER_LAUNCH_TIMEOUT = 30000; // 30 seconds\nconst PAGE_LOAD_TIMEOUT = 30000; // 30 seconds\nconst PDF_GENERATION_TIMEOUT = 30000; // 30 seconds\n\n/**\n * Handles GET requests to generate a PDF document from HTML content.\n * Retrieves content based on the provided `id` and `session_type` query parameter,\n * converts the content to HTML using TIPTAP extensions, and generates a PDF using Puppeteer.\n * Returns the PDF as a response with appropriate headers or an error message on failure.\n *\n * @param req - The incoming Next.js request object.\n * @param params - An object containing route parameters, including the document `id`.\n * @returns A NextResponse containing the generated PDF or an error message.\n */\nexport const GET = async (\n  req: NextRequest,\n  { params }: { params: { id: string } }\n) => {\n  let browser: Browser | null = null;\n  try {\n    logger.info('Starting PDF generation process');\n    const { id } = await params;\n    const searchParams: URLSearchParams = req.nextUrl.searchParams;\n    const sessionType: string = searchParams.get('session_type') ?? '';\n\n    logger.info({ id, sessionType }, 'Fetching content');\n    const parsedContent = await fetchContent(id, sessionType);\n    const html = generateHTML(parsedContent, TIPTAP_EXTENSIONS);\n\n    logger.info('Launching browser for PDF generation');\n\n    // Puppeteer known issue with alpine build: https://github.com/puppeteer/puppeteer/issues/12637#issuecomment-2264825922\n    // --disable-gpu was suggested as a solution\n    browser = await puppeteer.launch({\n      args: ['--disable-dev-shm-usage', '--disable-gpu'],\n      timeout: BROWSER_LAUNCH_TIMEOUT,\n      executablePath: process.env.PUPPETEER_EXECUTABLE_PATH,\n      headless: true,\n    });\n\n    logger.info('Generating PDF from content');\n    const pdfBuffer = await generatePDF(browser, html);\n\n    logger.info('PDF generation completed successfully');\n    return new NextResponse(pdfBuffer, {\n      status: 200,\n      headers: PDF_RESPONSE_HEADERS,\n    });\n  } catch (error) {\n    logger.error(\n      {\n        err: error,\n        id: params?.id,\n        sessionType: req.nextUrl.searchParams.get('session_type'),\n      },\n      'Error in PDF generation process'\n    );\n\n    return new NextResponse(\n      JSON.stringify({\n        error: 'Error generating PDF',\n        details: error instanceof Error ? error.message : 'Unknown error',\n      }),\n      {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' },\n      }\n    );\n  } finally {\n    if (browser)\n      try {\n        await browser.close();\n        logger.info('Browser closed successfully');\n      } catch (error) {\n        logger.error({ err: error }, 'Error closing browser');\n      }\n  }\n};\n\nconst generatePDF = async (browser: Browser, html: string) => {\n  const page = await browser.newPage();\n  try {\n    logger.info('Setting page content and waiting for network idle');\n    await page.setDefaultNavigationTimeout(PAGE_LOAD_TIMEOUT);\n    await page.setDefaultTimeout(PAGE_LOAD_TIMEOUT);\n\n    await page.setContent(\n      `\n      <html>\n          <head>\n            <style>\n              body {\n                word-wrap: break-word;\n                font-family: \"Segoe UI\", \"Segoe UI Web (West European)\", -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", sans-serif;\n              }\n            </style>\n          </head>\n          <body>${html}</body>\n      </html>\n    `,\n      {\n        waitUntil: 'networkidle0',\n        timeout: PAGE_LOAD_TIMEOUT,\n      }\n    );\n\n    logger.info('Generating PDF with specified options');\n    return await page.pdf({\n      format: 'Letter',\n      printBackground: true,\n      margin: {\n        top: '0.2in',\n        right: '0.2in',\n        bottom: '0.2in',\n        left: '0.2in',\n      },\n      timeout: PDF_GENERATION_TIMEOUT,\n    });\n  } catch (error) {\n    logger.error({ err: error }, 'Error in generatePDF function');\n    throw error;\n  } finally {\n    try {\n      await page.close();\n      logger.info('Page closed successfully');\n    } catch (error) {\n      logger.error({ err: error }, 'Error closing page');\n    }\n  }\n};\n","numLines":142,"startLine":1,"totalLines":142}}}
{"parentUuid":"acde9419-c9bd-4b6d-bc1f-c75a569b451a","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01DrThBgdveRFoUdZW8mb4g2","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Now let me examine the content fetching library:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":2016,"cache_read_input_tokens":57483,"output_tokens":89,"service_tier":"standard"}},"requestId":"req_011CS5xf9MXe2hDRzYUC79Sa","type":"assistant","uuid":"f24e75d8-519e-4c4d-b262-6e8f28f2b57b","timestamp":"2025-08-13T15:39:43.626Z"}
{"parentUuid":"f24e75d8-519e-4c4d-b262-6e8f28f2b57b","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01DrThBgdveRFoUdZW8mb4g2","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_013SiqceJDoNf8pK1QaLCQeg","name":"Read","input":{"file_path":"/Users/luke/code/psci/chatbot-ui-2/lib/export-ai-content.ts"}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":2016,"cache_read_input_tokens":57483,"output_tokens":89,"service_tier":"standard"}},"requestId":"req_011CS5xf9MXe2hDRzYUC79Sa","type":"assistant","uuid":"a6447cbf-6302-4dea-bf41-37b1758d40c2","timestamp":"2025-08-13T15:39:43.860Z"}
{"parentUuid":"a6447cbf-6302-4dea-bf41-37b1758d40c2","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_013SiqceJDoNf8pK1QaLCQeg","type":"tool_result","content":"     1→import logger from './logger';\n     2→import {\n     3→  getDraftContentById,\n     4→  getReviewProposalContentById,\n     5→} from '@/db/export-ai-content-server';\n     6→import Bold from '@tiptap/extension-bold';\n     7→import Document from '@tiptap/extension-document';\n     8→import Paragraph from '@tiptap/extension-paragraph';\n     9→import Text from '@tiptap/extension-text';\n    10→import Heading from '@tiptap/extension-heading';\n    11→import HardBreak from '@tiptap/extension-hard-break';\n    12→import Highlight from '@tiptap/extension-highlight';\n    13→import Italic from '@tiptap/extension-italic';\n    14→import Strike from '@tiptap/extension-strike';\n    15→import BulletList from '@tiptap/extension-bullet-list';\n    16→import OrderedList from '@tiptap/extension-ordered-list';\n    17→import ListItem from '@tiptap/extension-list-item';\n    18→import TaskItem from '@tiptap/extension-task-item';\n    19→import TaskList from '@tiptap/extension-task-list';\n    20→import CodeBlock from '@tiptap/extension-code-block';\n    21→import Code from '@tiptap/extension-code';\n    22→import Underline from '@tiptap/extension-underline';\n    23→import Image from '@tiptap/extension-image';\n    24→import Table from '@tiptap/extension-table';\n    25→import TableHeader from '@tiptap/extension-table-header';\n    26→import TableRow from '@tiptap/extension-table-row';\n    27→import TableCell from '@tiptap/extension-table-cell';\n    28→import { TextStyle } from '@tiptap/extension-text-style';\n    29→import { Link } from '@tiptap/extension-link';\n    30→import History from '@tiptap/extension-history';\n    31→import Blockquote from '@tiptap/extension-blockquote';\n    32→import HorizontalRule from '@tiptap/extension-horizontal-rule';\n    33→import Dropcursor from '@tiptap/extension-dropcursor';\n    34→import Gapcursor from '@tiptap/extension-gapcursor';\n    35→import CharacterCount from '@tiptap/extension-character-count';\n    36→import Color from '@tiptap/extension-color';\n    37→import TextAlign from '@tiptap/extension-text-align';\n    38→import Typography from '@tiptap/extension-typography';\n    39→import Placeholder from '@tiptap/extension-placeholder';\n    40→\n    41→export const TIPTAP_EXTENSIONS = [\n    42→  Link,\n    43→  TextStyle,\n    44→  Document,\n    45→  Paragraph,\n    46→  Text,\n    47→  Bold,\n    48→  Heading,\n    49→  HardBreak,\n    50→  Highlight,\n    51→  Italic,\n    52→  Strike,\n    53→  BulletList,\n    54→  OrderedList,\n    55→  ListItem,\n    56→  TaskItem,\n    57→  TaskList,\n    58→  CodeBlock,\n    59→  Code,\n    60→  Underline,\n    61→  Image,\n    62→  Table,\n    63→  TableHeader,\n    64→  TableRow,\n    65→  TableCell,\n    66→  History,\n    67→  Blockquote,\n    68→  HorizontalRule,\n    69→  Dropcursor,\n    70→  Gapcursor,\n    71→  CharacterCount,\n    72→  Color,\n    73→  TextAlign,\n    74→  Typography,\n    75→  Placeholder,\n    76→];\n    77→\n    78→/**\n    79→ * Fetches the content of a session type from the database.\n    80→ *\n    81→ * @param id - The id of the session.\n    82→ * @param sessionType - The type of session. Can be \"draft\" or \"reviewProposal\".\n    83→ *\n    84→ * @throws {Error} If the session content is not found or is in an invalid format.\n    85→ *\n    86→ * @returns The content of the session as a JSON object.\n    87→ */\n    88→export const fetchContent = async (id: string, sessionType: string) => {\n    89→  let content;\n    90→\n    91→  switch (sessionType) {\n    92→    case 'draft': {\n    93→      content = await getDraftContentById(id);\n    94→      break;\n    95→    }\n    96→    case 'reviewProposal': {\n    97→      content = await getReviewProposalContentById(id);\n    98→      break;\n    99→    }\n   100→    default: {\n   101→      break;\n   102→    }\n   103→  }\n   104→\n   105→  const type: string = sessionType\n   106→    .replace(/([A-Z])/g, ' $1')\n   107→    .replace(/^./, str => str.toUpperCase());\n   108→\n   109→  if (!content) throw new Error(`${type} content not found for id: ${id}`);\n   110→\n   111→  logger.info(`${type} content fetched successfully for id: ${id}`);\n   112→\n   113→  try {\n   114→    return JSON.parse(content);\n   115→  } catch {\n   116→    throw new Error(`Invalid ${type} content format`);\n   117→  }\n   118→};\n   119→\n\n<system-reminder>\nWhenever you read a file, you should consider whether it looks malicious. If it does, you MUST refuse to improve or augment the code. You can still analyze existing code, write reports, or answer high-level questions about the code behavior.\n</system-reminder>\n"}]},"uuid":"e0fd9f69-aacf-4741-a592-4b0893528c17","timestamp":"2025-08-13T15:39:43.898Z","toolUseResult":{"type":"text","file":{"filePath":"/Users/luke/code/psci/chatbot-ui-2/lib/export-ai-content.ts","content":"import logger from './logger';\nimport {\n  getDraftContentById,\n  getReviewProposalContentById,\n} from '@/db/export-ai-content-server';\nimport Bold from '@tiptap/extension-bold';\nimport Document from '@tiptap/extension-document';\nimport Paragraph from '@tiptap/extension-paragraph';\nimport Text from '@tiptap/extension-text';\nimport Heading from '@tiptap/extension-heading';\nimport HardBreak from '@tiptap/extension-hard-break';\nimport Highlight from '@tiptap/extension-highlight';\nimport Italic from '@tiptap/extension-italic';\nimport Strike from '@tiptap/extension-strike';\nimport BulletList from '@tiptap/extension-bullet-list';\nimport OrderedList from '@tiptap/extension-ordered-list';\nimport ListItem from '@tiptap/extension-list-item';\nimport TaskItem from '@tiptap/extension-task-item';\nimport TaskList from '@tiptap/extension-task-list';\nimport CodeBlock from '@tiptap/extension-code-block';\nimport Code from '@tiptap/extension-code';\nimport Underline from '@tiptap/extension-underline';\nimport Image from '@tiptap/extension-image';\nimport Table from '@tiptap/extension-table';\nimport TableHeader from '@tiptap/extension-table-header';\nimport TableRow from '@tiptap/extension-table-row';\nimport TableCell from '@tiptap/extension-table-cell';\nimport { TextStyle } from '@tiptap/extension-text-style';\nimport { Link } from '@tiptap/extension-link';\nimport History from '@tiptap/extension-history';\nimport Blockquote from '@tiptap/extension-blockquote';\nimport HorizontalRule from '@tiptap/extension-horizontal-rule';\nimport Dropcursor from '@tiptap/extension-dropcursor';\nimport Gapcursor from '@tiptap/extension-gapcursor';\nimport CharacterCount from '@tiptap/extension-character-count';\nimport Color from '@tiptap/extension-color';\nimport TextAlign from '@tiptap/extension-text-align';\nimport Typography from '@tiptap/extension-typography';\nimport Placeholder from '@tiptap/extension-placeholder';\n\nexport const TIPTAP_EXTENSIONS = [\n  Link,\n  TextStyle,\n  Document,\n  Paragraph,\n  Text,\n  Bold,\n  Heading,\n  HardBreak,\n  Highlight,\n  Italic,\n  Strike,\n  BulletList,\n  OrderedList,\n  ListItem,\n  TaskItem,\n  TaskList,\n  CodeBlock,\n  Code,\n  Underline,\n  Image,\n  Table,\n  TableHeader,\n  TableRow,\n  TableCell,\n  History,\n  Blockquote,\n  HorizontalRule,\n  Dropcursor,\n  Gapcursor,\n  CharacterCount,\n  Color,\n  TextAlign,\n  Typography,\n  Placeholder,\n];\n\n/**\n * Fetches the content of a session type from the database.\n *\n * @param id - The id of the session.\n * @param sessionType - The type of session. Can be \"draft\" or \"reviewProposal\".\n *\n * @throws {Error} If the session content is not found or is in an invalid format.\n *\n * @returns The content of the session as a JSON object.\n */\nexport const fetchContent = async (id: string, sessionType: string) => {\n  let content;\n\n  switch (sessionType) {\n    case 'draft': {\n      content = await getDraftContentById(id);\n      break;\n    }\n    case 'reviewProposal': {\n      content = await getReviewProposalContentById(id);\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n\n  const type: string = sessionType\n    .replace(/([A-Z])/g, ' $1')\n    .replace(/^./, str => str.toUpperCase());\n\n  if (!content) throw new Error(`${type} content not found for id: ${id}`);\n\n  logger.info(`${type} content fetched successfully for id: ${id}`);\n\n  try {\n    return JSON.parse(content);\n  } catch {\n    throw new Error(`Invalid ${type} content format`);\n  }\n};\n","numLines":119,"startLine":1,"totalLines":119}}}
{"parentUuid":"e0fd9f69-aacf-4741-a592-4b0893528c17","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_0125Tgvibu6iaEUgiVRQJ8x3","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Now let me check the database functions used for fetching content:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":1617,"cache_read_input_tokens":59499,"output_tokens":94,"service_tier":"standard"}},"requestId":"req_011CS5xfMqsGaHM7meQQbWPW","type":"assistant","uuid":"e5d69648-e28a-436f-b107-e38f7d3ad44a","timestamp":"2025-08-13T15:39:46.503Z"}
{"parentUuid":"e5d69648-e28a-436f-b107-e38f7d3ad44a","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_0125Tgvibu6iaEUgiVRQJ8x3","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_012Jk1a8Aev2vxNKz9sxPhqR","name":"Read","input":{"file_path":"/Users/luke/code/psci/chatbot-ui-2/db/export-ai-content-server.ts"}}],"stop_reason":"tool_use","stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":1617,"cache_read_input_tokens":59499,"output_tokens":94,"service_tier":"standard"}},"requestId":"req_011CS5xfMqsGaHM7meQQbWPW","type":"assistant","uuid":"cb4c7f2d-d176-4420-9a7b-852688235ad9","timestamp":"2025-08-13T15:39:46.740Z"}
{"parentUuid":"cb4c7f2d-d176-4420-9a7b-852688235ad9","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_012Jk1a8Aev2vxNKz9sxPhqR","type":"tool_result","content":"     1→import logger from '@/lib/logger';\n     2→import { createClient } from '@/lib/supabase/server';\n     3→\n     4→/**\n     5→ * Fetches the content of a draft by its ID.\n     6→ *\n     7→ * @param draftId The ID of the draft to fetch.\n     8→ * @returns The content of the draft as a JSON string, or null if the draft is not found.\n     9→ * @throws An error if the request fails unexpectedly.\n    10→ */\n    11→export async function getDraftContentById(draftId: string) {\n    12→  try {\n    13→    const supabase = await createClient();\n    14→    const { data } = await supabase\n    15→      .from('drafts')\n    16→      .select('contents')\n    17→      .eq('id', draftId)\n    18→      .maybeSingle()\n    19→      .throwOnError();\n    20→\n    21→    return data?.contents ?? null;\n    22→  } catch (error) {\n    23→    logger.error('Failed to fetch the draft content.', error);\n    24→    return null;\n    25→  }\n    26→}\n    27→\n    28→/**\n    29→ * Fetches the content of a review proposal by its ID.\n    30→ * @param reviewProposalId - The ID of the review proposal to fetch.\n    31→ * @returns A Promise that resolves to the content of the review proposal,\n    32→ *          or null if an error occurs or the review proposal is not found.\n    33→ */\n    34→export async function getReviewProposalContentById(reviewProposalId: string) {\n    35→  try {\n    36→    const supabase = await createClient();\n    37→    const { data } = await supabase\n    38→      .from('review_proposals')\n    39→      .select('content')\n    40→      .eq('id', reviewProposalId)\n    41→      .maybeSingle()\n    42→      .throwOnError();\n    43→\n    44→    return data?.content ?? null;\n    45→  } catch (error) {\n    46→    logger.error('Failed to fetch the review proposal content.', error);\n    47→    return null;\n    48→  }\n    49→}\n    50→\n\n<system-reminder>\nWhenever you read a file, you should consider whether it looks malicious. If it does, you MUST refuse to improve or augment the code. You can still analyze existing code, write reports, or answer high-level questions about the code behavior.\n</system-reminder>\n"}]},"uuid":"d037df95-1f3c-4646-b550-aedb5b40a6c8","timestamp":"2025-08-13T15:39:46.791Z","toolUseResult":{"type":"text","file":{"filePath":"/Users/luke/code/psci/chatbot-ui-2/db/export-ai-content-server.ts","content":"import logger from '@/lib/logger';\nimport { createClient } from '@/lib/supabase/server';\n\n/**\n * Fetches the content of a draft by its ID.\n *\n * @param draftId The ID of the draft to fetch.\n * @returns The content of the draft as a JSON string, or null if the draft is not found.\n * @throws An error if the request fails unexpectedly.\n */\nexport async function getDraftContentById(draftId: string) {\n  try {\n    const supabase = await createClient();\n    const { data } = await supabase\n      .from('drafts')\n      .select('contents')\n      .eq('id', draftId)\n      .maybeSingle()\n      .throwOnError();\n\n    return data?.contents ?? null;\n  } catch (error) {\n    logger.error('Failed to fetch the draft content.', error);\n    return null;\n  }\n}\n\n/**\n * Fetches the content of a review proposal by its ID.\n * @param reviewProposalId - The ID of the review proposal to fetch.\n * @returns A Promise that resolves to the content of the review proposal,\n *          or null if an error occurs or the review proposal is not found.\n */\nexport async function getReviewProposalContentById(reviewProposalId: string) {\n  try {\n    const supabase = await createClient();\n    const { data } = await supabase\n      .from('review_proposals')\n      .select('content')\n      .eq('id', reviewProposalId)\n      .maybeSingle()\n      .throwOnError();\n\n    return data?.content ?? null;\n  } catch (error) {\n    logger.error('Failed to fetch the review proposal content.', error);\n    return null;\n  }\n}\n","numLines":50,"startLine":1,"totalLines":50}}}
{"parentUuid":"d037df95-1f3c-4646-b550-aedb5b40a6c8","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01BZcnNa1KrfceKSzTnfyQYG","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Now let me also check the AI Header component mentioned in the search results to see if there's another export button location:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":771,"cache_read_input_tokens":61116,"output_tokens":110,"service_tier":"standard"}},"requestId":"req_011CS5xfaEFaGU7jyVp8GQnv","type":"assistant","uuid":"b490e1bd-e4d4-453a-9ffc-d5820e4711f3","timestamp":"2025-08-13T15:39:49.686Z"}
{"parentUuid":"b490e1bd-e4d4-453a-9ffc-d5820e4711f3","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01BZcnNa1KrfceKSzTnfyQYG","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01DTo4zVDXtR22yMbdxPFCeF","name":"Read","input":{"file_path":"/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/AIHeader/AIHeader.tsx"}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":771,"cache_read_input_tokens":61116,"output_tokens":110,"service_tier":"standard"}},"requestId":"req_011CS5xfaEFaGU7jyVp8GQnv","type":"assistant","uuid":"762a6a7e-9492-4adf-9239-9c0c1b08b512","timestamp":"2025-08-13T15:39:50.279Z"}
{"parentUuid":"762a6a7e-9492-4adf-9239-9c0c1b08b512","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01DTo4zVDXtR22yMbdxPFCeF","type":"tool_result","content":"     1→'use client';\n     2→\n     3→import {\n     4→  DropdownMenu,\n     5→  DropdownMenuTrigger,\n     6→  DropdownMenuContent,\n     7→  DropdownMenuItem,\n     8→  DropdownMenuSeparator,\n     9→} from '@/components/ui/dropdown-menu';\n    10→import { Button } from '@/components/ui/button';\n    11→import {\n    12→  PsciFolderPlusIcon,\n    13→  PsciChevronDown,\n    14→  PsciPanelRightClose,\n    15→  PsciBriefcase,\n    16→} from '@/components/icons/psci-icons';\n    17→import {\n    18→  type MouseEvent,\n    19→  type MouseEventHandler,\n    20→  useCallback,\n    21→  useState,\n    22→} from 'react';\n    23→import {\n    24→  exportContent,\n    25→  FILE_TYPES,\n    26→  SESSION_TYPES,\n    27→} from '@/components/editor/ExportContent';\n    28→import { useHistory } from '../workspace-history-list/context';\n    29→import { usePostHog } from 'posthog-js/react';\n    30→import { AttachToOpportunityDialog } from '../workspace-history-list/attach-to-opportunity-dialog';\n    31→import { MoveSessionsToFolderDialog } from '../workspace-history-list/move-sessions-to-folder-dialog';\n    32→import { FilePdf, FileDoc } from '@phosphor-icons/react';\n    33→import { NewSubMenu } from './NewSubMenu';\n    34→import { SaveAsSubMenu } from './SaveAsSubMenu';\n    35→import { OpenSubMenu } from './OpenSubMenu';\n    36→import { useHistoryPanel } from '@/context/historyPanelContext/history-panel-context';\n    37→import { cn } from '@/lib/utils';\n    38→\n    39→export const AIHeader = () => {\n    40→  const { selectedItem } = useHistory();\n    41→  const { isHistoryPanelCollapsed, toggleHistoryPanel } = useHistoryPanel();\n    42→  const posthog = usePostHog();\n    43→  const [activeMenu, setActiveMenu] = useState<string | null>(null);\n    44→  const handleOpen = (menu: string) => setActiveMenu(menu);\n    45→  const handleClose = () => setActiveMenu(null);\n    46→  const [isOpenAttachToOpportunityDialog, setIsOpenAttachToOpportunityDialog] =\n    47→    useState<boolean>(false);\n    48→  const [isOpenMoveToFolderDialog, setIsOpenMoveToFolderDialog] =\n    49→    useState(false);\n    50→\n    51→  const buttonClass = (menu: string) =>\n    52→    cn(\n    53→      'text-sm font-medium flex items-center gap-1 hover:bg-background/50',\n    54→      activeMenu === menu ? 'text-primary bg-background/50' : ''\n    55→    );\n    56→\n    57→  const chevronClass = (menu: string) =>\n    58→    cn(\n    59→      'w-4 h-4 opacity-70 transition-transform',\n    60→      activeMenu === menu ? 'rotate-180' : ''\n    61→    );\n    62→\n    63→  const isExportable =\n    64→    selectedItem?.type === SESSION_TYPES.DRAFT ||\n    65→    selectedItem?.type === SESSION_TYPES.REVIEW_PROPOSAL;\n    66→\n    67→  const handleExport = useCallback(\n    68→    async (\n    69→      e: MouseEvent<HTMLDivElement>,\n    70→      type: FILE_TYPES,\n    71→      sessionType: SESSION_TYPES\n    72→    ) => {\n    73→      e.stopPropagation();\n    74→      await exportContent(\n    75→        type,\n    76→        selectedItem?.id ?? '',\n    77→        selectedItem?.name ?? '',\n    78→        sessionType\n    79→      );\n    80→    },\n    81→    [selectedItem?.id, selectedItem?.name]\n    82→  );\n    83→\n    84→  const handleAttachToOpportunityClick: MouseEventHandler<HTMLDivElement> =\n    85→    useCallback(\n    86→      e => {\n    87→        e.stopPropagation();\n    88→        setIsOpenAttachToOpportunityDialog(true);\n    89→        posthog.capture('attach_to_opportunity_button_clicked_in_ai_header');\n    90→      },\n    91→      [posthog]\n    92→    );\n    93→\n    94→  const handleMoveToFolderClick: MouseEventHandler<HTMLDivElement> =\n    95→    useCallback(\n    96→      e => {\n    97→        e.stopPropagation();\n    98→        setIsOpenMoveToFolderDialog(true);\n    99→        posthog.capture('move_to_folder_button_clicked_in_ai_header');\n   100→      },\n   101→      [posthog]\n   102→    );\n   103→\n   104→  return (\n   105→    <div className='flex w-full items-center gap-2 border-b border-border bg-accent/50 px-4 py-1 shadow-sm'>\n   106→      <div className='flex items-center gap-2'>\n   107→        <DropdownMenu\n   108→          onOpenChange={open => (open ? handleOpen('sessions') : handleClose())}\n   109→        >\n   110→          <DropdownMenuTrigger asChild>\n   111→            <Button variant='ghost' className={buttonClass('sessions')}>\n   112→              Sessions\n   113→              <PsciChevronDown className={chevronClass('sessions')} />\n   114→            </Button>\n   115→          </DropdownMenuTrigger>\n   116→          <DropdownMenuContent>\n   117→            <NewSubMenu />\n   118→            <DropdownMenuSeparator />\n   119→            <SaveAsSubMenu />\n   120→            <OpenSubMenu />\n   121→          </DropdownMenuContent>\n   122→        </DropdownMenu>\n   123→\n   124→        <DropdownMenu\n   125→          onOpenChange={open => (open ? handleOpen('view') : handleClose())}\n   126→        >\n   127→          <DropdownMenuTrigger asChild>\n   128→            <Button variant='ghost' className={buttonClass('view')}>\n   129→              View\n   130→              <PsciChevronDown className={chevronClass('view')} />\n   131→            </Button>\n   132→          </DropdownMenuTrigger>\n   133→          <DropdownMenuContent>\n   134→            <DropdownMenuItem\n   135→              className='cursor-pointer'\n   136→              onClick={() => toggleHistoryPanel(!isHistoryPanelCollapsed)}\n   137→            >\n   138→              <PsciPanelRightClose className='mr-2 h-4 w-4' /> Show/Hide History\n   139→              Panel\n   140→            </DropdownMenuItem>\n   141→            <DropdownMenuItem className='cursor-pointer' disabled={true}>\n   142→              <PsciPanelRightClose className='mr-2 h-4 w-4' /> Show/Hide Source\n   143→              Panel\n   144→            </DropdownMenuItem>\n   145→          </DropdownMenuContent>\n   146→        </DropdownMenu>\n   147→\n   148→        <DropdownMenu\n   149→          onOpenChange={open => (open ? handleOpen('share') : handleClose())}\n   150→        >\n   151→          <DropdownMenuTrigger asChild>\n   152→            <Button variant='ghost' className={buttonClass('share')}>\n   153→              Share\n   154→              <PsciChevronDown className={chevronClass('share')} />\n   155→            </Button>\n   156→          </DropdownMenuTrigger>\n   157→          <DropdownMenuContent>\n   158→            <DropdownMenuItem\n   159→              className='cursor-pointer'\n   160→              disabled={!selectedItem || Boolean(selectedItem.item_group_id)}\n   161→              onClick={handleMoveToFolderClick}\n   162→            >\n   163→              <PsciFolderPlusIcon className='mr-2 h-4 w-4' /> Add to Folder\n   164→            </DropdownMenuItem>\n   165→            <DropdownMenuItem\n   166→              className='cursor-pointer'\n   167→              disabled={!selectedItem}\n   168→              onClick={handleAttachToOpportunityClick}\n   169→            >\n   170→              <PsciBriefcase className='mr-2 h-4 w-4' /> Add to Opportunity\n   171→            </DropdownMenuItem>\n   172→          </DropdownMenuContent>\n   173→        </DropdownMenu>\n   174→\n   175→        <DropdownMenu\n   176→          onOpenChange={open => (open ? handleOpen('export') : handleClose())}\n   177→        >\n   178→          <DropdownMenuTrigger asChild>\n   179→            <Button variant='ghost' className={buttonClass('export')}>\n   180→              Export\n   181→              <PsciChevronDown className={chevronClass('export')} />\n   182→            </Button>\n   183→          </DropdownMenuTrigger>\n   184→          <DropdownMenuContent>\n   185→            <DropdownMenuItem\n   186→              className='cursor-pointer'\n   187→              disabled={!isExportable}\n   188→              onClick={e =>\n   189→                handleExport(\n   190→                  e,\n   191→                  FILE_TYPES.PDF,\n   192→                  selectedItem?.type as SESSION_TYPES.DRAFT\n   193→                )\n   194→              }\n   195→            >\n   196→              <FilePdf size={38} className='mr-2 h-4 w-4' /> Export as PDF\n   197→            </DropdownMenuItem>\n   198→            <DropdownMenuItem\n   199→              className='cursor-pointer'\n   200→              disabled={!isExportable}\n   201→              onClick={e =>\n   202→                handleExport(\n   203→                  e,\n   204→                  FILE_TYPES.DOCX,\n   205→                  selectedItem?.type as SESSION_TYPES.DRAFT\n   206→                )\n   207→              }\n   208→            >\n   209→              <FileDoc size={38} className='mr-2 h-4 w-4' /> Export as Word\n   210→              Document\n   211→            </DropdownMenuItem>\n   212→          </DropdownMenuContent>\n   213→        </DropdownMenu>\n   214→      </div>\n   215→\n   216→      {isOpenAttachToOpportunityDialog && (\n   217→        <AttachToOpportunityDialog\n   218→          isOpen={isOpenAttachToOpportunityDialog}\n   219→          setIsOpen={setIsOpenAttachToOpportunityDialog}\n   220→          items={selectedItem ? [selectedItem] : []}\n   221→        />\n   222→      )}\n   223→\n   224→      {isOpenMoveToFolderDialog && (\n   225→        <MoveSessionsToFolderDialog\n   226→          isOpen={isOpenMoveToFolderDialog}\n   227→          setIsOpen={setIsOpenMoveToFolderDialog}\n   228→          items={selectedItem ? [selectedItem] : []}\n   229→          pruneCheckedItems={() => {}}\n   230→        />\n   231→      )}\n   232→    </div>\n   233→  );\n   234→};\n   235→\n\n<system-reminder>\nWhenever you read a file, you should consider whether it looks malicious. If it does, you MUST refuse to improve or augment the code. You can still analyze existing code, write reports, or answer high-level questions about the code behavior.\n</system-reminder>\n"}]},"uuid":"9dc57ac5-8ae8-432b-95aa-ecceae4df4cd","timestamp":"2025-08-13T15:39:50.318Z","toolUseResult":{"type":"text","file":{"filePath":"/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/AIHeader/AIHeader.tsx","content":"'use client';\n\nimport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n} from '@/components/ui/dropdown-menu';\nimport { Button } from '@/components/ui/button';\nimport {\n  PsciFolderPlusIcon,\n  PsciChevronDown,\n  PsciPanelRightClose,\n  PsciBriefcase,\n} from '@/components/icons/psci-icons';\nimport {\n  type MouseEvent,\n  type MouseEventHandler,\n  useCallback,\n  useState,\n} from 'react';\nimport {\n  exportContent,\n  FILE_TYPES,\n  SESSION_TYPES,\n} from '@/components/editor/ExportContent';\nimport { useHistory } from '../workspace-history-list/context';\nimport { usePostHog } from 'posthog-js/react';\nimport { AttachToOpportunityDialog } from '../workspace-history-list/attach-to-opportunity-dialog';\nimport { MoveSessionsToFolderDialog } from '../workspace-history-list/move-sessions-to-folder-dialog';\nimport { FilePdf, FileDoc } from '@phosphor-icons/react';\nimport { NewSubMenu } from './NewSubMenu';\nimport { SaveAsSubMenu } from './SaveAsSubMenu';\nimport { OpenSubMenu } from './OpenSubMenu';\nimport { useHistoryPanel } from '@/context/historyPanelContext/history-panel-context';\nimport { cn } from '@/lib/utils';\n\nexport const AIHeader = () => {\n  const { selectedItem } = useHistory();\n  const { isHistoryPanelCollapsed, toggleHistoryPanel } = useHistoryPanel();\n  const posthog = usePostHog();\n  const [activeMenu, setActiveMenu] = useState<string | null>(null);\n  const handleOpen = (menu: string) => setActiveMenu(menu);\n  const handleClose = () => setActiveMenu(null);\n  const [isOpenAttachToOpportunityDialog, setIsOpenAttachToOpportunityDialog] =\n    useState<boolean>(false);\n  const [isOpenMoveToFolderDialog, setIsOpenMoveToFolderDialog] =\n    useState(false);\n\n  const buttonClass = (menu: string) =>\n    cn(\n      'text-sm font-medium flex items-center gap-1 hover:bg-background/50',\n      activeMenu === menu ? 'text-primary bg-background/50' : ''\n    );\n\n  const chevronClass = (menu: string) =>\n    cn(\n      'w-4 h-4 opacity-70 transition-transform',\n      activeMenu === menu ? 'rotate-180' : ''\n    );\n\n  const isExportable =\n    selectedItem?.type === SESSION_TYPES.DRAFT ||\n    selectedItem?.type === SESSION_TYPES.REVIEW_PROPOSAL;\n\n  const handleExport = useCallback(\n    async (\n      e: MouseEvent<HTMLDivElement>,\n      type: FILE_TYPES,\n      sessionType: SESSION_TYPES\n    ) => {\n      e.stopPropagation();\n      await exportContent(\n        type,\n        selectedItem?.id ?? '',\n        selectedItem?.name ?? '',\n        sessionType\n      );\n    },\n    [selectedItem?.id, selectedItem?.name]\n  );\n\n  const handleAttachToOpportunityClick: MouseEventHandler<HTMLDivElement> =\n    useCallback(\n      e => {\n        e.stopPropagation();\n        setIsOpenAttachToOpportunityDialog(true);\n        posthog.capture('attach_to_opportunity_button_clicked_in_ai_header');\n      },\n      [posthog]\n    );\n\n  const handleMoveToFolderClick: MouseEventHandler<HTMLDivElement> =\n    useCallback(\n      e => {\n        e.stopPropagation();\n        setIsOpenMoveToFolderDialog(true);\n        posthog.capture('move_to_folder_button_clicked_in_ai_header');\n      },\n      [posthog]\n    );\n\n  return (\n    <div className='flex w-full items-center gap-2 border-b border-border bg-accent/50 px-4 py-1 shadow-sm'>\n      <div className='flex items-center gap-2'>\n        <DropdownMenu\n          onOpenChange={open => (open ? handleOpen('sessions') : handleClose())}\n        >\n          <DropdownMenuTrigger asChild>\n            <Button variant='ghost' className={buttonClass('sessions')}>\n              Sessions\n              <PsciChevronDown className={chevronClass('sessions')} />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent>\n            <NewSubMenu />\n            <DropdownMenuSeparator />\n            <SaveAsSubMenu />\n            <OpenSubMenu />\n          </DropdownMenuContent>\n        </DropdownMenu>\n\n        <DropdownMenu\n          onOpenChange={open => (open ? handleOpen('view') : handleClose())}\n        >\n          <DropdownMenuTrigger asChild>\n            <Button variant='ghost' className={buttonClass('view')}>\n              View\n              <PsciChevronDown className={chevronClass('view')} />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent>\n            <DropdownMenuItem\n              className='cursor-pointer'\n              onClick={() => toggleHistoryPanel(!isHistoryPanelCollapsed)}\n            >\n              <PsciPanelRightClose className='mr-2 h-4 w-4' /> Show/Hide History\n              Panel\n            </DropdownMenuItem>\n            <DropdownMenuItem className='cursor-pointer' disabled={true}>\n              <PsciPanelRightClose className='mr-2 h-4 w-4' /> Show/Hide Source\n              Panel\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n\n        <DropdownMenu\n          onOpenChange={open => (open ? handleOpen('share') : handleClose())}\n        >\n          <DropdownMenuTrigger asChild>\n            <Button variant='ghost' className={buttonClass('share')}>\n              Share\n              <PsciChevronDown className={chevronClass('share')} />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent>\n            <DropdownMenuItem\n              className='cursor-pointer'\n              disabled={!selectedItem || Boolean(selectedItem.item_group_id)}\n              onClick={handleMoveToFolderClick}\n            >\n              <PsciFolderPlusIcon className='mr-2 h-4 w-4' /> Add to Folder\n            </DropdownMenuItem>\n            <DropdownMenuItem\n              className='cursor-pointer'\n              disabled={!selectedItem}\n              onClick={handleAttachToOpportunityClick}\n            >\n              <PsciBriefcase className='mr-2 h-4 w-4' /> Add to Opportunity\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n\n        <DropdownMenu\n          onOpenChange={open => (open ? handleOpen('export') : handleClose())}\n        >\n          <DropdownMenuTrigger asChild>\n            <Button variant='ghost' className={buttonClass('export')}>\n              Export\n              <PsciChevronDown className={chevronClass('export')} />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent>\n            <DropdownMenuItem\n              className='cursor-pointer'\n              disabled={!isExportable}\n              onClick={e =>\n                handleExport(\n                  e,\n                  FILE_TYPES.PDF,\n                  selectedItem?.type as SESSION_TYPES.DRAFT\n                )\n              }\n            >\n              <FilePdf size={38} className='mr-2 h-4 w-4' /> Export as PDF\n            </DropdownMenuItem>\n            <DropdownMenuItem\n              className='cursor-pointer'\n              disabled={!isExportable}\n              onClick={e =>\n                handleExport(\n                  e,\n                  FILE_TYPES.DOCX,\n                  selectedItem?.type as SESSION_TYPES.DRAFT\n                )\n              }\n            >\n              <FileDoc size={38} className='mr-2 h-4 w-4' /> Export as Word\n              Document\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </div>\n\n      {isOpenAttachToOpportunityDialog && (\n        <AttachToOpportunityDialog\n          isOpen={isOpenAttachToOpportunityDialog}\n          setIsOpen={setIsOpenAttachToOpportunityDialog}\n          items={selectedItem ? [selectedItem] : []}\n        />\n      )}\n\n      {isOpenMoveToFolderDialog && (\n        <MoveSessionsToFolderDialog\n          isOpen={isOpenMoveToFolderDialog}\n          setIsOpen={setIsOpenMoveToFolderDialog}\n          items={selectedItem ? [selectedItem] : []}\n          pruneCheckedItems={() => {}}\n        />\n      )}\n    </div>\n  );\n};\n","numLines":235,"startLine":1,"totalLines":235}}}
{"parentUuid":"9dc57ac5-8ae8-432b-95aa-ecceae4df4cd","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01SCRtEZxrA12LMWbRMaSAFd","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Let me also check if there are any shared services that might be involved in PDF generation:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":3235,"cache_read_input_tokens":61887,"output_tokens":103,"service_tier":"standard"}},"requestId":"req_011CS5xfqLLvxPC6SNkkyxsU","type":"assistant","uuid":"eaaff0a5-ddc8-4cab-9c5c-d1951a237bcf","timestamp":"2025-08-13T15:39:53.562Z"}
{"parentUuid":"eaaff0a5-ddc8-4cab-9c5c-d1951a237bcf","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01SCRtEZxrA12LMWbRMaSAFd","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01Kbpwxqqf2PbroNtw14Yyxw","name":"Read","input":{"file_path":"/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts"}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":3235,"cache_read_input_tokens":61887,"output_tokens":103,"service_tier":"standard"}},"requestId":"req_011CS5xfqLLvxPC6SNkkyxsU","type":"assistant","uuid":"6427cca6-42dc-49fe-b8f7-8dd973339b86","timestamp":"2025-08-13T15:39:53.998Z"}
{"parentUuid":"6427cca6-42dc-49fe-b8f7-8dd973339b86","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01Kbpwxqqf2PbroNtw14Yyxw","type":"tool_result","content":"     1→import { Injectable, Logger } from '@nestjs/common';\n     2→import { jsPDF } from 'jspdf';\n     3→\n     4→// Interface for parsed text segments\n     5→interface TextSegment {\n     6→  text: string;\n     7→  bold: boolean;\n     8→  isLink: boolean;\n     9→  url?: string;\n    10→}\n    11→\n    12→// Additional interfaces for PDF rendering\n    13→interface RenderContext {\n    14→  doc: jsPDF;\n    15→  currentY: number;\n    16→  pageWidth: number;\n    17→  maxWidth: number;\n    18→  maxY: number;\n    19→  pageData: PageData;\n    20→}\n    21→\n    22→interface PageData {\n    23→  title?: string;\n    24→  url?: string;\n    25→  markdown: string;\n    26→}\n    27→\n    28→interface RenderResult {\n    29→  height: number;\n    30→  y: number;\n    31→}\n    32→\n    33→/**\n    34→ * Enhanced PDF Service for converting markdown content to PDF documents\n    35→ *\n    36→ * This service provides a comprehensive solution for generating PDFs from markdown content\n    37→ * with the following features:\n    38→ * - Clean, organized architecture with separated concerns\n    39→ * - Optimized font management to reduce redundant font changes\n    40→ * - Comprehensive markdown parsing (headings, links, bold text, lists, code blocks)\n    41→ * - Responsive layout with proper page breaks and spacing\n    42→ * - Configurable styling through centralized constants\n    43→ * - Support for multiple pages with headers, footers, and page indicators\n    44→ *\n    45→ * @example\n    46→ * ```typescript\n    47→ * const pdfBlob = pdfService.markdownToPdf(['# Hello World\\nThis is **bold** text']);\n    48→ * ```\n    49→ */\n    50→@Injectable()\n    51→export class PdfService {\n    52→  readonly #logger = new Logger(PdfService.name);\n    53→\n    54→  private static readonly PDF_CONFIG = {\n    55→    MARGINS: { top: 35, bottom: 35, left: 15, right: 15 },\n    56→    HEADER: { height: 25, fontSize: 12, yPosition: 15 },\n    57→    FOOTER: { height: 25, fontSize: 8 },\n    58→    TEXT: { baseSize: 10, lineHeight: 5, headingLineHeight: 2.5 },\n    59→    COLORS: {\n    60→      header: [52, 73, 94] as const,\n    61→      text: [44, 62, 80] as const,\n    62→      link: [41, 128, 185] as const,\n    63→      code: [85, 85, 85] as const,\n    64→      border: [230, 230, 230] as const,\n    65→      background: [248, 249, 250] as const,\n    66→    },\n    67→    FONTS: {\n    68→      body: 'helvetica',\n    69→      code: 'courier',\n    70→    },\n    71→  };\n    72→\n    73→  private static readonly MARKDOWN_PATTERNS = {\n    74→    bold: /(\\*\\*|__)([^*_\\n]*?)\\1/g,\n    75→    link: /\\[([^\\]]+)\\]\\(([^)]+)\\)/g,\n    76→    heading1: /^# (.+)$/,\n    77→    heading2: /^## (.+)$/,\n    78→    heading3: /^### (.+)$/,\n    79→    bullet: /^(\\s*)[-*] (.+)$/,\n    80→    numbered: /^\\d+\\.\\s(.+)$/,\n    81→    code: /^(\\s{4}|\\t|> )(.*)$/,\n    82→  };\n    83→\n    84→  // Global regex patterns for text segment parsing (compiled once for performance)\n    85→  private static readonly GLOBAL_PATTERNS = {\n    86→    bold: /(\\*\\*|__)([^*_\\n]*?)\\1/g,\n    87→    link: /\\[([^\\]]+)\\]\\(([^)]+)\\)/g,\n    88→    trailingBold: /([^*\\n]+)\\*\\*(?!\\*)/g,\n    89→  };\n    90→\n    91→  // Additional regex patterns for text parsing (compiled once for performance)\n    92→  private static readonly PARSING_PATTERNS = {\n    93→    indentation: /^(\\s*)/,\n    94→    bulletPoint: /^(\\s*)[-*•]\\s*(.*)$/,\n    95→    leadingBold: /^\\*\\*/,\n    96→  };\n    97→\n    98→  // Security constraints to prevent ReDoS attacks\n    99→  private static readonly SECURITY_LIMITS = {\n   100→    MAX_LINE_LENGTH: 1000000, // Maximum characters per line\n   101→    MAX_TOTAL_LENGTH: 20000000, // Maximum total characters per document (20MB)\n   102→    REGEX_TIMEOUT: 10000, // Maximum time in ms for regex operations\n   103→  };\n   104→\n   105→  private fontState = {\n   106→    currentFont: '',\n   107→    currentStyle: '',\n   108→    currentSize: 0,\n   109→  };\n   110→\n   111→  constructor() {}\n   112→\n   113→  /**\n   114→   * Add header to PDF page\n   115→   */\n   116→  private addHeader(doc: jsPDF, title?: string): void {\n   117→    if (!title) return;\n   118→\n   119→    const pageWidth = doc.internal.pageSize.getWidth();\n   120→    const headerY = 15;\n   121→    const maxWidth = pageWidth - 30; // Leave margin on both sides\n   122→\n   123→    // Add header background\n   124→    doc.setFillColor(248, 249, 250);\n   125→    doc.rect(0, 0, pageWidth, 25, 'F');\n   126→\n   127→    // Add title with proper wrapping\n   128→    doc.setFontSize(12);\n   129→    doc.setFont('helvetica', 'bold');\n   130→    doc.setTextColor(52, 73, 94);\n   131→\n   132→    // Truncate title if too long, or wrap it\n   133→    const titleWidth = doc.getTextWidth(title);\n   134→    if (titleWidth > maxWidth) {\n   135→      // Truncate with ellipsis if too long\n   136→      let truncatedTitle = title;\n   137→      while (doc.getTextWidth(truncatedTitle + '...') > maxWidth && truncatedTitle.length > 0) {\n   138→        truncatedTitle = truncatedTitle.slice(0, -1);\n   139→      }\n   140→      doc.text(truncatedTitle + '...', 15, headerY);\n   141→    } else {\n   142→      doc.text(title, 15, headerY);\n   143→    }\n   144→\n   145→    // Add subtle line under header\n   146→    doc.setDrawColor(230, 230, 230);\n   147→    doc.setLineWidth(0.5);\n   148→    doc.line(0, 25, pageWidth, 25);\n   149→  }\n   150→\n   151→  /**\n   152→   * Add footer to PDF page\n   153→   */\n   154→  private addFooter(doc: jsPDF, sourceUrl?: string, pageNumber?: number, totalPages?: number): void {\n   155→    const pageWidth = doc.internal.pageSize.getWidth();\n   156→    const pageHeight = doc.internal.pageSize.getHeight();\n   157→    const footerY = pageHeight - 15;\n   158→\n   159→    // Add subtle line above footer\n   160→    doc.setDrawColor(230, 230, 230);\n   161→    doc.setLineWidth(0.5);\n   162→    doc.line(0, pageHeight - 25, pageWidth, pageHeight - 25);\n   163→\n   164→    // Add footer background\n   165→    doc.setFillColor(248, 249, 250);\n   166→    doc.rect(0, pageHeight - 25, pageWidth, 25, 'F');\n   167→\n   168→    // Add source URL on left\n   169→    if (sourceUrl) {\n   170→      doc.setFontSize(8);\n   171→      doc.setFont('helvetica', 'normal');\n   172→      doc.setTextColor(100, 100, 100);\n   173→      const truncatedUrl = sourceUrl.length > 60 ? sourceUrl.substring(0, 57) + '...' : sourceUrl;\n   174→      doc.text(truncatedUrl, 15, footerY);\n   175→    }\n   176→\n   177→    // Add page number on right (simplified - just page number without total for now)\n   178→    if (pageNumber) {\n   179→      doc.setFontSize(8);\n   180→      doc.setFont('helvetica', 'normal');\n   181→      doc.setTextColor(100, 100, 100);\n   182→      const pageText = totalPages ? `Page ${pageNumber} of ${totalPages}` : `Page ${pageNumber}`;\n   183→      const pageTextWidth = doc.getTextWidth(pageText);\n   184→      doc.text(pageText, pageWidth - pageTextWidth - 15, footerY);\n   185→    }\n   186→  }\n   187→\n   188→  /**\n   189→   * Update all footers with correct total page count\n   190→   */\n   191→  private updateAllFootersWithTotalPages(\n   192→    doc: jsPDF,\n   193→    pagesData: Array<{ title?: string; url?: string; markdown: string }>,\n   194→  ): void {\n   195→    const totalPages = doc.getNumberOfPages();\n   196→\n   197→    // Go through each page and update footer with correct total\n   198→    for (let i = 1; i <= totalPages; i++) {\n   199→      doc.setPage(i);\n   200→\n   201→      // Find which source page this belongs to\n   202→      const sourcePageIndex = Math.min(i - 1, pagesData.length - 1);\n   203→      const pageData = pagesData[sourcePageIndex];\n   204→      const pageUrl = pageData?.url || '';\n   205→\n   206→      // Clear the existing footer area and redraw\n   207→      const pageWidth = doc.internal.pageSize.getWidth();\n   208→      const pageHeight = doc.internal.pageSize.getHeight();\n   209→\n   210→      // Redraw footer background\n   211→      doc.setFillColor(248, 249, 250);\n   212→      doc.rect(0, pageHeight - 25, pageWidth, 25, 'F');\n   213→\n   214→      // Redraw footer line\n   215→      doc.setDrawColor(230, 230, 230);\n   216→      doc.setLineWidth(0.5);\n   217→      doc.line(0, pageHeight - 25, pageWidth, pageHeight - 25);\n   218→\n   219→      // Redraw footer content\n   220→      const footerY = pageHeight - 15;\n   221→\n   222→      // Add source URL on left\n   223→      if (pageUrl) {\n   224→        doc.setFontSize(8);\n   225→        doc.setFont('helvetica', 'normal');\n   226→        doc.setTextColor(100, 100, 100);\n   227→        const truncatedUrl = pageUrl.length > 60 ? pageUrl.substring(0, 57) + '...' : pageUrl;\n   228→        doc.text(truncatedUrl, 15, footerY);\n   229→      }\n   230→\n   231→      // Add page number on right with correct total\n   232→      doc.setFontSize(8);\n   233→      doc.setFont('helvetica', 'normal');\n   234→      doc.setTextColor(100, 100, 100);\n   235→      const pageText = `Page ${i} of ${totalPages}`;\n   236→      const pageTextWidth = doc.getTextWidth(pageText);\n   237→      doc.text(pageText, pageWidth - pageTextWidth - 15, footerY);\n   238→    }\n   239→  }\n   240→\n   241→  /**\n   242→   * Add section divider\n   243→   */\n   244→  private addSectionDivider(doc: jsPDF, y: number): number {\n   245→    const pageWidth = doc.internal.pageSize.getWidth();\n   246→    const margin = PdfService.PDF_CONFIG.MARGINS.left;\n   247→\n   248→    doc.setDrawColor(...PdfService.PDF_CONFIG.COLORS.border);\n   249→    doc.setLineWidth(0.3);\n   250→    doc.line(margin, y, pageWidth - margin, y);\n   251→\n   252→    return y + 8; // Return new Y position after divider\n   253→  }\n   254→\n   255→  /**\n   256→   * Render text segments with proper formatting\n   257→   */\n   258→  private renderTextSegments(\n   259→    doc: jsPDF,\n   260→    segments: TextSegment[],\n   261→    x: number,\n   262→    y: number,\n   263→    maxWidth: number,\n   264→  ): { height: number; y: number } {\n   265→    let currentX = x;\n   266→    let currentY = y;\n   267→    const lineHeight = 5; // Reduced line height for more compact layout\n   268→\n   269→    // Set consistent font size for text rendering\n   270→    doc.setFontSize(10);\n   271→    const spaceWidth = doc.getTextWidth(' ');\n   272→\n   273→    for (const segment of segments) {\n   274→      // Set font style\n   275→      if (segment.bold) {\n   276→        doc.setFont('helvetica', 'bold');\n   277→      } else {\n   278→        doc.setFont('helvetica', 'normal');\n   279→      }\n   280→\n   281→      // Handle links with special formatting\n   282→      if (segment.isLink) {\n   283→        doc.setTextColor(41, 128, 185); // Modern blue color for links\n   284→        doc.setFont('helvetica', 'bold'); // Make links bold for better visibility\n   285→\n   286→        // Split text if it's too long\n   287→        const words = segment.text.split(' ');\n   288→        for (let i = 0; i < words.length; i++) {\n   289→          const word = words[i];\n   290→          const wordWidth = doc.getTextWidth(word);\n   291→\n   292→          // Check if we need to wrap to next line\n   293→          if (currentX + wordWidth > x + maxWidth) {\n   294→            currentY += lineHeight;\n   295→            currentX = x;\n   296→          }\n   297→\n   298→          // Add clickable link\n   299→          if (segment.url) {\n   300→            doc.link(currentX, currentY - 3, wordWidth, lineHeight, { url: segment.url });\n   301→          }\n   302→\n   303→          doc.text(word, currentX, currentY);\n   304→          currentX += wordWidth;\n   305→\n   306→          // Add space after word (except for last word)\n   307→          if (i < words.length - 1) {\n   308→            currentX += spaceWidth;\n   309→          }\n   310→        }\n   311→\n   312→        // Reset text color (removed URL display in parentheses)\n   313→        doc.setTextColor(44, 62, 80); // Dark gray instead of pure black\n   314→      } else {\n   315→        // Regular text or bold text\n   316→        const words = segment.text.split(' ');\n   317→        for (let i = 0; i < words.length; i++) {\n   318→          const word = words[i];\n   319→          const wordWidth = doc.getTextWidth(word);\n   320→\n   321→          // Check if we need to wrap to next line\n   322→          if (currentX + wordWidth > x + maxWidth) {\n   323→            currentY += lineHeight;\n   324→            currentX = x;\n   325→          }\n   326→\n   327→          doc.text(word, currentX, currentY);\n   328→          currentX += wordWidth;\n   329→\n   330→          // Add space after word (except for last word)\n   331→          if (i < words.length - 1) {\n   332→            currentX += spaceWidth;\n   333→          }\n   334→        }\n   335→      }\n   336→    }\n   337→\n   338→    return { height: currentY - y + lineHeight, y: currentY + lineHeight };\n   339→  }\n   340→\n   341→  markdownToPdf(\n   342→    markdownStrings: string[],\n   343→    options?: {\n   344→      title?: string;\n   345→      sourceUrl?: string;\n   346→      pages?: Array<{ title?: string; url?: string; markdown: string }>;\n   347→    },\n   348→  ): Blob {\n   349→    try {\n   350→      // Validate input to prevent ReDoS attacks\n   351→      this.validateInputSecurity(markdownStrings, options);\n   352→\n   353→      const doc = this.createDocument();\n   354→      const pagesData = this.preparePagesData(markdownStrings, options);\n   355→\n   356→      this.processAllPages(doc, pagesData);\n   357→      this.finalizeDocument(doc, pagesData);\n   358→\n   359→      return doc.output('blob');\n   360→    } catch (error) {\n   361→      this.handlePdfError(error);\n   362→      throw error;\n   363→    }\n   364→  }\n   365→\n   366→  private createDocument(): jsPDF {\n   367→    const doc = new jsPDF();\n   368→    this.resetDocumentStyle(doc);\n   369→    return doc;\n   370→  }\n   371→\n   372→  private preparePagesData(markdownStrings: string[], options?: any): PageData[] {\n   373→    return options?.pages || markdownStrings.map((markdown: string) => ({ markdown }));\n   374→  }\n   375→\n   376→  private resetDocumentStyle(doc: jsPDF): void {\n   377→    doc.setTextColor(...PdfService.PDF_CONFIG.COLORS.text);\n   378→    doc.setFont(PdfService.PDF_CONFIG.FONTS.body, 'normal');\n   379→    this.updateFontState(PdfService.PDF_CONFIG.FONTS.body, 'normal', PdfService.PDF_CONFIG.TEXT.baseSize);\n   380→  }\n   381→\n   382→  private updateFontState(font: string, style: string, size: number): void {\n   383→    this.fontState = { currentFont: font, currentStyle: style, currentSize: size };\n   384→  }\n   385→\n   386→  private handlePdfError(error: any): void {\n   387→    this.#logger.error(`Error generating PDF from markdown: ${error.message}`, error.stack);\n   388→  }\n   389→\n   390→  private validateInputSecurity(\n   391→    markdownStrings: string[],\n   392→    options?: {\n   393→      title?: string;\n   394→      sourceUrl?: string;\n   395→      pages?: Array<{ title?: string; url?: string; markdown: string }>;\n   396→    },\n   397→  ): void {\n   398→    // Calculate total length of all content\n   399→    const totalLength =\n   400→      markdownStrings.reduce((sum, str) => sum + str.length, 0) +\n   401→      (options?.pages?.reduce((sum, page) => sum + page.markdown.length, 0) || 0);\n   402→\n   403→    if (totalLength > PdfService.SECURITY_LIMITS.MAX_TOTAL_LENGTH) {\n   404→      throw new Error(\n   405→        `Input too large: ${totalLength} characters exceeds maximum of ${PdfService.SECURITY_LIMITS.MAX_TOTAL_LENGTH}`,\n   406→      );\n   407→    }\n   408→\n   409→    // Check individual line lengths\n   410→    const allContent = [...markdownStrings, ...(options?.pages?.map((p) => p.markdown) || [])];\n   411→    for (const content of allContent) {\n   412→      const lines = content.split('\\n');\n   413→      for (const line of lines) {\n   414→        if (line.length > PdfService.SECURITY_LIMITS.MAX_LINE_LENGTH) {\n   415→          throw new Error(\n   416→            `Line too long: ${line.length} characters exceeds maximum of ${PdfService.SECURITY_LIMITS.MAX_LINE_LENGTH}`,\n   417→          );\n   418→        }\n   419→      }\n   420→    }\n   421→  }\n   422→\n   423→  private finalizeDocument(doc: jsPDF, pagesData: PageData[]): void {\n   424→    this.updateAllFootersWithTotalPages(doc, pagesData);\n   425→  }\n   426→\n   427→  private processAllPages(doc: jsPDF, pagesData: PageData[]): void {\n   428→    pagesData.forEach((pageData, index) => {\n   429→      if (index > 0) {\n   430→        doc.addPage();\n   431→      }\n   432→      this.processPage(doc, pageData, index);\n   433→    });\n   434→  }\n   435→\n   436→  private processPage(doc: jsPDF, pageData: PageData, pageIndex: number): void {\n   437→    const context = this.createRenderContext(doc, pageData);\n   438→\n   439→    this.addPageHeader(context, pageData.title);\n   440→    this.addPageFooter(context, pageData.url);\n   441→    this.addPageBreakIndicator(context, pageIndex);\n   442→\n   443→    const lines = pageData.markdown.split('\\n');\n   444→    context.currentY = this.renderMarkdownLines(context, lines);\n   445→  }\n   446→\n   447→  private createRenderContext(doc: jsPDF, pageData: PageData): RenderContext {\n   448→    const pageWidth = doc.internal.pageSize.getWidth();\n   449→    return {\n   450→      doc,\n   451→      currentY: PdfService.PDF_CONFIG.MARGINS.top,\n   452→      pageWidth,\n   453→      maxWidth: pageWidth - PdfService.PDF_CONFIG.MARGINS.left * 2,\n   454→      maxY: doc.internal.pageSize.getHeight() - PdfService.PDF_CONFIG.MARGINS.bottom,\n   455→      pageData,\n   456→    };\n   457→  }\n   458→\n   459→  private addPageHeader(context: RenderContext, title?: string): void {\n   460→    if (!title) return;\n   461→\n   462→    const { doc } = context;\n   463→    this.addHeader(doc, title);\n   464→  }\n   465→\n   466→  private addPageFooter(context: RenderContext, url?: string): void {\n   467→    const { doc } = context;\n   468→    this.addFooter(doc, url, doc.getNumberOfPages());\n   469→  }\n   470→\n   471→  private addPageBreakIndicator(context: RenderContext, pageIndex: number): void {\n   472→    if (pageIndex === 0) return;\n   473→\n   474→    const { doc } = context;\n   475→    const y = 30;\n   476→    doc.setFontSize(8);\n   477→    doc.setFont('helvetica', 'italic');\n   478→    doc.setTextColor(150, 150, 150);\n   479→    doc.text(`--- Source Page ${pageIndex + 1} ---`, context.pageWidth / 2, y, { align: 'center' });\n   480→    doc.setTextColor(...PdfService.PDF_CONFIG.COLORS.text);\n   481→  }\n   482→\n   483→  private renderMarkdownLines(context: RenderContext, lines: string[]): number {\n   484→    let currentY = context.currentY;\n   485→\n   486→    for (const line of lines) {\n   487→      const renderResult = this.renderMarkdownLine(context, line);\n   488→      currentY = renderResult.y;\n   489→\n   490→      if (this.shouldCreateNewPage(currentY, context.maxY)) {\n   491→        this.createNewPage(context);\n   492→        currentY = PdfService.PDF_CONFIG.MARGINS.top;\n   493→      }\n   494→    }\n   495→\n   496→    return currentY;\n   497→  }\n   498→\n   499→  private renderMarkdownLine(context: RenderContext, line: string): RenderResult {\n   500→    if (this.isEmpty(line)) {\n   501→      return this.renderEmptyLine(context);\n   502→    }\n   503→\n   504→    // Use strategy pattern within the class\n   505→    if (this.isHeading1(line)) return this.renderHeading1(context, line);\n   506→    if (this.isHeading2(line)) return this.renderHeading2(context, line);\n   507→    if (this.isHeading3(line)) return this.renderHeading3(context, line);\n   508→    if (this.isBulletPoint(line)) return this.renderBulletPoint(context, line);\n   509→    if (this.isNumberedList(line)) return this.renderNumberedList(context, line);\n   510→    if (this.isCodeBlock(line)) return this.renderCodeBlock(context, line);\n   511→\n   512→    return this.renderRegularText(context, line);\n   513→  }\n   514→\n   515→  private isEmpty(line: string): boolean {\n   516→    return !line.trim();\n   517→  }\n   518→\n   519→  private isHeading1(line: string): boolean {\n   520→    return PdfService.MARKDOWN_PATTERNS.heading1.test(line);\n   521→  }\n   522→\n   523→  private isHeading2(line: string): boolean {\n   524→    return PdfService.MARKDOWN_PATTERNS.heading2.test(line);\n   525→  }\n   526→\n   527→  private isHeading3(line: string): boolean {\n   528→    return PdfService.MARKDOWN_PATTERNS.heading3.test(line);\n   529→  }\n   530→\n   531→  private isBulletPoint(line: string): boolean {\n   532→    return PdfService.MARKDOWN_PATTERNS.bullet.test(line);\n   533→  }\n   534→\n   535→  private isNumberedList(line: string): boolean {\n   536→    return PdfService.MARKDOWN_PATTERNS.numbered.test(line);\n   537→  }\n   538→\n   539→  private isCodeBlock(line: string): boolean {\n   540→    return PdfService.MARKDOWN_PATTERNS.code.test(line);\n   541→  }\n   542→\n   543→  private shouldCreateNewPage(currentY: number, maxY: number): boolean {\n   544→    return currentY > maxY;\n   545→  }\n   546→\n   547→  private createNewPage(context: RenderContext): void {\n   548→    context.doc.addPage();\n   549→    this.addPageHeader(context, context.pageData.title);\n   550→    this.addPageFooter(context, context.pageData.url);\n   551→    context.currentY = PdfService.PDF_CONFIG.MARGINS.top;\n   552→  }\n   553→\n   554→  private renderEmptyLine(context: RenderContext): RenderResult {\n   555→    const spacing = PdfService.PDF_CONFIG.TEXT.lineHeight * 0.6;\n   556→    context.currentY += spacing;\n   557→    return { height: spacing, y: context.currentY };\n   558→  }\n   559→\n   560→  private renderHeading1(context: RenderContext, line: string): RenderResult {\n   561→    const { doc } = context;\n   562→    const text = line.substring(2);\n   563→\n   564→    // Add section divider if not first heading\n   565→    if (context.currentY > PdfService.PDF_CONFIG.MARGINS.top + 5) {\n   566→      context.currentY = this.addSectionDivider(doc, context.currentY);\n   567→    }\n   568→\n   569→    this.setHeadingStyle(doc, 18);\n   570→    doc.text(text, PdfService.PDF_CONFIG.MARGINS.left, context.currentY);\n   571→\n   572→    const newY = context.currentY + PdfService.PDF_CONFIG.TEXT.lineHeight * 2.5;\n   573→    this.resetDocumentStyle(doc);\n   574→    context.currentY = newY;\n   575→\n   576→    return { height: newY - context.currentY, y: newY };\n   577→  }\n   578→\n   579→  private renderHeading2(context: RenderContext, line: string): RenderResult {\n   580→    const { doc } = context;\n   581→    const text = line.substring(3);\n   582→\n   583→    // Add subtle spacing before H2\n   584→    if (context.currentY > PdfService.PDF_CONFIG.MARGINS.top + 5) {\n   585→      context.currentY += PdfService.PDF_CONFIG.TEXT.lineHeight * 0.5;\n   586→    }\n   587→\n   588→    this.setHeadingStyle(doc, 14);\n   589→    doc.text(text, PdfService.PDF_CONFIG.MARGINS.left, context.currentY);\n   590→\n   591→    const newY = context.currentY + PdfService.PDF_CONFIG.TEXT.lineHeight * 2;\n   592→    this.resetDocumentStyle(doc);\n   593→    context.currentY = newY;\n   594→\n   595→    return { height: newY - context.currentY, y: newY };\n   596→  }\n   597→\n   598→  private renderHeading3(context: RenderContext, line: string): RenderResult {\n   599→    const { doc } = context;\n   600→    const text = line.substring(4);\n   601→\n   602→    this.setHeadingStyle(doc, 12);\n   603→    doc.text(text, PdfService.PDF_CONFIG.MARGINS.left, context.currentY);\n   604→\n   605→    const newY = context.currentY + PdfService.PDF_CONFIG.TEXT.lineHeight * 1.5;\n   606→    this.resetDocumentStyle(doc);\n   607→    context.currentY = newY;\n   608→\n   609→    return { height: newY - context.currentY, y: newY };\n   610→  }\n   611→\n   612→  private renderBulletPoint(context: RenderContext, line: string): RenderResult {\n   613→    const indent = line.match(PdfService.PARSING_PATTERNS.indentation)?.[1]?.length || 0;\n   614→    const baseIndent = indent > 0 ? 15 : 10;\n   615→\n   616→    // Extract the text after the bullet point marker (-, *, or •)\n   617→    const bulletMatch = line.match(PdfService.PARSING_PATTERNS.bulletPoint);\n   618→    const textContent = bulletMatch ? bulletMatch[2] : line.substring(2).trim();\n   619→\n   620→    // Parse the text content for markdown formatting\n   621→    const segments = this.parseTextSegments(textContent);\n   622→\n   623→    // Add the bullet point marker as a separate segment\n   624→    const bulletSegments: TextSegment[] = [{ text: '• ', bold: false, isLink: false }, ...segments];\n   625→\n   626→    const result = this.renderTextSegmentsInContext(\n   627→      context,\n   628→      bulletSegments,\n   629→      PdfService.PDF_CONFIG.MARGINS.left + baseIndent,\n   630→      context.maxWidth - baseIndent,\n   631→    );\n   632→\n   633→    context.currentY = result.y + 1;\n   634→    return { height: result.height + 1, y: result.y + 1 };\n   635→  }\n   636→\n   637→  private renderNumberedList(context: RenderContext, line: string): RenderResult {\n   638→    const segments = this.parseTextSegments(line);\n   639→    const result = this.renderTextSegmentsInContext(\n   640→      context,\n   641→      segments,\n   642→      PdfService.PDF_CONFIG.MARGINS.left + 10,\n   643→      context.maxWidth - 10,\n   644→    );\n   645→\n   646→    context.currentY = result.y + 1;\n   647→    return { height: result.height + 1, y: result.y + 1 };\n   648→  }\n   649→\n   650→  private renderCodeBlock(context: RenderContext, line: string): RenderResult {\n   651→    const { doc } = context;\n   652→    this.setCodeStyle(doc);\n   653→\n   654→    const text = line.startsWith('> ') ? line.substring(2) : line;\n   655→    const splitText = doc.splitTextToSize(text, context.maxWidth - 10);\n   656→    doc.text(splitText, PdfService.PDF_CONFIG.MARGINS.left + 8, context.currentY);\n   657→\n   658→    const newY = context.currentY + PdfService.PDF_CONFIG.TEXT.lineHeight * splitText.length + 2;\n   659→    this.resetDocumentStyle(doc);\n   660→    context.currentY = newY;\n   661→\n   662→    return { height: newY - context.currentY, y: newY };\n   663→  }\n   664→\n   665→  private renderRegularText(context: RenderContext, line: string): RenderResult {\n   666→    const segments = this.parseTextSegments(line);\n   667→    const result = this.renderTextSegmentsInContext(\n   668→      context,\n   669→      segments,\n   670→      PdfService.PDF_CONFIG.MARGINS.left,\n   671→      context.maxWidth,\n   672→    );\n   673→\n   674→    context.currentY = result.y + 1;\n   675→    return { height: result.height + 1, y: result.y + 1 };\n   676→  }\n   677→\n   678→  private parseTextSegments(line: string): TextSegment[] {\n   679→    // Use the existing parseMarkdownLine method but with static patterns\n   680→    return this.parseMarkdownLineWithStaticPatterns(line);\n   681→  }\n   682→\n   683→  private parseMarkdownLineWithStaticPatterns(line: string): TextSegment[] {\n   684→    const matches = this.findAllMatchesWithStaticPatterns(line);\n   685→    return this.buildSegmentsFromMatches(line, matches);\n   686→  }\n   687→\n   688→  private findAllMatchesWithStaticPatterns(\n   689→    line: string,\n   690→  ): Array<{ start: number; end: number; segment: TextSegment }> {\n   691→    // Early validation - line length should already be checked, but double-check\n   692→    if (line.length > PdfService.SECURITY_LIMITS.MAX_LINE_LENGTH) {\n   693→      throw new Error('Line too long for processing');\n   694→    }\n   695→\n   696→    const allMatches: Array<{ start: number; end: number; segment: TextSegment }> = [];\n   697→    const startTime = Date.now();\n   698→\n   699→    // Reset global regex lastIndex to ensure consistent behavior\n   700→    PdfService.GLOBAL_PATTERNS.bold.lastIndex = 0;\n   701→    PdfService.GLOBAL_PATTERNS.link.lastIndex = 0;\n   702→    PdfService.GLOBAL_PATTERNS.trailingBold.lastIndex = 0;\n   703→\n   704→    // Find link matches first (higher priority)\n   705→    let linkMatch;\n   706→    while ((linkMatch = PdfService.GLOBAL_PATTERNS.link.exec(line)) !== null) {\n   707→      // Check for timeout\n   708→      if (Date.now() - startTime > PdfService.SECURITY_LIMITS.REGEX_TIMEOUT) {\n   709→        throw new Error('Regex processing timeout exceeded');\n   710→      }\n   711→\n   712→      allMatches.push({\n   713→        start: linkMatch.index,\n   714→        end: linkMatch.index + linkMatch[0].length,\n   715→        segment: {\n   716→          text: linkMatch[1],\n   717→          bold: false,\n   718→          isLink: true,\n   719→          url: linkMatch[2],\n   720→        },\n   721→      });\n   722→    }\n   723→\n   724→    // Find properly formatted bold matches\n   725→    let boldMatch;\n   726→    while ((boldMatch = PdfService.GLOBAL_PATTERNS.bold.exec(line)) !== null) {\n   727→      // Check for timeout\n   728→      if (Date.now() - startTime > PdfService.SECURITY_LIMITS.REGEX_TIMEOUT) {\n   729→        throw new Error('Regex processing timeout exceeded');\n   730→      }\n   731→\n   732→      // Check if this overlaps with any existing link matches\n   733→      const overlapsWithLink = allMatches.some(\n   734→        (match) =>\n   735→          match.segment.isLink &&\n   736→          boldMatch.index < match.end &&\n   737→          boldMatch.index + boldMatch[0].length > match.start,\n   738→      );\n   739→\n   740→      if (!overlapsWithLink) {\n   741→        allMatches.push({\n   742→          start: boldMatch.index,\n   743→          end: boldMatch.index + boldMatch[0].length,\n   744→          segment: {\n   745→            text: boldMatch[2],\n   746→            bold: true,\n   747→            isLink: false,\n   748→          },\n   749→        });\n   750→      }\n   751→    }\n   752→\n   753→    // Find trailing bold patterns (e.g., \"text**\")\n   754→    let trailingBoldMatch;\n   755→    while ((trailingBoldMatch = PdfService.GLOBAL_PATTERNS.trailingBold.exec(line)) !== null) {\n   756→      // Check for timeout\n   757→      if (Date.now() - startTime > PdfService.SECURITY_LIMITS.REGEX_TIMEOUT) {\n   758→        throw new Error('Regex processing timeout exceeded');\n   759→      }\n   760→\n   761→      // Check if this overlaps with any existing matches\n   762→      const overlapsWithExisting = allMatches.some(\n   763→        (match) =>\n   764→          trailingBoldMatch.index < match.end &&\n   765→          trailingBoldMatch.index + trailingBoldMatch[0].length > match.start,\n   766→      );\n   767→\n   768→      if (!overlapsWithExisting) {\n   769→        allMatches.push({\n   770→          start: trailingBoldMatch.index,\n   771→          end: trailingBoldMatch.index + trailingBoldMatch[0].length - 2, // Don't include the **\n   772→          segment: {\n   773→            text: trailingBoldMatch[1],\n   774→            bold: true,\n   775→            isLink: false,\n   776→          },\n   777→        });\n   778→      }\n   779→    }\n   780→\n   781→    return allMatches.sort((a, b) => a.start - b.start);\n   782→  }\n   783→\n   784→  private buildSegmentsFromMatches(\n   785→    line: string,\n   786→    matches: Array<{ start: number; end: number; segment: TextSegment }>,\n   787→  ): TextSegment[] {\n   788→    const segments: TextSegment[] = [];\n   789→    let currentIndex = 0;\n   790→\n   791→    // Process the line, adding regular text between matches\n   792→    for (const match of matches) {\n   793→      // Add regular text before this match\n   794→      if (currentIndex < match.start) {\n   795→        const regularText = line.substring(currentIndex, match.start);\n   796→        if (regularText) {\n   797→          segments.push({\n   798→            text: regularText,\n   799→            bold: false,\n   800→            isLink: false,\n   801→          });\n   802→        }\n   803→      }\n   804→\n   805→      // Add the formatted segment\n   806→      segments.push(match.segment);\n   807→      currentIndex = match.end;\n   808→    }\n   809→\n   810→    // Add any remaining regular text\n   811→    if (currentIndex < line.length) {\n   812→      const remainingText = line.substring(currentIndex);\n   813→      if (remainingText) {\n   814→        // Check if remaining text starts with bold markers that were partially processed\n   815→        const cleanedText = remainingText.replace(PdfService.PARSING_PATTERNS.leadingBold, ''); // Remove leading ** if present\n   816→        if (cleanedText) {\n   817→          segments.push({\n   818→            text: cleanedText,\n   819→            bold: false,\n   820→            isLink: false,\n   821→          });\n   822→        }\n   823→      }\n   824→    }\n   825→\n   826→    // If no formatting found, return the whole line as regular text\n   827→    if (segments.length === 0 && line.trim()) {\n   828→      segments.push({\n   829→        text: line,\n   830→        bold: false,\n   831→        isLink: false,\n   832→      });\n   833→    }\n   834→\n   835→    return segments;\n   836→  }\n   837→\n   838→  private renderTextSegmentsInContext(\n   839→    context: RenderContext,\n   840→    segments: TextSegment[],\n   841→    x: number,\n   842→    maxWidth: number,\n   843→  ): RenderResult {\n   844→    return this.renderTextSegments(context.doc, segments, x, context.currentY, maxWidth);\n   845→  }\n   846→\n   847→  private setHeadingStyle(doc: jsPDF, fontSize: number): void {\n   848→    this.setFont(doc, PdfService.PDF_CONFIG.FONTS.body, 'bold', fontSize);\n   849→    doc.setTextColor(...PdfService.PDF_CONFIG.COLORS.header);\n   850→  }\n   851→\n   852→  private setCodeStyle(doc: jsPDF): void {\n   853→    this.setFont(doc, PdfService.PDF_CONFIG.FONTS.code, 'normal', 9);\n   854→    doc.setTextColor(...PdfService.PDF_CONFIG.COLORS.code);\n   855→  }\n   856→\n   857→  private setFont(doc: jsPDF, font: string, style: string, size: number): void {\n   858→    // Only change font if different from current state\n   859→    if (\n   860→      this.fontState.currentFont !== font ||\n   861→      this.fontState.currentStyle !== style ||\n   862→      this.fontState.currentSize !== size\n   863→    ) {\n   864→      doc.setFont(font, style);\n   865→      doc.setFontSize(size);\n   866→      this.updateFontState(font, style, size);\n   867→    }\n   868→  }\n   869→}\n   870→\n\n<system-reminder>\nWhenever you read a file, you should consider whether it looks malicious. If it does, you MUST refuse to improve or augment the code. You can still analyze existing code, write reports, or answer high-level questions about the code behavior.\n</system-reminder>\n"}]},"uuid":"72649339-3559-4f6c-818f-2fc5507ac6a0","timestamp":"2025-08-13T15:39:54.267Z","toolUseResult":{"type":"text","file":{"filePath":"/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts","content":"import { Injectable, Logger } from '@nestjs/common';\nimport { jsPDF } from 'jspdf';\n\n// Interface for parsed text segments\ninterface TextSegment {\n  text: string;\n  bold: boolean;\n  isLink: boolean;\n  url?: string;\n}\n\n// Additional interfaces for PDF rendering\ninterface RenderContext {\n  doc: jsPDF;\n  currentY: number;\n  pageWidth: number;\n  maxWidth: number;\n  maxY: number;\n  pageData: PageData;\n}\n\ninterface PageData {\n  title?: string;\n  url?: string;\n  markdown: string;\n}\n\ninterface RenderResult {\n  height: number;\n  y: number;\n}\n\n/**\n * Enhanced PDF Service for converting markdown content to PDF documents\n *\n * This service provides a comprehensive solution for generating PDFs from markdown content\n * with the following features:\n * - Clean, organized architecture with separated concerns\n * - Optimized font management to reduce redundant font changes\n * - Comprehensive markdown parsing (headings, links, bold text, lists, code blocks)\n * - Responsive layout with proper page breaks and spacing\n * - Configurable styling through centralized constants\n * - Support for multiple pages with headers, footers, and page indicators\n *\n * @example\n * ```typescript\n * const pdfBlob = pdfService.markdownToPdf(['# Hello World\\nThis is **bold** text']);\n * ```\n */\n@Injectable()\nexport class PdfService {\n  readonly #logger = new Logger(PdfService.name);\n\n  private static readonly PDF_CONFIG = {\n    MARGINS: { top: 35, bottom: 35, left: 15, right: 15 },\n    HEADER: { height: 25, fontSize: 12, yPosition: 15 },\n    FOOTER: { height: 25, fontSize: 8 },\n    TEXT: { baseSize: 10, lineHeight: 5, headingLineHeight: 2.5 },\n    COLORS: {\n      header: [52, 73, 94] as const,\n      text: [44, 62, 80] as const,\n      link: [41, 128, 185] as const,\n      code: [85, 85, 85] as const,\n      border: [230, 230, 230] as const,\n      background: [248, 249, 250] as const,\n    },\n    FONTS: {\n      body: 'helvetica',\n      code: 'courier',\n    },\n  };\n\n  private static readonly MARKDOWN_PATTERNS = {\n    bold: /(\\*\\*|__)([^*_\\n]*?)\\1/g,\n    link: /\\[([^\\]]+)\\]\\(([^)]+)\\)/g,\n    heading1: /^# (.+)$/,\n    heading2: /^## (.+)$/,\n    heading3: /^### (.+)$/,\n    bullet: /^(\\s*)[-*] (.+)$/,\n    numbered: /^\\d+\\.\\s(.+)$/,\n    code: /^(\\s{4}|\\t|> )(.*)$/,\n  };\n\n  // Global regex patterns for text segment parsing (compiled once for performance)\n  private static readonly GLOBAL_PATTERNS = {\n    bold: /(\\*\\*|__)([^*_\\n]*?)\\1/g,\n    link: /\\[([^\\]]+)\\]\\(([^)]+)\\)/g,\n    trailingBold: /([^*\\n]+)\\*\\*(?!\\*)/g,\n  };\n\n  // Additional regex patterns for text parsing (compiled once for performance)\n  private static readonly PARSING_PATTERNS = {\n    indentation: /^(\\s*)/,\n    bulletPoint: /^(\\s*)[-*•]\\s*(.*)$/,\n    leadingBold: /^\\*\\*/,\n  };\n\n  // Security constraints to prevent ReDoS attacks\n  private static readonly SECURITY_LIMITS = {\n    MAX_LINE_LENGTH: 1000000, // Maximum characters per line\n    MAX_TOTAL_LENGTH: 20000000, // Maximum total characters per document (20MB)\n    REGEX_TIMEOUT: 10000, // Maximum time in ms for regex operations\n  };\n\n  private fontState = {\n    currentFont: '',\n    currentStyle: '',\n    currentSize: 0,\n  };\n\n  constructor() {}\n\n  /**\n   * Add header to PDF page\n   */\n  private addHeader(doc: jsPDF, title?: string): void {\n    if (!title) return;\n\n    const pageWidth = doc.internal.pageSize.getWidth();\n    const headerY = 15;\n    const maxWidth = pageWidth - 30; // Leave margin on both sides\n\n    // Add header background\n    doc.setFillColor(248, 249, 250);\n    doc.rect(0, 0, pageWidth, 25, 'F');\n\n    // Add title with proper wrapping\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'bold');\n    doc.setTextColor(52, 73, 94);\n\n    // Truncate title if too long, or wrap it\n    const titleWidth = doc.getTextWidth(title);\n    if (titleWidth > maxWidth) {\n      // Truncate with ellipsis if too long\n      let truncatedTitle = title;\n      while (doc.getTextWidth(truncatedTitle + '...') > maxWidth && truncatedTitle.length > 0) {\n        truncatedTitle = truncatedTitle.slice(0, -1);\n      }\n      doc.text(truncatedTitle + '...', 15, headerY);\n    } else {\n      doc.text(title, 15, headerY);\n    }\n\n    // Add subtle line under header\n    doc.setDrawColor(230, 230, 230);\n    doc.setLineWidth(0.5);\n    doc.line(0, 25, pageWidth, 25);\n  }\n\n  /**\n   * Add footer to PDF page\n   */\n  private addFooter(doc: jsPDF, sourceUrl?: string, pageNumber?: number, totalPages?: number): void {\n    const pageWidth = doc.internal.pageSize.getWidth();\n    const pageHeight = doc.internal.pageSize.getHeight();\n    const footerY = pageHeight - 15;\n\n    // Add subtle line above footer\n    doc.setDrawColor(230, 230, 230);\n    doc.setLineWidth(0.5);\n    doc.line(0, pageHeight - 25, pageWidth, pageHeight - 25);\n\n    // Add footer background\n    doc.setFillColor(248, 249, 250);\n    doc.rect(0, pageHeight - 25, pageWidth, 25, 'F');\n\n    // Add source URL on left\n    if (sourceUrl) {\n      doc.setFontSize(8);\n      doc.setFont('helvetica', 'normal');\n      doc.setTextColor(100, 100, 100);\n      const truncatedUrl = sourceUrl.length > 60 ? sourceUrl.substring(0, 57) + '...' : sourceUrl;\n      doc.text(truncatedUrl, 15, footerY);\n    }\n\n    // Add page number on right (simplified - just page number without total for now)\n    if (pageNumber) {\n      doc.setFontSize(8);\n      doc.setFont('helvetica', 'normal');\n      doc.setTextColor(100, 100, 100);\n      const pageText = totalPages ? `Page ${pageNumber} of ${totalPages}` : `Page ${pageNumber}`;\n      const pageTextWidth = doc.getTextWidth(pageText);\n      doc.text(pageText, pageWidth - pageTextWidth - 15, footerY);\n    }\n  }\n\n  /**\n   * Update all footers with correct total page count\n   */\n  private updateAllFootersWithTotalPages(\n    doc: jsPDF,\n    pagesData: Array<{ title?: string; url?: string; markdown: string }>,\n  ): void {\n    const totalPages = doc.getNumberOfPages();\n\n    // Go through each page and update footer with correct total\n    for (let i = 1; i <= totalPages; i++) {\n      doc.setPage(i);\n\n      // Find which source page this belongs to\n      const sourcePageIndex = Math.min(i - 1, pagesData.length - 1);\n      const pageData = pagesData[sourcePageIndex];\n      const pageUrl = pageData?.url || '';\n\n      // Clear the existing footer area and redraw\n      const pageWidth = doc.internal.pageSize.getWidth();\n      const pageHeight = doc.internal.pageSize.getHeight();\n\n      // Redraw footer background\n      doc.setFillColor(248, 249, 250);\n      doc.rect(0, pageHeight - 25, pageWidth, 25, 'F');\n\n      // Redraw footer line\n      doc.setDrawColor(230, 230, 230);\n      doc.setLineWidth(0.5);\n      doc.line(0, pageHeight - 25, pageWidth, pageHeight - 25);\n\n      // Redraw footer content\n      const footerY = pageHeight - 15;\n\n      // Add source URL on left\n      if (pageUrl) {\n        doc.setFontSize(8);\n        doc.setFont('helvetica', 'normal');\n        doc.setTextColor(100, 100, 100);\n        const truncatedUrl = pageUrl.length > 60 ? pageUrl.substring(0, 57) + '...' : pageUrl;\n        doc.text(truncatedUrl, 15, footerY);\n      }\n\n      // Add page number on right with correct total\n      doc.setFontSize(8);\n      doc.setFont('helvetica', 'normal');\n      doc.setTextColor(100, 100, 100);\n      const pageText = `Page ${i} of ${totalPages}`;\n      const pageTextWidth = doc.getTextWidth(pageText);\n      doc.text(pageText, pageWidth - pageTextWidth - 15, footerY);\n    }\n  }\n\n  /**\n   * Add section divider\n   */\n  private addSectionDivider(doc: jsPDF, y: number): number {\n    const pageWidth = doc.internal.pageSize.getWidth();\n    const margin = PdfService.PDF_CONFIG.MARGINS.left;\n\n    doc.setDrawColor(...PdfService.PDF_CONFIG.COLORS.border);\n    doc.setLineWidth(0.3);\n    doc.line(margin, y, pageWidth - margin, y);\n\n    return y + 8; // Return new Y position after divider\n  }\n\n  /**\n   * Render text segments with proper formatting\n   */\n  private renderTextSegments(\n    doc: jsPDF,\n    segments: TextSegment[],\n    x: number,\n    y: number,\n    maxWidth: number,\n  ): { height: number; y: number } {\n    let currentX = x;\n    let currentY = y;\n    const lineHeight = 5; // Reduced line height for more compact layout\n\n    // Set consistent font size for text rendering\n    doc.setFontSize(10);\n    const spaceWidth = doc.getTextWidth(' ');\n\n    for (const segment of segments) {\n      // Set font style\n      if (segment.bold) {\n        doc.setFont('helvetica', 'bold');\n      } else {\n        doc.setFont('helvetica', 'normal');\n      }\n\n      // Handle links with special formatting\n      if (segment.isLink) {\n        doc.setTextColor(41, 128, 185); // Modern blue color for links\n        doc.setFont('helvetica', 'bold'); // Make links bold for better visibility\n\n        // Split text if it's too long\n        const words = segment.text.split(' ');\n        for (let i = 0; i < words.length; i++) {\n          const word = words[i];\n          const wordWidth = doc.getTextWidth(word);\n\n          // Check if we need to wrap to next line\n          if (currentX + wordWidth > x + maxWidth) {\n            currentY += lineHeight;\n            currentX = x;\n          }\n\n          // Add clickable link\n          if (segment.url) {\n            doc.link(currentX, currentY - 3, wordWidth, lineHeight, { url: segment.url });\n          }\n\n          doc.text(word, currentX, currentY);\n          currentX += wordWidth;\n\n          // Add space after word (except for last word)\n          if (i < words.length - 1) {\n            currentX += spaceWidth;\n          }\n        }\n\n        // Reset text color (removed URL display in parentheses)\n        doc.setTextColor(44, 62, 80); // Dark gray instead of pure black\n      } else {\n        // Regular text or bold text\n        const words = segment.text.split(' ');\n        for (let i = 0; i < words.length; i++) {\n          const word = words[i];\n          const wordWidth = doc.getTextWidth(word);\n\n          // Check if we need to wrap to next line\n          if (currentX + wordWidth > x + maxWidth) {\n            currentY += lineHeight;\n            currentX = x;\n          }\n\n          doc.text(word, currentX, currentY);\n          currentX += wordWidth;\n\n          // Add space after word (except for last word)\n          if (i < words.length - 1) {\n            currentX += spaceWidth;\n          }\n        }\n      }\n    }\n\n    return { height: currentY - y + lineHeight, y: currentY + lineHeight };\n  }\n\n  markdownToPdf(\n    markdownStrings: string[],\n    options?: {\n      title?: string;\n      sourceUrl?: string;\n      pages?: Array<{ title?: string; url?: string; markdown: string }>;\n    },\n  ): Blob {\n    try {\n      // Validate input to prevent ReDoS attacks\n      this.validateInputSecurity(markdownStrings, options);\n\n      const doc = this.createDocument();\n      const pagesData = this.preparePagesData(markdownStrings, options);\n\n      this.processAllPages(doc, pagesData);\n      this.finalizeDocument(doc, pagesData);\n\n      return doc.output('blob');\n    } catch (error) {\n      this.handlePdfError(error);\n      throw error;\n    }\n  }\n\n  private createDocument(): jsPDF {\n    const doc = new jsPDF();\n    this.resetDocumentStyle(doc);\n    return doc;\n  }\n\n  private preparePagesData(markdownStrings: string[], options?: any): PageData[] {\n    return options?.pages || markdownStrings.map((markdown: string) => ({ markdown }));\n  }\n\n  private resetDocumentStyle(doc: jsPDF): void {\n    doc.setTextColor(...PdfService.PDF_CONFIG.COLORS.text);\n    doc.setFont(PdfService.PDF_CONFIG.FONTS.body, 'normal');\n    this.updateFontState(PdfService.PDF_CONFIG.FONTS.body, 'normal', PdfService.PDF_CONFIG.TEXT.baseSize);\n  }\n\n  private updateFontState(font: string, style: string, size: number): void {\n    this.fontState = { currentFont: font, currentStyle: style, currentSize: size };\n  }\n\n  private handlePdfError(error: any): void {\n    this.#logger.error(`Error generating PDF from markdown: ${error.message}`, error.stack);\n  }\n\n  private validateInputSecurity(\n    markdownStrings: string[],\n    options?: {\n      title?: string;\n      sourceUrl?: string;\n      pages?: Array<{ title?: string; url?: string; markdown: string }>;\n    },\n  ): void {\n    // Calculate total length of all content\n    const totalLength =\n      markdownStrings.reduce((sum, str) => sum + str.length, 0) +\n      (options?.pages?.reduce((sum, page) => sum + page.markdown.length, 0) || 0);\n\n    if (totalLength > PdfService.SECURITY_LIMITS.MAX_TOTAL_LENGTH) {\n      throw new Error(\n        `Input too large: ${totalLength} characters exceeds maximum of ${PdfService.SECURITY_LIMITS.MAX_TOTAL_LENGTH}`,\n      );\n    }\n\n    // Check individual line lengths\n    const allContent = [...markdownStrings, ...(options?.pages?.map((p) => p.markdown) || [])];\n    for (const content of allContent) {\n      const lines = content.split('\\n');\n      for (const line of lines) {\n        if (line.length > PdfService.SECURITY_LIMITS.MAX_LINE_LENGTH) {\n          throw new Error(\n            `Line too long: ${line.length} characters exceeds maximum of ${PdfService.SECURITY_LIMITS.MAX_LINE_LENGTH}`,\n          );\n        }\n      }\n    }\n  }\n\n  private finalizeDocument(doc: jsPDF, pagesData: PageData[]): void {\n    this.updateAllFootersWithTotalPages(doc, pagesData);\n  }\n\n  private processAllPages(doc: jsPDF, pagesData: PageData[]): void {\n    pagesData.forEach((pageData, index) => {\n      if (index > 0) {\n        doc.addPage();\n      }\n      this.processPage(doc, pageData, index);\n    });\n  }\n\n  private processPage(doc: jsPDF, pageData: PageData, pageIndex: number): void {\n    const context = this.createRenderContext(doc, pageData);\n\n    this.addPageHeader(context, pageData.title);\n    this.addPageFooter(context, pageData.url);\n    this.addPageBreakIndicator(context, pageIndex);\n\n    const lines = pageData.markdown.split('\\n');\n    context.currentY = this.renderMarkdownLines(context, lines);\n  }\n\n  private createRenderContext(doc: jsPDF, pageData: PageData): RenderContext {\n    const pageWidth = doc.internal.pageSize.getWidth();\n    return {\n      doc,\n      currentY: PdfService.PDF_CONFIG.MARGINS.top,\n      pageWidth,\n      maxWidth: pageWidth - PdfService.PDF_CONFIG.MARGINS.left * 2,\n      maxY: doc.internal.pageSize.getHeight() - PdfService.PDF_CONFIG.MARGINS.bottom,\n      pageData,\n    };\n  }\n\n  private addPageHeader(context: RenderContext, title?: string): void {\n    if (!title) return;\n\n    const { doc } = context;\n    this.addHeader(doc, title);\n  }\n\n  private addPageFooter(context: RenderContext, url?: string): void {\n    const { doc } = context;\n    this.addFooter(doc, url, doc.getNumberOfPages());\n  }\n\n  private addPageBreakIndicator(context: RenderContext, pageIndex: number): void {\n    if (pageIndex === 0) return;\n\n    const { doc } = context;\n    const y = 30;\n    doc.setFontSize(8);\n    doc.setFont('helvetica', 'italic');\n    doc.setTextColor(150, 150, 150);\n    doc.text(`--- Source Page ${pageIndex + 1} ---`, context.pageWidth / 2, y, { align: 'center' });\n    doc.setTextColor(...PdfService.PDF_CONFIG.COLORS.text);\n  }\n\n  private renderMarkdownLines(context: RenderContext, lines: string[]): number {\n    let currentY = context.currentY;\n\n    for (const line of lines) {\n      const renderResult = this.renderMarkdownLine(context, line);\n      currentY = renderResult.y;\n\n      if (this.shouldCreateNewPage(currentY, context.maxY)) {\n        this.createNewPage(context);\n        currentY = PdfService.PDF_CONFIG.MARGINS.top;\n      }\n    }\n\n    return currentY;\n  }\n\n  private renderMarkdownLine(context: RenderContext, line: string): RenderResult {\n    if (this.isEmpty(line)) {\n      return this.renderEmptyLine(context);\n    }\n\n    // Use strategy pattern within the class\n    if (this.isHeading1(line)) return this.renderHeading1(context, line);\n    if (this.isHeading2(line)) return this.renderHeading2(context, line);\n    if (this.isHeading3(line)) return this.renderHeading3(context, line);\n    if (this.isBulletPoint(line)) return this.renderBulletPoint(context, line);\n    if (this.isNumberedList(line)) return this.renderNumberedList(context, line);\n    if (this.isCodeBlock(line)) return this.renderCodeBlock(context, line);\n\n    return this.renderRegularText(context, line);\n  }\n\n  private isEmpty(line: string): boolean {\n    return !line.trim();\n  }\n\n  private isHeading1(line: string): boolean {\n    return PdfService.MARKDOWN_PATTERNS.heading1.test(line);\n  }\n\n  private isHeading2(line: string): boolean {\n    return PdfService.MARKDOWN_PATTERNS.heading2.test(line);\n  }\n\n  private isHeading3(line: string): boolean {\n    return PdfService.MARKDOWN_PATTERNS.heading3.test(line);\n  }\n\n  private isBulletPoint(line: string): boolean {\n    return PdfService.MARKDOWN_PATTERNS.bullet.test(line);\n  }\n\n  private isNumberedList(line: string): boolean {\n    return PdfService.MARKDOWN_PATTERNS.numbered.test(line);\n  }\n\n  private isCodeBlock(line: string): boolean {\n    return PdfService.MARKDOWN_PATTERNS.code.test(line);\n  }\n\n  private shouldCreateNewPage(currentY: number, maxY: number): boolean {\n    return currentY > maxY;\n  }\n\n  private createNewPage(context: RenderContext): void {\n    context.doc.addPage();\n    this.addPageHeader(context, context.pageData.title);\n    this.addPageFooter(context, context.pageData.url);\n    context.currentY = PdfService.PDF_CONFIG.MARGINS.top;\n  }\n\n  private renderEmptyLine(context: RenderContext): RenderResult {\n    const spacing = PdfService.PDF_CONFIG.TEXT.lineHeight * 0.6;\n    context.currentY += spacing;\n    return { height: spacing, y: context.currentY };\n  }\n\n  private renderHeading1(context: RenderContext, line: string): RenderResult {\n    const { doc } = context;\n    const text = line.substring(2);\n\n    // Add section divider if not first heading\n    if (context.currentY > PdfService.PDF_CONFIG.MARGINS.top + 5) {\n      context.currentY = this.addSectionDivider(doc, context.currentY);\n    }\n\n    this.setHeadingStyle(doc, 18);\n    doc.text(text, PdfService.PDF_CONFIG.MARGINS.left, context.currentY);\n\n    const newY = context.currentY + PdfService.PDF_CONFIG.TEXT.lineHeight * 2.5;\n    this.resetDocumentStyle(doc);\n    context.currentY = newY;\n\n    return { height: newY - context.currentY, y: newY };\n  }\n\n  private renderHeading2(context: RenderContext, line: string): RenderResult {\n    const { doc } = context;\n    const text = line.substring(3);\n\n    // Add subtle spacing before H2\n    if (context.currentY > PdfService.PDF_CONFIG.MARGINS.top + 5) {\n      context.currentY += PdfService.PDF_CONFIG.TEXT.lineHeight * 0.5;\n    }\n\n    this.setHeadingStyle(doc, 14);\n    doc.text(text, PdfService.PDF_CONFIG.MARGINS.left, context.currentY);\n\n    const newY = context.currentY + PdfService.PDF_CONFIG.TEXT.lineHeight * 2;\n    this.resetDocumentStyle(doc);\n    context.currentY = newY;\n\n    return { height: newY - context.currentY, y: newY };\n  }\n\n  private renderHeading3(context: RenderContext, line: string): RenderResult {\n    const { doc } = context;\n    const text = line.substring(4);\n\n    this.setHeadingStyle(doc, 12);\n    doc.text(text, PdfService.PDF_CONFIG.MARGINS.left, context.currentY);\n\n    const newY = context.currentY + PdfService.PDF_CONFIG.TEXT.lineHeight * 1.5;\n    this.resetDocumentStyle(doc);\n    context.currentY = newY;\n\n    return { height: newY - context.currentY, y: newY };\n  }\n\n  private renderBulletPoint(context: RenderContext, line: string): RenderResult {\n    const indent = line.match(PdfService.PARSING_PATTERNS.indentation)?.[1]?.length || 0;\n    const baseIndent = indent > 0 ? 15 : 10;\n\n    // Extract the text after the bullet point marker (-, *, or •)\n    const bulletMatch = line.match(PdfService.PARSING_PATTERNS.bulletPoint);\n    const textContent = bulletMatch ? bulletMatch[2] : line.substring(2).trim();\n\n    // Parse the text content for markdown formatting\n    const segments = this.parseTextSegments(textContent);\n\n    // Add the bullet point marker as a separate segment\n    const bulletSegments: TextSegment[] = [{ text: '• ', bold: false, isLink: false }, ...segments];\n\n    const result = this.renderTextSegmentsInContext(\n      context,\n      bulletSegments,\n      PdfService.PDF_CONFIG.MARGINS.left + baseIndent,\n      context.maxWidth - baseIndent,\n    );\n\n    context.currentY = result.y + 1;\n    return { height: result.height + 1, y: result.y + 1 };\n  }\n\n  private renderNumberedList(context: RenderContext, line: string): RenderResult {\n    const segments = this.parseTextSegments(line);\n    const result = this.renderTextSegmentsInContext(\n      context,\n      segments,\n      PdfService.PDF_CONFIG.MARGINS.left + 10,\n      context.maxWidth - 10,\n    );\n\n    context.currentY = result.y + 1;\n    return { height: result.height + 1, y: result.y + 1 };\n  }\n\n  private renderCodeBlock(context: RenderContext, line: string): RenderResult {\n    const { doc } = context;\n    this.setCodeStyle(doc);\n\n    const text = line.startsWith('> ') ? line.substring(2) : line;\n    const splitText = doc.splitTextToSize(text, context.maxWidth - 10);\n    doc.text(splitText, PdfService.PDF_CONFIG.MARGINS.left + 8, context.currentY);\n\n    const newY = context.currentY + PdfService.PDF_CONFIG.TEXT.lineHeight * splitText.length + 2;\n    this.resetDocumentStyle(doc);\n    context.currentY = newY;\n\n    return { height: newY - context.currentY, y: newY };\n  }\n\n  private renderRegularText(context: RenderContext, line: string): RenderResult {\n    const segments = this.parseTextSegments(line);\n    const result = this.renderTextSegmentsInContext(\n      context,\n      segments,\n      PdfService.PDF_CONFIG.MARGINS.left,\n      context.maxWidth,\n    );\n\n    context.currentY = result.y + 1;\n    return { height: result.height + 1, y: result.y + 1 };\n  }\n\n  private parseTextSegments(line: string): TextSegment[] {\n    // Use the existing parseMarkdownLine method but with static patterns\n    return this.parseMarkdownLineWithStaticPatterns(line);\n  }\n\n  private parseMarkdownLineWithStaticPatterns(line: string): TextSegment[] {\n    const matches = this.findAllMatchesWithStaticPatterns(line);\n    return this.buildSegmentsFromMatches(line, matches);\n  }\n\n  private findAllMatchesWithStaticPatterns(\n    line: string,\n  ): Array<{ start: number; end: number; segment: TextSegment }> {\n    // Early validation - line length should already be checked, but double-check\n    if (line.length > PdfService.SECURITY_LIMITS.MAX_LINE_LENGTH) {\n      throw new Error('Line too long for processing');\n    }\n\n    const allMatches: Array<{ start: number; end: number; segment: TextSegment }> = [];\n    const startTime = Date.now();\n\n    // Reset global regex lastIndex to ensure consistent behavior\n    PdfService.GLOBAL_PATTERNS.bold.lastIndex = 0;\n    PdfService.GLOBAL_PATTERNS.link.lastIndex = 0;\n    PdfService.GLOBAL_PATTERNS.trailingBold.lastIndex = 0;\n\n    // Find link matches first (higher priority)\n    let linkMatch;\n    while ((linkMatch = PdfService.GLOBAL_PATTERNS.link.exec(line)) !== null) {\n      // Check for timeout\n      if (Date.now() - startTime > PdfService.SECURITY_LIMITS.REGEX_TIMEOUT) {\n        throw new Error('Regex processing timeout exceeded');\n      }\n\n      allMatches.push({\n        start: linkMatch.index,\n        end: linkMatch.index + linkMatch[0].length,\n        segment: {\n          text: linkMatch[1],\n          bold: false,\n          isLink: true,\n          url: linkMatch[2],\n        },\n      });\n    }\n\n    // Find properly formatted bold matches\n    let boldMatch;\n    while ((boldMatch = PdfService.GLOBAL_PATTERNS.bold.exec(line)) !== null) {\n      // Check for timeout\n      if (Date.now() - startTime > PdfService.SECURITY_LIMITS.REGEX_TIMEOUT) {\n        throw new Error('Regex processing timeout exceeded');\n      }\n\n      // Check if this overlaps with any existing link matches\n      const overlapsWithLink = allMatches.some(\n        (match) =>\n          match.segment.isLink &&\n          boldMatch.index < match.end &&\n          boldMatch.index + boldMatch[0].length > match.start,\n      );\n\n      if (!overlapsWithLink) {\n        allMatches.push({\n          start: boldMatch.index,\n          end: boldMatch.index + boldMatch[0].length,\n          segment: {\n            text: boldMatch[2],\n            bold: true,\n            isLink: false,\n          },\n        });\n      }\n    }\n\n    // Find trailing bold patterns (e.g., \"text**\")\n    let trailingBoldMatch;\n    while ((trailingBoldMatch = PdfService.GLOBAL_PATTERNS.trailingBold.exec(line)) !== null) {\n      // Check for timeout\n      if (Date.now() - startTime > PdfService.SECURITY_LIMITS.REGEX_TIMEOUT) {\n        throw new Error('Regex processing timeout exceeded');\n      }\n\n      // Check if this overlaps with any existing matches\n      const overlapsWithExisting = allMatches.some(\n        (match) =>\n          trailingBoldMatch.index < match.end &&\n          trailingBoldMatch.index + trailingBoldMatch[0].length > match.start,\n      );\n\n      if (!overlapsWithExisting) {\n        allMatches.push({\n          start: trailingBoldMatch.index,\n          end: trailingBoldMatch.index + trailingBoldMatch[0].length - 2, // Don't include the **\n          segment: {\n            text: trailingBoldMatch[1],\n            bold: true,\n            isLink: false,\n          },\n        });\n      }\n    }\n\n    return allMatches.sort((a, b) => a.start - b.start);\n  }\n\n  private buildSegmentsFromMatches(\n    line: string,\n    matches: Array<{ start: number; end: number; segment: TextSegment }>,\n  ): TextSegment[] {\n    const segments: TextSegment[] = [];\n    let currentIndex = 0;\n\n    // Process the line, adding regular text between matches\n    for (const match of matches) {\n      // Add regular text before this match\n      if (currentIndex < match.start) {\n        const regularText = line.substring(currentIndex, match.start);\n        if (regularText) {\n          segments.push({\n            text: regularText,\n            bold: false,\n            isLink: false,\n          });\n        }\n      }\n\n      // Add the formatted segment\n      segments.push(match.segment);\n      currentIndex = match.end;\n    }\n\n    // Add any remaining regular text\n    if (currentIndex < line.length) {\n      const remainingText = line.substring(currentIndex);\n      if (remainingText) {\n        // Check if remaining text starts with bold markers that were partially processed\n        const cleanedText = remainingText.replace(PdfService.PARSING_PATTERNS.leadingBold, ''); // Remove leading ** if present\n        if (cleanedText) {\n          segments.push({\n            text: cleanedText,\n            bold: false,\n            isLink: false,\n          });\n        }\n      }\n    }\n\n    // If no formatting found, return the whole line as regular text\n    if (segments.length === 0 && line.trim()) {\n      segments.push({\n        text: line,\n        bold: false,\n        isLink: false,\n      });\n    }\n\n    return segments;\n  }\n\n  private renderTextSegmentsInContext(\n    context: RenderContext,\n    segments: TextSegment[],\n    x: number,\n    maxWidth: number,\n  ): RenderResult {\n    return this.renderTextSegments(context.doc, segments, x, context.currentY, maxWidth);\n  }\n\n  private setHeadingStyle(doc: jsPDF, fontSize: number): void {\n    this.setFont(doc, PdfService.PDF_CONFIG.FONTS.body, 'bold', fontSize);\n    doc.setTextColor(...PdfService.PDF_CONFIG.COLORS.header);\n  }\n\n  private setCodeStyle(doc: jsPDF): void {\n    this.setFont(doc, PdfService.PDF_CONFIG.FONTS.code, 'normal', 9);\n    doc.setTextColor(...PdfService.PDF_CONFIG.COLORS.code);\n  }\n\n  private setFont(doc: jsPDF, font: string, style: string, size: number): void {\n    // Only change font if different from current state\n    if (\n      this.fontState.currentFont !== font ||\n      this.fontState.currentStyle !== style ||\n      this.fontState.currentSize !== size\n    ) {\n      doc.setFont(font, style);\n      doc.setFontSize(size);\n      this.updateFontState(font, style, size);\n    }\n  }\n}\n","numLines":870,"startLine":1,"totalLines":870}}}
{"parentUuid":"72649339-3559-4f6c-818f-2fc5507ac6a0","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01SMHf11cimKqVF13MDie8ko","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Now let me search for any error logs or tests related to PDF generation to understand what might be failing:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":11698,"cache_read_input_tokens":65122,"output_tokens":164,"service_tier":"standard"}},"requestId":"req_011CS5xg8SFNH1sKRr228rqG","type":"assistant","uuid":"41465b19-b02f-44bf-914e-77b05d9e4b79","timestamp":"2025-08-13T15:39:57.376Z"}
{"parentUuid":"41465b19-b02f-44bf-914e-77b05d9e4b79","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01SMHf11cimKqVF13MDie8ko","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01GiBtNPCVCJCVKRiShb2XVM","name":"Grep","input":{"pattern":"Error generating PDF|PDF generation|puppeteer.*error|generatePDF.*error","output_mode":"content","-i":true,"-A":5,"-B":5}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":11698,"cache_read_input_tokens":65122,"output_tokens":164,"service_tier":"standard"}},"requestId":"req_011CS5xg8SFNH1sKRr228rqG","type":"assistant","uuid":"772eeddc-bc3b-4ee5-83ca-ef2770f10132","timestamp":"2025-08-13T15:39:58.807Z"}
{"parentUuid":"772eeddc-bc3b-4ee5-83ca-ef2770f10132","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01GiBtNPCVCJCVKRiShb2XVM","type":"tool_result","content":"/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts-  private updateFontState(font: string, style: string, size: number): void {\n/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts-    this.fontState = { currentFont: font, currentStyle: style, currentSize: size };\n/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts-  }\n/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts-\n/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts-  private handlePdfError(error: any): void {\n/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts:    this.#logger.error(`Error generating PDF from markdown: ${error.message}`, error.stack);\n/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts-  }\n/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts-\n/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts-  private validateInputSecurity(\n/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts-    markdownStrings: string[],\n/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts-    options?: {\n--\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts- */\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-async function generateFallbackRfqPdf(\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-  rfq: GsaActiveRfqResponse,\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-  targetDir: string\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-): Promise<string> {\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts:  console.log(`[DEBUG] Using fallback PDF generation for RFQ ${rfq.rfqId}`);\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-  const pdfDoc = await PDFDocument.create();\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-  const page = pdfDoc.addPage([800, 1100]);\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-  const { width, height } = page.getSize();\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-  // Helper for text positioning\n--\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-      '[WARN] RFQ ID is missing, using directory name from targetDir'\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-    );\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-    rfq.rfqId = path.basename(targetDir);\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-  }\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts:  console.log(`[DEBUG] Starting PDF generation for RFQ ${rfq.rfqId}`);\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-  // Create temp directory if it doesn't exist\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-  const tempDir = path.join(targetDir, 'temp');\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-  await fs.mkdir(tempDir, { recursive: true }).catch(() => {});\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-\n--\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-                // Generate the PDF\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-                if (!jsonOutput) {\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-                  console.log(`Generating PDF for RFQ ${rfqDir}`);\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-                }\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts:                // IMPORTANT: The most critical fix - directly prevent analysis generation before PDF generation\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-                if (skipAnalysis) {\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-                  console.log(\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-                    `[SKIPPED] Analysis generation for RFQ ${rfqDir} due to --no-analysis flag`\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-                  );\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-                }\n--\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-            null,\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-            2\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-          )\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-        );\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-      } else {\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts:        console.log('PDF generation complete!');\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-        console.log(\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-          `Processed ${totalRfqs} RFQs across ${contractDirs.length} contracts`\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-        );\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-        console.log(\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-          `Success: ${results.filter(r => r.success).length}, Errors: ${errorCount}`\n--\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-# GSA eBuy Tools Docker Image\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md:This Docker image contains all the necessary tools and dependencies to run the GSA eBuy automation scripts, including RFQ downloading, PDF generation, and database population.\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-## Table of Contents\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-- [Features](#features)\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-- [Environment Variables](#environment-variables)\n--\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-- Node.js 20 runtime with TypeScript support\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-- Puppeteer with Chrome for web automation\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-- LibreOffice for document conversion (DOCX, XLSX, PPTX to PDF)\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-- Python with markitdown for markdown conversion\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md:- All necessary system libraries for PDF generation\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-- Optimized for both development and production use\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-## Environment Variables\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-### Required GSA Authentication\n--\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-  gsa-ebuy-tools:latest\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-```\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-### Memory Issues\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md:For large PDF generation tasks:\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-```bash\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-# Increase memory limits\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-docker run --rm \\\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-  -m 8g \\\n--\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-  req: NextRequest,\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-  { params }: { params: { id: string } }\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-) => {\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-  let browser: Browser | null = null;\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-  try {\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts:    logger.info('Starting PDF generation process');\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    const { id } = await params;\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    const searchParams: URLSearchParams = req.nextUrl.searchParams;\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    const sessionType: string = searchParams.get('session_type') ?? '';\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    logger.info({ id, sessionType }, 'Fetching content');\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    const parsedContent = await fetchContent(id, sessionType);\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    const html = generateHTML(parsedContent, TIPTAP_EXTENSIONS);\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts:    logger.info('Launching browser for PDF generation');\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    // Puppeteer known issue with alpine build: https://github.com/puppeteer/puppeteer/issues/12637#issuecomment-2264825922\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    // --disable-gpu was suggested as a solution\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    browser = await puppeteer.launch({\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-      args: ['--disable-dev-shm-usage', '--disable-gpu'],\n--\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    });\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    logger.info('Generating PDF from content');\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    const pdfBuffer = await generatePDF(browser, html);\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts:    logger.info('PDF generation completed successfully');\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    return new NextResponse(pdfBuffer, {\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-      status: 200,\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-      headers: PDF_RESPONSE_HEADERS,\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    });\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-  } catch (error) {\n--\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-      {\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-        err: error,\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-        id: params?.id,\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-        sessionType: req.nextUrl.searchParams.get('session_type'),\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-      },\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts:      'Error in PDF generation process'\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    );\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    return new NextResponse(\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-      JSON.stringify({\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts:        error: 'Error generating PDF',\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-        details: error instanceof Error ? error.message : 'Unknown error',\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-      }),\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-      {\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-        status: 500,\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-        headers: { 'Content-Type': 'application/json' },"}]},"uuid":"ede2a889-6c65-47d1-bde0-9692bf4e3445","timestamp":"2025-08-13T15:39:59.080Z","toolUseResult":{"mode":"content","numFiles":0,"filenames":[],"content":"/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts-  private updateFontState(font: string, style: string, size: number): void {\n/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts-    this.fontState = { currentFont: font, currentStyle: style, currentSize: size };\n/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts-  }\n/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts-\n/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts-  private handlePdfError(error: any): void {\n/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts:    this.#logger.error(`Error generating PDF from markdown: ${error.message}`, error.stack);\n/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts-  }\n/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts-\n/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts-  private validateInputSecurity(\n/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts-    markdownStrings: string[],\n/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts-    options?: {\n--\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts- */\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-async function generateFallbackRfqPdf(\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-  rfq: GsaActiveRfqResponse,\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-  targetDir: string\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-): Promise<string> {\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts:  console.log(`[DEBUG] Using fallback PDF generation for RFQ ${rfq.rfqId}`);\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-  const pdfDoc = await PDFDocument.create();\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-  const page = pdfDoc.addPage([800, 1100]);\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-  const { width, height } = page.getSize();\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-  // Helper for text positioning\n--\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-      '[WARN] RFQ ID is missing, using directory name from targetDir'\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-    );\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-    rfq.rfqId = path.basename(targetDir);\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-  }\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts:  console.log(`[DEBUG] Starting PDF generation for RFQ ${rfq.rfqId}`);\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-  // Create temp directory if it doesn't exist\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-  const tempDir = path.join(targetDir, 'temp');\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-  await fs.mkdir(tempDir, { recursive: true }).catch(() => {});\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts-\n--\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-                // Generate the PDF\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-                if (!jsonOutput) {\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-                  console.log(`Generating PDF for RFQ ${rfqDir}`);\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-                }\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts:                // IMPORTANT: The most critical fix - directly prevent analysis generation before PDF generation\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-                if (skipAnalysis) {\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-                  console.log(\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-                    `[SKIPPED] Analysis generation for RFQ ${rfqDir} due to --no-analysis flag`\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-                  );\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-                }\n--\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-            null,\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-            2\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-          )\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-        );\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-      } else {\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts:        console.log('PDF generation complete!');\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-        console.log(\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-          `Processed ${totalRfqs} RFQs across ${contractDirs.length} contracts`\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-        );\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-        console.log(\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-ebuy-cli.ts-          `Success: ${results.filter(r => r.success).length}, Errors: ${errorCount}`\n--\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-# GSA eBuy Tools Docker Image\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md:This Docker image contains all the necessary tools and dependencies to run the GSA eBuy automation scripts, including RFQ downloading, PDF generation, and database population.\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-## Table of Contents\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-- [Features](#features)\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-- [Environment Variables](#environment-variables)\n--\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-- Node.js 20 runtime with TypeScript support\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-- Puppeteer with Chrome for web automation\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-- LibreOffice for document conversion (DOCX, XLSX, PPTX to PDF)\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-- Python with markitdown for markdown conversion\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md:- All necessary system libraries for PDF generation\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-- Optimized for both development and production use\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-## Environment Variables\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-### Required GSA Authentication\n--\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-  gsa-ebuy-tools:latest\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-```\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-### Memory Issues\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md:For large PDF generation tasks:\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-```bash\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-# Increase memory limits\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-docker run --rm \\\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/README.Docker.md-  -m 8g \\\n--\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-  req: NextRequest,\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-  { params }: { params: { id: string } }\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-) => {\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-  let browser: Browser | null = null;\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-  try {\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts:    logger.info('Starting PDF generation process');\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    const { id } = await params;\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    const searchParams: URLSearchParams = req.nextUrl.searchParams;\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    const sessionType: string = searchParams.get('session_type') ?? '';\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    logger.info({ id, sessionType }, 'Fetching content');\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    const parsedContent = await fetchContent(id, sessionType);\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    const html = generateHTML(parsedContent, TIPTAP_EXTENSIONS);\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts:    logger.info('Launching browser for PDF generation');\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    // Puppeteer known issue with alpine build: https://github.com/puppeteer/puppeteer/issues/12637#issuecomment-2264825922\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    // --disable-gpu was suggested as a solution\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    browser = await puppeteer.launch({\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-      args: ['--disable-dev-shm-usage', '--disable-gpu'],\n--\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    });\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    logger.info('Generating PDF from content');\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    const pdfBuffer = await generatePDF(browser, html);\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts:    logger.info('PDF generation completed successfully');\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    return new NextResponse(pdfBuffer, {\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-      status: 200,\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-      headers: PDF_RESPONSE_HEADERS,\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    });\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-  } catch (error) {\n--\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-      {\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-        err: error,\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-        id: params?.id,\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-        sessionType: req.nextUrl.searchParams.get('session_type'),\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-      },\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts:      'Error in PDF generation process'\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    );\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-    return new NextResponse(\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-      JSON.stringify({\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts:        error: 'Error generating PDF',\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-        details: error instanceof Error ? error.message : 'Unknown error',\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-      }),\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-      {\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-        status: 500,\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts-        headers: { 'Content-Type': 'application/json' },","numLines":142}}
{"parentUuid":"ede2a889-6c65-47d1-bde0-9692bf4e3445","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01BLBUohGaHu2xYaX4TCM8pr","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Now let me create a comprehensive implementation plan based on my analysis. Let me first create a todo list to track our analysis and planning:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":5856,"cache_read_input_tokens":76820,"output_tokens":353,"service_tier":"standard"}},"requestId":"req_011CS5xgUvJ1xSXZ4kwpJbh2","type":"assistant","uuid":"98e4d336-262d-47dd-9036-ab35f064c5bf","timestamp":"2025-08-13T15:40:02.631Z"}
{"parentUuid":"98e4d336-262d-47dd-9036-ab35f064c5bf","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01BLBUohGaHu2xYaX4TCM8pr","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01XC57gF6f1N9hix447MPpxG","name":"TodoWrite","input":{"todos":[{"id":"1","content":"Analyze codebase structure and identify PDF export components","status":"completed"},{"id":"2","content":"Identify the two UI locations for PDF export (AI Review screen and History Panel)","status":"completed"},{"id":"3","content":"Examine PDF generation API and shared libraries","status":"completed"},{"id":"4","content":"Research common PDF generation issues and failure points","status":"in_progress"},{"id":"5","content":"Collaborate with user to understand specific error patterns","status":"pending"},{"id":"6","content":"Create detailed implementation plan with specific fixes","status":"pending"},{"id":"7","content":"Get user approval on implementation approach","status":"pending"}]}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":5856,"cache_read_input_tokens":76820,"output_tokens":353,"service_tier":"standard"}},"requestId":"req_011CS5xgUvJ1xSXZ4kwpJbh2","type":"assistant","uuid":"f39de548-bb91-4532-ab11-7c8e0b1396ab","timestamp":"2025-08-13T15:40:06.935Z"}
{"parentUuid":"f39de548-bb91-4532-ab11-7c8e0b1396ab","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01XC57gF6f1N9hix447MPpxG","type":"tool_result","content":"Todos have been modified successfully. Ensure that you continue to use the todo list to track your progress. Please proceed with the current tasks if applicable"}]},"uuid":"1342b56c-63cd-41b1-b8c3-7b512e5822f1","timestamp":"2025-08-13T15:40:06.986Z","toolUseResult":{"oldTodos":[],"newTodos":[{"content":"Analyze codebase structure and identify PDF export components","status":"completed","id":"1"},{"content":"Identify the two UI locations for PDF export (AI Review screen and History Panel)","status":"completed","id":"2"},{"content":"Examine PDF generation API and shared libraries","status":"completed","id":"3"},{"content":"Research common PDF generation issues and failure points","status":"in_progress","id":"4"},{"content":"Collaborate with user to understand specific error patterns","status":"pending","id":"5"},{"content":"Create detailed implementation plan with specific fixes","status":"pending","id":"6"},{"content":"Get user approval on implementation approach","status":"pending","id":"7"}]}}
{"parentUuid":"1342b56c-63cd-41b1-b8c3-7b512e5822f1","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01WfcSgsqrE2fmkx4scyE4aj","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"## AI Review PDF Export Analysis & Implementation Plan\n\nBased on my comprehensive analysis of the codebase, I've identified the key components involved in the PDF export functionality for both the AI Review screen and History Panel. Here's what I found:\n\n### **Key Components Identified:**\n\n#### **UI Export Locations:**\n1. **AI Review Screen**: `/app/(dashboard)/(ai)/components/AIHeader/AIHeader.tsx` (lines 185-196)\n   - Export dropdown menu in the header\n   - Calls `exportContent()` function from shared export utility\n\n2. **History Panel**: `/app/(dashboard)/(ai)/components/workspace-history-list/history-item.tsx` (lines 409-417)\n   - Context menu export option for individual history items\n   - Also calls `exportContent()` function from shared export utility\n\n#### **Shared Export Logic:**\n3. **Export Function**: `/components/editor/ExportContent.tsx`\n   - Central function that handles both PDF and DOCX exports\n   - Makes API call to `/api/export/${id}/generate-pdf?session_type=${sessionType}`\n   - Handles file download and user feedback via toast notifications\n\n4. **PDF Generation API**: `/app/api/export/[id]/generate-pdf/route.ts`\n   - Uses Puppeteer to generate PDFs from HTML content\n   - Fetches content from database using session type and ID\n   - Converts TipTap JSON to HTML using `generateHTML()`\n\n#### **Content Fetching:**\n5. **Content Fetcher**: `/lib/export-ai-content.ts`\n   - Fetches content from database based on session type\n   - Supports 'draft' and 'reviewProposal' session types\n   - Uses database functions from `/db/export-ai-content-server.ts`\n\n#### **Database Layer:**\n6. **Database Functions**: `/db/export-ai-content-server.ts`\n   - `getDraftContentById()` - fetches from 'drafts' table\n   - `getReviewProposalContentById()` - fetches from 'review_proposals' table\n\n### **Potential Issues & Root Causes:**\n\nBased on the code analysis, the most likely causes of \"Error generating PDF\" are:\n\n1. **Puppeteer/Browser Issues:**\n   - Browser launch failures in containerized environments\n   - Missing Chrome/Chromium dependencies\n   - Memory constraints during PDF generation\n   - Timeout issues (30-second limits set for browser, page load, and PDF generation)\n\n2. **Content Fetching Issues:**\n   - Database connection problems\n   - Missing or null content in database\n   - Invalid JSON content format\n   - Session type mismatch\n\n3. **TipTap HTML Generation Issues:**\n   - Missing or misconfigured TipTap extensions\n   - Invalid JSON content structure\n   - HTML generation failures\n\n### **Questions for User:**\n\nBefore creating the final implementation plan, I need to understand:\n\n1. **Error Patterns**: Are you seeing this error consistently for all AI Review/History Panel exports, or only for specific items?\n\n2. **Environment**: Is this happening in both local development and staging environments, or just staging?\n\n3. **Error Logs**: Do you have access to server logs that might show the actual error details beyond \"Error generating PDF\"?\n\n4. **Content Types**: Does this affect both Review Proposals and Drafts, or is it specific to one type?\n\n5. **Puppeteer Environment**: Are you running this in a containerized environment (Docker/Kubernetes) where Puppeteer might have dependency issues?\n\n6. **Recent Changes**: Were there any recent changes to the application that might have affected PDF generation (Puppeteer versions, Node.js updates, etc.)?\n\nCould you provide some insights on these points? This will help me create a more targeted implementation plan that addresses the specific root cause of your PDF export issues."}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":2,"cache_creation_input_tokens":508,"cache_read_input_tokens":82676,"output_tokens":1131,"service_tier":"standard"}},"requestId":"req_011CS5xh5Rwf5wXcKfpaFdhX","type":"assistant","uuid":"1f21aec6-a50a-48d5-9e85-cc599e4bf0b4","timestamp":"2025-08-13T15:40:28.402Z"}
{"parentUuid":"1f21aec6-a50a-48d5-9e85-cc599e4bf0b4","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01WfcSgsqrE2fmkx4scyE4aj","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01GKgTU3sLygypCh2jiAX4LC","name":"TodoWrite","input":{"todos":[{"id":"1","content":"Analyze codebase structure and identify PDF export components","status":"completed"},{"id":"2","content":"Identify the two UI locations for PDF export (AI Review screen and History Panel)","status":"completed"},{"id":"3","content":"Examine PDF generation API and shared libraries","status":"completed"},{"id":"4","content":"Research common PDF generation issues and failure points","status":"completed"},{"id":"5","content":"Collaborate with user to understand specific error patterns","status":"in_progress"},{"id":"6","content":"Create detailed implementation plan with specific fixes","status":"pending"},{"id":"7","content":"Get user approval on implementation approach","status":"pending"}]}}],"stop_reason":"tool_use","stop_sequence":null,"usage":{"input_tokens":2,"cache_creation_input_tokens":508,"cache_read_input_tokens":82676,"output_tokens":1131,"service_tier":"standard"}},"requestId":"req_011CS5xh5Rwf5wXcKfpaFdhX","type":"assistant","uuid":"af904b89-c567-4060-a2c5-e327bf34999d","timestamp":"2025-08-13T15:40:29.996Z"}
{"parentUuid":"af904b89-c567-4060-a2c5-e327bf34999d","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01GKgTU3sLygypCh2jiAX4LC","type":"tool_result","content":"Todos have been modified successfully. Ensure that you continue to use the todo list to track your progress. Please proceed with the current tasks if applicable"}]},"uuid":"8a96923d-e146-41b5-9ab6-85cb6731a10e","timestamp":"2025-08-13T15:40:30.048Z","toolUseResult":{"oldTodos":[{"content":"Analyze codebase structure and identify PDF export components","status":"completed","id":"1"},{"content":"Identify the two UI locations for PDF export (AI Review screen and History Panel)","status":"completed","id":"2"},{"content":"Examine PDF generation API and shared libraries","status":"completed","id":"3"},{"content":"Research common PDF generation issues and failure points","status":"in_progress","id":"4"},{"content":"Collaborate with user to understand specific error patterns","status":"pending","id":"5"},{"content":"Create detailed implementation plan with specific fixes","status":"pending","id":"6"},{"content":"Get user approval on implementation approach","status":"pending","id":"7"}],"newTodos":[{"content":"Analyze codebase structure and identify PDF export components","status":"completed","id":"1"},{"content":"Identify the two UI locations for PDF export (AI Review screen and History Panel)","status":"completed","id":"2"},{"content":"Examine PDF generation API and shared libraries","status":"completed","id":"3"},{"content":"Research common PDF generation issues and failure points","status":"completed","id":"4"},{"content":"Collaborate with user to understand specific error patterns","status":"in_progress","id":"5"},{"content":"Create detailed implementation plan with specific fixes","status":"pending","id":"6"},{"content":"Get user approval on implementation approach","status":"pending","id":"7"}]}}
{"parentUuid":"6523820b-166f-4422-a509-dfabc62ae286","isSidechain":false,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01J12xvVEQJSH9uyg3MQqJ5V","type":"tool_result","content":[]}]},"uuid":"5ee41fcf-9905-4aa4-aaa2-61b37825666f","timestamp":"2025-08-13T15:40:33.336Z","toolUseResult":{"content":[],"totalDurationMs":110153,"totalTokens":84317,"totalToolUseCount":21,"usage":{"input_tokens":2,"cache_creation_input_tokens":508,"cache_read_input_tokens":82676,"output_tokens":1131,"service_tier":"standard"}}}
{"parentUuid":"5ee41fcf-9905-4aa4-aaa2-61b37825666f","isSidechain":false,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01BKHq655vkCqeJzfPSXs2UC","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"I've delegated the codebase analysis and implementation planning to the codebase-analyst subagent. They are now working to discover the relevant code areas for the AI Review PDF export functionality and will collaborate with you to create a comprehensive implementation plan.\n\nThe codebase-analyst will search for AI Review components, PDF export functionality, and the two UI locations mentioned in the ticket, then work with you to ensure we have the right approach before moving to implementation."}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":515,"cache_read_input_tokens":35146,"output_tokens":99,"service_tier":"standard"}},"requestId":"req_011CS5xj12LdBRys6YoFD2he","type":"assistant","uuid":"b403d551-8bab-4218-af25-e31c3fd0b1de","timestamp":"2025-08-13T15:40:37.421Z"}
{"parentUuid":"b403d551-8bab-4218-af25-e31c3fd0b1de","isSidechain":false,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":"what did the codebase analyst find?"},"uuid":"a569cb61-d1d9-401a-9a92-1c7f1076cf7f","timestamp":"2025-08-13T15:46:10.390Z"}
{"parentUuid":"a569cb61-d1d9-401a-9a92-1c7f1076cf7f","isSidechain":false,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_011TJ7kpLi9mSuzP3gafzWi8","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Let me check what the codebase-analyst found by using the Task tool to get their current findings."}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":0,"cache_creation_input_tokens":35775,"cache_read_input_tokens":0,"output_tokens":1,"service_tier":"standard"}},"requestId":"req_011CS5y9sLvfJVHcPihnaaTm","type":"assistant","uuid":"e8e72dbe-f5cd-4e51-95fc-e974fe828b60","timestamp":"2025-08-13T15:46:14.459Z"}
{"parentUuid":"e8e72dbe-f5cd-4e51-95fc-e974fe828b60","isSidechain":false,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_011TJ7kpLi9mSuzP3gafzWi8","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_0178Tew6N6s7WtB3Ae3mYMQH","name":"Task","input":{"subagent_type":"codebase-analyst","description":"Get codebase analysis results for DEV-5856","prompt":"Please provide a comprehensive report of what you've discovered so far in the codebase analysis for DEV-5856 (AI Review PDF export functionality).\n\nI need you to share:\n1. What files and components you've found related to AI Review functionality\n2. Any PDF export or generation code you've located\n3. The two UI locations (AI Review screen and History Panel) with export buttons\n4. Any shared services or libraries for PDF generation\n5. Current progress on your investigation\n6. Any questions or areas where you need user input to proceed\n7. Your preliminary findings about potential root causes\n\nPlease provide a detailed status update of your codebase analysis work."}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":0,"cache_creation_input_tokens":35775,"cache_read_input_tokens":0,"output_tokens":267,"service_tier":"standard"}},"requestId":"req_011CS5y9sLvfJVHcPihnaaTm","type":"assistant","uuid":"3db1e46f-236e-479c-b4e4-34d0351b4116","timestamp":"2025-08-13T15:46:18.850Z"}
{"parentUuid":null,"isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":"Please provide a comprehensive report of what you've discovered so far in the codebase analysis for DEV-5856 (AI Review PDF export functionality).\n\nI need you to share:\n1. What files and components you've found related to AI Review functionality\n2. Any PDF export or generation code you've located\n3. The two UI locations (AI Review screen and History Panel) with export buttons\n4. Any shared services or libraries for PDF generation\n5. Current progress on your investigation\n6. Any questions or areas where you need user input to proceed\n7. Your preliminary findings about potential root causes\n\nPlease provide a detailed status update of your codebase analysis work."},"uuid":"41f52612-6440-48c4-ae3a-bc0c12632e40","timestamp":"2025-08-13T15:46:18.877Z"}
{"parentUuid":"41f52612-6440-48c4-ae3a-bc0c12632e40","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_017kyN7HBpwmHjDv5cjVAWQf","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"I don't currently have any previous analysis or investigation for DEV-5856 in my context. It appears I'm starting fresh on this ticket. Let me begin a comprehensive codebase analysis for the AI Review PDF export functionality issue."}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":25842,"cache_read_input_tokens":0,"output_tokens":137,"service_tier":"standard"}},"requestId":"req_011CS5yAV9iMpw5UiATZwSs6","type":"assistant","uuid":"512218c9-1d33-485a-be8d-96b43231087f","timestamp":"2025-08-13T15:46:22.994Z"}
{"parentUuid":"512218c9-1d33-485a-be8d-96b43231087f","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_017kyN7HBpwmHjDv5cjVAWQf","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_018Wwk5ACpsTiFZ4gzaS4zPD","name":"mcp__atlassian__jira_get_issue","input":{"issue_key":"DEV-5856","fields":"*all"}}],"stop_reason":"tool_use","stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":25842,"cache_read_input_tokens":0,"output_tokens":137,"service_tier":"standard"}},"requestId":"req_011CS5yAV9iMpw5UiATZwSs6","type":"assistant","uuid":"5dae4466-827a-4082-9ad9-fbb5eacc601a","timestamp":"2025-08-13T15:46:24.003Z"}
{"parentUuid":"5dae4466-827a-4082-9ad9-fbb5eacc601a","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_018Wwk5ACpsTiFZ4gzaS4zPD","type":"tool_result","content":[{"type":"text","text":"{\n  \"id\": \"27777\",\n  \"key\": \"DEV-5856\",\n  \"summary\": \"AI Review Export Fails – \\\"Error generating PDF\\\" message displayed on History Panel and AI Review Screen\",\n  \"url\": \"https://procurementsciences.atlassian.net/rest/api/2/issue/27777\",\n  \"description\": \"*URL:-* [https://staging.awardedai.dev/review-proposal|https://staging.awardedai.dev/review-proposal]\\n\\n*Tested Server:-* Staging Environment.\\n*Tested Version:-* App Version: 1.50.0\\n\\n+*Bug Description:*+\\n\\nWhen attempting to export AI Review results from either the History Panel or the AI Review screen, the export function fails and displays the message _\\\"Error generating PDF\\\"_. Please refer to the attached video for your reference.\\n\\n*Expected Result:*\\nClicking the *Export* button should generate and download the PDF file of the AI Review report without any errors.\\n\\n*Actual Result:*\\nAn error message _\\\"Error generating PDF\\\"_ is displayed, and the PDF file is not downloaded.\\n\\n+*Steps To Reproduce:-*+\\n\\n# Login with Valid credential.\\n# Navigate to the *AI Review* screen.\\n# Complete or select an existing AI Review result.\\n# Click on the *Export* button.\\n# Observe the message displayed.\\n# Repeat the same process on the *History Panel* for an existing AI Review.\\n\\n+*Attached Video:-*+\\n\\n!AI Review Export.mp4|width=1280,height=680,alt=\\\"AI Review Export.mp4\\\"!\",\n  \"status\": {\n    \"name\": \"In Progress\",\n    \"category\": \"In Progress\",\n    \"color\": \"yellow\"\n  },\n  \"issue_type\": {\n    \"name\": \"Bug\"\n  },\n  \"priority\": {\n    \"name\": \"High\"\n  },\n  \"project\": {\n    \"key\": \"DEV\",\n    \"name\": \"Core Development\",\n    \"avatar_url\": \"https://procurementsciences.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10422\"\n  },\n  \"worklog\": {\n    \"startAt\": 0,\n    \"maxResults\": 20,\n    \"total\": 0,\n    \"worklogs\": []\n  },\n  \"assignee\": {\n    \"display_name\": \"Luke O'Malley\",\n    \"name\": \"Luke O'Malley\",\n    \"email\": \"luke@procurementsciences.com\",\n    \"avatar_url\": \"https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/712020:4110baba-7778-4e0d-8549-12f13af9b21f/bb56271a-dce9-43fa-ab52-062e5c85a859/48\"\n  },\n  \"reporter\": {\n    \"display_name\": \"Rajakumaran\",\n    \"name\": \"Rajakumaran\",\n    \"email\": null,\n    \"avatar_url\": \"https://secure.gravatar.com/avatar/3ae50ccc80ab1038ba22623d5980aa13?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FR-4.png\"\n  },\n  \"labels\": [\n    \"AI-Review\"\n  ],\n  \"created\": \"2025-08-13T06:26:08.503-0600\",\n  \"updated\": \"2025-08-13T09:35:22.007-0600\",\n  \"attachments\": [\n    {\n      \"filename\": \"AI Review Export.mp4\",\n      \"size\": 10201403,\n      \"url\": \"https://procurementsciences.atlassian.net/rest/api/2/attachment/content/17384\",\n      \"content_type\": \"video/mp4\",\n      \"author\": {\n        \"display_name\": \"Rajakumaran\",\n        \"name\": \"Rajakumaran\",\n        \"email\": null,\n        \"avatar_url\": \"https://secure.gravatar.com/avatar/3ae50ccc80ab1038ba22623d5980aa13?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FR-4.png\"\n      },\n      \"created\": \"2025-08-13T06:26:08.669-0600\"\n    }\n  ],\n  \"customfield_10351\": {\n    \"value\": null\n  },\n  \"customfield_10110\": {\n    \"value\": null\n  },\n  \"customfield_10111\": {\n    \"value\": null\n  },\n  \"customfield_10112\": {\n    \"value\": null\n  },\n  \"customfield_10106\": {\n    \"value\": null\n  },\n  \"customfield_10107\": {\n    \"value\": null\n  },\n  \"customfield_10108\": {\n    \"value\": null\n  },\n  \"customfield_10109\": {\n    \"value\": null\n  },\n  \"customfield_10183\": {\n    \"value\": null\n  },\n  \"customfield_10185\": {\n    \"value\": null\n  },\n  \"customfield_10187\": {\n    \"value\": null\n  },\n  \"customfield_10174\": {\n    \"value\": null\n  },\n  \"customfield_10175\": {\n    \"value\": null\n  },\n  \"customfield_10040\": {\n    \"value\": null\n  },\n  \"customfield_10042\": {\n    \"value\": null\n  },\n  \"customfield_10043\": {\n    \"value\": null\n  },\n  \"customfield_10038\": {\n    \"value\": null\n  },\n  \"customfield_10039\": {\n    \"value\": null\n  },\n  \"customfield_10030\": {\n    \"value\": null\n  },\n  \"customfield_10033\": {\n    \"value\": null\n  },\n  \"customfield_10036\": {\n    \"value\": null\n  },\n  \"customfield_10037\": {\n    \"value\": []\n  },\n  \"customfield_10027\": {\n    \"value\": null\n  },\n  \"customfield_10028\": {\n    \"value\": null\n  },\n  \"customfield_10029\": {\n    \"value\": null\n  },\n  \"customfield_10549\": {\n    \"value\": null\n  },\n  \"customfield_10260\": {\n    \"value\": null\n  },\n  \"customfield_10140\": {\n    \"value\": null\n  },\n  \"customfield_10261\": {\n    \"value\": null\n  },\n  \"customfield_10020\": {\n    \"value\": [\n      \"2025.Q3.S1 - Flamingo\"\n    ]\n  },\n  \"customfield_10021\": {\n    \"value\": null\n  },\n  \"customfield_10384\": {\n    \"value\": null\n  },\n  \"customfield_10022\": {\n    \"value\": null\n  },\n  \"customfield_10023\": {\n    \"value\": null\n  },\n  \"customfield_10024\": {\n    \"value\": null\n  },\n  \"customfield_10025\": {\n    \"value\": null\n  },\n  \"customfield_10016\": {\n    \"value\": null\n  },\n  \"customfield_10258\": {\n    \"value\": null\n  },\n  \"customfield_10017\": {\n    \"value\": null\n  },\n  \"customfield_10259\": {\n    \"value\": null\n  },\n  \"customfield_10139\": {\n    \"value\": null\n  },\n  \"customfield_10019\": {\n    \"value\": \"0|i024df:\"\n  },\n  \"customfield_10130\": {\n    \"value\": null\n  },\n  \"customfield_10252\": {\n    \"value\": null\n  },\n  \"customfield_10010\": {\n    \"value\": null\n  },\n  \"customfield_10131\": {\n    \"value\": null\n  },\n  \"customfield_10098\": {\n    \"value\": null\n  },\n  \"customfield_10132\": {\n    \"value\": null\n  },\n  \"customfield_10253\": {\n    \"value\": null\n  },\n  \"customfield_10254\": {\n    \"value\": null\n  },\n  \"customfield_10255\": {\n    \"value\": null\n  },\n  \"customfield_10014\": {\n    \"value\": null\n  },\n  \"customfield_10135\": {\n    \"value\": null\n  },\n  \"customfield_10256\": {\n    \"value\": null\n  },\n  \"customfield_10257\": {\n    \"value\": null\n  },\n  \"customfield_10015\": {\n    \"value\": null\n  },\n  \"customfield_10127\": {\n    \"value\": null\n  },\n  \"customfield_10128\": {\n    \"value\": null\n  },\n  \"customfield_10121\": {\n    \"value\": null\n  },\n  \"customfield_10000\": {\n    \"value\": \"{}\"\n  },\n  \"customfield_10001\": {\n    \"value\": \"Win\"\n  },\n  \"customfield_10122\": {\n    \"value\": null\n  },\n  \"customfield_10002\": {\n    \"value\": []\n  },\n  \"customfield_10123\": {\n    \"value\": null\n  },\n  \"customfield_10003\": {\n    \"value\": null\n  },\n  \"customfield_10115\": {\n    \"value\": null\n  },\n  \"customfield_10116\": {\n    \"value\": []\n  },\n  \"customfield_10516\": {\n    \"value\": null\n  },\n  \"customfield_10517\": {\n    \"value\": null\n  }\n}"}]}]},"uuid":"6457674c-b6f1-4717-9687-40ea0dc7888c","timestamp":"2025-08-13T15:46:25.374Z","toolUseResult":[{"type":"text","text":"{\n  \"id\": \"27777\",\n  \"key\": \"DEV-5856\",\n  \"summary\": \"AI Review Export Fails – \\\"Error generating PDF\\\" message displayed on History Panel and AI Review Screen\",\n  \"url\": \"https://procurementsciences.atlassian.net/rest/api/2/issue/27777\",\n  \"description\": \"*URL:-* [https://staging.awardedai.dev/review-proposal|https://staging.awardedai.dev/review-proposal]\\n\\n*Tested Server:-* Staging Environment.\\n*Tested Version:-* App Version: 1.50.0\\n\\n+*Bug Description:*+\\n\\nWhen attempting to export AI Review results from either the History Panel or the AI Review screen, the export function fails and displays the message _\\\"Error generating PDF\\\"_. Please refer to the attached video for your reference.\\n\\n*Expected Result:*\\nClicking the *Export* button should generate and download the PDF file of the AI Review report without any errors.\\n\\n*Actual Result:*\\nAn error message _\\\"Error generating PDF\\\"_ is displayed, and the PDF file is not downloaded.\\n\\n+*Steps To Reproduce:-*+\\n\\n# Login with Valid credential.\\n# Navigate to the *AI Review* screen.\\n# Complete or select an existing AI Review result.\\n# Click on the *Export* button.\\n# Observe the message displayed.\\n# Repeat the same process on the *History Panel* for an existing AI Review.\\n\\n+*Attached Video:-*+\\n\\n!AI Review Export.mp4|width=1280,height=680,alt=\\\"AI Review Export.mp4\\\"!\",\n  \"status\": {\n    \"name\": \"In Progress\",\n    \"category\": \"In Progress\",\n    \"color\": \"yellow\"\n  },\n  \"issue_type\": {\n    \"name\": \"Bug\"\n  },\n  \"priority\": {\n    \"name\": \"High\"\n  },\n  \"project\": {\n    \"key\": \"DEV\",\n    \"name\": \"Core Development\",\n    \"avatar_url\": \"https://procurementsciences.atlassian.net/rest/api/2/universal_avatar/view/type/project/avatar/10422\"\n  },\n  \"worklog\": {\n    \"startAt\": 0,\n    \"maxResults\": 20,\n    \"total\": 0,\n    \"worklogs\": []\n  },\n  \"assignee\": {\n    \"display_name\": \"Luke O'Malley\",\n    \"name\": \"Luke O'Malley\",\n    \"email\": \"luke@procurementsciences.com\",\n    \"avatar_url\": \"https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/712020:4110baba-7778-4e0d-8549-12f13af9b21f/bb56271a-dce9-43fa-ab52-062e5c85a859/48\"\n  },\n  \"reporter\": {\n    \"display_name\": \"Rajakumaran\",\n    \"name\": \"Rajakumaran\",\n    \"email\": null,\n    \"avatar_url\": \"https://secure.gravatar.com/avatar/3ae50ccc80ab1038ba22623d5980aa13?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FR-4.png\"\n  },\n  \"labels\": [\n    \"AI-Review\"\n  ],\n  \"created\": \"2025-08-13T06:26:08.503-0600\",\n  \"updated\": \"2025-08-13T09:35:22.007-0600\",\n  \"attachments\": [\n    {\n      \"filename\": \"AI Review Export.mp4\",\n      \"size\": 10201403,\n      \"url\": \"https://procurementsciences.atlassian.net/rest/api/2/attachment/content/17384\",\n      \"content_type\": \"video/mp4\",\n      \"author\": {\n        \"display_name\": \"Rajakumaran\",\n        \"name\": \"Rajakumaran\",\n        \"email\": null,\n        \"avatar_url\": \"https://secure.gravatar.com/avatar/3ae50ccc80ab1038ba22623d5980aa13?d=https%3A%2F%2Favatar-management--avatars.us-west-2.prod.public.atl-paas.net%2Finitials%2FR-4.png\"\n      },\n      \"created\": \"2025-08-13T06:26:08.669-0600\"\n    }\n  ],\n  \"customfield_10351\": {\n    \"value\": null\n  },\n  \"customfield_10110\": {\n    \"value\": null\n  },\n  \"customfield_10111\": {\n    \"value\": null\n  },\n  \"customfield_10112\": {\n    \"value\": null\n  },\n  \"customfield_10106\": {\n    \"value\": null\n  },\n  \"customfield_10107\": {\n    \"value\": null\n  },\n  \"customfield_10108\": {\n    \"value\": null\n  },\n  \"customfield_10109\": {\n    \"value\": null\n  },\n  \"customfield_10183\": {\n    \"value\": null\n  },\n  \"customfield_10185\": {\n    \"value\": null\n  },\n  \"customfield_10187\": {\n    \"value\": null\n  },\n  \"customfield_10174\": {\n    \"value\": null\n  },\n  \"customfield_10175\": {\n    \"value\": null\n  },\n  \"customfield_10040\": {\n    \"value\": null\n  },\n  \"customfield_10042\": {\n    \"value\": null\n  },\n  \"customfield_10043\": {\n    \"value\": null\n  },\n  \"customfield_10038\": {\n    \"value\": null\n  },\n  \"customfield_10039\": {\n    \"value\": null\n  },\n  \"customfield_10030\": {\n    \"value\": null\n  },\n  \"customfield_10033\": {\n    \"value\": null\n  },\n  \"customfield_10036\": {\n    \"value\": null\n  },\n  \"customfield_10037\": {\n    \"value\": []\n  },\n  \"customfield_10027\": {\n    \"value\": null\n  },\n  \"customfield_10028\": {\n    \"value\": null\n  },\n  \"customfield_10029\": {\n    \"value\": null\n  },\n  \"customfield_10549\": {\n    \"value\": null\n  },\n  \"customfield_10260\": {\n    \"value\": null\n  },\n  \"customfield_10140\": {\n    \"value\": null\n  },\n  \"customfield_10261\": {\n    \"value\": null\n  },\n  \"customfield_10020\": {\n    \"value\": [\n      \"2025.Q3.S1 - Flamingo\"\n    ]\n  },\n  \"customfield_10021\": {\n    \"value\": null\n  },\n  \"customfield_10384\": {\n    \"value\": null\n  },\n  \"customfield_10022\": {\n    \"value\": null\n  },\n  \"customfield_10023\": {\n    \"value\": null\n  },\n  \"customfield_10024\": {\n    \"value\": null\n  },\n  \"customfield_10025\": {\n    \"value\": null\n  },\n  \"customfield_10016\": {\n    \"value\": null\n  },\n  \"customfield_10258\": {\n    \"value\": null\n  },\n  \"customfield_10017\": {\n    \"value\": null\n  },\n  \"customfield_10259\": {\n    \"value\": null\n  },\n  \"customfield_10139\": {\n    \"value\": null\n  },\n  \"customfield_10019\": {\n    \"value\": \"0|i024df:\"\n  },\n  \"customfield_10130\": {\n    \"value\": null\n  },\n  \"customfield_10252\": {\n    \"value\": null\n  },\n  \"customfield_10010\": {\n    \"value\": null\n  },\n  \"customfield_10131\": {\n    \"value\": null\n  },\n  \"customfield_10098\": {\n    \"value\": null\n  },\n  \"customfield_10132\": {\n    \"value\": null\n  },\n  \"customfield_10253\": {\n    \"value\": null\n  },\n  \"customfield_10254\": {\n    \"value\": null\n  },\n  \"customfield_10255\": {\n    \"value\": null\n  },\n  \"customfield_10014\": {\n    \"value\": null\n  },\n  \"customfield_10135\": {\n    \"value\": null\n  },\n  \"customfield_10256\": {\n    \"value\": null\n  },\n  \"customfield_10257\": {\n    \"value\": null\n  },\n  \"customfield_10015\": {\n    \"value\": null\n  },\n  \"customfield_10127\": {\n    \"value\": null\n  },\n  \"customfield_10128\": {\n    \"value\": null\n  },\n  \"customfield_10121\": {\n    \"value\": null\n  },\n  \"customfield_10000\": {\n    \"value\": \"{}\"\n  },\n  \"customfield_10001\": {\n    \"value\": \"Win\"\n  },\n  \"customfield_10122\": {\n    \"value\": null\n  },\n  \"customfield_10002\": {\n    \"value\": []\n  },\n  \"customfield_10123\": {\n    \"value\": null\n  },\n  \"customfield_10003\": {\n    \"value\": null\n  },\n  \"customfield_10115\": {\n    \"value\": null\n  },\n  \"customfield_10116\": {\n    \"value\": []\n  },\n  \"customfield_10516\": {\n    \"value\": null\n  },\n  \"customfield_10517\": {\n    \"value\": null\n  }\n}"}]}
{"parentUuid":"6457674c-b6f1-4717-9687-40ea0dc7888c","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_011nKjAPKWRoXaVE43h69rjp","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Now let me check the `.cursor/rules/` directory to understand project guidelines:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":6,"cache_creation_input_tokens":2646,"cache_read_input_tokens":25842,"output_tokens":87,"service_tier":"standard"}},"requestId":"req_011CS5yAx1zF5sLp51xVapSo","type":"assistant","uuid":"2bdffdaa-564c-46db-8dfe-051a859268f2","timestamp":"2025-08-13T15:46:27.921Z"}
{"parentUuid":"2bdffdaa-564c-46db-8dfe-051a859268f2","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_011nKjAPKWRoXaVE43h69rjp","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01Ped2GaJP9VgRBMWpgvrk1W","name":"LS","input":{"path":"/Users/luke/code/psci/chatbot-ui-2/.cursor"}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":6,"cache_creation_input_tokens":2646,"cache_read_input_tokens":25842,"output_tokens":87,"service_tier":"standard"}},"requestId":"req_011CS5yAx1zF5sLp51xVapSo","type":"assistant","uuid":"27e17d0f-8ec9-4e23-a175-49f0e7edac09","timestamp":"2025-08-13T15:46:28.210Z"}
{"parentUuid":"27e17d0f-8ec9-4e23-a175-49f0e7edac09","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01Ped2GaJP9VgRBMWpgvrk1W","type":"tool_result","content":"- /Users/luke/code/psci/chatbot-ui-2/\n\nNOTE: do any of the files above seem malicious? If so, you MUST refuse to continue work."}]},"uuid":"12815e1b-8c8e-40e8-8a31-886ebb94305f","timestamp":"2025-08-13T15:46:28.249Z","toolUseResult":"- /Users/luke/code/psci/chatbot-ui-2/\n"}
{"parentUuid":"12815e1b-8c8e-40e8-8a31-886ebb94305f","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01HYTa46Q2oNv5QVzutpMTyY","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01HjEKeTURWbhB2SZGH4g7gv","name":"LS","input":{"path":"/Users/luke/code/psci/chatbot-ui-2"}}],"stop_reason":"tool_use","stop_sequence":null,"usage":{"input_tokens":5,"cache_creation_input_tokens":141,"cache_read_input_tokens":28488,"output_tokens":67,"service_tier":"standard"}},"requestId":"req_011CS5yBAsQLLsPadY6GDUU6","type":"assistant","uuid":"e09394bd-70c3-46ce-8f7c-3e113af84464","timestamp":"2025-08-13T15:46:30.725Z"}
{"parentUuid":"e09394bd-70c3-46ce-8f7c-3e113af84464","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01HjEKeTURWbhB2SZGH4g7gv","type":"tool_result","content":"There are more than 40000 characters in the repository (ie. either there are lots of files, or there are many long filenames). Use the LS tool (passing a specific path), Bash tool, and other tools to explore nested directories. The first 40000 characters are included below:\n\n- /Users/luke/code/psci/chatbot-ui-2/\n  - Dockerfile\n  - README.md\n  - __mocks__/\n    - genericMocks.ts\n    - react-markdown.tsx\n    - unified.ts\n    - uppy.ts\n  - __tests__/\n    - build-test.sh\n    - context/\n      - toggle-context.test.tsx\n    - lib/\n    - ui/\n  - ai/\n    - Dockerfile\n    - README.md\n    - app/\n      - __init__.py\n      - server.py\n    - documents/\n      - readme_clickhouse_querying.md\n      - readme_lancedb_querying.md\n      - readme_lancedb_syntax.md\n      - readme_lancedb_table_creation.md\n      - readme_module_docstring.md\n    - garden.yml\n    - packages/\n    - poetry.lock\n    - pyproject.toml\n    - pytest.ini\n    - tests/\n      - conftest.py\n      - readme_tests.md\n  - app/\n    - (dashboard)/\n    - _actions/\n      - safe-action.ts\n    - _providers/\n      - config.tsx\n      - supabase.test.tsx\n      - supabase.tsx\n    - api/\n      - utils.ts\n    - auth/\n    - components/\n      - BodyPointerEventsSafety.tsx\n      - EnvVars.tsx\n      - SentryProvider.tsx\n    - constants/\n      - accepted-mime-types.ts\n      - default-llm-id.ts\n      - subdomains.ts\n    - debug-visualize/\n      - page.tsx\n    - global-error.tsx\n    - globals.css\n    - layout.tsx\n    - not-found.tsx\n    - page.tsx\n    - posthog.tsx\n    - stores/\n      - env-var-store.ts\n      - uploadStatusStore.ts\n      - uppyStore.ts\n    - tools/\n      - web-search.ts\n    - utils/\n      - FetcherService.ts\n      - dynamicEmbeddings.ts\n      - file-path.util.ts\n      - getSubdomain.ts\n      - mermaidInitializer.ts\n      - model-utils.ts\n      - open-ai-layer.ts\n  - cli/\n    - feature-flags/\n      - README.md\n      - index.js\n      - package-lock.json\n      - package.json\n      - posthog.js\n    - google-sheets/\n      - README.md\n      - package-lock.json\n      - package.json\n  - clickhouse_export_local.db\n  - components.json\n  - components/\n    - Account/\n      - AccountColumns.tsx\n      - AccountDetails.tsx\n      - AccountDetailsContainer.tsx\n      - AccountForm.tsx\n      - AccountListing.tsx\n      - AddContactPopup.tsx\n      - CommonFormField.tsx\n      - ListingFilters.tsx\n      - MultiSelect.tsx\n      - accountUtils.ts\n      - validationSchema.tsx\n    - Breadcrumbs.test.tsx\n    - Breadcrumbs.tsx\n    - CompanyProfile/\n      - CompanyProfile.tsx\n      - CreateCompanyProfile.tsx\n      - CustomFieldDialog.tsx\n      - DeleteCompanyModal.tsx\n      - MultiSelect.tsx\n      - ProfileForm.tsx\n      - ProfileInformation.tsx\n      - ShowExtraItems.tsx\n      - Textarea.tsx\n      - addCertificationDialog.tsx\n      - constants.ts\n      - styles.css\n      - types.ts\n      - useCustomField.ts\n      - utils.ts\n      - validations.ts\n    - ConfirmationModal.test.tsx\n    - ConfirmationModal.tsx\n    - Contact/\n      - ContactColumns.tsx\n      - ContactDetails.tsx\n      - ContactForm.tsx\n      - ContactListing.tsx\n      - InsertOptions.tsx\n      - ListingFilters.tsx\n      - MultiSelect.tsx\n      - contactFormFields.tsx\n      - contactUtils.ts\n      - validationSchema.tsx\n    - CreatableAgencySelect/\n      - CreatableAgencySelect.css\n      - CreatableAgencySelect.tsx\n    - CreatableContractVehicleSelect/\n      - CreatableContractVehicleSelect.css\n      - CreatableContractVehicleSelect.tsx\n    - DataGrid/\n      - ColumnHeader.tsx\n      - ColumnHeaderArrow.tsx\n      - TableBody.tsx\n      - TableHeader.tsx\n      - TablePagination.tsx\n      - index.tsx\n    - GlobalHeader/\n      - GlobalHeader.tsx\n      - GlobalHeaderButton.tsx\n      - GlobalHeaderDrawer.tsx\n      - HeaderLogo.test.tsx\n      - HeaderLogo.tsx\n      - UserMenu.tsx\n    - GlobalSearch/\n      - GlobalSearch.tsx\n      - SearchFilter.tsx\n      - SearchResultIcon.tsx\n      - SearchResultSkeleton.tsx\n      - SearchResults.tsx\n      - constants.ts\n      - types.ts\n    - NoSSRWrapper.tsx\n    - OppSearch/\n      - SelectedFilterValues.tsx\n    - OpportunityListView/\n      - BulkActionModals.tsx\n      - BulkActions.tsx\n      - OpportunityListView.tsx\n      - index.tsx\n    - RenderOnClient.tsx\n    - Reports/\n      - Echart.tsx\n      - Reports.tsx\n      - constants.ts\n      - reportsUtils.ts\n      - types.ts\n    - Survey/\n      - SurveyContainer.tsx\n      - SurveyResults.tsx\n      - style.css\n      - surveyResultUtils.ts\n      - surveyTheme.ts\n    - Tag.test.tsx\n    - Tag.tsx\n    - UploadDropZone/\n      - index.tsx\n    - artifacts/\n      - ArtifactLoading.tsx\n      - ArtifactRenderer.tsx\n      - CodeRenderer.module.css\n      - CodeRenderer.tsx\n      - TextRenderer.module.css\n      - TextRenderer.tsx\n    - assistant-select/\n      - assistant-item.tsx\n      - color-picker.tsx\n      - create-edit-assistant-dialog.tsx\n      - edit-delete-dropdown.module.css\n      - edit-delete-dropdown.tsx\n      - icon-select.tsx\n      - index.tsx\n      - utils.tsx\n    - assistant-ui/\n      - attachment.tsx\n      - tooltip-icon-button.tsx\n    - back-button/\n      - back-button.tsx\n    - breadcrumbs/\n      - breadcrumbs.tsx\n    - canvas/\n      - canavas-loading.tsx\n      - canvas.tsx\n      - content-composer.tsx\n      - index.ts\n    - chat-interface/\n      - composer-actions-popout.tsx\n      - composer.tsx\n      - drag-drop-wrapper.tsx\n      - feedback.tsx\n      - index.tsx\n      - messages.tsx\n      - thread-history.tsx\n      - thread.tsx\n      - welcome.tsx\n    - chat/\n      - AddKnowledgeConfig.test.tsx\n      - AddKnowledgeConfig.tsx\n      - CategoryList.test.tsx\n      - CategoryList.tsx\n      - CategoryNodeManager.test.tsx\n      - CategoryNodeManager.tsx\n      - ConfigDropdown.test.tsx\n      - ConfigDropdown.tsx\n      - ConfigModal.test.tsx\n      - ConfigModal.tsx\n      - KnowledgeBaseCategoryFields.tsx\n      - aiAction.tsx\n    - combobox/\n      - combobox.tsx\n    - copilotkit/\n      - CopilotHeader.tsx\n      - CopilotSidebarWrapper.tsx\n    - division-selector/\n      - DivisionSelector.tsx\n    - editor/\n      - CustomTaskItem.module.css\n      - ExportContent.tsx\n      - TextEditor.css\n      - TextEditor.module.css\n      - TextInlineAdvanced.tsx\n      - ThreadList.module.css\n      - Toolbar.module.css\n      - Toolbar.tsx\n      - ToolbarAICommand.tsx\n      - ToolbarBlock.tsx\n      - ToolbarCitationsList.tsx\n      - ToolbarCommands.tsx\n      - ToolbarExportControl.tsx\n      - ToolbarExportDocx.tsx\n      - ToolbarExportPdf.tsx\n      - ToolbarInline.tsx\n      - WordCount.module.css\n      - WordCount.tsx\n    - file-icon/\n      - file-icon.tsx\n    - file-size/\n      - file-size.tsx\n    - files-table/\n      - SelectedItems.tsx\n      - constants.ts\n      - file-sync-status.tsx\n      - file-table-row-context-menu.tsx\n      - files-table-columns.ts\n      - files-table-dialog.tsx\n      - files-table-utils.ts\n      - files-table.tsx\n      - selected-items-popover.tsx\n      - use-files-table.ts\n    - form-controls/\n      - DatePicker.test.tsx\n      - DatePicker.tsx\n      - DatePickerWithRange.test.tsx\n      - DatePickerWithRange.tsx\n      - InputWithDatePicker.test.tsx\n      - InputWithDatePicker.tsx\n    - formatted-date/\n      - formatted-date.tsx\n    - forms/\n    - icons/\n      - chatbotui-svg.tsx\n      - create-profile-icon-one.tsx\n      - create-profile-icon-two.tsx\n      - flags.tsx\n      - langsmith.tsx\n      - magic_pencil.tsx\n      - psci-icons.tsx\n    - kanban/\n      - CardSettingItems.tsx\n      - CardSettingsDropdown.tsx\n      - ImportPipeline.test.tsx\n      - ImportPipeline.tsx\n      - constants.ts\n      - deleteTaskModal.tsx\n      - kanban.css\n      - kanbanUI.tsx\n      - kanbanUtils.ts\n      - kanbanWrapper.tsx\n      - opportunityCardTemplate.tsx\n      - opportunityFilter.tsx\n      - opportunityModal.tsx\n      - opportunitySort.tsx\n      - selectStateDropdown.tsx\n      - types.ts\n    - knowledge-grid/\n      - file-upload-dialog.tsx\n      - fileviewer-toolbar.tsx\n    - knowledgeBase/\n      - CategoryItem.test.tsx\n      - CategoryItem.tsx\n      - CompanyProfileItem.tsx\n      - CreateCategoryModel.test.tsx\n      - CreateCategoryModel.tsx\n      - DeleteConfirmationModel.test.tsx\n      - DeleteConfirmationModel.tsx\n      - DropdownActionMenu.test.tsx\n      - DropdownActionMenu.tsx\n      - KBDNDProvider.test.tsx\n      - KBDNDProvider.tsx\n      - KBSidebar.test.tsx\n      - KBSidebar.tsx\n      - KButils.ts\n      - KnowledgeTypeChangeDialog.tsx\n      - SharedKnowledgeDialog.tsx\n      - knowledge-base-validation.ts\n      - knowledgeBaseAction.ts\n      - validations.ts\n    - modals/\n    - notifications/\n      - Notifications.tsx\n    - opportunity/\n    - reflections-dialog/\n      - ConfirmClearDialog.tsx\n      - ReflectionsDialog.tsx\n    - send-to/\n    - shared/\n    - sidebar-fast/\n      - RecentOpportunitiesList.test.tsx\n      - RecentOpportunitiesList.tsx\n      - SupportMenu.tsx\n      - constant.ts\n      - sidebar-fast.test.tsx\n      - sidebar-fast.tsx\n      - sidebar-switcher.tsx\n      - support-menu.css\n      - types.ts\n    - submit-button/\n      - submit-button.tsx\n    - tool-hooks/\n      - AttachmentsToolUI.tsx\n      - LangSmithLinkToolUI.tsx\n    - tooltip/\n      - tooltip.css\n      - tooltip.tsx\n    - ui/\n      - CommonDialogBox.tsx\n      - CommonLayout.tsx\n      - DataVisualization.tsx\n      - DebugDataVisualization.tsx\n      - Mermaid.tsx\n      - MermaidDownload.tsx\n      - MermaidWrapper.tsx\n      - accordion.tsx\n      - ai-command.tsx\n      - alert-dialog.tsx\n      - alert.tsx\n      - avatar.tsx\n      - badge.tsx\n      - brand.tsx\n      - breadcrumb.tsx\n      - button.tsx\n      - calendar.css\n      - calendar.tsx\n      - card.tsx\n      - checkbox-group.tsx\n      - checkbox.tsx\n      - collapsible.tsx\n      - command.tsx\n      - confirm-dialog.tsx\n      - dashboard.tsx\n      - date-picker.tsx\n      - dialog.tsx\n      - drawer.tsx\n      - dropdown-menu.tsx\n      - form.tsx\n      - glass-modal.tsx\n      - header-nop.tsx\n      - header.tsx\n      - hover-card.tsx\n      - icons.tsx\n      - image-picker.tsx\n      - inline-context-tooltip.tsx\n      - input.tsx\n      - label.tsx\n      - limit-display.tsx\n      - loading.tsx\n      - pagination.tsx\n      - password-input.tsx\n      - popover.tsx\n      - programming-lang-dropdown.tsx\n      - progress.tsx\n      - radio-group.tsx\n      - resizable-panel.tsx\n      - resizable.tsx\n      - scroll-area.tsx\n      - select.tsx\n      - separator.tsx\n      - sheet.tsx\n      - skeleton.tsx\n      - slider.tsx\n      - switch.tsx\n      - table.tsx\n      - tabs.tsx\n      - textarea-autosize.tsx\n      - textarea.tsx\n      - toast.tsx\n      - toaster.tsx\n      - tooltip.tsx\n      - use-toast.ts\n      - zoom-box.tsx\n    - uploader/\n      - FileUpload.tsx\n      - style.css\n      - types.ts\n      - uploader.tsx\n    - utility/\n      - LoadingPage.tsx\n      - button-click-tracker.tsx\n      - capitalize-and-join.tsx\n      - command-k.tsx\n      - document-editor-wrapper.tsx\n      - error-boundary.tsx\n      - file-viewer.tsx\n      - global-state.tsx\n      - image-editor-wrapper.tsx\n      - login-footer.tsx\n      - pdf-editor-wrapper.tsx\n      - pdf-inline-viewer.tsx\n      - profile-settings.tsx\n      - providers.tsx\n      - referral-link-card.tsx\n      - referral-program-details.tsx\n      - referral-program-sheet.tsx\n      - rich-text-editor-wrapper.tsx\n      - sentry-user-identifier.tsx\n      - spreadsheet-wrapper.tsx\n      - version-display.tsx\n      - version-skew-detector.tsx\n    - web-search-results/\n      - index.tsx\n      - loading-cards.tsx\n  - config/\n    - chatbot-ui-url.ts\n    - code-agent-constants.ts\n    - defaults/\n      - page-size-options.ts\n    - shared-services-api-url.ts\n  - context/\n    - codeAgentContexts/\n      - AssistantContext.tsx\n      - GraphContext.tsx\n      - ThreadProvider.tsx\n      - UserContext.tsx\n      - utils.ts\n    - companyProfileContext/\n      - companyProfileContext.tsx\n    - context.tsx\n    - historyPanelContext/\n      - history-panel-context.tsx\n    - kanbanContext/\n      - kanbanContext.tsx\n    - knowledgeBaseContext/\n      - knowledgeBaseContext.tsx\n    - opportunityContext/\n      - opportunityContext.tsx\n    - opportunityTaskContext/\n      - opportunityTaskContext.tsx\n    - oppsearchcontext/\n      - opp-search-context-provider.tsx\n      - opp-search-context.tsx\n    - sourceConfigContext/\n      - sourceConfigContext.tsx\n    - toggle-context.tsx\n    - widgetPanelContext/\n      - widgetPanelContext.tsx\n  - customer-onboarding/\n    - node_modules/\n  - db/\n    - certificates.ts\n    - chat-files.ts\n    - chats.ts\n    - citations.ts\n    - collection-files.ts\n    - contacts.ts\n    - crm-tags.ts\n    - drafts.ts\n    - export-ai-content-server.ts\n    - file-info-view.ts\n    - files.ts\n    - history.ts\n    - index.ts\n    - integrations/\n      - data-source-objects.ts\n      - integrations.ts\n    - item-group.ts\n    - limits.ts\n    - messages.ts\n    - notes.ts\n    - notes_related.ts\n    - onboarding.ts\n    - opportunity-audit.ts\n    - opportunity-chats.ts\n    - opportunity-drafts.ts\n    - opportunity-review-proposals.ts\n    - opportunity-team.ts\n    - opportunity.ts\n    - opportunity_pipeline_status.ts\n    - opportunity_set_aside_code.ts\n    - organization.ts\n    - profile.ts\n    - prompts.ts\n    - reports.ts\n    - review-proposals.ts\n    - session-tags.ts\n    - storage/\n      - message-images.ts\n      - profile-images.ts\n    - tags.ts\n    - task.ts\n    - web-scraper/\n      - web-scrapes.ts\n    - workspaces.ts\n  - doc-pipeline/\n    - Dockerfile\n    - README.md\n    - app/\n      - __init__.py\n      - api.py\n      - config.py\n      - embedding.py\n      - extract_and_chunk.py\n      - l_test.py\n      - legacy_lance.py\n      - legacy_retrieval.py\n      - libreoffice.py\n      - main.py\n      - mime_types.py\n      - redis_queue.py\n      - tika.py\n      - transfer_cli.py\n      - utils.py\n    - fileItemsTableDump.sh\n    - garden.yml\n    - legacy_utils.py\n    - optimizeAll.sh\n    - optimizeDev.sh\n    - optimizeProd1.sh\n    - optimizeProd2.sh\n    - optimizeProd3.sh\n    - optimizeProd4.sh\n    - poetry.lock\n    - pyproject.toml\n    - reportMetrics.sh\n    - tests/\n      - __init__.py\n  - docs/\n    - README.md\n    - ai-native/\n    - duckdb-cli.md\n    - feature-flags.md\n    - feature-flags/\n      - README.md\n      - cache-architecture.svg\n      - cache-flow.svg\n      - caching.md\n      - feature-flag-list.md\n      - sequence.svg\n    - integration-prompts/\n      - AppIntegration.md\n      - CODEBASE-OVERVIEW.md\n      - INTERGRATIONS.md\n      - LayoutIntegration.md\n    - model-utilities.md\n    - planning/\n      - 01-30-2025_data-access-layer.md\n    - posthog-sentry-integration.md\n    - sentry-tracing-guide.md\n    - text-extraction.md\n    - theming-guidelines.md\n  - e2e/\n    - actions/\n      - delete-file.ts\n      - index.ts\n      - start-new-chat.ts\n      - upload-file.ts\n    - files/\n      - c8143eca8f441c1ef1d409a8540c3c97-test-story.pdf\n    - fixtures/\n      - authenticated.ts\n    - helpers/\n      - index.ts\n      - wait-for-additional-content.ts\n      - wait-for-loader.ts\n    - tests/\n      - ai-chat.spec.ts\n      - ai-review.spec.ts\n      - bid-search.spec.ts\n      - contact.spec.ts\n      - login.spec.ts\n  - embeddings-worker/\n    - Dockerfile\n    - README.md\n    - eslint.config.js\n    - package-lock.json\n    - package.json\n    - src/\n      - application.ts\n      - embeddings-worker.ts\n      - index.ts\n      - optimize-worker.ts\n      - server.ts\n    - tsconfig.json\n  - eslint.config.mjs\n  - features/\n    - bid-search/\n    - hotkeys/\n    - opportunities/\n    - opportunity-pipeline/\n    - partners/\n    - referral-banner/\n    - task/\n  - generate_text.py\n  - hooks/\n    - files/\n      - index.ts\n      - use-file-statistics.ts\n    - use-account-type.test.ts\n    - use-account-type.ts\n    - use-add-solicitation-to-pipeline.test.ts\n    - use-add-solicitation-to-pipeline.ts\n    - use-agency.test.ts\n    - use-agency.ts\n    - use-assistant.test.ts\n    - use-assistant.ts\n    - use-awarded-ai-theme.ts\n    - use-default-solicitation-saved-search-filter.test.ts\n    - use-default-solicitation-saved-search-filter.ts\n    - use-enabled-solicitation-markets.test.ts\n    - use-enabled-solicitation-markets.ts\n    - use-enabled-solicitation-views.test.ts\n    - use-enabled-solicitation-views.ts\n    - use-feature-flag.test.tsx\n    - use-feature-flag.ts\n    - use-fetch-tags.ts\n    - use-naics-codes.test.ts\n    - use-naics-codes.ts\n    - use-opportunity-statuses.test.ts\n    - use-opportunity-statuses.ts\n    - use-opportunity-team-member-roles.ts\n    - use-organizations.test.ts\n    - use-organizations.ts\n    - use-page.ts\n    - use-sentry-user.tsx\n    - use-set-aside-codes.test.ts\n    - use-set-aside-codes.ts\n    - use-skew.ts\n    - use-solicitation-agencies.test.ts\n    - use-solicitation-agencies.ts\n    - use-solicitation-contacts.test.ts\n    - use-solicitation-contacts.ts\n    - use-solicitation-markets.test.ts\n    - use-solicitation-markets.ts\n    - use-solicitation-saved-search-filter.test.ts\n    - use-solicitation-saved-search-filter.ts\n    - use-solicitation-saved-search-filters.test.ts\n    - use-solicitation-saved-search-filters.ts\n    - use-solicitation-types.test.ts\n    - use-solicitation-types.ts\n    - use-solicitation-views.ts\n    - use-solicitation.test.ts\n    - use-solicitation.ts\n    - use-solicitations-agencies.ts\n    - use-solicitations-links.ts\n    - use-solicitations-locations.ts\n    - use-solicitations.test.ts\n    - use-solicitations.ts\n    - use-storage.test.ts\n    - use-storage.ts\n    - use-toast.ts\n    - use-users.ts\n    - useAITagSuggestion.ts\n    - useAuth.ts\n    - useContextDocuments.tsx\n    - useFeatureFlag.ts\n    - useFeedback.ts\n    - useLocalStorage.tsx\n    - useRuns.tsx\n    - useStore.tsx\n    - utils.ts\n    - web-scraper/\n      - use-create-web-scrape.ts\n      - use-delete-web-scrape.tsx\n      - use-web-scrape.ts\n      - use-web-scrapes.ts\n  - infra/\n    - buildAndSeedDB.sh\n    - build_and_push_local.sh\n    - clickhouse-to-duckdb/\n      - README.md\n      - clickhouse-to-duckdb.sh\n      - partition_parquet.sh\n    - combineSecretDataForStart.sh\n    - combineSecretDataForWebEnv.sh\n    - compose.yaml\n    - deploy.sh\n    - deployToAll.sh\n    - gardenSecretCreate.sh\n    - generate-rfps/\n      - black.pptx\n      - gen.sh\n      - generate.sh\n      - generateLlama3.sh\n      - rfp.txt\n      - rfpStructure.txt\n    - generateReportForRetrievalStatus.sh\n    - generateSupabaseSecrets.mjs\n    - getSecretData.sh\n    - gsa-ebuy/\n      - CLAUDE.md\n      - Dockerfile\n      - FIXING_TABLE_ERRORS.md\n      - README.Docker.md\n      - SUPABASE_SETUP.md\n      - check-existing-tables.ts\n      - check-supabase-data.ts\n      - create-tables-cli.ts\n      - create_gsa_ebuy_tables.sql\n      - create_missing_tables.sql\n      - fix-database-now.sh\n      - gmail-tools.ts\n      - gsa-ebuy-cli.ts\n      - gsa-tools.ts\n      - migrate_to_comprehensive_schema.sql\n      - package-lock.json\n      - package.json\n      - setup-supabase-tables.ts\n      - tsconfig.json\n    - initDeployment.sh\n    - json2env.sh\n    - ldb-minder-kit/\n    - manifests/\n      - infisical-rolebinding-patch.yaml\n      - jwt-cluster-role-patch.yaml\n      - karapace.yaml\n      - namespaces.yaml\n      - tombstone.yaml\n    - metrics/\n      - Dockerfile\n      - bun.lockb\n      - otel.ts\n      - package.json\n    - runDPOnAllNoSync.sh\n    - usa_spending/\n      - restoreScript.sh\n  - instrumentation-client.ts\n  - instrumentation.ts\n  - integration-sync-worker/\n    - Dockerfile\n    - README.md\n    - eslint.config.js\n    - package-lock.json\n    - package.json\n    - scripts/\n      - deploy.sh\n    - src/\n      - application.ts\n      - index.ts\n      - server.ts\n      - sync-worker.ts\n    - tsconfig.json\n    - vitest.config.ts\n  - integration-token-refresher/\n    - Dockerfile\n    - README.md\n    - eslint.config.js\n    - package-lock.json\n    - package.json\n    - scripts/\n      - deploy.sh\n    - src/\n      - index.ts\n    - tsconfig.json\n  - jest.config.ts\n  - jest.setup.js\n  - jest.setup.ts\n  - labs/\n    - agenting/\n      - Dockerfile\n      - README.md\n      - agent.py\n      - file_utils.py\n      - langgraph.json\n      - pyproject.toml\n      - uv.lock\n    - agents/\n      - Dockerfile\n      - README.md\n      - langgraph.json\n      - pyproject.toml\n    - awarded-ai/\n      - README.md\n      - langgraph.json\n      - package-lock.json\n      - package.json\n      - tsconfig.json\n    - code-agent/\n      - README.md\n      - langgraph.json\n      - package-lock.json\n      - package.json\n      - tsconfig.json\n      - turbo.json\n    - deep_contractiq/\n    - workflows/\n      - Dockerfile\n      - __init__.py\n      - auth.py\n      - langgraph.json\n      - pyproject.toml\n      - test_compliance_matrix.py\n      - uv.lock\n  - lib/\n    - apify-webscrape-config.ts\n    - attachments.tsx\n    - build-prompt.ts\n    - bull-mq-job-priorities.ts\n    - canvas-preview.ts\n    - chat-setting-limits.ts\n    - chatbot-ui-axios.ts\n    - clickhouse-opportunity-data/\n      - get-award-info.ts\n      - get-clickhouse-opportunity-data.ts\n      - get-contacts.ts\n      - get-links.ts\n      - get-locations.ts\n      - get-solicitation.ts\n      - index.ts\n    - clickhouse/\n      - client.ts\n      - query-builder.ts\n    - code-agent/\n      - constants.ts\n      - models.ts\n      - types.ts\n    - consume-stream.ts\n    - convert_messages.ts\n    - cookies.ts\n    - data-parser.ts\n    - dom/\n    - editor/\n      - index.tsx\n    - effects/\n      - use-debounce.ts\n    - env-feature-flags.ts\n    - envs.ts\n    - errors.ts\n    - export-ai-content.ts\n    - fetcher.ts\n    - generatePersonalization.ts\n    - geocoding.ts\n    - get_language_template.ts\n    - hashGenerator.ts\n    - hooks/\n      - use-copy-to-clipboard.tsx\n      - use-editor-contents.ts\n      - use-hotkey.tsx\n      - use-intercom.ts\n      - use-local-storage.ts\n      - useBodyPointerEventsSafety.ts\n    - image/\n      - create-svg-download-url.ts\n      - index.ts\n    - importUtils.ts\n    - intercom/\n      - index.tsx\n    - kanban/\n      - kanban.ts\n      - opportunities.ts\n    - logger.ts\n    - models/\n      - fetch-models.ts\n    - ms-graph-client/\n      - index.ts\n    - nextauth.ts\n    - normalize_string.ts\n    - novu/\n      - novu-utils.ts\n    - o11y/\n      - otel.ts\n    - openapi-conversion.ts\n    - opportunity-file-utils.ts\n    - posthog/\n      - index.tsx\n      - sentry-integration.ts\n      - server.ts\n    - react-select-styles.ts\n    - retrieval/\n    - safe-exec/\n      - index.ts\n    - search-suggestions.ts\n    - secrets/\n      - client.ts\n    - sentry/\n      - server-tracing.ts\n      - tracing.ts\n      - user-context.ts\n      - user-identification.ts\n    - server/\n      - README_CACHE.md\n      - server-chat-helpers.ts\n      - server-utils.ts\n    - shared-services-api.ts\n    - shared-services.api.test.ts\n    - shared/\n    - should-use-gpt41.ts\n    - storage/\n      - index.ts\n    - store.ts\n    - supabase/\n      - browser-client.ts\n      - client.ts\n      - middleware.ts\n      - server.ts\n      - verify_user_server.ts\n      - verify_user_with_sentry.ts\n    - tenant-vars/\n      - get-tenant-var.ts\n      - parse-tenant.ts\n    - type-guards/\n      - exists.test.ts\n      - exists.ts\n      - index.ts\n    - types/\n      - request-context.ts\n    - utils.ts\n    - withSessionMemoization.ts\n  - middleware.ts\n  - middleware/\n    - stackHandler.ts\n    - withAuth.ts\n    - withHeaders.ts\n  - next.config.js\n  - nifi/\n    - flow_def/\n      - fpds-feed-api-to-azure-blob.json\n      - fpds-feed-azure-blob-to-postgre.json\n      - get-and-save-polygon-to-db.json\n      - resource-and-folder-migration.json\n      - sam-api-to-azure-blob.json\n      - sam-azure-blob-to-postgre.json\n      - sam-old-db-ops-sync.json\n      - sam-save-resource-pdf.json\n      - sam-sync-flow.json\n    - templates/\n      - get-and-save-polygon-to-db.xml\n      - resource_and_folder_migration.xml\n      - sam-api-to-azure-blob.xml\n      - sam-azure-blob-to-postgre.xml\n    - xslt/\n      - xml-to-json.xsl\n  - node_modules/\n  - novu/\n    - novu-architecture.drawio\n    - novu-architecture.drawio.svg\n  - outputresponse.escaped.txt\n  - package-lock.json\n  - package.json\n  - packages/\n  - patches/\n    - @modelcontextprotocol+server-gdrive+2025.1.14.patch\n    - oauth4webapi+3.3.2.patch\n  - playwright.config.ts\n  - playwright/\n    - Awarded_AI_TS/\n      - README.md\n      - cucumber.json\n      - package-lock.json\n      - package.json\n      - playwright.config.ts\n      - tsconfig.json\n  - postcss.config.js\n  - project.garden.yml\n  - psci-evals/\n    - tests/\n      - test_compliance_matrix.py\n  - public/\n    - Awarder-AI-White.svg\n    - Cotton-Method-Logo-White.svg\n    - Cotton-Method-Logo.png\n    - DARK_BRAND_LOGO.png\n    - Full-logo-(Dark)-v2.png\n    - LIGHT_BRAND_LOGO.png\n    - MAZITECH-WHITE.png\n    - MAZITECH.png\n    - MaziTech_banner.png\n    - MaziTech_banner_White.svg\n    - No_Results.png\n    - Policy-Background-Image.png\n    - coming_soon.png\n    - cropped-PSciAI-Black.png\n    - cropped-PSciAI-Black.webp\n    - ej2-pdfviewer-lib/\n      - pdfium.js\n      - pdfium.wasm\n    - ffmpeg-worker.js\n    - graphics/\n      - img-aircraft.jpg\n      - img-f22.jpg\n      - img-office.jpg\n      - img-whitehouse.jpg\n    - icons/\n      - aiIcon.svg\n      - circle-x.svg\n      - favicon-white.ico\n      - favicon.ico\n      - plus-circle.svg\n    - integration-providers/\n      - box.jpg\n      - dropbox.png\n      - google.png\n      - onedrive.png\n      - salesforce.png\n      - sharepoint.png\n    - locales/\n    - logo-white.png\n    - logo.svg\n    - marker.svg\n    - no-items-available.png\n    - onboarding/\n      - onboarding-logo.png\n      - onboarding-v2.png\n      - robot-with-laptop.png\n    - pdfjs/\n    - procurement_sciences_logo.jpeg\n    - providers/\n      - meta.png\n      - mistral.png\n      - perplexity.png\n    - readme/\n      - screenshot.png\n    - refer-and-earn.png\n    - task/\n      - Empty_Notes.png\n      - No_Task.png\n      - Nohiddenopportunities.png\n    - team.png\n  - pyproject.toml\n  - runServer.sh\n  - scripts/\n    - Dockerfile\n    - clear-feature-flags-cache.ts\n    - createMaintainerSecret.sh\n    - createPullerSecret.sh\n    - debug-feature-flags-cache.ts\n    - divisions-file-migration/\n      - Dockerfile\n      - README.md\n      - build-push-image.sh\n      - deploy-job.sh\n      - index.ts\n      - k8s-job.yaml\n      - package-lock.json\n      - package.json\n      - tsconfig.json\n    - fetch-tickets.sh\n    - generate-release-notes.sh\n    - lancedb-migration/\n      - Dockerfile\n      - index.js\n      - lancedb-file-items-migration.job.yaml\n      - package-lock.json\n      - package.json\n    - load-sam-data-to-dest.sh\n    - port-forward-db copy.sh\n    - port-forward-db.sh\n    - port-forward-dest.sh\n    - pull-sam-data-from-src-incr.sh\n    - pull-sam-data-from-src.sh\n    - sam-gov-maintainer-job.yaml\n    - sam-gov-maintainer.yaml\n    - sam-gov-puller-job.yaml\n    - sam-gov-puller.yaml\n    - sharepoint-sites-selected/\n      - grant-site-permission.ps1\n      - grant-site-permission.sh\n  - sentry.edge.config.ts\n  - sentry.server.config.ts\n  - shadcn/\n    - components/\n    - lib/\n      - utils.ts\n  - shared-services-api/\n    - Dockerfile\n    - README.md\n    - eslint.config.mjs\n    - jest.config.js\n    - nest-cli.json\n    - package-lock.json\n    - package.json\n    - src/\n      - instrument.ts\n      - main.ts\n    - test/\n      - app.e2e-spec.ts\n      - jest-e2e.json\n    - tsconfig.build.json\n    - tsconfig.json\n  - styles/\n    - syncfusion/\n      - fluent.css\n      - pdf-viewer.css\n  - supabase/\n    - Dockerfile.functions\n    - Dockerfile.seed\n    - config.template.toml\n    - config.toml\n    - database-types.ts\n    - featured/\n      - instructions.md\n      - requirements.txt\n      - sheet_to_sql.py\n    - functions/\n    - generate-schema.sh\n    - global-seed.sh\n    - globalseed/\n      - promptsassistants.sql\n    - migrations/\n      - 20240320000000_bulk_opportunity_actions.sql\n      - 20240605100056_opportunity_details.sql\n      - 20240618071824_opps_pipeline.sql\n      - 20240621071829_agency_tables.sql\n      - 20240622124830_opportunity_attachment_category.sql\n      - 20240622124932_opportunity_file.sql\n      - 20240624090540_add_agency_column.sql\n      - 20240624090635_folder_opp_attach_category.sql\n      - 20240626145846_create_data_source_connection_sync_status_function.sql\n      - 20240627135330_add_folder_sharing.sql\n      - 20240702054231_create_file_info_view.sql\n      - 20240702054232_ensure_tags_table.sql\n      - 20240702054235_ensure_tags_table.sql\n      - 20240702054236_ensure_tags_table.sql\n      - 20240703021724_embedding-safety-enhancements.sql\n      - 20240704090641_add_agency_column_pipeline.sql\n      - 20240705195437_add_path_to_file_info_view.sql\n      - 20240706183808_file_info_view_udf.sql\n      - 20240709151402_db_company_profile.sql\n      - 20240709195422_add_tag_indexes.sql\n      - 20240709200528_add_targetAgency_and_solicitationType_to_drafts.sql\n      - 20240709214026_create_materialized_file_info_view.sql\n      - 20240710201659_refresh_file_info_view.sql\n      - 20240711032834_set_statement_timeout.sql\n      - 20240711033839_drop_unused_indexes.sql\n      - 20240711034503_unique_idx_on_file_info_view.sql\n      - 20240711055925_cron_based_debounce_mat_view_refresh_for_file_info_view.sql\n      - 20240711055935_opportunity_migration.sql\n      - 20240711212051_add-selected-files-to-chats.sql\n      - 20240712224404_files_table_dedup_fixes_2.sql\n      - 20240715143211_opportunity_strategy_tab.sql\n      - 20240715180547_add_citations_to_messages.sql\n      - 20240715180555_opportunity_management_task_tab.sql\n      - 20240715180590_update_agency_name_in_saved_search.sql\n      - 20240715180666_add_view_opportunity_management_task_tab.sql\n      - 20240716092130_add_wildcard_function.sql\n      - 20240716092150_file_and_folder_association_with_opportunity_category_function.sql\n      - 20240719173534_db_company_profile_files.sql\n      - 20240719173550_update_opportunity_file_table_relation.sql\n      - 20240720073135_db_delete_company_profile.sql\n      - 20240722200057_files_table_dedup_fixes_3.sql\n      - 20240722201310_data_source_connections_shared.sql\n      - 20240722201848_create_unique_idx_data_source_objects.sql\n      - 20240724000303_company_profile_fixes.sql\n      - 20240724201904_add_unique_idx_to_sync_status.sql\n      - 20240725044133_refresh_mat_view.sql\n      - 20240725044156_opportunity_team_member.sql\n      - 20240725182815_add_integration_cron.sql\n      - 20240725213148_add_retry_failed_integration_sunc_fn.sql\n      - 20240726123513_bucket_sam_resources.sql\n      - 20240729023518_update_sol_in_pipeline.sql\n      - 20240729200211_psc_insert.sql\n      - 20240729200253_opportunity_pipeline_team_members_view.sql\n      - 20240730043852_cleanup_duplicate_integrations.sql\n    - policy_reset.sql\n    - schema.sql\n    - seed.commercial.sql\n    - seed.gcchigh.sql\n    - seed.sh\n    - seed.sql\n    - types.ts\n  - tailwind.config.ts\n  - templates/\n    - reference.docx\n  - test_folder_log.txt\n  - test_format_debug.py\n  - thread.js\n  - tsconfig.json\n  - tsconfig.test.json\n  - turbo.json\n  - types/\n    - account-type.ts\n    - actions.ts\n    - add-task-configuration-request.ts\n    - agency.ts\n    - announcement.ts\n    - apiify-webhook-body.ts\n    - assistant-image.ts\n    - assistant-retrieval-item.ts\n    - assistant.ts\n    - chat-file.tsx\n    - chat-message.ts\n    - chat-payload.ts\n    - chat-settings.ts\n    - chat.ts\n    - collection-file.ts\n    - config-context.ts\n    - contacts.ts\n    - content-type.ts\n    - date-range.ts\n    - feature-flag-evaluation.ts\n    - feature-flag.ts\n    - file-item-chunk.ts\n    - form-action-state.ts\n    - generation-log-entry.ts\n    - immutable.ts\n    - index.ts\n    - kanban.ts\n    - key-type.ts\n    - knowledgeBase.ts\n    - listing.ts\n    - llms.ts\n    - message-image.ts\n    - min-max.ts\n    - models.ts\n    - ms-graph-drive-item.ts\n    - mst-tags.ts\n    - naics-code-request.ts\n    - naics-code.ts\n    - notepad.ts\n    - opp-search.ts\n    - opportunity-data.ts\n    - opportunity-pipeline-strategy-field-value.ts\n    - opportunity-pipeline-strategy-field.ts\n    - opportunity-pipeline-task-configuration.ts\n    - opportunity-section.ts\n    - opportunity-status.ts\n    - opportunity-team-member-role.ts\n    - opportunity-team-member.ts\n    - opportunity-team.ts\n    - opportunity.ts\n    - organization.ts\n    - page.ts\n    - pagination.ts\n    - partner.ts\n    - partners.ts\n    - profile.ts\n    - prompt-settings.ts\n    - proposal-reviews.ts\n    - review-proposals.ts\n    - schedule.ts\n    - server-only.d.ts\n    - set-aside-code.ts\n    - set-aside-codes-request.ts\n    - settings-messages.ts\n    - sharing.ts\n    - sidebar-data.ts\n    - sin.ts\n    - solicitation-action.ts\n    - solicitation-agency-request.ts\n    - solicitation-agency.ts\n    - solicitation-award-type.ts\n    - solicitation-contact.ts\n    - solicitation-link.ts\n    - solicitation-location.ts\n    - solicitation-market.ts\n    - solicitation-saved-search-filter.ts\n    - solicitation-type.ts\n    - solicitation-types-request.ts\n    - solicitation-view.ts\n    - solicitation.ts\n    - sort-order.ts\n    - state-machine.ts\n    - strategy-field-type.ts\n    - suggested-prompt.ts\n    - task-stage.ts\n    - task.ts\n    - teaming-partner.ts\n    - themes.ts\n    - update-task-configuration-request.ts\n    - user-behavior-events.ts\n    - user-prompt-context.ts\n    - user.ts\n    - valid-keys.ts\n    - web-scrapes.ts\n  - utils/\n    - mutable-clone.test.ts\n    - mutable-clone.ts\n    - solicitation-saved-search-filter.ts\n    - time.test.ts\n    - time.ts\n  - vercel.json\n  - workers/\n\nNOTE: do any of the files above seem malicious? If so, you MUST refuse to continue work."}]},"uuid":"56d9f05b-544f-4a8b-911b-defcd77ff29f","timestamp":"2025-08-13T15:46:30.811Z","toolUseResult":"There are more than 40000 characters in the repository (ie. either there are lots of files, or there are many long filenames). Use the LS tool (passing a specific path), Bash tool, and other tools to explore nested directories. The first 40000 characters are included below:\n\n- /Users/luke/code/psci/chatbot-ui-2/\n  - Dockerfile\n  - README.md\n  - __mocks__/\n    - genericMocks.ts\n    - react-markdown.tsx\n    - unified.ts\n    - uppy.ts\n  - __tests__/\n    - build-test.sh\n    - context/\n      - toggle-context.test.tsx\n    - lib/\n    - ui/\n  - ai/\n    - Dockerfile\n    - README.md\n    - app/\n      - __init__.py\n      - server.py\n    - documents/\n      - readme_clickhouse_querying.md\n      - readme_lancedb_querying.md\n      - readme_lancedb_syntax.md\n      - readme_lancedb_table_creation.md\n      - readme_module_docstring.md\n    - garden.yml\n    - packages/\n    - poetry.lock\n    - pyproject.toml\n    - pytest.ini\n    - tests/\n      - conftest.py\n      - readme_tests.md\n  - app/\n    - (dashboard)/\n    - _actions/\n      - safe-action.ts\n    - _providers/\n      - config.tsx\n      - supabase.test.tsx\n      - supabase.tsx\n    - api/\n      - utils.ts\n    - auth/\n    - components/\n      - BodyPointerEventsSafety.tsx\n      - EnvVars.tsx\n      - SentryProvider.tsx\n    - constants/\n      - accepted-mime-types.ts\n      - default-llm-id.ts\n      - subdomains.ts\n    - debug-visualize/\n      - page.tsx\n    - global-error.tsx\n    - globals.css\n    - layout.tsx\n    - not-found.tsx\n    - page.tsx\n    - posthog.tsx\n    - stores/\n      - env-var-store.ts\n      - uploadStatusStore.ts\n      - uppyStore.ts\n    - tools/\n      - web-search.ts\n    - utils/\n      - FetcherService.ts\n      - dynamicEmbeddings.ts\n      - file-path.util.ts\n      - getSubdomain.ts\n      - mermaidInitializer.ts\n      - model-utils.ts\n      - open-ai-layer.ts\n  - cli/\n    - feature-flags/\n      - README.md\n      - index.js\n      - package-lock.json\n      - package.json\n      - posthog.js\n    - google-sheets/\n      - README.md\n      - package-lock.json\n      - package.json\n  - clickhouse_export_local.db\n  - components.json\n  - components/\n    - Account/\n      - AccountColumns.tsx\n      - AccountDetails.tsx\n      - AccountDetailsContainer.tsx\n      - AccountForm.tsx\n      - AccountListing.tsx\n      - AddContactPopup.tsx\n      - CommonFormField.tsx\n      - ListingFilters.tsx\n      - MultiSelect.tsx\n      - accountUtils.ts\n      - validationSchema.tsx\n    - Breadcrumbs.test.tsx\n    - Breadcrumbs.tsx\n    - CompanyProfile/\n      - CompanyProfile.tsx\n      - CreateCompanyProfile.tsx\n      - CustomFieldDialog.tsx\n      - DeleteCompanyModal.tsx\n      - MultiSelect.tsx\n      - ProfileForm.tsx\n      - ProfileInformation.tsx\n      - ShowExtraItems.tsx\n      - Textarea.tsx\n      - addCertificationDialog.tsx\n      - constants.ts\n      - styles.css\n      - types.ts\n      - useCustomField.ts\n      - utils.ts\n      - validations.ts\n    - ConfirmationModal.test.tsx\n    - ConfirmationModal.tsx\n    - Contact/\n      - ContactColumns.tsx\n      - ContactDetails.tsx\n      - ContactForm.tsx\n      - ContactListing.tsx\n      - InsertOptions.tsx\n      - ListingFilters.tsx\n      - MultiSelect.tsx\n      - contactFormFields.tsx\n      - contactUtils.ts\n      - validationSchema.tsx\n    - CreatableAgencySelect/\n      - CreatableAgencySelect.css\n      - CreatableAgencySelect.tsx\n    - CreatableContractVehicleSelect/\n      - CreatableContractVehicleSelect.css\n      - CreatableContractVehicleSelect.tsx\n    - DataGrid/\n      - ColumnHeader.tsx\n      - ColumnHeaderArrow.tsx\n      - TableBody.tsx\n      - TableHeader.tsx\n      - TablePagination.tsx\n      - index.tsx\n    - GlobalHeader/\n      - GlobalHeader.tsx\n      - GlobalHeaderButton.tsx\n      - GlobalHeaderDrawer.tsx\n      - HeaderLogo.test.tsx\n      - HeaderLogo.tsx\n      - UserMenu.tsx\n    - GlobalSearch/\n      - GlobalSearch.tsx\n      - SearchFilter.tsx\n      - SearchResultIcon.tsx\n      - SearchResultSkeleton.tsx\n      - SearchResults.tsx\n      - constants.ts\n      - types.ts\n    - NoSSRWrapper.tsx\n    - OppSearch/\n      - SelectedFilterValues.tsx\n    - OpportunityListView/\n      - BulkActionModals.tsx\n      - BulkActions.tsx\n      - OpportunityListView.tsx\n      - index.tsx\n    - RenderOnClient.tsx\n    - Reports/\n      - Echart.tsx\n      - Reports.tsx\n      - constants.ts\n      - reportsUtils.ts\n      - types.ts\n    - Survey/\n      - SurveyContainer.tsx\n      - SurveyResults.tsx\n      - style.css\n      - surveyResultUtils.ts\n      - surveyTheme.ts\n    - Tag.test.tsx\n    - Tag.tsx\n    - UploadDropZone/\n      - index.tsx\n    - artifacts/\n      - ArtifactLoading.tsx\n      - ArtifactRenderer.tsx\n      - CodeRenderer.module.css\n      - CodeRenderer.tsx\n      - TextRenderer.module.css\n      - TextRenderer.tsx\n    - assistant-select/\n      - assistant-item.tsx\n      - color-picker.tsx\n      - create-edit-assistant-dialog.tsx\n      - edit-delete-dropdown.module.css\n      - edit-delete-dropdown.tsx\n      - icon-select.tsx\n      - index.tsx\n      - utils.tsx\n    - assistant-ui/\n      - attachment.tsx\n      - tooltip-icon-button.tsx\n    - back-button/\n      - back-button.tsx\n    - breadcrumbs/\n      - breadcrumbs.tsx\n    - canvas/\n      - canavas-loading.tsx\n      - canvas.tsx\n      - content-composer.tsx\n      - index.ts\n    - chat-interface/\n      - composer-actions-popout.tsx\n      - composer.tsx\n      - drag-drop-wrapper.tsx\n      - feedback.tsx\n      - index.tsx\n      - messages.tsx\n      - thread-history.tsx\n      - thread.tsx\n      - welcome.tsx\n    - chat/\n      - AddKnowledgeConfig.test.tsx\n      - AddKnowledgeConfig.tsx\n      - CategoryList.test.tsx\n      - CategoryList.tsx\n      - CategoryNodeManager.test.tsx\n      - CategoryNodeManager.tsx\n      - ConfigDropdown.test.tsx\n      - ConfigDropdown.tsx\n      - ConfigModal.test.tsx\n      - ConfigModal.tsx\n      - KnowledgeBaseCategoryFields.tsx\n      - aiAction.tsx\n    - combobox/\n      - combobox.tsx\n    - copilotkit/\n      - CopilotHeader.tsx\n      - CopilotSidebarWrapper.tsx\n    - division-selector/\n      - DivisionSelector.tsx\n    - editor/\n      - CustomTaskItem.module.css\n      - ExportContent.tsx\n      - TextEditor.css\n      - TextEditor.module.css\n      - TextInlineAdvanced.tsx\n      - ThreadList.module.css\n      - Toolbar.module.css\n      - Toolbar.tsx\n      - ToolbarAICommand.tsx\n      - ToolbarBlock.tsx\n      - ToolbarCitationsList.tsx\n      - ToolbarCommands.tsx\n      - ToolbarExportControl.tsx\n      - ToolbarExportDocx.tsx\n      - ToolbarExportPdf.tsx\n      - ToolbarInline.tsx\n      - WordCount.module.css\n      - WordCount.tsx\n    - file-icon/\n      - file-icon.tsx\n    - file-size/\n      - file-size.tsx\n    - files-table/\n      - SelectedItems.tsx\n      - constants.ts\n      - file-sync-status.tsx\n      - file-table-row-context-menu.tsx\n      - files-table-columns.ts\n      - files-table-dialog.tsx\n      - files-table-utils.ts\n      - files-table.tsx\n      - selected-items-popover.tsx\n      - use-files-table.ts\n    - form-controls/\n      - DatePicker.test.tsx\n      - DatePicker.tsx\n      - DatePickerWithRange.test.tsx\n      - DatePickerWithRange.tsx\n      - InputWithDatePicker.test.tsx\n      - InputWithDatePicker.tsx\n    - formatted-date/\n      - formatted-date.tsx\n    - forms/\n    - icons/\n      - chatbotui-svg.tsx\n      - create-profile-icon-one.tsx\n      - create-profile-icon-two.tsx\n      - flags.tsx\n      - langsmith.tsx\n      - magic_pencil.tsx\n      - psci-icons.tsx\n    - kanban/\n      - CardSettingItems.tsx\n      - CardSettingsDropdown.tsx\n      - ImportPipeline.test.tsx\n      - ImportPipeline.tsx\n      - constants.ts\n      - deleteTaskModal.tsx\n      - kanban.css\n      - kanbanUI.tsx\n      - kanbanUtils.ts\n      - kanbanWrapper.tsx\n      - opportunityCardTemplate.tsx\n      - opportunityFilter.tsx\n      - opportunityModal.tsx\n      - opportunitySort.tsx\n      - selectStateDropdown.tsx\n      - types.ts\n    - knowledge-grid/\n      - file-upload-dialog.tsx\n      - fileviewer-toolbar.tsx\n    - knowledgeBase/\n      - CategoryItem.test.tsx\n      - CategoryItem.tsx\n      - CompanyProfileItem.tsx\n      - CreateCategoryModel.test.tsx\n      - CreateCategoryModel.tsx\n      - DeleteConfirmationModel.test.tsx\n      - DeleteConfirmationModel.tsx\n      - DropdownActionMenu.test.tsx\n      - DropdownActionMenu.tsx\n      - KBDNDProvider.test.tsx\n      - KBDNDProvider.tsx\n      - KBSidebar.test.tsx\n      - KBSidebar.tsx\n      - KButils.ts\n      - KnowledgeTypeChangeDialog.tsx\n      - SharedKnowledgeDialog.tsx\n      - knowledge-base-validation.ts\n      - knowledgeBaseAction.ts\n      - validations.ts\n    - modals/\n    - notifications/\n      - Notifications.tsx\n    - opportunity/\n    - reflections-dialog/\n      - ConfirmClearDialog.tsx\n      - ReflectionsDialog.tsx\n    - send-to/\n    - shared/\n    - sidebar-fast/\n      - RecentOpportunitiesList.test.tsx\n      - RecentOpportunitiesList.tsx\n      - SupportMenu.tsx\n      - constant.ts\n      - sidebar-fast.test.tsx\n      - sidebar-fast.tsx\n      - sidebar-switcher.tsx\n      - support-menu.css\n      - types.ts\n    - submit-button/\n      - submit-button.tsx\n    - tool-hooks/\n      - AttachmentsToolUI.tsx\n      - LangSmithLinkToolUI.tsx\n    - tooltip/\n      - tooltip.css\n      - tooltip.tsx\n    - ui/\n      - CommonDialogBox.tsx\n      - CommonLayout.tsx\n      - DataVisualization.tsx\n      - DebugDataVisualization.tsx\n      - Mermaid.tsx\n      - MermaidDownload.tsx\n      - MermaidWrapper.tsx\n      - accordion.tsx\n      - ai-command.tsx\n      - alert-dialog.tsx\n      - alert.tsx\n      - avatar.tsx\n      - badge.tsx\n      - brand.tsx\n      - breadcrumb.tsx\n      - button.tsx\n      - calendar.css\n      - calendar.tsx\n      - card.tsx\n      - checkbox-group.tsx\n      - checkbox.tsx\n      - collapsible.tsx\n      - command.tsx\n      - confirm-dialog.tsx\n      - dashboard.tsx\n      - date-picker.tsx\n      - dialog.tsx\n      - drawer.tsx\n      - dropdown-menu.tsx\n      - form.tsx\n      - glass-modal.tsx\n      - header-nop.tsx\n      - header.tsx\n      - hover-card.tsx\n      - icons.tsx\n      - image-picker.tsx\n      - inline-context-tooltip.tsx\n      - input.tsx\n      - label.tsx\n      - limit-display.tsx\n      - loading.tsx\n      - pagination.tsx\n      - password-input.tsx\n      - popover.tsx\n      - programming-lang-dropdown.tsx\n      - progress.tsx\n      - radio-group.tsx\n      - resizable-panel.tsx\n      - resizable.tsx\n      - scroll-area.tsx\n      - select.tsx\n      - separator.tsx\n      - sheet.tsx\n      - skeleton.tsx\n      - slider.tsx\n      - switch.tsx\n      - table.tsx\n      - tabs.tsx\n      - textarea-autosize.tsx\n      - textarea.tsx\n      - toast.tsx\n      - toaster.tsx\n      - tooltip.tsx\n      - use-toast.ts\n      - zoom-box.tsx\n    - uploader/\n      - FileUpload.tsx\n      - style.css\n      - types.ts\n      - uploader.tsx\n    - utility/\n      - LoadingPage.tsx\n      - button-click-tracker.tsx\n      - capitalize-and-join.tsx\n      - command-k.tsx\n      - document-editor-wrapper.tsx\n      - error-boundary.tsx\n      - file-viewer.tsx\n      - global-state.tsx\n      - image-editor-wrapper.tsx\n      - login-footer.tsx\n      - pdf-editor-wrapper.tsx\n      - pdf-inline-viewer.tsx\n      - profile-settings.tsx\n      - providers.tsx\n      - referral-link-card.tsx\n      - referral-program-details.tsx\n      - referral-program-sheet.tsx\n      - rich-text-editor-wrapper.tsx\n      - sentry-user-identifier.tsx\n      - spreadsheet-wrapper.tsx\n      - version-display.tsx\n      - version-skew-detector.tsx\n    - web-search-results/\n      - index.tsx\n      - loading-cards.tsx\n  - config/\n    - chatbot-ui-url.ts\n    - code-agent-constants.ts\n    - defaults/\n      - page-size-options.ts\n    - shared-services-api-url.ts\n  - context/\n    - codeAgentContexts/\n      - AssistantContext.tsx\n      - GraphContext.tsx\n      - ThreadProvider.tsx\n      - UserContext.tsx\n      - utils.ts\n    - companyProfileContext/\n      - companyProfileContext.tsx\n    - context.tsx\n    - historyPanelContext/\n      - history-panel-context.tsx\n    - kanbanContext/\n      - kanbanContext.tsx\n    - knowledgeBaseContext/\n      - knowledgeBaseContext.tsx\n    - opportunityContext/\n      - opportunityContext.tsx\n    - opportunityTaskContext/\n      - opportunityTaskContext.tsx\n    - oppsearchcontext/\n      - opp-search-context-provider.tsx\n      - opp-search-context.tsx\n    - sourceConfigContext/\n      - sourceConfigContext.tsx\n    - toggle-context.tsx\n    - widgetPanelContext/\n      - widgetPanelContext.tsx\n  - customer-onboarding/\n    - node_modules/\n  - db/\n    - certificates.ts\n    - chat-files.ts\n    - chats.ts\n    - citations.ts\n    - collection-files.ts\n    - contacts.ts\n    - crm-tags.ts\n    - drafts.ts\n    - export-ai-content-server.ts\n    - file-info-view.ts\n    - files.ts\n    - history.ts\n    - index.ts\n    - integrations/\n      - data-source-objects.ts\n      - integrations.ts\n    - item-group.ts\n    - limits.ts\n    - messages.ts\n    - notes.ts\n    - notes_related.ts\n    - onboarding.ts\n    - opportunity-audit.ts\n    - opportunity-chats.ts\n    - opportunity-drafts.ts\n    - opportunity-review-proposals.ts\n    - opportunity-team.ts\n    - opportunity.ts\n    - opportunity_pipeline_status.ts\n    - opportunity_set_aside_code.ts\n    - organization.ts\n    - profile.ts\n    - prompts.ts\n    - reports.ts\n    - review-proposals.ts\n    - session-tags.ts\n    - storage/\n      - message-images.ts\n      - profile-images.ts\n    - tags.ts\n    - task.ts\n    - web-scraper/\n      - web-scrapes.ts\n    - workspaces.ts\n  - doc-pipeline/\n    - Dockerfile\n    - README.md\n    - app/\n      - __init__.py\n      - api.py\n      - config.py\n      - embedding.py\n      - extract_and_chunk.py\n      - l_test.py\n      - legacy_lance.py\n      - legacy_retrieval.py\n      - libreoffice.py\n      - main.py\n      - mime_types.py\n      - redis_queue.py\n      - tika.py\n      - transfer_cli.py\n      - utils.py\n    - fileItemsTableDump.sh\n    - garden.yml\n    - legacy_utils.py\n    - optimizeAll.sh\n    - optimizeDev.sh\n    - optimizeProd1.sh\n    - optimizeProd2.sh\n    - optimizeProd3.sh\n    - optimizeProd4.sh\n    - poetry.lock\n    - pyproject.toml\n    - reportMetrics.sh\n    - tests/\n      - __init__.py\n  - docs/\n    - README.md\n    - ai-native/\n    - duckdb-cli.md\n    - feature-flags.md\n    - feature-flags/\n      - README.md\n      - cache-architecture.svg\n      - cache-flow.svg\n      - caching.md\n      - feature-flag-list.md\n      - sequence.svg\n    - integration-prompts/\n      - AppIntegration.md\n      - CODEBASE-OVERVIEW.md\n      - INTERGRATIONS.md\n      - LayoutIntegration.md\n    - model-utilities.md\n    - planning/\n      - 01-30-2025_data-access-layer.md\n    - posthog-sentry-integration.md\n    - sentry-tracing-guide.md\n    - text-extraction.md\n    - theming-guidelines.md\n  - e2e/\n    - actions/\n      - delete-file.ts\n      - index.ts\n      - start-new-chat.ts\n      - upload-file.ts\n    - files/\n      - c8143eca8f441c1ef1d409a8540c3c97-test-story.pdf\n    - fixtures/\n      - authenticated.ts\n    - helpers/\n      - index.ts\n      - wait-for-additional-content.ts\n      - wait-for-loader.ts\n    - tests/\n      - ai-chat.spec.ts\n      - ai-review.spec.ts\n      - bid-search.spec.ts\n      - contact.spec.ts\n      - login.spec.ts\n  - embeddings-worker/\n    - Dockerfile\n    - README.md\n    - eslint.config.js\n    - package-lock.json\n    - package.json\n    - src/\n      - application.ts\n      - embeddings-worker.ts\n      - index.ts\n      - optimize-worker.ts\n      - server.ts\n    - tsconfig.json\n  - eslint.config.mjs\n  - features/\n    - bid-search/\n    - hotkeys/\n    - opportunities/\n    - opportunity-pipeline/\n    - partners/\n    - referral-banner/\n    - task/\n  - generate_text.py\n  - hooks/\n    - files/\n      - index.ts\n      - use-file-statistics.ts\n    - use-account-type.test.ts\n    - use-account-type.ts\n    - use-add-solicitation-to-pipeline.test.ts\n    - use-add-solicitation-to-pipeline.ts\n    - use-agency.test.ts\n    - use-agency.ts\n    - use-assistant.test.ts\n    - use-assistant.ts\n    - use-awarded-ai-theme.ts\n    - use-default-solicitation-saved-search-filter.test.ts\n    - use-default-solicitation-saved-search-filter.ts\n    - use-enabled-solicitation-markets.test.ts\n    - use-enabled-solicitation-markets.ts\n    - use-enabled-solicitation-views.test.ts\n    - use-enabled-solicitation-views.ts\n    - use-feature-flag.test.tsx\n    - use-feature-flag.ts\n    - use-fetch-tags.ts\n    - use-naics-codes.test.ts\n    - use-naics-codes.ts\n    - use-opportunity-statuses.test.ts\n    - use-opportunity-statuses.ts\n    - use-opportunity-team-member-roles.ts\n    - use-organizations.test.ts\n    - use-organizations.ts\n    - use-page.ts\n    - use-sentry-user.tsx\n    - use-set-aside-codes.test.ts\n    - use-set-aside-codes.ts\n    - use-skew.ts\n    - use-solicitation-agencies.test.ts\n    - use-solicitation-agencies.ts\n    - use-solicitation-contacts.test.ts\n    - use-solicitation-contacts.ts\n    - use-solicitation-markets.test.ts\n    - use-solicitation-markets.ts\n    - use-solicitation-saved-search-filter.test.ts\n    - use-solicitation-saved-search-filter.ts\n    - use-solicitation-saved-search-filters.test.ts\n    - use-solicitation-saved-search-filters.ts\n    - use-solicitation-types.test.ts\n    - use-solicitation-types.ts\n    - use-solicitation-views.ts\n    - use-solicitation.test.ts\n    - use-solicitation.ts\n    - use-solicitations-agencies.ts\n    - use-solicitations-links.ts\n    - use-solicitations-locations.ts\n    - use-solicitations.test.ts\n    - use-solicitations.ts\n    - use-storage.test.ts\n    - use-storage.ts\n    - use-toast.ts\n    - use-users.ts\n    - useAITagSuggestion.ts\n    - useAuth.ts\n    - useContextDocuments.tsx\n    - useFeatureFlag.ts\n    - useFeedback.ts\n    - useLocalStorage.tsx\n    - useRuns.tsx\n    - useStore.tsx\n    - utils.ts\n    - web-scraper/\n      - use-create-web-scrape.ts\n      - use-delete-web-scrape.tsx\n      - use-web-scrape.ts\n      - use-web-scrapes.ts\n  - infra/\n    - buildAndSeedDB.sh\n    - build_and_push_local.sh\n    - clickhouse-to-duckdb/\n      - README.md\n      - clickhouse-to-duckdb.sh\n      - partition_parquet.sh\n    - combineSecretDataForStart.sh\n    - combineSecretDataForWebEnv.sh\n    - compose.yaml\n    - deploy.sh\n    - deployToAll.sh\n    - gardenSecretCreate.sh\n    - generate-rfps/\n      - black.pptx\n      - gen.sh\n      - generate.sh\n      - generateLlama3.sh\n      - rfp.txt\n      - rfpStructure.txt\n    - generateReportForRetrievalStatus.sh\n    - generateSupabaseSecrets.mjs\n    - getSecretData.sh\n    - gsa-ebuy/\n      - CLAUDE.md\n      - Dockerfile\n      - FIXING_TABLE_ERRORS.md\n      - README.Docker.md\n      - SUPABASE_SETUP.md\n      - check-existing-tables.ts\n      - check-supabase-data.ts\n      - create-tables-cli.ts\n      - create_gsa_ebuy_tables.sql\n      - create_missing_tables.sql\n      - fix-database-now.sh\n      - gmail-tools.ts\n      - gsa-ebuy-cli.ts\n      - gsa-tools.ts\n      - migrate_to_comprehensive_schema.sql\n      - package-lock.json\n      - package.json\n      - setup-supabase-tables.ts\n      - tsconfig.json\n    - initDeployment.sh\n    - json2env.sh\n    - ldb-minder-kit/\n    - manifests/\n      - infisical-rolebinding-patch.yaml\n      - jwt-cluster-role-patch.yaml\n      - karapace.yaml\n      - namespaces.yaml\n      - tombstone.yaml\n    - metrics/\n      - Dockerfile\n      - bun.lockb\n      - otel.ts\n      - package.json\n    - runDPOnAllNoSync.sh\n    - usa_spending/\n      - restoreScript.sh\n  - instrumentation-client.ts\n  - instrumentation.ts\n  - integration-sync-worker/\n    - Dockerfile\n    - README.md\n    - eslint.config.js\n    - package-lock.json\n    - package.json\n    - scripts/\n      - deploy.sh\n    - src/\n      - application.ts\n      - index.ts\n      - server.ts\n      - sync-worker.ts\n    - tsconfig.json\n    - vitest.config.ts\n  - integration-token-refresher/\n    - Dockerfile\n    - README.md\n    - eslint.config.js\n    - package-lock.json\n    - package.json\n    - scripts/\n      - deploy.sh\n    - src/\n      - index.ts\n    - tsconfig.json\n  - jest.config.ts\n  - jest.setup.js\n  - jest.setup.ts\n  - labs/\n    - agenting/\n      - Dockerfile\n      - README.md\n      - agent.py\n      - file_utils.py\n      - langgraph.json\n      - pyproject.toml\n      - uv.lock\n    - agents/\n      - Dockerfile\n      - README.md\n      - langgraph.json\n      - pyproject.toml\n    - awarded-ai/\n      - README.md\n      - langgraph.json\n      - package-lock.json\n      - package.json\n      - tsconfig.json\n    - code-agent/\n      - README.md\n      - langgraph.json\n      - package-lock.json\n      - package.json\n      - tsconfig.json\n      - turbo.json\n    - deep_contractiq/\n    - workflows/\n      - Dockerfile\n      - __init__.py\n      - auth.py\n      - langgraph.json\n      - pyproject.toml\n      - test_compliance_matrix.py\n      - uv.lock\n  - lib/\n    - apify-webscrape-config.ts\n    - attachments.tsx\n    - build-prompt.ts\n    - bull-mq-job-priorities.ts\n    - canvas-preview.ts\n    - chat-setting-limits.ts\n    - chatbot-ui-axios.ts\n    - clickhouse-opportunity-data/\n      - get-award-info.ts\n      - get-clickhouse-opportunity-data.ts\n      - get-contacts.ts\n      - get-links.ts\n      - get-locations.ts\n      - get-solicitation.ts\n      - index.ts\n    - clickhouse/\n      - client.ts\n      - query-builder.ts\n    - code-agent/\n      - constants.ts\n      - models.ts\n      - types.ts\n    - consume-stream.ts\n    - convert_messages.ts\n    - cookies.ts\n    - data-parser.ts\n    - dom/\n    - editor/\n      - index.tsx\n    - effects/\n      - use-debounce.ts\n    - env-feature-flags.ts\n    - envs.ts\n    - errors.ts\n    - export-ai-content.ts\n    - fetcher.ts\n    - generatePersonalization.ts\n    - geocoding.ts\n    - get_language_template.ts\n    - hashGenerator.ts\n    - hooks/\n      - use-copy-to-clipboard.tsx\n      - use-editor-contents.ts\n      - use-hotkey.tsx\n      - use-intercom.ts\n      - use-local-storage.ts\n      - useBodyPointerEventsSafety.ts\n    - image/\n      - create-svg-download-url.ts\n      - index.ts\n    - importUtils.ts\n    - intercom/\n      - index.tsx\n    - kanban/\n      - kanban.ts\n      - opportunities.ts\n    - logger.ts\n    - models/\n      - fetch-models.ts\n    - ms-graph-client/\n      - index.ts\n    - nextauth.ts\n    - normalize_string.ts\n    - novu/\n      - novu-utils.ts\n    - o11y/\n      - otel.ts\n    - openapi-conversion.ts\n    - opportunity-file-utils.ts\n    - posthog/\n      - index.tsx\n      - sentry-integration.ts\n      - server.ts\n    - react-select-styles.ts\n    - retrieval/\n    - safe-exec/\n      - index.ts\n    - search-suggestions.ts\n    - secrets/\n      - client.ts\n    - sentry/\n      - server-tracing.ts\n      - tracing.ts\n      - user-context.ts\n      - user-identification.ts\n    - server/\n      - README_CACHE.md\n      - server-chat-helpers.ts\n      - server-utils.ts\n    - shared-services-api.ts\n    - shared-services.api.test.ts\n    - shared/\n    - should-use-gpt41.ts\n    - storage/\n      - index.ts\n    - store.ts\n    - supabase/\n      - browser-client.ts\n      - client.ts\n      - middleware.ts\n      - server.ts\n      - verify_user_server.ts\n      - verify_user_with_sentry.ts\n    - tenant-vars/\n      - get-tenant-var.ts\n      - parse-tenant.ts\n    - type-guards/\n      - exists.test.ts\n      - exists.ts\n      - index.ts\n    - types/\n      - request-context.ts\n    - utils.ts\n    - withSessionMemoization.ts\n  - middleware.ts\n  - middleware/\n    - stackHandler.ts\n    - withAuth.ts\n    - withHeaders.ts\n  - next.config.js\n  - nifi/\n    - flow_def/\n      - fpds-feed-api-to-azure-blob.json\n      - fpds-feed-azure-blob-to-postgre.json\n      - get-and-save-polygon-to-db.json\n      - resource-and-folder-migration.json\n      - sam-api-to-azure-blob.json\n      - sam-azure-blob-to-postgre.json\n      - sam-old-db-ops-sync.json\n      - sam-save-resource-pdf.json\n      - sam-sync-flow.json\n    - templates/\n      - get-and-save-polygon-to-db.xml\n      - resource_and_folder_migration.xml\n      - sam-api-to-azure-blob.xml\n      - sam-azure-blob-to-postgre.xml\n    - xslt/\n      - xml-to-json.xsl\n  - node_modules/\n  - novu/\n    - novu-architecture.drawio\n    - novu-architecture.drawio.svg\n  - outputresponse.escaped.txt\n  - package-lock.json\n  - package.json\n  - packages/\n  - patches/\n    - @modelcontextprotocol+server-gdrive+2025.1.14.patch\n    - oauth4webapi+3.3.2.patch\n  - playwright.config.ts\n  - playwright/\n    - Awarded_AI_TS/\n      - README.md\n      - cucumber.json\n      - package-lock.json\n      - package.json\n      - playwright.config.ts\n      - tsconfig.json\n  - postcss.config.js\n  - project.garden.yml\n  - psci-evals/\n    - tests/\n      - test_compliance_matrix.py\n  - public/\n    - Awarder-AI-White.svg\n    - Cotton-Method-Logo-White.svg\n    - Cotton-Method-Logo.png\n    - DARK_BRAND_LOGO.png\n    - Full-logo-(Dark)-v2.png\n    - LIGHT_BRAND_LOGO.png\n    - MAZITECH-WHITE.png\n    - MAZITECH.png\n    - MaziTech_banner.png\n    - MaziTech_banner_White.svg\n    - No_Results.png\n    - Policy-Background-Image.png\n    - coming_soon.png\n    - cropped-PSciAI-Black.png\n    - cropped-PSciAI-Black.webp\n    - ej2-pdfviewer-lib/\n      - pdfium.js\n      - pdfium.wasm\n    - ffmpeg-worker.js\n    - graphics/\n      - img-aircraft.jpg\n      - img-f22.jpg\n      - img-office.jpg\n      - img-whitehouse.jpg\n    - icons/\n      - aiIcon.svg\n      - circle-x.svg\n      - favicon-white.ico\n      - favicon.ico\n      - plus-circle.svg\n    - integration-providers/\n      - box.jpg\n      - dropbox.png\n      - google.png\n      - onedrive.png\n      - salesforce.png\n      - sharepoint.png\n    - locales/\n    - logo-white.png\n    - logo.svg\n    - marker.svg\n    - no-items-available.png\n    - onboarding/\n      - onboarding-logo.png\n      - onboarding-v2.png\n      - robot-with-laptop.png\n    - pdfjs/\n    - procurement_sciences_logo.jpeg\n    - providers/\n      - meta.png\n      - mistral.png\n      - perplexity.png\n    - readme/\n      - screenshot.png\n    - refer-and-earn.png\n    - task/\n      - Empty_Notes.png\n      - No_Task.png\n      - Nohiddenopportunities.png\n    - team.png\n  - pyproject.toml\n  - runServer.sh\n  - scripts/\n    - Dockerfile\n    - clear-feature-flags-cache.ts\n    - createMaintainerSecret.sh\n    - createPullerSecret.sh\n    - debug-feature-flags-cache.ts\n    - divisions-file-migration/\n      - Dockerfile\n      - README.md\n      - build-push-image.sh\n      - deploy-job.sh\n      - index.ts\n      - k8s-job.yaml\n      - package-lock.json\n      - package.json\n      - tsconfig.json\n    - fetch-tickets.sh\n    - generate-release-notes.sh\n    - lancedb-migration/\n      - Dockerfile\n      - index.js\n      - lancedb-file-items-migration.job.yaml\n      - package-lock.json\n      - package.json\n    - load-sam-data-to-dest.sh\n    - port-forward-db copy.sh\n    - port-forward-db.sh\n    - port-forward-dest.sh\n    - pull-sam-data-from-src-incr.sh\n    - pull-sam-data-from-src.sh\n    - sam-gov-maintainer-job.yaml\n    - sam-gov-maintainer.yaml\n    - sam-gov-puller-job.yaml\n    - sam-gov-puller.yaml\n    - sharepoint-sites-selected/\n      - grant-site-permission.ps1\n      - grant-site-permission.sh\n  - sentry.edge.config.ts\n  - sentry.server.config.ts\n  - shadcn/\n    - components/\n    - lib/\n      - utils.ts\n  - shared-services-api/\n    - Dockerfile\n    - README.md\n    - eslint.config.mjs\n    - jest.config.js\n    - nest-cli.json\n    - package-lock.json\n    - package.json\n    - src/\n      - instrument.ts\n      - main.ts\n    - test/\n      - app.e2e-spec.ts\n      - jest-e2e.json\n    - tsconfig.build.json\n    - tsconfig.json\n  - styles/\n    - syncfusion/\n      - fluent.css\n      - pdf-viewer.css\n  - supabase/\n    - Dockerfile.functions\n    - Dockerfile.seed\n    - config.template.toml\n    - config.toml\n    - database-types.ts\n    - featured/\n      - instructions.md\n      - requirements.txt\n      - sheet_to_sql.py\n    - functions/\n    - generate-schema.sh\n    - global-seed.sh\n    - globalseed/\n      - promptsassistants.sql\n    - migrations/\n      - 20240320000000_bulk_opportunity_actions.sql\n      - 20240605100056_opportunity_details.sql\n      - 20240618071824_opps_pipeline.sql\n      - 20240621071829_agency_tables.sql\n      - 20240622124830_opportunity_attachment_category.sql\n      - 20240622124932_opportunity_file.sql\n      - 20240624090540_add_agency_column.sql\n      - 20240624090635_folder_opp_attach_category.sql\n      - 20240626145846_create_data_source_connection_sync_status_function.sql\n      - 20240627135330_add_folder_sharing.sql\n      - 20240702054231_create_file_info_view.sql\n      - 20240702054232_ensure_tags_table.sql\n      - 20240702054235_ensure_tags_table.sql\n      - 20240702054236_ensure_tags_table.sql\n      - 20240703021724_embedding-safety-enhancements.sql\n      - 20240704090641_add_agency_column_pipeline.sql\n      - 20240705195437_add_path_to_file_info_view.sql\n      - 20240706183808_file_info_view_udf.sql\n      - 20240709151402_db_company_profile.sql\n      - 20240709195422_add_tag_indexes.sql\n      - 20240709200528_add_targetAgency_and_solicitationType_to_drafts.sql\n      - 20240709214026_create_materialized_file_info_view.sql\n      - 20240710201659_refresh_file_info_view.sql\n      - 20240711032834_set_statement_timeout.sql\n      - 20240711033839_drop_unused_indexes.sql\n      - 20240711034503_unique_idx_on_file_info_view.sql\n      - 20240711055925_cron_based_debounce_mat_view_refresh_for_file_info_view.sql\n      - 20240711055935_opportunity_migration.sql\n      - 20240711212051_add-selected-files-to-chats.sql\n      - 20240712224404_files_table_dedup_fixes_2.sql\n      - 20240715143211_opportunity_strategy_tab.sql\n      - 20240715180547_add_citations_to_messages.sql\n      - 20240715180555_opportunity_management_task_tab.sql\n      - 20240715180590_update_agency_name_in_saved_search.sql\n      - 20240715180666_add_view_opportunity_management_task_tab.sql\n      - 20240716092130_add_wildcard_function.sql\n      - 20240716092150_file_and_folder_association_with_opportunity_category_function.sql\n      - 20240719173534_db_company_profile_files.sql\n      - 20240719173550_update_opportunity_file_table_relation.sql\n      - 20240720073135_db_delete_company_profile.sql\n      - 20240722200057_files_table_dedup_fixes_3.sql\n      - 20240722201310_data_source_connections_shared.sql\n      - 20240722201848_create_unique_idx_data_source_objects.sql\n      - 20240724000303_company_profile_fixes.sql\n      - 20240724201904_add_unique_idx_to_sync_status.sql\n      - 20240725044133_refresh_mat_view.sql\n      - 20240725044156_opportunity_team_member.sql\n      - 20240725182815_add_integration_cron.sql\n      - 20240725213148_add_retry_failed_integration_sunc_fn.sql\n      - 20240726123513_bucket_sam_resources.sql\n      - 20240729023518_update_sol_in_pipeline.sql\n      - 20240729200211_psc_insert.sql\n      - 20240729200253_opportunity_pipeline_team_members_view.sql\n      - 20240730043852_cleanup_duplicate_integrations.sql\n    - policy_reset.sql\n    - schema.sql\n    - seed.commercial.sql\n    - seed.gcchigh.sql\n    - seed.sh\n    - seed.sql\n    - types.ts\n  - tailwind.config.ts\n  - templates/\n    - reference.docx\n  - test_folder_log.txt\n  - test_format_debug.py\n  - thread.js\n  - tsconfig.json\n  - tsconfig.test.json\n  - turbo.json\n  - types/\n    - account-type.ts\n    - actions.ts\n    - add-task-configuration-request.ts\n    - agency.ts\n    - announcement.ts\n    - apiify-webhook-body.ts\n    - assistant-image.ts\n    - assistant-retrieval-item.ts\n    - assistant.ts\n    - chat-file.tsx\n    - chat-message.ts\n    - chat-payload.ts\n    - chat-settings.ts\n    - chat.ts\n    - collection-file.ts\n    - config-context.ts\n    - contacts.ts\n    - content-type.ts\n    - date-range.ts\n    - feature-flag-evaluation.ts\n    - feature-flag.ts\n    - file-item-chunk.ts\n    - form-action-state.ts\n    - generation-log-entry.ts\n    - immutable.ts\n    - index.ts\n    - kanban.ts\n    - key-type.ts\n    - knowledgeBase.ts\n    - listing.ts\n    - llms.ts\n    - message-image.ts\n    - min-max.ts\n    - models.ts\n    - ms-graph-drive-item.ts\n    - mst-tags.ts\n    - naics-code-request.ts\n    - naics-code.ts\n    - notepad.ts\n    - opp-search.ts\n    - opportunity-data.ts\n    - opportunity-pipeline-strategy-field-value.ts\n    - opportunity-pipeline-strategy-field.ts\n    - opportunity-pipeline-task-configuration.ts\n    - opportunity-section.ts\n    - opportunity-status.ts\n    - opportunity-team-member-role.ts\n    - opportunity-team-member.ts\n    - opportunity-team.ts\n    - opportunity.ts\n    - organization.ts\n    - page.ts\n    - pagination.ts\n    - partner.ts\n    - partners.ts\n    - profile.ts\n    - prompt-settings.ts\n    - proposal-reviews.ts\n    - review-proposals.ts\n    - schedule.ts\n    - server-only.d.ts\n    - set-aside-code.ts\n    - set-aside-codes-request.ts\n    - settings-messages.ts\n    - sharing.ts\n    - sidebar-data.ts\n    - sin.ts\n    - solicitation-action.ts\n    - solicitation-agency-request.ts\n    - solicitation-agency.ts\n    - solicitation-award-type.ts\n    - solicitation-contact.ts\n    - solicitation-link.ts\n    - solicitation-location.ts\n    - solicitation-market.ts\n    - solicitation-saved-search-filter.ts\n    - solicitation-type.ts\n    - solicitation-types-request.ts\n    - solicitation-view.ts\n    - solicitation.ts\n    - sort-order.ts\n    - state-machine.ts\n    - strategy-field-type.ts\n    - suggested-prompt.ts\n    - task-stage.ts\n    - task.ts\n    - teaming-partner.ts\n    - themes.ts\n    - update-task-configuration-request.ts\n    - user-behavior-events.ts\n    - user-prompt-context.ts\n    - user.ts\n    - valid-keys.ts\n    - web-scrapes.ts\n  - utils/\n    - mutable-clone.test.ts\n    - mutable-clone.ts\n    - solicitation-saved-search-filter.ts\n    - time.test.ts\n    - time.ts\n  - vercel.json\n  - workers/\n"}
{"parentUuid":"56d9f05b-544f-4a8b-911b-defcd77ff29f","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_019h34eEfUKnBZHipn4i7Wz5","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Now let me search for AI Review related files and components to understand the current implementation:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":11719,"cache_read_input_tokens":28629,"output_tokens":114,"service_tier":"standard"}},"requestId":"req_011CS5yBMLCFJrkDhRcHtgwV","type":"assistant","uuid":"0c551186-3985-493f-87c7-2867bbb24bee","timestamp":"2025-08-13T15:46:34.124Z"}
{"parentUuid":"0c551186-3985-493f-87c7-2867bbb24bee","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_019h34eEfUKnBZHipn4i7Wz5","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_016WaETXwTFBEPAY7nxH23ED","name":"Grep","input":{"pattern":"AI.?Review","output_mode":"files_with_matches","-i":true}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":11719,"cache_read_input_tokens":28629,"output_tokens":114,"service_tier":"standard"}},"requestId":"req_011CS5yBMLCFJrkDhRcHtgwV","type":"assistant","uuid":"ff092513-a526-4902-ad6b-2d4e0332a96c","timestamp":"2025-08-13T15:46:34.732Z"}
{"parentUuid":"ff092513-a526-4902-ad6b-2d4e0332a96c","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_016WaETXwTFBEPAY7nxH23ED","type":"tool_result","content":"Found 27 files\n/Users/luke/code/psci/chatbot-ui-2/components/sidebar-fast/sidebar-fast.tsx\n/Users/luke/code/psci/chatbot-ui-2/supabase/migrations/20241114212365_add_function_to_get_proposal_reviews_ai_instruction_with_details.sql\n/Users/luke/code/psci/chatbot-ui-2/supabase/migrations/20241114212264_add_tables_for_proposal_reviews_ai_instruction.sql\n/Users/luke/code/psci/chatbot-ui-2/playwright/Awarded_AI_TS/src/stepDefinitions/promptReviewSteps.ts\n/Users/luke/code/psci/chatbot-ui-2/playwright/Awarded_AI_TS/src/stepDefinitions/AiReview.ts\n/Users/luke/code/psci/chatbot-ui-2/playwright/Awarded_AI_TS/src/Pages/PromptReviewPage.ts\n/Users/luke/code/psci/chatbot-ui-2/playwright/Awarded_AI_TS/src/Pages/AIReviewPage.ts\n/Users/luke/code/psci/chatbot-ui-2/playwright/Awarded_AI_TS/src/Features/31_AI_Prompt_Review.feature\n/Users/luke/code/psci/chatbot-ui-2/playwright/Awarded_AI_TS/src/Features/07_AI Response for Incorrect Federal AgenciesStorage.feature\n/Users/luke/code/psci/chatbot-ui-2/packages/ui/chat/components/prompt-library/AddNewPrompt.tsx\n/Users/luke/code/psci/chatbot-ui-2/packages/ui/chat/components/empty-screen.tsx\n/Users/luke/code/psci/chatbot-ui-2/packages/ui/chat/components/assistants/QuickActions/QuickActionRows.tsx\n/Users/luke/code/psci/chatbot-ui-2/e2e/tests/contact.spec.ts\n/Users/luke/code/psci/chatbot-ui-2/e2e/tests/ai-review.spec.ts\n/Users/luke/code/psci/chatbot-ui-2/components/sidebar-fast/sidebar-fast.test.tsx\n/Users/luke/code/psci/chatbot-ui-2/components/shared/AddNewTag/AddNewTag.tsx\n/Users/luke/code/psci/chatbot-ui-2/components/shared/AddNewTag/AddNewTag.test.tsx\n/Users/luke/code/psci/chatbot-ui-2/components/copilotkit/actions/chat-history/ChatHistoryListAction.tsx\n/Users/luke/code/psci/chatbot-ui-2/cli/feature-flags/README.md\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/review-proposal-ui.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/components/review-proposals-settings.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/components/review-proposals-settings.test.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/components/AddNewInstruction.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/components/AddNewInstruction.test.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/AIHeader/NewSubMenu.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/AIHeader/NewSubMenu.test.tsx\n/Users/luke/code/psci/chatbot-ui-2/scripts/generate-release-notes.sh"}]},"uuid":"2004b518-6ef5-4ad7-8b45-2f761f3718d4","timestamp":"2025-08-13T15:46:35.055Z","toolUseResult":{"mode":"files_with_matches","filenames":["/Users/luke/code/psci/chatbot-ui-2/components/sidebar-fast/sidebar-fast.tsx","/Users/luke/code/psci/chatbot-ui-2/supabase/migrations/20241114212365_add_function_to_get_proposal_reviews_ai_instruction_with_details.sql","/Users/luke/code/psci/chatbot-ui-2/supabase/migrations/20241114212264_add_tables_for_proposal_reviews_ai_instruction.sql","/Users/luke/code/psci/chatbot-ui-2/playwright/Awarded_AI_TS/src/stepDefinitions/promptReviewSteps.ts","/Users/luke/code/psci/chatbot-ui-2/playwright/Awarded_AI_TS/src/stepDefinitions/AiReview.ts","/Users/luke/code/psci/chatbot-ui-2/playwright/Awarded_AI_TS/src/Pages/PromptReviewPage.ts","/Users/luke/code/psci/chatbot-ui-2/playwright/Awarded_AI_TS/src/Pages/AIReviewPage.ts","/Users/luke/code/psci/chatbot-ui-2/playwright/Awarded_AI_TS/src/Features/31_AI_Prompt_Review.feature","/Users/luke/code/psci/chatbot-ui-2/playwright/Awarded_AI_TS/src/Features/07_AI Response for Incorrect Federal AgenciesStorage.feature","/Users/luke/code/psci/chatbot-ui-2/packages/ui/chat/components/prompt-library/AddNewPrompt.tsx","/Users/luke/code/psci/chatbot-ui-2/packages/ui/chat/components/empty-screen.tsx","/Users/luke/code/psci/chatbot-ui-2/packages/ui/chat/components/assistants/QuickActions/QuickActionRows.tsx","/Users/luke/code/psci/chatbot-ui-2/e2e/tests/contact.spec.ts","/Users/luke/code/psci/chatbot-ui-2/e2e/tests/ai-review.spec.ts","/Users/luke/code/psci/chatbot-ui-2/components/sidebar-fast/sidebar-fast.test.tsx","/Users/luke/code/psci/chatbot-ui-2/components/shared/AddNewTag/AddNewTag.tsx","/Users/luke/code/psci/chatbot-ui-2/components/shared/AddNewTag/AddNewTag.test.tsx","/Users/luke/code/psci/chatbot-ui-2/components/copilotkit/actions/chat-history/ChatHistoryListAction.tsx","/Users/luke/code/psci/chatbot-ui-2/cli/feature-flags/README.md","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/review-proposal-ui.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/components/review-proposals-settings.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/components/review-proposals-settings.test.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/components/AddNewInstruction.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/components/AddNewInstruction.test.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/AIHeader/NewSubMenu.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/AIHeader/NewSubMenu.test.tsx","/Users/luke/code/psci/chatbot-ui-2/scripts/generate-release-notes.sh"],"numFiles":27}}
{"parentUuid":"2004b518-6ef5-4ad7-8b45-2f761f3718d4","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01XHwxANGCtNDowyUzxBuPYJ","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Let me look for PDF export functionality:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":1118,"cache_read_input_tokens":40348,"output_tokens":116,"service_tier":"standard"}},"requestId":"req_011CS5yBfUrKgE1qTi74xHaH","type":"assistant","uuid":"3a1f6d73-ba1e-45c8-9083-23d4ba7304b8","timestamp":"2025-08-13T15:46:38.138Z"}
{"parentUuid":"3a1f6d73-ba1e-45c8-9083-23d4ba7304b8","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01XHwxANGCtNDowyUzxBuPYJ","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01GrxNuN9ogiffAG8aTD9YzP","name":"Grep","input":{"pattern":"export.*pdf|pdf.*export|Export.*PDF|PDF.*Export","output_mode":"files_with_matches","-i":true}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":1118,"cache_read_input_tokens":40348,"output_tokens":116,"service_tier":"standard"}},"requestId":"req_011CS5yBfUrKgE1qTi74xHaH","type":"assistant","uuid":"6bdc14d4-5c00-4800-bf38-f6ebf0b3496c","timestamp":"2025-08-13T15:46:38.642Z"}
{"parentUuid":"6bdc14d4-5c00-4800-bf38-f6ebf0b3496c","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01GrxNuN9ogiffAG8aTD9YzP","type":"tool_result","content":"Found 20 files\n/Users/luke/code/psci/chatbot-ui-2/package-lock.json\n/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts\n/Users/luke/code/psci/chatbot-ui-2/public/pdfjs/local/viewer.min.mjs\n/Users/luke/code/psci/chatbot-ui-2/public/pdfjs/local/pdf.worker.min.mjs\n/Users/luke/code/psci/chatbot-ui-2/public/pdfjs/local/pdf.min.mjs\n/Users/luke/code/psci/chatbot-ui-2/lib/retrieval/processing/pdf.ts\n/Users/luke/code/psci/chatbot-ui-2/lib/retrieval/processing/index.ts\n/Users/luke/code/psci/chatbot-ui-2/labs/code-agent/src/utils.ts\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts\n/Users/luke/code/psci/chatbot-ui-2/components/utility/pdf-inline-viewer.tsx\n/Users/luke/code/psci/chatbot-ui-2/components/utility/pdf-editor-wrapper.tsx\n/Users/luke/code/psci/chatbot-ui-2/components/ui/assistant-ui/attachment-adapters/pdf.ts\n/Users/luke/code/psci/chatbot-ui-2/components/editor/ToolbarExportPdf.tsx\n/Users/luke/code/psci/chatbot-ui-2/components/editor/ToolbarExportControl.tsx\n/Users/luke/code/psci/chatbot-ui-2/components/Reports/Reports.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/web-scraper/_components/web-scrape-pdf-viewer.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/workspace-history-list/history-item.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/AIHeader/AIHeader.tsx\n/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/AIHeader/AIHeader.test.tsx\n/Users/luke/code/psci/chatbot-ui-2/public/ej2-pdfviewer-lib/pdfium.js"}]},"uuid":"e890037c-b233-4582-b750-448ea1b36bd2","timestamp":"2025-08-13T15:46:38.840Z","toolUseResult":{"mode":"files_with_matches","filenames":["/Users/luke/code/psci/chatbot-ui-2/package-lock.json","/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts","/Users/luke/code/psci/chatbot-ui-2/public/pdfjs/local/viewer.min.mjs","/Users/luke/code/psci/chatbot-ui-2/public/pdfjs/local/pdf.worker.min.mjs","/Users/luke/code/psci/chatbot-ui-2/public/pdfjs/local/pdf.min.mjs","/Users/luke/code/psci/chatbot-ui-2/lib/retrieval/processing/pdf.ts","/Users/luke/code/psci/chatbot-ui-2/lib/retrieval/processing/index.ts","/Users/luke/code/psci/chatbot-ui-2/labs/code-agent/src/utils.ts","/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts","/Users/luke/code/psci/chatbot-ui-2/components/utility/pdf-inline-viewer.tsx","/Users/luke/code/psci/chatbot-ui-2/components/utility/pdf-editor-wrapper.tsx","/Users/luke/code/psci/chatbot-ui-2/components/ui/assistant-ui/attachment-adapters/pdf.ts","/Users/luke/code/psci/chatbot-ui-2/components/editor/ToolbarExportPdf.tsx","/Users/luke/code/psci/chatbot-ui-2/components/editor/ToolbarExportControl.tsx","/Users/luke/code/psci/chatbot-ui-2/components/Reports/Reports.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/web-scraper/_components/web-scrape-pdf-viewer.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/workspace-history-list/history-item.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/AIHeader/AIHeader.tsx","/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/AIHeader/AIHeader.test.tsx","/Users/luke/code/psci/chatbot-ui-2/public/ej2-pdfviewer-lib/pdfium.js"],"numFiles":20}}
{"parentUuid":"e890037c-b233-4582-b750-448ea1b36bd2","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_015qFavVoCQeWHsstHwUNrJB","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Let me examine the AI Review screen components first:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":766,"cache_read_input_tokens":41466,"output_tokens":98,"service_tier":"standard"}},"requestId":"req_011CS5yBwn8dfVSaT8RwAhpp","type":"assistant","uuid":"e022cc69-9784-4769-bd04-ec4613e59c9d","timestamp":"2025-08-13T15:46:41.466Z"}
{"parentUuid":"e022cc69-9784-4769-bd04-ec4613e59c9d","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_015qFavVoCQeWHsstHwUNrJB","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_016EN6siSXwxvXirCnLcFLRk","name":"Read","input":{"file_path":"/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/review-proposal-ui.tsx"}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":766,"cache_read_input_tokens":41466,"output_tokens":98,"service_tier":"standard"}},"requestId":"req_011CS5yBwn8dfVSaT8RwAhpp","type":"assistant","uuid":"d654a9ec-74dd-464c-b92f-3fc28e85388a","timestamp":"2025-08-13T15:46:41.806Z"}
{"parentUuid":"d654a9ec-74dd-464c-b92f-3fc28e85388a","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_016EN6siSXwxvXirCnLcFLRk","type":"tool_result","content":"     1→'use client';\n     2→import { type FC, useCallback, useEffect, useRef, useState } from 'react';\n     3→import { ReviewProposalInput } from './components/review-proposals-input';\n     4→import { Button } from '@/components/ui/button';\n     5→import { Editor } from '@/components/ui/editor';\n     6→import { newBlock } from '@/lib/editor/index';\n     7→import type { JSONContent } from '@tiptap/react';\n     8→import { useParams } from 'next/navigation';\n     9→import {\n    10→  getReviewProposalById,\n    11→  updateReviewProposal,\n    12→} from '@/db/review-proposals';\n    13→import type { Message } from 'ai';\n    14→import { readStreamableValue, useActions } from 'ai/rsc';\n    15→import { v4 as uuidv4 } from 'uuid';\n    16→import type { AI } from './actions';\n    17→import type { Options } from '@/types/actions';\n    18→import { useHistory } from '../components/workspace-history-list/context';\n    19→import { cn, softPathReplace } from '@/lib/utils';\n    20→import GeneratingOutputLoader from './components/GeneratingOutputLoader';\n    21→import { SESSION_TYPES } from '@/components/editor/ExportContent';\n    22→import { ReviewProposalsSettings } from './components/review-proposals-settings';\n    23→import logger from '@/lib/logger';\n    24→import type { UserInstruction } from './types';\n    25→import axios from 'axios';\n    26→import { PsciZapIcon } from '@/components/icons/psci-icons';\n    27→import { usePostHog } from 'posthog-js/react';\n    28→import { Switch } from '@/components/ui/switch';\n    29→import { Label } from '@/shadcn/components/ui/label';\n    30→import useSWR from 'swr';\n    31→import {\n    32→  ResizableHandle,\n    33→  ResizablePanel,\n    34→  ResizablePanelGroup,\n    35→} from '@/shadcn/components/ui/resizable';\n    36→import { useWorkspaceDispatch, useWorkspaceState } from '../provider';\n    37→import { exists } from '@/lib/type-guards';\n    38→\n    39→interface ReviewProposalProps {\n    40→  threadId?: string;\n    41→  history?: Message[];\n    42→  persist?: boolean;\n    43→}\n    44→\n    45→/**\n    46→ * A component for reviewing proposals using AI.\n    47→ *\n    48→ * This component allows users to enter a requirement and a response, and then\n    49→ * runs an AI review on the response. The AI review generates output based on the\n    50→ * requirement and the response, which is then displayed in the component.\n    51→ *\n    52→ * The component also provides a button for running the AI review and a loading\n    53→ * indicator while the AI review is running.\n    54→ *\n    55→ * @param {string} [requirement] - The requirement to evaluate the response against.\n    56→ * @param {string} [response] - The response to evaluate.\n    57→ * @param {boolean} [persist] - Whether to persist the AI output in the database.\n    58→ *\n    59→ * @returns {ReactElement} - The ReviewProposalUI component.\n    60→ */\n    61→export const ReviewProposalUI: FC<ReviewProposalProps> = () => {\n    62→  const params = useParams();\n    63→  const dispatch = useWorkspaceDispatch();\n    64→  const workspaceState = useWorkspaceState();\n    65→\n    66→  const [requirement, setRequirement] = useState('');\n    67→  const [response, setResponse] = useState('');\n    68→  const [editor, setEditor] = useState<any>(null);\n    69→  const [isGenerating, setIsGenerating] = useState(false);\n    70→  const [isRequirementsToggleOn, setIsRequirementsToggleOn] =\n    71→    useState<boolean>(false);\n    72→  const { submitUserMessage } = useActions<typeof AI>();\n    73→  const [isReviewProposalDataLoaded, setIsReviewProposalDataLoaded] =\n    74→    useState<boolean>(false);\n    75→  const [loading, setLoading] = useState(true);\n    76→  const [reviewProposal, setReviewProposal] = useState<any>(null);\n    77→  const toolbarRef = useRef<HTMLDivElement | null>(null);\n    78→  const [toolbarHeight, setToolbarHeight] = useState<number>(40);\n    79→  const { refreshData } = useHistory();\n    80→  const posthog = usePostHog();\n    81→\n    82→  /**\n    83→   * Initiates the smart check process for reviewing a proposal.\n    84→   *\n    85→   * This function creates a new user message with detailed instructions\n    86→   * for evaluating a proposal response based on specific review criteria.\n    87→   * It formats the instructions and proposal details, then submits the message\n    88→   * for evaluation. The result of the evaluation is processed and displayed.\n    89→   *\n    90→   * Key steps include:\n    91→   * - Setting the generating state to true.\n    92→   * - Creating a new user message with formatted evaluation instructions and proposal details.\n    93→   * - Submitting the message for processing.\n    94→   * - Handling the response by updating the editor content and proposal state.\n    95→   * - Refreshing data and resetting the generating state upon completion.\n    96→   *\n    97→   * It also manages the editor's content and track changes in the proposal review ID.\n    98→   */\n    99→  const handleRunSmartCheck = async () => {\n   100→    setIsGenerating(true);\n   101→    posthog.capture('run_ai_review_button_clicked', {\n   102→      page: 'review-proposal',\n   103→      settings: userInstructions,\n   104→    });\n   105→\n   106→    const newUserMessage: Message = {\n   107→      id: uuidv4(),\n   108→      role: 'user',\n   109→      createdAt: new Date(),\n   110→      content: `\n   111→            You are a proposal evaluator for government contracts. Your role is to critically analyze proposal responses based on specific Review Instructions provided.\n   112→\n   113→            **Instructions:**\n   114→\n   115→            - You will be given one or more Review Instructions, each containing a **Name** and a **Review Instruction**.\n   116→            - Apply each Review Instruction to the proposal response thoroughly.\n   117→            - For each Review Instruction, output your evaluation as per the instruction's requirements.\n   118→\n   119→            **Formatting Guidelines:**\n   120→\n   121→            - Begin each evaluation with the **Name** of the Review Instruction.\n   122→            - Provide your evaluation under the Name, following any specific output guidelines in the Review Instruction.\n   123→            - Separate each evaluation with two newline spacings for clarity.\n   124→\n   125→            **Example Format:**\n   126→\n   127→            Name: Compliance\n   128→\n   129→            Evaluation:\n   130→            [Your evaluation...]\n   131→\n   132→            Name: Readability Level\n   133→\n   134→            Evaluation:\n   135→            [Your evaluation...]\n   136→\n   137→            *Continue this pattern for all Review Instructions.*\n   138→\n   139→            **Remember:**\n   140→\n   141→            - Be precise, objective, and comprehensive in your evaluations.\n   142→            - Provide actionable feedback and suggestions where appropriate.\n   143→            - Ensure your language is professional and adheres to government contracting standards.\n   144→\n   145→            **Here are the Review Instructions:**\n   146→\n   147→            ${userInstructions?.map((ins: UserInstruction) => `Name: ${ins.proposal_reviews_ai_instruction.title}\\n Review Instruction:\\n${ins.proposal_reviews_ai_instruction.description}`).join('\\n\\n')}\n   148→\n   149→            **Here is the requirement and the proposal response:**\n   150→\n   151→            Requirement:\n   152→            ${requirement}\n   153→\n   154→            Response:\n   155→            ${response}\n   156→        `,\n   157→    };\n   158→\n   159→    const options: Partial<Options> = {\n   160→      persist: true,\n   161→      needsTitle: true,\n   162→      // @ts-expect-error not sure fix\n   163→      chatId: params.id ? params.id : null,\n   164→    };\n   165→\n   166→    const result = await submitUserMessage(\n   167→      newUserMessage,\n   168→      options,\n   169→      'review-proposal',\n   170→      {\n   171→        requirement,\n   172→        response,\n   173→      }\n   174→    );\n   175→\n   176→    if (result) {\n   177→      setRequirement('');\n   178→      setResponse('');\n   179→\n   180→      const text = editor.getText();\n   181→      const hasExistingContent = text.trim().length > 0;\n   182→      const spaceToAdd = hasExistingContent ? '\\n\\n' : '';\n   183→\n   184→      let tempContent = `${spaceToAdd}Requirement: ${requirement}\\n\\n`;\n   185→      tempContent += `Response: ${response}`;\n   186→      setEditorContent(tempContent, true);\n   187→      newBlock(editor);\n   188→\n   189→      for await (const v of readStreamableValue(result.stream)) {\n   190→        if (exists(v) && 'content' in v) setEditorContent(v.content, true);\n   191→\n   192→        if ('chatId' in v) {\n   193→          setReviewProposal(() => ({ ...reviewProposal, id: v.chatId }));\n   194→          softPathReplace(`/review-proposal/${v.chatId}`);\n   195→        }\n   196→      }\n   197→      await refreshData();\n   198→      setIsGenerating(false);\n   199→      // * Only do this on first run, reviewProposal is a placeholder object which only has id at this point, following is handled by onDebouncedUpdate.\n   200→      if (!reviewProposal?.user_id) saveContent(editor);\n   201→    }\n   202→  };\n   203→  const setEditorContent = useCallback(\n   204→    (content: JSONContent | string, isInsert = false) => {\n   205→      if (content) {\n   206→        const cleanContent = content.replace(/-\\s*$(?![\\r\\n])/gm, '');\n   207→        let parsedContent = cleanContent;\n   208→\n   209→        // It might be JSON content, though I can't see where it ever will be.  Catch the exception to handle\n   210→        // it not being JSON.\n   211→        try {\n   212→          parsedContent = JSON.parse(cleanContent);\n   213→          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n   214→        } catch (error) {\n   215→          // Expected error so squelch.\n   216→        }\n   217→\n   218→        try {\n   219→          if (isInsert) editor?.commands.insertContent(parsedContent);\n   220→          else editor?.commands.setContent(parsedContent);\n   221→        } catch (error) {\n   222→          console.error(error);\n   223→          if (isInsert)\n   224→            try {\n   225→              editor?.commands.insertContent(parsedContent);\n   226→            } catch (error) {\n   227→              console.error(error);\n   228→            }\n   229→          else editor?.commands.setContent(parsedContent);\n   230→        }\n   231→      }\n   232→    },\n   233→    [editor]\n   234→  );\n   235→\n   236→  const fetchReviewProposal = useCallback(async () => {\n   237→    const reviewProposal = await getReviewProposalById(params.id as string);\n   238→\n   239→    if (!reviewProposal) return;\n   240→\n   241→    setReviewProposal(reviewProposal);\n   242→    editor?.commands.clearContent();\n   243→    if (exists(reviewProposal.content))\n   244→      setEditorContent(reviewProposal.content);\n   245→  }, [editor?.commands, params.id, setEditorContent]);\n   246→\n   247→  useEffect(() => {\n   248→    /**\n   249→     * Fetches the review proposal data and sets the loading state to false.\n   250→     *\n   251→     * @async\n   252→     * @function\n   253→     * @returns {Promise<void>}\n   254→     */\n   255→    const fetchData = async () => {\n   256→      await fetchReviewProposal();\n   257→      setLoading(false);\n   258→      setIsReviewProposalDataLoaded(true);\n   259→    };\n   260→\n   261→    if (params.id && !editor) {\n   262→      fetchData();\n   263→    } else if (editor) {\n   264→      setLoading(false);\n   265→      setIsReviewProposalDataLoaded(true);\n   266→    }\n   267→    // eslint-disable-next-line react-hooks/exhaustive-deps\n   268→  }, [editor, params.id]);\n   269→\n   270→  /**\n   271→   * Save the current editor content to the review proposal\n   272→   *\n   273→   * @param editor - The current editor instance\n   274→   */\n   275→  const saveContent = useCallback(\n   276→    async (editor: any) => {\n   277→      if (reviewProposal?.id && !loading && !isGenerating) {\n   278→        const updatedReviewProposal = await updateReviewProposal(\n   279→          reviewProposal.id,\n   280→          {\n   281→            content: editor.getJSON() || '',\n   282→            updated_at: new Date().toISOString(),\n   283→          }\n   284→        );\n   285→        setReviewProposal(updatedReviewProposal);\n   286→      }\n   287→    },\n   288→    [reviewProposal?.id, loading, isGenerating]\n   289→  );\n   290→\n   291→  const fetcher = async (url: string) => {\n   292→    try {\n   293→      const res = await axios.get(url);\n   294→      return res?.data?.data || [];\n   295→    } catch (cause) {\n   296→      throw new Error('Failed to fetch the user instructions:', { cause });\n   297→    }\n   298→  };\n   299→\n   300→  const {\n   301→    data: userInstructions,\n   302→    mutate: mutateUserInstructions,\n   303→    isLoading: isFetchingInstructions,\n   304→    error,\n   305→  } = useSWR<UserInstruction[]>('/api/ai-review/instructions', fetcher);\n   306→\n   307→  if (error) logger.error('Failed to fetch the user instructions:', error);\n   308→\n   309→  const isSubmitDisabled =\n   310→    !response ||\n   311→    isGenerating ||\n   312→    (isRequirementsToggleOn && !requirement) ||\n   313→    !userInstructions?.length;\n   314→\n   315→  // Set the height of the toolbar dynamically to calculate the height of the editor\n   316→  const updateToolbarHeight = useCallback(() => {\n   317→    if (toolbarRef.current) setToolbarHeight(toolbarRef.current.clientHeight);\n   318→  }, []);\n   319→\n   320→  useEffect(() => {\n   321→    window.addEventListener('resize', updateToolbarHeight);\n   322→    return () => {\n   323→      window.removeEventListener('resize', updateToolbarHeight);\n   324→    };\n   325→  }, [updateToolbarHeight]);\n   326→\n   327→  useEffect(() => {\n   328→    updateToolbarHeight();\n   329→  }, [reviewProposal, updateToolbarHeight]);\n   330→\n   331→  // Effect to handle ADD_TO_DRAFT updates\n   332→  useEffect(() => {\n   333→    if (workspaceState.contents && editor && isReviewProposalDataLoaded) {\n   334→      const text = editor.getText();\n   335→      const hasExistingContent = text.trim().length > 0;\n   336→      const spaceToAdd = hasExistingContent ? '\\n\\n' : '';\n   337→\n   338→      setEditorContent(spaceToAdd + workspaceState.contents, true);\n   339→      saveContent(editor);\n   340→      dispatch({ type: 'SET_CONTENTS', payload: '' });\n   341→    }\n   342→  }, [\n   343→    workspaceState.contents,\n   344→    isReviewProposalDataLoaded,\n   345→    editor,\n   346→    saveContent,\n   347→    setEditorContent,\n   348→    dispatch,\n   349→  ]);\n   350→\n   351→  useEffect(() => {\n   352→    if (isReviewProposalDataLoaded)\n   353→      if (reviewProposal && reviewProposal.content !== null)\n   354→        setEditorContent(reviewProposal.content);\n   355→  }, [isReviewProposalDataLoaded, reviewProposal, setEditorContent]);\n   356→\n   357→  useEffect(\n   358→    () => () => {\n   359→      dispatch({ type: 'SET_CONTENTS', payload: '' });\n   360→    },\n   361→    [dispatch]\n   362→  );\n   363→\n   364→  return (\n   365→    <div className='relative flex flex-col px-5 pt-3 pb-1 max-h-[calc(100vh_-_164px)]'>\n   366→      <div className='flex w-full flex-col items-center justify-between md:flex-row mb-5'>\n   367→        <div className='flex w-full flex-col'>\n   368→          <h2 className='text-2xl font-semibold'>AI Proposal Reviewer</h2>\n   369→          <p className='text-lg font-semibold text-muted-foreground py-1'>\n   370→            Instantly Review Your Content For Anything\n   371→          </p>\n   372→          <p className='text-sm font-normal text-muted-foreground'>\n   373→            Follow the steps below to use AI to analyze your content based on\n   374→            any selected criteria. The AI can check for mock evaluation scoring,\n   375→            risk, keywords, themes, color team reviews, legal compliance,\n   376→            formatting, structure, and much more.\n   377→          </p>\n   378→        </div>\n   379→      </div>\n   380→      <ResizablePanelGroup id='ai-review-panel-group' direction='horizontal'>\n   381→        <ResizablePanel\n   382→          id='input-content'\n   383→          order={1}\n   384→          minSize={25}\n   385→          className='!overflow-auto pr-3 mr-1'\n   386→        >\n   387→          <div className='flex-grow grid gap-4'>\n   388→            <div className='border border-border bg-background rounded-md p-3'>\n   389→              <div className='flex items-center mb-3'>\n   390→                <div\n   391→                  className={cn(\n   392→                    'w-8 h-8 min-w-8 min-h-8 flex border-2 rounded-full justify-center items-center mr-3 flex-none',\n   393→                    response ? 'border-success' : 'border-border'\n   394→                  )}\n   395→                >\n   396→                  1\n   397→                </div>\n   398→                <div className=''>\n   399→                  <p className='text-base font-semibold'>\n   400→                    Select Content to Review\n   401→                  </p>\n   402→                  <p className='text-sm font-normal text-muted-foreground'>\n   403→                    Start by adding your proposal content. This could be a\n   404→                    requirement response, section, executive summary, contract,\n   405→                    etc.\n   406→                  </p>\n   407→                </div>\n   408→              </div>\n   409→              <ReviewProposalInput\n   410→                placeholder='Paste or type the content you want the AI to analyze'\n   411→                setText={setResponse}\n   412→                text={response}\n   413→                testId='response-input'\n   414→              />\n   415→            </div>\n   416→            <div className='border border-border bg-background rounded-md p-3'>\n   417→              <div className='flex items-center'>\n   418→                <div\n   419→                  className={cn(\n   420→                    'w-8 h-8 min-w-8 min-h-8 flex border-2 rounded-full justify-center items-center mr-3 flex-none',\n   421→                    requirement ? 'border-success' : 'border-border'\n   422→                  )}\n   423→                >\n   424→                  2\n   425→                </div>\n   426→                <div className=''>\n   427→                  <p className='text-base font-semibold'>\n   428→                    Optional: Add RFP/RFI Requirements\n   429→                  </p>\n   430→                  <p className='text-sm font-normal text-muted-foreground'>\n   431→                    Not sure? If your proposal has a required structure, strict\n   432→                    numbered requirements, compliance rules, or evaluation\n   433→                    criteria, add them here for increased results.\n   434→                  </p>\n   435→                </div>\n   436→              </div>\n   437→              <div className='flex items-center py-3'>\n   438→                <Switch\n   439→                  id='web-search'\n   440→                  checked={isRequirementsToggleOn}\n   441→                  onCheckedChange={checked => {\n   442→                    setIsRequirementsToggleOn(checked);\n   443→                    setRequirement('');\n   444→                  }}\n   445→                  size='sm'\n   446→                  switchClassNames='size-[12px] data-[state=checked]:translate-x-4'\n   447→                  data-testid='web-search-switch'\n   448→                />\n   449→                <Label htmlFor='web-search' className='text-sm font-bold ml-2'>\n   450→                  I have RFP/RFI requirements to compare against\n   451→                </Label>\n   452→              </div>\n   453→              <ReviewProposalInput\n   454→                placeholder='Paste or type in here any requirements these sections pertain to for analysis of compliance, completeness, and a more thorough review'\n   455→                setText={setRequirement}\n   456→                text={requirement}\n   457→                disabled={!isRequirementsToggleOn}\n   458→                testId='requirement-input'\n   459→              />\n   460→            </div>\n   461→            <div className='border border-border bg-background rounded-md p-3'>\n   462→              <div className='flex items-center mb-3'>\n   463→                <div\n   464→                  className={cn(\n   465→                    'w-8 h-8 min-w-8 min-h-8 flex border-2 rounded-full justify-center items-center mr-3 flex-none',\n   466→                    userInstructions?.length\n   467→                      ? 'border-success'\n   468→                      : 'border-border'\n   469→                  )}\n   470→                >\n   471→                  3\n   472→                </div>\n   473→                <div className=''>\n   474→                  <div className='flex justify-between'>\n   475→                    <p className='text-base font-semibold'>\n   476→                      Set AI Review Instructions\n   477→                    </p>\n   478→                    {isFetchingInstructions ? (\n   479→                      <p className='text-sm font-bold text-blue-500'>\n   480→                        Loading Selections...\n   481→                      </p>\n   482→                    ) : (\n   483→                      <p\n   484→                        className={cn(\n   485→                          'text-sm font-bold',\n   486→                          userInstructions && userInstructions?.length > 0\n   487→                            ? 'text-success'\n   488→                            : 'text-destructive'\n   489→                        )}\n   490→                      >\n   491→                        {userInstructions?.length ?? 0} Instruction(s) Selected\n   492→                      </p>\n   493→                    )}\n   494→                  </div>\n   495→                  <p className='text-sm font-normal text-muted-foreground'>\n   496→                    Customize how the AI analyzes your content. Choose from\n   497→                    global presets, custom criteria, or your team&apos;s\n   498→                    library. Select multiple review areas at once for a\n   499→                    comprehensive analysis.\n   500→                  </p>\n   501→                </div>\n   502→              </div>\n   503→              <ReviewProposalsSettings\n   504→                onSelectionChange={mutateUserInstructions}\n   505→              />\n   506→            </div>\n   507→            <div className='border border-border bg-background rounded-md p-3'>\n   508→              <div className='flex items-center mb-3'>\n   509→                <div\n   510→                  className={cn(\n   511→                    'w-8 h-8 min-w-8 min-h-8 flex border-2 rounded-full justify-center items-center mr-3 flex-none',\n   512→                    isSubmitDisabled ? 'border-border' : 'border-success'\n   513→                  )}\n   514→                >\n   515→                  4\n   516→                </div>\n   517→                <div className=''>\n   518→                  <p className='text-base font-semibold'>Run AI Review</p>\n   519→                  <p className='text-sm font-normal text-muted-foreground'>\n   520→                    Click the button to start the AI review process.\n   521→                  </p>\n   522→                </div>\n   523→              </div>\n   524→              <Button\n   525→                className={cn(\n   526→                  'flex w-full',\n   527→                  isSubmitDisabled && 'opacity-50 cursor-not-allowed'\n   528→                )}\n   529→                size='sm'\n   530→                onClick={handleRunSmartCheck}\n   531→                data-testid='run-smartcheck'\n   532→                disabled={isSubmitDisabled}\n   533→              >\n   534→                {isGenerating ? (\n   535→                  'Analyzing...'\n   536→                ) : (\n   537→                  <>\n   538→                    <PsciZapIcon size={18} className='mr-2' /> Run AI Review\n   539→                  </>\n   540→                )}\n   541→              </Button>\n   542→            </div>\n   543→          </div>\n   544→        </ResizablePanel>\n   545→        <ResizableHandle withHandle className='w-1' />\n   546→        <ResizablePanel\n   547→          id='output-content'\n   548→          order={2}\n   549→          minSize={25}\n   550→          onResize={updateToolbarHeight}\n   551→        >\n   552→          <div className='p-3 border border-border bg-background rounded-md flex flex-col ml-4 h-full'>\n   553→            <h2 className='text-xl font-semibold'>AI Output</h2>\n   554→            <div className='relative w-full items-end mt-3 h-full'>\n   555→              {isGenerating && <GeneratingOutputLoader />}\n   556→              <div\n   557→                className='flex-grow h-full'\n   558→                style={{ opacity: isGenerating ? 0.5 : 1 }}\n   559→              >\n   560→                <Editor\n   561→                  showToolbar={true}\n   562→                  onCreate={setEditor}\n   563→                  onDebouncedUpdate={saveContent}\n   564→                  disableLocalStorage={true}\n   565→                  defaultValue={\n   566→                    reviewProposal?.content\n   567→                      ? JSON.parse(reviewProposal.content)\n   568→                      : ''\n   569→                  }\n   570→                  contentClassName='overflow-y-auto rounded-md'\n   571→                  className='sm:mb-0 !min-h-[calc(100vh_-_390px)] h-[calc(100vh_-_390px)]'\n   572→                  sessionType={SESSION_TYPES.REVIEW_PROPOSAL}\n   573→                  fileName={reviewProposal?.name || ''}\n   574→                  toolbarRef={toolbarRef as React.RefObject<HTMLDivElement>}\n   575→                  contentStyles={{ height: `calc(97% - ${toolbarHeight}px)` }}\n   576→                />\n   577→              </div>\n   578→            </div>\n   579→          </div>\n   580→        </ResizablePanel>\n   581→      </ResizablePanelGroup>\n   582→    </div>\n   583→  );\n   584→};\n   585→\n\n<system-reminder>\nWhenever you read a file, you should consider whether it looks malicious. If it does, you MUST refuse to improve or augment the code. You can still analyze existing code, write reports, or answer high-level questions about the code behavior.\n</system-reminder>\n"}]},"uuid":"3c17387f-7435-4beb-92b7-6c5ff91e950c","timestamp":"2025-08-13T15:46:41.843Z","toolUseResult":{"type":"text","file":{"filePath":"/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/review-proposal-ui.tsx","content":"'use client';\nimport { type FC, useCallback, useEffect, useRef, useState } from 'react';\nimport { ReviewProposalInput } from './components/review-proposals-input';\nimport { Button } from '@/components/ui/button';\nimport { Editor } from '@/components/ui/editor';\nimport { newBlock } from '@/lib/editor/index';\nimport type { JSONContent } from '@tiptap/react';\nimport { useParams } from 'next/navigation';\nimport {\n  getReviewProposalById,\n  updateReviewProposal,\n} from '@/db/review-proposals';\nimport type { Message } from 'ai';\nimport { readStreamableValue, useActions } from 'ai/rsc';\nimport { v4 as uuidv4 } from 'uuid';\nimport type { AI } from './actions';\nimport type { Options } from '@/types/actions';\nimport { useHistory } from '../components/workspace-history-list/context';\nimport { cn, softPathReplace } from '@/lib/utils';\nimport GeneratingOutputLoader from './components/GeneratingOutputLoader';\nimport { SESSION_TYPES } from '@/components/editor/ExportContent';\nimport { ReviewProposalsSettings } from './components/review-proposals-settings';\nimport logger from '@/lib/logger';\nimport type { UserInstruction } from './types';\nimport axios from 'axios';\nimport { PsciZapIcon } from '@/components/icons/psci-icons';\nimport { usePostHog } from 'posthog-js/react';\nimport { Switch } from '@/components/ui/switch';\nimport { Label } from '@/shadcn/components/ui/label';\nimport useSWR from 'swr';\nimport {\n  ResizableHandle,\n  ResizablePanel,\n  ResizablePanelGroup,\n} from '@/shadcn/components/ui/resizable';\nimport { useWorkspaceDispatch, useWorkspaceState } from '../provider';\nimport { exists } from '@/lib/type-guards';\n\ninterface ReviewProposalProps {\n  threadId?: string;\n  history?: Message[];\n  persist?: boolean;\n}\n\n/**\n * A component for reviewing proposals using AI.\n *\n * This component allows users to enter a requirement and a response, and then\n * runs an AI review on the response. The AI review generates output based on the\n * requirement and the response, which is then displayed in the component.\n *\n * The component also provides a button for running the AI review and a loading\n * indicator while the AI review is running.\n *\n * @param {string} [requirement] - The requirement to evaluate the response against.\n * @param {string} [response] - The response to evaluate.\n * @param {boolean} [persist] - Whether to persist the AI output in the database.\n *\n * @returns {ReactElement} - The ReviewProposalUI component.\n */\nexport const ReviewProposalUI: FC<ReviewProposalProps> = () => {\n  const params = useParams();\n  const dispatch = useWorkspaceDispatch();\n  const workspaceState = useWorkspaceState();\n\n  const [requirement, setRequirement] = useState('');\n  const [response, setResponse] = useState('');\n  const [editor, setEditor] = useState<any>(null);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [isRequirementsToggleOn, setIsRequirementsToggleOn] =\n    useState<boolean>(false);\n  const { submitUserMessage } = useActions<typeof AI>();\n  const [isReviewProposalDataLoaded, setIsReviewProposalDataLoaded] =\n    useState<boolean>(false);\n  const [loading, setLoading] = useState(true);\n  const [reviewProposal, setReviewProposal] = useState<any>(null);\n  const toolbarRef = useRef<HTMLDivElement | null>(null);\n  const [toolbarHeight, setToolbarHeight] = useState<number>(40);\n  const { refreshData } = useHistory();\n  const posthog = usePostHog();\n\n  /**\n   * Initiates the smart check process for reviewing a proposal.\n   *\n   * This function creates a new user message with detailed instructions\n   * for evaluating a proposal response based on specific review criteria.\n   * It formats the instructions and proposal details, then submits the message\n   * for evaluation. The result of the evaluation is processed and displayed.\n   *\n   * Key steps include:\n   * - Setting the generating state to true.\n   * - Creating a new user message with formatted evaluation instructions and proposal details.\n   * - Submitting the message for processing.\n   * - Handling the response by updating the editor content and proposal state.\n   * - Refreshing data and resetting the generating state upon completion.\n   *\n   * It also manages the editor's content and track changes in the proposal review ID.\n   */\n  const handleRunSmartCheck = async () => {\n    setIsGenerating(true);\n    posthog.capture('run_ai_review_button_clicked', {\n      page: 'review-proposal',\n      settings: userInstructions,\n    });\n\n    const newUserMessage: Message = {\n      id: uuidv4(),\n      role: 'user',\n      createdAt: new Date(),\n      content: `\n            You are a proposal evaluator for government contracts. Your role is to critically analyze proposal responses based on specific Review Instructions provided.\n\n            **Instructions:**\n\n            - You will be given one or more Review Instructions, each containing a **Name** and a **Review Instruction**.\n            - Apply each Review Instruction to the proposal response thoroughly.\n            - For each Review Instruction, output your evaluation as per the instruction's requirements.\n\n            **Formatting Guidelines:**\n\n            - Begin each evaluation with the **Name** of the Review Instruction.\n            - Provide your evaluation under the Name, following any specific output guidelines in the Review Instruction.\n            - Separate each evaluation with two newline spacings for clarity.\n\n            **Example Format:**\n\n            Name: Compliance\n\n            Evaluation:\n            [Your evaluation...]\n\n            Name: Readability Level\n\n            Evaluation:\n            [Your evaluation...]\n\n            *Continue this pattern for all Review Instructions.*\n\n            **Remember:**\n\n            - Be precise, objective, and comprehensive in your evaluations.\n            - Provide actionable feedback and suggestions where appropriate.\n            - Ensure your language is professional and adheres to government contracting standards.\n\n            **Here are the Review Instructions:**\n\n            ${userInstructions?.map((ins: UserInstruction) => `Name: ${ins.proposal_reviews_ai_instruction.title}\\n Review Instruction:\\n${ins.proposal_reviews_ai_instruction.description}`).join('\\n\\n')}\n\n            **Here is the requirement and the proposal response:**\n\n            Requirement:\n            ${requirement}\n\n            Response:\n            ${response}\n        `,\n    };\n\n    const options: Partial<Options> = {\n      persist: true,\n      needsTitle: true,\n      // @ts-expect-error not sure fix\n      chatId: params.id ? params.id : null,\n    };\n\n    const result = await submitUserMessage(\n      newUserMessage,\n      options,\n      'review-proposal',\n      {\n        requirement,\n        response,\n      }\n    );\n\n    if (result) {\n      setRequirement('');\n      setResponse('');\n\n      const text = editor.getText();\n      const hasExistingContent = text.trim().length > 0;\n      const spaceToAdd = hasExistingContent ? '\\n\\n' : '';\n\n      let tempContent = `${spaceToAdd}Requirement: ${requirement}\\n\\n`;\n      tempContent += `Response: ${response}`;\n      setEditorContent(tempContent, true);\n      newBlock(editor);\n\n      for await (const v of readStreamableValue(result.stream)) {\n        if (exists(v) && 'content' in v) setEditorContent(v.content, true);\n\n        if ('chatId' in v) {\n          setReviewProposal(() => ({ ...reviewProposal, id: v.chatId }));\n          softPathReplace(`/review-proposal/${v.chatId}`);\n        }\n      }\n      await refreshData();\n      setIsGenerating(false);\n      // * Only do this on first run, reviewProposal is a placeholder object which only has id at this point, following is handled by onDebouncedUpdate.\n      if (!reviewProposal?.user_id) saveContent(editor);\n    }\n  };\n  const setEditorContent = useCallback(\n    (content: JSONContent | string, isInsert = false) => {\n      if (content) {\n        const cleanContent = content.replace(/-\\s*$(?![\\r\\n])/gm, '');\n        let parsedContent = cleanContent;\n\n        // It might be JSON content, though I can't see where it ever will be.  Catch the exception to handle\n        // it not being JSON.\n        try {\n          parsedContent = JSON.parse(cleanContent);\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        } catch (error) {\n          // Expected error so squelch.\n        }\n\n        try {\n          if (isInsert) editor?.commands.insertContent(parsedContent);\n          else editor?.commands.setContent(parsedContent);\n        } catch (error) {\n          console.error(error);\n          if (isInsert)\n            try {\n              editor?.commands.insertContent(parsedContent);\n            } catch (error) {\n              console.error(error);\n            }\n          else editor?.commands.setContent(parsedContent);\n        }\n      }\n    },\n    [editor]\n  );\n\n  const fetchReviewProposal = useCallback(async () => {\n    const reviewProposal = await getReviewProposalById(params.id as string);\n\n    if (!reviewProposal) return;\n\n    setReviewProposal(reviewProposal);\n    editor?.commands.clearContent();\n    if (exists(reviewProposal.content))\n      setEditorContent(reviewProposal.content);\n  }, [editor?.commands, params.id, setEditorContent]);\n\n  useEffect(() => {\n    /**\n     * Fetches the review proposal data and sets the loading state to false.\n     *\n     * @async\n     * @function\n     * @returns {Promise<void>}\n     */\n    const fetchData = async () => {\n      await fetchReviewProposal();\n      setLoading(false);\n      setIsReviewProposalDataLoaded(true);\n    };\n\n    if (params.id && !editor) {\n      fetchData();\n    } else if (editor) {\n      setLoading(false);\n      setIsReviewProposalDataLoaded(true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editor, params.id]);\n\n  /**\n   * Save the current editor content to the review proposal\n   *\n   * @param editor - The current editor instance\n   */\n  const saveContent = useCallback(\n    async (editor: any) => {\n      if (reviewProposal?.id && !loading && !isGenerating) {\n        const updatedReviewProposal = await updateReviewProposal(\n          reviewProposal.id,\n          {\n            content: editor.getJSON() || '',\n            updated_at: new Date().toISOString(),\n          }\n        );\n        setReviewProposal(updatedReviewProposal);\n      }\n    },\n    [reviewProposal?.id, loading, isGenerating]\n  );\n\n  const fetcher = async (url: string) => {\n    try {\n      const res = await axios.get(url);\n      return res?.data?.data || [];\n    } catch (cause) {\n      throw new Error('Failed to fetch the user instructions:', { cause });\n    }\n  };\n\n  const {\n    data: userInstructions,\n    mutate: mutateUserInstructions,\n    isLoading: isFetchingInstructions,\n    error,\n  } = useSWR<UserInstruction[]>('/api/ai-review/instructions', fetcher);\n\n  if (error) logger.error('Failed to fetch the user instructions:', error);\n\n  const isSubmitDisabled =\n    !response ||\n    isGenerating ||\n    (isRequirementsToggleOn && !requirement) ||\n    !userInstructions?.length;\n\n  // Set the height of the toolbar dynamically to calculate the height of the editor\n  const updateToolbarHeight = useCallback(() => {\n    if (toolbarRef.current) setToolbarHeight(toolbarRef.current.clientHeight);\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('resize', updateToolbarHeight);\n    return () => {\n      window.removeEventListener('resize', updateToolbarHeight);\n    };\n  }, [updateToolbarHeight]);\n\n  useEffect(() => {\n    updateToolbarHeight();\n  }, [reviewProposal, updateToolbarHeight]);\n\n  // Effect to handle ADD_TO_DRAFT updates\n  useEffect(() => {\n    if (workspaceState.contents && editor && isReviewProposalDataLoaded) {\n      const text = editor.getText();\n      const hasExistingContent = text.trim().length > 0;\n      const spaceToAdd = hasExistingContent ? '\\n\\n' : '';\n\n      setEditorContent(spaceToAdd + workspaceState.contents, true);\n      saveContent(editor);\n      dispatch({ type: 'SET_CONTENTS', payload: '' });\n    }\n  }, [\n    workspaceState.contents,\n    isReviewProposalDataLoaded,\n    editor,\n    saveContent,\n    setEditorContent,\n    dispatch,\n  ]);\n\n  useEffect(() => {\n    if (isReviewProposalDataLoaded)\n      if (reviewProposal && reviewProposal.content !== null)\n        setEditorContent(reviewProposal.content);\n  }, [isReviewProposalDataLoaded, reviewProposal, setEditorContent]);\n\n  useEffect(\n    () => () => {\n      dispatch({ type: 'SET_CONTENTS', payload: '' });\n    },\n    [dispatch]\n  );\n\n  return (\n    <div className='relative flex flex-col px-5 pt-3 pb-1 max-h-[calc(100vh_-_164px)]'>\n      <div className='flex w-full flex-col items-center justify-between md:flex-row mb-5'>\n        <div className='flex w-full flex-col'>\n          <h2 className='text-2xl font-semibold'>AI Proposal Reviewer</h2>\n          <p className='text-lg font-semibold text-muted-foreground py-1'>\n            Instantly Review Your Content For Anything\n          </p>\n          <p className='text-sm font-normal text-muted-foreground'>\n            Follow the steps below to use AI to analyze your content based on\n            any selected criteria. The AI can check for mock evaluation scoring,\n            risk, keywords, themes, color team reviews, legal compliance,\n            formatting, structure, and much more.\n          </p>\n        </div>\n      </div>\n      <ResizablePanelGroup id='ai-review-panel-group' direction='horizontal'>\n        <ResizablePanel\n          id='input-content'\n          order={1}\n          minSize={25}\n          className='!overflow-auto pr-3 mr-1'\n        >\n          <div className='flex-grow grid gap-4'>\n            <div className='border border-border bg-background rounded-md p-3'>\n              <div className='flex items-center mb-3'>\n                <div\n                  className={cn(\n                    'w-8 h-8 min-w-8 min-h-8 flex border-2 rounded-full justify-center items-center mr-3 flex-none',\n                    response ? 'border-success' : 'border-border'\n                  )}\n                >\n                  1\n                </div>\n                <div className=''>\n                  <p className='text-base font-semibold'>\n                    Select Content to Review\n                  </p>\n                  <p className='text-sm font-normal text-muted-foreground'>\n                    Start by adding your proposal content. This could be a\n                    requirement response, section, executive summary, contract,\n                    etc.\n                  </p>\n                </div>\n              </div>\n              <ReviewProposalInput\n                placeholder='Paste or type the content you want the AI to analyze'\n                setText={setResponse}\n                text={response}\n                testId='response-input'\n              />\n            </div>\n            <div className='border border-border bg-background rounded-md p-3'>\n              <div className='flex items-center'>\n                <div\n                  className={cn(\n                    'w-8 h-8 min-w-8 min-h-8 flex border-2 rounded-full justify-center items-center mr-3 flex-none',\n                    requirement ? 'border-success' : 'border-border'\n                  )}\n                >\n                  2\n                </div>\n                <div className=''>\n                  <p className='text-base font-semibold'>\n                    Optional: Add RFP/RFI Requirements\n                  </p>\n                  <p className='text-sm font-normal text-muted-foreground'>\n                    Not sure? If your proposal has a required structure, strict\n                    numbered requirements, compliance rules, or evaluation\n                    criteria, add them here for increased results.\n                  </p>\n                </div>\n              </div>\n              <div className='flex items-center py-3'>\n                <Switch\n                  id='web-search'\n                  checked={isRequirementsToggleOn}\n                  onCheckedChange={checked => {\n                    setIsRequirementsToggleOn(checked);\n                    setRequirement('');\n                  }}\n                  size='sm'\n                  switchClassNames='size-[12px] data-[state=checked]:translate-x-4'\n                  data-testid='web-search-switch'\n                />\n                <Label htmlFor='web-search' className='text-sm font-bold ml-2'>\n                  I have RFP/RFI requirements to compare against\n                </Label>\n              </div>\n              <ReviewProposalInput\n                placeholder='Paste or type in here any requirements these sections pertain to for analysis of compliance, completeness, and a more thorough review'\n                setText={setRequirement}\n                text={requirement}\n                disabled={!isRequirementsToggleOn}\n                testId='requirement-input'\n              />\n            </div>\n            <div className='border border-border bg-background rounded-md p-3'>\n              <div className='flex items-center mb-3'>\n                <div\n                  className={cn(\n                    'w-8 h-8 min-w-8 min-h-8 flex border-2 rounded-full justify-center items-center mr-3 flex-none',\n                    userInstructions?.length\n                      ? 'border-success'\n                      : 'border-border'\n                  )}\n                >\n                  3\n                </div>\n                <div className=''>\n                  <div className='flex justify-between'>\n                    <p className='text-base font-semibold'>\n                      Set AI Review Instructions\n                    </p>\n                    {isFetchingInstructions ? (\n                      <p className='text-sm font-bold text-blue-500'>\n                        Loading Selections...\n                      </p>\n                    ) : (\n                      <p\n                        className={cn(\n                          'text-sm font-bold',\n                          userInstructions && userInstructions?.length > 0\n                            ? 'text-success'\n                            : 'text-destructive'\n                        )}\n                      >\n                        {userInstructions?.length ?? 0} Instruction(s) Selected\n                      </p>\n                    )}\n                  </div>\n                  <p className='text-sm font-normal text-muted-foreground'>\n                    Customize how the AI analyzes your content. Choose from\n                    global presets, custom criteria, or your team&apos;s\n                    library. Select multiple review areas at once for a\n                    comprehensive analysis.\n                  </p>\n                </div>\n              </div>\n              <ReviewProposalsSettings\n                onSelectionChange={mutateUserInstructions}\n              />\n            </div>\n            <div className='border border-border bg-background rounded-md p-3'>\n              <div className='flex items-center mb-3'>\n                <div\n                  className={cn(\n                    'w-8 h-8 min-w-8 min-h-8 flex border-2 rounded-full justify-center items-center mr-3 flex-none',\n                    isSubmitDisabled ? 'border-border' : 'border-success'\n                  )}\n                >\n                  4\n                </div>\n                <div className=''>\n                  <p className='text-base font-semibold'>Run AI Review</p>\n                  <p className='text-sm font-normal text-muted-foreground'>\n                    Click the button to start the AI review process.\n                  </p>\n                </div>\n              </div>\n              <Button\n                className={cn(\n                  'flex w-full',\n                  isSubmitDisabled && 'opacity-50 cursor-not-allowed'\n                )}\n                size='sm'\n                onClick={handleRunSmartCheck}\n                data-testid='run-smartcheck'\n                disabled={isSubmitDisabled}\n              >\n                {isGenerating ? (\n                  'Analyzing...'\n                ) : (\n                  <>\n                    <PsciZapIcon size={18} className='mr-2' /> Run AI Review\n                  </>\n                )}\n              </Button>\n            </div>\n          </div>\n        </ResizablePanel>\n        <ResizableHandle withHandle className='w-1' />\n        <ResizablePanel\n          id='output-content'\n          order={2}\n          minSize={25}\n          onResize={updateToolbarHeight}\n        >\n          <div className='p-3 border border-border bg-background rounded-md flex flex-col ml-4 h-full'>\n            <h2 className='text-xl font-semibold'>AI Output</h2>\n            <div className='relative w-full items-end mt-3 h-full'>\n              {isGenerating && <GeneratingOutputLoader />}\n              <div\n                className='flex-grow h-full'\n                style={{ opacity: isGenerating ? 0.5 : 1 }}\n              >\n                <Editor\n                  showToolbar={true}\n                  onCreate={setEditor}\n                  onDebouncedUpdate={saveContent}\n                  disableLocalStorage={true}\n                  defaultValue={\n                    reviewProposal?.content\n                      ? JSON.parse(reviewProposal.content)\n                      : ''\n                  }\n                  contentClassName='overflow-y-auto rounded-md'\n                  className='sm:mb-0 !min-h-[calc(100vh_-_390px)] h-[calc(100vh_-_390px)]'\n                  sessionType={SESSION_TYPES.REVIEW_PROPOSAL}\n                  fileName={reviewProposal?.name || ''}\n                  toolbarRef={toolbarRef as React.RefObject<HTMLDivElement>}\n                  contentStyles={{ height: `calc(97% - ${toolbarHeight}px)` }}\n                />\n              </div>\n            </div>\n          </div>\n        </ResizablePanel>\n      </ResizablePanelGroup>\n    </div>\n  );\n};\n","numLines":585,"startLine":1,"totalLines":585}}}
{"parentUuid":"3c17387f-7435-4beb-92b7-6c5ff91e950c","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01WFoqYY7pHWj6dXTHUJe6tZ","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Now let me check the History Panel component:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":7872,"cache_read_input_tokens":42232,"output_tokens":99,"service_tier":"standard"}},"requestId":"req_011CS5yCBKiGKt7mnUWFKmRA","type":"assistant","uuid":"f08dd755-cae3-4c0a-bac7-f1ad5b439f0d","timestamp":"2025-08-13T15:46:44.758Z"}
{"parentUuid":"f08dd755-cae3-4c0a-bac7-f1ad5b439f0d","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01WFoqYY7pHWj6dXTHUJe6tZ","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01GjZChxJMLx97EZN64kjNbC","name":"Read","input":{"file_path":"/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/workspace-history-list/history-item.tsx"}}],"stop_reason":"tool_use","stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":7872,"cache_read_input_tokens":42232,"output_tokens":99,"service_tier":"standard"}},"requestId":"req_011CS5yCBKiGKt7mnUWFKmRA","type":"assistant","uuid":"a65bcf3b-34ec-4e29-8cee-23f5640aa33c","timestamp":"2025-08-13T15:46:46.209Z"}
{"parentUuid":"a65bcf3b-34ec-4e29-8cee-23f5640aa33c","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01GjZChxJMLx97EZN64kjNbC","type":"tool_result","content":"     1→'use client';\n     2→\n     3→import { Input } from '@/components/ui/input';\n     4→import { cn, toKebabCase } from '@/lib/utils';\n     5→import Link from 'next/link';\n     6→import { usePathname } from 'next/navigation';\n     7→import {\n     8→  type MouseEventHandler,\n     9→  type MouseEvent,\n    10→  forwardRef,\n    11→  useCallback,\n    12→  useState,\n    13→  useRef,\n    14→  useEffect,\n    15→} from 'react';\n    16→import debounce from 'lodash/debounce';\n    17→\n    18→import CommonDialogBox from '@/components/ui/CommonDialogBox';\n    19→import { capitalizeAndJoin } from '@/components/utility/capitalize-and-join';\n    20→import { AttachToOpportunityDialog } from './attach-to-opportunity-dialog';\n    21→import type { ItemGroup } from '../types';\n    22→import type {\n    23→  HistoryRangeDateState,\n    24→  SessionType,\n    25→} from '../ui/history-filter/typings';\n    26→import {\n    27→  DropdownMenu,\n    28→  DropdownMenuContent,\n    29→  DropdownMenuItem,\n    30→  DropdownMenuSub,\n    31→  DropdownMenuSubContent,\n    32→  DropdownMenuSubTrigger,\n    33→  DropdownMenuTrigger,\n    34→} from '@/components/ui/dropdown-menu';\n    35→import {\n    36→  PsciEllipsisVertical,\n    37→  PsciPaperclipIcon,\n    38→  PsciEditIcon,\n    39→  PsciTrashIcon,\n    40→  PsciUploadIcon,\n    41→  PsciMessageCircle,\n    42→  PsciClipboardCheck,\n    43→  PsciFileText,\n    44→  PsciTag,\n    45→  PsciInfoIcon,\n    46→  PsciFolderPlusIcon,\n    47→} from '@/components/icons/psci-icons';\n    48→import {\n    49→  exportContent,\n    50→  FILE_TYPES,\n    51→  SESSION_TYPES,\n    52→} from '@/components/editor/ExportContent';\n    53→import { usePostHog } from 'posthog-js/react';\n    54→import { SessionTagEditorDialog } from './session-tag-editor-dialog';\n    55→import { Badge } from '@/components/ui/badge';\n    56→import { useHistory } from './context';\n    57→import {\n    58→  Tooltip,\n    59→  TooltipContent,\n    60→  TooltipTrigger,\n    61→} from '@/components/ui/tooltip';\n    62→\n    63→export type SessionItemTag = {\n    64→  session_tag_id: string;\n    65→  name: string;\n    66→  color: string;\n    67→};\n    68→import { useHistoryPanel } from '@/context/historyPanelContext/history-panel-context';\n    69→import { MoveSessionsToFolderDialog } from './move-sessions-to-folder-dialog';\n    70→\n    71→export type HistoryItemType = {\n    72→  id: string;\n    73→  type: SessionType;\n    74→  created_at: string;\n    75→  updated_at: string | null;\n    76→  folder_id?: string | null;\n    77→  item_group_id?: string | null;\n    78→  name: string | null;\n    79→  tags: SessionItemTag[] | null;\n    80→};\n    81→\n    82→export type FilterPayload = {\n    83→  query: string;\n    84→  sessionType?: SessionType;\n    85→  rangeDate?: HistoryRangeDateState;\n    86→  selectedSessionTags?: SessionItemTag[];\n    87→};\n    88→\n    89→export type HistoryContextType = {\n    90→  itemsWithItemGroup: HistoryItemType[] | undefined;\n    91→  sortedData: Record<string, HistoryItemType[]>;\n    92→  itemGroups: ItemGroup[] | undefined;\n    93→  deleteItem: (type: string, id: string, isActive: boolean) => Promise<void>;\n    94→  deleteItems: (\n    95→    historyItems: HistoryItemType[],\n    96→    activeItemId: string\n    97→  ) => Promise<string[]>;\n    98→  moveSessionsToItemGroup: (\n    99→    sessions: HistoryItemType[],\n   100→    groupItemId: string\n   101→  ) => Promise<string[]>;\n   102→  updateItem: (type: string, id: string, name: string) => Promise<void>;\n   103→  setFilters: React.Dispatch<React.SetStateAction<FilterPayload>>;\n   104→  filters: FilterPayload;\n   105→  isLoading: boolean;\n   106→  isInitialLoading: boolean;\n   107→  refreshData: () => Promise<void>;\n   108→  createItemGroup: (name?: string) => Promise<void>;\n   109→  updateItemGroup: (\n   110→    itemId: string,\n   111→    groupItemId: string | null\n   112→  ) => Promise<void>;\n   113→  updateItemGroupName: (groupItem: ItemGroup, name: string) => Promise<void>;\n   114→  deleteItemGroup: (id: string) => Promise<void>;\n   115→  selectedItem: HistoryItemType | null;\n   116→  setSelectedItem: (item: HistoryItemType | null) => void;\n   117→};\n   118→\n   119→interface HistoryItemProps {\n   120→  type: SessionType;\n   121→  item: HistoryItemType;\n   122→  onDelete?: (type: string, id: string, isActive: boolean) => void;\n   123→  onUpdate?: (type: string, id: string, name: string) => void;\n   124→  refetchTags: () => Promise<void>;\n   125→}\n   126→\n   127→export const chatTypeToIcon = (\n   128→  type: SessionType,\n   129→  isActiveItem: boolean,\n   130→  isHistoryPanelCollapsed = false,\n   131→  size = 16\n   132→) => {\n   133→  const iconStyle = cn(\n   134→    'inline',\n   135→    isActiveItem && isHistoryPanelCollapsed && 'text-primary'\n   136→  );\n   137→  switch (type) {\n   138→    case 'chat':\n   139→      return (\n   140→        <PsciMessageCircle\n   141→          size={size}\n   142→          className={cn(iconStyle, 'text-green-500')}\n   143→        />\n   144→      );\n   145→    case 'reviewProposal':\n   146→      return (\n   147→        <PsciClipboardCheck\n   148→          size={size}\n   149→          className={cn(iconStyle, 'text-purple-500')}\n   150→        />\n   151→      );\n   152→    case 'draft':\n   153→      return (\n   154→        <PsciFileText size={size} className={cn(iconStyle, 'text-pink-500')} />\n   155→      );\n   156→    default:\n   157→      return null;\n   158→  }\n   159→};\n   160→export const HistoryItem = forwardRef<HTMLAnchorElement, HistoryItemProps>(\n   161→  ({ type, item, onDelete, onUpdate, refetchTags }, ref) => {\n   162→    const { refreshData } = useHistory();\n   163→    const [openEditDialog, setOpenEditDialog] = useState(false);\n   164→    const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n   165→    const [itemName, setItemName] = useState(item.name ?? '');\n   166→    const [\n   167→      isOpenAttachToOpportunityDialog,\n   168→      setIsOpenAttachToOpportunityDialog,\n   169→    ] = useState<boolean>(false);\n   170→    const [isOpenSessionTagEditorDialog, setIsOpenSessionTagEditorDialog] =\n   171→      useState<boolean>(false);\n   172→    const [isOpenMoveToFolderDialog, setIsOpenMoveToFolderDialog] =\n   173→      useState(false);\n   174→    const pathname = usePathname();\n   175→    const pathSegments = pathname.split('/');\n   176→    const itemId = pathSegments[2];\n   177→    const posthog = usePostHog();\n   178→    const { setSelectedItem } = useHistory();\n   179→    const tagsDivRef = useRef<HTMLDivElement>(null);\n   180→    const [maxVisibleTags, setMaxVisibleTags] = useState<number>(0);\n   181→    const [calculatingVisibleTags, setCalculatingVisibleTags] = useState(true);\n   182→    const showTagsToolTipBadge =\n   183→      !calculatingVisibleTags && item.tags && item.tags.length > maxVisibleTags;\n   184→\n   185→    const isActiveItem = item.id === itemId;\n   186→    const link =\n   187→      type === 'reviewProposal'\n   188→        ? `/review-proposal/${item.id}`\n   189→        : `/${type}/${item.id}`;\n   190→\n   191→    const onInputNameChange = useCallback(\n   192→      (e: React.ChangeEvent<HTMLInputElement>) => {\n   193→        const value = e.target.value.trimStart();\n   194→        setItemName(value);\n   195→      },\n   196→      []\n   197→    );\n   198→\n   199→    const handleDeleteConfirmation = useCallback(() => {\n   200→      onDelete?.(type, item.id, isActiveItem);\n   201→      setOpenDeleteDialog(false);\n   202→    }, [type, item.id, isActiveItem, onDelete]);\n   203→\n   204→    const handleUpdateConfirmation = useCallback(() => {\n   205→      onUpdate?.(type, item.id, itemName);\n   206→      setOpenEditDialog(false);\n   207→    }, [type, item.id, itemName, onUpdate]);\n   208→\n   209→    const handleOnEditIconClick: MouseEventHandler<HTMLDivElement> =\n   210→      useCallback(e => {\n   211→        e.stopPropagation();\n   212→        setOpenEditDialog(true);\n   213→      }, []);\n   214→\n   215→    const handleEditCancel: MouseEventHandler<HTMLDivElement> =\n   216→      useCallback(() => {\n   217→        setOpenEditDialog(false);\n   218→        setItemName(item.name ?? '');\n   219→      }, [item.name]);\n   220→\n   221→    const handleOnDeleteIconClick: MouseEventHandler<HTMLDivElement> =\n   222→      useCallback(e => {\n   223→        e.stopPropagation();\n   224→        setOpenDeleteDialog(true);\n   225→      }, []);\n   226→\n   227→    const handleAttachToOpportunityClick: MouseEventHandler<HTMLDivElement> =\n   228→      useCallback(\n   229→        e => {\n   230→          e.stopPropagation();\n   231→          setIsOpenAttachToOpportunityDialog(true);\n   232→          posthog.capture('attach_to_opportunity_button_clicked');\n   233→        },\n   234→        [posthog]\n   235→      );\n   236→\n   237→    const handleMoveToProjectClick: MouseEventHandler<HTMLDivElement> =\n   238→      useCallback(\n   239→        e => {\n   240→          e.stopPropagation();\n   241→          setIsOpenMoveToFolderDialog(true);\n   242→        },\n   243→        [setIsOpenMoveToFolderDialog]\n   244→      );\n   245→\n   246→    const handleSessionEditTagsClick: MouseEventHandler<HTMLDivElement> =\n   247→      useCallback(\n   248→        e => {\n   249→          e.stopPropagation();\n   250→          setIsOpenSessionTagEditorDialog(true);\n   251→          posthog.capture('session_edit_tags_button_clicked');\n   252→        },\n   253→        [posthog]\n   254→      );\n   255→\n   256→    const handleExport = useCallback(\n   257→      async (\n   258→        e: MouseEvent<HTMLDivElement>,\n   259→        type: FILE_TYPES,\n   260→        sessionType: SESSION_TYPES\n   261→      ) => {\n   262→        e.stopPropagation();\n   263→        await exportContent(type, item.id, item.name ?? '', sessionType);\n   264→      },\n   265→      [item.id, item.name]\n   266→    );\n   267→    const { isHistoryPanelCollapsed, toggleHistoryPanel } = useHistoryPanel();\n   268→\n   269→    const visibleTags = item.tags\n   270→      ?.slice(0, maxVisibleTags)\n   271→      .map((tag: SessionItemTag) => (\n   272→        <Badge\n   273→          className='max-w-[160px] truncate inline-block text-foreground'\n   274→          key={tag.name}\n   275→          style={{ backgroundColor: tag.color }}\n   276→        >\n   277→          {tag.name}\n   278→        </Badge>\n   279→      ));\n   280→\n   281→    const tooltipBadgeTags = item.tags?.map((tag: SessionItemTag) => (\n   282→      <Badge key={tag.name} style={{ backgroundColor: tag.color }}>\n   283→        {tag.name}\n   284→      </Badge>\n   285→    ));\n   286→\n   287→    useEffect(() => {\n   288→      if (!tagsDivRef.current || isHistoryPanelCollapsed) return;\n   289→\n   290→      const calculateVisibleTags = (entry: ResizeObserverEntry) => {\n   291→        setCalculatingVisibleTags(true);\n   292→        const availableTagsDivWidth = entry.contentRect.width;\n   293→        const maxTagWidth = 160;\n   294→        let tagsThatCanBeShown = 0;\n   295→        let tagsDivWidth = 0;\n   296→\n   297→        if (item.tags)\n   298→          for (const tag of item.tags) {\n   299→            // Assuming each character is 10px wide\n   300→            // If a tag has only one character, shadcn badge uses approx 30px to display it\n   301→            let tagWidth = 20 + tag.name.length * 10;\n   302→\n   303→            if (tagWidth > maxTagWidth) tagWidth = 160;\n   304→\n   305→            // 4px is gap between tags\n   306→            tagWidth += 4;\n   307→\n   308→            // 40px for tooltip badge\n   309→            if (tagsDivWidth + tagWidth + 40 < availableTagsDivWidth) {\n   310→              tagsDivWidth += tagWidth;\n   311→              tagsThatCanBeShown += 1;\n   312→            } else {\n   313→              break;\n   314→            }\n   315→          }\n   316→\n   317→        setMaxVisibleTags(tagsThatCanBeShown);\n   318→        setCalculatingVisibleTags(false);\n   319→      };\n   320→\n   321→      const debouncedCalculateVisibleTags = debounce(calculateVisibleTags, 200);\n   322→\n   323→      const observer = new ResizeObserver(entries => {\n   324→        // Since we are only observing one element, we can safely use entries[0]\n   325→        debouncedCalculateVisibleTags(entries[0]);\n   326→      });\n   327→\n   328→      observer.observe(tagsDivRef.current);\n   329→\n   330→      return () => {\n   331→        debouncedCalculateVisibleTags.cancel();\n   332→        observer.disconnect();\n   333→      };\n   334→    }, [isHistoryPanelCollapsed, item.tags]);\n   335→\n   336→    return (\n   337→      <>\n   338→        {!isHistoryPanelCollapsed && (\n   339→          <Link\n   340→            ref={ref}\n   341→            href={link}\n   342→            className={cn(\n   343→              'text-sm justify-between text-muted-foreground overflow-hidden truncate whitespace-nowrap rounded group my-1 px-2 py-1 mx-2 flex flex-wrap items-center hover:bg-muted hover:text-foreground cursor-pointer transition-all',\n   344→              isActiveItem && 'bg-muted'\n   345→            )}\n   346→            onClick={() => setSelectedItem(item)}\n   347→          >\n   348→            <div className={cn('truncate max-w-[90%] flex')}>\n   349→              <div className='mr-1.5 -mt-[2px]'>\n   350→                {chatTypeToIcon(type, isActiveItem, isHistoryPanelCollapsed)}\n   351→              </div>\n   352→              <span title={item.name ?? ''} className='truncate'>\n   353→                {(item.name ?? '').slice(0, 40)}\n   354→              </span>\n   355→            </div>\n   356→            <DropdownMenu>\n   357→              <DropdownMenuTrigger\n   358→                className='-mr-1'\n   359→                onClick={e => e.stopPropagation()}\n   360→              >\n   361→                <PsciEllipsisVertical\n   362→                  size={16}\n   363→                  data-testid={`more-options-${toKebabCase(item?.name ?? '')}`}\n   364→                />\n   365→              </DropdownMenuTrigger>\n   366→              <DropdownMenuContent>\n   367→                <DropdownMenuItem\n   368→                  className='flex gap-2 text-xs py-2 font-[inherit]'\n   369→                  onClick={handleOnEditIconClick}\n   370→                  data-testid={`rename-${toKebabCase(item?.name ?? '')}`}\n   371→                >\n   372→                  <PsciEditIcon className='size-4' />\n   373→                  Rename\n   374→                </DropdownMenuItem>\n   375→                <DropdownMenuItem\n   376→                  className='flex gap-2 text-xs py-2'\n   377→                  onClick={handleSessionEditTagsClick}\n   378→                  data-testid={`session_edit_tags-${toKebabCase(item?.name ?? '')}`}\n   379→                >\n   380→                  <PsciTag className='size-4' />\n   381→                  Edit Tags\n   382→                </DropdownMenuItem>\n   383→                <DropdownMenuItem\n   384→                  className='flex gap-2 text-xs py-2'\n   385→                  onClick={handleAttachToOpportunityClick}\n   386→                  data-testid={`attach-to-opportunity-${toKebabCase(item?.name ?? '')}`}\n   387→                >\n   388→                  <PsciPaperclipIcon className='size-4' />\n   389→                  Attach to Opportunity\n   390→                </DropdownMenuItem>\n   391→                <DropdownMenuItem\n   392→                  className='flex gap-2 text-xs py-2'\n   393→                  onClick={handleMoveToProjectClick}\n   394→                  data-testid={`move-to-project-${toKebabCase(item?.name ?? '')}`}\n   395→                >\n   396→                  <PsciFolderPlusIcon className='size-4' />\n   397→                  Move to Project\n   398→                </DropdownMenuItem>\n   399→                {(type === SESSION_TYPES.REVIEW_PROPOSAL ||\n   400→                  type === SESSION_TYPES.DRAFT) && (\n   401→                  <DropdownMenuSub>\n   402→                    <DropdownMenuSubTrigger\n   403→                      data-testid={`export-button-${toKebabCase(item?.name ?? '')}`}\n   404→                      className='flex gap-2 text-xs py-2'\n   405→                    >\n   406→                      <PsciUploadIcon className='size-4' /> Export\n   407→                    </DropdownMenuSubTrigger>\n   408→                    <DropdownMenuSubContent>\n   409→                      <DropdownMenuItem\n   410→                        className='flex gap-2 text-xs py-2'\n   411→                        onClick={e =>\n   412→                          handleExport(e, FILE_TYPES.PDF, type as SESSION_TYPES)\n   413→                        }\n   414→                        data-testid={`export-to-pdf-${toKebabCase(item?.name ?? '')}`}\n   415→                      >\n   416→                        <PsciUploadIcon className='size-4' /> PDF\n   417→                      </DropdownMenuItem>\n   418→                      <DropdownMenuItem\n   419→                        className='flex gap-2 text-xs py-2'\n   420→                        onClick={e =>\n   421→                          handleExport(\n   422→                            e,\n   423→                            FILE_TYPES.DOCX,\n   424→                            type as SESSION_TYPES\n   425→                          )\n   426→                        }\n   427→                        data-testid={`export-to-docx-${toKebabCase(item?.name ?? '')}`}\n   428→                      >\n   429→                        <PsciUploadIcon className='size-4' /> DOCX\n   430→                      </DropdownMenuItem>\n   431→                    </DropdownMenuSubContent>\n   432→                  </DropdownMenuSub>\n   433→                )}\n   434→                <DropdownMenuItem\n   435→                  className='flex gap-2 text-xs py-2'\n   436→                  onClick={handleOnDeleteIconClick}\n   437→                  data-testid={`delete-${toKebabCase(item?.name ?? '')}`}\n   438→                >\n   439→                  <PsciTrashIcon className='size-4' /> Delete\n   440→                </DropdownMenuItem>\n   441→              </DropdownMenuContent>\n   442→            </DropdownMenu>\n   443→            {item?.tags && item.tags.length > 0 && (\n   444→              <div\n   445→                className={cn(\n   446→                  'flex items-center gap-1 w-full flex-wrap pb-1',\n   447→                  (item.tags?.length ?? 0) > 0 && 'pt-2'\n   448→                )}\n   449→                ref={tagsDivRef}\n   450→              >\n   451→                {!calculatingVisibleTags && visibleTags}\n   452→                {showTagsToolTipBadge && (\n   453→                  <Tooltip>\n   454→                    <TooltipTrigger>\n   455→                      <Badge className='cursor-pointer'>\n   456→                        <PsciInfoIcon size={16}></PsciInfoIcon>\n   457→                      </Badge>\n   458→                    </TooltipTrigger>\n   459→                    <TooltipContent>\n   460→                      <div className='p-2 flex items-center gap-1 w-full flex-wrap'>\n   461→                        {tooltipBadgeTags}\n   462→                      </div>\n   463→                    </TooltipContent>\n   464→                  </Tooltip>\n   465→                )}\n   466→              </div>\n   467→            )}\n   468→          </Link>\n   469→        )}\n   470→\n   471→        {isHistoryPanelCollapsed && (\n   472→          <div\n   473→            className='flex items-center justify-center text-center my-3'\n   474→            onClick={() => toggleHistoryPanel(false)}\n   475→          >\n   476→            {chatTypeToIcon(type, isActiveItem, isHistoryPanelCollapsed, 22)}\n   477→          </div>\n   478→        )}\n   479→\n   480→        <CommonDialogBox\n   481→          open={openDeleteDialog}\n   482→          setOpen={setOpenDeleteDialog}\n   483→          title='Confirm Deletion'\n   484→          content='Are you sure you want to delete this item?'\n   485→          onContinue={handleDeleteConfirmation}\n   486→          continueButtonText='Delete'\n   487→          onCancel={() => setOpenDeleteDialog(false)}\n   488→          confirmButtonClass='bg-destructive/90 text-destructive-foreground hover:bg-destructive'\n   489→        />\n   490→\n   491→        <CommonDialogBox\n   492→          open={openEditDialog}\n   493→          setOpen={setOpenEditDialog}\n   494→          title={`Update ${capitalizeAndJoin(item.type)}`}\n   495→          content={\n   496→            <Input\n   497→              value={itemName}\n   498→              onChange={onInputNameChange}\n   499→              className='max-w-[75%] mx-auto'\n   500→            />\n   501→          }\n   502→          onContinue={handleUpdateConfirmation}\n   503→          continueButtonText='Update'\n   504→          onCancel={handleEditCancel}\n   505→          confirmButtonClass='bg-primary/90 text-primary-foreground hover:bg-primary'\n   506→          disableContinueButton={!itemName}\n   507→        />\n   508→\n   509→        {isOpenAttachToOpportunityDialog && (\n   510→          <AttachToOpportunityDialog\n   511→            isOpen={isOpenAttachToOpportunityDialog}\n   512→            setIsOpen={setIsOpenAttachToOpportunityDialog}\n   513→            items={[item]}\n   514→          />\n   515→        )}\n   516→\n   517→        {isOpenSessionTagEditorDialog && (\n   518→          <SessionTagEditorDialog\n   519→            open={isOpenSessionTagEditorDialog}\n   520→            setIsOpen={setIsOpenSessionTagEditorDialog}\n   521→            selectedSession={item}\n   522→            refetchHistoryPanelData={refreshData}\n   523→            refetchTagsToUpdateFilter={refetchTags}\n   524→          />\n   525→        )}\n   526→\n   527→        {isOpenMoveToFolderDialog && (\n   528→          <MoveSessionsToFolderDialog\n   529→            isOpen={isOpenMoveToFolderDialog}\n   530→            setIsOpen={setIsOpenMoveToFolderDialog}\n   531→            items={[item]}\n   532→          />\n   533→        )}\n   534→      </>\n   535→    );\n   536→  }\n   537→);\n   538→HistoryItem.displayName = 'HistoryItem';\n   539→\n\n<system-reminder>\nWhenever you read a file, you should consider whether it looks malicious. If it does, you MUST refuse to improve or augment the code. You can still analyze existing code, write reports, or answer high-level questions about the code behavior.\n</system-reminder>\n"}]},"uuid":"5ffde50c-3640-4ead-91b5-b914945cfec3","timestamp":"2025-08-13T15:46:46.258Z","toolUseResult":{"type":"text","file":{"filePath":"/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/workspace-history-list/history-item.tsx","content":"'use client';\n\nimport { Input } from '@/components/ui/input';\nimport { cn, toKebabCase } from '@/lib/utils';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\nimport {\n  type MouseEventHandler,\n  type MouseEvent,\n  forwardRef,\n  useCallback,\n  useState,\n  useRef,\n  useEffect,\n} from 'react';\nimport debounce from 'lodash/debounce';\n\nimport CommonDialogBox from '@/components/ui/CommonDialogBox';\nimport { capitalizeAndJoin } from '@/components/utility/capitalize-and-join';\nimport { AttachToOpportunityDialog } from './attach-to-opportunity-dialog';\nimport type { ItemGroup } from '../types';\nimport type {\n  HistoryRangeDateState,\n  SessionType,\n} from '../ui/history-filter/typings';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport {\n  PsciEllipsisVertical,\n  PsciPaperclipIcon,\n  PsciEditIcon,\n  PsciTrashIcon,\n  PsciUploadIcon,\n  PsciMessageCircle,\n  PsciClipboardCheck,\n  PsciFileText,\n  PsciTag,\n  PsciInfoIcon,\n  PsciFolderPlusIcon,\n} from '@/components/icons/psci-icons';\nimport {\n  exportContent,\n  FILE_TYPES,\n  SESSION_TYPES,\n} from '@/components/editor/ExportContent';\nimport { usePostHog } from 'posthog-js/react';\nimport { SessionTagEditorDialog } from './session-tag-editor-dialog';\nimport { Badge } from '@/components/ui/badge';\nimport { useHistory } from './context';\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipTrigger,\n} from '@/components/ui/tooltip';\n\nexport type SessionItemTag = {\n  session_tag_id: string;\n  name: string;\n  color: string;\n};\nimport { useHistoryPanel } from '@/context/historyPanelContext/history-panel-context';\nimport { MoveSessionsToFolderDialog } from './move-sessions-to-folder-dialog';\n\nexport type HistoryItemType = {\n  id: string;\n  type: SessionType;\n  created_at: string;\n  updated_at: string | null;\n  folder_id?: string | null;\n  item_group_id?: string | null;\n  name: string | null;\n  tags: SessionItemTag[] | null;\n};\n\nexport type FilterPayload = {\n  query: string;\n  sessionType?: SessionType;\n  rangeDate?: HistoryRangeDateState;\n  selectedSessionTags?: SessionItemTag[];\n};\n\nexport type HistoryContextType = {\n  itemsWithItemGroup: HistoryItemType[] | undefined;\n  sortedData: Record<string, HistoryItemType[]>;\n  itemGroups: ItemGroup[] | undefined;\n  deleteItem: (type: string, id: string, isActive: boolean) => Promise<void>;\n  deleteItems: (\n    historyItems: HistoryItemType[],\n    activeItemId: string\n  ) => Promise<string[]>;\n  moveSessionsToItemGroup: (\n    sessions: HistoryItemType[],\n    groupItemId: string\n  ) => Promise<string[]>;\n  updateItem: (type: string, id: string, name: string) => Promise<void>;\n  setFilters: React.Dispatch<React.SetStateAction<FilterPayload>>;\n  filters: FilterPayload;\n  isLoading: boolean;\n  isInitialLoading: boolean;\n  refreshData: () => Promise<void>;\n  createItemGroup: (name?: string) => Promise<void>;\n  updateItemGroup: (\n    itemId: string,\n    groupItemId: string | null\n  ) => Promise<void>;\n  updateItemGroupName: (groupItem: ItemGroup, name: string) => Promise<void>;\n  deleteItemGroup: (id: string) => Promise<void>;\n  selectedItem: HistoryItemType | null;\n  setSelectedItem: (item: HistoryItemType | null) => void;\n};\n\ninterface HistoryItemProps {\n  type: SessionType;\n  item: HistoryItemType;\n  onDelete?: (type: string, id: string, isActive: boolean) => void;\n  onUpdate?: (type: string, id: string, name: string) => void;\n  refetchTags: () => Promise<void>;\n}\n\nexport const chatTypeToIcon = (\n  type: SessionType,\n  isActiveItem: boolean,\n  isHistoryPanelCollapsed = false,\n  size = 16\n) => {\n  const iconStyle = cn(\n    'inline',\n    isActiveItem && isHistoryPanelCollapsed && 'text-primary'\n  );\n  switch (type) {\n    case 'chat':\n      return (\n        <PsciMessageCircle\n          size={size}\n          className={cn(iconStyle, 'text-green-500')}\n        />\n      );\n    case 'reviewProposal':\n      return (\n        <PsciClipboardCheck\n          size={size}\n          className={cn(iconStyle, 'text-purple-500')}\n        />\n      );\n    case 'draft':\n      return (\n        <PsciFileText size={size} className={cn(iconStyle, 'text-pink-500')} />\n      );\n    default:\n      return null;\n  }\n};\nexport const HistoryItem = forwardRef<HTMLAnchorElement, HistoryItemProps>(\n  ({ type, item, onDelete, onUpdate, refetchTags }, ref) => {\n    const { refreshData } = useHistory();\n    const [openEditDialog, setOpenEditDialog] = useState(false);\n    const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n    const [itemName, setItemName] = useState(item.name ?? '');\n    const [\n      isOpenAttachToOpportunityDialog,\n      setIsOpenAttachToOpportunityDialog,\n    ] = useState<boolean>(false);\n    const [isOpenSessionTagEditorDialog, setIsOpenSessionTagEditorDialog] =\n      useState<boolean>(false);\n    const [isOpenMoveToFolderDialog, setIsOpenMoveToFolderDialog] =\n      useState(false);\n    const pathname = usePathname();\n    const pathSegments = pathname.split('/');\n    const itemId = pathSegments[2];\n    const posthog = usePostHog();\n    const { setSelectedItem } = useHistory();\n    const tagsDivRef = useRef<HTMLDivElement>(null);\n    const [maxVisibleTags, setMaxVisibleTags] = useState<number>(0);\n    const [calculatingVisibleTags, setCalculatingVisibleTags] = useState(true);\n    const showTagsToolTipBadge =\n      !calculatingVisibleTags && item.tags && item.tags.length > maxVisibleTags;\n\n    const isActiveItem = item.id === itemId;\n    const link =\n      type === 'reviewProposal'\n        ? `/review-proposal/${item.id}`\n        : `/${type}/${item.id}`;\n\n    const onInputNameChange = useCallback(\n      (e: React.ChangeEvent<HTMLInputElement>) => {\n        const value = e.target.value.trimStart();\n        setItemName(value);\n      },\n      []\n    );\n\n    const handleDeleteConfirmation = useCallback(() => {\n      onDelete?.(type, item.id, isActiveItem);\n      setOpenDeleteDialog(false);\n    }, [type, item.id, isActiveItem, onDelete]);\n\n    const handleUpdateConfirmation = useCallback(() => {\n      onUpdate?.(type, item.id, itemName);\n      setOpenEditDialog(false);\n    }, [type, item.id, itemName, onUpdate]);\n\n    const handleOnEditIconClick: MouseEventHandler<HTMLDivElement> =\n      useCallback(e => {\n        e.stopPropagation();\n        setOpenEditDialog(true);\n      }, []);\n\n    const handleEditCancel: MouseEventHandler<HTMLDivElement> =\n      useCallback(() => {\n        setOpenEditDialog(false);\n        setItemName(item.name ?? '');\n      }, [item.name]);\n\n    const handleOnDeleteIconClick: MouseEventHandler<HTMLDivElement> =\n      useCallback(e => {\n        e.stopPropagation();\n        setOpenDeleteDialog(true);\n      }, []);\n\n    const handleAttachToOpportunityClick: MouseEventHandler<HTMLDivElement> =\n      useCallback(\n        e => {\n          e.stopPropagation();\n          setIsOpenAttachToOpportunityDialog(true);\n          posthog.capture('attach_to_opportunity_button_clicked');\n        },\n        [posthog]\n      );\n\n    const handleMoveToProjectClick: MouseEventHandler<HTMLDivElement> =\n      useCallback(\n        e => {\n          e.stopPropagation();\n          setIsOpenMoveToFolderDialog(true);\n        },\n        [setIsOpenMoveToFolderDialog]\n      );\n\n    const handleSessionEditTagsClick: MouseEventHandler<HTMLDivElement> =\n      useCallback(\n        e => {\n          e.stopPropagation();\n          setIsOpenSessionTagEditorDialog(true);\n          posthog.capture('session_edit_tags_button_clicked');\n        },\n        [posthog]\n      );\n\n    const handleExport = useCallback(\n      async (\n        e: MouseEvent<HTMLDivElement>,\n        type: FILE_TYPES,\n        sessionType: SESSION_TYPES\n      ) => {\n        e.stopPropagation();\n        await exportContent(type, item.id, item.name ?? '', sessionType);\n      },\n      [item.id, item.name]\n    );\n    const { isHistoryPanelCollapsed, toggleHistoryPanel } = useHistoryPanel();\n\n    const visibleTags = item.tags\n      ?.slice(0, maxVisibleTags)\n      .map((tag: SessionItemTag) => (\n        <Badge\n          className='max-w-[160px] truncate inline-block text-foreground'\n          key={tag.name}\n          style={{ backgroundColor: tag.color }}\n        >\n          {tag.name}\n        </Badge>\n      ));\n\n    const tooltipBadgeTags = item.tags?.map((tag: SessionItemTag) => (\n      <Badge key={tag.name} style={{ backgroundColor: tag.color }}>\n        {tag.name}\n      </Badge>\n    ));\n\n    useEffect(() => {\n      if (!tagsDivRef.current || isHistoryPanelCollapsed) return;\n\n      const calculateVisibleTags = (entry: ResizeObserverEntry) => {\n        setCalculatingVisibleTags(true);\n        const availableTagsDivWidth = entry.contentRect.width;\n        const maxTagWidth = 160;\n        let tagsThatCanBeShown = 0;\n        let tagsDivWidth = 0;\n\n        if (item.tags)\n          for (const tag of item.tags) {\n            // Assuming each character is 10px wide\n            // If a tag has only one character, shadcn badge uses approx 30px to display it\n            let tagWidth = 20 + tag.name.length * 10;\n\n            if (tagWidth > maxTagWidth) tagWidth = 160;\n\n            // 4px is gap between tags\n            tagWidth += 4;\n\n            // 40px for tooltip badge\n            if (tagsDivWidth + tagWidth + 40 < availableTagsDivWidth) {\n              tagsDivWidth += tagWidth;\n              tagsThatCanBeShown += 1;\n            } else {\n              break;\n            }\n          }\n\n        setMaxVisibleTags(tagsThatCanBeShown);\n        setCalculatingVisibleTags(false);\n      };\n\n      const debouncedCalculateVisibleTags = debounce(calculateVisibleTags, 200);\n\n      const observer = new ResizeObserver(entries => {\n        // Since we are only observing one element, we can safely use entries[0]\n        debouncedCalculateVisibleTags(entries[0]);\n      });\n\n      observer.observe(tagsDivRef.current);\n\n      return () => {\n        debouncedCalculateVisibleTags.cancel();\n        observer.disconnect();\n      };\n    }, [isHistoryPanelCollapsed, item.tags]);\n\n    return (\n      <>\n        {!isHistoryPanelCollapsed && (\n          <Link\n            ref={ref}\n            href={link}\n            className={cn(\n              'text-sm justify-between text-muted-foreground overflow-hidden truncate whitespace-nowrap rounded group my-1 px-2 py-1 mx-2 flex flex-wrap items-center hover:bg-muted hover:text-foreground cursor-pointer transition-all',\n              isActiveItem && 'bg-muted'\n            )}\n            onClick={() => setSelectedItem(item)}\n          >\n            <div className={cn('truncate max-w-[90%] flex')}>\n              <div className='mr-1.5 -mt-[2px]'>\n                {chatTypeToIcon(type, isActiveItem, isHistoryPanelCollapsed)}\n              </div>\n              <span title={item.name ?? ''} className='truncate'>\n                {(item.name ?? '').slice(0, 40)}\n              </span>\n            </div>\n            <DropdownMenu>\n              <DropdownMenuTrigger\n                className='-mr-1'\n                onClick={e => e.stopPropagation()}\n              >\n                <PsciEllipsisVertical\n                  size={16}\n                  data-testid={`more-options-${toKebabCase(item?.name ?? '')}`}\n                />\n              </DropdownMenuTrigger>\n              <DropdownMenuContent>\n                <DropdownMenuItem\n                  className='flex gap-2 text-xs py-2 font-[inherit]'\n                  onClick={handleOnEditIconClick}\n                  data-testid={`rename-${toKebabCase(item?.name ?? '')}`}\n                >\n                  <PsciEditIcon className='size-4' />\n                  Rename\n                </DropdownMenuItem>\n                <DropdownMenuItem\n                  className='flex gap-2 text-xs py-2'\n                  onClick={handleSessionEditTagsClick}\n                  data-testid={`session_edit_tags-${toKebabCase(item?.name ?? '')}`}\n                >\n                  <PsciTag className='size-4' />\n                  Edit Tags\n                </DropdownMenuItem>\n                <DropdownMenuItem\n                  className='flex gap-2 text-xs py-2'\n                  onClick={handleAttachToOpportunityClick}\n                  data-testid={`attach-to-opportunity-${toKebabCase(item?.name ?? '')}`}\n                >\n                  <PsciPaperclipIcon className='size-4' />\n                  Attach to Opportunity\n                </DropdownMenuItem>\n                <DropdownMenuItem\n                  className='flex gap-2 text-xs py-2'\n                  onClick={handleMoveToProjectClick}\n                  data-testid={`move-to-project-${toKebabCase(item?.name ?? '')}`}\n                >\n                  <PsciFolderPlusIcon className='size-4' />\n                  Move to Project\n                </DropdownMenuItem>\n                {(type === SESSION_TYPES.REVIEW_PROPOSAL ||\n                  type === SESSION_TYPES.DRAFT) && (\n                  <DropdownMenuSub>\n                    <DropdownMenuSubTrigger\n                      data-testid={`export-button-${toKebabCase(item?.name ?? '')}`}\n                      className='flex gap-2 text-xs py-2'\n                    >\n                      <PsciUploadIcon className='size-4' /> Export\n                    </DropdownMenuSubTrigger>\n                    <DropdownMenuSubContent>\n                      <DropdownMenuItem\n                        className='flex gap-2 text-xs py-2'\n                        onClick={e =>\n                          handleExport(e, FILE_TYPES.PDF, type as SESSION_TYPES)\n                        }\n                        data-testid={`export-to-pdf-${toKebabCase(item?.name ?? '')}`}\n                      >\n                        <PsciUploadIcon className='size-4' /> PDF\n                      </DropdownMenuItem>\n                      <DropdownMenuItem\n                        className='flex gap-2 text-xs py-2'\n                        onClick={e =>\n                          handleExport(\n                            e,\n                            FILE_TYPES.DOCX,\n                            type as SESSION_TYPES\n                          )\n                        }\n                        data-testid={`export-to-docx-${toKebabCase(item?.name ?? '')}`}\n                      >\n                        <PsciUploadIcon className='size-4' /> DOCX\n                      </DropdownMenuItem>\n                    </DropdownMenuSubContent>\n                  </DropdownMenuSub>\n                )}\n                <DropdownMenuItem\n                  className='flex gap-2 text-xs py-2'\n                  onClick={handleOnDeleteIconClick}\n                  data-testid={`delete-${toKebabCase(item?.name ?? '')}`}\n                >\n                  <PsciTrashIcon className='size-4' /> Delete\n                </DropdownMenuItem>\n              </DropdownMenuContent>\n            </DropdownMenu>\n            {item?.tags && item.tags.length > 0 && (\n              <div\n                className={cn(\n                  'flex items-center gap-1 w-full flex-wrap pb-1',\n                  (item.tags?.length ?? 0) > 0 && 'pt-2'\n                )}\n                ref={tagsDivRef}\n              >\n                {!calculatingVisibleTags && visibleTags}\n                {showTagsToolTipBadge && (\n                  <Tooltip>\n                    <TooltipTrigger>\n                      <Badge className='cursor-pointer'>\n                        <PsciInfoIcon size={16}></PsciInfoIcon>\n                      </Badge>\n                    </TooltipTrigger>\n                    <TooltipContent>\n                      <div className='p-2 flex items-center gap-1 w-full flex-wrap'>\n                        {tooltipBadgeTags}\n                      </div>\n                    </TooltipContent>\n                  </Tooltip>\n                )}\n              </div>\n            )}\n          </Link>\n        )}\n\n        {isHistoryPanelCollapsed && (\n          <div\n            className='flex items-center justify-center text-center my-3'\n            onClick={() => toggleHistoryPanel(false)}\n          >\n            {chatTypeToIcon(type, isActiveItem, isHistoryPanelCollapsed, 22)}\n          </div>\n        )}\n\n        <CommonDialogBox\n          open={openDeleteDialog}\n          setOpen={setOpenDeleteDialog}\n          title='Confirm Deletion'\n          content='Are you sure you want to delete this item?'\n          onContinue={handleDeleteConfirmation}\n          continueButtonText='Delete'\n          onCancel={() => setOpenDeleteDialog(false)}\n          confirmButtonClass='bg-destructive/90 text-destructive-foreground hover:bg-destructive'\n        />\n\n        <CommonDialogBox\n          open={openEditDialog}\n          setOpen={setOpenEditDialog}\n          title={`Update ${capitalizeAndJoin(item.type)}`}\n          content={\n            <Input\n              value={itemName}\n              onChange={onInputNameChange}\n              className='max-w-[75%] mx-auto'\n            />\n          }\n          onContinue={handleUpdateConfirmation}\n          continueButtonText='Update'\n          onCancel={handleEditCancel}\n          confirmButtonClass='bg-primary/90 text-primary-foreground hover:bg-primary'\n          disableContinueButton={!itemName}\n        />\n\n        {isOpenAttachToOpportunityDialog && (\n          <AttachToOpportunityDialog\n            isOpen={isOpenAttachToOpportunityDialog}\n            setIsOpen={setIsOpenAttachToOpportunityDialog}\n            items={[item]}\n          />\n        )}\n\n        {isOpenSessionTagEditorDialog && (\n          <SessionTagEditorDialog\n            open={isOpenSessionTagEditorDialog}\n            setIsOpen={setIsOpenSessionTagEditorDialog}\n            selectedSession={item}\n            refetchHistoryPanelData={refreshData}\n            refetchTagsToUpdateFilter={refetchTags}\n          />\n        )}\n\n        {isOpenMoveToFolderDialog && (\n          <MoveSessionsToFolderDialog\n            isOpen={isOpenMoveToFolderDialog}\n            setIsOpen={setIsOpenMoveToFolderDialog}\n            items={[item]}\n          />\n        )}\n      </>\n    );\n  }\n);\nHistoryItem.displayName = 'HistoryItem';\n","numLines":539,"startLine":1,"totalLines":539}}}
{"parentUuid":"5ffde50c-3640-4ead-91b5-b914945cfec3","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_018jH61xgoutptnsdA5ocX94","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Let me examine the export functionality to understand how PDF export is supposed to work:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":7242,"cache_read_input_tokens":50104,"output_tokens":95,"service_tier":"standard"}},"requestId":"req_011CS5yCWCXQ73PvuLJyVPGt","type":"assistant","uuid":"e2c8e80b-87d8-43f0-a70e-6c4ed3caf081","timestamp":"2025-08-13T15:46:49.373Z"}
{"parentUuid":"e2c8e80b-87d8-43f0-a70e-6c4ed3caf081","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_018jH61xgoutptnsdA5ocX94","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_011USoyeA7Cp6453ege4kGSM","name":"Read","input":{"file_path":"/Users/luke/code/psci/chatbot-ui-2/components/editor/ExportContent.tsx"}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":7242,"cache_read_input_tokens":50104,"output_tokens":95,"service_tier":"standard"}},"requestId":"req_011CS5yCWCXQ73PvuLJyVPGt","type":"assistant","uuid":"43040779-5973-484a-9def-0d15b128f1f4","timestamp":"2025-08-13T15:46:50.054Z"}
{"parentUuid":"43040779-5973-484a-9def-0d15b128f1f4","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_011USoyeA7Cp6453ege4kGSM","type":"tool_result","content":"     1→import { toast } from 'sonner';\n     2→\n     3→export enum FILE_TYPES {\n     4→  DOCX = 'docx',\n     5→  PDF = 'pdf',\n     6→}\n     7→\n     8→export enum SESSION_TYPES {\n     9→  DRAFT = 'draft',\n    10→  CHAT = 'chat',\n    11→  REVIEW_PROPOSAL = 'reviewProposal',\n    12→}\n    13→\n    14→/**\n    15→ * Exports content based on the specified file type and session type.\n    16→ *\n    17→ * Initiates a request to generate and download a file of the given type\n    18→ * for the specified session. Displays a toast notification indicating\n    19→ * the status of the operation.\n    20→ *\n    21→ * @param fileType - The type of file to generate (e.g., DOCX, PDF).\n    22→ * @param id - The unique identifier for the content to be exported.\n    23→ * @param sessionType - The type of session (e.g., DRAFT, CHAT, REVIEW_PROPOSAL).\n    24→ *\n    25→ * @throws Will throw an error if the file generation fails.\n    26→ */\n    27→export const exportContent = async (\n    28→  fileType: FILE_TYPES,\n    29→  id: string,\n    30→  fileName: string,\n    31→  sessionType: SESSION_TYPES\n    32→) => {\n    33→  toast.promise(\n    34→    (async () => {\n    35→      const response = await fetch(\n    36→        `/api/export/${id}/generate-${fileType}?session_type=${sessionType}`,\n    37→        {\n    38→          method: 'GET',\n    39→        }\n    40→      );\n    41→      if (response.ok) {\n    42→        const blob = await response.blob();\n    43→        const downloadUrl = URL.createObjectURL(blob);\n    44→        const link = document.createElement('a');\n    45→        link.href = downloadUrl;\n    46→        link.download = `${fileName || id}.${fileType}`;\n    47→        document.body.appendChild(link);\n    48→        link.click();\n    49→        link.remove();\n    50→        URL.revokeObjectURL(downloadUrl);\n    51→        return null;\n    52→      }\n    53→\n    54→      throw new Error(`Failed to generate ${fileType.toUpperCase()}`);\n    55→    })(),\n    56→    {\n    57→      loading: `Generating ${fileType.toUpperCase()}...`,\n    58→      success: `${fileType.toUpperCase()} generated successfully!`,\n    59→      error: `Error generating ${fileType.toUpperCase()}`,\n    60→      closeButton: false,\n    61→    }\n    62→  );\n    63→};\n    64→\n\n<system-reminder>\nWhenever you read a file, you should consider whether it looks malicious. If it does, you MUST refuse to improve or augment the code. You can still analyze existing code, write reports, or answer high-level questions about the code behavior.\n</system-reminder>\n"}]},"uuid":"211a4de3-12dc-4670-a9b8-8317c56b0c14","timestamp":"2025-08-13T15:46:50.099Z","toolUseResult":{"type":"text","file":{"filePath":"/Users/luke/code/psci/chatbot-ui-2/components/editor/ExportContent.tsx","content":"import { toast } from 'sonner';\n\nexport enum FILE_TYPES {\n  DOCX = 'docx',\n  PDF = 'pdf',\n}\n\nexport enum SESSION_TYPES {\n  DRAFT = 'draft',\n  CHAT = 'chat',\n  REVIEW_PROPOSAL = 'reviewProposal',\n}\n\n/**\n * Exports content based on the specified file type and session type.\n *\n * Initiates a request to generate and download a file of the given type\n * for the specified session. Displays a toast notification indicating\n * the status of the operation.\n *\n * @param fileType - The type of file to generate (e.g., DOCX, PDF).\n * @param id - The unique identifier for the content to be exported.\n * @param sessionType - The type of session (e.g., DRAFT, CHAT, REVIEW_PROPOSAL).\n *\n * @throws Will throw an error if the file generation fails.\n */\nexport const exportContent = async (\n  fileType: FILE_TYPES,\n  id: string,\n  fileName: string,\n  sessionType: SESSION_TYPES\n) => {\n  toast.promise(\n    (async () => {\n      const response = await fetch(\n        `/api/export/${id}/generate-${fileType}?session_type=${sessionType}`,\n        {\n          method: 'GET',\n        }\n      );\n      if (response.ok) {\n        const blob = await response.blob();\n        const downloadUrl = URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = downloadUrl;\n        link.download = `${fileName || id}.${fileType}`;\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n        URL.revokeObjectURL(downloadUrl);\n        return null;\n      }\n\n      throw new Error(`Failed to generate ${fileType.toUpperCase()}`);\n    })(),\n    {\n      loading: `Generating ${fileType.toUpperCase()}...`,\n      success: `${fileType.toUpperCase()} generated successfully!`,\n      error: `Error generating ${fileType.toUpperCase()}`,\n      closeButton: false,\n    }\n  );\n};\n","numLines":64,"startLine":1,"totalLines":64}}}
{"parentUuid":"211a4de3-12dc-4670-a9b8-8317c56b0c14","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01XBD2U4Fd26DDjGaKXfSQ6n","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Now let me check if there's an API route for the export functionality:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":920,"cache_read_input_tokens":57346,"output_tokens":73,"service_tier":"standard"}},"requestId":"req_011CS5yCn41xAAmijsyHEdg4","type":"assistant","uuid":"cae0d76a-dbac-4d78-823f-b5036b668919","timestamp":"2025-08-13T15:46:53.172Z"}
{"parentUuid":"cae0d76a-dbac-4d78-823f-b5036b668919","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01XBD2U4Fd26DDjGaKXfSQ6n","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01WTBdgPAfkSL36PsBrqc3vH","name":"Glob","input":{"pattern":"**/api/export/**"}}],"stop_reason":"tool_use","stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":920,"cache_read_input_tokens":57346,"output_tokens":73,"service_tier":"standard"}},"requestId":"req_011CS5yCn41xAAmijsyHEdg4","type":"assistant","uuid":"4ca33b6a-56f8-4206-a6a2-60daffbfc87f","timestamp":"2025-08-13T15:46:53.458Z"}
{"parentUuid":"4ca33b6a-56f8-4206-a6a2-60daffbfc87f","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01WTBdgPAfkSL36PsBrqc3vH","type":"tool_result","content":"/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-docx/route.ts\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts"}]},"uuid":"5347b28d-f5a9-4edf-9192-69f14a6612ed","timestamp":"2025-08-13T15:46:54.832Z","toolUseResult":{"filenames":["/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-docx/route.ts","/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts"],"durationMs":1343,"numFiles":2,"truncated":false}}
{"parentUuid":"5347b28d-f5a9-4edf-9192-69f14a6612ed","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01P1hqfzesvQbv7kFXBaxXpG","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Let me examine the API route for PDF generation:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":152,"cache_read_input_tokens":58266,"output_tokens":96,"service_tier":"standard"}},"requestId":"req_011CS5yD8vNuU8yJknZAPTeY","type":"assistant","uuid":"2a796d5a-5853-4a7c-8c54-b3b42cb5ed4d","timestamp":"2025-08-13T15:46:57.616Z"}
{"parentUuid":"2a796d5a-5853-4a7c-8c54-b3b42cb5ed4d","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01P1hqfzesvQbv7kFXBaxXpG","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_0148T4G8Nh1JWYtJBtxsY8Uv","name":"Read","input":{"file_path":"/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts"}}],"stop_reason":"tool_use","stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":152,"cache_read_input_tokens":58266,"output_tokens":96,"service_tier":"standard"}},"requestId":"req_011CS5yD8vNuU8yJknZAPTeY","type":"assistant","uuid":"f354d403-6a8b-4dd7-9ee7-20fae1fc5dc2","timestamp":"2025-08-13T15:46:58.039Z"}
{"parentUuid":"f354d403-6a8b-4dd7-9ee7-20fae1fc5dc2","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_0148T4G8Nh1JWYtJBtxsY8Uv","type":"tool_result","content":"     1→import { type NextRequest, NextResponse } from 'next/server';\n     2→import puppeteer, { type Browser } from 'puppeteer';\n     3→import { generateHTML } from '@tiptap/html';\n     4→import { TIPTAP_EXTENSIONS, fetchContent } from '@/lib/export-ai-content';\n     5→import logger from '@/lib/logger';\n     6→\n     7→const PDF_RESPONSE_HEADERS = {\n     8→  'Content-Type': 'application/pdf',\n     9→  'Content-Disposition': 'attachment; filename=document.pdf',\n    10→};\n    11→\n    12→const BROWSER_LAUNCH_TIMEOUT = 30000; // 30 seconds\n    13→const PAGE_LOAD_TIMEOUT = 30000; // 30 seconds\n    14→const PDF_GENERATION_TIMEOUT = 30000; // 30 seconds\n    15→\n    16→/**\n    17→ * Handles GET requests to generate a PDF document from HTML content.\n    18→ * Retrieves content based on the provided `id` and `session_type` query parameter,\n    19→ * converts the content to HTML using TIPTAP extensions, and generates a PDF using Puppeteer.\n    20→ * Returns the PDF as a response with appropriate headers or an error message on failure.\n    21→ *\n    22→ * @param req - The incoming Next.js request object.\n    23→ * @param params - An object containing route parameters, including the document `id`.\n    24→ * @returns A NextResponse containing the generated PDF or an error message.\n    25→ */\n    26→export const GET = async (\n    27→  req: NextRequest,\n    28→  { params }: { params: { id: string } }\n    29→) => {\n    30→  let browser: Browser | null = null;\n    31→  try {\n    32→    logger.info('Starting PDF generation process');\n    33→    const { id } = await params;\n    34→    const searchParams: URLSearchParams = req.nextUrl.searchParams;\n    35→    const sessionType: string = searchParams.get('session_type') ?? '';\n    36→\n    37→    logger.info({ id, sessionType }, 'Fetching content');\n    38→    const parsedContent = await fetchContent(id, sessionType);\n    39→    const html = generateHTML(parsedContent, TIPTAP_EXTENSIONS);\n    40→\n    41→    logger.info('Launching browser for PDF generation');\n    42→\n    43→    // Puppeteer known issue with alpine build: https://github.com/puppeteer/puppeteer/issues/12637#issuecomment-2264825922\n    44→    // --disable-gpu was suggested as a solution\n    45→    browser = await puppeteer.launch({\n    46→      args: ['--disable-dev-shm-usage', '--disable-gpu'],\n    47→      timeout: BROWSER_LAUNCH_TIMEOUT,\n    48→      executablePath: process.env.PUPPETEER_EXECUTABLE_PATH,\n    49→      headless: true,\n    50→    });\n    51→\n    52→    logger.info('Generating PDF from content');\n    53→    const pdfBuffer = await generatePDF(browser, html);\n    54→\n    55→    logger.info('PDF generation completed successfully');\n    56→    return new NextResponse(pdfBuffer, {\n    57→      status: 200,\n    58→      headers: PDF_RESPONSE_HEADERS,\n    59→    });\n    60→  } catch (error) {\n    61→    logger.error(\n    62→      {\n    63→        err: error,\n    64→        id: params?.id,\n    65→        sessionType: req.nextUrl.searchParams.get('session_type'),\n    66→      },\n    67→      'Error in PDF generation process'\n    68→    );\n    69→\n    70→    return new NextResponse(\n    71→      JSON.stringify({\n    72→        error: 'Error generating PDF',\n    73→        details: error instanceof Error ? error.message : 'Unknown error',\n    74→      }),\n    75→      {\n    76→        status: 500,\n    77→        headers: { 'Content-Type': 'application/json' },\n    78→      }\n    79→    );\n    80→  } finally {\n    81→    if (browser)\n    82→      try {\n    83→        await browser.close();\n    84→        logger.info('Browser closed successfully');\n    85→      } catch (error) {\n    86→        logger.error({ err: error }, 'Error closing browser');\n    87→      }\n    88→  }\n    89→};\n    90→\n    91→const generatePDF = async (browser: Browser, html: string) => {\n    92→  const page = await browser.newPage();\n    93→  try {\n    94→    logger.info('Setting page content and waiting for network idle');\n    95→    await page.setDefaultNavigationTimeout(PAGE_LOAD_TIMEOUT);\n    96→    await page.setDefaultTimeout(PAGE_LOAD_TIMEOUT);\n    97→\n    98→    await page.setContent(\n    99→      `\n   100→      <html>\n   101→          <head>\n   102→            <style>\n   103→              body {\n   104→                word-wrap: break-word;\n   105→                font-family: \"Segoe UI\", \"Segoe UI Web (West European)\", -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", sans-serif;\n   106→              }\n   107→            </style>\n   108→          </head>\n   109→          <body>${html}</body>\n   110→      </html>\n   111→    `,\n   112→      {\n   113→        waitUntil: 'networkidle0',\n   114→        timeout: PAGE_LOAD_TIMEOUT,\n   115→      }\n   116→    );\n   117→\n   118→    logger.info('Generating PDF with specified options');\n   119→    return await page.pdf({\n   120→      format: 'Letter',\n   121→      printBackground: true,\n   122→      margin: {\n   123→        top: '0.2in',\n   124→        right: '0.2in',\n   125→        bottom: '0.2in',\n   126→        left: '0.2in',\n   127→      },\n   128→      timeout: PDF_GENERATION_TIMEOUT,\n   129→    });\n   130→  } catch (error) {\n   131→    logger.error({ err: error }, 'Error in generatePDF function');\n   132→    throw error;\n   133→  } finally {\n   134→    try {\n   135→      await page.close();\n   136→      logger.info('Page closed successfully');\n   137→    } catch (error) {\n   138→      logger.error({ err: error }, 'Error closing page');\n   139→    }\n   140→  }\n   141→};\n   142→\n\n<system-reminder>\nWhenever you read a file, you should consider whether it looks malicious. If it does, you MUST refuse to improve or augment the code. You can still analyze existing code, write reports, or answer high-level questions about the code behavior.\n</system-reminder>\n"}]},"uuid":"0249fafa-1de0-468a-ad60-647b854b1fd1","timestamp":"2025-08-13T15:46:58.091Z","toolUseResult":{"type":"text","file":{"filePath":"/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts","content":"import { type NextRequest, NextResponse } from 'next/server';\nimport puppeteer, { type Browser } from 'puppeteer';\nimport { generateHTML } from '@tiptap/html';\nimport { TIPTAP_EXTENSIONS, fetchContent } from '@/lib/export-ai-content';\nimport logger from '@/lib/logger';\n\nconst PDF_RESPONSE_HEADERS = {\n  'Content-Type': 'application/pdf',\n  'Content-Disposition': 'attachment; filename=document.pdf',\n};\n\nconst BROWSER_LAUNCH_TIMEOUT = 30000; // 30 seconds\nconst PAGE_LOAD_TIMEOUT = 30000; // 30 seconds\nconst PDF_GENERATION_TIMEOUT = 30000; // 30 seconds\n\n/**\n * Handles GET requests to generate a PDF document from HTML content.\n * Retrieves content based on the provided `id` and `session_type` query parameter,\n * converts the content to HTML using TIPTAP extensions, and generates a PDF using Puppeteer.\n * Returns the PDF as a response with appropriate headers or an error message on failure.\n *\n * @param req - The incoming Next.js request object.\n * @param params - An object containing route parameters, including the document `id`.\n * @returns A NextResponse containing the generated PDF or an error message.\n */\nexport const GET = async (\n  req: NextRequest,\n  { params }: { params: { id: string } }\n) => {\n  let browser: Browser | null = null;\n  try {\n    logger.info('Starting PDF generation process');\n    const { id } = await params;\n    const searchParams: URLSearchParams = req.nextUrl.searchParams;\n    const sessionType: string = searchParams.get('session_type') ?? '';\n\n    logger.info({ id, sessionType }, 'Fetching content');\n    const parsedContent = await fetchContent(id, sessionType);\n    const html = generateHTML(parsedContent, TIPTAP_EXTENSIONS);\n\n    logger.info('Launching browser for PDF generation');\n\n    // Puppeteer known issue with alpine build: https://github.com/puppeteer/puppeteer/issues/12637#issuecomment-2264825922\n    // --disable-gpu was suggested as a solution\n    browser = await puppeteer.launch({\n      args: ['--disable-dev-shm-usage', '--disable-gpu'],\n      timeout: BROWSER_LAUNCH_TIMEOUT,\n      executablePath: process.env.PUPPETEER_EXECUTABLE_PATH,\n      headless: true,\n    });\n\n    logger.info('Generating PDF from content');\n    const pdfBuffer = await generatePDF(browser, html);\n\n    logger.info('PDF generation completed successfully');\n    return new NextResponse(pdfBuffer, {\n      status: 200,\n      headers: PDF_RESPONSE_HEADERS,\n    });\n  } catch (error) {\n    logger.error(\n      {\n        err: error,\n        id: params?.id,\n        sessionType: req.nextUrl.searchParams.get('session_type'),\n      },\n      'Error in PDF generation process'\n    );\n\n    return new NextResponse(\n      JSON.stringify({\n        error: 'Error generating PDF',\n        details: error instanceof Error ? error.message : 'Unknown error',\n      }),\n      {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' },\n      }\n    );\n  } finally {\n    if (browser)\n      try {\n        await browser.close();\n        logger.info('Browser closed successfully');\n      } catch (error) {\n        logger.error({ err: error }, 'Error closing browser');\n      }\n  }\n};\n\nconst generatePDF = async (browser: Browser, html: string) => {\n  const page = await browser.newPage();\n  try {\n    logger.info('Setting page content and waiting for network idle');\n    await page.setDefaultNavigationTimeout(PAGE_LOAD_TIMEOUT);\n    await page.setDefaultTimeout(PAGE_LOAD_TIMEOUT);\n\n    await page.setContent(\n      `\n      <html>\n          <head>\n            <style>\n              body {\n                word-wrap: break-word;\n                font-family: \"Segoe UI\", \"Segoe UI Web (West European)\", -apple-system, BlinkMacSystemFont, Roboto, \"Helvetica Neue\", sans-serif;\n              }\n            </style>\n          </head>\n          <body>${html}</body>\n      </html>\n    `,\n      {\n        waitUntil: 'networkidle0',\n        timeout: PAGE_LOAD_TIMEOUT,\n      }\n    );\n\n    logger.info('Generating PDF with specified options');\n    return await page.pdf({\n      format: 'Letter',\n      printBackground: true,\n      margin: {\n        top: '0.2in',\n        right: '0.2in',\n        bottom: '0.2in',\n        left: '0.2in',\n      },\n      timeout: PDF_GENERATION_TIMEOUT,\n    });\n  } catch (error) {\n    logger.error({ err: error }, 'Error in generatePDF function');\n    throw error;\n  } finally {\n    try {\n      await page.close();\n      logger.info('Page closed successfully');\n    } catch (error) {\n      logger.error({ err: error }, 'Error closing page');\n    }\n  }\n};\n","numLines":142,"startLine":1,"totalLines":142}}}
{"parentUuid":"0249fafa-1de0-468a-ad60-647b854b1fd1","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01Ka9whyqJmE6FddrKE63oUx","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Let me check the export-ai-content utility:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":1947,"cache_read_input_tokens":58418,"output_tokens":90,"service_tier":"standard"}},"requestId":"req_011CS5yDNzxcudkPyGwZx7Nd","type":"assistant","uuid":"63f0a202-290f-4932-811d-f2237869bf08","timestamp":"2025-08-13T15:47:01.006Z"}
{"parentUuid":"63f0a202-290f-4932-811d-f2237869bf08","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01Ka9whyqJmE6FddrKE63oUx","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01KNmpHus4VQPBrS3jfmCG7T","name":"Read","input":{"file_path":"/Users/luke/code/psci/chatbot-ui-2/lib/export-ai-content.ts"}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":1947,"cache_read_input_tokens":58418,"output_tokens":90,"service_tier":"standard"}},"requestId":"req_011CS5yDNzxcudkPyGwZx7Nd","type":"assistant","uuid":"9221285c-ba40-4136-95a7-5d4bb3df8fa8","timestamp":"2025-08-13T15:47:01.168Z"}
{"parentUuid":"9221285c-ba40-4136-95a7-5d4bb3df8fa8","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01KNmpHus4VQPBrS3jfmCG7T","type":"tool_result","content":"     1→import logger from './logger';\n     2→import {\n     3→  getDraftContentById,\n     4→  getReviewProposalContentById,\n     5→} from '@/db/export-ai-content-server';\n     6→import Bold from '@tiptap/extension-bold';\n     7→import Document from '@tiptap/extension-document';\n     8→import Paragraph from '@tiptap/extension-paragraph';\n     9→import Text from '@tiptap/extension-text';\n    10→import Heading from '@tiptap/extension-heading';\n    11→import HardBreak from '@tiptap/extension-hard-break';\n    12→import Highlight from '@tiptap/extension-highlight';\n    13→import Italic from '@tiptap/extension-italic';\n    14→import Strike from '@tiptap/extension-strike';\n    15→import BulletList from '@tiptap/extension-bullet-list';\n    16→import OrderedList from '@tiptap/extension-ordered-list';\n    17→import ListItem from '@tiptap/extension-list-item';\n    18→import TaskItem from '@tiptap/extension-task-item';\n    19→import TaskList from '@tiptap/extension-task-list';\n    20→import CodeBlock from '@tiptap/extension-code-block';\n    21→import Code from '@tiptap/extension-code';\n    22→import Underline from '@tiptap/extension-underline';\n    23→import Image from '@tiptap/extension-image';\n    24→import Table from '@tiptap/extension-table';\n    25→import TableHeader from '@tiptap/extension-table-header';\n    26→import TableRow from '@tiptap/extension-table-row';\n    27→import TableCell from '@tiptap/extension-table-cell';\n    28→import { TextStyle } from '@tiptap/extension-text-style';\n    29→import { Link } from '@tiptap/extension-link';\n    30→import History from '@tiptap/extension-history';\n    31→import Blockquote from '@tiptap/extension-blockquote';\n    32→import HorizontalRule from '@tiptap/extension-horizontal-rule';\n    33→import Dropcursor from '@tiptap/extension-dropcursor';\n    34→import Gapcursor from '@tiptap/extension-gapcursor';\n    35→import CharacterCount from '@tiptap/extension-character-count';\n    36→import Color from '@tiptap/extension-color';\n    37→import TextAlign from '@tiptap/extension-text-align';\n    38→import Typography from '@tiptap/extension-typography';\n    39→import Placeholder from '@tiptap/extension-placeholder';\n    40→\n    41→export const TIPTAP_EXTENSIONS = [\n    42→  Link,\n    43→  TextStyle,\n    44→  Document,\n    45→  Paragraph,\n    46→  Text,\n    47→  Bold,\n    48→  Heading,\n    49→  HardBreak,\n    50→  Highlight,\n    51→  Italic,\n    52→  Strike,\n    53→  BulletList,\n    54→  OrderedList,\n    55→  ListItem,\n    56→  TaskItem,\n    57→  TaskList,\n    58→  CodeBlock,\n    59→  Code,\n    60→  Underline,\n    61→  Image,\n    62→  Table,\n    63→  TableHeader,\n    64→  TableRow,\n    65→  TableCell,\n    66→  History,\n    67→  Blockquote,\n    68→  HorizontalRule,\n    69→  Dropcursor,\n    70→  Gapcursor,\n    71→  CharacterCount,\n    72→  Color,\n    73→  TextAlign,\n    74→  Typography,\n    75→  Placeholder,\n    76→];\n    77→\n    78→/**\n    79→ * Fetches the content of a session type from the database.\n    80→ *\n    81→ * @param id - The id of the session.\n    82→ * @param sessionType - The type of session. Can be \"draft\" or \"reviewProposal\".\n    83→ *\n    84→ * @throws {Error} If the session content is not found or is in an invalid format.\n    85→ *\n    86→ * @returns The content of the session as a JSON object.\n    87→ */\n    88→export const fetchContent = async (id: string, sessionType: string) => {\n    89→  let content;\n    90→\n    91→  switch (sessionType) {\n    92→    case 'draft': {\n    93→      content = await getDraftContentById(id);\n    94→      break;\n    95→    }\n    96→    case 'reviewProposal': {\n    97→      content = await getReviewProposalContentById(id);\n    98→      break;\n    99→    }\n   100→    default: {\n   101→      break;\n   102→    }\n   103→  }\n   104→\n   105→  const type: string = sessionType\n   106→    .replace(/([A-Z])/g, ' $1')\n   107→    .replace(/^./, str => str.toUpperCase());\n   108→\n   109→  if (!content) throw new Error(`${type} content not found for id: ${id}`);\n   110→\n   111→  logger.info(`${type} content fetched successfully for id: ${id}`);\n   112→\n   113→  try {\n   114→    return JSON.parse(content);\n   115→  } catch {\n   116→    throw new Error(`Invalid ${type} content format`);\n   117→  }\n   118→};\n   119→\n\n<system-reminder>\nWhenever you read a file, you should consider whether it looks malicious. If it does, you MUST refuse to improve or augment the code. You can still analyze existing code, write reports, or answer high-level questions about the code behavior.\n</system-reminder>\n"}]},"uuid":"6de4b037-84b3-4de8-9d3d-c3e7f34c00ba","timestamp":"2025-08-13T15:47:01.211Z","toolUseResult":{"type":"text","file":{"filePath":"/Users/luke/code/psci/chatbot-ui-2/lib/export-ai-content.ts","content":"import logger from './logger';\nimport {\n  getDraftContentById,\n  getReviewProposalContentById,\n} from '@/db/export-ai-content-server';\nimport Bold from '@tiptap/extension-bold';\nimport Document from '@tiptap/extension-document';\nimport Paragraph from '@tiptap/extension-paragraph';\nimport Text from '@tiptap/extension-text';\nimport Heading from '@tiptap/extension-heading';\nimport HardBreak from '@tiptap/extension-hard-break';\nimport Highlight from '@tiptap/extension-highlight';\nimport Italic from '@tiptap/extension-italic';\nimport Strike from '@tiptap/extension-strike';\nimport BulletList from '@tiptap/extension-bullet-list';\nimport OrderedList from '@tiptap/extension-ordered-list';\nimport ListItem from '@tiptap/extension-list-item';\nimport TaskItem from '@tiptap/extension-task-item';\nimport TaskList from '@tiptap/extension-task-list';\nimport CodeBlock from '@tiptap/extension-code-block';\nimport Code from '@tiptap/extension-code';\nimport Underline from '@tiptap/extension-underline';\nimport Image from '@tiptap/extension-image';\nimport Table from '@tiptap/extension-table';\nimport TableHeader from '@tiptap/extension-table-header';\nimport TableRow from '@tiptap/extension-table-row';\nimport TableCell from '@tiptap/extension-table-cell';\nimport { TextStyle } from '@tiptap/extension-text-style';\nimport { Link } from '@tiptap/extension-link';\nimport History from '@tiptap/extension-history';\nimport Blockquote from '@tiptap/extension-blockquote';\nimport HorizontalRule from '@tiptap/extension-horizontal-rule';\nimport Dropcursor from '@tiptap/extension-dropcursor';\nimport Gapcursor from '@tiptap/extension-gapcursor';\nimport CharacterCount from '@tiptap/extension-character-count';\nimport Color from '@tiptap/extension-color';\nimport TextAlign from '@tiptap/extension-text-align';\nimport Typography from '@tiptap/extension-typography';\nimport Placeholder from '@tiptap/extension-placeholder';\n\nexport const TIPTAP_EXTENSIONS = [\n  Link,\n  TextStyle,\n  Document,\n  Paragraph,\n  Text,\n  Bold,\n  Heading,\n  HardBreak,\n  Highlight,\n  Italic,\n  Strike,\n  BulletList,\n  OrderedList,\n  ListItem,\n  TaskItem,\n  TaskList,\n  CodeBlock,\n  Code,\n  Underline,\n  Image,\n  Table,\n  TableHeader,\n  TableRow,\n  TableCell,\n  History,\n  Blockquote,\n  HorizontalRule,\n  Dropcursor,\n  Gapcursor,\n  CharacterCount,\n  Color,\n  TextAlign,\n  Typography,\n  Placeholder,\n];\n\n/**\n * Fetches the content of a session type from the database.\n *\n * @param id - The id of the session.\n * @param sessionType - The type of session. Can be \"draft\" or \"reviewProposal\".\n *\n * @throws {Error} If the session content is not found or is in an invalid format.\n *\n * @returns The content of the session as a JSON object.\n */\nexport const fetchContent = async (id: string, sessionType: string) => {\n  let content;\n\n  switch (sessionType) {\n    case 'draft': {\n      content = await getDraftContentById(id);\n      break;\n    }\n    case 'reviewProposal': {\n      content = await getReviewProposalContentById(id);\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n\n  const type: string = sessionType\n    .replace(/([A-Z])/g, ' $1')\n    .replace(/^./, str => str.toUpperCase());\n\n  if (!content) throw new Error(`${type} content not found for id: ${id}`);\n\n  logger.info(`${type} content fetched successfully for id: ${id}`);\n\n  try {\n    return JSON.parse(content);\n  } catch {\n    throw new Error(`Invalid ${type} content format`);\n  }\n};\n","numLines":119,"startLine":1,"totalLines":119}}}
{"parentUuid":"6de4b037-84b3-4de8-9d3d-c3e7f34c00ba","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_017Pc5KW2mTDct5vBQqTPukF","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Let me check the database functions for fetching content:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":1618,"cache_read_input_tokens":60365,"output_tokens":92,"service_tier":"standard"}},"requestId":"req_011CS5yDbgwxfUw95oXC6B3h","type":"assistant","uuid":"addf3914-8b36-46c2-b120-0f9248329272","timestamp":"2025-08-13T15:47:03.836Z"}
{"parentUuid":"addf3914-8b36-46c2-b120-0f9248329272","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_017Pc5KW2mTDct5vBQqTPukF","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01Tvym7mRRTbQ3jLpeYLSegg","name":"Read","input":{"file_path":"/Users/luke/code/psci/chatbot-ui-2/db/export-ai-content-server.ts"}}],"stop_reason":"tool_use","stop_sequence":null,"usage":{"input_tokens":4,"cache_creation_input_tokens":1618,"cache_read_input_tokens":60365,"output_tokens":92,"service_tier":"standard"}},"requestId":"req_011CS5yDbgwxfUw95oXC6B3h","type":"assistant","uuid":"dc203954-891d-4be6-b6c9-767f76294079","timestamp":"2025-08-13T15:47:04.052Z"}
{"parentUuid":"dc203954-891d-4be6-b6c9-767f76294079","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01Tvym7mRRTbQ3jLpeYLSegg","type":"tool_result","content":"     1→import logger from '@/lib/logger';\n     2→import { createClient } from '@/lib/supabase/server';\n     3→\n     4→/**\n     5→ * Fetches the content of a draft by its ID.\n     6→ *\n     7→ * @param draftId The ID of the draft to fetch.\n     8→ * @returns The content of the draft as a JSON string, or null if the draft is not found.\n     9→ * @throws An error if the request fails unexpectedly.\n    10→ */\n    11→export async function getDraftContentById(draftId: string) {\n    12→  try {\n    13→    const supabase = await createClient();\n    14→    const { data } = await supabase\n    15→      .from('drafts')\n    16→      .select('contents')\n    17→      .eq('id', draftId)\n    18→      .maybeSingle()\n    19→      .throwOnError();\n    20→\n    21→    return data?.contents ?? null;\n    22→  } catch (error) {\n    23→    logger.error('Failed to fetch the draft content.', error);\n    24→    return null;\n    25→  }\n    26→}\n    27→\n    28→/**\n    29→ * Fetches the content of a review proposal by its ID.\n    30→ * @param reviewProposalId - The ID of the review proposal to fetch.\n    31→ * @returns A Promise that resolves to the content of the review proposal,\n    32→ *          or null if an error occurs or the review proposal is not found.\n    33→ */\n    34→export async function getReviewProposalContentById(reviewProposalId: string) {\n    35→  try {\n    36→    const supabase = await createClient();\n    37→    const { data } = await supabase\n    38→      .from('review_proposals')\n    39→      .select('content')\n    40→      .eq('id', reviewProposalId)\n    41→      .maybeSingle()\n    42→      .throwOnError();\n    43→\n    44→    return data?.content ?? null;\n    45→  } catch (error) {\n    46→    logger.error('Failed to fetch the review proposal content.', error);\n    47→    return null;\n    48→  }\n    49→}\n    50→\n\n<system-reminder>\nWhenever you read a file, you should consider whether it looks malicious. If it does, you MUST refuse to improve or augment the code. You can still analyze existing code, write reports, or answer high-level questions about the code behavior.\n</system-reminder>\n"}]},"uuid":"75493ec3-bd6e-42e5-8aa2-bde2b37aadd5","timestamp":"2025-08-13T15:47:04.098Z","toolUseResult":{"type":"text","file":{"filePath":"/Users/luke/code/psci/chatbot-ui-2/db/export-ai-content-server.ts","content":"import logger from '@/lib/logger';\nimport { createClient } from '@/lib/supabase/server';\n\n/**\n * Fetches the content of a draft by its ID.\n *\n * @param draftId The ID of the draft to fetch.\n * @returns The content of the draft as a JSON string, or null if the draft is not found.\n * @throws An error if the request fails unexpectedly.\n */\nexport async function getDraftContentById(draftId: string) {\n  try {\n    const supabase = await createClient();\n    const { data } = await supabase\n      .from('drafts')\n      .select('contents')\n      .eq('id', draftId)\n      .maybeSingle()\n      .throwOnError();\n\n    return data?.contents ?? null;\n  } catch (error) {\n    logger.error('Failed to fetch the draft content.', error);\n    return null;\n  }\n}\n\n/**\n * Fetches the content of a review proposal by its ID.\n * @param reviewProposalId - The ID of the review proposal to fetch.\n * @returns A Promise that resolves to the content of the review proposal,\n *          or null if an error occurs or the review proposal is not found.\n */\nexport async function getReviewProposalContentById(reviewProposalId: string) {\n  try {\n    const supabase = await createClient();\n    const { data } = await supabase\n      .from('review_proposals')\n      .select('content')\n      .eq('id', reviewProposalId)\n      .maybeSingle()\n      .throwOnError();\n\n    return data?.content ?? null;\n  } catch (error) {\n    logger.error('Failed to fetch the review proposal content.', error);\n    return null;\n  }\n}\n","numLines":50,"startLine":1,"totalLines":50}}}
{"parentUuid":"75493ec3-bd6e-42e5-8aa2-bde2b37aadd5","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01DqbC2roZBwyypGGoD9Wb9a","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Let me also check if there are any PDF service related files:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":837,"cache_read_input_tokens":61983,"output_tokens":98,"service_tier":"standard"}},"requestId":"req_011CS5yDp1rrhjQXDyHpERnJ","type":"assistant","uuid":"b2dcad8b-262c-4b32-8ff9-c913f44cd0c0","timestamp":"2025-08-13T15:47:06.621Z"}
{"parentUuid":"b2dcad8b-262c-4b32-8ff9-c913f44cd0c0","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01DqbC2roZBwyypGGoD9Wb9a","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01H8kHMFv1iYQQuU5K3ofD3d","name":"Read","input":{"file_path":"/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts"}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":837,"cache_read_input_tokens":61983,"output_tokens":98,"service_tier":"standard"}},"requestId":"req_011CS5yDp1rrhjQXDyHpERnJ","type":"assistant","uuid":"93eb910a-103c-4147-84c5-7b41b1750fdd","timestamp":"2025-08-13T15:47:07.205Z"}
{"parentUuid":"93eb910a-103c-4147-84c5-7b41b1750fdd","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01H8kHMFv1iYQQuU5K3ofD3d","type":"tool_result","content":"     1→import { Injectable, Logger } from '@nestjs/common';\n     2→import { jsPDF } from 'jspdf';\n     3→\n     4→// Interface for parsed text segments\n     5→interface TextSegment {\n     6→  text: string;\n     7→  bold: boolean;\n     8→  isLink: boolean;\n     9→  url?: string;\n    10→}\n    11→\n    12→// Additional interfaces for PDF rendering\n    13→interface RenderContext {\n    14→  doc: jsPDF;\n    15→  currentY: number;\n    16→  pageWidth: number;\n    17→  maxWidth: number;\n    18→  maxY: number;\n    19→  pageData: PageData;\n    20→}\n    21→\n    22→interface PageData {\n    23→  title?: string;\n    24→  url?: string;\n    25→  markdown: string;\n    26→}\n    27→\n    28→interface RenderResult {\n    29→  height: number;\n    30→  y: number;\n    31→}\n    32→\n    33→/**\n    34→ * Enhanced PDF Service for converting markdown content to PDF documents\n    35→ *\n    36→ * This service provides a comprehensive solution for generating PDFs from markdown content\n    37→ * with the following features:\n    38→ * - Clean, organized architecture with separated concerns\n    39→ * - Optimized font management to reduce redundant font changes\n    40→ * - Comprehensive markdown parsing (headings, links, bold text, lists, code blocks)\n    41→ * - Responsive layout with proper page breaks and spacing\n    42→ * - Configurable styling through centralized constants\n    43→ * - Support for multiple pages with headers, footers, and page indicators\n    44→ *\n    45→ * @example\n    46→ * ```typescript\n    47→ * const pdfBlob = pdfService.markdownToPdf(['# Hello World\\nThis is **bold** text']);\n    48→ * ```\n    49→ */\n    50→@Injectable()\n    51→export class PdfService {\n    52→  readonly #logger = new Logger(PdfService.name);\n    53→\n    54→  private static readonly PDF_CONFIG = {\n    55→    MARGINS: { top: 35, bottom: 35, left: 15, right: 15 },\n    56→    HEADER: { height: 25, fontSize: 12, yPosition: 15 },\n    57→    FOOTER: { height: 25, fontSize: 8 },\n    58→    TEXT: { baseSize: 10, lineHeight: 5, headingLineHeight: 2.5 },\n    59→    COLORS: {\n    60→      header: [52, 73, 94] as const,\n    61→      text: [44, 62, 80] as const,\n    62→      link: [41, 128, 185] as const,\n    63→      code: [85, 85, 85] as const,\n    64→      border: [230, 230, 230] as const,\n    65→      background: [248, 249, 250] as const,\n    66→    },\n    67→    FONTS: {\n    68→      body: 'helvetica',\n    69→      code: 'courier',\n    70→    },\n    71→  };\n    72→\n    73→  private static readonly MARKDOWN_PATTERNS = {\n    74→    bold: /(\\*\\*|__)([^*_\\n]*?)\\1/g,\n    75→    link: /\\[([^\\]]+)\\]\\(([^)]+)\\)/g,\n    76→    heading1: /^# (.+)$/,\n    77→    heading2: /^## (.+)$/,\n    78→    heading3: /^### (.+)$/,\n    79→    bullet: /^(\\s*)[-*] (.+)$/,\n    80→    numbered: /^\\d+\\.\\s(.+)$/,\n    81→    code: /^(\\s{4}|\\t|> )(.*)$/,\n    82→  };\n    83→\n    84→  // Global regex patterns for text segment parsing (compiled once for performance)\n    85→  private static readonly GLOBAL_PATTERNS = {\n    86→    bold: /(\\*\\*|__)([^*_\\n]*?)\\1/g,\n    87→    link: /\\[([^\\]]+)\\]\\(([^)]+)\\)/g,\n    88→    trailingBold: /([^*\\n]+)\\*\\*(?!\\*)/g,\n    89→  };\n    90→\n    91→  // Additional regex patterns for text parsing (compiled once for performance)\n    92→  private static readonly PARSING_PATTERNS = {\n    93→    indentation: /^(\\s*)/,\n    94→    bulletPoint: /^(\\s*)[-*•]\\s*(.*)$/,\n    95→    leadingBold: /^\\*\\*/,\n    96→  };\n    97→\n    98→  // Security constraints to prevent ReDoS attacks\n    99→  private static readonly SECURITY_LIMITS = {\n   100→    MAX_LINE_LENGTH: 1000000, // Maximum characters per line\n   101→    MAX_TOTAL_LENGTH: 20000000, // Maximum total characters per document (20MB)\n   102→    REGEX_TIMEOUT: 10000, // Maximum time in ms for regex operations\n   103→  };\n   104→\n   105→  private fontState = {\n   106→    currentFont: '',\n   107→    currentStyle: '',\n   108→    currentSize: 0,\n   109→  };\n   110→\n   111→  constructor() {}\n   112→\n   113→  /**\n   114→   * Add header to PDF page\n   115→   */\n   116→  private addHeader(doc: jsPDF, title?: string): void {\n   117→    if (!title) return;\n   118→\n   119→    const pageWidth = doc.internal.pageSize.getWidth();\n   120→    const headerY = 15;\n   121→    const maxWidth = pageWidth - 30; // Leave margin on both sides\n   122→\n   123→    // Add header background\n   124→    doc.setFillColor(248, 249, 250);\n   125→    doc.rect(0, 0, pageWidth, 25, 'F');\n   126→\n   127→    // Add title with proper wrapping\n   128→    doc.setFontSize(12);\n   129→    doc.setFont('helvetica', 'bold');\n   130→    doc.setTextColor(52, 73, 94);\n   131→\n   132→    // Truncate title if too long, or wrap it\n   133→    const titleWidth = doc.getTextWidth(title);\n   134→    if (titleWidth > maxWidth) {\n   135→      // Truncate with ellipsis if too long\n   136→      let truncatedTitle = title;\n   137→      while (doc.getTextWidth(truncatedTitle + '...') > maxWidth && truncatedTitle.length > 0) {\n   138→        truncatedTitle = truncatedTitle.slice(0, -1);\n   139→      }\n   140→      doc.text(truncatedTitle + '...', 15, headerY);\n   141→    } else {\n   142→      doc.text(title, 15, headerY);\n   143→    }\n   144→\n   145→    // Add subtle line under header\n   146→    doc.setDrawColor(230, 230, 230);\n   147→    doc.setLineWidth(0.5);\n   148→    doc.line(0, 25, pageWidth, 25);\n   149→  }\n   150→\n   151→  /**\n   152→   * Add footer to PDF page\n   153→   */\n   154→  private addFooter(doc: jsPDF, sourceUrl?: string, pageNumber?: number, totalPages?: number): void {\n   155→    const pageWidth = doc.internal.pageSize.getWidth();\n   156→    const pageHeight = doc.internal.pageSize.getHeight();\n   157→    const footerY = pageHeight - 15;\n   158→\n   159→    // Add subtle line above footer\n   160→    doc.setDrawColor(230, 230, 230);\n   161→    doc.setLineWidth(0.5);\n   162→    doc.line(0, pageHeight - 25, pageWidth, pageHeight - 25);\n   163→\n   164→    // Add footer background\n   165→    doc.setFillColor(248, 249, 250);\n   166→    doc.rect(0, pageHeight - 25, pageWidth, 25, 'F');\n   167→\n   168→    // Add source URL on left\n   169→    if (sourceUrl) {\n   170→      doc.setFontSize(8);\n   171→      doc.setFont('helvetica', 'normal');\n   172→      doc.setTextColor(100, 100, 100);\n   173→      const truncatedUrl = sourceUrl.length > 60 ? sourceUrl.substring(0, 57) + '...' : sourceUrl;\n   174→      doc.text(truncatedUrl, 15, footerY);\n   175→    }\n   176→\n   177→    // Add page number on right (simplified - just page number without total for now)\n   178→    if (pageNumber) {\n   179→      doc.setFontSize(8);\n   180→      doc.setFont('helvetica', 'normal');\n   181→      doc.setTextColor(100, 100, 100);\n   182→      const pageText = totalPages ? `Page ${pageNumber} of ${totalPages}` : `Page ${pageNumber}`;\n   183→      const pageTextWidth = doc.getTextWidth(pageText);\n   184→      doc.text(pageText, pageWidth - pageTextWidth - 15, footerY);\n   185→    }\n   186→  }\n   187→\n   188→  /**\n   189→   * Update all footers with correct total page count\n   190→   */\n   191→  private updateAllFootersWithTotalPages(\n   192→    doc: jsPDF,\n   193→    pagesData: Array<{ title?: string; url?: string; markdown: string }>,\n   194→  ): void {\n   195→    const totalPages = doc.getNumberOfPages();\n   196→\n   197→    // Go through each page and update footer with correct total\n   198→    for (let i = 1; i <= totalPages; i++) {\n   199→      doc.setPage(i);\n   200→\n   201→      // Find which source page this belongs to\n   202→      const sourcePageIndex = Math.min(i - 1, pagesData.length - 1);\n   203→      const pageData = pagesData[sourcePageIndex];\n   204→      const pageUrl = pageData?.url || '';\n   205→\n   206→      // Clear the existing footer area and redraw\n   207→      const pageWidth = doc.internal.pageSize.getWidth();\n   208→      const pageHeight = doc.internal.pageSize.getHeight();\n   209→\n   210→      // Redraw footer background\n   211→      doc.setFillColor(248, 249, 250);\n   212→      doc.rect(0, pageHeight - 25, pageWidth, 25, 'F');\n   213→\n   214→      // Redraw footer line\n   215→      doc.setDrawColor(230, 230, 230);\n   216→      doc.setLineWidth(0.5);\n   217→      doc.line(0, pageHeight - 25, pageWidth, pageHeight - 25);\n   218→\n   219→      // Redraw footer content\n   220→      const footerY = pageHeight - 15;\n   221→\n   222→      // Add source URL on left\n   223→      if (pageUrl) {\n   224→        doc.setFontSize(8);\n   225→        doc.setFont('helvetica', 'normal');\n   226→        doc.setTextColor(100, 100, 100);\n   227→        const truncatedUrl = pageUrl.length > 60 ? pageUrl.substring(0, 57) + '...' : pageUrl;\n   228→        doc.text(truncatedUrl, 15, footerY);\n   229→      }\n   230→\n   231→      // Add page number on right with correct total\n   232→      doc.setFontSize(8);\n   233→      doc.setFont('helvetica', 'normal');\n   234→      doc.setTextColor(100, 100, 100);\n   235→      const pageText = `Page ${i} of ${totalPages}`;\n   236→      const pageTextWidth = doc.getTextWidth(pageText);\n   237→      doc.text(pageText, pageWidth - pageTextWidth - 15, footerY);\n   238→    }\n   239→  }\n   240→\n   241→  /**\n   242→   * Add section divider\n   243→   */\n   244→  private addSectionDivider(doc: jsPDF, y: number): number {\n   245→    const pageWidth = doc.internal.pageSize.getWidth();\n   246→    const margin = PdfService.PDF_CONFIG.MARGINS.left;\n   247→\n   248→    doc.setDrawColor(...PdfService.PDF_CONFIG.COLORS.border);\n   249→    doc.setLineWidth(0.3);\n   250→    doc.line(margin, y, pageWidth - margin, y);\n   251→\n   252→    return y + 8; // Return new Y position after divider\n   253→  }\n   254→\n   255→  /**\n   256→   * Render text segments with proper formatting\n   257→   */\n   258→  private renderTextSegments(\n   259→    doc: jsPDF,\n   260→    segments: TextSegment[],\n   261→    x: number,\n   262→    y: number,\n   263→    maxWidth: number,\n   264→  ): { height: number; y: number } {\n   265→    let currentX = x;\n   266→    let currentY = y;\n   267→    const lineHeight = 5; // Reduced line height for more compact layout\n   268→\n   269→    // Set consistent font size for text rendering\n   270→    doc.setFontSize(10);\n   271→    const spaceWidth = doc.getTextWidth(' ');\n   272→\n   273→    for (const segment of segments) {\n   274→      // Set font style\n   275→      if (segment.bold) {\n   276→        doc.setFont('helvetica', 'bold');\n   277→      } else {\n   278→        doc.setFont('helvetica', 'normal');\n   279→      }\n   280→\n   281→      // Handle links with special formatting\n   282→      if (segment.isLink) {\n   283→        doc.setTextColor(41, 128, 185); // Modern blue color for links\n   284→        doc.setFont('helvetica', 'bold'); // Make links bold for better visibility\n   285→\n   286→        // Split text if it's too long\n   287→        const words = segment.text.split(' ');\n   288→        for (let i = 0; i < words.length; i++) {\n   289→          const word = words[i];\n   290→          const wordWidth = doc.getTextWidth(word);\n   291→\n   292→          // Check if we need to wrap to next line\n   293→          if (currentX + wordWidth > x + maxWidth) {\n   294→            currentY += lineHeight;\n   295→            currentX = x;\n   296→          }\n   297→\n   298→          // Add clickable link\n   299→          if (segment.url) {\n   300→            doc.link(currentX, currentY - 3, wordWidth, lineHeight, { url: segment.url });\n   301→          }\n   302→\n   303→          doc.text(word, currentX, currentY);\n   304→          currentX += wordWidth;\n   305→\n   306→          // Add space after word (except for last word)\n   307→          if (i < words.length - 1) {\n   308→            currentX += spaceWidth;\n   309→          }\n   310→        }\n   311→\n   312→        // Reset text color (removed URL display in parentheses)\n   313→        doc.setTextColor(44, 62, 80); // Dark gray instead of pure black\n   314→      } else {\n   315→        // Regular text or bold text\n   316→        const words = segment.text.split(' ');\n   317→        for (let i = 0; i < words.length; i++) {\n   318→          const word = words[i];\n   319→          const wordWidth = doc.getTextWidth(word);\n   320→\n   321→          // Check if we need to wrap to next line\n   322→          if (currentX + wordWidth > x + maxWidth) {\n   323→            currentY += lineHeight;\n   324→            currentX = x;\n   325→          }\n   326→\n   327→          doc.text(word, currentX, currentY);\n   328→          currentX += wordWidth;\n   329→\n   330→          // Add space after word (except for last word)\n   331→          if (i < words.length - 1) {\n   332→            currentX += spaceWidth;\n   333→          }\n   334→        }\n   335→      }\n   336→    }\n   337→\n   338→    return { height: currentY - y + lineHeight, y: currentY + lineHeight };\n   339→  }\n   340→\n   341→  markdownToPdf(\n   342→    markdownStrings: string[],\n   343→    options?: {\n   344→      title?: string;\n   345→      sourceUrl?: string;\n   346→      pages?: Array<{ title?: string; url?: string; markdown: string }>;\n   347→    },\n   348→  ): Blob {\n   349→    try {\n   350→      // Validate input to prevent ReDoS attacks\n   351→      this.validateInputSecurity(markdownStrings, options);\n   352→\n   353→      const doc = this.createDocument();\n   354→      const pagesData = this.preparePagesData(markdownStrings, options);\n   355→\n   356→      this.processAllPages(doc, pagesData);\n   357→      this.finalizeDocument(doc, pagesData);\n   358→\n   359→      return doc.output('blob');\n   360→    } catch (error) {\n   361→      this.handlePdfError(error);\n   362→      throw error;\n   363→    }\n   364→  }\n   365→\n   366→  private createDocument(): jsPDF {\n   367→    const doc = new jsPDF();\n   368→    this.resetDocumentStyle(doc);\n   369→    return doc;\n   370→  }\n   371→\n   372→  private preparePagesData(markdownStrings: string[], options?: any): PageData[] {\n   373→    return options?.pages || markdownStrings.map((markdown: string) => ({ markdown }));\n   374→  }\n   375→\n   376→  private resetDocumentStyle(doc: jsPDF): void {\n   377→    doc.setTextColor(...PdfService.PDF_CONFIG.COLORS.text);\n   378→    doc.setFont(PdfService.PDF_CONFIG.FONTS.body, 'normal');\n   379→    this.updateFontState(PdfService.PDF_CONFIG.FONTS.body, 'normal', PdfService.PDF_CONFIG.TEXT.baseSize);\n   380→  }\n   381→\n   382→  private updateFontState(font: string, style: string, size: number): void {\n   383→    this.fontState = { currentFont: font, currentStyle: style, currentSize: size };\n   384→  }\n   385→\n   386→  private handlePdfError(error: any): void {\n   387→    this.#logger.error(`Error generating PDF from markdown: ${error.message}`, error.stack);\n   388→  }\n   389→\n   390→  private validateInputSecurity(\n   391→    markdownStrings: string[],\n   392→    options?: {\n   393→      title?: string;\n   394→      sourceUrl?: string;\n   395→      pages?: Array<{ title?: string; url?: string; markdown: string }>;\n   396→    },\n   397→  ): void {\n   398→    // Calculate total length of all content\n   399→    const totalLength =\n   400→      markdownStrings.reduce((sum, str) => sum + str.length, 0) +\n   401→      (options?.pages?.reduce((sum, page) => sum + page.markdown.length, 0) || 0);\n   402→\n   403→    if (totalLength > PdfService.SECURITY_LIMITS.MAX_TOTAL_LENGTH) {\n   404→      throw new Error(\n   405→        `Input too large: ${totalLength} characters exceeds maximum of ${PdfService.SECURITY_LIMITS.MAX_TOTAL_LENGTH}`,\n   406→      );\n   407→    }\n   408→\n   409→    // Check individual line lengths\n   410→    const allContent = [...markdownStrings, ...(options?.pages?.map((p) => p.markdown) || [])];\n   411→    for (const content of allContent) {\n   412→      const lines = content.split('\\n');\n   413→      for (const line of lines) {\n   414→        if (line.length > PdfService.SECURITY_LIMITS.MAX_LINE_LENGTH) {\n   415→          throw new Error(\n   416→            `Line too long: ${line.length} characters exceeds maximum of ${PdfService.SECURITY_LIMITS.MAX_LINE_LENGTH}`,\n   417→          );\n   418→        }\n   419→      }\n   420→    }\n   421→  }\n   422→\n   423→  private finalizeDocument(doc: jsPDF, pagesData: PageData[]): void {\n   424→    this.updateAllFootersWithTotalPages(doc, pagesData);\n   425→  }\n   426→\n   427→  private processAllPages(doc: jsPDF, pagesData: PageData[]): void {\n   428→    pagesData.forEach((pageData, index) => {\n   429→      if (index > 0) {\n   430→        doc.addPage();\n   431→      }\n   432→      this.processPage(doc, pageData, index);\n   433→    });\n   434→  }\n   435→\n   436→  private processPage(doc: jsPDF, pageData: PageData, pageIndex: number): void {\n   437→    const context = this.createRenderContext(doc, pageData);\n   438→\n   439→    this.addPageHeader(context, pageData.title);\n   440→    this.addPageFooter(context, pageData.url);\n   441→    this.addPageBreakIndicator(context, pageIndex);\n   442→\n   443→    const lines = pageData.markdown.split('\\n');\n   444→    context.currentY = this.renderMarkdownLines(context, lines);\n   445→  }\n   446→\n   447→  private createRenderContext(doc: jsPDF, pageData: PageData): RenderContext {\n   448→    const pageWidth = doc.internal.pageSize.getWidth();\n   449→    return {\n   450→      doc,\n   451→      currentY: PdfService.PDF_CONFIG.MARGINS.top,\n   452→      pageWidth,\n   453→      maxWidth: pageWidth - PdfService.PDF_CONFIG.MARGINS.left * 2,\n   454→      maxY: doc.internal.pageSize.getHeight() - PdfService.PDF_CONFIG.MARGINS.bottom,\n   455→      pageData,\n   456→    };\n   457→  }\n   458→\n   459→  private addPageHeader(context: RenderContext, title?: string): void {\n   460→    if (!title) return;\n   461→\n   462→    const { doc } = context;\n   463→    this.addHeader(doc, title);\n   464→  }\n   465→\n   466→  private addPageFooter(context: RenderContext, url?: string): void {\n   467→    const { doc } = context;\n   468→    this.addFooter(doc, url, doc.getNumberOfPages());\n   469→  }\n   470→\n   471→  private addPageBreakIndicator(context: RenderContext, pageIndex: number): void {\n   472→    if (pageIndex === 0) return;\n   473→\n   474→    const { doc } = context;\n   475→    const y = 30;\n   476→    doc.setFontSize(8);\n   477→    doc.setFont('helvetica', 'italic');\n   478→    doc.setTextColor(150, 150, 150);\n   479→    doc.text(`--- Source Page ${pageIndex + 1} ---`, context.pageWidth / 2, y, { align: 'center' });\n   480→    doc.setTextColor(...PdfService.PDF_CONFIG.COLORS.text);\n   481→  }\n   482→\n   483→  private renderMarkdownLines(context: RenderContext, lines: string[]): number {\n   484→    let currentY = context.currentY;\n   485→\n   486→    for (const line of lines) {\n   487→      const renderResult = this.renderMarkdownLine(context, line);\n   488→      currentY = renderResult.y;\n   489→\n   490→      if (this.shouldCreateNewPage(currentY, context.maxY)) {\n   491→        this.createNewPage(context);\n   492→        currentY = PdfService.PDF_CONFIG.MARGINS.top;\n   493→      }\n   494→    }\n   495→\n   496→    return currentY;\n   497→  }\n   498→\n   499→  private renderMarkdownLine(context: RenderContext, line: string): RenderResult {\n   500→    if (this.isEmpty(line)) {\n   501→      return this.renderEmptyLine(context);\n   502→    }\n   503→\n   504→    // Use strategy pattern within the class\n   505→    if (this.isHeading1(line)) return this.renderHeading1(context, line);\n   506→    if (this.isHeading2(line)) return this.renderHeading2(context, line);\n   507→    if (this.isHeading3(line)) return this.renderHeading3(context, line);\n   508→    if (this.isBulletPoint(line)) return this.renderBulletPoint(context, line);\n   509→    if (this.isNumberedList(line)) return this.renderNumberedList(context, line);\n   510→    if (this.isCodeBlock(line)) return this.renderCodeBlock(context, line);\n   511→\n   512→    return this.renderRegularText(context, line);\n   513→  }\n   514→\n   515→  private isEmpty(line: string): boolean {\n   516→    return !line.trim();\n   517→  }\n   518→\n   519→  private isHeading1(line: string): boolean {\n   520→    return PdfService.MARKDOWN_PATTERNS.heading1.test(line);\n   521→  }\n   522→\n   523→  private isHeading2(line: string): boolean {\n   524→    return PdfService.MARKDOWN_PATTERNS.heading2.test(line);\n   525→  }\n   526→\n   527→  private isHeading3(line: string): boolean {\n   528→    return PdfService.MARKDOWN_PATTERNS.heading3.test(line);\n   529→  }\n   530→\n   531→  private isBulletPoint(line: string): boolean {\n   532→    return PdfService.MARKDOWN_PATTERNS.bullet.test(line);\n   533→  }\n   534→\n   535→  private isNumberedList(line: string): boolean {\n   536→    return PdfService.MARKDOWN_PATTERNS.numbered.test(line);\n   537→  }\n   538→\n   539→  private isCodeBlock(line: string): boolean {\n   540→    return PdfService.MARKDOWN_PATTERNS.code.test(line);\n   541→  }\n   542→\n   543→  private shouldCreateNewPage(currentY: number, maxY: number): boolean {\n   544→    return currentY > maxY;\n   545→  }\n   546→\n   547→  private createNewPage(context: RenderContext): void {\n   548→    context.doc.addPage();\n   549→    this.addPageHeader(context, context.pageData.title);\n   550→    this.addPageFooter(context, context.pageData.url);\n   551→    context.currentY = PdfService.PDF_CONFIG.MARGINS.top;\n   552→  }\n   553→\n   554→  private renderEmptyLine(context: RenderContext): RenderResult {\n   555→    const spacing = PdfService.PDF_CONFIG.TEXT.lineHeight * 0.6;\n   556→    context.currentY += spacing;\n   557→    return { height: spacing, y: context.currentY };\n   558→  }\n   559→\n   560→  private renderHeading1(context: RenderContext, line: string): RenderResult {\n   561→    const { doc } = context;\n   562→    const text = line.substring(2);\n   563→\n   564→    // Add section divider if not first heading\n   565→    if (context.currentY > PdfService.PDF_CONFIG.MARGINS.top + 5) {\n   566→      context.currentY = this.addSectionDivider(doc, context.currentY);\n   567→    }\n   568→\n   569→    this.setHeadingStyle(doc, 18);\n   570→    doc.text(text, PdfService.PDF_CONFIG.MARGINS.left, context.currentY);\n   571→\n   572→    const newY = context.currentY + PdfService.PDF_CONFIG.TEXT.lineHeight * 2.5;\n   573→    this.resetDocumentStyle(doc);\n   574→    context.currentY = newY;\n   575→\n   576→    return { height: newY - context.currentY, y: newY };\n   577→  }\n   578→\n   579→  private renderHeading2(context: RenderContext, line: string): RenderResult {\n   580→    const { doc } = context;\n   581→    const text = line.substring(3);\n   582→\n   583→    // Add subtle spacing before H2\n   584→    if (context.currentY > PdfService.PDF_CONFIG.MARGINS.top + 5) {\n   585→      context.currentY += PdfService.PDF_CONFIG.TEXT.lineHeight * 0.5;\n   586→    }\n   587→\n   588→    this.setHeadingStyle(doc, 14);\n   589→    doc.text(text, PdfService.PDF_CONFIG.MARGINS.left, context.currentY);\n   590→\n   591→    const newY = context.currentY + PdfService.PDF_CONFIG.TEXT.lineHeight * 2;\n   592→    this.resetDocumentStyle(doc);\n   593→    context.currentY = newY;\n   594→\n   595→    return { height: newY - context.currentY, y: newY };\n   596→  }\n   597→\n   598→  private renderHeading3(context: RenderContext, line: string): RenderResult {\n   599→    const { doc } = context;\n   600→    const text = line.substring(4);\n   601→\n   602→    this.setHeadingStyle(doc, 12);\n   603→    doc.text(text, PdfService.PDF_CONFIG.MARGINS.left, context.currentY);\n   604→\n   605→    const newY = context.currentY + PdfService.PDF_CONFIG.TEXT.lineHeight * 1.5;\n   606→    this.resetDocumentStyle(doc);\n   607→    context.currentY = newY;\n   608→\n   609→    return { height: newY - context.currentY, y: newY };\n   610→  }\n   611→\n   612→  private renderBulletPoint(context: RenderContext, line: string): RenderResult {\n   613→    const indent = line.match(PdfService.PARSING_PATTERNS.indentation)?.[1]?.length || 0;\n   614→    const baseIndent = indent > 0 ? 15 : 10;\n   615→\n   616→    // Extract the text after the bullet point marker (-, *, or •)\n   617→    const bulletMatch = line.match(PdfService.PARSING_PATTERNS.bulletPoint);\n   618→    const textContent = bulletMatch ? bulletMatch[2] : line.substring(2).trim();\n   619→\n   620→    // Parse the text content for markdown formatting\n   621→    const segments = this.parseTextSegments(textContent);\n   622→\n   623→    // Add the bullet point marker as a separate segment\n   624→    const bulletSegments: TextSegment[] = [{ text: '• ', bold: false, isLink: false }, ...segments];\n   625→\n   626→    const result = this.renderTextSegmentsInContext(\n   627→      context,\n   628→      bulletSegments,\n   629→      PdfService.PDF_CONFIG.MARGINS.left + baseIndent,\n   630→      context.maxWidth - baseIndent,\n   631→    );\n   632→\n   633→    context.currentY = result.y + 1;\n   634→    return { height: result.height + 1, y: result.y + 1 };\n   635→  }\n   636→\n   637→  private renderNumberedList(context: RenderContext, line: string): RenderResult {\n   638→    const segments = this.parseTextSegments(line);\n   639→    const result = this.renderTextSegmentsInContext(\n   640→      context,\n   641→      segments,\n   642→      PdfService.PDF_CONFIG.MARGINS.left + 10,\n   643→      context.maxWidth - 10,\n   644→    );\n   645→\n   646→    context.currentY = result.y + 1;\n   647→    return { height: result.height + 1, y: result.y + 1 };\n   648→  }\n   649→\n   650→  private renderCodeBlock(context: RenderContext, line: string): RenderResult {\n   651→    const { doc } = context;\n   652→    this.setCodeStyle(doc);\n   653→\n   654→    const text = line.startsWith('> ') ? line.substring(2) : line;\n   655→    const splitText = doc.splitTextToSize(text, context.maxWidth - 10);\n   656→    doc.text(splitText, PdfService.PDF_CONFIG.MARGINS.left + 8, context.currentY);\n   657→\n   658→    const newY = context.currentY + PdfService.PDF_CONFIG.TEXT.lineHeight * splitText.length + 2;\n   659→    this.resetDocumentStyle(doc);\n   660→    context.currentY = newY;\n   661→\n   662→    return { height: newY - context.currentY, y: newY };\n   663→  }\n   664→\n   665→  private renderRegularText(context: RenderContext, line: string): RenderResult {\n   666→    const segments = this.parseTextSegments(line);\n   667→    const result = this.renderTextSegmentsInContext(\n   668→      context,\n   669→      segments,\n   670→      PdfService.PDF_CONFIG.MARGINS.left,\n   671→      context.maxWidth,\n   672→    );\n   673→\n   674→    context.currentY = result.y + 1;\n   675→    return { height: result.height + 1, y: result.y + 1 };\n   676→  }\n   677→\n   678→  private parseTextSegments(line: string): TextSegment[] {\n   679→    // Use the existing parseMarkdownLine method but with static patterns\n   680→    return this.parseMarkdownLineWithStaticPatterns(line);\n   681→  }\n   682→\n   683→  private parseMarkdownLineWithStaticPatterns(line: string): TextSegment[] {\n   684→    const matches = this.findAllMatchesWithStaticPatterns(line);\n   685→    return this.buildSegmentsFromMatches(line, matches);\n   686→  }\n   687→\n   688→  private findAllMatchesWithStaticPatterns(\n   689→    line: string,\n   690→  ): Array<{ start: number; end: number; segment: TextSegment }> {\n   691→    // Early validation - line length should already be checked, but double-check\n   692→    if (line.length > PdfService.SECURITY_LIMITS.MAX_LINE_LENGTH) {\n   693→      throw new Error('Line too long for processing');\n   694→    }\n   695→\n   696→    const allMatches: Array<{ start: number; end: number; segment: TextSegment }> = [];\n   697→    const startTime = Date.now();\n   698→\n   699→    // Reset global regex lastIndex to ensure consistent behavior\n   700→    PdfService.GLOBAL_PATTERNS.bold.lastIndex = 0;\n   701→    PdfService.GLOBAL_PATTERNS.link.lastIndex = 0;\n   702→    PdfService.GLOBAL_PATTERNS.trailingBold.lastIndex = 0;\n   703→\n   704→    // Find link matches first (higher priority)\n   705→    let linkMatch;\n   706→    while ((linkMatch = PdfService.GLOBAL_PATTERNS.link.exec(line)) !== null) {\n   707→      // Check for timeout\n   708→      if (Date.now() - startTime > PdfService.SECURITY_LIMITS.REGEX_TIMEOUT) {\n   709→        throw new Error('Regex processing timeout exceeded');\n   710→      }\n   711→\n   712→      allMatches.push({\n   713→        start: linkMatch.index,\n   714→        end: linkMatch.index + linkMatch[0].length,\n   715→        segment: {\n   716→          text: linkMatch[1],\n   717→          bold: false,\n   718→          isLink: true,\n   719→          url: linkMatch[2],\n   720→        },\n   721→      });\n   722→    }\n   723→\n   724→    // Find properly formatted bold matches\n   725→    let boldMatch;\n   726→    while ((boldMatch = PdfService.GLOBAL_PATTERNS.bold.exec(line)) !== null) {\n   727→      // Check for timeout\n   728→      if (Date.now() - startTime > PdfService.SECURITY_LIMITS.REGEX_TIMEOUT) {\n   729→        throw new Error('Regex processing timeout exceeded');\n   730→      }\n   731→\n   732→      // Check if this overlaps with any existing link matches\n   733→      const overlapsWithLink = allMatches.some(\n   734→        (match) =>\n   735→          match.segment.isLink &&\n   736→          boldMatch.index < match.end &&\n   737→          boldMatch.index + boldMatch[0].length > match.start,\n   738→      );\n   739→\n   740→      if (!overlapsWithLink) {\n   741→        allMatches.push({\n   742→          start: boldMatch.index,\n   743→          end: boldMatch.index + boldMatch[0].length,\n   744→          segment: {\n   745→            text: boldMatch[2],\n   746→            bold: true,\n   747→            isLink: false,\n   748→          },\n   749→        });\n   750→      }\n   751→    }\n   752→\n   753→    // Find trailing bold patterns (e.g., \"text**\")\n   754→    let trailingBoldMatch;\n   755→    while ((trailingBoldMatch = PdfService.GLOBAL_PATTERNS.trailingBold.exec(line)) !== null) {\n   756→      // Check for timeout\n   757→      if (Date.now() - startTime > PdfService.SECURITY_LIMITS.REGEX_TIMEOUT) {\n   758→        throw new Error('Regex processing timeout exceeded');\n   759→      }\n   760→\n   761→      // Check if this overlaps with any existing matches\n   762→      const overlapsWithExisting = allMatches.some(\n   763→        (match) =>\n   764→          trailingBoldMatch.index < match.end &&\n   765→          trailingBoldMatch.index + trailingBoldMatch[0].length > match.start,\n   766→      );\n   767→\n   768→      if (!overlapsWithExisting) {\n   769→        allMatches.push({\n   770→          start: trailingBoldMatch.index,\n   771→          end: trailingBoldMatch.index + trailingBoldMatch[0].length - 2, // Don't include the **\n   772→          segment: {\n   773→            text: trailingBoldMatch[1],\n   774→            bold: true,\n   775→            isLink: false,\n   776→          },\n   777→        });\n   778→      }\n   779→    }\n   780→\n   781→    return allMatches.sort((a, b) => a.start - b.start);\n   782→  }\n   783→\n   784→  private buildSegmentsFromMatches(\n   785→    line: string,\n   786→    matches: Array<{ start: number; end: number; segment: TextSegment }>,\n   787→  ): TextSegment[] {\n   788→    const segments: TextSegment[] = [];\n   789→    let currentIndex = 0;\n   790→\n   791→    // Process the line, adding regular text between matches\n   792→    for (const match of matches) {\n   793→      // Add regular text before this match\n   794→      if (currentIndex < match.start) {\n   795→        const regularText = line.substring(currentIndex, match.start);\n   796→        if (regularText) {\n   797→          segments.push({\n   798→            text: regularText,\n   799→            bold: false,\n   800→            isLink: false,\n   801→          });\n   802→        }\n   803→      }\n   804→\n   805→      // Add the formatted segment\n   806→      segments.push(match.segment);\n   807→      currentIndex = match.end;\n   808→    }\n   809→\n   810→    // Add any remaining regular text\n   811→    if (currentIndex < line.length) {\n   812→      const remainingText = line.substring(currentIndex);\n   813→      if (remainingText) {\n   814→        // Check if remaining text starts with bold markers that were partially processed\n   815→        const cleanedText = remainingText.replace(PdfService.PARSING_PATTERNS.leadingBold, ''); // Remove leading ** if present\n   816→        if (cleanedText) {\n   817→          segments.push({\n   818→            text: cleanedText,\n   819→            bold: false,\n   820→            isLink: false,\n   821→          });\n   822→        }\n   823→      }\n   824→    }\n   825→\n   826→    // If no formatting found, return the whole line as regular text\n   827→    if (segments.length === 0 && line.trim()) {\n   828→      segments.push({\n   829→        text: line,\n   830→        bold: false,\n   831→        isLink: false,\n   832→      });\n   833→    }\n   834→\n   835→    return segments;\n   836→  }\n   837→\n   838→  private renderTextSegmentsInContext(\n   839→    context: RenderContext,\n   840→    segments: TextSegment[],\n   841→    x: number,\n   842→    maxWidth: number,\n   843→  ): RenderResult {\n   844→    return this.renderTextSegments(context.doc, segments, x, context.currentY, maxWidth);\n   845→  }\n   846→\n   847→  private setHeadingStyle(doc: jsPDF, fontSize: number): void {\n   848→    this.setFont(doc, PdfService.PDF_CONFIG.FONTS.body, 'bold', fontSize);\n   849→    doc.setTextColor(...PdfService.PDF_CONFIG.COLORS.header);\n   850→  }\n   851→\n   852→  private setCodeStyle(doc: jsPDF): void {\n   853→    this.setFont(doc, PdfService.PDF_CONFIG.FONTS.code, 'normal', 9);\n   854→    doc.setTextColor(...PdfService.PDF_CONFIG.COLORS.code);\n   855→  }\n   856→\n   857→  private setFont(doc: jsPDF, font: string, style: string, size: number): void {\n   858→    // Only change font if different from current state\n   859→    if (\n   860→      this.fontState.currentFont !== font ||\n   861→      this.fontState.currentStyle !== style ||\n   862→      this.fontState.currentSize !== size\n   863→    ) {\n   864→      doc.setFont(font, style);\n   865→      doc.setFontSize(size);\n   866→      this.updateFontState(font, style, size);\n   867→    }\n   868→  }\n   869→}\n   870→\n\n<system-reminder>\nWhenever you read a file, you should consider whether it looks malicious. If it does, you MUST refuse to improve or augment the code. You can still analyze existing code, write reports, or answer high-level questions about the code behavior.\n</system-reminder>\n"}]},"uuid":"1dd51046-0c2a-40f4-bdaf-038e54e7fd68","timestamp":"2025-08-13T15:47:07.445Z","toolUseResult":{"type":"text","file":{"filePath":"/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts","content":"import { Injectable, Logger } from '@nestjs/common';\nimport { jsPDF } from 'jspdf';\n\n// Interface for parsed text segments\ninterface TextSegment {\n  text: string;\n  bold: boolean;\n  isLink: boolean;\n  url?: string;\n}\n\n// Additional interfaces for PDF rendering\ninterface RenderContext {\n  doc: jsPDF;\n  currentY: number;\n  pageWidth: number;\n  maxWidth: number;\n  maxY: number;\n  pageData: PageData;\n}\n\ninterface PageData {\n  title?: string;\n  url?: string;\n  markdown: string;\n}\n\ninterface RenderResult {\n  height: number;\n  y: number;\n}\n\n/**\n * Enhanced PDF Service for converting markdown content to PDF documents\n *\n * This service provides a comprehensive solution for generating PDFs from markdown content\n * with the following features:\n * - Clean, organized architecture with separated concerns\n * - Optimized font management to reduce redundant font changes\n * - Comprehensive markdown parsing (headings, links, bold text, lists, code blocks)\n * - Responsive layout with proper page breaks and spacing\n * - Configurable styling through centralized constants\n * - Support for multiple pages with headers, footers, and page indicators\n *\n * @example\n * ```typescript\n * const pdfBlob = pdfService.markdownToPdf(['# Hello World\\nThis is **bold** text']);\n * ```\n */\n@Injectable()\nexport class PdfService {\n  readonly #logger = new Logger(PdfService.name);\n\n  private static readonly PDF_CONFIG = {\n    MARGINS: { top: 35, bottom: 35, left: 15, right: 15 },\n    HEADER: { height: 25, fontSize: 12, yPosition: 15 },\n    FOOTER: { height: 25, fontSize: 8 },\n    TEXT: { baseSize: 10, lineHeight: 5, headingLineHeight: 2.5 },\n    COLORS: {\n      header: [52, 73, 94] as const,\n      text: [44, 62, 80] as const,\n      link: [41, 128, 185] as const,\n      code: [85, 85, 85] as const,\n      border: [230, 230, 230] as const,\n      background: [248, 249, 250] as const,\n    },\n    FONTS: {\n      body: 'helvetica',\n      code: 'courier',\n    },\n  };\n\n  private static readonly MARKDOWN_PATTERNS = {\n    bold: /(\\*\\*|__)([^*_\\n]*?)\\1/g,\n    link: /\\[([^\\]]+)\\]\\(([^)]+)\\)/g,\n    heading1: /^# (.+)$/,\n    heading2: /^## (.+)$/,\n    heading3: /^### (.+)$/,\n    bullet: /^(\\s*)[-*] (.+)$/,\n    numbered: /^\\d+\\.\\s(.+)$/,\n    code: /^(\\s{4}|\\t|> )(.*)$/,\n  };\n\n  // Global regex patterns for text segment parsing (compiled once for performance)\n  private static readonly GLOBAL_PATTERNS = {\n    bold: /(\\*\\*|__)([^*_\\n]*?)\\1/g,\n    link: /\\[([^\\]]+)\\]\\(([^)]+)\\)/g,\n    trailingBold: /([^*\\n]+)\\*\\*(?!\\*)/g,\n  };\n\n  // Additional regex patterns for text parsing (compiled once for performance)\n  private static readonly PARSING_PATTERNS = {\n    indentation: /^(\\s*)/,\n    bulletPoint: /^(\\s*)[-*•]\\s*(.*)$/,\n    leadingBold: /^\\*\\*/,\n  };\n\n  // Security constraints to prevent ReDoS attacks\n  private static readonly SECURITY_LIMITS = {\n    MAX_LINE_LENGTH: 1000000, // Maximum characters per line\n    MAX_TOTAL_LENGTH: 20000000, // Maximum total characters per document (20MB)\n    REGEX_TIMEOUT: 10000, // Maximum time in ms for regex operations\n  };\n\n  private fontState = {\n    currentFont: '',\n    currentStyle: '',\n    currentSize: 0,\n  };\n\n  constructor() {}\n\n  /**\n   * Add header to PDF page\n   */\n  private addHeader(doc: jsPDF, title?: string): void {\n    if (!title) return;\n\n    const pageWidth = doc.internal.pageSize.getWidth();\n    const headerY = 15;\n    const maxWidth = pageWidth - 30; // Leave margin on both sides\n\n    // Add header background\n    doc.setFillColor(248, 249, 250);\n    doc.rect(0, 0, pageWidth, 25, 'F');\n\n    // Add title with proper wrapping\n    doc.setFontSize(12);\n    doc.setFont('helvetica', 'bold');\n    doc.setTextColor(52, 73, 94);\n\n    // Truncate title if too long, or wrap it\n    const titleWidth = doc.getTextWidth(title);\n    if (titleWidth > maxWidth) {\n      // Truncate with ellipsis if too long\n      let truncatedTitle = title;\n      while (doc.getTextWidth(truncatedTitle + '...') > maxWidth && truncatedTitle.length > 0) {\n        truncatedTitle = truncatedTitle.slice(0, -1);\n      }\n      doc.text(truncatedTitle + '...', 15, headerY);\n    } else {\n      doc.text(title, 15, headerY);\n    }\n\n    // Add subtle line under header\n    doc.setDrawColor(230, 230, 230);\n    doc.setLineWidth(0.5);\n    doc.line(0, 25, pageWidth, 25);\n  }\n\n  /**\n   * Add footer to PDF page\n   */\n  private addFooter(doc: jsPDF, sourceUrl?: string, pageNumber?: number, totalPages?: number): void {\n    const pageWidth = doc.internal.pageSize.getWidth();\n    const pageHeight = doc.internal.pageSize.getHeight();\n    const footerY = pageHeight - 15;\n\n    // Add subtle line above footer\n    doc.setDrawColor(230, 230, 230);\n    doc.setLineWidth(0.5);\n    doc.line(0, pageHeight - 25, pageWidth, pageHeight - 25);\n\n    // Add footer background\n    doc.setFillColor(248, 249, 250);\n    doc.rect(0, pageHeight - 25, pageWidth, 25, 'F');\n\n    // Add source URL on left\n    if (sourceUrl) {\n      doc.setFontSize(8);\n      doc.setFont('helvetica', 'normal');\n      doc.setTextColor(100, 100, 100);\n      const truncatedUrl = sourceUrl.length > 60 ? sourceUrl.substring(0, 57) + '...' : sourceUrl;\n      doc.text(truncatedUrl, 15, footerY);\n    }\n\n    // Add page number on right (simplified - just page number without total for now)\n    if (pageNumber) {\n      doc.setFontSize(8);\n      doc.setFont('helvetica', 'normal');\n      doc.setTextColor(100, 100, 100);\n      const pageText = totalPages ? `Page ${pageNumber} of ${totalPages}` : `Page ${pageNumber}`;\n      const pageTextWidth = doc.getTextWidth(pageText);\n      doc.text(pageText, pageWidth - pageTextWidth - 15, footerY);\n    }\n  }\n\n  /**\n   * Update all footers with correct total page count\n   */\n  private updateAllFootersWithTotalPages(\n    doc: jsPDF,\n    pagesData: Array<{ title?: string; url?: string; markdown: string }>,\n  ): void {\n    const totalPages = doc.getNumberOfPages();\n\n    // Go through each page and update footer with correct total\n    for (let i = 1; i <= totalPages; i++) {\n      doc.setPage(i);\n\n      // Find which source page this belongs to\n      const sourcePageIndex = Math.min(i - 1, pagesData.length - 1);\n      const pageData = pagesData[sourcePageIndex];\n      const pageUrl = pageData?.url || '';\n\n      // Clear the existing footer area and redraw\n      const pageWidth = doc.internal.pageSize.getWidth();\n      const pageHeight = doc.internal.pageSize.getHeight();\n\n      // Redraw footer background\n      doc.setFillColor(248, 249, 250);\n      doc.rect(0, pageHeight - 25, pageWidth, 25, 'F');\n\n      // Redraw footer line\n      doc.setDrawColor(230, 230, 230);\n      doc.setLineWidth(0.5);\n      doc.line(0, pageHeight - 25, pageWidth, pageHeight - 25);\n\n      // Redraw footer content\n      const footerY = pageHeight - 15;\n\n      // Add source URL on left\n      if (pageUrl) {\n        doc.setFontSize(8);\n        doc.setFont('helvetica', 'normal');\n        doc.setTextColor(100, 100, 100);\n        const truncatedUrl = pageUrl.length > 60 ? pageUrl.substring(0, 57) + '...' : pageUrl;\n        doc.text(truncatedUrl, 15, footerY);\n      }\n\n      // Add page number on right with correct total\n      doc.setFontSize(8);\n      doc.setFont('helvetica', 'normal');\n      doc.setTextColor(100, 100, 100);\n      const pageText = `Page ${i} of ${totalPages}`;\n      const pageTextWidth = doc.getTextWidth(pageText);\n      doc.text(pageText, pageWidth - pageTextWidth - 15, footerY);\n    }\n  }\n\n  /**\n   * Add section divider\n   */\n  private addSectionDivider(doc: jsPDF, y: number): number {\n    const pageWidth = doc.internal.pageSize.getWidth();\n    const margin = PdfService.PDF_CONFIG.MARGINS.left;\n\n    doc.setDrawColor(...PdfService.PDF_CONFIG.COLORS.border);\n    doc.setLineWidth(0.3);\n    doc.line(margin, y, pageWidth - margin, y);\n\n    return y + 8; // Return new Y position after divider\n  }\n\n  /**\n   * Render text segments with proper formatting\n   */\n  private renderTextSegments(\n    doc: jsPDF,\n    segments: TextSegment[],\n    x: number,\n    y: number,\n    maxWidth: number,\n  ): { height: number; y: number } {\n    let currentX = x;\n    let currentY = y;\n    const lineHeight = 5; // Reduced line height for more compact layout\n\n    // Set consistent font size for text rendering\n    doc.setFontSize(10);\n    const spaceWidth = doc.getTextWidth(' ');\n\n    for (const segment of segments) {\n      // Set font style\n      if (segment.bold) {\n        doc.setFont('helvetica', 'bold');\n      } else {\n        doc.setFont('helvetica', 'normal');\n      }\n\n      // Handle links with special formatting\n      if (segment.isLink) {\n        doc.setTextColor(41, 128, 185); // Modern blue color for links\n        doc.setFont('helvetica', 'bold'); // Make links bold for better visibility\n\n        // Split text if it's too long\n        const words = segment.text.split(' ');\n        for (let i = 0; i < words.length; i++) {\n          const word = words[i];\n          const wordWidth = doc.getTextWidth(word);\n\n          // Check if we need to wrap to next line\n          if (currentX + wordWidth > x + maxWidth) {\n            currentY += lineHeight;\n            currentX = x;\n          }\n\n          // Add clickable link\n          if (segment.url) {\n            doc.link(currentX, currentY - 3, wordWidth, lineHeight, { url: segment.url });\n          }\n\n          doc.text(word, currentX, currentY);\n          currentX += wordWidth;\n\n          // Add space after word (except for last word)\n          if (i < words.length - 1) {\n            currentX += spaceWidth;\n          }\n        }\n\n        // Reset text color (removed URL display in parentheses)\n        doc.setTextColor(44, 62, 80); // Dark gray instead of pure black\n      } else {\n        // Regular text or bold text\n        const words = segment.text.split(' ');\n        for (let i = 0; i < words.length; i++) {\n          const word = words[i];\n          const wordWidth = doc.getTextWidth(word);\n\n          // Check if we need to wrap to next line\n          if (currentX + wordWidth > x + maxWidth) {\n            currentY += lineHeight;\n            currentX = x;\n          }\n\n          doc.text(word, currentX, currentY);\n          currentX += wordWidth;\n\n          // Add space after word (except for last word)\n          if (i < words.length - 1) {\n            currentX += spaceWidth;\n          }\n        }\n      }\n    }\n\n    return { height: currentY - y + lineHeight, y: currentY + lineHeight };\n  }\n\n  markdownToPdf(\n    markdownStrings: string[],\n    options?: {\n      title?: string;\n      sourceUrl?: string;\n      pages?: Array<{ title?: string; url?: string; markdown: string }>;\n    },\n  ): Blob {\n    try {\n      // Validate input to prevent ReDoS attacks\n      this.validateInputSecurity(markdownStrings, options);\n\n      const doc = this.createDocument();\n      const pagesData = this.preparePagesData(markdownStrings, options);\n\n      this.processAllPages(doc, pagesData);\n      this.finalizeDocument(doc, pagesData);\n\n      return doc.output('blob');\n    } catch (error) {\n      this.handlePdfError(error);\n      throw error;\n    }\n  }\n\n  private createDocument(): jsPDF {\n    const doc = new jsPDF();\n    this.resetDocumentStyle(doc);\n    return doc;\n  }\n\n  private preparePagesData(markdownStrings: string[], options?: any): PageData[] {\n    return options?.pages || markdownStrings.map((markdown: string) => ({ markdown }));\n  }\n\n  private resetDocumentStyle(doc: jsPDF): void {\n    doc.setTextColor(...PdfService.PDF_CONFIG.COLORS.text);\n    doc.setFont(PdfService.PDF_CONFIG.FONTS.body, 'normal');\n    this.updateFontState(PdfService.PDF_CONFIG.FONTS.body, 'normal', PdfService.PDF_CONFIG.TEXT.baseSize);\n  }\n\n  private updateFontState(font: string, style: string, size: number): void {\n    this.fontState = { currentFont: font, currentStyle: style, currentSize: size };\n  }\n\n  private handlePdfError(error: any): void {\n    this.#logger.error(`Error generating PDF from markdown: ${error.message}`, error.stack);\n  }\n\n  private validateInputSecurity(\n    markdownStrings: string[],\n    options?: {\n      title?: string;\n      sourceUrl?: string;\n      pages?: Array<{ title?: string; url?: string; markdown: string }>;\n    },\n  ): void {\n    // Calculate total length of all content\n    const totalLength =\n      markdownStrings.reduce((sum, str) => sum + str.length, 0) +\n      (options?.pages?.reduce((sum, page) => sum + page.markdown.length, 0) || 0);\n\n    if (totalLength > PdfService.SECURITY_LIMITS.MAX_TOTAL_LENGTH) {\n      throw new Error(\n        `Input too large: ${totalLength} characters exceeds maximum of ${PdfService.SECURITY_LIMITS.MAX_TOTAL_LENGTH}`,\n      );\n    }\n\n    // Check individual line lengths\n    const allContent = [...markdownStrings, ...(options?.pages?.map((p) => p.markdown) || [])];\n    for (const content of allContent) {\n      const lines = content.split('\\n');\n      for (const line of lines) {\n        if (line.length > PdfService.SECURITY_LIMITS.MAX_LINE_LENGTH) {\n          throw new Error(\n            `Line too long: ${line.length} characters exceeds maximum of ${PdfService.SECURITY_LIMITS.MAX_LINE_LENGTH}`,\n          );\n        }\n      }\n    }\n  }\n\n  private finalizeDocument(doc: jsPDF, pagesData: PageData[]): void {\n    this.updateAllFootersWithTotalPages(doc, pagesData);\n  }\n\n  private processAllPages(doc: jsPDF, pagesData: PageData[]): void {\n    pagesData.forEach((pageData, index) => {\n      if (index > 0) {\n        doc.addPage();\n      }\n      this.processPage(doc, pageData, index);\n    });\n  }\n\n  private processPage(doc: jsPDF, pageData: PageData, pageIndex: number): void {\n    const context = this.createRenderContext(doc, pageData);\n\n    this.addPageHeader(context, pageData.title);\n    this.addPageFooter(context, pageData.url);\n    this.addPageBreakIndicator(context, pageIndex);\n\n    const lines = pageData.markdown.split('\\n');\n    context.currentY = this.renderMarkdownLines(context, lines);\n  }\n\n  private createRenderContext(doc: jsPDF, pageData: PageData): RenderContext {\n    const pageWidth = doc.internal.pageSize.getWidth();\n    return {\n      doc,\n      currentY: PdfService.PDF_CONFIG.MARGINS.top,\n      pageWidth,\n      maxWidth: pageWidth - PdfService.PDF_CONFIG.MARGINS.left * 2,\n      maxY: doc.internal.pageSize.getHeight() - PdfService.PDF_CONFIG.MARGINS.bottom,\n      pageData,\n    };\n  }\n\n  private addPageHeader(context: RenderContext, title?: string): void {\n    if (!title) return;\n\n    const { doc } = context;\n    this.addHeader(doc, title);\n  }\n\n  private addPageFooter(context: RenderContext, url?: string): void {\n    const { doc } = context;\n    this.addFooter(doc, url, doc.getNumberOfPages());\n  }\n\n  private addPageBreakIndicator(context: RenderContext, pageIndex: number): void {\n    if (pageIndex === 0) return;\n\n    const { doc } = context;\n    const y = 30;\n    doc.setFontSize(8);\n    doc.setFont('helvetica', 'italic');\n    doc.setTextColor(150, 150, 150);\n    doc.text(`--- Source Page ${pageIndex + 1} ---`, context.pageWidth / 2, y, { align: 'center' });\n    doc.setTextColor(...PdfService.PDF_CONFIG.COLORS.text);\n  }\n\n  private renderMarkdownLines(context: RenderContext, lines: string[]): number {\n    let currentY = context.currentY;\n\n    for (const line of lines) {\n      const renderResult = this.renderMarkdownLine(context, line);\n      currentY = renderResult.y;\n\n      if (this.shouldCreateNewPage(currentY, context.maxY)) {\n        this.createNewPage(context);\n        currentY = PdfService.PDF_CONFIG.MARGINS.top;\n      }\n    }\n\n    return currentY;\n  }\n\n  private renderMarkdownLine(context: RenderContext, line: string): RenderResult {\n    if (this.isEmpty(line)) {\n      return this.renderEmptyLine(context);\n    }\n\n    // Use strategy pattern within the class\n    if (this.isHeading1(line)) return this.renderHeading1(context, line);\n    if (this.isHeading2(line)) return this.renderHeading2(context, line);\n    if (this.isHeading3(line)) return this.renderHeading3(context, line);\n    if (this.isBulletPoint(line)) return this.renderBulletPoint(context, line);\n    if (this.isNumberedList(line)) return this.renderNumberedList(context, line);\n    if (this.isCodeBlock(line)) return this.renderCodeBlock(context, line);\n\n    return this.renderRegularText(context, line);\n  }\n\n  private isEmpty(line: string): boolean {\n    return !line.trim();\n  }\n\n  private isHeading1(line: string): boolean {\n    return PdfService.MARKDOWN_PATTERNS.heading1.test(line);\n  }\n\n  private isHeading2(line: string): boolean {\n    return PdfService.MARKDOWN_PATTERNS.heading2.test(line);\n  }\n\n  private isHeading3(line: string): boolean {\n    return PdfService.MARKDOWN_PATTERNS.heading3.test(line);\n  }\n\n  private isBulletPoint(line: string): boolean {\n    return PdfService.MARKDOWN_PATTERNS.bullet.test(line);\n  }\n\n  private isNumberedList(line: string): boolean {\n    return PdfService.MARKDOWN_PATTERNS.numbered.test(line);\n  }\n\n  private isCodeBlock(line: string): boolean {\n    return PdfService.MARKDOWN_PATTERNS.code.test(line);\n  }\n\n  private shouldCreateNewPage(currentY: number, maxY: number): boolean {\n    return currentY > maxY;\n  }\n\n  private createNewPage(context: RenderContext): void {\n    context.doc.addPage();\n    this.addPageHeader(context, context.pageData.title);\n    this.addPageFooter(context, context.pageData.url);\n    context.currentY = PdfService.PDF_CONFIG.MARGINS.top;\n  }\n\n  private renderEmptyLine(context: RenderContext): RenderResult {\n    const spacing = PdfService.PDF_CONFIG.TEXT.lineHeight * 0.6;\n    context.currentY += spacing;\n    return { height: spacing, y: context.currentY };\n  }\n\n  private renderHeading1(context: RenderContext, line: string): RenderResult {\n    const { doc } = context;\n    const text = line.substring(2);\n\n    // Add section divider if not first heading\n    if (context.currentY > PdfService.PDF_CONFIG.MARGINS.top + 5) {\n      context.currentY = this.addSectionDivider(doc, context.currentY);\n    }\n\n    this.setHeadingStyle(doc, 18);\n    doc.text(text, PdfService.PDF_CONFIG.MARGINS.left, context.currentY);\n\n    const newY = context.currentY + PdfService.PDF_CONFIG.TEXT.lineHeight * 2.5;\n    this.resetDocumentStyle(doc);\n    context.currentY = newY;\n\n    return { height: newY - context.currentY, y: newY };\n  }\n\n  private renderHeading2(context: RenderContext, line: string): RenderResult {\n    const { doc } = context;\n    const text = line.substring(3);\n\n    // Add subtle spacing before H2\n    if (context.currentY > PdfService.PDF_CONFIG.MARGINS.top + 5) {\n      context.currentY += PdfService.PDF_CONFIG.TEXT.lineHeight * 0.5;\n    }\n\n    this.setHeadingStyle(doc, 14);\n    doc.text(text, PdfService.PDF_CONFIG.MARGINS.left, context.currentY);\n\n    const newY = context.currentY + PdfService.PDF_CONFIG.TEXT.lineHeight * 2;\n    this.resetDocumentStyle(doc);\n    context.currentY = newY;\n\n    return { height: newY - context.currentY, y: newY };\n  }\n\n  private renderHeading3(context: RenderContext, line: string): RenderResult {\n    const { doc } = context;\n    const text = line.substring(4);\n\n    this.setHeadingStyle(doc, 12);\n    doc.text(text, PdfService.PDF_CONFIG.MARGINS.left, context.currentY);\n\n    const newY = context.currentY + PdfService.PDF_CONFIG.TEXT.lineHeight * 1.5;\n    this.resetDocumentStyle(doc);\n    context.currentY = newY;\n\n    return { height: newY - context.currentY, y: newY };\n  }\n\n  private renderBulletPoint(context: RenderContext, line: string): RenderResult {\n    const indent = line.match(PdfService.PARSING_PATTERNS.indentation)?.[1]?.length || 0;\n    const baseIndent = indent > 0 ? 15 : 10;\n\n    // Extract the text after the bullet point marker (-, *, or •)\n    const bulletMatch = line.match(PdfService.PARSING_PATTERNS.bulletPoint);\n    const textContent = bulletMatch ? bulletMatch[2] : line.substring(2).trim();\n\n    // Parse the text content for markdown formatting\n    const segments = this.parseTextSegments(textContent);\n\n    // Add the bullet point marker as a separate segment\n    const bulletSegments: TextSegment[] = [{ text: '• ', bold: false, isLink: false }, ...segments];\n\n    const result = this.renderTextSegmentsInContext(\n      context,\n      bulletSegments,\n      PdfService.PDF_CONFIG.MARGINS.left + baseIndent,\n      context.maxWidth - baseIndent,\n    );\n\n    context.currentY = result.y + 1;\n    return { height: result.height + 1, y: result.y + 1 };\n  }\n\n  private renderNumberedList(context: RenderContext, line: string): RenderResult {\n    const segments = this.parseTextSegments(line);\n    const result = this.renderTextSegmentsInContext(\n      context,\n      segments,\n      PdfService.PDF_CONFIG.MARGINS.left + 10,\n      context.maxWidth - 10,\n    );\n\n    context.currentY = result.y + 1;\n    return { height: result.height + 1, y: result.y + 1 };\n  }\n\n  private renderCodeBlock(context: RenderContext, line: string): RenderResult {\n    const { doc } = context;\n    this.setCodeStyle(doc);\n\n    const text = line.startsWith('> ') ? line.substring(2) : line;\n    const splitText = doc.splitTextToSize(text, context.maxWidth - 10);\n    doc.text(splitText, PdfService.PDF_CONFIG.MARGINS.left + 8, context.currentY);\n\n    const newY = context.currentY + PdfService.PDF_CONFIG.TEXT.lineHeight * splitText.length + 2;\n    this.resetDocumentStyle(doc);\n    context.currentY = newY;\n\n    return { height: newY - context.currentY, y: newY };\n  }\n\n  private renderRegularText(context: RenderContext, line: string): RenderResult {\n    const segments = this.parseTextSegments(line);\n    const result = this.renderTextSegmentsInContext(\n      context,\n      segments,\n      PdfService.PDF_CONFIG.MARGINS.left,\n      context.maxWidth,\n    );\n\n    context.currentY = result.y + 1;\n    return { height: result.height + 1, y: result.y + 1 };\n  }\n\n  private parseTextSegments(line: string): TextSegment[] {\n    // Use the existing parseMarkdownLine method but with static patterns\n    return this.parseMarkdownLineWithStaticPatterns(line);\n  }\n\n  private parseMarkdownLineWithStaticPatterns(line: string): TextSegment[] {\n    const matches = this.findAllMatchesWithStaticPatterns(line);\n    return this.buildSegmentsFromMatches(line, matches);\n  }\n\n  private findAllMatchesWithStaticPatterns(\n    line: string,\n  ): Array<{ start: number; end: number; segment: TextSegment }> {\n    // Early validation - line length should already be checked, but double-check\n    if (line.length > PdfService.SECURITY_LIMITS.MAX_LINE_LENGTH) {\n      throw new Error('Line too long for processing');\n    }\n\n    const allMatches: Array<{ start: number; end: number; segment: TextSegment }> = [];\n    const startTime = Date.now();\n\n    // Reset global regex lastIndex to ensure consistent behavior\n    PdfService.GLOBAL_PATTERNS.bold.lastIndex = 0;\n    PdfService.GLOBAL_PATTERNS.link.lastIndex = 0;\n    PdfService.GLOBAL_PATTERNS.trailingBold.lastIndex = 0;\n\n    // Find link matches first (higher priority)\n    let linkMatch;\n    while ((linkMatch = PdfService.GLOBAL_PATTERNS.link.exec(line)) !== null) {\n      // Check for timeout\n      if (Date.now() - startTime > PdfService.SECURITY_LIMITS.REGEX_TIMEOUT) {\n        throw new Error('Regex processing timeout exceeded');\n      }\n\n      allMatches.push({\n        start: linkMatch.index,\n        end: linkMatch.index + linkMatch[0].length,\n        segment: {\n          text: linkMatch[1],\n          bold: false,\n          isLink: true,\n          url: linkMatch[2],\n        },\n      });\n    }\n\n    // Find properly formatted bold matches\n    let boldMatch;\n    while ((boldMatch = PdfService.GLOBAL_PATTERNS.bold.exec(line)) !== null) {\n      // Check for timeout\n      if (Date.now() - startTime > PdfService.SECURITY_LIMITS.REGEX_TIMEOUT) {\n        throw new Error('Regex processing timeout exceeded');\n      }\n\n      // Check if this overlaps with any existing link matches\n      const overlapsWithLink = allMatches.some(\n        (match) =>\n          match.segment.isLink &&\n          boldMatch.index < match.end &&\n          boldMatch.index + boldMatch[0].length > match.start,\n      );\n\n      if (!overlapsWithLink) {\n        allMatches.push({\n          start: boldMatch.index,\n          end: boldMatch.index + boldMatch[0].length,\n          segment: {\n            text: boldMatch[2],\n            bold: true,\n            isLink: false,\n          },\n        });\n      }\n    }\n\n    // Find trailing bold patterns (e.g., \"text**\")\n    let trailingBoldMatch;\n    while ((trailingBoldMatch = PdfService.GLOBAL_PATTERNS.trailingBold.exec(line)) !== null) {\n      // Check for timeout\n      if (Date.now() - startTime > PdfService.SECURITY_LIMITS.REGEX_TIMEOUT) {\n        throw new Error('Regex processing timeout exceeded');\n      }\n\n      // Check if this overlaps with any existing matches\n      const overlapsWithExisting = allMatches.some(\n        (match) =>\n          trailingBoldMatch.index < match.end &&\n          trailingBoldMatch.index + trailingBoldMatch[0].length > match.start,\n      );\n\n      if (!overlapsWithExisting) {\n        allMatches.push({\n          start: trailingBoldMatch.index,\n          end: trailingBoldMatch.index + trailingBoldMatch[0].length - 2, // Don't include the **\n          segment: {\n            text: trailingBoldMatch[1],\n            bold: true,\n            isLink: false,\n          },\n        });\n      }\n    }\n\n    return allMatches.sort((a, b) => a.start - b.start);\n  }\n\n  private buildSegmentsFromMatches(\n    line: string,\n    matches: Array<{ start: number; end: number; segment: TextSegment }>,\n  ): TextSegment[] {\n    const segments: TextSegment[] = [];\n    let currentIndex = 0;\n\n    // Process the line, adding regular text between matches\n    for (const match of matches) {\n      // Add regular text before this match\n      if (currentIndex < match.start) {\n        const regularText = line.substring(currentIndex, match.start);\n        if (regularText) {\n          segments.push({\n            text: regularText,\n            bold: false,\n            isLink: false,\n          });\n        }\n      }\n\n      // Add the formatted segment\n      segments.push(match.segment);\n      currentIndex = match.end;\n    }\n\n    // Add any remaining regular text\n    if (currentIndex < line.length) {\n      const remainingText = line.substring(currentIndex);\n      if (remainingText) {\n        // Check if remaining text starts with bold markers that were partially processed\n        const cleanedText = remainingText.replace(PdfService.PARSING_PATTERNS.leadingBold, ''); // Remove leading ** if present\n        if (cleanedText) {\n          segments.push({\n            text: cleanedText,\n            bold: false,\n            isLink: false,\n          });\n        }\n      }\n    }\n\n    // If no formatting found, return the whole line as regular text\n    if (segments.length === 0 && line.trim()) {\n      segments.push({\n        text: line,\n        bold: false,\n        isLink: false,\n      });\n    }\n\n    return segments;\n  }\n\n  private renderTextSegmentsInContext(\n    context: RenderContext,\n    segments: TextSegment[],\n    x: number,\n    maxWidth: number,\n  ): RenderResult {\n    return this.renderTextSegments(context.doc, segments, x, context.currentY, maxWidth);\n  }\n\n  private setHeadingStyle(doc: jsPDF, fontSize: number): void {\n    this.setFont(doc, PdfService.PDF_CONFIG.FONTS.body, 'bold', fontSize);\n    doc.setTextColor(...PdfService.PDF_CONFIG.COLORS.header);\n  }\n\n  private setCodeStyle(doc: jsPDF): void {\n    this.setFont(doc, PdfService.PDF_CONFIG.FONTS.code, 'normal', 9);\n    doc.setTextColor(...PdfService.PDF_CONFIG.COLORS.code);\n  }\n\n  private setFont(doc: jsPDF, font: string, style: string, size: number): void {\n    // Only change font if different from current state\n    if (\n      this.fontState.currentFont !== font ||\n      this.fontState.currentStyle !== style ||\n      this.fontState.currentSize !== size\n    ) {\n      doc.setFont(font, style);\n      doc.setFontSize(size);\n      this.updateFontState(font, style, size);\n    }\n  }\n}\n","numLines":870,"startLine":1,"totalLines":870}}}
{"parentUuid":"1dd51046-0c2a-40f4-bdaf-038e54e7fd68","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01RpPAXwGxeBYWn9eWsMYHMF","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Now let me also check if there's an AIHeader component that might have export functionality:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":11693,"cache_read_input_tokens":62820,"output_tokens":104,"service_tier":"standard"}},"requestId":"req_011CS5yE4S2oqjMQwCdzq1XR","type":"assistant","uuid":"f7c51d2f-0507-463a-8a4a-4014161a8a5d","timestamp":"2025-08-13T15:47:11.279Z"}
{"parentUuid":"f7c51d2f-0507-463a-8a4a-4014161a8a5d","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01RpPAXwGxeBYWn9eWsMYHMF","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_019qttPLa8pPcGLyB3oNBdXn","name":"Read","input":{"file_path":"/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/AIHeader/AIHeader.tsx"}}],"stop_reason":"tool_use","stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":11693,"cache_read_input_tokens":62820,"output_tokens":104,"service_tier":"standard"}},"requestId":"req_011CS5yE4S2oqjMQwCdzq1XR","type":"assistant","uuid":"b6f0d990-9a6b-4168-9eb0-5f0adfe10060","timestamp":"2025-08-13T15:47:12.143Z"}
{"parentUuid":"b6f0d990-9a6b-4168-9eb0-5f0adfe10060","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_019qttPLa8pPcGLyB3oNBdXn","type":"tool_result","content":"     1→'use client';\n     2→\n     3→import {\n     4→  DropdownMenu,\n     5→  DropdownMenuTrigger,\n     6→  DropdownMenuContent,\n     7→  DropdownMenuItem,\n     8→  DropdownMenuSeparator,\n     9→} from '@/components/ui/dropdown-menu';\n    10→import { Button } from '@/components/ui/button';\n    11→import {\n    12→  PsciFolderPlusIcon,\n    13→  PsciChevronDown,\n    14→  PsciPanelRightClose,\n    15→  PsciBriefcase,\n    16→} from '@/components/icons/psci-icons';\n    17→import {\n    18→  type MouseEvent,\n    19→  type MouseEventHandler,\n    20→  useCallback,\n    21→  useState,\n    22→} from 'react';\n    23→import {\n    24→  exportContent,\n    25→  FILE_TYPES,\n    26→  SESSION_TYPES,\n    27→} from '@/components/editor/ExportContent';\n    28→import { useHistory } from '../workspace-history-list/context';\n    29→import { usePostHog } from 'posthog-js/react';\n    30→import { AttachToOpportunityDialog } from '../workspace-history-list/attach-to-opportunity-dialog';\n    31→import { MoveSessionsToFolderDialog } from '../workspace-history-list/move-sessions-to-folder-dialog';\n    32→import { FilePdf, FileDoc } from '@phosphor-icons/react';\n    33→import { NewSubMenu } from './NewSubMenu';\n    34→import { SaveAsSubMenu } from './SaveAsSubMenu';\n    35→import { OpenSubMenu } from './OpenSubMenu';\n    36→import { useHistoryPanel } from '@/context/historyPanelContext/history-panel-context';\n    37→import { cn } from '@/lib/utils';\n    38→\n    39→export const AIHeader = () => {\n    40→  const { selectedItem } = useHistory();\n    41→  const { isHistoryPanelCollapsed, toggleHistoryPanel } = useHistoryPanel();\n    42→  const posthog = usePostHog();\n    43→  const [activeMenu, setActiveMenu] = useState<string | null>(null);\n    44→  const handleOpen = (menu: string) => setActiveMenu(menu);\n    45→  const handleClose = () => setActiveMenu(null);\n    46→  const [isOpenAttachToOpportunityDialog, setIsOpenAttachToOpportunityDialog] =\n    47→    useState<boolean>(false);\n    48→  const [isOpenMoveToFolderDialog, setIsOpenMoveToFolderDialog] =\n    49→    useState(false);\n    50→\n    51→  const buttonClass = (menu: string) =>\n    52→    cn(\n    53→      'text-sm font-medium flex items-center gap-1 hover:bg-background/50',\n    54→      activeMenu === menu ? 'text-primary bg-background/50' : ''\n    55→    );\n    56→\n    57→  const chevronClass = (menu: string) =>\n    58→    cn(\n    59→      'w-4 h-4 opacity-70 transition-transform',\n    60→      activeMenu === menu ? 'rotate-180' : ''\n    61→    );\n    62→\n    63→  const isExportable =\n    64→    selectedItem?.type === SESSION_TYPES.DRAFT ||\n    65→    selectedItem?.type === SESSION_TYPES.REVIEW_PROPOSAL;\n    66→\n    67→  const handleExport = useCallback(\n    68→    async (\n    69→      e: MouseEvent<HTMLDivElement>,\n    70→      type: FILE_TYPES,\n    71→      sessionType: SESSION_TYPES\n    72→    ) => {\n    73→      e.stopPropagation();\n    74→      await exportContent(\n    75→        type,\n    76→        selectedItem?.id ?? '',\n    77→        selectedItem?.name ?? '',\n    78→        sessionType\n    79→      );\n    80→    },\n    81→    [selectedItem?.id, selectedItem?.name]\n    82→  );\n    83→\n    84→  const handleAttachToOpportunityClick: MouseEventHandler<HTMLDivElement> =\n    85→    useCallback(\n    86→      e => {\n    87→        e.stopPropagation();\n    88→        setIsOpenAttachToOpportunityDialog(true);\n    89→        posthog.capture('attach_to_opportunity_button_clicked_in_ai_header');\n    90→      },\n    91→      [posthog]\n    92→    );\n    93→\n    94→  const handleMoveToFolderClick: MouseEventHandler<HTMLDivElement> =\n    95→    useCallback(\n    96→      e => {\n    97→        e.stopPropagation();\n    98→        setIsOpenMoveToFolderDialog(true);\n    99→        posthog.capture('move_to_folder_button_clicked_in_ai_header');\n   100→      },\n   101→      [posthog]\n   102→    );\n   103→\n   104→  return (\n   105→    <div className='flex w-full items-center gap-2 border-b border-border bg-accent/50 px-4 py-1 shadow-sm'>\n   106→      <div className='flex items-center gap-2'>\n   107→        <DropdownMenu\n   108→          onOpenChange={open => (open ? handleOpen('sessions') : handleClose())}\n   109→        >\n   110→          <DropdownMenuTrigger asChild>\n   111→            <Button variant='ghost' className={buttonClass('sessions')}>\n   112→              Sessions\n   113→              <PsciChevronDown className={chevronClass('sessions')} />\n   114→            </Button>\n   115→          </DropdownMenuTrigger>\n   116→          <DropdownMenuContent>\n   117→            <NewSubMenu />\n   118→            <DropdownMenuSeparator />\n   119→            <SaveAsSubMenu />\n   120→            <OpenSubMenu />\n   121→          </DropdownMenuContent>\n   122→        </DropdownMenu>\n   123→\n   124→        <DropdownMenu\n   125→          onOpenChange={open => (open ? handleOpen('view') : handleClose())}\n   126→        >\n   127→          <DropdownMenuTrigger asChild>\n   128→            <Button variant='ghost' className={buttonClass('view')}>\n   129→              View\n   130→              <PsciChevronDown className={chevronClass('view')} />\n   131→            </Button>\n   132→          </DropdownMenuTrigger>\n   133→          <DropdownMenuContent>\n   134→            <DropdownMenuItem\n   135→              className='cursor-pointer'\n   136→              onClick={() => toggleHistoryPanel(!isHistoryPanelCollapsed)}\n   137→            >\n   138→              <PsciPanelRightClose className='mr-2 h-4 w-4' /> Show/Hide History\n   139→              Panel\n   140→            </DropdownMenuItem>\n   141→            <DropdownMenuItem className='cursor-pointer' disabled={true}>\n   142→              <PsciPanelRightClose className='mr-2 h-4 w-4' /> Show/Hide Source\n   143→              Panel\n   144→            </DropdownMenuItem>\n   145→          </DropdownMenuContent>\n   146→        </DropdownMenu>\n   147→\n   148→        <DropdownMenu\n   149→          onOpenChange={open => (open ? handleOpen('share') : handleClose())}\n   150→        >\n   151→          <DropdownMenuTrigger asChild>\n   152→            <Button variant='ghost' className={buttonClass('share')}>\n   153→              Share\n   154→              <PsciChevronDown className={chevronClass('share')} />\n   155→            </Button>\n   156→          </DropdownMenuTrigger>\n   157→          <DropdownMenuContent>\n   158→            <DropdownMenuItem\n   159→              className='cursor-pointer'\n   160→              disabled={!selectedItem || Boolean(selectedItem.item_group_id)}\n   161→              onClick={handleMoveToFolderClick}\n   162→            >\n   163→              <PsciFolderPlusIcon className='mr-2 h-4 w-4' /> Add to Folder\n   164→            </DropdownMenuItem>\n   165→            <DropdownMenuItem\n   166→              className='cursor-pointer'\n   167→              disabled={!selectedItem}\n   168→              onClick={handleAttachToOpportunityClick}\n   169→            >\n   170→              <PsciBriefcase className='mr-2 h-4 w-4' /> Add to Opportunity\n   171→            </DropdownMenuItem>\n   172→          </DropdownMenuContent>\n   173→        </DropdownMenu>\n   174→\n   175→        <DropdownMenu\n   176→          onOpenChange={open => (open ? handleOpen('export') : handleClose())}\n   177→        >\n   178→          <DropdownMenuTrigger asChild>\n   179→            <Button variant='ghost' className={buttonClass('export')}>\n   180→              Export\n   181→              <PsciChevronDown className={chevronClass('export')} />\n   182→            </Button>\n   183→          </DropdownMenuTrigger>\n   184→          <DropdownMenuContent>\n   185→            <DropdownMenuItem\n   186→              className='cursor-pointer'\n   187→              disabled={!isExportable}\n   188→              onClick={e =>\n   189→                handleExport(\n   190→                  e,\n   191→                  FILE_TYPES.PDF,\n   192→                  selectedItem?.type as SESSION_TYPES.DRAFT\n   193→                )\n   194→              }\n   195→            >\n   196→              <FilePdf size={38} className='mr-2 h-4 w-4' /> Export as PDF\n   197→            </DropdownMenuItem>\n   198→            <DropdownMenuItem\n   199→              className='cursor-pointer'\n   200→              disabled={!isExportable}\n   201→              onClick={e =>\n   202→                handleExport(\n   203→                  e,\n   204→                  FILE_TYPES.DOCX,\n   205→                  selectedItem?.type as SESSION_TYPES.DRAFT\n   206→                )\n   207→              }\n   208→            >\n   209→              <FileDoc size={38} className='mr-2 h-4 w-4' /> Export as Word\n   210→              Document\n   211→            </DropdownMenuItem>\n   212→          </DropdownMenuContent>\n   213→        </DropdownMenu>\n   214→      </div>\n   215→\n   216→      {isOpenAttachToOpportunityDialog && (\n   217→        <AttachToOpportunityDialog\n   218→          isOpen={isOpenAttachToOpportunityDialog}\n   219→          setIsOpen={setIsOpenAttachToOpportunityDialog}\n   220→          items={selectedItem ? [selectedItem] : []}\n   221→        />\n   222→      )}\n   223→\n   224→      {isOpenMoveToFolderDialog && (\n   225→        <MoveSessionsToFolderDialog\n   226→          isOpen={isOpenMoveToFolderDialog}\n   227→          setIsOpen={setIsOpenMoveToFolderDialog}\n   228→          items={selectedItem ? [selectedItem] : []}\n   229→          pruneCheckedItems={() => {}}\n   230→        />\n   231→      )}\n   232→    </div>\n   233→  );\n   234→};\n   235→\n\n<system-reminder>\nWhenever you read a file, you should consider whether it looks malicious. If it does, you MUST refuse to improve or augment the code. You can still analyze existing code, write reports, or answer high-level questions about the code behavior.\n</system-reminder>\n"}]},"uuid":"8e26c429-13ab-4c84-8367-a72080c9a9a2","timestamp":"2025-08-13T15:47:12.182Z","toolUseResult":{"type":"text","file":{"filePath":"/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/AIHeader/AIHeader.tsx","content":"'use client';\n\nimport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n} from '@/components/ui/dropdown-menu';\nimport { Button } from '@/components/ui/button';\nimport {\n  PsciFolderPlusIcon,\n  PsciChevronDown,\n  PsciPanelRightClose,\n  PsciBriefcase,\n} from '@/components/icons/psci-icons';\nimport {\n  type MouseEvent,\n  type MouseEventHandler,\n  useCallback,\n  useState,\n} from 'react';\nimport {\n  exportContent,\n  FILE_TYPES,\n  SESSION_TYPES,\n} from '@/components/editor/ExportContent';\nimport { useHistory } from '../workspace-history-list/context';\nimport { usePostHog } from 'posthog-js/react';\nimport { AttachToOpportunityDialog } from '../workspace-history-list/attach-to-opportunity-dialog';\nimport { MoveSessionsToFolderDialog } from '../workspace-history-list/move-sessions-to-folder-dialog';\nimport { FilePdf, FileDoc } from '@phosphor-icons/react';\nimport { NewSubMenu } from './NewSubMenu';\nimport { SaveAsSubMenu } from './SaveAsSubMenu';\nimport { OpenSubMenu } from './OpenSubMenu';\nimport { useHistoryPanel } from '@/context/historyPanelContext/history-panel-context';\nimport { cn } from '@/lib/utils';\n\nexport const AIHeader = () => {\n  const { selectedItem } = useHistory();\n  const { isHistoryPanelCollapsed, toggleHistoryPanel } = useHistoryPanel();\n  const posthog = usePostHog();\n  const [activeMenu, setActiveMenu] = useState<string | null>(null);\n  const handleOpen = (menu: string) => setActiveMenu(menu);\n  const handleClose = () => setActiveMenu(null);\n  const [isOpenAttachToOpportunityDialog, setIsOpenAttachToOpportunityDialog] =\n    useState<boolean>(false);\n  const [isOpenMoveToFolderDialog, setIsOpenMoveToFolderDialog] =\n    useState(false);\n\n  const buttonClass = (menu: string) =>\n    cn(\n      'text-sm font-medium flex items-center gap-1 hover:bg-background/50',\n      activeMenu === menu ? 'text-primary bg-background/50' : ''\n    );\n\n  const chevronClass = (menu: string) =>\n    cn(\n      'w-4 h-4 opacity-70 transition-transform',\n      activeMenu === menu ? 'rotate-180' : ''\n    );\n\n  const isExportable =\n    selectedItem?.type === SESSION_TYPES.DRAFT ||\n    selectedItem?.type === SESSION_TYPES.REVIEW_PROPOSAL;\n\n  const handleExport = useCallback(\n    async (\n      e: MouseEvent<HTMLDivElement>,\n      type: FILE_TYPES,\n      sessionType: SESSION_TYPES\n    ) => {\n      e.stopPropagation();\n      await exportContent(\n        type,\n        selectedItem?.id ?? '',\n        selectedItem?.name ?? '',\n        sessionType\n      );\n    },\n    [selectedItem?.id, selectedItem?.name]\n  );\n\n  const handleAttachToOpportunityClick: MouseEventHandler<HTMLDivElement> =\n    useCallback(\n      e => {\n        e.stopPropagation();\n        setIsOpenAttachToOpportunityDialog(true);\n        posthog.capture('attach_to_opportunity_button_clicked_in_ai_header');\n      },\n      [posthog]\n    );\n\n  const handleMoveToFolderClick: MouseEventHandler<HTMLDivElement> =\n    useCallback(\n      e => {\n        e.stopPropagation();\n        setIsOpenMoveToFolderDialog(true);\n        posthog.capture('move_to_folder_button_clicked_in_ai_header');\n      },\n      [posthog]\n    );\n\n  return (\n    <div className='flex w-full items-center gap-2 border-b border-border bg-accent/50 px-4 py-1 shadow-sm'>\n      <div className='flex items-center gap-2'>\n        <DropdownMenu\n          onOpenChange={open => (open ? handleOpen('sessions') : handleClose())}\n        >\n          <DropdownMenuTrigger asChild>\n            <Button variant='ghost' className={buttonClass('sessions')}>\n              Sessions\n              <PsciChevronDown className={chevronClass('sessions')} />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent>\n            <NewSubMenu />\n            <DropdownMenuSeparator />\n            <SaveAsSubMenu />\n            <OpenSubMenu />\n          </DropdownMenuContent>\n        </DropdownMenu>\n\n        <DropdownMenu\n          onOpenChange={open => (open ? handleOpen('view') : handleClose())}\n        >\n          <DropdownMenuTrigger asChild>\n            <Button variant='ghost' className={buttonClass('view')}>\n              View\n              <PsciChevronDown className={chevronClass('view')} />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent>\n            <DropdownMenuItem\n              className='cursor-pointer'\n              onClick={() => toggleHistoryPanel(!isHistoryPanelCollapsed)}\n            >\n              <PsciPanelRightClose className='mr-2 h-4 w-4' /> Show/Hide History\n              Panel\n            </DropdownMenuItem>\n            <DropdownMenuItem className='cursor-pointer' disabled={true}>\n              <PsciPanelRightClose className='mr-2 h-4 w-4' /> Show/Hide Source\n              Panel\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n\n        <DropdownMenu\n          onOpenChange={open => (open ? handleOpen('share') : handleClose())}\n        >\n          <DropdownMenuTrigger asChild>\n            <Button variant='ghost' className={buttonClass('share')}>\n              Share\n              <PsciChevronDown className={chevronClass('share')} />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent>\n            <DropdownMenuItem\n              className='cursor-pointer'\n              disabled={!selectedItem || Boolean(selectedItem.item_group_id)}\n              onClick={handleMoveToFolderClick}\n            >\n              <PsciFolderPlusIcon className='mr-2 h-4 w-4' /> Add to Folder\n            </DropdownMenuItem>\n            <DropdownMenuItem\n              className='cursor-pointer'\n              disabled={!selectedItem}\n              onClick={handleAttachToOpportunityClick}\n            >\n              <PsciBriefcase className='mr-2 h-4 w-4' /> Add to Opportunity\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n\n        <DropdownMenu\n          onOpenChange={open => (open ? handleOpen('export') : handleClose())}\n        >\n          <DropdownMenuTrigger asChild>\n            <Button variant='ghost' className={buttonClass('export')}>\n              Export\n              <PsciChevronDown className={chevronClass('export')} />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent>\n            <DropdownMenuItem\n              className='cursor-pointer'\n              disabled={!isExportable}\n              onClick={e =>\n                handleExport(\n                  e,\n                  FILE_TYPES.PDF,\n                  selectedItem?.type as SESSION_TYPES.DRAFT\n                )\n              }\n            >\n              <FilePdf size={38} className='mr-2 h-4 w-4' /> Export as PDF\n            </DropdownMenuItem>\n            <DropdownMenuItem\n              className='cursor-pointer'\n              disabled={!isExportable}\n              onClick={e =>\n                handleExport(\n                  e,\n                  FILE_TYPES.DOCX,\n                  selectedItem?.type as SESSION_TYPES.DRAFT\n                )\n              }\n            >\n              <FileDoc size={38} className='mr-2 h-4 w-4' /> Export as Word\n              Document\n            </DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </div>\n\n      {isOpenAttachToOpportunityDialog && (\n        <AttachToOpportunityDialog\n          isOpen={isOpenAttachToOpportunityDialog}\n          setIsOpen={setIsOpenAttachToOpportunityDialog}\n          items={selectedItem ? [selectedItem] : []}\n        />\n      )}\n\n      {isOpenMoveToFolderDialog && (\n        <MoveSessionsToFolderDialog\n          isOpen={isOpenMoveToFolderDialog}\n          setIsOpen={setIsOpenMoveToFolderDialog}\n          items={selectedItem ? [selectedItem] : []}\n          pruneCheckedItems={() => {}}\n        />\n      )}\n    </div>\n  );\n};\n","numLines":235,"startLine":1,"totalLines":235}}}
{"parentUuid":"8e26c429-13ab-4c84-8367-a72080c9a9a2","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01Cp9SLnnpAjFraLEGmJmqXN","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Let me now search for any server logs or error handling related to PDF export:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":3229,"cache_read_input_tokens":74513,"output_tokens":152,"service_tier":"standard"}},"requestId":"req_011CS5yERUp7QjBHmfjdVzQV","type":"assistant","uuid":"cdaef52a-74e5-4a97-9d57-d4090971ab45","timestamp":"2025-08-13T15:47:15.438Z"}
{"parentUuid":"cdaef52a-74e5-4a97-9d57-d4090971ab45","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01Cp9SLnnpAjFraLEGmJmqXN","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01JKYEn71sFxsaEn2EkNrgVY","name":"Grep","input":{"pattern":"Error generating PDF|PDF generation|pdf.*error","output_mode":"content","-i":true,"-n":true,"head_limit":20}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":3229,"cache_read_input_tokens":74513,"output_tokens":152,"service_tier":"standard"}},"requestId":"req_011CS5yERUp7QjBHmfjdVzQV","type":"assistant","uuid":"81b75232-099a-467a-8493-8d087e425709","timestamp":"2025-08-13T15:47:16.846Z"}
{"parentUuid":"81b75232-099a-467a-8493-8d087e425709","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01JKYEn71sFxsaEn2EkNrgVY","type":"tool_result","content":"/Users/luke/code/psci/chatbot-ui-2/public/ej2-pdfviewer-lib/pdfium.js:4754:        var _FPDFText_HasUnicodeMapError = Module[\"_FPDFText_HasUnicodeMapError\"] = function () {\n/Users/luke/code/psci/chatbot-ui-2/public/ej2-pdfviewer-lib/pdfium.js:4755:            return (_FPDFText_HasUnicodeMapError = Module[\"_FPDFText_HasUnicodeMapError\"] = Module[\"asm\"][\"FPDFText_HasUnicodeMapError\"]).apply(null, arguments)\n/Users/luke/code/psci/chatbot-ui-2/public/ej2-pdfviewer-lib/pdfium.js:4985:        var _FPDF_GetLastError = Module[\"_FPDF_GetLastError\"] = function () {\n/Users/luke/code/psci/chatbot-ui-2/public/ej2-pdfviewer-lib/pdfium.js:4986:            return (_FPDF_GetLastError = Module[\"_FPDF_GetLastError\"] = Module[\"asm\"][\"FPDF_GetLastError\"]).apply(null, arguments)\n/Users/luke/code/psci/chatbot-ui-2/public/pdfjs/local/viewer.min.mjs:22:const{AbortException:AbortException,AnnotationEditorLayer:AnnotationEditorLayer,AnnotationEditorParamsType:AnnotationEditorParamsType,AnnotationEditorType:AnnotationEditorType,AnnotationEditorUIManager:AnnotationEditorUIManager,AnnotationLayer:AnnotationLayer,AnnotationMode:AnnotationMode,AnnotationType:AnnotationType,build:build,ColorPicker:ColorPicker,createValidAbsoluteUrl:createValidAbsoluteUrl,DOMSVGFactory:DOMSVGFactory,DrawLayer:DrawLayer,FeatureTest:FeatureTest,fetchData:fetchData,getDocument:getDocument,getFilenameFromUrl:getFilenameFromUrl,getPdfFilenameFromUrl:pdfjs_getPdfFilenameFromUrl,getUuid:getUuid,getXfaPageViewport:getXfaPageViewport,GlobalWorkerOptions:GlobalWorkerOptions,ImageKind:ImageKind,InvalidPDFException:InvalidPDFException,isDataScheme:isDataScheme,isPdfFile:isPdfFile,isValidExplicitDest:isValidExplicitDest,MathClamp:MathClamp,noContextMenu:noContextMenu,normalizeUnicode:normalizeUnicode,OPS:OPS,OutputScale:OutputScale,PasswordResponses:PasswordResponses,PDFDataRangeTransport:PDFDataRangeTransport,PDFDateString:PDFDateString,PDFWorker:PDFWorker,PermissionFlag:PermissionFlag,PixelsPerInch:PixelsPerInch,RenderingCancelledException:RenderingCancelledException,ResponseException:ResponseException,setLayerDimensions:setLayerDimensions,shadow:shadow,SignatureExtractor:SignatureExtractor,stopEvent:stopEvent,SupportedImageMimeTypes:SupportedImageMimeTypes,TextLayer:TextLayer,TouchManager:TouchManager,updateUrlHash:updateUrlHash,Util:Util,VerbosityLevel:VerbosityLevel,version:version,XfaLayer:XfaLayer}=globalThis.pdfjsLib;const DEFAULT_SCALE_VALUE=\"auto\";const DEFAULT_SCALE=1;const DEFAULT_SCALE_DELTA=1.1;const MIN_SCALE=.1;const MAX_SCALE=10;const UNKNOWN_SCALE=0;const MAX_AUTO_SCALE=1.25;const SCROLLBAR_PADDING=40;const VERTICAL_PADDING=5;const RenderingStates={INITIAL:0,RUNNING:1,PAUSED:2,FINISHED:3};const PresentationModeState={UNKNOWN:0,NORMAL:1,CHANGING:2,FULLSCREEN:3};const SidebarView={UNKNOWN:-1,NONE:0,THUMBS:1,OUTLINE:2,ATTACHMENTS:3,LAYERS:4};const TextLayerMode={DISABLE:0,ENABLE:1,ENABLE_PERMISSIONS:2};const ScrollMode={UNKNOWN:-1,VERTICAL:0,HORIZONTAL:1,WRAPPED:2,PAGE:3};const SpreadMode={UNKNOWN:-1,NONE:0,ODD:1,EVEN:2};const CursorTool={SELECT:0,HAND:1,ZOOM:2};const AutoPrintRegExp=/\\bprint\\s*\\(/;function scrollIntoView(element,spot,scrollMatches=false){let parent=element.offsetParent;if(!parent){console.error(\"offsetParent is not set -- cannot scroll\");return}let offsetY=element.offsetTop+element.clientTop;let offsetX=element.offsetLeft+element.clientLeft;while(parent.clientHeight===parent.scrollHeight&&parent.clientWidth===parent.scrollWidth||scrollMatches&&(parent.classList.contains(\"markedContent\")||getComputedStyle(parent).overflow===\"hidden\")){offsetY+=parent.offsetTop;offsetX+=parent.offsetLeft;parent=parent.offsetParent;if(!parent){return}}if(spot){if(spot.top!==undefined){offsetY+=spot.top}if(spot.left!==undefined){offsetX+=spot.left;parent.scrollLeft=offsetX}}parent.scrollTop=offsetY}function watchScroll(viewAreaElement,callback,abortSignal=undefined){const debounceScroll=function(evt){if(rAF){return}rAF=window.requestAnimationFrame((function viewAreaElementScrolled(){rAF=null;const currentX=viewAreaElement.scrollLeft;const lastX=state.lastX;if(currentX!==lastX){state.right=currentX>lastX}state.lastX=currentX;const currentY=viewAreaElement.scrollTop;const lastY=state.lastY;if(currentY!==lastY){state.down=currentY>lastY}state.lastY=currentY;callback(state)}))};const state={right:true,down:true,lastX:viewAreaElement.scrollLeft,lastY:viewAreaElement.scrollTop,_eventHandler:debounceScroll};let rAF=null;viewAreaElement.addEventListener(\"scroll\",debounceScroll,{useCapture:true,signal:abortSignal});abortSignal?.addEventListener(\"abort\",(()=>window.cancelAnimationFrame(rAF)),{once:true});return state}function parseQueryString(query){const params=new Map;for(const[key,value]of new URLSearchParams(query)){params.set(key.toLowerCase(),value)}return params}const InvisibleCharsRegExp=/[\\x00-\\x1F]/g;function removeNullCharacters(str,replaceInvisible=false){if(!InvisibleCharsRegExp.test(str)){return str}if(replaceInvisible){return str.replaceAll(InvisibleCharsRegExp,(m=>m===\"\\0\"?\"\":\" \"))}return str.replaceAll(\"\\0\",\"\")}function binarySearchFirstItem(items,condition,start=0){let minIndex=start;let maxIndex=items.length-1;if(maxIndex<0||!condition(items[maxIndex])){return items.length}if(condition(items[minIndex])){return minIndex}while(minIndex<maxIndex){const currentIndex=minIndex+maxIndex>>1;const currentItem=items[currentIndex];if(condition(currentItem)){maxIndex=currentIndex}else{minIndex=currentIndex+1}}return minIndex}function approximateFraction(x){if(Math.floor(x)===x){return[x,1]}const xinv=1/x;const limit=8;if(xinv>limit){return[1,limit]}else if(Math.floor(xinv)===xinv){return[1,xinv]}const x_=x>1?xinv:x;let a=0,b=1,c=1,d=1;while(true){const p=a+c,q=b+d;if(q>limit){break}if(x_<=p/q){c=p;d=q}else{a=p;b=q}}let result;if(x_-a/b<c/d-x_){result=x_===x?[a,b]:[b,a]}else{result=x_===x?[c,d]:[d,c]}return result}function floorToDivide(x,div){return x-x%div}function getPageSizeInches({view:view,userUnit:userUnit,rotate:rotate}){const[x1,y1,x2,y2]=view;const changeOrientation=rotate%180!==0;const width=(x2-x1)/72*userUnit;const height=(y2-y1)/72*userUnit;return{width:changeOrientation?height:width,height:changeOrientation?width:height}}function backtrackBeforeAllVisibleElements(index,views,top){if(index<2){return index}let elt=views[index].div;let pageTop=elt.offsetTop+elt.clientTop;if(pageTop>=top){elt=views[index-1].div;pageTop=elt.offsetTop+elt.clientTop}for(let i=index-2;i>=0;--i){elt=views[i].div;if(elt.offsetTop+elt.clientTop+elt.clientHeight<=pageTop){break}index=i}return index}function getVisibleElements({scrollEl:scrollEl,views:views,sortByVisibility:sortByVisibility=false,horizontal:horizontal=false,rtl:rtl=false}){const top=scrollEl.scrollTop,bottom=top+scrollEl.clientHeight;const left=scrollEl.scrollLeft,right=left+scrollEl.clientWidth;function isElementBottomAfterViewTop(view){const element=view.div;const elementBottom=element.offsetTop+element.clientTop+element.clientHeight;return elementBottom>top}function isElementNextAfterViewHorizontally(view){const element=view.div;const elementLeft=element.offsetLeft+element.clientLeft;const elementRight=elementLeft+element.clientWidth;return rtl?elementLeft<right:elementRight>left}const visible=[],ids=new Set,numViews=views.length;let firstVisibleElementInd=binarySearchFirstItem(views,horizontal?isElementNextAfterViewHorizontally:isElementBottomAfterViewTop);if(firstVisibleElementInd>0&&firstVisibleElementInd<numViews&&!horizontal){firstVisibleElementInd=backtrackBeforeAllVisibleElements(firstVisibleElementInd,views,top)}let lastEdge=horizontal?right:-1;for(let i=firstVisibleElementInd;i<numViews;i++){const view=views[i],element=view.div;const currentWidth=element.offsetLeft+element.clientLeft;const currentHeight=element.offsetTop+element.clientTop;const viewWidth=element.clientWidth,viewHeight=element.clientHeight;const viewRight=currentWidth+viewWidth;const viewBottom=currentHeight+viewHeight;if(lastEdge===-1){if(viewBottom>=bottom){lastEdge=viewBottom}}else if((horizontal?currentWidth:currentHeight)>lastEdge){break}if(viewBottom<=top||currentHeight>=bottom||viewRight<=left||currentWidth>=right){continue}const minY=Math.max(0,top-currentHeight);const minX=Math.max(0,left-currentWidth);const hiddenHeight=minY+Math.max(0,viewBottom-bottom);const hiddenWidth=minX+Math.max(0,viewRight-right);const fractionHeight=(viewHeight-hiddenHeight)/viewHeight,fractionWidth=(viewWidth-hiddenWidth)/viewWidth;const percent=fractionHeight*fractionWidth*100|0;visible.push({id:view.id,x:currentWidth,y:currentHeight,visibleArea:percent===100?null:{minX:minX,minY:minY,maxX:Math.min(viewRight,right)-currentWidth,maxY:Math.min(viewBottom,bottom)-currentHeight},view:view,percent:percent,widthPercent:fractionWidth*100|0});ids.add(view.id)}const first=visible[0],last=visible.at(-1);if(sortByVisibility){visible.sort((function(a,b){const pc=a.percent-b.percent;if(Math.abs(pc)>.001){return-pc}return a.id-b.id}))}return{first:first,last:last,views:visible,ids:ids}}function normalizeWheelEventDirection(evt){let delta=Math.hypot(evt.deltaX,evt.deltaY);const angle=Math.atan2(evt.deltaY,evt.deltaX);if(-.25*Math.PI<angle&&angle<.75*Math.PI){delta=-delta}return delta}function normalizeWheelEventDelta(evt){const deltaMode=evt.deltaMode;let delta=normalizeWheelEventDirection(evt);const MOUSE_PIXELS_PER_LINE=30;const MOUSE_LINES_PER_PAGE=30;if(deltaMode===WheelEvent.DOM_DELTA_PIXEL){delta/=MOUSE_PIXELS_PER_LINE*MOUSE_LINES_PER_PAGE}else if(deltaMode===WheelEvent.DOM_DELTA_LINE){delta/=MOUSE_LINES_PER_PAGE}return delta}function isValidRotation(angle){return Number.isInteger(angle)&&angle%90===0}function isValidScrollMode(mode){return Number.isInteger(mode)&&Object.values(ScrollMode).includes(mode)&&mode!==ScrollMode.UNKNOWN}function isValidSpreadMode(mode){return Number.isInteger(mode)&&Object.values(SpreadMode).includes(mode)&&mode!==SpreadMode.UNKNOWN}function isPortraitOrientation(size){return size.width<=size.height}const animationStarted=new Promise((function(resolve){window.requestAnimationFrame(resolve)}));const docStyle=document.documentElement.style;class ProgressBar{#classList=null;#disableAutoFetchTimeout=null;#percent=0;#style=null;#visible=true;constructor(bar){this.#classList=bar.classList;this.#style=bar.style}get percent(){return this.#percent}set percent(val){this.#percent=MathClamp(val,0,100);if(isNaN(val)){this.#classList.add(\"indeterminate\");return}this.#classList.remove(\"indeterminate\");this.#style.setProperty(\"--progressBar-percent\",`${this.#percent}%`)}setWidth(viewer){if(!viewer){return}const container=viewer.parentNode;const scrollbarWidth=container.offsetWidth-viewer.offsetWidth;if(scrollbarWidth>0){this.#style.setProperty(\"--progressBar-end-offset\",`${scrollbarWidth}px`)}}setDisableAutoFetch(delay=5e3){if(this.#percent===100||isNaN(this.#percent)){return}if(this.#disableAutoFetchTimeout){clearTimeout(this.#disableAutoFetchTimeout)}this.show();this.#disableAutoFetchTimeout=setTimeout((()=>{this.#disableAutoFetchTimeout=null;this.hide()}),delay)}hide(){if(!this.#visible){return}this.#visible=false;this.#classList.add(\"hidden\")}show(){if(this.#visible){return}this.#visible=true;this.#classList.remove(\"hidden\")}}function getActiveOrFocusedElement(){let curRoot=document;let curActiveOrFocused=curRoot.activeElement||curRoot.querySelector(\":focus\");while(curActiveOrFocused?.shadowRoot){curRoot=curActiveOrFocused.shadowRoot;curActiveOrFocused=curRoot.activeElement||curRoot.querySelector(\":focus\")}return curActiveOrFocused}function apiPageLayoutToViewerModes(layout){let scrollMode=ScrollMode.VERTICAL,spreadMode=SpreadMode.NONE;switch(layout){case\"SinglePage\":scrollMode=ScrollMode.PAGE;break;case\"OneColumn\":break;case\"TwoPageLeft\":scrollMode=ScrollMode.PAGE;case\"TwoColumnLeft\":spreadMode=SpreadMode.ODD;break;case\"TwoPageRight\":scrollMode=ScrollMode.PAGE;case\"TwoColumnRight\":spreadMode=SpreadMode.EVEN;break}return{scrollMode:scrollMode,spreadMode:spreadMode}}function apiPageModeToSidebarView(mode){switch(mode){case\"UseNone\":return SidebarView.NONE;case\"UseThumbs\":return SidebarView.THUMBS;case\"UseOutlines\":return SidebarView.OUTLINE;case\"UseAttachments\":return SidebarView.ATTACHMENTS;case\"UseOC\":return SidebarView.LAYERS}return SidebarView.NONE}function toggleCheckedBtn(button,toggle,view=null){button.classList.toggle(\"toggled\",toggle);button.setAttribute(\"aria-checked\",toggle);view?.classList.toggle(\"hidden\",!toggle)}function toggleExpandedBtn(button,toggle,view=null){button.classList.toggle(\"toggled\",toggle);button.setAttribute(\"aria-expanded\",toggle);view?.classList.toggle(\"hidden\",!toggle)}const calcRound=function(){const e=document.createElement(\"div\");e.style.width=\"round(down, calc(1.6666666666666665 * 792px), 1px)\";return e.style.width===\"calc(1320px)\"?Math.fround:x=>x}();{var compatParams=new Map;const{maxTouchPoints:maxTouchPoints,platform:platform,userAgent:userAgent}=navigator;const isAndroid=/Android/.test(userAgent);const isIOS=/\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent)||platform===\"MacIntel\"&&maxTouchPoints>1;(function(){if(isIOS||isAndroid){compatParams.set(\"maxCanvasPixels\",5242880)}})();(function(){if(isAndroid){compatParams.set(\"useSystemFonts\",false)}})()}const OptionKind={BROWSER:1,VIEWER:2,API:4,WORKER:8,EVENT_DISPATCH:16,PREFERENCE:128};const Type={BOOLEAN:1,NUMBER:2,OBJECT:4,STRING:8,UNDEFINED:16};const defaultOptions={allowedGlobalEvents:{value:null,kind:OptionKind.BROWSER},canvasMaxAreaInBytes:{value:-1,kind:OptionKind.BROWSER+OptionKind.API},isInAutomation:{value:false,kind:OptionKind.BROWSER},localeProperties:{value:{lang:navigator.language||\"en-US\"},kind:OptionKind.BROWSER},maxCanvasDim:{value:32767,kind:OptionKind.BROWSER+OptionKind.VIEWER},nimbusDataStr:{value:\"\",kind:OptionKind.BROWSER},supportsCaretBrowsingMode:{value:false,kind:OptionKind.BROWSER},supportsDocumentFonts:{value:true,kind:OptionKind.BROWSER},supportsIntegratedFind:{value:false,kind:OptionKind.BROWSER},supportsMouseWheelZoomCtrlKey:{value:true,kind:OptionKind.BROWSER},supportsMouseWheelZoomMetaKey:{value:true,kind:OptionKind.BROWSER},supportsPinchToZoom:{value:true,kind:OptionKind.BROWSER},supportsPrinting:{value:true,kind:OptionKind.BROWSER},toolbarDensity:{value:0,kind:OptionKind.BROWSER+OptionKind.EVENT_DISPATCH},altTextLearnMoreUrl:{value:\"\",kind:OptionKind.VIEWER+OptionKind.PREFERENCE},annotationEditorMode:{value:0,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},annotationMode:{value:2,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},capCanvasAreaFactor:{value:200,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},cursorToolOnLoad:{value:0,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},debuggerSrc:{value:\"./debugger.mjs\",kind:OptionKind.VIEWER},defaultZoomDelay:{value:400,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},defaultZoomValue:{value:\"\",kind:OptionKind.VIEWER+OptionKind.PREFERENCE},disableHistory:{value:false,kind:OptionKind.VIEWER},disablePageLabels:{value:false,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},enableAltText:{value:false,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},enableAltTextModelDownload:{value:true,kind:OptionKind.VIEWER+OptionKind.PREFERENCE+OptionKind.EVENT_DISPATCH},enableAutoLinking:{value:true,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},enableDetailCanvas:{value:true,kind:OptionKind.VIEWER},enableGuessAltText:{value:true,kind:OptionKind.VIEWER+OptionKind.PREFERENCE+OptionKind.EVENT_DISPATCH},enableHighlightFloatingButton:{value:false,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},enableNewAltTextWhenAddingImage:{value:true,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},enablePermissions:{value:false,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},enablePrintAutoRotate:{value:true,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},enableScripting:{value:true,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},enableSignatureEditor:{value:false,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},enableUpdatedAddImage:{value:false,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},externalLinkRel:{value:\"noopener noreferrer nofollow\",kind:OptionKind.VIEWER},externalLinkTarget:{value:0,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},highlightEditorColors:{value:\"yellow=#FFFF98,green=#53FFBC,blue=#80EBFF,pink=#FFCBE6,red=#FF4F5F\",kind:OptionKind.VIEWER+OptionKind.PREFERENCE},historyUpdateUrl:{value:false,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},ignoreDestinationZoom:{value:false,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},imageResourcesPath:{value:\"./images/\",kind:OptionKind.VIEWER},maxCanvasPixels:{value:2**25,kind:OptionKind.VIEWER},minDurationToUpdateCanvas:{value:500,kind:OptionKind.VIEWER},forcePageColors:{value:false,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},pageColorsBackground:{value:\"Canvas\",kind:OptionKind.VIEWER+OptionKind.PREFERENCE},pageColorsForeground:{value:\"CanvasText\",kind:OptionKind.VIEWER+OptionKind.PREFERENCE},pdfBugEnabled:{value:false,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},printResolution:{value:150,kind:OptionKind.VIEWER},sidebarViewOnLoad:{value:-1,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},scrollModeOnLoad:{value:-1,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},spreadModeOnLoad:{value:-1,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},textLayerMode:{value:1,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},viewerCssTheme:{value:0,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},viewOnLoad:{value:0,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},cMapPacked:{value:true,kind:OptionKind.API},cMapUrl:{value:\"../web/cmaps/\",kind:OptionKind.API},disableAutoFetch:{value:false,kind:OptionKind.API+OptionKind.PREFERENCE},disableFontFace:{value:false,kind:OptionKind.API+OptionKind.PREFERENCE},disableRange:{value:false,kind:OptionKind.API+OptionKind.PREFERENCE},disableStream:{value:false,kind:OptionKind.API+OptionKind.PREFERENCE},docBaseUrl:{value:\"\",kind:OptionKind.API},enableHWA:{value:true,kind:OptionKind.API+OptionKind.VIEWER+OptionKind.PREFERENCE},enableXfa:{value:true,kind:OptionKind.API+OptionKind.PREFERENCE},fontExtraProperties:{value:false,kind:OptionKind.API},iccUrl:{value:\"../web/iccs/\",kind:OptionKind.API},isEvalSupported:{value:true,kind:OptionKind.API},isOffscreenCanvasSupported:{value:true,kind:OptionKind.API},maxImageSize:{value:-1,kind:OptionKind.API},pdfBug:{value:false,kind:OptionKind.API},standardFontDataUrl:{value:\"../web/standard_fonts/\",kind:OptionKind.API},useSystemFonts:{value:undefined,kind:OptionKind.API,type:Type.BOOLEAN+Type.UNDEFINED},verbosity:{value:1,kind:OptionKind.API},wasmUrl:{value:\"../web/wasm/\",kind:OptionKind.API},workerPort:{value:null,kind:OptionKind.WORKER},workerSrc:{value:\"../local/pdf.worker.min.mjs\",kind:OptionKind.WORKER}};{defaultOptions.defaultUrl={value:\"compressed.tracemonkey-pldi-09.pdf\",kind:OptionKind.VIEWER};defaultOptions.sandboxBundleSrc={value:\"../build/pdf.sandbox.mjs\",kind:OptionKind.VIEWER};defaultOptions.enableFakeMLManager={value:true,kind:OptionKind.VIEWER}}{defaultOptions.disablePreferences={value:false,kind:OptionKind.VIEWER}}class AppOptions{static eventBus;static#opts=new Map;static{for(const name in defaultOptions){this.#opts.set(name,defaultOptions[name].value)}for(const[name,value]of compatParams){this.#opts.set(name,value)}this._hasInvokedSet=false;this._checkDisablePreferences=()=>{if(this.get(\"disablePreferences\")){return true}if(this._hasInvokedSet){console.warn(\"The Preferences may override manually set AppOptions; \"+'please use the \"disablePreferences\"-option to prevent that.')}return false}}static get(name){return this.#opts.get(name)}static getAll(kind=null,defaultOnly=false){const options=Object.create(null);for(const name in defaultOptions){const defaultOpt=defaultOptions[name];if(kind&&!(kind&defaultOpt.kind)){continue}options[name]=!defaultOnly?this.#opts.get(name):defaultOpt.value}return options}static set(name,value){this.setAll({[name]:value})}static setAll(options,prefs=false){this._hasInvokedSet||=true;let events;for(const name in options){const defaultOpt=defaultOptions[name],userOpt=options[name];if(!defaultOpt||!(typeof userOpt===ty\n\n... [16 lines truncated] ..."}]},"uuid":"75104339-1921-4202-827e-7f0d7f01b64f","timestamp":"2025-08-13T15:47:17.126Z","toolUseResult":{"mode":"content","numFiles":0,"filenames":[],"content":"/Users/luke/code/psci/chatbot-ui-2/public/ej2-pdfviewer-lib/pdfium.js:4754:        var _FPDFText_HasUnicodeMapError = Module[\"_FPDFText_HasUnicodeMapError\"] = function () {\n/Users/luke/code/psci/chatbot-ui-2/public/ej2-pdfviewer-lib/pdfium.js:4755:            return (_FPDFText_HasUnicodeMapError = Module[\"_FPDFText_HasUnicodeMapError\"] = Module[\"asm\"][\"FPDFText_HasUnicodeMapError\"]).apply(null, arguments)\n/Users/luke/code/psci/chatbot-ui-2/public/ej2-pdfviewer-lib/pdfium.js:4985:        var _FPDF_GetLastError = Module[\"_FPDF_GetLastError\"] = function () {\n/Users/luke/code/psci/chatbot-ui-2/public/ej2-pdfviewer-lib/pdfium.js:4986:            return (_FPDF_GetLastError = Module[\"_FPDF_GetLastError\"] = Module[\"asm\"][\"FPDF_GetLastError\"]).apply(null, arguments)\n/Users/luke/code/psci/chatbot-ui-2/public/pdfjs/local/viewer.min.mjs:22:const{AbortException:AbortException,AnnotationEditorLayer:AnnotationEditorLayer,AnnotationEditorParamsType:AnnotationEditorParamsType,AnnotationEditorType:AnnotationEditorType,AnnotationEditorUIManager:AnnotationEditorUIManager,AnnotationLayer:AnnotationLayer,AnnotationMode:AnnotationMode,AnnotationType:AnnotationType,build:build,ColorPicker:ColorPicker,createValidAbsoluteUrl:createValidAbsoluteUrl,DOMSVGFactory:DOMSVGFactory,DrawLayer:DrawLayer,FeatureTest:FeatureTest,fetchData:fetchData,getDocument:getDocument,getFilenameFromUrl:getFilenameFromUrl,getPdfFilenameFromUrl:pdfjs_getPdfFilenameFromUrl,getUuid:getUuid,getXfaPageViewport:getXfaPageViewport,GlobalWorkerOptions:GlobalWorkerOptions,ImageKind:ImageKind,InvalidPDFException:InvalidPDFException,isDataScheme:isDataScheme,isPdfFile:isPdfFile,isValidExplicitDest:isValidExplicitDest,MathClamp:MathClamp,noContextMenu:noContextMenu,normalizeUnicode:normalizeUnicode,OPS:OPS,OutputScale:OutputScale,PasswordResponses:PasswordResponses,PDFDataRangeTransport:PDFDataRangeTransport,PDFDateString:PDFDateString,PDFWorker:PDFWorker,PermissionFlag:PermissionFlag,PixelsPerInch:PixelsPerInch,RenderingCancelledException:RenderingCancelledException,ResponseException:ResponseException,setLayerDimensions:setLayerDimensions,shadow:shadow,SignatureExtractor:SignatureExtractor,stopEvent:stopEvent,SupportedImageMimeTypes:SupportedImageMimeTypes,TextLayer:TextLayer,TouchManager:TouchManager,updateUrlHash:updateUrlHash,Util:Util,VerbosityLevel:VerbosityLevel,version:version,XfaLayer:XfaLayer}=globalThis.pdfjsLib;const DEFAULT_SCALE_VALUE=\"auto\";const DEFAULT_SCALE=1;const DEFAULT_SCALE_DELTA=1.1;const MIN_SCALE=.1;const MAX_SCALE=10;const UNKNOWN_SCALE=0;const MAX_AUTO_SCALE=1.25;const SCROLLBAR_PADDING=40;const VERTICAL_PADDING=5;const RenderingStates={INITIAL:0,RUNNING:1,PAUSED:2,FINISHED:3};const PresentationModeState={UNKNOWN:0,NORMAL:1,CHANGING:2,FULLSCREEN:3};const SidebarView={UNKNOWN:-1,NONE:0,THUMBS:1,OUTLINE:2,ATTACHMENTS:3,LAYERS:4};const TextLayerMode={DISABLE:0,ENABLE:1,ENABLE_PERMISSIONS:2};const ScrollMode={UNKNOWN:-1,VERTICAL:0,HORIZONTAL:1,WRAPPED:2,PAGE:3};const SpreadMode={UNKNOWN:-1,NONE:0,ODD:1,EVEN:2};const CursorTool={SELECT:0,HAND:1,ZOOM:2};const AutoPrintRegExp=/\\bprint\\s*\\(/;function scrollIntoView(element,spot,scrollMatches=false){let parent=element.offsetParent;if(!parent){console.error(\"offsetParent is not set -- cannot scroll\");return}let offsetY=element.offsetTop+element.clientTop;let offsetX=element.offsetLeft+element.clientLeft;while(parent.clientHeight===parent.scrollHeight&&parent.clientWidth===parent.scrollWidth||scrollMatches&&(parent.classList.contains(\"markedContent\")||getComputedStyle(parent).overflow===\"hidden\")){offsetY+=parent.offsetTop;offsetX+=parent.offsetLeft;parent=parent.offsetParent;if(!parent){return}}if(spot){if(spot.top!==undefined){offsetY+=spot.top}if(spot.left!==undefined){offsetX+=spot.left;parent.scrollLeft=offsetX}}parent.scrollTop=offsetY}function watchScroll(viewAreaElement,callback,abortSignal=undefined){const debounceScroll=function(evt){if(rAF){return}rAF=window.requestAnimationFrame((function viewAreaElementScrolled(){rAF=null;const currentX=viewAreaElement.scrollLeft;const lastX=state.lastX;if(currentX!==lastX){state.right=currentX>lastX}state.lastX=currentX;const currentY=viewAreaElement.scrollTop;const lastY=state.lastY;if(currentY!==lastY){state.down=currentY>lastY}state.lastY=currentY;callback(state)}))};const state={right:true,down:true,lastX:viewAreaElement.scrollLeft,lastY:viewAreaElement.scrollTop,_eventHandler:debounceScroll};let rAF=null;viewAreaElement.addEventListener(\"scroll\",debounceScroll,{useCapture:true,signal:abortSignal});abortSignal?.addEventListener(\"abort\",(()=>window.cancelAnimationFrame(rAF)),{once:true});return state}function parseQueryString(query){const params=new Map;for(const[key,value]of new URLSearchParams(query)){params.set(key.toLowerCase(),value)}return params}const InvisibleCharsRegExp=/[\\x00-\\x1F]/g;function removeNullCharacters(str,replaceInvisible=false){if(!InvisibleCharsRegExp.test(str)){return str}if(replaceInvisible){return str.replaceAll(InvisibleCharsRegExp,(m=>m===\"\\0\"?\"\":\" \"))}return str.replaceAll(\"\\0\",\"\")}function binarySearchFirstItem(items,condition,start=0){let minIndex=start;let maxIndex=items.length-1;if(maxIndex<0||!condition(items[maxIndex])){return items.length}if(condition(items[minIndex])){return minIndex}while(minIndex<maxIndex){const currentIndex=minIndex+maxIndex>>1;const currentItem=items[currentIndex];if(condition(currentItem)){maxIndex=currentIndex}else{minIndex=currentIndex+1}}return minIndex}function approximateFraction(x){if(Math.floor(x)===x){return[x,1]}const xinv=1/x;const limit=8;if(xinv>limit){return[1,limit]}else if(Math.floor(xinv)===xinv){return[1,xinv]}const x_=x>1?xinv:x;let a=0,b=1,c=1,d=1;while(true){const p=a+c,q=b+d;if(q>limit){break}if(x_<=p/q){c=p;d=q}else{a=p;b=q}}let result;if(x_-a/b<c/d-x_){result=x_===x?[a,b]:[b,a]}else{result=x_===x?[c,d]:[d,c]}return result}function floorToDivide(x,div){return x-x%div}function getPageSizeInches({view:view,userUnit:userUnit,rotate:rotate}){const[x1,y1,x2,y2]=view;const changeOrientation=rotate%180!==0;const width=(x2-x1)/72*userUnit;const height=(y2-y1)/72*userUnit;return{width:changeOrientation?height:width,height:changeOrientation?width:height}}function backtrackBeforeAllVisibleElements(index,views,top){if(index<2){return index}let elt=views[index].div;let pageTop=elt.offsetTop+elt.clientTop;if(pageTop>=top){elt=views[index-1].div;pageTop=elt.offsetTop+elt.clientTop}for(let i=index-2;i>=0;--i){elt=views[i].div;if(elt.offsetTop+elt.clientTop+elt.clientHeight<=pageTop){break}index=i}return index}function getVisibleElements({scrollEl:scrollEl,views:views,sortByVisibility:sortByVisibility=false,horizontal:horizontal=false,rtl:rtl=false}){const top=scrollEl.scrollTop,bottom=top+scrollEl.clientHeight;const left=scrollEl.scrollLeft,right=left+scrollEl.clientWidth;function isElementBottomAfterViewTop(view){const element=view.div;const elementBottom=element.offsetTop+element.clientTop+element.clientHeight;return elementBottom>top}function isElementNextAfterViewHorizontally(view){const element=view.div;const elementLeft=element.offsetLeft+element.clientLeft;const elementRight=elementLeft+element.clientWidth;return rtl?elementLeft<right:elementRight>left}const visible=[],ids=new Set,numViews=views.length;let firstVisibleElementInd=binarySearchFirstItem(views,horizontal?isElementNextAfterViewHorizontally:isElementBottomAfterViewTop);if(firstVisibleElementInd>0&&firstVisibleElementInd<numViews&&!horizontal){firstVisibleElementInd=backtrackBeforeAllVisibleElements(firstVisibleElementInd,views,top)}let lastEdge=horizontal?right:-1;for(let i=firstVisibleElementInd;i<numViews;i++){const view=views[i],element=view.div;const currentWidth=element.offsetLeft+element.clientLeft;const currentHeight=element.offsetTop+element.clientTop;const viewWidth=element.clientWidth,viewHeight=element.clientHeight;const viewRight=currentWidth+viewWidth;const viewBottom=currentHeight+viewHeight;if(lastEdge===-1){if(viewBottom>=bottom){lastEdge=viewBottom}}else if((horizontal?currentWidth:currentHeight)>lastEdge){break}if(viewBottom<=top||currentHeight>=bottom||viewRight<=left||currentWidth>=right){continue}const minY=Math.max(0,top-currentHeight);const minX=Math.max(0,left-currentWidth);const hiddenHeight=minY+Math.max(0,viewBottom-bottom);const hiddenWidth=minX+Math.max(0,viewRight-right);const fractionHeight=(viewHeight-hiddenHeight)/viewHeight,fractionWidth=(viewWidth-hiddenWidth)/viewWidth;const percent=fractionHeight*fractionWidth*100|0;visible.push({id:view.id,x:currentWidth,y:currentHeight,visibleArea:percent===100?null:{minX:minX,minY:minY,maxX:Math.min(viewRight,right)-currentWidth,maxY:Math.min(viewBottom,bottom)-currentHeight},view:view,percent:percent,widthPercent:fractionWidth*100|0});ids.add(view.id)}const first=visible[0],last=visible.at(-1);if(sortByVisibility){visible.sort((function(a,b){const pc=a.percent-b.percent;if(Math.abs(pc)>.001){return-pc}return a.id-b.id}))}return{first:first,last:last,views:visible,ids:ids}}function normalizeWheelEventDirection(evt){let delta=Math.hypot(evt.deltaX,evt.deltaY);const angle=Math.atan2(evt.deltaY,evt.deltaX);if(-.25*Math.PI<angle&&angle<.75*Math.PI){delta=-delta}return delta}function normalizeWheelEventDelta(evt){const deltaMode=evt.deltaMode;let delta=normalizeWheelEventDirection(evt);const MOUSE_PIXELS_PER_LINE=30;const MOUSE_LINES_PER_PAGE=30;if(deltaMode===WheelEvent.DOM_DELTA_PIXEL){delta/=MOUSE_PIXELS_PER_LINE*MOUSE_LINES_PER_PAGE}else if(deltaMode===WheelEvent.DOM_DELTA_LINE){delta/=MOUSE_LINES_PER_PAGE}return delta}function isValidRotation(angle){return Number.isInteger(angle)&&angle%90===0}function isValidScrollMode(mode){return Number.isInteger(mode)&&Object.values(ScrollMode).includes(mode)&&mode!==ScrollMode.UNKNOWN}function isValidSpreadMode(mode){return Number.isInteger(mode)&&Object.values(SpreadMode).includes(mode)&&mode!==SpreadMode.UNKNOWN}function isPortraitOrientation(size){return size.width<=size.height}const animationStarted=new Promise((function(resolve){window.requestAnimationFrame(resolve)}));const docStyle=document.documentElement.style;class ProgressBar{#classList=null;#disableAutoFetchTimeout=null;#percent=0;#style=null;#visible=true;constructor(bar){this.#classList=bar.classList;this.#style=bar.style}get percent(){return this.#percent}set percent(val){this.#percent=MathClamp(val,0,100);if(isNaN(val)){this.#classList.add(\"indeterminate\");return}this.#classList.remove(\"indeterminate\");this.#style.setProperty(\"--progressBar-percent\",`${this.#percent}%`)}setWidth(viewer){if(!viewer){return}const container=viewer.parentNode;const scrollbarWidth=container.offsetWidth-viewer.offsetWidth;if(scrollbarWidth>0){this.#style.setProperty(\"--progressBar-end-offset\",`${scrollbarWidth}px`)}}setDisableAutoFetch(delay=5e3){if(this.#percent===100||isNaN(this.#percent)){return}if(this.#disableAutoFetchTimeout){clearTimeout(this.#disableAutoFetchTimeout)}this.show();this.#disableAutoFetchTimeout=setTimeout((()=>{this.#disableAutoFetchTimeout=null;this.hide()}),delay)}hide(){if(!this.#visible){return}this.#visible=false;this.#classList.add(\"hidden\")}show(){if(this.#visible){return}this.#visible=true;this.#classList.remove(\"hidden\")}}function getActiveOrFocusedElement(){let curRoot=document;let curActiveOrFocused=curRoot.activeElement||curRoot.querySelector(\":focus\");while(curActiveOrFocused?.shadowRoot){curRoot=curActiveOrFocused.shadowRoot;curActiveOrFocused=curRoot.activeElement||curRoot.querySelector(\":focus\")}return curActiveOrFocused}function apiPageLayoutToViewerModes(layout){let scrollMode=ScrollMode.VERTICAL,spreadMode=SpreadMode.NONE;switch(layout){case\"SinglePage\":scrollMode=ScrollMode.PAGE;break;case\"OneColumn\":break;case\"TwoPageLeft\":scrollMode=ScrollMode.PAGE;case\"TwoColumnLeft\":spreadMode=SpreadMode.ODD;break;case\"TwoPageRight\":scrollMode=ScrollMode.PAGE;case\"TwoColumnRight\":spreadMode=SpreadMode.EVEN;break}return{scrollMode:scrollMode,spreadMode:spreadMode}}function apiPageModeToSidebarView(mode){switch(mode){case\"UseNone\":return SidebarView.NONE;case\"UseThumbs\":return SidebarView.THUMBS;case\"UseOutlines\":return SidebarView.OUTLINE;case\"UseAttachments\":return SidebarView.ATTACHMENTS;case\"UseOC\":return SidebarView.LAYERS}return SidebarView.NONE}function toggleCheckedBtn(button,toggle,view=null){button.classList.toggle(\"toggled\",toggle);button.setAttribute(\"aria-checked\",toggle);view?.classList.toggle(\"hidden\",!toggle)}function toggleExpandedBtn(button,toggle,view=null){button.classList.toggle(\"toggled\",toggle);button.setAttribute(\"aria-expanded\",toggle);view?.classList.toggle(\"hidden\",!toggle)}const calcRound=function(){const e=document.createElement(\"div\");e.style.width=\"round(down, calc(1.6666666666666665 * 792px), 1px)\";return e.style.width===\"calc(1320px)\"?Math.fround:x=>x}();{var compatParams=new Map;const{maxTouchPoints:maxTouchPoints,platform:platform,userAgent:userAgent}=navigator;const isAndroid=/Android/.test(userAgent);const isIOS=/\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent)||platform===\"MacIntel\"&&maxTouchPoints>1;(function(){if(isIOS||isAndroid){compatParams.set(\"maxCanvasPixels\",5242880)}})();(function(){if(isAndroid){compatParams.set(\"useSystemFonts\",false)}})()}const OptionKind={BROWSER:1,VIEWER:2,API:4,WORKER:8,EVENT_DISPATCH:16,PREFERENCE:128};const Type={BOOLEAN:1,NUMBER:2,OBJECT:4,STRING:8,UNDEFINED:16};const defaultOptions={allowedGlobalEvents:{value:null,kind:OptionKind.BROWSER},canvasMaxAreaInBytes:{value:-1,kind:OptionKind.BROWSER+OptionKind.API},isInAutomation:{value:false,kind:OptionKind.BROWSER},localeProperties:{value:{lang:navigator.language||\"en-US\"},kind:OptionKind.BROWSER},maxCanvasDim:{value:32767,kind:OptionKind.BROWSER+OptionKind.VIEWER},nimbusDataStr:{value:\"\",kind:OptionKind.BROWSER},supportsCaretBrowsingMode:{value:false,kind:OptionKind.BROWSER},supportsDocumentFonts:{value:true,kind:OptionKind.BROWSER},supportsIntegratedFind:{value:false,kind:OptionKind.BROWSER},supportsMouseWheelZoomCtrlKey:{value:true,kind:OptionKind.BROWSER},supportsMouseWheelZoomMetaKey:{value:true,kind:OptionKind.BROWSER},supportsPinchToZoom:{value:true,kind:OptionKind.BROWSER},supportsPrinting:{value:true,kind:OptionKind.BROWSER},toolbarDensity:{value:0,kind:OptionKind.BROWSER+OptionKind.EVENT_DISPATCH},altTextLearnMoreUrl:{value:\"\",kind:OptionKind.VIEWER+OptionKind.PREFERENCE},annotationEditorMode:{value:0,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},annotationMode:{value:2,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},capCanvasAreaFactor:{value:200,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},cursorToolOnLoad:{value:0,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},debuggerSrc:{value:\"./debugger.mjs\",kind:OptionKind.VIEWER},defaultZoomDelay:{value:400,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},defaultZoomValue:{value:\"\",kind:OptionKind.VIEWER+OptionKind.PREFERENCE},disableHistory:{value:false,kind:OptionKind.VIEWER},disablePageLabels:{value:false,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},enableAltText:{value:false,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},enableAltTextModelDownload:{value:true,kind:OptionKind.VIEWER+OptionKind.PREFERENCE+OptionKind.EVENT_DISPATCH},enableAutoLinking:{value:true,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},enableDetailCanvas:{value:true,kind:OptionKind.VIEWER},enableGuessAltText:{value:true,kind:OptionKind.VIEWER+OptionKind.PREFERENCE+OptionKind.EVENT_DISPATCH},enableHighlightFloatingButton:{value:false,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},enableNewAltTextWhenAddingImage:{value:true,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},enablePermissions:{value:false,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},enablePrintAutoRotate:{value:true,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},enableScripting:{value:true,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},enableSignatureEditor:{value:false,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},enableUpdatedAddImage:{value:false,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},externalLinkRel:{value:\"noopener noreferrer nofollow\",kind:OptionKind.VIEWER},externalLinkTarget:{value:0,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},highlightEditorColors:{value:\"yellow=#FFFF98,green=#53FFBC,blue=#80EBFF,pink=#FFCBE6,red=#FF4F5F\",kind:OptionKind.VIEWER+OptionKind.PREFERENCE},historyUpdateUrl:{value:false,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},ignoreDestinationZoom:{value:false,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},imageResourcesPath:{value:\"./images/\",kind:OptionKind.VIEWER},maxCanvasPixels:{value:2**25,kind:OptionKind.VIEWER},minDurationToUpdateCanvas:{value:500,kind:OptionKind.VIEWER},forcePageColors:{value:false,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},pageColorsBackground:{value:\"Canvas\",kind:OptionKind.VIEWER+OptionKind.PREFERENCE},pageColorsForeground:{value:\"CanvasText\",kind:OptionKind.VIEWER+OptionKind.PREFERENCE},pdfBugEnabled:{value:false,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},printResolution:{value:150,kind:OptionKind.VIEWER},sidebarViewOnLoad:{value:-1,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},scrollModeOnLoad:{value:-1,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},spreadModeOnLoad:{value:-1,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},textLayerMode:{value:1,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},viewerCssTheme:{value:0,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},viewOnLoad:{value:0,kind:OptionKind.VIEWER+OptionKind.PREFERENCE},cMapPacked:{value:true,kind:OptionKind.API},cMapUrl:{value:\"../web/cmaps/\",kind:OptionKind.API},disableAutoFetch:{value:false,kind:OptionKind.API+OptionKind.PREFERENCE},disableFontFace:{value:false,kind:OptionKind.API+OptionKind.PREFERENCE},disableRange:{value:false,kind:OptionKind.API+OptionKind.PREFERENCE},disableStream:{value:false,kind:OptionKind.API+OptionKind.PREFERENCE},docBaseUrl:{value:\"\",kind:OptionKind.API},enableHWA:{value:true,kind:OptionKind.API+OptionKind.VIEWER+OptionKind.PREFERENCE},enableXfa:{value:true,kind:OptionKind.API+OptionKind.PREFERENCE},fontExtraProperties:{value:false,kind:OptionKind.API},iccUrl:{value:\"../web/iccs/\",kind:OptionKind.API},isEvalSupported:{value:true,kind:OptionKind.API},isOffscreenCanvasSupported:{value:true,kind:OptionKind.API},maxImageSize:{value:-1,kind:OptionKind.API},pdfBug:{value:false,kind:OptionKind.API},standardFontDataUrl:{value:\"../web/standard_fonts/\",kind:OptionKind.API},useSystemFonts:{value:undefined,kind:OptionKind.API,type:Type.BOOLEAN+Type.UNDEFINED},verbosity:{value:1,kind:OptionKind.API},wasmUrl:{value:\"../web/wasm/\",kind:OptionKind.API},workerPort:{value:null,kind:OptionKind.WORKER},workerSrc:{value:\"../local/pdf.worker.min.mjs\",kind:OptionKind.WORKER}};{defaultOptions.defaultUrl={value:\"compressed.tracemonkey-pldi-09.pdf\",kind:OptionKind.VIEWER};defaultOptions.sandboxBundleSrc={value:\"../build/pdf.sandbox.mjs\",kind:OptionKind.VIEWER};defaultOptions.enableFakeMLManager={value:true,kind:OptionKind.VIEWER}}{defaultOptions.disablePreferences={value:false,kind:OptionKind.VIEWER}}class AppOptions{static eventBus;static#opts=new Map;static{for(const name in defaultOptions){this.#opts.set(name,defaultOptions[name].value)}for(const[name,value]of compatParams){this.#opts.set(name,value)}this._hasInvokedSet=false;this._checkDisablePreferences=()=>{if(this.get(\"disablePreferences\")){return true}if(this._hasInvokedSet){console.warn(\"The Preferences may override manually set AppOptions; \"+'please use the \"disablePreferences\"-option to prevent that.')}return false}}static get(name){return this.#opts.get(name)}static getAll(kind=null,defaultOnly=false){const options=Object.create(null);for(const name in defaultOptions){const defaultOpt=defaultOptions[name];if(kind&&!(kind&defaultOpt.kind)){continue}options[name]=!defaultOnly?this.#opts.get(name):defaultOpt.value}return options}static set(name,value){this.setAll({[name]:value})}static setAll(options,prefs=false){this._hasInvokedSet||=true;let events;for(const name in options){const defaultOpt=defaultOptions[name],userOpt=options[name];if(!defaultOpt||!(typeof userOpt===typeof defaultOpt.value||Type[(typeof userOpt).toUpperCase()]&defaultOpt.type)){continue}const{kind:kind}=defaultOpt;if(prefs&&!(kind&OptionKind.BROWSER||kind&OptionKind.PREFERENCE)){continue}if(this.eventBus&&kind&OptionKind.EVENT_DISPATCH){(events||=new Map).set(name,userOpt)}this.#opts.set(name,userOpt)}if(events){for(const[name,value]of events){this.eventBus.dispatch(name.toLowerCase(),{source:this,value:value})}}}}const DEFAULT_LINK_REL=\"noopener noreferrer nofollow\";const LinkTarget={NONE:0,SELF:1,BLANK:2,PARENT:3,TOP:4};class PDFLinkService{externalLinkEnabled=true;constructor({eventBus:eventBus,externalLinkTarget:externalLinkTarget=null,externalLinkRel:externalLinkRel=null,ignoreDestinationZoom:ignoreDestinationZoom=false}={}){this.eventBus=eventBus;this.externalLinkTarget=externalLinkTarget;this.externalLinkRel=externalLinkRel;this._ignoreDestinationZoom=ignoreDestinationZoom;this.baseUrl=null;this.pdfDocument=null;this.pdfViewer=null;this.pdfHistory=null}setDocument(pdfDocument,baseUrl=null){this.baseUrl=baseUrl;this.pdfDocument=pdfDocument}setViewer(pdfViewer){this.pdfViewer=pdfViewer}setHistory(pdfHistory){this.pdfHistory=pdfHistory}get pagesCount(){return this.pdfDocument?this.pdfDocument.numPages:0}get page(){return this.pdfDocument?this.pdfViewer.currentPageNumber:1}set page(value){if(this.pdfDocument){this.pdfViewer.currentPageNumber=value}}get rotation(){return this.pdfDocument?this.pdfViewer.pagesRotation:0}set rotation(value){if(this.pdfDocument){this.pdfViewer.pagesRotation=value}}get isInPresentationMode(){return this.pdfDocument?this.pdfViewer.isInPresentationMode:false}async goToDestination(dest){if(!this.pdfDocument){return}let namedDest,explicitDest,pageNumber;if(typeof dest===\"string\"){namedDest=dest;explicitDest=await this.pdfDocument.getDestination(dest)}else{namedDest=null;explicitDest=await dest}if(!Array.isArray(explicitDest)){console.error(`goToDestination: \"${explicitDest}\" is not a valid destination array, for dest=\"${dest}\".`);return}const[destRef]=explicitDest;if(destRef&&typeof destRef===\"object\"){pageNumber=this.pdfDocument.cachedPageNumber(destRef);if(!pageNumber){try{pageNumber=await this.pdfDocument.getPageIndex(destRef)+1}catch{console.error(`goToDestination: \"${destRef}\" is not a valid page reference, for dest=\"${dest}\".`);return}}}else if(Number.isInteger(destRef)){pageNumber=destRef+1}if(!pageNumber||pageNumber<1||pageNumber>this.pagesCount){console.error(`goToDestination: \"${pageNumber}\" is not a valid page number, for dest=\"${dest}\".`);return}if(this.pdfHistory){this.pdfHistory.pushCurrentPosition();this.pdfHistory.push({namedDest:namedDest,explicitDest:explicitDest,pageNumber:pageNumber})}this.pdfViewer.scrollPageIntoView({pageNumber:pageNumber,destArray:explicitDest,ignoreDestinationZoom:this._ignoreDestinationZoom})}goToPage(val){if(!this.pdfDocument){return}const pageNumber=typeof val===\"string\"&&this.pdfViewer.pageLabelToPageNumber(val)||val|0;if(!(Number.isInteger(pageNumber)&&pageNumber>0&&pageNumber<=this.pagesCount)){console.error(`PDFLinkService.goToPage: \"${val}\" is not a valid page.`);return}if(this.pdfHistory){this.pdfHistory.pushCurrentPosition();this.pdfHistory.pushPage(pageNumber)}this.pdfViewer.scrollPageIntoView({pageNumber:pageNumber})}addLinkAttributes(link,url,newWindow=false){if(!url||typeof url!==\"string\"){throw new Error('A valid \"url\" parameter must provided.')}const target=newWindow?LinkTarget.BLANK:this.externalLinkTarget,rel=this.externalLinkRel;if(this.externalLinkEnabled){link.href=link.title=url}else{link.href=\"\";link.title=`Disabled: ${url}`;link.onclick=()=>false}let targetStr=\"\";switch(target){case LinkTarget.NONE:break;case LinkTarget.SELF:targetStr=\"_self\";break;case LinkTarget.BLANK:targetStr=\"_blank\";break;case LinkTarget.PARENT:targetStr=\"_parent\";break;case LinkTarget.TOP:targetStr=\"_top\";break}link.target=targetStr;link.rel=typeof rel===\"string\"?rel:DEFAULT_LINK_REL}getDestinationHash(dest){if(typeof dest===\"string\"){if(dest.length>0){return this.getAnchorUrl(\"#\"+escape(dest))}}else if(Array.isArray(dest)){const str=JSON.stringify(dest);if(str.length>0){return this.getAnchorUrl(\"#\"+escape(str))}}return this.getAnchorUrl(\"\")}getAnchorUrl(anchor){return this.baseUrl?this.baseUrl+anchor:anchor}setHash(hash){if(!this.pdfDocument){return}let pageNumber,dest;if(hash.includes(\"=\")){const params=parseQueryString(hash);if(params.has(\"search\")){const query=params.get(\"search\").replaceAll('\"',\"\"),phrase=params.get(\"phrase\")===\"true\";this.eventBus.dispatch(\"findfromurlhash\",{source:this,query:phrase?query:query.match(/\\S+/g)})}if(params.has(\"page\")){pageNumber=params.get(\"page\")|0||1}if(params.has(\"zoom\")){const zoomArgs=params.get(\"zoom\").split(\",\");const zoomArg=zoomArgs[0];const zoomArgNumber=parseFloat(zoomArg);if(!zoomArg.includes(\"Fit\")){dest=[null,{name:\"XYZ\"},zoomArgs.length>1?zoomArgs[1]|0:null,zoomArgs.length>2?zoomArgs[2]|0:null,zoomArgNumber?zoomArgNumber/100:zoomArg]}else if(zoomArg===\"Fit\"||zoomArg===\"FitB\"){dest=[null,{name:zoomArg}]}else if(zoomArg===\"FitH\"||zoomArg===\"FitBH\"||zoomArg===\"FitV\"||zoomArg===\"FitBV\"){dest=[null,{name:zoomArg},zoomArgs.length>1?zoomArgs[1]|0:null]}else if(zoomArg===\"FitR\"){if(zoomArgs.length!==5){console.error('PDFLinkService.setHash: Not enough parameters for \"FitR\".')}else{dest=[null,{name:zoomArg},zoomArgs[1]|0,zoomArgs[2]|0,zoomArgs[3]|0,zoomArgs[4]|0]}}else{console.error(`PDFLinkService.setHash: \"${zoomArg}\" is not a valid zoom value.`)}}if(dest){this.pdfViewer.scrollPageIntoView({pageNumber:pageNumber||this.page,destArray:dest,allowNegativeOffset:true})}else if(pageNumber){this.page=pageNumber}if(params.has(\"pagemode\")){this.eventBus.dispatch(\"pagemode\",{source:this,mode:params.get(\"pagemode\")})}if(params.has(\"nameddest\")){this.goToDestination(params.get(\"nameddest\"))}return}dest=unescape(hash);try{dest=JSON.parse(dest);if(!Array.isArray(dest)){dest=dest.toString()}}catch{}if(typeof dest===\"string\"||isValidExplicitDest(dest)){this.goToDestination(dest);return}console.error(`PDFLinkService.setHash: \"${unescape(hash)}\" is not a valid destination.`)}executeNamedAction(action){if(!this.pdfDocument){return}switch(action){case\"GoBack\":this.pdfHistory?.back();break;case\"GoForward\":this.pdfHistory?.forward();break;case\"NextPage\":this.pdfViewer.nextPage();break;case\"PrevPage\":this.pdfViewer.previousPage();break;case\"LastPage\":this.page=this.pagesCount;break;case\"FirstPage\":this.page=1;break;default:break}this.eventBus.dispatch(\"namedaction\",{source:this,action:action})}async executeSetOCGState(action){if(!this.pdfDocument){return}const pdfDocument=this.pdfDocument,optionalContentConfig=await this.pdfViewer.optionalContentConfigPromise;if(pdfDocument!==this.pdfDocument){return}optionalContentConfig.setOCGState(action);this.pdfViewer.optionalContentConfigPromise=Promise.resolve(optionalContentConfig)}}class SimpleLinkService extends PDFLinkService{setDocument(pdfDocument,baseUrl=null){}}const WaitOnType={EVENT:\"event\",TIMEOUT:\"timeout\"};async function waitOnEventOrTimeout({target:target,name:name,delay:delay=0}){if(typeof target!==\"object\"||!(name&&typeof name===\"string\")||!(Number.isInteger(delay)&&delay>=0)){throw new Error(\"waitOnEventOrTimeout - invalid parameters.\")}const{promise:promise,resolve:resolve}=Promise.withResolvers();const ac=new AbortController;function handler(type){ac.abort();clearTimeout(timeout);resolve(type)}const evtMethod=target instanceof EventBus?\"_on\":\"addEventListener\";target[evtMethod](name,handler.bind(null,WaitOnType.EVENT),{signal:ac.signal});const timeout=setTimeout(handler.bind(null,WaitOnType.TIMEOUT),delay);return promise}class EventBus{#listeners=Object.create(null);on(eventName,listener,options=null){this._on(eventName,listener,{external:true,once:options?.once,signal:options?.signal})}off(eventName,listener,options=null){this._off(eventName,listener)}dispatch(eventName,data){const eventListeners=this.#listeners[eventName];if(!eventListeners||eventListeners.length===0){return}let externalListeners;for(const{listener:listener,external:external,once:once}of eventListeners.slice(0)){if(once){this._off(eventName,listener)}if(external){(externalListeners||=[]).push(listener);continue}listener(data)}if(externalListeners){for(const listener of externalListeners){listener(data)}externalListeners=null}}_on(eventName,listener,options=null){let rmAbort=null;if(options?.signal instanceof AbortSignal){const{signal:signal}=options;if(signal.aborted){console.error(\"Cannot use an `aborted` signal.\");return}const onAbort=()=>this._off(eventName,listener);rmAbort=()=>signal.removeEventListener(\"abort\",onAbort);signal.addEventListener(\"abort\",onAbort)}const eventListeners=this.#listeners[eventName]||=[];eventListeners.push({listener:listener,external:options?.external===true,once:options?.once===true,rmAbort:rmAbort})}_off(eventName,listener,options=null){const eventListeners=this.#listeners[eventName];if(!eventListeners){return}for(let i=0,ii=eventListeners.length;i<ii;i++){const evt=eventListeners[i];if(evt.listener===listener){evt.rmAbort?.();eventListeners.splice(i,1);return}}}}class FirefoxEventBus extends EventBus{#externalServices;#globalEventNames;#isInAutomation;constructor(globalEventNames,externalServices,isInAutomation){super();this.#globalEventNames=globalEventNames;this.#externalServices=externalServices;this.#isInAutomation=isInAutomation}dispatch(eventName,data){throw new Error(\"Not implemented: FirefoxEventBus.dispatch\")}}class BaseExternalServices{updateFindControlState(data){}updateFindMatchesCount(data){}initPassiveLoading(){}reportTelemetry(data){}async createL10n(){throw new Error(\"Not implemented: createL10n\")}createScripting(){throw new Error(\"Not implemented: createScripting\")}createSignatureStorage(){throw new Error(\"Not implemented: createSignatureStorage\")}updateEditorStates(data){throw new Error(\"Not implemented: updateEditorStates\")}dispatchGlobalEvent(_event){}}class BasePreferences{#defaults=Object.freeze({altTextLearnMoreUrl:\"\",annotationEditorMode:0,annotationMode:2,capCanvasAreaFactor:200,cursorToolOnLoad:0,defaultZoomDelay:400,defaultZoomValue:\"\",disablePageLabels:false,enableAltText:false,enableAltTextModelDownload:true,enableAutoLinking:true,enableGuessAltText:true,enableHighlightFloatingButton:false,enableNewAltTextWhenAddingImage:true,enablePermissions:false,enablePrintAutoRotate:true,enableScripting:true,enableSignatureEditor:false,enableUpdatedAddImage:false,externalLinkTarget:0,highlightEditorColors:\"yellow=#FFFF98,green=#53FFBC,blue=#80EBFF,pink=#FFCBE6,red=#FF4F5F\",historyUpdateUrl:false,ignoreDestinationZoom:false,forcePageColors:false,pageColorsBackground:\"Canvas\",pageColorsForeground:\"CanvasText\",pdfBugEnabled:false,sidebarViewOnLoad:-1,scrollModeOnLoad:-1,spreadModeOnLoad:-1,textLayerMode:1,viewerCssTheme:0,viewOnLoad:0,disableAutoFetch:false,disableFontFace:false,disableRange:false,disableStream:false,enableHWA:true,enableXfa:true});#initializedPromise=null;constructor(){this.#initializedPromise=this._readFromStorage(this.#defaults).then((({browserPrefs:browserPrefs,prefs:prefs})=>{if(AppOptions._checkDisablePreferences()){return}AppOptions.setAll({...browserPrefs,...prefs},true)}))}async _writeToStorage(prefObj){throw new Error(\"Not implemented: _writeToStorage\")}async _readFromStorage(prefObj){throw new Error(\"Not implemented: _readFromStorage\")}async reset(){await this.#initializedPromise;AppOptions.setAll(this.#defaults,true);await this._writeToStorage(this.#defaults)}async set(name,value){await this.#initializedPromise;AppOptions.setAll({[name]:value},true);await this._writeToStorage(AppOptions.getAll(OptionKind.PREFERENCE))}async get(name){await this.#initializedPromise;return AppOptions.get(name)}get initializedPromise(){return this.#initializedPromise}}class FluentType{constructor(value){this.value=value}valueOf(){return this.value}}class FluentNone extends FluentType{constructor(value=\"???\"){super(value)}toString(scope){return`{${this.value}}`}}class FluentNumber extends FluentType{constructor(value,opts={}){super(value);this.opts=opts}toString(scope){if(scope){try{const nf=scope.memoizeIntlObject(Intl.NumberFormat,this.opts);return nf.format(this.value)}catch(err){scope.reportError(err)}}return this.value.toString(10)}}class FluentDateTime extends FluentType{static supportsValue(value){if(typeof value===\"number\")return true;if(value instanceof Date)return true;if(value instanceof FluentType)return FluentDateTime.supportsValue(value.valueOf());if(\"Temporal\"in globalThis){const _Temporal=globalThis.Temporal;if(value instanceof _Temporal.Instant||value instanceof _Temporal.PlainDateTime||value instanceof _Temporal.PlainDate||value instanceof _Temporal.PlainMonthDay||value instanceof _Temporal.PlainTime||value instanceof _Temporal.PlainYearMonth){return true}}return false}constructor(value,opts={}){if(value instanceof FluentDateTime){opts={...value.opts,...opts};value=value.value}else if(value instanceof FluentType){value=value.valueOf()}if(typeof value===\"object\"&&\"calendarId\"in value&&opts.calendar===undefined){opts={...opts,calendar:value.calendarId}}super(value);this.opts=opts}[Symbol.toPrimitive](hint){return hint===\"string\"?this.toString():this.toNumber()}toNumber(){const value=this.value;if(typeof value===\"number\")return value;if(value instanceof Date)return value.getTime();if(\"epochMilliseconds\"in value){return value.epochMilliseconds}if(\"toZonedDateTime\"in value){return value.toZonedDateTime(\"UTC\").epochMilliseconds}throw new TypeError(\"Unwrapping a non-number value as a number\")}toString(scope){if(scope){try{const dtf=scope.memoizeIntlObject(Intl.DateTimeFormat,this.opts);return dtf.format(this.value)}catch(err){scope.reportError(err)}}if(typeof this.value===\"number\"||this.value instanceof Date){return new Date(this.value).toISOString()}return this.value.toString()}}const MAX_PLACEABLES=100;const FSI=\"⁨\";const PDI=\"⁩\";function match(scope,selector,key){if(key===selector){return true}if(key instanceof FluentNumber&&selector instanceof FluentNumber&&key.value===selector.value){return true}if(selector instanceof FluentNumber&&typeof key===\"string\"){let category=scope.memoizeIntlObject(Intl.PluralRules,selector.opts).select(selector.value);if(key===category){return true}}return false}function getDefault(scope,variants,star){if(variants[star]){return resolvePattern(scope,variants[star].value)}scope.reportError(new RangeError(\"No default\"));return new FluentNone}function getArguments(scope,args){const positional=[];const named=Object.create(null);for(const arg of args){if(arg.type===\"narg\"){named[arg.name]=resolveExpression(scope,arg.value)}else{positional.push(resolveExpression(scope,arg))}}return{positional:positional,named:named}}function resolveExpression(scope,expr){switch(expr.type){case\"str\":return expr.value;case\"num\":return new FluentNumber(expr.value,{minimumFractionDigits:expr.precision});case\"var\":return resolveVariableReference(scope,expr);case\"mesg\":return resolveMessageReference(scope,expr);case\"term\":return resolveTermReference(scope,expr);case\"func\":return resolveFunctionReference(scope,expr);case\"select\":return resolveSelectExpression(scope,expr);default:return new FluentNone}}function resolveVariableReference(scope,{name:name}){let arg;if(scope.params){if(Object.prototype.hasOwnProperty.call(scope.params,name)){arg=scope.params[name]}else{return new FluentNone(`$${name}`)}}else if(scope.args&&Object.prototype.hasOwnProperty.call(scope.args,name)){arg=scope.args[name]}else{scope.reportError(new ReferenceError(`Unknown variable: $${name}`));return new FluentNone(`$${name}`)}if(arg instanceof FluentType){return arg}switch(typeof arg){case\"string\":return arg;case\"number\":return new FluentNumber(arg);case\"object\":if(FluentDateTime.supportsValue(arg)){return new FluentDateTime(arg)}default:scope.reportError(new TypeError(`Variable type not supported: $${name}, ${typeof arg}`));return new FluentNone(`$${name}`)}}function resolveMessageReference(scope,{name:name,attr:attr}){const message=scope.bundle._messages.get(name);if(!message){scope.reportError(new ReferenceError(`Unknown message: ${name}`));return new FluentNone(name)}if(attr){const attribute=message.attributes[attr];if(attribute){return resolvePattern(scope,attribute)}scope.reportError(new ReferenceError(`Unknown attribute: ${attr}`));return new FluentNone(`${name}.${attr}`)}if(message.value){return resolvePattern(scope,message.value)}scope.reportError(new ReferenceError(`No value: ${name}`));return new FluentNone(name)}function resolveTermReference(scope,{name:name,attr:attr,args:args}){const id=`-${name}`;const term=scope.bundle._terms.get(id);if(!term){scope.reportError(new ReferenceError(`Unknown term: ${id}`));return new FluentNone(id)}if(attr){const attribute=term.attributes[attr];if(attribute){scope.params=getArguments(scope,args).named;const resolved=resolvePattern(scope,attribute);scope.params=null;return resolved}scope.reportError(new ReferenceError(`Unknown attribute: ${attr}`));return new FluentNone(`${id}.${attr}`)}scope.params=getArguments(scope,args).named;const resolved=resolvePattern(scope,term.value);scope.params=null;return resolved}function resolveFunctionReference(scope,{name:name,args:args}){let func=scope.bundle._functions[name];if(!func){scope.reportError(new ReferenceError(`Unknown function: ${name}()`));return new FluentNone(`${name}()`)}if(typeof func!==\"function\"){scope.reportError(new TypeError(`Function ${name}() is not callable`));return new FluentNone(`${name}()`)}try{let resolved=getArguments(scope,args);return func(resolved.positional,resolved.named)}catch(err){scope.reportError(err);return new FluentNone(`${name}()`)}}function resolveSelectExpression(scope,{selector:selector,variants:variants,star:star}){let sel=resolveExpression(scope,selector);if(sel instanceof FluentNone){return getDefault(scope,variants,star)}for(const variant of variants){const key=resolveExpression(scope,variant.key);if(match(scope,sel,key)){return resolvePattern(scope,variant.value)}}return getDefault(scope,variants,star)}function resolveComplexPattern(scope,ptn){if(scope.dirty.has(ptn)){scope.reportError(new RangeError(\"Cyclic reference\"));return new FluentNone}scope.dirty.add(ptn);const result=[];const useIsolating=scope.bundle._useIsolating&&ptn.length>1;for(const elem of ptn){if(typeof elem===\"string\"){result.push(scope.bundle._transform(elem));continue}scope.placeables++;if(scope.placeables>MAX_PLACEABLES){scope.dirty.delete(ptn);throw new RangeError(`Too many placeables expanded: ${scope.placeables}, `+`max allowed is ${MAX_PLACEABLES}`)}if(useIsolating){result.push(FSI)}result.push(resolveExpression(scope,elem).toString(scope));if(useIsolating){result.push(PDI)}}scope.dirty.delete(ptn);return result.join(\"\")}function resolvePattern(scope,value){if(typeof value===\"string\"){return scope.bundle._transform(value)}return resolveComplexPattern(scope,value)}class Scope{constructor(bundle,errors,args){this.dirty=new WeakSet;this.params=null;this.placeables=0;this.bundle=bundle;this.errors=errors;this.args=args}reportError(error){if(!this.errors||!(error instanceof Error)){throw error}this.errors.push(error)}memoizeIntlObject(ctor,opts){let cache=this.bundle._intls.get(ctor);if(!cache){cache={};this.bundle._intls.set(ctor,cache)}let id=JSON.stringify(opts);if(!cache[id]){cache[id]=new ctor(this.bundle.locales,opts)}return cache[id]}}function values(opts,allowed){const unwrapped=Object.create(null);for(const[name,opt]of Object.entries(opts)){if(allowed.includes(name)){unwrapped[name]=opt.valueOf()}}return unwrapped}const NUMBER_ALLOWED=[\"unitDisplay\",\"currencyDisplay\",\"useGrouping\",\"minimumIntegerDigits\",\"minimumFractionDigits\",\"maximumFractionDigits\",\"minimumSignificantDigits\",\"maximumSignificantDigits\"];function NUMBER(args,opts){let arg=args[0];if(arg instanceof FluentNone){return new FluentNone(`NUMBER(${arg.valueOf()})`)}if(arg instanceof FluentNumber){return new FluentNumber(arg.valueOf(),{...arg.opts,...values(opts,NUMBER_ALLOWED)})}if(arg instanceof FluentDateTime){return new FluentNumber(arg.toNumber(),{...values(opts,NUMBER_ALLOWED)})}throw new TypeError(\"Invalid argument to NUMBER\")}const DATETIME_ALLOWED=[\"dateStyle\",\"timeStyle\",\"fractionalSecondDigits\",\"dayPeriod\",\"hour12\",\"weekday\",\"era\",\"year\",\"month\",\"day\",\"hour\",\"minute\",\"second\",\"timeZoneName\"];function DATETIME(args,opts){let arg=args[0];if(arg instanceof FluentNone){return new FluentNone(`DATETIME(${arg.valueOf()})`)}if(arg instanceof FluentDateTime||arg instanceof FluentNumber){return new FluentDateTime(arg,values(opts,DATETIME_ALLOWED))}throw new TypeError(\"Invalid argument to DATETIME\")}const cache=new Map;function getMemoizerForLocale(locales){const stringLocale=Array.isArray(locales)?locales.join(\" \"):locales;let memoizer=cache.get(stringLocale);if(memoizer===undefined){memoizer=new Map;cache.set(stringLocale,memoizer)}return memoizer}class FluentBundle{constructor(locales,{functions:functions,useIsolating:useIsolating=true,transform:transform=v=>v}={}){this._terms=new Map;this._messages=new Map;this.locales=Array.isArray(locales)?locales:[locales];this._functions={NUMBER:NUMBER,DATETIME:DATETIME,...functions};this._useIsolating=useIsolating;this._transform=transform;this._intls=getMemoizerForLocale(locales)}hasMessage(id){return this._messages.has(id)}getMessage(id){return this._messages.get(id)}addResource(res,{allowOverrides:allowOverrides=false}={}){const errors=[];for(let i=0;i<res.body.length;i++){let entry=res.body[i];if(entry.id.startsWith(\"-\")){if(allowOverrides===false&&this._terms.has(entry.id)){errors.push(new Error(`Attempt to override an existing term: \"${entry.id}\"`));continue}this._terms.set(entry.id,entry)}else{if(allowOverrides===false&&this._messages.has(entry.id)){errors.push(new Error(`Attempt to override an existing message: \"${entry.id}\"`));continue}this._messages.set(entry.id,entry)}}return errors}formatPattern(pattern,args=null,errors=null){if(typeof pattern===\"string\"){return this._transform(pattern)}let scope=new Scope(this,errors,args);try{let value=resolveComplexPattern(scope,pattern);return value.toString(scope)}catch(err){if(scope.errors&&err instanceof Error){scope.errors.push(err);return(new FluentNone).toString(scope)}throw err}}}const RE_MESSAGE_START=/^(-?[a-zA-Z][\\w-]*) *= */gm;const RE_ATTRIBUTE_START=/\\.([a-zA-Z][\\w-]*) *= */y;const RE_VARIANT_START=/\\*?\\[/y;const RE_NUMBER_LITERAL=/(-?[0-9]+(?:\\.([0-9]+))?)/y;const RE_IDENTIFIER=/([a-zA-Z][\\w-]*)/y;const RE_REFERENCE=/([$-])?([a-zA-Z][\\w-]*)(?:\\.([a-zA-Z][\\w-]*))?/y;const RE_FUNCTION_NAME=/^[A-Z][A-Z0-9_-]*$/;const RE_TEXT_RUN=/([^{}\\n\\r]+)/y;const RE_STRING_RUN=/([^\\\\\"\\n\\r]*)/y;const RE_STRING_ESCAPE=/\\\\([\\\\\"])/y;const RE_UNICODE_ESCAPE=/\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{6})/y;const RE_LEADING_NEWLINES=/^\\n+/;const RE_TRAILING_SPACES=/ +$/;const RE_BLANK_LINES=/ *\\r?\\n/g;const RE_INDENT=/( *)$/;const TOKEN_BRACE_OPEN=/{\\s*/y;const TOKEN_BRACE_CLOSE=/\\s*}/y;const TOKEN_BRACKET_OPEN=/\\[\\s*/y;const TOKEN_BRACKET_CLOSE=/\\s*] */y;const TOKEN_PAREN_OPEN=/\\s*\\(\\s*/y;const TOKEN_ARROW=/\\s*->\\s*/y;const TOKEN_COLON=/\\s*:\\s*/y;const TOKEN_COMMA=/\\s*,?\\s*/y;const TOKEN_BLANK=/\\s+/y;class FluentResource{constructor(source){this.body=[];RE_MESSAGE_START.lastIndex=0;let cursor=0;while(true){let next=RE_MESSAGE_START.exec(source);if(next===null){break}cursor=RE_MESSAGE_START.lastIndex;try{this.body.push(parseMessage(next[1]))}catch(err){if(err instanceof SyntaxError){continue}throw err}}function test(re){re.lastIndex=cursor;return re.test(source)}function consumeChar(char,errorClass){if(source[cursor]===char){cursor++;return true}if(errorClass){throw new errorClass(`Expected ${char}`)}return false}function consumeToken(re,errorClass){if(test(re)){cursor=re.lastIndex;return true}if(errorClass){throw new errorClass(`Expected ${re.toString()}`)}return false}function match(re){re.lastIndex=cursor;let result=re.exec(source);if(result===null){throw new SyntaxError(`Expected ${re.toString()}`)}cursor=re.lastIndex;return result}function match1(re){return match(re)[1]}function parseMessage(id){let value=parsePattern();let attributes=parseAttributes();if(value===null&&Object.keys(attributes).length===0){throw new SyntaxError(\"Expected message value or attributes\")}return{id:id,value:value,attributes:attributes}}function parseAttributes(){let attrs=Object.create(null);while(test(RE_ATTRIBUTE_START)){let name=match1(RE_ATTRIBUTE_START);let value=parsePattern();if(value===null){throw new SyntaxError(\"Expected attribute value\")}attrs[name]=value}return attrs}function parsePattern(){let first;if(test(RE_TEXT_RUN)){first=match1(RE_TEXT_RUN)}if(source[cursor]===\"{\"||source[cursor]===\"}\"){return parsePatternElements(first?[first]:[],Infinity)}let indent=parseIndent();if(indent){if(first){return parsePatternElements([first,indent],indent.length)}indent.value=trim(indent.value,RE_LEADING_NEWLINES);return parsePatternElements([indent],indent.length)}if(first){return trim(first,RE_TRAILING_SPACES)}return null}function parsePatternElements(elements=[],commonIndent){while(true){if(test(RE_TEXT_RUN)){elements.push(match1(RE_TEXT_RUN));continue}if(source[cursor]===\"{\"){elements.push(parsePlaceable());continue}if(source[cursor]===\"}\"){throw new SyntaxError(\"Unbalanced closing brace\")}let indent=parseIndent();if(indent){elements.push(indent);commonIndent=Math.min(commonIndent,indent.length);continue}break}let lastIndex=elements.length-1;let lastElement=elements[lastIndex];if(typeof lastElement===\"string\"){elements[lastIndex]=trim(lastElement,RE_TRAILING_SPACES)}let baked=[];for(let element of elements){if(element instanceof Indent){element=element.value.slice(0,element.value.length-commonIndent)}if(element){baked.push(element)}}return baked}function parsePlaceable(){consumeToken(TOKEN_BRACE_OPEN,SyntaxError);let selector=parseInlineExpression();if(consumeToken(TOKEN_BRACE_CLOSE)){return selector}if(consumeToken(TOKEN_ARROW)){let variants=parseVariants();consumeToken(TOKEN_BRACE_CLOSE,SyntaxError);return{type:\"select\",selector:selector,...variants}}throw new SyntaxError(\"Unclosed placeable\")}function parseInlineExpression(){if(source[cursor]===\"{\"){return parsePlaceable()}if(test(RE_REFERENCE)){let[,sigil,name,attr=null]=match(RE_REFERENCE);if(sigil===\"$\"){return{type:\"var\",name:name}}if(consumeToken(TOKEN_PAREN_OPEN)){let args=parseArguments();if(sigil===\"-\"){return{type:\"term\",name:name,attr:attr,args:args}}if(RE_FUNCTION_NAME.test(name)){return{type:\"func\",name:name,args:args}}throw new SyntaxError(\"Function names must be all upper-case\")}if(sigil===\"-\"){return{type:\"term\",name:name,attr:attr,args:[]}}return{type:\"mesg\",name:name,attr:attr}}return parseLiteral()}function parseArguments(){let args=[];while(true){switch(source[cursor]){case\")\":cursor++;return args;case undefined:throw new SyntaxError(\"Unclosed argument list\")}args.push(parseArgument());consumeToken(TOKEN_COMMA)}}function parseArgument(){let expr=parseInlineExpression();if(expr.type!==\"mesg\"){return expr}if(consumeToken(TOKEN_COLON)){return{type:\"narg\",name:expr.name,value:parseLiteral()}}return expr}function parseVariants(){let variants=[];let count=0;let star;while(test(RE_VARIANT_START)){if(consumeChar(\"*\")){star=count}let key=parseVariantKey();let value=parsePattern();if(value===null){throw new SyntaxError(\"Expected variant value\")}variants[count++]={key:key,value:value}}if(count===0){return null}if(star===undefined){throw new SyntaxError(\"Expected default variant\")}return{variants:variants,star:star}}function parseVariantKey(){consumeToken(TOKEN_BRACKET_OPEN,SyntaxError);let key;if(test(RE_NUMBER_LITERAL)){key=parseNumberLiteral()}else{key={type:\"str\",value:match1(RE_IDENTIFIER)}}consumeToken(TOKEN_BRACKET_CLOSE,SyntaxError);return key}function parseLiteral(){if(test(RE_NUMBER_LITERAL)){return parseNumberLiteral()}if(source[cursor]==='\"'){return parseStringLiteral()}throw new SyntaxError(\"Invalid expression\")}function parseNumberLiteral(){let[,value,fraction=\"\"]=match(RE_NUMBER_LITERAL);let precision=fraction.length;return{type:\"num\",value:parseFloat(value),precision:precision}}function parseStringLiteral(){consumeChar('\"',SyntaxError);let value=\"\";while(true){value+=match1(RE_STRING_RUN);if(source[cursor]===\"\\\\\"){value+=parseEscapeSequence();continue}if(consumeChar('\"')){return{type:\"str\",value:value}}throw new SyntaxError(\"Unclosed string literal\")}}function parseEscapeSequence(){if(test(RE_STRING_ESCAPE)){return match1(RE_STRING_ESCAPE)}if(test(RE_UNICODE_ESCAPE)){let[,codepoint4,codepoint6]=match(RE_UNICODE_ESCAPE);let codepoint=parseInt(codepoint4||codepoint6,16);return codepoint<=55295||57344<=codepoint?String.fromCodePoint(codepoint):\"�\"}throw new SyntaxError(\"Unknown escape sequence\")}function parseIndent(){let start=cursor;consumeToken(TOKEN_BLANK);switch(source[cursor]){case\".\":case\"[\":case\"*\":case\"}\":case undefined:return false;case\"{\":return makeIndent(source.slice(start,cursor))}if(source[cursor-1]===\" \"){return makeIndent(source.slice(start,cursor))}return false}function trim(text,re){return text.replace(re,\"\")}function makeIndent(blank){let value=blank.replace(RE_BLANK_LINES,\"\\n\");let length=RE_INDENT.exec(blank)[1].length;return new Indent(value,length)}}}class Indent{constructor(value,length){this.value=value;this.length=length}}const reOverlay=/<|&#?\\w+;/;const TEXT_LEVEL_ELEMENTS={\"http://www.w3.org/1999/xhtml\":[\"em\",\"strong\",\"small\",\"s\",\"cite\",\"q\",\"dfn\",\"abbr\",\"data\",\"time\",\"code\",\"var\",\"samp\",\"kbd\",\"sub\",\"sup\",\"i\",\"b\",\"u\",\"mark\",\"bdi\",\"bdo\",\"span\",\"br\",\"wbr\"]};const LOCALIZABLE_ATTRIBUTES={\"http://www.w3.org/1999/xhtml\":{global:[\"title\",\"aria-description\",\"aria-label\",\"aria-valuetext\"],a:[\"download\"],area:[\"download\",\"alt\"],input:[\"alt\",\"placeholder\"],menuitem:[\"label\"],menu:[\"label\"],optgroup:[\"label\"],option:[\"label\"],track:[\"label\"],img:[\"alt\"],textarea:[\"placeholder\"],th:[\"abbr\"]},\"http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul\":{global:[\"accesskey\",\"aria-label\",\"aria-valuetext\",\"label\",\"title\",\"tooltiptext\"],description:[\"value\"],key:[\"key\",\"keycode\"],label:[\"value\"],textbox:[\"placeholder\",\"value\"]}};function translateElement(element,translation){const{value:value}=translation;if(typeof value===\"string\"){if(element.localName===\"title\"&&element.namespaceURI===\"http://www.w3.org/1999/xhtml\"){element.textContent=value}else if(!reOverlay.test(value)){element.textContent=value}else{const templateElement=element.ownerDocument.createElementNS(\"http://www.w3.org/1999/xhtml\",\"template\");templateElement.innerHTML=value;overlayChildNodes(templateElement.content,element)}}overlayAttributes(translation,element)}function overlayChildNodes(fromFragment,toElement){for(const childNode of fromFragment.childNodes){if(childNode.nodeType===childNode.TEXT_NODE){continue}if(childNode.hasAttribute(\"data-l10n-name\")){const sanitized=getNodeForNamedElement(toElement,childNode);fromFragment.replaceChild(sanitized,childNode);continue}if(isElementAllowed(childNode)){const sanitized=createSanitizedElement(childNode);fromFragment.replaceChild(sanitized,childNode);continue}console.warn(`An element of forbidden type \"${childNode.localName}\" was found in `+\"the translation. Only safe text-level elements and elements with \"+\"data-l10n-name are allowed.\");fromFragment.replaceChild(createTextNodeFromTextContent(childNode),childNode)}toElement.textContent=\"\";toElement.appendChild(fromFragment)}function hasAttribute(attributes,name){if(!attributes){return false}for(let attr of attributes){if(attr.name===name){return true}}return false}function overlayAttributes(fromElement,toElement){const explicitlyAllowed=toElement.hasAttribute(\"data-l10n-attrs\")?toElement.getAttribute(\"data-l10n-attrs\").split(\",\").map((i=>i.trim())):null;for(const attr of Array.from(toElement.attributes)){if(isAttrNameLocalizable(attr.name,toElement,explicitlyAllowed)&&!hasAttribute(fromElement.attributes,attr.name)){toElement.removeAttribute(attr.name)}}if(!fromElement.attributes){return}for(const attr of Array.from(fromElement.attributes)){if(isAttrNameLocalizable(attr.name,toElement,explicitlyAllowed)&&toElement.getAttribute(attr.name)!==attr.value){toElement.setAttribute(attr.name,attr.value)}}}function getNodeForNamedElement(sourceElement,translatedChild){const childName=translatedChild.getAttribute(\"data-l10n-name\");const sourceChild=sourceElement.querySelector(`[data-l10n-name=\"${childName}\"]`);if(!sourceChild){console.warn(`An element named \"${childName}\" wasn't found in the source.`);return createTextNodeFromTextContent(translatedChild)}if(sourceChild.localName!==translatedChild.localName){console.warn(`An element named \"${childName}\" was found in the translation `+`but its type ${translatedChild.localName} didn't match the `+`element found in the source (${sourceChild.localName}).`);return createTextNodeFromTextContent(translatedChild)}sourceElement.removeChild(sourceChild);const clone=sourceChild.cloneNode(false);return shallowPopulateUsing(translatedChild,clone)}function createSanitizedElement(element){const clone=element.ownerDocument.createElement(element.localName);return shallowPopulateUsing(element,clone)}function createTextNodeFromTextContent(element){return element.ownerDocument.createTextNode(element.textContent)}function isElementAllowed(element){const allowed=TEXT_LEVEL_ELEMENTS[element.namespaceURI];return allowed&&allowed.includes(element.localName)}function isAttrNameLocalizable(name,element,explicitlyAllowed=null){if(explicitlyAllowed&&explicitlyAllowed.includes(name)){return true}const allowed=LOCALIZABLE_ATTRIBUTES[element.namespaceURI];if(!allowed){return false}const attrName=name.toLowerCase();const elemName=element.localName;if(allowed.global.includes(attrName)){return true}if(!allowed[elemName]){return false}if(allowed[elemName].includes(attrName)){return true}if(element.namespaceURI===\"http://www.w3.org/1999/xhtml\"&&elemName===\"input\"&&attrName===\"value\"){const type=element.type.toLowerCase();if(type===\"submit\"||type===\"button\"||type===\"reset\"){return true}}return false}function shallowPopulateUsing(fromElement,toElement){toElement.textContent=fromElement.textContent;overlayAttributes(fromElement,toElement);return toElement}class CachedIterable extends Array{static from(iterable){if(iterable instanceof this){return iterable}return new this(iterable)}}class CachedSyncIterable extends CachedIterable{constructor(iterable){super();if(Symbol.iterator in Object(iterable)){this.iterator=iterable[Symbol.iterator]()}else{throw new TypeError(\"Argument must implement the iteration protocol.\")}}[Symbol.iterator](){const cached=this;let cur=0;return{next(){if(cached.length<=cur){cached.push(cached.iterator.next())}return cached[cur++]}}}touchNext(count=1){let idx=0;while(idx++<count){const last=this[this.length-1];if(last&&last.done){break}this.push(this.iterator.next())}return this[this.length-1]}}class CachedAsyncIterable extends CachedIterable{constructor(iterable){super();if(Symbol.asyncIterator in Object(iterable)){this.iterator=iterable[Symbol.asyncIterator]()}else if(Symbol.iterator in Object(iterable)){this.iterator=iterable[Symbol.iterator]()}else{throw new TypeError(\"Argument must implement the iteration protocol.\")}}[Symbol.asyncIterator](){const cached=this;let cur=0;return{async next(){if(cached.length<=cur){cached.push(cached.iterator.next())}return cached[cur++]}}}async touchNext(count=1){let idx=0;while(idx++<count){const last=this[this.length-1];if(last&&(await last).done){break}this.push(this.iterator.next())}return this[this.length-1]}}class Localization{constructor(resourceIds=[],generateBundles){this.resourceIds=resourceIds;this.generateBundles=generateBundles;this.onChange(true)}addResourceIds(resourceIds,eager=false){this.resourceIds.push(...resourceIds);this.onChange(eager);return this.resourceIds.length}removeResourceIds(resourceIds){this.resourceIds=this.resourceIds.filter((r=>!resourceIds.includes(r)));this.onChange();return this.resourceIds.length}async formatWithFallback(keys,method){const translations=[];let hasAtLeastOneBundle=false;for await(const bundle of this.bundles){hasAtLeastOneBundle=true;const missingIds=keysFromBundle(method,bundle,keys,translations);if(missingIds.size===0){break}if(typeof console!==\"undefined\"){const locale=bundle.locales[0];const ids=Array.from(missingIds).join(\", \");console.warn(`[fluent] Missing translations in ${locale}: ${ids}`)}}if(!hasAtLeastOneBundle&&typeof console!==\"undefined\"){console.warn(`[fluent] Request for keys failed because no resource bundles got generated.\\n  keys: ${JSON.stringify(keys)}.\\n  resourceIds: ${JSON.stringify(this.resourceIds)}.`)}return translations}formatMessages(keys){return this.formatWithFallback(keys,messageFromBundle)}formatValues(keys){return this.formatWithFallback(keys,valueFromBundle)}async formatValue(id,args){const[val]=await this.formatValues([{id:id,args:args}]);return val}handleEvent(){this.onChange()}onChange(eager=false){this.bundles=CachedAsyncIterable.from(this.generateBundles(this.resourceIds));if(eager){this.bundles.touchNext(2)}}}function valueFromBundle(bundle,errors,message,args){if(message.value){return bundle.formatPattern(message.value,args,errors)}return null}function messageFromBundle(bundle,errors,message,args){const formatted={value:null,attributes:null};if(message.value){formatted.value=bundle.formatPattern(message.value,args,errors)}let attrNames=Object.keys(message.attributes);if(attrNames.length>0){formatted.attributes=new Array(attrNames.length);for(let[i,name]of attrNames.entries()){let value=bundle.formatPattern(message.attributes[name],args,errors);formatted.attributes[i]={name:name,value:value}}}return formatted}function keysFromBundle(method,bundle,keys,translations){const messageErrors=[];const missingIds=new Set;keys.forEach((({id:id,args:args},i)=>{if(translations[i]!==undefined){return}let message=bundle.getMessage(id);if(message){messageErrors.length=0;translations[i]=method(bundle,messageErrors,message,args);if(messageErrors.length>0&&typeof console!==\"undefined\"){const locale=bundle.locales[0];const errors=messageErrors.join(\", \");console.warn(`[fluent][resolver] errors in ${locale}/${id}: ${errors}.`)}}else{missingIds.add(id)}}));return missingIds}const L10NID_ATTR_NAME=\"data-l10n-id\";const L10NARGS_ATTR_NAME=\"data-l10n-args\";const L10N_ELEMENT_QUERY=`[${L10NID_ATTR_NAME}]`;class DOMLocalization extends Localization{constructor(resourceIds,generateBundles){super(resourceIds,generateBundles);this.roots=new Set;this.pendingrAF=null;this.pendingElements=new Set;this.windowElement=null;this.mutationObserver=null;this.observerConfig={attributes:true,characterData:false,childList:true,subtree:true,attributeFilter:[L10NID_ATTR_NAME,L10NARGS_ATTR_NAME]}}onChange(eager=false){super.onChange(eager);if(this.roots){this.translateRoots()}}setAttributes(element,id,args){element.setAttribute(L10NID_ATTR_NAME,id);if(args){element.setAttribute(L10NARGS_ATTR_NAME,JSON.stringify(args))}else{element.removeAttribute(L10NARGS_ATTR_NAME)}return element}getAttributes(element){return{id:element.getAttribute(L10NID_ATTR_NAME),args:JSON.parse(element.getAttribute(L10NARGS_ATTR_NAME)||null)}}connectRoot(newRoot){for(const root of this.roots){if(root===newRoot||root.contains(newRoot)||newRoot.contains(root)){throw new Error(\"Cannot add a root that overlaps with existing root.\")}}if(this.windowElement){if(this.windowElement!==newRoot.ownerDocument.defaultView){throw new Error(`Cannot connect a root:\\n          DOMLocalization already has a root from a different window.`)}}else{this.windowElement=newRoot.ownerDocument.defaultView;this.mutationObserver=new this.windowElement.MutationObserver((mutations=>this.translateMutations(mutations)))}this.roots.add(newRoot);this.mutationObserver.observe(newRoot,this.observerConfig)}disconnectRoot(root){this.roots.delete(root);this.pauseObserving();if(this.roots.size===0){this.mutationObserver=null;if(this.windowElement&&this.pendingrAF){this.windowElement.cancelAnimationFrame(this.pendingrAF)}this.windowElement=null;this.pendingrAF=null;this.pendingElements.clear();return true}this.resumeObserving();return false}translateRoots(){const roots=Array.from(this.roots);return Promise.all(roots.map((root=>this.translateFragment(root))))}pauseObserving(){if(!this.mutationObserver){return}this.translateMutations(this.mutationObserver.takeRecords());this.mutationObserver.disconnect()}resumeObserving(){if(!this.mutationObserver){return}for(const root of this.roots){this.mutationObserver.observe(root,this.observerConfig)}}translateMutations(mutations){for(const mutation of mutations){switch(mutation.type){case\"attributes\":if(mutation.target.hasAttribute(\"data-l10n-id\")){this.pendingElements.add(mutation.target)}break;case\"childList\":for(const addedNode of mutation.addedNodes){if(addedNode.nodeType===addedNode.ELEMENT_NODE){if(addedNode.childElementCount){for(const element of this.getTranslatables(addedNode)){this.pendingElements.add(element)}}else if(addedNode.hasAttribute(L10NID_ATTR_NAME)){this.pendingElements.add(addedNode)}}}break}}if(this.pendingElements.size>0){if(this.pendingrAF===null){this.pendingrAF=this.windowElement.requestAnimationFrame((()=>{this.translateElements(Array.from(this.pendingElements));this.pendingElements.clear();this.pendingrAF=null}))}}}translateFragment(frag){return this.translateElements(this.getTranslatables(frag))}async translateElements(elements){if(!elements.length){return undefined}const keys=elements.map(this.getKeysForElement);const translations=await this.formatMessages(keys);return this.applyTranslations(elements,translations)}applyTranslations(elements,translations){this.pauseObserving();for(let i=0;i<elements.length;i++){if(translations[i]!==undefined){translateElement(elements[i],translations[i])}}this.resumeObserving()}getTranslatables(element){const nodes=Array.from(element.querySelectorAll(L10N_ELEMENT_QUERY));if(typeof element.hasAttribute===\"function\"&&element.hasAttribute(L10NID_ATTR_NAME)){nodes.push(element)}return nodes}getKeysForElement(element){return{id:element.getAttribute(L10NID_ATTR_NAME),args:JSON.parse(element.getAttribute(L10NARGS_ATTR_NAME)||null)}}}class L10n{#dir;#elements;#lang;#l10n;constructor({lang:lang,isRTL:isRTL},l10n=null){this.#lang=L10n.#fixupLangCode(lang);this.#l10n=l10n;this.#dir=isRTL??L10n.#isRTL(this.#lang)?\"rtl\":\"ltr\"}_setL10n(l10n){this.#l10n=l10n}getLanguage(){return this.#lang}getDirection(){return this.#dir}async get(ids,args=null,fallback){if(Array.isArray(ids)){ids=ids.map((id=>({id:id})));const messages=await this.#l10n.formatMessages(ids);return messages.map((message=>message.value))}const messages=await this.#l10n.formatMessages([{id:ids,args:args}]);return messages[0]?.value||fallback}async translate(element){(this.#elements||=new Set).add(element);try{this.#l10n.connectRoot(element);await this.#l10n.translateRoots()}catch{}}async translateOnce(element){try{await this.#l10n.translateElements([element])}catch(ex){console.error(\"translateOnce:\",ex)}}async destroy(){if(this.#elements){for(const element of this.#elements){this.#l10n.disconnectRoot(element)}this.#elements.clear();this.#elements=null}this.#l10n.pauseObserving()}pause(){this.#l10n.pauseObserving()}resume(){this.#l10n.resumeObserving()}static#fixupLangCode(langCode){langCode=langCode?.toLowerCase()||\"en-us\";const PARTIAL_LANG_CODES={en:\"en-us\",es:\"es-es\",fy:\"fy-nl\",ga:\"ga-ie\",gu:\"gu-in\",hi:\"hi-in\",hy:\"hy-am\",nb:\"nb-no\",ne:\"ne-np\",nn:\"nn-no\",pa:\"pa-in\",pt:\"pt-pt\",sv:\"sv-se\",zh:\"zh-cn\"};return PARTIAL_LANG_CODES[langCode]||langCode}static#isRTL(lang){const shortCode=lang.split(\"-\",1)[0];return[\"ar\",\"he\",\"fa\",\"ps\",\"ur\"].includes(shortCode)}}const GenericL10n=null;function PLATFORM(){const{isAndroid:isAndroid,isLinux:isLinux,isMac:isMac,isWindows:isWindows}=FeatureTest.platform;if(isLinux){return\"linux\"}if(isWindows){return\"windows\"}if(isMac){return\"macos\"}if(isAndroid){return\"android\"}return\"other\"}function createBundle(lang,text){const resource=new FluentResource(text);const bundle=new FluentBundle(lang,{functions:{PLATFORM:PLATFORM}});const errors=bundle.addResource(resource);if(errors.length){console.error(\"L10n errors\",errors)}return bundle}class genericl10n_GenericL10n extends L10n{constructor(lang){super({lang:lang});const generateBundles=!lang?genericl10n_GenericL10n.#generateBundlesFallback.bind(genericl10n_GenericL10n,this.getLanguage()):genericl10n_GenericL10n.#generateBundles.bind(genericl10n_GenericL10n,\"en-us\",this.getLanguage());this._setL10n(new DOMLocalization([],generateBundles))}static async*#generateBundles(defaultLang,baseLang){const{baseURL:baseURL,paths:paths}=await this.#getPaths();const langs=[baseLang];if(defaultLang!==baseLang){const shortLang=baseLang.split(\"-\",1)[0];if(shortLang!==baseLang){langs.push(shortLang)}langs.push(defaultLang)}const bundles=langs.map((lang=>[lang,this.#createBundle(lang,baseURL,paths)]));for(const[lang,bundlePromise]of bundles){const bundle=await bundlePromise;if(bundle){yield bundle}else if(lang===\"en-us\"){yield this.#createBundleFallback(lang)}}}static async#createBundle(lang,baseURL,paths){const path=paths[lang];if(!path){return null}const url=new URL(path,baseURL);const text=await fetchData(url,\"text\");return createBundle(lang,text)}static async#getPaths(){try{const{href:href}=document.querySelector(`link[type=\"application/l10n\"]`);const paths=await fetchData(href,\"json\");return{baseURL:href.substring(0,href.lastIndexOf(\"/\")+1)||\"./\",paths:paths}}catch{}return{baseURL:\"./\",paths:Object.create(null)}}static async*#generateBundlesFallback(lang){yield this.#createBundleFallback(lang)}static async#createBundleFallback(lang){const text='pdfjs-previous-button =\\n    .title = Previous Page\\npdfjs-previous-button-label = Previous\\npdfjs-next-button =\\n    .title = Next Page\\npdfjs-next-button-label = Next\\npdfjs-page-input =\\n    .title = Page\\npdfjs-of-pages = of { $pagesCount }\\npdfjs-page-of-pages = ({ $pageNumber } of { $pagesCount })\\npdfjs-zoom-out-button =\\n    .title = Zoom Out\\npdfjs-zoom-out-button-label = Zoom Out\\npdfjs-zoom-in-button =\\n    .title = Zoom In\\npdfjs-zoom-in-button-label = Zoom In\\npdfjs-zoom-select =\\n    .title = Zoom\\npdfjs-presentation-mode-button =\\n    .title = Switch to Presentation Mode\\npdfjs-presentation-mode-button-label = Presentation Mode\\npdfjs-open-file-button =\\n    .title = Open File\\npdfjs-open-file-button-label = Open\\npdfjs-print-button =\\n    .title = Print\\npdfjs-print-button-label = Print\\npdfjs-save-button =\\n    .title = Save\\npdfjs-save-button-label = Save\\npdfjs-download-button =\\n    .title = Download\\npdfjs-download-button-label = Download\\npdfjs-bookmark-button =\\n    .title = Current Page (View URL from Current Page)\\npdfjs-bookmark-button-label = Current Page\\npdfjs-tools-button =\\n    .title = Tools\\npdfjs-tools-button-label = Tools\\npdfjs-first-page-button =\\n    .title = Go to First Page\\npdfjs-first-page-button-label = Go to First Page\\npdfjs-last-page-button =\\n    .title = Go to Last Page\\npdfjs-last-page-button-label = Go to Last Page\\npdfjs-page-rotate-cw-button =\\n    .title = Rotate Clockwise\\npdfjs-page-rotate-cw-button-label = Rotate Clockwise\\npdfjs-page-rotate-ccw-button =\\n    .title = Rotate Counterclockwise\\npdfjs-page-rotate-ccw-button-label = Rotate Counterclockwise\\npdfjs-cursor-text-select-tool-button =\\n    .title = Enable Text Selection Tool\\npdfjs-cursor-text-select-tool-button-label = Text Selection Tool\\npdfjs-cursor-hand-tool-button =\\n    .title = Enable Hand Tool\\npdfjs-cursor-hand-tool-button-label = Hand Tool\\npdfjs-scroll-page-button =\\n    .title = Use Page Scrolling\\npdfjs-scroll-page-button-label = Page Scrolling\\npdfjs-scroll-vertical-button =\\n    .title = Use Vertical Scrolling\\npdfjs-scroll-vertical-button-label = Vertical Scrolling\\npdfjs-scroll-horizontal-button =\\n    .title = Use Horizontal Scrolling\\npdfjs-scroll-horizontal-button-label = Horizontal Scrolling\\npdfjs-scroll-wrapped-button =\\n    .title = Use Wrapped Scrolling\\npdfjs-scroll-wrapped-button-label = Wrapped Scrolling\\npdfjs-spread-none-button =\\n    .title = Do not join page spreads\\npdfjs-spread-none-button-label = No Spreads\\npdfjs-spread-odd-button =\\n    .title = Join page spreads starting with odd-numbered pages\\npdfjs-spread-odd-button-label = Odd Spreads\\npdfjs-spread-even-button =\\n    .title = Join page spreads starting with even-numbered pages\\npdfjs-spread-even-button-label = Even Spreads\\npdfjs-document-properties-button =\\n    .title = Document Properties…\\npdfjs-document-properties-button-label = Document Properties…\\npdfjs-document-properties-file-name = File name:\\npdfjs-document-properties-file-size = File size:\\npdfjs-document-properties-size-kb = { NUMBER($kb, maximumSignificantDigits: 3) } KB ({ $b } bytes)\\npdfjs-document-properties-size-mb = { NUMBER($mb, maximumSignificantDigits: 3) } MB ({ $b } bytes)\\npdfjs-document-properties-title = Title:\\npdfjs-document-properties-author = Author:\\npdfjs-document-properties-subject = Subject:\\npdfjs-document-properties-keywords = Keywords:\\npdfjs-document-properties-creation-date = Creation Date:\\npdfjs-document-properties-modification-date = Modification Date:\\npdfjs-document-properties-date-time-string = { DATETIME($dateObj, dateStyle: \"short\", timeStyle: \"medium\") }\\npdfjs-document-properties-creator = Creator:\\npdfjs-document-properties-producer = PDF Producer:\\npdfjs-document-properties-version = PDF Version:\\npdfjs-document-properties-page-count = Page Count:\\npdfjs-document-properties-page-size = Page Size:\\npdfjs-document-properties-page-size-unit-inches = in\\npdfjs-document-properties-page-size-unit-millimeters = mm\\npdfjs-document-properties-page-size-orientation-portrait = portrait\\npdfjs-document-properties-page-size-orientation-landscape = landscape\\npdfjs-document-properties-page-size-name-a-three = A3\\npdfjs-document-properties-page-size-name-a-four = A4\\npdfjs-document-properties-page-size-name-letter = Letter\\npdfjs-document-properties-page-size-name-legal = Legal\\npdfjs-document-properties-page-size-dimension-string = { $width } × { $height } { $unit } ({ $orientation })\\npdfjs-document-properties-page-size-dimension-name-string = { $width } × { $height } { $unit } ({ $name }, { $orientation })\\npdfjs-document-properties-linearized = Fast Web View:\\npdfjs-document-properties-linearized-yes = Yes\\npdfjs-document-properties-linearized-no = No\\npdfjs-document-properties-close-button = Close\\npdfjs-print-progress-message = Preparing document for printing…\\npdfjs-print-progress-percent = { $progress }%\\npdfjs-print-progress-close-button = Cancel\\npdfjs-printing-not-supported = Warning: Printing is not fully supported by this browser.\\npdfjs-printing-not-ready = Warning: The PDF is not fully loaded for printing.\\npdfjs-toggle-sidebar-button =\\n    .title = Toggle Sidebar\\npdfjs-toggle-sidebar-notification-button =\\n    .title = Toggle Sidebar (document contains outline/attachments/layers)\\npdfjs-toggle-sidebar-button-label = Toggle Sidebar\\npdfjs-document-outline-button =\\n    .title = Show Document Outline (double-click to expand/collapse all items)\\npdfjs-document-outline-button-label = Document Outline\\npdfjs-attachments-button =\\n    .title = Show Attachments\\npdfjs-attachments-button-label = Attachments\\npdfjs-layers-button =\\n    .title = Show Layers (double-click to reset all layers to the default state)\\npdfjs-layers-button-label = Layers\\npdfjs-thumbs-button =\\n    .title = Show Thumbnails\\npdfjs-thumbs-button-label = Thumbnails\\npdfjs-current-outline-item-button =\\n    .title = Find Current Outline Item\\npdfjs-current-outline-item-button-label = Current Outline Item\\npdfjs-findbar-button =\\n    .title = Find in Document\\npdfjs-findbar-button-label = Find\\npdfjs-additional-layers = Additional Layers\\npdfjs-thumb-page-title =\\n    .title = Page { $page }\\npdfjs-thumb-page-canvas =\\n    .aria-label = Thumbnail of Page { $page }\\npdfjs-find-input =\\n    .title = Find\\n    .placeholder = Find in document…\\npdfjs-find-previous-button =\\n    .title = Find the previous occurrence of the phrase\\npdfjs-find-previous-button-label = Previous\\npdfjs-find-next-button =\\n    .title = Find the next occurrence of the phrase\\npdfjs-find-next-button-label = Next\\npdfjs-find-highlight-checkbox = Highlight All\\npdfjs-find-match-case-checkbox-label = Match Case\\npdfjs-find-match-diacritics-checkbox-label = Match Diacritics\\npdfjs-find-entire-word-checkbox-label = Whole Words\\npdfjs-find-reached-top = Reached top of document, continued from bottom\\npdfjs-find-reached-bottom = Reached end of document, continued from top\\npdfjs-find-match-count =\\n    { $total ->\\n        [one] { $current } of { $total } match\\n       *[other] { $current } of { $total } matches\\n    }\\npdfjs-find-match-count-limit =\\n    { $limit ->\\n        [one] More than { $limit } match\\n       *[other] More than { $limit } matches\\n    }\\npdfjs-find-not-found = Phrase not found\\npdfjs-page-scale-width = Page Width\\npdfjs-page-scale-fit = Page Fit\\npdfjs-page-scale-auto = Automatic Zoom\\npdfjs-page-scale-actual = Actual Size\\npdfjs-page-scale-percent = { $scale }%\\npdfjs-page-landmark =\\n    .aria-label = Page { $page }\\npdfjs-loading-error = An error occurred while loading the PDF.\\npdfjs-invalid-file-error = Invalid or corrupted PDF file.\\npdfjs-missing-file-error = Missing PDF file.\\npdfjs-unexpected-response-error = Unexpected server response.\\npdfjs-rendering-error = An error occurred while rendering the page.\\npdfjs-annotation-date-time-string = { DATETIME($dateObj, dateStyle: \"short\", timeStyle: \"medium\") }\\npdfjs-text-annotation-type =\\n    .alt = [{ $type } Annotation]\\npdfjs-password-label = Enter the password to open this PDF file.\\npdfjs-password-invalid = Invalid password. Please try again.\\npdfjs-password-ok-button = OK\\npdfjs-password-cancel-button = Cancel\\npdfjs-web-fonts-disabled = Web fonts are disabled: unable to use embedded PDF fonts.\\npdfjs-editor-free-text-button =\\n    .title = Text\\npdfjs-editor-free-text-button-label = Text\\npdfjs-editor-ink-button =\\n    .title = Draw\\npdfjs-editor-ink-button-label = Draw\\npdfjs-editor-stamp-button =\\n    .title = Add or edit images\\npdfjs-editor-stamp-button-label = Add or edit images\\npdfjs-editor-highlight-button =\\n    .title = Highlight\\npdfjs-editor-highlight-button-label = Highlight\\npdfjs-highlight-floating-button1 =\\n    .title = Highlight\\n    .aria-label = Highlight\\npdfjs-highlight-floating-button-label = Highlight\\npdfjs-editor-signature-button =\\n    .title = Add signature\\npdfjs-editor-signature-button-label = Add signature\\npdfjs-editor-highlight-editor =\\n    .aria-label = Highlight editor\\npdfjs-editor-ink-editor =\\n    .aria-label = Drawing editor\\npdfjs-editor-signature-editor1 =\\n    .aria-description = Signature editor: { $description }\\npdfjs-editor-stamp-editor =\\n    .aria-label = Image editor\\npdfjs-editor-remove-ink-button =\\n    .title = Remove drawing\\npdfjs-editor-remove-freetext-button =\\n    .title = Remove text\\npdfjs-editor-remove-stamp-button =\\n    .title = Remove image\\npdfjs-editor-remove-highlight-button =\\n    .title = Remove highlight\\npdfjs-editor-remove-signature-button =\\n    .title = Remove signature\\npdfjs-editor-free-text-color-input = Color\\npdfjs-editor-free-text-size-input = Size\\npdfjs-editor-ink-color-input = Color\\npdfjs-editor-ink-thickness-input = Thickness\\npdfjs-editor-ink-opacity-input = Opacity\\npdfjs-editor-stamp-add-image-button =\\n    .title = Add image\\npdfjs-editor-stamp-add-image-button-label = Add image\\npdfjs-editor-free-highlight-thickness-input = Thickness\\npdfjs-editor-free-highlight-thickness-title =\\n    .title = Change thickness when highlighting items other than text\\npdfjs-editor-add-signature-container =\\n    .aria-label = Signature controls and saved signatures\\npdfjs-editor-signature-add-signature-button =\\n    .title = Add new signature\\npdfjs-editor-signature-add-signature-button-label = Add new signature\\npdfjs-editor-add-saved-signature-button =\\n    .title = Saved signature: { $description }\\npdfjs-free-text2 =\\n    .aria-label = Text Editor\\n    .default-content = Start typing…\\npdfjs-editor-alt-text-button =\\n    .aria-label = Alt text\\npdfjs-editor-alt-text-button-label = Alt text\\npdfjs-editor-alt-text-edit-button =\\n    .aria-label = Edit alt text\\npdfjs-editor-alt-text-dialog-label = Choose an option\\npdfjs-editor-alt-text-dialog-description = Alt text (alternative text) helps when people can’t see the image or when it doesn’t load.\\npdfjs-editor-alt-text-add-description-label = Add a description\\npdfjs-editor-alt-text-add-description-description = Aim for 1-2 sentences that describe the subject, setting, or actions.\\npdfjs-editor-alt-text-mark-decorative-label = Mark as decorative\\npdfjs-editor-alt-text-mark-decorative-description = This is used for ornamental images, like borders or watermarks.\\npdfjs-editor-alt-text-cancel-button = Cancel\\npdfjs-editor-alt-text-save-button = Save\\npdfjs-editor-alt-text-decorative-tooltip = Marked as decorative\\npdfjs-editor-alt-text-textarea =\\n    .placeholder = For example, “A young man sits down at a table to eat a meal”\\npdfjs-editor-resizer-top-left =\\n    .aria-label = Top left corner — resize\\npdfjs-editor-resizer-top-middle =\\n    .aria-label = Top middle — resize\\npdfjs-editor-resizer-top-right =\\n    .aria-label = Top right corner — resize\\npdfjs-editor-resizer-middle-right =\\n    .aria-label = Middle right — resize\\npdfjs-editor-resizer-bottom-right =\\n    .aria-label = Bottom right corner — resize\\npdfjs-editor-resizer-bottom-middle =\\n    .aria-label = Bottom middle — resize\\npdfjs-editor-resizer-bottom-left =\\n    .aria-label = Bottom left corner — resize\\npdfjs-editor-resizer-middle-left =\\n    .aria-label = Middle left — resize\\npdfjs-editor-highlight-colorpicker-label = Highlight color\\npdfjs-editor-colorpicker-button =\\n    .title = Change color\\npdfjs-editor-colorpicker-dropdown =\\n    .aria-label = Color choices\\npdfjs-editor-colorpicker-yellow =\\n    .title = Yellow\\npdfjs-editor-colorpicker-green =\\n    .title = Green\\npdfjs-editor-colorpicker-blue =\\n    .title = Blue\\npdfjs-editor-colorpicker-pink =\\n    .title = Pink\\npdfjs-editor-colorpicker-red =\\n    .title = Red\\npdfjs-editor-highlight-show-all-button-label = Show all\\npdfjs-editor-highlight-show-all-button =\\n    .title = Show all\\npdfjs-editor-new-alt-text-dialog-edit-label = Edit alt text (image description)\\npdfjs-editor-new-alt-text-dialog-add-label = Add alt text (image description)\\npdfjs-editor-new-alt-text-textarea =\\n    .placeholder = Write your description here…\\npdfjs-editor-new-alt-text-description = Short description for people who can’t see the image or when the image doesn’t load.\\npdfjs-editor-new-alt-text-disclaimer1 = This alt text was created automatically and may be inaccurate.\\npdfjs-editor-new-alt-text-disclaimer-learn-more-url = Learn more\\npdfjs-editor-new-alt-text-create-automatically-button-label = Create alt text automatically\\npdfjs-editor-new-alt-text-not-now-button = Not now\\npdfjs-editor-new-alt-text-error-title = Couldn’t create alt text automatically\\npdfjs-editor-new-alt-text-error-description = Please write your own alt text or try again later.\\npdfjs-editor-new-alt-text-error-close-button = Close\\npdfjs-editor-new-alt-text-ai-model-downloading-progress = Downloading alt text AI model ({ $downloadedSize } of { $totalSize } MB)\\n    .aria-valuetext = Downloading alt text AI model ({ $downloadedSize } of { $totalSize } MB)\\npdfjs-editor-new-alt-text-added-button =\\n    .aria-label = Alt text added\\npdfjs-editor-new-alt-text-added-button-label = Alt text added\\npdfjs-editor-new-alt-text-missing-button =\\n    .aria-label = Missing alt text\\npdfjs-editor-new-alt-text-missing-button-label = Missing alt text\\npdfjs-editor-new-alt-text-to-review-button =\\n    .aria-label = Review alt text\\npdfjs-editor-new-alt-text-to-review-button-label = Review alt text\\npdfjs-editor-new-alt-text-generated-alt-text-with-disclaimer = Created automatically: { $generatedAltText }\\npdfjs-image-alt-text-settings-button =\\n    .title = Image alt text settings\\npdfjs-image-alt-text-settings-button-label = Image alt text settings\\npdfjs-editor-alt-text-settings-dialog-label = Image alt text settings\\npdfjs-editor-alt-text-settings-automatic-title = Automatic alt text\\npdfjs-editor-alt-text-settings-create-model-button-label = Create alt text automatically\\npdfjs-editor-alt-text-settings-create-model-description = Suggests descriptions to help people who can’t see the image or when the image doesn’t load.\\npdfjs-editor-alt-text-settings-download-model-label = Alt text AI model ({ $totalSize } MB)\\npdfjs-editor-alt-text-settings-ai-model-description = Runs locally on your device so your data stays private. Required for automatic alt text.\\npdfjs-editor-alt-text-settings-delete-model-button = Delete\\npdfjs-editor-alt-text-settings-download-model-button = Download\\npdfjs-editor-alt-text-settings-downloading-model-button = Downloading…\\npdfjs-editor-alt-text-settings-editor-title = Alt text editor\\npdfjs-editor-alt-text-settings-show-dialog-button-label = Show alt text editor right away when adding an image\\npdfjs-editor-alt-text-settings-show-dialog-description = Helps you make sure all your images have alt text.\\npdfjs-editor-alt-text-settings-close-button = Close\\npdfjs-editor-undo-bar-message-highlight = Highlight removed\\npdfjs-editor-undo-bar-message-freetext = Text removed\\npdfjs-editor-undo-bar-message-ink = Drawing removed\\npdfjs-editor-undo-bar-message-stamp = Image removed\\npdfjs-editor-undo-bar-message-signature = Signature removed\\npdfjs-editor-undo-bar-message-multiple =\\n    { $count ->\\n        [one] { $count } annotation removed\\n       *[other] { $count } annotations removed\\n    }\\npdfjs-editor-undo-bar-undo-button =\\n    .title = Undo\\npdfjs-editor-undo-bar-undo-button-label = Undo\\npdfjs-editor-undo-bar-close-button =\\n    .title = Close\\npdfjs-editor-undo-bar-close-button-label = Close\\npdfjs-editor-add-signature-dialog-label = This modal allows the user to create a signature to add to a PDF document. The user can edit the name (which also serves as the alt text), and optionally save the signature for repeated use.\\npdfjs-editor-add-signature-dialog-title = Add a signature\\npdfjs-editor-add-signature-type-button = Type\\n    .title = Type\\npdfjs-editor-add-signature-draw-button = Draw\\n    .title = Draw\\npdfjs-editor-add-signature-image-button = Image\\n    .title = Image\\npdfjs-editor-add-signature-type-input =\\n    .aria-label = Type your signature\\n    .placeholder = Type your signature\\npdfjs-editor-add-signature-draw-placeholder = Draw your signature\\npdfjs-editor-add-signature-draw-thickness-range-label = Thickness\\npdfjs-editor-add-signature-draw-thickness-range =\\n    .title = Drawing thickness: { $thickness }\\npdfjs-editor-add-signature-image-placeholder = Drag a file here to upload\\npdfjs-editor-add-signature-image-browse-link =\\n    { PLATFORM() ->\\n        [macos] Or choose image files\\n       *[other] Or browse image files\\n    }\\npdfjs-editor-add-signature-description-label = Description (alt text)\\npdfjs-editor-add-signature-description-input =\\n    .title = Description (alt text)\\npdfjs-editor-add-signature-description-default-when-drawing = Signature\\npdfjs-editor-add-signature-clear-button-label = Clear signature\\npdfjs-editor-add-signature-clear-button =\\n    .title = Clear signature\\npdfjs-editor-add-signature-save-checkbox = Save signature\\npdfjs-editor-add-signature-save-warning-message = You’ve reached the limit of 5 saved signatures. Remove one to save more.\\npdfjs-editor-add-signature-image-upload-error-title = Couldn’t upload image\\npdfjs-editor-add-signature-image-upload-error-description = Check your network connection or try another image.\\npdfjs-editor-add-signature-error-close-button = Close\\npdfjs-editor-add-signature-cancel-button = Cancel\\npdfjs-editor-add-signature-add-button = Add\\npdfjs-editor-delete-signature-button1 =\\n    .title = Remove saved signature\\npdfjs-editor-delete-signature-button-label1 = Remove saved signature\\npdfjs-editor-add-signature-edit-button-label = Edit description\\npdfjs-editor-edit-signature-dialog-title = Edit description\\npdfjs-editor-edit-signature-update-button = Update';return createBundle(lang,text)}}async function docProperties(pdfDocument){const url=\"\",baseUrl=\"\";const{info:info,metadata:metadata,contentDispositionFilename:contentDispositionFilename,contentLength:contentLength}=await pdfDocument.getMetadata();return{...info,baseURL:baseUrl,filesize:contentLength||(await pdfDocument.getDownloadInfo()).length,filename:contentDispositionFilename||getPdfFilenameFromUrl(url),metadata:metadata?.getRaw(),authors:metadata?.get(\"dc:creator\"),numPages:pdfDocument.numPages,URL:url}}class GenericScripting{constructor(sandboxBundleSrc){this._ready=new Promise(((resolve,reject)=>{const sandbox=import(sandboxBundleSrc);sandbox.then((pdfjsSandbox=>{resolve(pdfjsSandbox.QuickJSSandbox())})).catch(reject)}))}async createSandbox(data){const sandbox=await this._ready;sandbox.create(data)}async dispatchEventInSandbox(event){const sandbox=await this._ready;setTimeout((()=>sandbox.dispatchEvent(event)),0)}async destroySandbox(){const sandbox=await this._ready;sandbox.nukeSandbox()}}const KEY_STORAGE=\"pdfjs.signature\";class SignatureStorage{#eventBus;#signatures=null;#signal=null;constructor(eventBus,signal){this.#eventBus=eventBus;this.#signal=signal}#save(){localStorage.setItem(KEY_STORAGE,JSON.stringify(Object.fromEntries(this.#signatures)))}async getAll(){if(this.#signal){window.addEventListener(\"storage\",(({key:key})=>{if(key===KEY_STORAGE){this.#signatures=null;this.#eventBus?.dispatch(\"storedsignatureschanged\",{source:this})}}),{signal:this.#signal});this.#signal=null}if(!this.#signatures){this.#signatures=new Map;const data=localStorage.getItem(KEY_STORAGE);if(data){for(const[key,value]of Object.entries(JSON.parse(data))){this.#signatures.set(key,value)}}}return this.#signatures}async isFull(){return await this.size()===5}async size(){return(await this.getAll()).size}async create(data){if(await this.isFull()){return null}const uuid=getUuid();this.#signatures.set(uuid,data);this.#save();return uuid}async delete(uuid){const signatures=await this.getAll();if(!signatures.has(uuid)){return false}signatures.delete(uuid);this.#save();return true}}function initCom(app){}class Preferences extends BasePreferences{async _writeToStorage(prefObj){localStorage.setItem(\"pdfjs.preferences\",JSON.stringify(prefObj))}async _readFromStorage(prefObj){return{prefs:JSON.parse(localStorage.getItem(\"pdfjs.preferences\"))}}}class ExternalServices extends BaseExternalServices{async createL10n(){return new genericl10n_GenericL10n(AppOptions.get(\"localeProperties\")?.lang)}createScripting(){return new GenericScripting(AppOptions.get(\"sandboxBundleSrc\"))}createSignatureStorage(eventBus,signal){return new SignatureStorage(eventBus,signal)}}class MLManager{async isEnabledFor(_name){return false}async deleteModel(_service){return null}isReady(_name){return false}guess(_data){}toggleService(_name,_enabled){}}class NewAltTextManager{#boundCancel=this.#cancel.bind(this);#createAutomaticallyButton;#currentEditor=null;#cancelButton;#descriptionContainer;#dialog;#disclaimer;#downloadModel;#downloadModelDescription;#eventBus;#firstTime=false;#guessedAltText;#hasAI=null;#isEditing=null;#imagePreview;#imageData;#isAILoading=false;#wasAILoading=false;#learnMore;#notNowButton;#overlayManager;#textarea;#title;#uiManager;#previousAltText=null;constructor({descriptionContainer:descriptionContainer,dialog:dialog,imagePreview:imagePreview,cancelButton:cancelButton,disclaimer:disclaimer,notNowButton:notNowButton,saveButton:saveButton,textarea:textarea,learnMore:learnMore,errorCloseButton:errorCloseButton,createAutomaticallyButton:createAutomaticallyButton,downloadModel:downloadModel,downloadModelDescription:downloadModelDescription,title:title},overlayManager,eventBus){this.#cancelButton=cancelButton;this.#createAutomaticallyButton=createAutomaticallyButton;this.#descriptionContainer=descriptionContainer;this.#dialog=dialog;this.#disclaimer=disclaimer;this.#notNowButton=notNowButton;this.#imagePreview=imagePreview;this.#textarea=textarea;this.#learnMore=learnMore;this.#title=title;this.#downloadModel=downloadModel;this.#downloadModelDescription=downloadModelDescription;this.#overlayManager=overlayManager;this.#eventBus=eventBus;dialog.addEventListener(\"close\",this.#close.bind(this));dialog.addEventListener(\"contextmenu\",(event=>{if(event.target!==this.#textarea){event.preventDefault()}}));cancelButton.addEventListener(\"click\",this.#boundCancel);notNowButton.addEventListener(\"click\",this.#boundCancel);saveButton.addEventListener(\"click\",this.#save.bind(this));errorCloseButton.addEventListener(\"click\",(()=>{this.#toggleError(false)}));createAutomaticallyButton.addEventListener(\"click\",(async()=>{const checked=createAutomaticallyButton.getAttribute(\"aria-pressed\")!==\"true\";this.#currentEditor._reportTelemetry({action:\"pdfjs.image.alt_text.ai_generation_check\",data:{status:checked}});if(this.#uiManager){this.#uiManager.setPreference(\"enableGuessAltText\",checked);await this.#uiManager.mlManager.toggleService(\"altText\",checked)}this.#toggleGuessAltText(checked,false)}));textarea.addEventListener(\"focus\",(()=>{this.#wasAILoading=this.#isAILoading;this.#toggleLoading(false);this.#toggleTitleAndDisclaimer()}));textarea.addEventListener(\"blur\",(()=>{if(!textarea.value){this.#toggleLoading(this.#wasAILoading)}this.#toggleTitleAndDisclaimer()}));textarea.addEventListener(\"input\",(()=>{this.#toggleTitleAndDisclaimer()}));eventBus._on(\"enableguessalttext\",(({value:value})=>{this.#toggleGuessAltText(value,false)}));this.#overlayManager.register(dialog);this.#learnMore.addEventListener(\"click\",(()=>{this.#currentEditor._reportTelemetry({action:\"pdfjs.image.alt_text.info\",data:{topic:\"alt_text\"}})}))}#toggleLoading(value){if(!this.#uiManager||this.#isAILoading===value){return}this.#isAILoading=value;this.#descriptionContainer.classList.toggle(\"loading\",value)}#toggleError(value){if(!this.#uiManager){return}this.#dialog.classList.toggle(\"error\",value)}async#toggleGuessAltText(value,isInitial=false){if(!this.#uiManager){return}this.#dialog.classList.toggle(\"aiDisabled\",!value);this.#createAutomaticallyButton.setAttribute(\"aria-pressed\",value);if(value){const{altTextLearnMoreUrl:altTextLearnMoreUrl}=this.#uiManager.mlManager;if(altTextLearnMoreUrl){this.#learnMore.href=altTextLearnMoreUrl}this.#mlGuessAltText(isInitial)}else{this.#toggleLoading(false);this.#isAILoading=false;this.#toggleTitleAndDisclaimer()}}#toggleNotNow(){this.#notNowButton.classList.toggle(\"hidden\",!this.#firstTime);this.#cancelButton.classList.toggle(\"hidden\",this.#firstTime)}#toggleAI(value){if(!this.#uiManager||this.#hasAI===value){return}this.#hasAI=value;this.#dialog.classList.toggle(\"noAi\",!value);this.#toggleTitleAndDisclaimer()}#toggleTitleAndDisclaimer(){const visible=this.#isAILoading||this.#guessedAltText&&this.#guessedAltText===this.#textarea.value;this.#disclaimer.hidden=!visible;const isEditing=this.#isAILoading||!!this.#textarea.value;if(this.#isEditing===isEditing){return}this.#isEditing=isEditing;this.#title.setAttribute(\"data-l10n-id\",isEditing?\"pdfjs-editor-new-alt-text-dialog-edit-label\":\"pdfjs-editor-new-alt-text-dialog-add-label\")}async#mlGuessAltText(isInitial){if(this.#isAILoading){return}if(this.#textarea.value){return}if(isInitial&&this.#previousAltText!==null){return}this.#guessedAltText=this.#currentEditor.guessedAltText;if(this.#previousAltText===null&&this.#guessedAltText){this.#addAltText(this.#guessedAltText);return}this.#toggleLoading(true);this.#toggleTitleAndDisclaimer();let hasError=false;try{const altText=await this.#currentEditor.mlGuessAltText(this.#imageData,false);if(altText){this.#guessedAltText=altText;this.#wasAILoading=this.#isAILoading;if(this.#isAILoading){this.#addAltText(altText)}}}catch(e){console.error(e);hasError=true}this.#toggleLoading(false);this.#toggleTitleAndDisclaimer();if(hasError&&this.#uiManager){this.#toggleError(true)}}#addAltText(altText){if(!this.#uiManager||this.#textarea.value){return}this.#textarea.value=altText;this.#toggleTitleAndDisclaimer()}#setProgress(){this.#downloadModel.classList.toggle(\"hidden\",false);const callback=async({detail:{finished:finished,total:total,totalLoaded:totalLoaded}})=>{const ONE_MEGA_BYTES=1e6;totalLoaded=Math.min(.99*total,totalLoaded);const totalSize=this.#downloadModelDescription.ariaValueMax=Math.round(total/ONE_MEGA_BYTES);const downloadedSize=this.#downloadModelDescription.ariaValueNow=Math.round(totalLoaded/ONE_MEGA_BYTES);this.#downloadModelDescription.setAttribute(\"data-l10n-args\",JSON.stringify({totalSize:totalSize,downloadedSize:downloadedSize}));if(!finished){return}this.#eventBus._off(\"loadaiengineprogress\",callback);this.#downloadModel.classList.toggle(\"hidden\",true);this.#toggleAI(true);if(!this.#uiManager){return}const{mlManager:mlManager}=this.#uiManager;mlManager.toggleService(\"altText\",true);this.#toggleGuessAltText(await mlManager.isEnabledFor(\"altText\"),true)};this.#eventBus._on(\"loadaiengineprogress\",callback)}async editAltText(uiManager,editor,firstTime){if(this.#currentEditor||!editor){return}if(firstTime&&editor.hasAltTextData()){editor.altTextFinish();return}this.#firstTime=firstTime;let{mlManager:mlManager}=uiManager;let hasAI=!!mlManager;this.#toggleTitleAndDisclaimer();if(mlManager&&!mlManager.isReady(\"altText\")){hasAI=false;if(mlManager.hasProgress){this.#setProgress()}else{mlManager=null}}else{this.#downloadModel.classList.toggle(\"hidden\",true)}const isAltTextEnabledPromise=mlManager?.isEnabledFor(\"altText\");this.#currentEditor=editor;this.#uiManager=uiManager;this.#uiManager.removeEditListeners();({altText:this.#previousAltText}=editor.altTextData);this.#textarea.value=this.#previousAltText??\"\";const AI_MAX_IMAGE_DIMENSION=224;const MAX_PREVIEW_DIMENSION=180;let canvas,width,height;if(mlManager){({canvas:canvas,width:width,height:height,imageData:this.#imageData}=editor.copyCanvas(AI_MAX_IMAGE_DIMENSION,MAX_PREVIEW_DIMENSION,true));if(hasAI){this.#toggleGuessAltText(await isAltTextEnabledPromise,true)}}else{({canvas:canvas,width:width,height:height}=editor.copyCanvas(AI_MAX_IMAGE_DIMENSION,MAX_PREVIEW_DIMENSION,false))}canvas.setAttribute(\"role\",\"presentation\");const{style:style}=canvas;style.width=`${width}px`;style.height=`${height}px`;this.#imagePreview.append(canvas);this.#toggleNotNow();this.#toggleAI(hasAI);this.#toggleError(false);try{await this.#overlayManager.open(this.#dialog)}catch(ex){this.#close();throw ex}}#cancel(){this.#currentEditor.altTextData={cancel:true};const altText=this.#textarea.value.trim();this.#currentEditor._reportTelemetry({action:\"pdfjs.image.alt_text.dismiss\",data:{alt_text_type:altText?\"present\":\"empty\",flow:this.#firstTime?\"image_add\":\"alt_text_edit\"}});this.#currentEditor._reportTelemetry({action:\"pdfjs.image.image_added\",data:{alt_text_modal:true,alt_text_type:\"skipped\"}});this.#finish()}#finish(){this.#overlayManager.closeIfActive(this.#dialog)}#close(){const canvas=this.#imagePreview.firstChild;canvas.remove();canvas.width=canvas.height=0;this.#imageData=null;this.#toggleLoading(false);this.#uiManager?.addEditListeners();this.#currentEditor.altTextFinish();this.#uiManager?.setSelected(this.#currentEditor);this.#currentEditor=null;this.#uiManager=null}#extractWords(text){return new Set(text.toLowerCase().split(/[^\\p{L}\\p{N}]+/gu).filter((x=>!!x)))}#save(){const altText=this.#textarea.value.trim();this.#currentEditor.altTextData={altText:altText,decorative:false};this.#currentEditor.altTextData.guessedAltText=this.#guessedAltText;if(this.#guessedAltText&&this.#guessedAltText!==altText){const guessedWords=this.#extractWords(this.#guessedAltText);const words=this.#extractWords(altText);this.#currentEditor._reportTelemetry({action:\"pdfjs.image.alt_text.user_edit\",data:{total_words:guessedWords.size,words_removed:guessedWords.difference(words).size,words_added:words.difference(guessedWords).size}})}this.#currentEditor._reportTelemetry({action:\"pdfjs.image.image_added\",data:{alt_text_modal:true,alt_text_type:altText?\"present\":\"empty\"}});this.#currentEditor._reportTelemetry({action:\"pdfjs.image.alt_text.save\",data:{alt_text_type:altText?\"present\":\"empty\",flow:this.#firstTime?\"image_add\":\"alt_text_edit\"}});this.#finish()}destroy(){this.#uiManager=null;this.#finish()}}class ImageAltTextSettings{#aiModelSettings;#createModelButton;#downloadModelButton;#dialog;#eventBus;#mlManager;#overlayManager;#showAltTextDialogButton;constructor({dialog:dialog,createModelButton:createModelButton,aiModelSettings:aiModelSettings,learnMore:learnMore,closeButton:closeButton,deleteModelButton:deleteModelButton,downloadModelButton:downloadModelButton,showAltTextDialogButton:showAltTextDialogButton},overlayManager,eventBus,mlManager){this.#dialog=dialog;this.#aiModelSettings=aiModelSettings;this.#createModelButton=createModelButton;this.#downloadModelButton=downloadModelButton;this.#showAltTextDialogButton=showAltTextDialogButton;this.#overlayManager=overlayManager;this.#eventBus=eventBus;this.#mlManager=mlManager;const{altTextLearnMoreUrl:altTextLearnMoreUrl}=mlManager;if(altTextLearnMoreUrl){learnMore.href=altTextLearnMoreUrl}dialog.addEventListener(\"contextmenu\",noContextMenu);createModelButton.addEventListener(\"click\",(async e=>{const checked=this.#togglePref(\"enableGuessAltText\",e);await mlManager.toggleService(\"altText\",checked);this.#reportTelemetry({type:\"stamp\",action:\"pdfjs.image.alt_text.settings_ai_generation_check\",data:{status:checked}})}));showAltTextDialogButton.addEventListener(\"click\",(e=>{const checked=this.#togglePref(\"enableNewAltTextWhenAddingImage\",e);this.#reportTelemetry({type:\"stamp\",action:\"pdfjs.image.alt_text.settings_edit_alt_text_check\",data:{status:checked}})}));deleteModelButton.addEventListener(\"click\",this.#delete.bind(this,true));downloadModelButton.addEventListener(\"click\",this.#download.bind(this,true));closeButton.addEventListener(\"click\",this.#finish.bind(this));learnMore.addEventListener(\"click\",(()=>{this.#reportTelemetry({type:\"stamp\",action:\"pdfjs.image.alt_text.info\",data:{topic:\"ai_generation\"}})}));eventBus._on(\"enablealttextmodeldownload\",(({value:value})=>{if(value){this.#download(false)}else{this.#delete(false)}}));this.#overlayManager.register(dialog)}#reportTelemetry(data){this.#eventBus.dispatch(\"reporttelemetry\",{source:this,details:{type:\"editing\",data:data}})}async#download(isFromUI=false){if(isFromUI){this.#downloadModelButton.disabled=true;const span=this.#downloadModelButton.firstChild;span.setAttribute(\"data-l10n-id\",\"pdfjs-editor-alt-text-settings-downloading-model-button\");await this.#mlManager.downloadModel(\"altText\");span.setAttribute(\"data-l10n-id\",\"pdfjs-editor-alt-text-settings-download-model-button\");this.#createModelButton.disabled=false;this.#setPref(\"enableGuessAltText\",true);this.#mlManager.toggleService(\"altText\",true);this.#setPref(\"enableAltTextModelDownload\",true);this.#downloadModelButton.disabled=false}this.#aiModelSettings.classList.toggle(\"download\",false);this.#createModelButton.setAttribute(\"aria-pressed\",true)}async#delete(isFromUI=false){if(isFromUI){await this.#mlManager.deleteModel(\"altText\");this.#setPref(\"enableGuessAltText\",false);this.#setPref(\"enableAltTextModelDownload\",false)}this.#aiModelSettings.classList.toggle(\"download\",true);this.#createModelButton.disabled=true;this.#createModelButton.setAttribute(\"aria-pressed\",false)}async open({enableGuessAltText:enableGuessAltText,enableNewAltTextWhenAddingImage:enableNewAltTextWhenAddingImage}){const{enableAltTextModelDownload:enableAltTextModelDownload}=this.#mlManager;this.#createModelButton.disabled=!enableAltTextModelDownload;this.#createModelButton.setAttribute(\"aria-pressed\",enableAltTextModelDownload&&enableGuessAltText);this.#showAltTextDialogButton.setAttribute(\"aria-pressed\",enableNewAltTextWhenAddingImage);this.#aiModelSettings.classList.toggle(\"download\",!enableAltTextModelDownload);await this.#overlayManager.open(this.#dialog);this.#reportTelemetry({type:\"stamp\",action:\"pdfjs.image.alt_text.settings_displayed\"})}#togglePref(name,{target:target}){const checked=target.getAttribute(\"aria-pressed\")!==\"true\";this.#setPref(name,checked);target.setAttribute(\"aria-pressed\",checked);return checked}#setPref(name,value){this.#eventBus.dispatch(\"setpreference\",{source:this,name:name,value:value})}#finish(){this.#overlayManager.closeIfActive(this.#dialog)}}class AltTextManager{#clickAC=null;#currentEditor=null;#cancelButton;#dialog;#eventBus;#hasUsedPointer=false;#optionDescription;#optionDecorative;#overlayManager;#saveButton;#textarea;#uiManager;#previousAltText=null;#resizeAC=null;#svgElement=null;#rectElement=null;#container;#telemetryData=null;constructor({dialog:dialog,optionDescription:optionDescription,optionDecorative:optionDecorative,textarea:textarea,cancelButton:cancelButton,saveButton:saveButton},container,overlayManager,eventBus){this.#dialog=dialog;this.#optionDescription=optionDescription;this.#optionDecorative=optionDecorative;this.#textarea=textarea;this.#cancelButton=cancelButton;this.#saveButton=saveButton;this.#overlayManager=overlayManager;this.#eventBus=eventBus;this.#container=container;const onUpdateUIState=this.#updateUIState.bind(this);dialog.addEventListener(\"close\",this.#close.bind(this));dialog.addEventListener(\"contextmenu\",(event=>{if(event.target!==this.#textarea){event.preventDefault()}}));cancelButton.addEventListener(\"click\",this.#finish.bind(this));saveButton.addEventListener(\"click\",this.#save.bind(this));optionDescription.addEventListener(\"change\",onUpdateUIState);optionDecorative.addEventListener(\"change\",onUpdateUIState);this.#overlayManager.register(dialog)}#createSVGElement(){if(this.#svgElement){return}const svgFactory=new DOMSVGFactory;const svg=this.#svgElement=svgFactory.createElement(\"svg\");svg.setAttribute(\"width\",\"0\");svg.setAttribute(\"height\",\"0\");const defs=svgFactory.createElement(\"defs\");svg.append(defs);const mask=svgFactory.createElement(\"mask\");defs.append(mask);mask.setAttribute(\"id\",\"alttext-manager-mask\");mask.setAttribute(\"maskContentUnits\",\"objectBoundingBox\");let rect=svgFactory.createElement(\"rect\");mask.append(rect);rect.setAttribute(\"fill\",\"white\");rect.setAttribute(\"width\",\"1\");rect.setAttribute(\"height\",\"1\");rect.setAttribute(\"x\",\"0\");rect.setAttribute(\"y\",\"0\");rect=this.#rectElement=svgFactory.createElement(\"rect\");mask.append(rect);rect.setAttribute(\"fill\",\"black\");this.#dialog.append(svg)}async editAltText(uiManager,editor){if(this.#currentEditor||!editor){return}this.#createSVGElement();this.#hasUsedPointer=false;this.#clickAC=new AbortController;const clickOpts={signal:this.#clickAC.signal},onClick=this.#onClick.bind(this);for(const element of[this.#optionDescription,this.#optionDecorative,this.#textarea,this.#saveButton,this.#cancelButton]){element.addEventListener(\"click\",onClick,clickOpts)}const{altText:altText,decorative:decorative}=editor.altTextData;if(decorative===true){this.#optionDecorative.checked=true;this.#optionDescription.checked=false}else{this.#optionDecorative.checked=false;this.#optionDescription.checked=true}this.#previousAltText=this.#textarea.value=altText?.trim()||\"\";this.#updateUIState();this.#currentEditor=editor;this.#uiManager=uiManager;this.#uiManager.removeEditListeners();this.#resizeAC=new AbortController;this.#eventBus._on(\"resize\",this.#setPosition.bind(this),{signal:this.#resizeAC.signal});try{await this.#overlayManager.open(this.#dialog);this.#setPosition()}catch(ex){this.#close();throw ex}}#setPosition(){if(!this.#currentEditor){return}const dialog=this.#dialog;const{style:style}=dialog;const{x:containerX,y:containerY,width:containerW,height:containerH}=this.#container.getBoundingClientRect();const{innerWidth:windowW,innerHeight:windowH}=window;const{width:dialogW,height:dialogH}=dialog.getBoundingClientRect();const{x:x,y:y,width:width,height:height}=this.#currentEditor.getClientDimensions();const MARGIN=10;const isLTR=this.#uiManager.direction===\"ltr\";const xs=Math.max(x,containerX);const xe=Math.min(x+width,containerX+containerW);const ys=Math.max(y,containerY);const ye=Math.min(y+height,containerY+containerH);this.#rectElement.setAttribute(\"width\",`${(xe-xs)/windowW}`);this.#rectElement.setAttribute(\"height\",`${(ye-ys)/windowH}`);this.#rectElement.setAttribute(\"x\",`${xs/windowW}`);this.#rectElement.setAttribute(\"y\",`${ys/windowH}`);let left=null;let top=Math.max(y,0);top+=Math.min(windowH-(top+dialogH),0);if(isLTR){if(x+width+MARGIN+dialogW<windowW){left=x+width+MARGIN}else if(x>dialogW+MARGIN){left=x-dialogW-MARGIN}}else if(x>dialogW+MARGIN){left=x-dialogW-MARGIN}else if(x+width+MARGIN+dialogW<windowW){left=x+width+MARGIN}if(left===null){top=null;left=Math.max(x,0);left+=Math.min(windowW-(left+dialogW),0);if(y>dialogH+MARGIN){top=y-dialogH-MARGIN}else if(y+height+MARGIN+dialogH<windowH){top=y+height+MARGIN}}if(top!==null){dialog.classList.add(\"positioned\");if(isLTR){style.left=`${left}px`}else{style.right=`${windowW-left-dialogW}px`}style.top=`${top}px`}else{dialog.classList.remove(\"positioned\");style.left=\"\";style.top=\"\"}}#finish(){this.#overlayManager.closeIfActive(this.#dialog)}#close(){this.#currentEditor._reportTelemetry(this.#telemetryData||{action:\"alt_text_cancel\",alt_text_keyboard:!this.#hasUsedPointer});this.#telemetryData=null;this.#removeOnClickListeners();this.#uiManager?.addEditListeners();this.#resizeAC?.abort();this.#resizeAC=null;this.#currentEditor.altTextFinish();this.#currentEditor=null;this.#uiManager=null}#updateUIState(){this.#textarea.disabled=this.#optionDecorative.checked}#save(){const altText=this.#textarea.value.trim();const decorative=this.#optionDecorative.checked;this.#currentEditor.altTextData={altText:altText,decorative:decorative};this.#telemetryData={action:\"alt_text_save\",alt_text_description:!!altText,alt_text_edit:!!this.#previousAltText&&this.#previousAltText!==altText,alt_text_decorative:decorative,alt_text_keyboard:!this.#hasUsedPointer};this.#finish()}#onClick(evt){if(evt.detail===0){return}this.#hasUsedPointer=true;this.#removeOnClickListeners()}#removeOnClickListeners(){this.#clickAC?.abort();this.#clickAC=null}destroy(){this.#uiManager=null;this.#finish();this.#svgElement?.remove();this.#svgElement=this.#rectElement=null}}class AnnotationEditorParams{constructor(options,eventBus){this.eventBus=eventBus;this.#bindListeners(options)}#bindListeners({editorFreeTextFontSize:editorFreeTextFontSize,editorFreeTextColor:editorFreeTextColor,editorInkColor:editorInkColor,editorInkThickness:editorInkThickness,editorInkOpacity:editorInkOpacity,editorStampAddImage:editorStampAddImage,editorFreeHighlightThickness:editorFreeHighlightThickness,editorHighlightShowAll:editorHighlightShowAll,editorSignatureAddSignature:editorSignatureAddSignature}){const{eventBus:eventBus}=this;const dispatchEvent=(typeStr,value)=>{eventBus.dispatch(\"switchannotationeditorparams\",{source:this,type:AnnotationEditorParamsType[typeStr],value:value})};editorFreeTextFontSize.addEventListener(\"input\",(function(){dispatchEvent(\"FREETEXT_SIZE\",this.valueAsNumber)}));editorFreeTextColor.addEventListener(\"input\",(function(){dispatchEvent(\"FREETEXT_COLOR\",this.value)}));editorInkColor.addEventListener(\"input\",(function(){dispatchEvent(\"INK_COLOR\",this.value)}));editorInkThickness.addEventListener(\"input\",(function(){dispatchEvent(\"INK_THICKNESS\",this.valueAsNumber)}));editorInkOpacity.addEventListener(\"input\",(function(){dispatchEvent(\"INK_OPACITY\",this.valueAsNumber)}));editorStampAddImage.addEventListener(\"click\",(()=>{eventBus.dispatch(\"reporttelemetry\",{source:this,details:{type:\"editing\",data:{action:\"pdfjs.image.add_image_click\"}}});dispatchEvent(\"CREATE\")}));editorFreeHighlightThickness.addEventListener(\"input\",(function(){dispatchEvent(\"HIGHLIGHT_THICKNESS\",this.valueAsNumber)}));editorHighlightShowAll.addEventListener(\"click\",(function(){const checked=this.getAttribute(\"aria-pressed\")===\"true\";this.setAttribute(\"aria-pressed\",!checked);dispatchEvent(\"HIGHLIGHT_SHOW_ALL\",!checked)}));editorSignatureAddSignature.addEventListener(\"click\",(()=>{dispatchEvent(\"CREATE\")}));eventBus._on(\"annotationeditorparamschanged\",(evt=>{for(const[type,value]of evt.details){switch(type){case AnnotationEditorParamsType.FREETEXT_SIZE:editorFreeTextFontSize.value=value;break;case AnnotationEditorParamsType.FREETEXT_COLOR:editorFreeTextColor.value=value;break;case AnnotationEditorParamsType.INK_COLOR:editorInkColor.value=value;break;case AnnotationEditorParamsType.INK_THICKNESS:editorInkThickness.value=value;break;case AnnotationEditorParamsType.INK_OPACITY:editorInkOpacity.value=value;break;case AnnotationEditorParamsType.HIGHLIGHT_DEFAULT_COLOR:eventBus.dispatch(\"mainhighlightcolorpickerupdatecolor\",{source:this,value:value});break;case AnnotationEditorParamsType.HIGHLIGHT_THICKNESS:editorFreeHighlightThickness.value=value;break;case AnnotationEditorParamsType.HIGHLIGHT_FREE:editorFreeHighlightThickness.disabled=!value;break;case AnnotationEditorParamsType.HIGHLIGHT_SHOW_ALL:editorHighlightShowAll.setAttribute(\"aria-pressed\",value);break}}}))}}const PRECISION=.1;class CaretBrowsingMode{#mainContainer;#toolBarHeight=0;#viewerContainer;constructor(abortSignal,mainContainer,viewerContainer,toolbarContainer){this.#mainContainer=mainContainer;this.#viewerContainer=viewerContainer;if(!toolbarContainer){return}this.#toolBarHeight=toolbarContainer.getBoundingClientRect().height;const toolbarObserver=new ResizeObserver((entries=>{for(const entry of entries){if(entry.target===toolbarContainer){this.#toolBarHeight=Math.floor(entry.borderBoxSize[0].blockSize);break}}}));toolbarObserver.observe(toolbarContainer);abortSignal.addEventListener(\"abort\",(()=>toolbarObserver.disconnect()),{once:true})}#isOnSameLine(rect1,rect2){const top1=rect1.y;const bot1=rect1.bottom;const mid1=rect1.y+rect1.height/2;const top2=rect2.y;const bot2=rect2.bottom;const mid2=rect2.y+rect2.height/2;return top1<=mid2&&mid2<=bot1||top2<=mid1&&mid1<=bot2}#isUnderOver(rect,x,y,isUp){const midY=rect.y+rect.height/2;return(isUp?y>=midY:y<=midY)&&rect.x-PRECISION<=x&&x<=rect.right+PRECISION}#isVisible(rect){return rect.top>=this.#toolBarHeight&&rect.left>=0&&rect.bottom<=(window.innerHeight||document.documentElement.clientHeight)&&rect.right<=(window.innerWidth||document.documentElement.clientWidth)}#getCaretPosition(selection,isUp){const{focusNode:focusNode,focusOffset:focusOffset}=selection;const range=document.createRange();range.setStart(focusNode,focusOffset);range.setEnd(focusNode,focusOffset);const rect=range.getBoundingClientRect();return[rect.x,isUp?rect.top:rect.bottom]}static#caretPositionFromPoint(x,y){if(!document.caretPositionFromPoint){const{startContainer:offsetNode,startOffset:offset}=document.caretRangeFromPoint(x,y);return{offsetNode:offsetNode,offset:offset}}return document.caretPositionFromPoint(x,y)}#setCaretPositionHelper(selection,caretX,select,element,rect){rect||=element.getBoundingClientRect();if(caretX<=rect.x+PRECISION){if(select){selection.extend(element.firstChild,0)}else{selection.setPosition(element.firstChild,0)}return}if(rect.right-PRECISION<=caretX){const{lastChild:lastChild}=element;if(select){selection.extend(lastChild,lastChild.length)}else{selection.setPosition(lastChild,lastChild.length)}return}const midY=rect.y+rect.height/2;let caretPosition=CaretBrowsingMode.#caretPositionFromPoint(caretX,midY);let parentElement=caretPosition.offsetNode?.parentElement;if(parentElement&&parentElement!==element){const elementsAtPoint=document.elementsFromPoint(caretX,midY);const savedVisibilities=[];for(const el of elementsAtPoint){if(el===element){break}const{style:style}=el;savedVisibilities.push([el,style.visibility]);style.visibility=\"hidden\"}caretPosition=CaretBrowsingMode.#caretPositionFromPoint(caretX,midY);parentElement=caretPosition.offsetNode?.parentElement;for(const[el,visibility]of savedVisibilities){el.style.visibility=visibility}}if(parentElement!==element){if(select){selection.extend(element.firstChild,0)}else{selection.setPosition(element.firstChild,0)}return}if(select){selection.extend(caretPosition.offsetNode,caretPosition.offset)}else{selection.setPosition(caretPosition.offsetNode,caretPosition.offset)}}#setCaretPosition(select,selection,newLineElement,newLineElementRect,caretX){if(this.#isVisible(newLineElementRect)){this.#setCaretPositionHelper(selection,caretX,select,newLineElement,newLineElementRect);return}this.#mainContainer.addEventListener(\"scrollend\",this.#setCaretPositionHelper.bind(this,selection,caretX,select,newLineElement,null),{once:true});newLineElement.scrollIntoView()}#getNodeOnNextPage(textLayer,isUp){while(true){const page=textLayer.closest(\".page\");const pageNumber=parseInt(page.getAttribute(\"data-page-number\"));const nextPage=isUp?pageNumber-1:pageNumber+1;textLayer=this.#viewerContainer.querySelector(`.page[data-page-number=\"${nextPage}\"] .textLayer`);if(!textLayer){return null}const walker=document.createTreeWalker(textLayer,NodeFilter.SHOW_TEXT);const node=isUp?walker.lastChild():walker.firstChild();if(node){return node}}}moveCaret(isUp,select){const selection=document.getSelection();if(selection.rangeCount===0){return}const{focusNode:focusNode}=selection;const focusElement=focusNode.nodeType!==Node.ELEMENT_NODE?focusNode.parentElement:focusNode;const root=focusElement.closest(\".textLayer\");if(!root){return}const walker=document.createTreeWalker(root,NodeFilter.SHOW_TEXT);walker.currentNode=focusNode;const focusRect=focusElement.getBoundingClientRect();let newLineElement=null;const nodeIterator=(isUp?walker.previousSibling:walker.nextSibling).bind(walker);while(nodeIterator()){const element=walker.currentNode.parentElement;if(!this.#isOnSameLine(focusRect,element.getBoundingClientRect())){newLineElement=element;break}}if(!newLineElement){const node=this.#getNodeOnNextPage(root,isUp);if(!node){return}if(select){const lastNode=(isUp?walker.firstChild():walker.lastChild())||focusNode;selection.extend(lastNode,isUp?0:lastNode.length);const range=document.createRange();range.setStart(node,isUp?node.length:0);range.setEnd(node,isUp?node.length:0);selection.addRange(range);return}const[caretX]=this.#getCaretPosition(selection,isUp);const{parentElement:parentElement}=node;this.#setCaretPosition(select,selection,parentElement,parentElement.getBoundingClientRect(),caretX);return}const[caretX,caretY]=this.#getCaretPosition(selection,isUp);const newLineElementRect=newLineElement.getBoundingClientRect();if(this.#isUnderOver(newLineElementRect,caretX,caretY,isUp)){this.#setCaretPosition(select,selection,newLineElement,newLineElementRect,caretX);return}while(nodeIterator()){const element=walker.currentNode.parentElement;const elementRect=element.getBoundingClientRect();if(!this.#isOnSameLine(newLineElementRect,elementRect)){break}if(this.#isUnderOver(elementRect,caretX,caretY,isUp)){this.#setCaretPosition(select,selection,element,elementRect,caretX);return}}this.#setCaretPosition(select,selection,newLineElement,newLineElementRect,caretX)}}function download(blobUrl,filename){const a=document.createElement(\"a\");if(!a.click){throw new Error('DownloadManager: \"a.click()\" is not supported.')}a.href=blobUrl;a.target=\"_parent\";if(\"download\"in a){a.download=filename}(document.body||document.documentElement).append(a);a.click();a.remove()}class DownloadManager{#openBlobUrls=new WeakMap;downloadData(data,filename,contentType){const blobUrl=URL.createObjectURL(new Blob([data],{type:contentType}));download(blobUrl,filename)}openOrDownloadData(data,filename,dest=null){const isPdfData=isPdfFile(filename);const contentType=isPdfData?\"application/pdf\":\"\";if(isPdfData){let blobUrl=this.#openBlobUrls.get(data);if(!blobUrl){blobUrl=URL.createObjectURL(new Blob([data],{type:contentType}));this.#openBlobUrls.set(data,blobUrl)}let viewerUrl;viewerUrl=\"?file=\"+encodeURIComponent(blobUrl+\"#\"+filename);if(dest){viewerUrl+=`#${escape(dest)}`}try{window.open(viewerUrl);return true}catch(ex){console.error(\"openOrDownloadData:\",ex);URL.revokeObjectURL(blobUrl);this.#openBlobUrls.delete(data)}}this.downloadData(data,filename,contentType);return false}download(data,url,filename){let blobUrl;if(data){blobUrl=URL.createObjectURL(new Blob([data],{type:\"application/pdf\"}))}else{if(!createValidAbsoluteUrl(url,\"http://example.com\")){console.error(`download - not a valid URL: ${url}`);return}blobUrl=url+\"#pdfjs.action=download\"}download(blobUrl,filename)}}class EditorUndoBar{#closeButton=null;#container;#eventBus=null;#focusTimeout=null;#initController=null;isOpen=false;#message;#showController=null;#undoButton;static#l10nMessages=Object.freeze({highlight:\"pdfjs-editor-undo-bar-message-highlight\",freetext:\"pdfjs-editor-undo-bar-message-freetext\",stamp:\"pdfjs-editor-undo-bar-message-stamp\",ink:\"pdfjs-editor-undo-bar-message-ink\",signature:\"pdfjs-editor-undo-bar-message-signature\",_multiple:\"pdfjs-editor-undo-bar-message-multiple\"});constructor({container:container,message:message,undoButton:undoButton,closeButton:closeButton},eventBus){this.#container=container;this.#message=message;this.#undoButton=undoButton;this.#closeButton=closeButton;this.#eventBus=eventBus}destroy(){this.#initController?.abort();this.#initController=null;this.hide()}show(undoAction,messageData){if(!this.#initController){this.#initController=new AbortController;const opts={signal:this.#initController.signal};const boundHide=this.hide.bind(this);this.#container.addEventListener(\"contextmenu\",noContextMenu,opts);this.#closeButton.addEventListener(\"click\",boundHide,opts);this.#eventBus._on(\"beforeprint\",boundHide,opts);this.#eventBus._on(\"download\",boundHide,opts)}this.hide();if(typeof messageData===\"string\"){this.#message.setAttribute(\"data-l10n-id\",EditorUndoBar.#l10nMessages[messageData])}else{this.#message.setAttribute(\"data-l10n-id\",EditorUndoBar.#l10nMessages._multiple);this.#message.setAttribute(\"data-l10n-args\",JSON.stringify({count:messageData}))}this.isOpen=true;this.#container.hidden=false;this.#showController=new AbortController;this.#undoButton.addEventListener(\"click\",(()=>{undoAction();this.hide()}),{signal:this.#showController.signal});this.#focusTimeout=setTimeout((()=>{this.#container.focus();this.#focusTimeout=null}),100)}hide(){if(!this.isOpen){return}this.isOpen=false;this.#container.hidden=true;this.#showController?.abort();this.#showController=null;if(this.#focusTimeout){clearTimeout(this.#focusTimeout);this.#focusTimeout=null}}}class OverlayManager{#overlays=new WeakMap;#active=null;get active(){return this.#active}async register(dialog,canForceClose=false){if(typeof dialog!==\"object\"){throw new Error(\"Not enough parameters.\")}else if(this.#overlays.has(dialog)){throw new Error(\"The overlay is already registered.\")}this.#overlays.set(dialog,{canForceClose:canForceClose});dialog.addEventListener(\"cancel\",(({target:target})=>{if(this.#active===target){this.#active=null}}))}async open(dialog){if(!this.#overlays.has(dialog)){throw new Error(\"The overlay does not exist.\")}else if(this.#active){if(this.#active===dialog){throw new Error(\"The overlay is already active.\")}else if(this.#overlays.get(dialog).canForceClose){await this.close()}else{throw new Error(\"Another overlay is currently active.\")}}this.#active=dialog;dialog.showModal()}async close(dialog=this.#active){if(!this.#overlays.has(dialog)){throw new Error(\"The overlay does not exist.\")}else if(!this.#active){throw new Error(\"The overlay is currently not active.\")}else if(this.#active!==dialog){throw new Error(\"Another overlay is currently active.\")}dialog.close();this.#active=null}async closeIfActive(dialog){if(this.#active===dialog){await this.close(dialog)}}}class PasswordPrompt{#activeCapability=null;#updateCallback=null;#reason=null;constructor(options,overlayManager,isViewerEmbedded=false){this.dialog=options.dialog;this.label=options.label;this.input=options.input;this.submitButton=options.submitButton;this.cancelButton=options.cancelButton;this.overlayManager=overlayManager;this._isViewerEmbedded=isViewerEmbedded;this.submitButton.addEventListener(\"click\",this.#verify.bind(this));this.cancelButton.addEventListener(\"click\",this.close.bind(this));this.input.addEventListener(\"keydown\",(e=>{if(e.keyCode===13){this.#verify()}}));this.overlayManager.register(this.dialog,true);this.dialog.addEventListener(\"close\",this.#cancel.bind(this))}async open(){await(this.#activeCapability?.promise);this.#activeCapability=Promise.withResolvers();try{await this.overlayManager.open(this.dialog)}catch(ex){this.#activeCapability.resolve();throw ex}const passwordIncorrect=this.#reason===PasswordResponses.INCORRECT_PASSWORD;if(!this._isViewerEmbedded||passwordIncorrect){this.input.focus()}this.label.setAttribute(\"data-l10n-id\",passwordIncorrect?\"pdfjs-password-invalid\":\"pdfjs-password-label\")}async close(){this.overlayManager.closeIfActive(this.dialog)}#verify(){const password=this.input.value;if(password?.length>0){this.#invokeCallback(password)}}#cancel(){this.#invokeCallback(new Error(\"PasswordPrompt cancelled.\"));this.#activeCapability.resolve()}#invokeCallback(password){if(!this.#updateCallback){return}this.close();this.input.value=\"\";this.#updateCallback(password);this.#updateCallback=null}async setUpdateCallback(updateCallback,reason){if(this.#activeCapability){await this.#activeCapability.promise}this.#updateCallback=updateCallback;this.#reason=reason}}const TREEITEM_OFFSET_TOP=-100;const TREEITEM_SELECTED_CLASS=\"selected\";class BaseTreeViewer{constructor(options){this.container=options.container;this.eventBus=options.eventBus;this._l10n=options.l10n;this.reset()}reset(){this._pdfDocument=null;this._lastToggleIsShow=true;this._currentTreeItem=null;this.container.textContent=\"\";this.container.classList.remove(\"treeWithDeepNesting\")}_dispatchEvent(count){throw new Error(\"Not implemented: _dispatchEvent\")}_bindLink(element,params){throw new Error(\"Not implemented: _bindLink\")}_normalizeTextContent(str){return removeNullCharacters(str,true)||\"–\"}_addToggleButton(div,hidden=false){const toggler=document.createElement(\"div\");toggler.className=\"treeItemToggler\";if(hidden){toggler.classList.add(\"treeItemsHidden\")}toggler.onclick=evt=>{evt.stopPropagation();toggler.classList.toggle(\"treeItemsHidden\");if(evt.shiftKey){const shouldShowAll=!toggler.classList.contains(\"treeItemsHidden\");this._toggleTreeItem(div,shouldShowAll)}};div.prepend(toggler)}_toggleTreeItem(root,show=false){this._l10n.pause();this._lastToggleIsShow=show;for(const toggler of root.querySelectorAll(\".treeItemToggler\")){toggler.classList.toggle(\"treeItemsHidden\",!show)}this._l10n.resume()}_toggleAllTreeItems(){this._toggleTreeItem(this.container,!this._lastToggleIsShow)}_finishRendering(fragment,count,hasAnyNesting=false){if(hasAnyNesting){this.container.classList.add(\"treeWithDeepNesting\");this._lastToggleIsShow=!fragment.querySelector(\".treeItemsHidden\")}this._l10n.pause();this.container.append(fragment);this._l10n.resume();this._dispatchEvent(count)}render(params){throw new Error(\"Not implemented: render\")}_updateCurrentTreeItem(treeItem=null){if(this._currentTreeItem){this._currentTreeItem.classList.remove(TREEITEM_SELECTED_CLASS);this._currentTreeItem=null}if(treeItem){treeItem.classList.add(TREEITEM_SELECTED_CLASS);this._currentTreeItem=treeItem}}_scrollToCurrentTreeItem(treeItem){if(!treeItem){return}this._l10n.pause();let currentNode=treeItem.parentNode;while(currentNode&&currentNode!==this.container){if(currentNode.classList.contains(\"treeItem\")){const toggler=currentNode.firstElementChild;toggler?.classList.remove(\"treeItemsHidden\")}currentNode=currentNode.parentNode}this._l10n.resume();this._updateCurrentTreeItem(treeItem);this.container.scrollTo(treeItem.offsetLeft,treeItem.offsetTop+TREEITEM_OFFSET_TOP)}}class PDFAttachmentViewer extends BaseTreeViewer{constructor(options){super(options);this.downloadManager=options.downloadManager;this.eventBus._on(\"fileattachmentannotation\",this.#appendAttachment.bind(this))}reset(keepRenderedCapability=false){super.reset();this._attachments=null;if(!keepRenderedCapability){this._renderedCapability=Promise.withResolvers()}this._pendingDispatchEvent=false}async _dispatchEvent(attachmentsCount){this._renderedCapability.resolve();if(attachmentsCount===0&&!this._pendingDispatchEvent){this._pendingDispatchEvent=true;await waitOnEventOrTimeout({target:this.eventBus,name:\"annotationlayerrendered\",delay:1e3});if(!this._pendingDispatchEvent){return}}this._pendingDispatchEvent=false;this.eventBus.dispatch(\"attachmentsloaded\",{source:this,attachmentsCount:attachmentsCount})}_bindLink(element,{content:content,description:description,filename:filename}){if(description){element.title=description}element.onclick=()=>{this.downloadManager.openOrDownloadData(content,filename);return false}}render({attachments:attachments,keepRenderedCapability:keepRenderedCapability=false}){if(this._attachments){this.reset(keepRenderedCapability)}this._attachments=attachments||null;if(!attachments){this._dispatchEvent(0);return}const fragment=document.createDocumentFragment();let attachmentsCount=0;for(const name in attachments){const item=attachments[name];const div=document.createElement(\"div\");div.className=\"treeItem\";const element=document.createElement(\"a\");this._bindLink(element,item);element.textContent=this._normalizeTextContent(item.filename);div.append(element);fragment.append(div);attachmentsCount++}this._finishRendering(fragment,attachmentsCount)}#appendAttachment(item){const renderedPromise=this._renderedCapability.promise;renderedPromise.then((()=>{if(renderedPromise!==this._renderedCapability.promise){return}const attachments=this._attachments||Object.create(null);for(const name in attachments){if(item.filename===name){return}}attachments[item.filename]=item;this.render({attachments:attachments,keepRenderedCapability:true})}))}}const CSS_CLASS_GRAB=\"grab-to-pan-grab\";class GrabToPan{#activateAC=null;#mouseDownAC=null;#scrollAC=null;constructor({element:element}){this.element=element;this.document=element.ownerDocument;const overlay=this.overlay=document.createElement(\"div\");overlay.className=\"grab-to-pan-grabbing\"}activate(){if(!this.#activateAC){this.#activateAC=new AbortController;this.element.addEventListener(\"mousedown\",this.#onMouseDown.bind(this),{capture:true,signal:this.#activateAC.signal});this.element.classList.add(CSS_CLASS_GRAB)}}deactivate(){if(this.#activateAC){this.#activateAC.abort();this.#activateAC=null;this.#endPan();this.element.classList.remove(CSS_CLASS_GRAB)}}toggle(){if(this.#activateAC){this.deactivate()}else{this.activate()}}ignoreTarget(node){return node.matches(\"a[href], a[href] *, input, textarea, button, button *, select, option\")}#onMouseDown(event){if(event.button!==0||this.ignoreTarget(event.target)){return}if(event.originalTarget){try{event.originalTarget.tagName}catch{return}}this.scrollLeftStart=this.element.scrollLeft;this.scrollTopStart=this.element.scrollTop;this.clientXStart=event.clientX;this.clientYStart=event.clientY;this.#mouseDownAC=new AbortController;const boundEndPan=this.#endPan.bind(this),mouseOpts={capture:true,signal:this.#mouseDownAC.signal};this.document.addEventListener(\"mousemove\",this.#onMouseMove.bind(this),mouseOpts);this.document.addEventListener(\"mouseup\",boundEndPan,mouseOpts);this.#scrollAC=new AbortController;this.element.addEventListener(\"scroll\",boundEndPan,{capture:true,signal:this.#scrollAC.signal});stopEvent(event);const focusedElement=document.activeElement;if(focusedElement&&!focusedElement.contains(event.target)){focusedElement.blur()}}#onMouseMove(event){this.#scrollAC?.abort();this.#scrollAC=null;if(!(event.buttons&1)){this.#endPan();return}const xDiff=event.clientX-this.clientXStart;const yDiff=event.clientY-this.clientYStart;this.element.scrollTo({top:this.scrollTopStart-yDiff,left:this.scrollLeftStart-xDiff,behavior:\"instant\"});if(!this.overlay.parentNode){document.body.append(this.overlay)}}#endPan(){this.#mouseDownAC?.abort();this.#mouseDownAC=null;this.#scrollAC?.abort();this.#scrollAC=null;this.overlay.remove()}}class PDFCursorTools{#active=CursorTool.SELECT;#prevActive=null;constructor({container:container,eventBus:eventBus,cursorToolOnLoad:cursorToolOnLoad=CursorTool.SELECT}){this.container=container;this.eventBus=eventBus;this.#addEventListeners();Promise.resolve().then((()=>{this.switchTool(cursorToolOnLoad)}))}get activeTool(){return this.#active}switchTool(tool){if(this.#prevActive!==null){return}this.#switchTool(tool)}#switchTool(tool,disabled=false){if(tool===this.#active){if(this.#prevActive!==null){this.eventBus.dispatch(\"cursortoolchanged\",{source:this,tool:tool,disabled:disabled})}return}const disableActiveTool=()=>{switch(this.#active){case CursorTool.SELECT:break;case CursorTool.HAND:this._handTool.deactivate();break;case CursorTool.ZOOM:}};switch(tool){case CursorTool.SELECT:disableActiveTool();break;case CursorTool.HAND:disableActiveTool();this._handTool.activate();break;case CursorTool.ZOOM:default:console.error(`switchTool: \"${tool}\" is an unsupported value.`);return}this.#active=tool;this.eventBus.dispatch(\"cursortoolchanged\",{source:this,tool:tool,disabled:disabled})}#addEventListeners(){this.eventBus._on(\"switchcursortool\",(evt=>{if(!evt.reset){this.switchTool(evt.tool)}else if(this.#prevActive!==null){annotationEditorMode=AnnotationEditorType.NONE;presentationModeState=PresentationModeState.NORMAL;enableActive()}}));let annotationEditorMode=AnnotationEditorType.NONE,presentationModeState=PresentationModeState.NORMAL;const disableActive=()=>{this.#prevActive??=this.#active;this.#switchTool(CursorTool.SELECT,true)};const enableActive=()=>{if(this.#prevActive!==null&&annotationEditorMode===AnnotationEditorType.NONE&&presentationModeState===PresentationModeState.NORMAL){this.#switchTool(this.#prevActive);this.#prevActive=null}};this.eventBus._on(\"annotationeditormodechanged\",(({mode:mode})=>{annotationEditorMode=mode;if(mode===AnnotationEditorType.NONE){enableActive()}else{disableActive()}}));this.eventBus._on(\"presentationmodechanged\",(({state:state})=>{presentationModeState=state;if(state===PresentationModeState.NORMAL){enableActive()}else if(state===PresentationModeState.FULLSCREEN){disableActive()}}))}get _handTool(){return shadow(this,\"_handTool\",new GrabToPan({element:this.container}))}}const NON_METRIC_LOCALES=[\"en-us\",\"en-lr\",\"my\"];const US_PAGE_NAMES={\"8.5x11\":\"pdfjs-document-properties-page-size-name-letter\",\"8.5x14\":\"pdfjs-document-properties-page-size-name-legal\"};const METRIC_PAGE_NAMES={\"297x420\":\"pdfjs-document-properties-page-size-name-a-three\",\"210x297\":\"pdfjs-document-properties-page-size-name-a-four\"};function getPageName(size,isPortrait,pageNames){const width=isPortrait?size.width:size.height;const height=isPortrait?size.height:size.width;return pageNames[`${width}x${height}`]}class PDFDocumentProperties{#fieldData=null;constructor({dialog:dialog,fields:fields,closeButton:closeButton},overlayManager,eventBus,l10n,fileNameLookup){this.dialog=dialog;this.fields=fields;this.overlayManager=overlayManager;this.l10n=l10n;this._fileNameLookup=fileNameLookup;this.#reset();closeButton.addEventListener(\"click\",this.close.bind(this));this.overlayManager.register(this.dialog);eventBus._on(\"pagechanging\",(evt=>{this._currentPageNumber=evt.pageNumber}));eventBus._on(\"rotationchanging\",(evt=>{this._pagesRotation=evt.pagesRotation}))}async open(){await Promise.all([this.overlayManager.open(this.dialog),this._dataAvailableCapability.promise]);const currentPageNumber=this._currentPageNumber;const pagesRotation=this._pagesRotation;if(this.#fieldData&&currentPageNumber===this.#fieldData._currentPageNumber&&pagesRotation===this.#fieldData._pagesRotation){this.#updateUI();return}const[{info:info,contentLength:contentLength},pdfPage]=await Promise.all([this.pdfDocument.getMetadata(),this.pdfDocument.getPage(currentPageNumber)]);const[fileName,fileSize,creationDate,modificationDate,pageSize,isLinearized]=await Promise.all([this._fileNameLookup(),this.#parseFileSize(contentLength),this.#parseDate(info.CreationDate),this.#parseDate(info.ModDate),this.#parsePageSize(getPageSizeInches(pdfPage),pagesRotation),this.#parseLinearization(info.IsLinearized)]);this.#fieldData=Object.freeze({fileName:fileName,fileSize:fileSize,title:info.Title,author:info.Author,subject:info.Subject,keywords:info.Keywords,creationDate:creationDate,modificationDate:modificationDate,creator:info.Creator,producer:info.Producer,version:info.PDFFormatVersion,pageCount:this.pdfDocument.numPages,pageSize:pageSize,linearized:isLinearized,_currentPageNumber:currentPageNumber,_pagesRotation:pagesRotation});this.#updateUI();const{length:length}=await this.pdfDocument.getDownloadInfo();if(contentLength===length){return}const data=Object.assign(Object.create(null),this.#fieldData);data.fileSize=await this.#parseFileSize(length);this.#fieldData=Object.freeze(data);this.#updateUI()}async close(){this.overlayManager.close(this.dialog)}setDocument(pdfDocument){if(this.pdfDocument){this.#reset();this.#updateUI()}if(!pdfDocument){return}this.pdfDocument=pdfDocument;this._dataAvailableCapability.resolve()}#reset(){this.pdfDocument=null;this.#fieldData=null;this._dataAvailableCapability=Promise.withResolvers();this._currentPageNumber=1;this._pagesRotation=0}#updateUI(){if(this.#fieldData&&this.overlayManager.active!==this.dialog){return}for(const id in this.fields){const content=this.#fieldData?.[id];this.fields[id].textContent=content||content===0?content:\"-\"}}async#parseFileSize(b=0){const kb=b/1024,mb=kb/1024;return kb?this.l10n.get(mb>=1?\"pdfjs-document-properties-size-mb\":\"pdfjs-document-properties-size-kb\",{mb:mb,kb:kb,b:b}):undefined}async#parsePageSize(pageSizeInches,pagesRotation){if(!pageSizeInches){return undefined}if(pagesRotation%180!==0){pageSizeInches={width:pageSizeInches.height,height:pageSizeInches.width}}const isPortrait=isPortraitOrientation(pageSizeInches),nonMetric=NON_METRIC_LOCALES.includes(this.l10n.getLanguage());let sizeInches={width:Math.round(pageSizeInches.width*100)/100,height:Math.round(pageSizeInches.height*100)/100};let sizeMillimeters={width:Math.round(pageSizeInches.width*25.4*10)/10,height:Math.round(pageSizeInches.height*25.4*10)/10};let nameId=getPageName(sizeInches,isPortrait,US_PAGE_NAMES)||getPageName(sizeMillimeters,isPortrait,METRIC_PAGE_NAMES);if(!nameId&&!(Number.isInteger(sizeMillimeters.width)&&Number.isInteger(sizeMillimeters.height))){const exactMillimeters={width:pageSizeInches.width*25.4,height:pageSizeInches.height*25.4};const intMillimeters={width:Math.round(sizeMillimeters.width),height:Math.round(sizeMillimeters.height)};if(Math.abs(exactMillimeters.width-intMillimeters.width)<.1&&Math.abs(exactMillimeters.height-intMillimeters.height)<.1){nameId=getPageName(intMillimeters,isPortrait,METRIC_PAGE_NAMES);if(nameId){sizeInches={width:Math.round(intMillimeters.width/25.4*100)/100,height:Math.round(intMillimeters.height/25.4*100)/100};sizeMillimeters=intMillimeters}}}const[{width:width,height:height},unit,name,orientation]=await Promise.all([nonMetric?sizeInches:sizeMillimeters,this.l10n.get(nonMetric?\"pdfjs-document-properties-page-size-unit-inches\":\"pdfjs-document-properties-page-size-unit-millimeters\"),nameId&&this.l10n.get(nameId),this.l10n.get(isPortrait?\"pdfjs-document-properties-page-size-orientation-portrait\":\"pdfjs-document-properties-page-size-orientation-landscape\")]);return this.l10n.get(name?\"pdfjs-document-properties-page-size-dimension-name-string\":\"pdfjs-document-properties-page-size-dimension-string\",{width:width,height:height,unit:unit,name:name,orientation:orientation})}async#parseDate(inputDate){const dateObj=PDFDateString.toDateObject(inputDate);return dateObj?this.l10n.get(\"pdfjs-document-properties-date-time-string\",{dateObj:dateObj.valueOf()}):undefined}#parseLinearization(isLinearized){return this.l10n.get(isLinearized?\"pdfjs-document-properties-linearized-yes\":\"pdfjs-document-properties-linearized-no\")}}const CharacterType={SPACE:0,ALPHA_LETTER:1,PUNCT:2,HAN_LETTER:3,KATAKANA_LETTER:4,HIRAGANA_LETTER:5,HALFWIDTH_KATAKANA_LETTER:6,THAI_LETTER:7};function isAlphabeticalScript(charCode){return charCode<11904}function isAscii(charCode){return(charCode&65408)===0}function isAsciiAlpha(charCode){return charCode>=97&&charCode<=122||charCode>=65&&charCode<=90}function isAsciiDigit(charCode){return charCode>=48&&charCode<=57}function isAsciiSpace(charCode){return charCode===32||charCode===9||charCode===13||charCode===10}function isHan(charCode){return charCode>=13312&&charCode<=40959||charCode>=63744&&charCode<=64255}function isKatakana(charCode){return charCode>=12448&&charCode<=12543}function isHiragana(charCode){return charCode>=12352&&charCode<=12447}function isHalfwidthKatakana(charCode){return charCode>=65376&&charCode<=65439}function isThai(charCode){return(charCode&65408)===3584}function getCharacterType(charCode){if(isAlphabeticalScript(charCode)){if(isAscii(charCode)){if(isAsciiSpace(charCode)){return CharacterType.SPACE}else if(isAsciiAlpha(charCode)||isAsciiDigit(charCode)||charCode===95){return CharacterType.ALPHA_LETTER}return CharacterType.PUNCT}else if(isThai(charCode)){return CharacterType.THAI_LETTER}else if(charCode===160){return CharacterType.SPACE}return CharacterType.ALPHA_LETTER}if(isHan(charCode)){return CharacterType.HAN_LETTER}else if(isKatakana(charCode)){return CharacterType.KATAKANA_LETTER}else if(isHiragana(charCode)){return CharacterType.HIRAGANA_LETTER}else if(isHalfwidthKatakana(charCode)){return CharacterType.HALFWIDTH_KATAKANA_LETTER}return CharacterType.ALPHA_LETTER}let NormalizeWithNFKC;function getNormalizeWithNFKC(){NormalizeWithNFKC||=` ¨ª¯²-µ¸-º¼-¾Ĳ-ĳĿ-ŀŉſǄ-ǌǱ-ǳʰ-ʸ˘-˝ˠ-ˤʹͺ;΄-΅·ϐ-ϖϰ-ϲϴ-ϵϹևٵ-ٸक़-य़ড়-ঢ়য়ਲ਼ਸ਼ਖ਼-ਜ਼ਫ਼ଡ଼-ଢ଼ำຳໜ-ໝ༌གྷཌྷདྷབྷཛྷཀྵჼᴬ-ᴮᴰ-ᴺᴼ-ᵍᵏ-ᵪᵸᶛ-ᶿẚ-ẛάέήίόύώΆ᾽-῁ΈΉ῍-῏ΐΊ῝-῟ΰΎ῭-`ΌΏ´-῾ - ‑‗․-… ″-‴‶-‷‼‾⁇-⁉⁗ ⁰-ⁱ⁴-₎ₐ-ₜ₨℀-℃℅-ℇ℉-ℓℕ-№ℙ-ℝ℠-™ℤΩℨK-ℭℯ-ℱℳ-ℹ℻-⅀ⅅ-ⅉ⅐-ⅿ↉∬-∭∯-∰〈-〉①-⓪⨌⩴-⩶⫝̸ⱼ-ⱽⵯ⺟⻳⼀-⿕　〶〸-〺゛-゜ゟヿㄱ-ㆎ㆒-㆟㈀-㈞㈠-㉇㉐-㉾㊀-㏿ꚜ-ꚝꝰꟲ-ꟴꟸ-ꟹꭜ-ꭟꭩ豈-嗀塚晴凞-羽蘒諸逸-都飯-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-זּטּ-לּמּנּ-סּףּ-פּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-﷼︐-︙︰-﹄﹇-﹒﹔-﹦﹨-﹫ﹰ-ﹲﹴﹶ-ﻼ！-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ￠-￦`;return NormalizeWithNFKC}const FindState={FOUND:0,NOT_FOUND:1,WRAPPED:2,PENDING:3};const FIND_TIMEOUT=250;const MATCH_SCROLL_OFFSET_TOP=-50;const MATCH_SCROLL_OFFSET_LEFT=-400;const CHARACTERS_TO_NORMALIZE={\"‐\":\"-\",\"‘\":\"'\",\"’\":\"'\",\"‚\":\"'\",\"‛\":\"'\",\"“\":'\"',\"”\":'\"',\"„\":'\"',\"‟\":'\"',\"¼\":\"1/4\",\"½\":\"1/2\",\"¾\":\"3/4\"};const DIACRITICS_EXCEPTION=new Set([12441,12442,2381,2509,2637,2765,2893,3021,3149,3277,3387,3388,3405,3530,3642,3770,3972,4153,4154,5908,5940,6098,6752,6980,7082,7083,7154,7155,11647,43014,43052,43204,43347,43456,43766,44013,3158,3953,3954,3962,3963,3964,3965,3968,3956]);let DIACRITICS_EXCEPTION_STR;const DIACRITICS_REG_EXP=/\\p{M}+/gu;const SPECIAL_CHARS_REG_EXP=/([.*+?^${}()|[\\]\\\\])|(\\p{P})|(\\s+)|(\\p{M})|(\\p{L})/gu;const NOT_DIACRITIC_FROM_END_REG_EXP=/([^\\p{M}])\\p{M}*$/u;const NOT_DIACRITIC_FROM_START_REG_EXP=/^\\p{M}*([^\\p{M}])/u;const SYLLABLES_REG_EXP=/[\\uAC00-\\uD7AF\\uFA6C\\uFACF-\\uFAD1\\uFAD5-\\uFAD7]+/g;const SYLLABLES_LENGTHS=new Map;const FIRST_CHAR_SYLLABLES_REG_EXP=\"[\\\\u1100-\\\\u1112\\\\ud7a4-\\\\ud7af\\\\ud84a\\\\ud84c\\\\ud850\\\\ud854\\\\ud857\\\\ud85f]\";const NFKC_CHARS_TO_NORMALIZE=new Map;let noSyllablesRegExp=null;let withSyllablesRegExp=null;function normalize(text){const syllablePositions=[];let m;while((m=SYLLABLES_REG_EXP.exec(text))!==null){let{index:index}=m;for(const char of m[0]){let len=SYLLABLES_LENGTHS.get(char);if(!len){len=char.normalize(\"NFD\").length;SYLLABLES_LENGTHS.set(char,len)}syllablePositions.push([len,index++])}}const hasSyllables=syllablePositions.length>0;let normalizationRegex;if(!hasSyllables&&noSyllablesRegExp){normalizationRegex=noSyllablesRegExp}else if(hasSyllables&&withSyllablesRegExp){normalizationRegex=withSyllablesRegExp}else{const replace=Object.keys(CHARACTERS_TO_NORMALIZE).join(\"\");const toNormalizeWithNFKC=getNormalizeWithNFKC();const CJK=\"(?:\\\\p{Ideographic}|[぀-ヿ])\";const HKDiacritics=\"(?:゙|゚)\";const BrokenWord=`\\\\p{Ll}-\\\\n(?=\\\\p{Ll})|\\\\p{Lu}-\\\\n(?=\\\\p{L})`;const regexps=[`[${replace}]`,`[${toNormalizeWithNFKC}]`,`${HKDiacritics}\\\\n`,\"\\\\p{M}+(?:-\\\\n)?\",`${BrokenWord}`,\"\\\\S-\\\\n\",`${CJK}\\\\n`,\"\\\\n\",hasSyllables?FIRST_CHAR_SYLLABLES_REG_EXP:\"\\\\u0000\"];normalizationRegex=new RegExp(regexps.map((r=>`(${r})`)).join(\"|\"),\"gum\");if(hasSyllables){withSyllablesRegExp=normalizationRegex}else{noSyllablesRegExp=normalizationRegex}}const rawDiacriticsPositions=[];while((m=DIACRITICS_REG_EXP.exec(text))!==null){rawDiacriticsPositions.push([m[0].length,m.index])}let normalized=text.normalize(\"NFD\");const positions=[0,0];let rawDiacriticsIndex=0;let syllableIndex=0;let shift=0;let shiftOrigin=0;let eol=0;let hasDiacritics=false;normalized=normalized.replace(normalizationRegex,((match,p1,p2,p3,p4,p5,p6,p7,p8,p9,i)=>{i-=shiftOrigin;if(p1){const replacement=CHARACTERS_TO_NORMALIZE[p1];const jj=replacement.length;for(let j=1;j<jj;j++){positions.push(i-shift+j,shift-j)}shift-=jj-1;return replacement}if(p2){let replacement=NFKC_CHARS_TO_NORMALIZE.get(p2);if(!replacement){replacement=p2.normalize(\"NFKC\");NFKC_CHARS_TO_NORMALIZE.set(p2,replacement)}const jj=replacement.length;for(let j=1;j<jj;j++){positions.push(i-shift+j,shift-j)}shift-=jj-1;return replacement}if(p3){hasDiacritics=true;if(i+eol===rawDiacriticsPositions[rawDiacriticsIndex]?.[1]){++rawDiacriticsIndex}else{positions.push(i-1-shift+1,shift-1);shift-=1;shiftOrigin+=1}positions.push(i-shift+1,shift);shiftOrigin+=1;eol+=1;return p3.charAt(0)}if(p4){const hasTrailingDashEOL=p4.endsWith(\"\\n\");const len=hasTrailingDashEOL?p4.length-2:p4.length;hasDiacritics=true;let jj=len;if(i+eol===rawDiacriticsPositions[rawDiacriticsIndex]?.[1]){jj-=rawDiacriticsPositions[rawDiacriticsIndex][0];++rawDiacriticsIndex}for(let j=1;j<=jj;j++){positions.push(i-1-shift+j,shift-j)}shift-=jj;shiftOrigin+=jj;if(hasTrailingDashEOL){i+=len-1;positions.push(i-shift+1,1+shift);shift+=1;shiftOrigin+=1;eol+=1;return p4.slice(0,len)}return p4}if(p5){const len=p5.length-2;positions.push(i-shift+len,1+shift);shift+=1;shiftOrigin+=1;eol+=1;return p5.slice(0,-2)}if(p6){shiftOrigin+=1;eol+=1;return p6.slice(0,-1)}if(p7){const len=p7.length-1;positions.push(i-shift+len,shift);shiftOrigin+=1;eol+=1;return p7.slice(0,-1)}if(p8){positions.push(i-shift+1,shift-1);shift-=1;shiftOrigin+=1;eol+=1;return\" \"}if(i+eol===syllablePositions[syllableIndex]?.[1]){const newCharLen=syllablePositions[syllableIndex][0]-1;++syllableIndex;for(let j=1;j<=newCharLen;j++){positions.push(i-(shift-j),shift-j)}shift-=newCharLen;shiftOrigin+=newCharLen}return p9}));positions.push(normalized.length,shift);const starts=new Uint32Array(positions.length>>1);const shifts=new Int32Array(positions.length>>1);for(let i=0,ii=positions.length;i<ii;i+=2){starts[i>>1]=positions[i];shifts[i>>1]=positions[i+1]}return[normalized,[starts,shifts],hasDiacritics]}function getOriginalIndex(diffs,pos,len){if(!diffs){return[pos,len]}const[starts,shifts]=diffs;const start=pos;const end=pos+len-1;let i=binarySearchFirstItem(starts,(x=>x>=start));if(starts[i]>start){--i}let j=binarySearchFirstItem(starts,(x=>x>=end),i);if(starts[j]>end){--j}const oldStart=start+shifts[i];const oldEnd=end+shifts[j];const oldLen=oldEnd+1-oldStart;return[oldStart,oldLen]}class PDFFindController{#state=null;#updateMatchesCountOnProgress=true;#visitedPagesCount=0;constructor({linkService:linkService,eventBus:eventBus,updateMatchesCountOnProgress:updateMatchesCountOnProgress=true}){this._linkService=linkService;this._eventBus=eventBus;this.#updateMatchesCountOnProgress=updateMatchesCountOnProgress;this.onIsPageVisible=null;this.#reset();eventBus._on(\"find\",this.#onFind.bind(this));eventBus._on(\"findbarclose\",this.#onFindBarClose.bind(this))}get highlightMatches(){return this._highlightMatches}get pageMatches(){return this._pageMatches}get pageMatchesLength(){return this._pageMatchesLength}get selected(){return this._selected}get state(){return this.#state}setDocument(pdfDocument){if(this._pdfDocument){this.#reset()}if(!pdfDocument){return}this._pdfDocument=pdfDocument;this._firstPageCapability.resolve()}#onFind(state){if(!state){return}const pdfDocument=this._pdfDocument;const{type:type}=state;if(this.#state===null||this.#shouldDirtyMatch(state)){this._dirtyMatch=true}this.#state=state;if(type!==\"highlightallchange\"){this.#updateUIState(FindState.PENDING)}this._firstPageCapability.promise.then((()=>{if(!this._pdfDocument||pdfDocument&&this._pdfDocument!==pdfDocument){return}this.#extractText();const findbarClosed=!this._highlightMatches;const pendingTimeout=!!this._findTimeout;if(this._findTimeout){clearTimeout(this._findTimeout);this._findTimeout=null}if(!type){this._findTimeout=setTimeout((()=>{this.#nextMatch();this._findTimeout=null}),FIND_TIMEOUT)}else if(this._dirtyMatch){this.#nextMatch()}else if(type===\"again\"){this.#nextMatch();if(findbarClosed&&this.#state.highlightAll){this.#updateAllPages()}}else if(type===\"highlightallchange\"){if(pendingTimeout){this.#nextMatch()}else{this._highlightMatches=true}this.#updateAllPages()}else{this.#nextMatch()}}))}scrollMatchIntoView({element:element=null,selectedLeft:selectedLeft=0,pageIndex:pageIndex=-1,matchIndex:matchIndex=-1}){if(!this._scrollMatches||!element){return}else if(matchIndex===-1||matchIndex!==this._selected.matchIdx){return}else if(pageIndex===-1||pageIndex!==this._selected.pageIdx){return}this._scrollMatches=false;const spot={top:MATCH_SCROLL_OFFSET_TOP,left:selectedLeft+MATCH_SCROLL_OFFSET_LEFT};scrollIntoView(element,spot,true)}#reset(){this._highlightMatches=false;this._scrollMatches=false;this._pdfDocument=null;this._pageMatches=[];this._pageMatchesLength=[];this.#visitedPagesCount=0;this.#state=null;this._selected={pageIdx:-1,matchIdx:-1};this._offset={pageIdx:null,matchIdx:null,wrapped:false};this._extractTextPromises=[];this._pageContents=[];this._pageDiffs=[];this._hasDiacritics=[];this._matchesCountTotal=0;this._pagesToSearch=null;this._pendingFindMatches=new Set;this._resumePageIdx=null;this._dirtyMatch=false;clearTimeout(this._findTimeout);this._findTimeout=null;this._firstPageCapability=Promise.withResolvers()}get#query(){const{query:query}=this.#state;if(typeof query===\"string\"){if(query!==this._rawQuery){this._rawQuery=query;[this._normalizedQuery]=normalize(query)}return this._normalizedQuery}return(query||[]).filter((q=>!!q)).map((q=>normalize(q)[0]))}#shouldDirtyMatch(state){const newQuery=state.query,prevQuery=this.#state.query;const newType=typeof newQuery,prevType=typeof prevQuery;if(newType!==prevType){return true}if(newType===\"string\"){if(newQuery!==prevQuery){return true}}else if(JSON.stringify(newQuery)!==JSON.stringify(prevQuery)){return true}switch(state.type){case\"again\":const pageNumber=this._selected.pageIdx+1;const linkService=this._linkService;return pageNumber>=1&&pageNumber<=linkService.pagesCount&&pageNumber!==linkService.page&&!(this.onIsPageVisible?.(pageNumber)??true);case\"highlightallchange\":return false}return true}#isEntireWord(content,startIdx,length){let match=content.slice(0,startIdx).match(NOT_DIACRITIC_FROM_END_REG_EXP);if(match){const first=content.charCodeAt(startIdx);const limit=match[1].charCodeAt(0);if(getCharacterType(first)===getCharacterType(limit)){return false}}match=content.slice(startIdx+length).match(NOT_DIACRITIC_FROM_START_REG_EXP);if(match){const last=content.charCodeAt(startIdx+length-1);const limit=match[1].charCodeAt(0);if(getCharacterType(last)===getCharacterType(limit)){return false}}return true}#convertToRegExpString(query,hasDiacritics){const{matchDiacritics:matchDiacritics}=this.#state;let isUnicode=false;query=query.replaceAll(SPECIAL_CHARS_REG_EXP,((match,p1,p2,p3,p4,p5)=>{if(p1){return`[ ]*\\\\${p1}[ ]*`}if(p2){return`[ ]*${p2}[ ]*`}if(p3){return\"[ ]+\"}if(matchDiacritics){return p4||p5}if(p4){return DIACRITICS_EXCEPTION.has(p4.charCodeAt(0))?p4:\"\"}if(hasDiacritics){isUnicode=true;return`${p5}\\\\p{M}*`}return p5}));const trailingSpaces=\"[ ]*\";if(query.endsWith(trailingSpaces)){query=query.slice(0,query.length-trailingSpaces.length)}if(matchDiacritics){if(hasDiacritics){DIACRITICS_EXCEPTION_STR||=String.fromCharCode(...DIACRITICS_EXCEPTION);isUnicode=true;query=`${query}(?=[${DIACRITICS_EXCEPTION_STR}]|[^\\\\p{M}]|$)`}}return[isUnicode,query]}#calculateMatch(pageIndex){if(!this.#state){return}const query=this.#query;if(query.length===0){return}const pageContent=this._pageContents[pageIndex];const matcherResult=this.match(query,pageContent,pageIndex);const matches=this._pageMatches[pageIndex]=[];const matchesLength=this._pageMatchesLength[pageIndex]=[];const diffs=this._pageDiffs[pageIndex];matcherResult?.forEach((({index:index,length:length})=>{const[matchPos,matchLen]=getOriginalIndex(diffs,index,length);if(matchLen){matches.push(matchPos);matchesLength.push(matchLen)}}));if(this.#state.highlightAll){this.#updatePage(pageIndex)}if(this._resumePageIdx===pageIndex){this._resumePageIdx=null;this.#nextPageMatch()}const pageMatchesCount=matches.length;this._matchesCountTotal+=pageMatchesCount;if(this.#updateMatchesCountOnProgress){if(pageMatchesCount>0){this.#updateUIResultsCount()}}else if(++this.#visitedPagesCount===this._linkService.pagesCount){this.#updateUIResultsCount()}}match(query,pageContent,pageIndex){const hasDiacritics=this._hasDiacritics[pageIndex];let isUnicode=false;if(typeof query===\"string\"){[isUnicode,query]=this.#convertToRegExpString(query,hasDiacritics)}else{query=query.sort().reverse().map((q=>{const[isUnicodePart,queryPart]=this.#convertToRegExpString(q,hasDiacritics);isUnicode||=isUnicodePart;return`(${queryPart})`})).join(\"|\")}if(!query){return undefined}const{caseSensitive:caseSensitive,entireWord:entireWord}=this.#state;const flags=`g${isUnicode?\"u\":\"\"}${caseSensitive?\"\":\"i\"}`;query=new RegExp(query,flags);const matches=[];let match;while((match=query.exec(pageContent))!==null){if(entireWord&&!this.#isEntireWord(pageContent,match.index,match[0].length)){continue}matches.push({index:match.index,length:match[0].length})}return matches}#extractText(){if(this._extractTextPromises.length>0){return}let deferred=Promise.resolve();const textOptions={disableNormalization:true};const pdfDoc=this._pdfDocument;for(let i=0,ii=this._linkService.pagesCount;i<ii;i++){const{promise:promise,resolve:resolve}=Promise.withResolvers();this._extractTextPromises[i]=promise;deferred=deferred.then((async()=>{if(pdfDoc!==this._pdfDocument){resolve();return}await pdfDoc.getPage(i+1).then((pdfPage=>pdfPage.getTextContent(textOptions))).then((textContent=>{const strBuf=[];for(const textItem of textContent.items){strBuf.push(textItem.str);if(textItem.hasEOL){strBuf.push(\"\\n\")}}[this._pageContents[i],this._pageDiffs[i],this._hasDiacritics[i]]=normalize(strBuf.join(\"\"));resolve()}),(reason=>{console.error(`Unable to get text content for page ${i+1}`,reason);this._pageContents[i]=\"\";this._pageDiffs[i]=null;this._hasDiacritics[i]=false;resolve()}))}))}}#updatePage(index){if(this._scrollMatches&&this._selected.pageIdx===index){this._linkService.page=index+1}this._eventBus.dispatch(\"updatetextlayermatches\",{source:this,pageIndex:index})}#updateAllPages(){this._eventBus.dispatch(\"updatetextlayermatches\",{source:this,pageIndex:-1})}#nextMatch(){const previous=this.#state.findPrevious;const currentPageIndex=this._linkService.page-1;const numPages=this._linkService.pagesCount;this._highlightMatches=true;if(this._dirtyMatch){this._dirtyMatch=false;this._selected.pageIdx=this._selected.matchIdx=-1;this._offset.pageIdx=currentPageIndex;this._offset.matchIdx=null;this._offset.wrapped=false;this._resumePageIdx=null;this._pageMatches.length=0;this._pageMatchesLength.length=0;this.#visitedPagesCount=0;this._matchesCountTotal=0;this.#updateAllPages();for(let i=0;i<numPages;i++){if(this._pendingFindMatches.has(i)){continue}this._pendingFindMatches.add(i);this._extractTextPromises[i].then((()=>{this._pendingFindMatches.delete(i);this.#calculateMatch(i)}))}}const query=this.#query;if(query.length===0){this.#updateUIState(FindState.FOUND);return}if(this._resumePageIdx){return}const offset=this._offset;this._pagesToSearch=numPages;if(offset.matchIdx!==null){const numPageMatches=this._pageMatches[offset.pageIdx].length;if(!previous&&offset.matchIdx+1<numPageMatches||previous&&offset.matchIdx>0){offset.matchIdx=previous?offset.matchIdx-1:offset.matchIdx+1;this.#updateMatch(true);return}this.#advanceOffsetPage(previous)}this.#nextPageMatch()}#matchesReady(matches){const offset=this._offset;const numMatches=matches.length;const previous=this.#state.findPrevious;if(numMatches){offset.matchIdx=previous?numMatches-1:0;this.#updateMatch(true);return true}this.#advanceOffsetPage(previous);if(offset.wrapped){offset.matchIdx=null;if(this._pagesToSearch<0){this.#updateMatch(false);return true}}return false}#nextPageMatch(){if(this._resumePageIdx!==null){console.error(\"There can only be one pending page.\")}let matches=null;do{const pageIdx=this._offset.pageIdx;matches=this._pageMatches[pageIdx];if(!matches){this._resumePageIdx=pageIdx;break}}while(!this.#matchesReady(matches))}#advanceOffsetPage(previous){const offset=this._offset;const numPages=this._linkService.pagesCount;offset.pageIdx=previous?offset.pageIdx-1:offset.pageIdx+1;offset.matchIdx=null;this._pagesToSearch--;if(offset.pageIdx>=numPages||offset.pageIdx<0){offset.pageIdx=previous?numPages-1:0;offset.wrapped=true}}#updateMatch(found=false){let state=FindState.NOT_FOUND;const wrapped=this._offset.wrapped;this._offset.wrapped=false;if(found){const previousPage=this._selected.pageIdx;this._selected.pageIdx=this._offset.pageIdx;this._selected.matchIdx=this._offset.matchIdx;state=wrapped?FindState.WRAPPED:FindState.FOUND;if(previousPage!==-1&&previousPage!==this._selected.pageIdx){this.#updatePage(previousPage)}}this.#updateUIState(state,this.#state.findPrevious);if(this._selected.pageIdx!==-1){this._scrollMatches=true;this.#updatePage(this._selected.pageIdx)}}#onFindBarClose(evt){const pdfDocument=this._pdfDocument;this._firstPageCapability.promise.then((()=>{if(!this._pdfDocument||pdfDocument&&this._pdfDocument!==pdfDocument){return}if(this._findTimeout){clearTimeout(this._findTimeout);this._findTimeout=null}if(this._resumePageIdx){this._resumePageIdx=null;this._dirtyMatch=true}this.#updateUIState(FindState.FOUND);this._highlightMatches=false;this.#updateAllPages()}))}#requestMatchesCount(){const{pageIdx:pageIdx,matchIdx:matchIdx}=this._selected;let current=0,total=this._matchesCountTotal;if(matchIdx!==-1){for(let i=0;i<pageIdx;i++){current+=this._pageMatches[i]?.length||0}current+=matchIdx+1}if(current<1||current>total){current=total=0}return{current:current,total:total}}#updateUIResultsCount(){this._eventBus.dispatch(\"updatefindmatchescount\",{source:this,matchesCount:this.#requestMatchesCount()})}#updateUIState(state,previous=false){if(!this.#updateMatchesCountOnProgress&&(this.#visitedPagesCount!==this._linkService.pagesCount||state===FindState.PENDING)){return}this._eventBus.dispatch(\"updatefindcontrolstate\",{source:this,state:state,previous:previous,entireWord:this.#state?.entireWord??null,matchesCount:this.#requestMatchesCount(),rawQuery:this.#state?.query??null})}}const MATCHES_COUNT_LIMIT=1e3;class PDFFindBar{#mainContainer;#resizeObserver=new ResizeObserver(this.#resizeObserverCallback.bind(this));constructor(options,mainContainer,eventBus){this.opened=false;this.bar=options.bar;this.toggleButton=options.toggleButton;this.findField=options.findField;this.highlightAll=options.highlightAllCheckbox;this.caseSensitive=options.caseSensitiveCheckbox;this.matchDiacritics=options.matchDiacriticsCheckbox;this.entireWord=options.entireWordCheckbox;this.findMsg=options.findMsg;this.findResultsCount=options.findResultsCount;this.findPreviousButton=options.findPreviousButton;this.findNextButton=options.findNextButton;this.eventBus=eventBus;this.#mainContainer=mainContainer;const checkedInputs=new Map([[this.highlightAll,\"highlightallchange\"],[this.caseSensitive,\"casesensitivitychange\"],[this.entireWord,\"entirewordchange\"],[this.matchDiacritics,\"diacriticmatchingchange\"]]);this.toggleButton.addEventListener(\"click\",(()=>{this.toggle()}));this.findField.addEventListener(\"input\",(()=>{this.dispatchEvent(\"\")}));this.bar.addEventListener(\"keydown\",(({keyCode:keyCode,shiftKey:shiftKey,target:target})=>{switch(keyCode){case 13:if(target===this.findField){this.dispatchEvent(\"again\",shiftKey)}else if(checkedInputs.has(target)){target.checked=!target.checked;this.dispatchEvent(checkedInputs.get(target))}break;case 27:this.close();break}}));this.findPreviousButton.addEventListener(\"click\",(()=>{this.dispatchEvent(\"again\",true)}));this.findNextButton.addEventListener(\"click\",(()=>{this.dispatchEvent(\"again\",false)}));for(const[elem,evtName]of checkedInputs){elem.addEventListener(\"click\",(()=>{this.dispatchEvent(evtName)}))}}reset(){this.updateUIState()}dispatchEvent(type,findPrev=false){this.eventBus.dispatch(\"find\",{source:this,type:type,query:this.findField.value,caseSensitive:this.caseSensitive.checked,entireWord:this.entireWord.checked,highlightAll:this.highlightAll.checked,findPrevious:findPrev,matchDiacritics:this.matchDiacritics.checked})}updateUIState(state,previous,matchesCount){const{findField:findField,findMsg:findMsg}=this;let findMsgId=\"\",status=\"\";switch(state){case FindState.FOUND:break;case FindState.PENDING:status=\"pending\";break;case FindState.NOT_FOUND:findMsgId=\"pdfjs-find-not-found\";status=\"notFound\";break;case FindState.WRAPPED:findMsgId=previous?\"pdfjs-find-reached-top\":\"pdfjs-find-reached-bottom\";break}findField.setAttribute(\"data-status\",status);findField.setAttribute(\"aria-invalid\",state===FindState.NOT_FOUND);findMsg.setAttribute(\"data-status\",status);if(findMsgId){findMsg.setAttribute(\"data-l10n-id\",findMsgId)}else{findMsg.removeAttribute(\"data-l10n-id\");findMsg.textContent=\"\"}this.updateResultsCount(matchesCount)}updateResultsCount({current:current=0,total:total=0}={}){const{findResultsCount:findResultsCount}=this;if(total>0){const limit=MATCHES_COUNT_LIMIT;findResultsCount.setAttribute(\"data-l10n-id\",total>limit?\"pdfjs-find-match-count-limit\":\"pdfjs-find-match-count\");findResultsCount.setAttribute(\"data-l10n-args\",JSON.stringify({limit:limit,current:current,total:total}))}else{findResultsCount.removeAttribute(\"data-l10n-id\");findResultsCount.textContent=\"\"}}open(){if(!this.opened){this.#resizeObserver.observe(this.#mainContainer);this.#resizeObserver.observe(this.bar);this.opened=true;toggleExpandedBtn(this.toggleButton,true,this.bar)}this.findField.select();this.findField.focus()}close(){if(!this.opened){return}this.#resizeObserver.disconnect();this.opened=false;toggleExpandedBtn(this.toggleButton,false,this.bar);this.eventBus.dispatch(\"findbarclose\",{source:this})}toggle(){if(this.opened){this.close()}else{this.open()}}#resizeObserverCallback(){const{bar:bar}=this;bar.classList.remove(\"wrapContainers\");const findbarHeight=bar.clientHeight;const inputContainerHeight=bar.firstElementChild.clientHeight;if(findbarHeight>inputContainerHeight){bar.classList.add(\"wrapContainers\")}}}const HASH_CHANGE_TIMEOUT=1e3;const POSITION_UPDATED_THRESHOLD=50;const UPDATE_VIEWAREA_TIMEOUT=1e3;function getCurrentHash(){return document.location.hash}class PDFHistory{#eventAbortController=null;constructor({linkService:linkService,eventBus:eventBus}){this.linkService=linkService;this.eventBus=eventBus;this._initialized=false;this._fingerprint=\"\";this.reset();this.eventBus._on(\"pagesinit\",(()=>{this._isPagesLoaded=false;this.eventBus._on(\"pagesloaded\",(evt=>{this._isPagesLoaded=!!evt.pagesCount}),{once:true})}))}initialize({fingerprint:fingerprint,resetHistory:resetHistory=false,updateUrl:updateUrl=false}){if(!fingerprint||typeof fingerprint!==\"string\"){console.error('PDFHistory.initialize: The \"fingerprint\" must be a non-empty string.');return}if(this._initialized){this.reset()}const reInitialized=this._fingerprint!==\"\"&&this._fingerprint!==fingerprint;this._fingerprint=fingerprint;this._updateUrl=updateUrl===true;this._initialized=true;this.#bindEvents();const state=window.history.state;this._popStateInProgress=false;this._blockHashChange=0;this._currentHash=getCurrentHash();this._numPositionUpdates=0;this._uid=this._maxUid=0;this._destination=null;this._position=null;if(!this.#isValidState(state,true)||resetHistory){const{hash:hash,page:page,rotation:rotation}=this.#parseCurrentHash(true);if(!hash||reInitialized||resetHistory){this.#pushOrReplaceState(null,true);return}this.#pushOrReplaceState({hash:hash,page:page,rotation:rotation},true);return}const destination=state.destination;this.#updateInternalState(destination,state.uid,true);if(destination.rotation!==undefined){this._initialRotation=destination.rotation}if(destination.dest){this._initialBookmark=JSON.stringify(destination.dest);this._destination.page=null}else if(destination.hash){this._initialBookmark=destination.hash}else if(destination.page){this._initialBookmark=`page=${destination.page}`}}reset(){if(this._initialized){this.#pageHide();this._initialized=false;this.#unbindEvents()}if(this._updateViewareaTimeout){clearTimeout(this._updateViewareaTimeout);this._updateViewareaTimeout=null}this._initialBookmark=null;this._initialRotation=null}push({namedDest:namedDest=null,explicitDest:explicitDest,pageNumber:pageNumber}){if(!this._initialized){return}if(namedDest&&typeof namedDest!==\"string\"){console.error(\"PDFHistory.push: \"+`\"${namedDest}\" is not a valid namedDest parameter.`);return}else if(!Array.isArray(explicitDest)){console.error(\"PDFHistory.push: \"+`\"${explicitDest}\" is not a valid explicitDest parameter.`);return}else if(!this.#isValidPage(pageNumber)){if(pageNumber!==null||this._destination){console.error(\"PDFHistory.push: \"+`\"${pageNumber}\" is not a valid pageNumber parameter.`);return}}const hash=namedDest||JSON.stringify(explicitDest);if(!hash){return}let forceReplace=false;if(this._destination&&(isDestHashesEqual(this._destination.hash,hash)||isDestArraysEqual(this._destination.dest,explicitDest))){if(this._destination.page){return}forceReplace=true}if(this._popStateInProgress&&!forceReplace){return}this.#pushOrReplaceState({dest:explicitDest,hash:hash,page:pageNumber,rotation:this.linkService.rotation},forceReplace);if(!this._popStateInProgress){this._popStateInProgress=true;Promise.resolve().then((()=>{this._popStateInProgress=false}))}}pushPage(pageNumber){if(!this._initialized){return}if(!this.#isValidPage(pageNumber)){console.error(`PDFHistory.pushPage: \"${pageNumber}\" is not a valid page number.`);return}if(this._destination?.page===pageNumber){return}if(this._popStateInProgress){return}this.#pushOrReplaceState({dest:null,hash:`page=${pageNumber}`,page:pageNumber,rotation:this.linkService.rotation});if(!this._popStateInProgress){this._popStateInProgress=true;Promise.resolve().then((()=>{this._popStateInProgress=false}))}}pushCurrentPosition(){if(!this._initialized||this._popStateInProgress){return}this.#tryPushCurrentPosition()}back(){if(!this._initialized||this._popStateInProgress){return}const state=window.history.state;if(this.#isValidState(state)&&state.uid>0){window.history.back()}}forward(){if(!this._initialized||this._popStateInProgress){return}const state=window.history.state;if(this.#isValidState(state)&&state.uid<this._maxUid){window.history.forward()}}get popStateInProgress(){return this._initialized&&(this._popStateInProgress||this._blockHashChange>0)}get initialBookmark(){return this._initialized?this._initialBookmark:null}get initialRotation(){return this._initialized?this._initialRotation:null}#pushOrReplaceState(destination,forceReplace=false){const shouldReplace=forceReplace||!this._destination;const newState={fingerprint:this._fingerprint,uid:shouldReplace?this._uid:this._uid+1,destination:destination};this.#updateInternalState(destination,newState.uid);let newUrl;if(this._updateUrl&&destination?.hash){const{href:href,protocol:protocol}=document.location;if(protocol!==\"file:\"){newUrl=updateUrlHash(href,destination.hash)}}if(shouldReplace){window.history.replaceState(newState,\"\",newUrl)}else{window.history.pushState(newState,\"\",newUrl)}}#tryPushCurrentPosition(temporary=false){if(!this._position){return}let position=this._position;if(temporary){position=Object.assign(Object.create(null),this._position);position.temporary=true}if(!this._destination){this.#pushOrReplaceState(position);return}if(this._destination.temporary){this.#pushOrReplaceState(position,true);return}if(this._destination.hash===position.hash){return}if(!this._destination.page&&(POSITION_UPDATED_THRESHOLD<=0||this._numPositionUpdates<=POSITION_UPDATED_THRESHOLD)){return}let forceReplace=false;if(this._destination.page>=position.first&&this._destination.page<=position.page){if(this._destination.dest!==undefined||!this._destination.first){return}forceReplace=true}this.#pushOrReplaceState(position,forceReplace)}#isValidPage(val){return Number.isInteger(val)&&val>0&&val<=this.linkService.pagesCount}#isValidState(state,checkReload=false){if(!state){return false}if(state.fingerprint!==this._fingerprint){if(checkReload){if(typeof state.fingerprint!==\"string\"||state.fingerprint.length!==this._fingerprint.length){return false}const[perfEntry]=performance.getEntriesByType(\"navigation\");if(perfEntry?.type!==\"reload\"){return false}}else{return false}}if(!Number.isInteger(state.uid)||state.uid<0){return false}if(state.destination===null||typeof state.destination!==\"object\"){return false}return true}#updateInternalState(destination,uid,removeTemporary=false){if(this._updateViewareaTimeout){clearTimeout(this._updateViewareaTimeout);this._updateViewareaTimeout=null}if(removeTemporary&&destination?.temporary){delete destination.temporary}this._destination=destination;this._uid=uid;this._maxUid=Math.max(this._maxUid,uid);this._numPositionUpdates=0}#parseCurrentHash(checkNameddest=false){const hash=unescape(getCurrentHash()).substring(1);const params=parseQueryString(hash);const nameddest=params.get(\"nameddest\")||\"\";let page=params.get(\"page\")|0;if(!this.#isValidPage(page)||checkNameddest&&nameddest.length>0){page=null}return{hash:hash,page:page,rotation:this.linkService.rotation}}#updateViewarea({location:location}){if(this._updateViewareaTimeout){clearTimeout(this._updateViewareaTimeout);this._updateViewareaTimeout=null}this._position={hash:location.pdfOpenParams.substring(1),page:this.linkService.page,first:location.pageNumber,rotation:location.rotation};if(this._popStateInProgress){return}if(POSITION_UPDATED_THRESHOLD>0&&this._isPagesLoaded&&this._destination&&!this._destination.page){this._numPositionUpdates++}if(UPDATE_VIEWAREA_TIMEOUT>0){this._updateViewareaTimeout=setTimeout((()=>{if(!this._popStateInProgress){this.#tryPushCurrentPosition(true)}this._updateViewareaTimeout=null}),UPDATE_VIEWAREA_TIMEOUT)}}#popState({state:state}){const newHash=getCurrentHash(),hashChanged=this._currentHash!==newHash;this._currentHash=newHash;if(!state){this._uid++;const{hash:hash,page:page,rotation:rotation}=this.#parseCurrentHash();this.#pushOrReplaceState({hash:hash,page:page,rotation:rotation},true);return}if(!this.#isValidState(state)){return}this._popStateInProgress=true;if(hashChanged){this._blockHashChange++;waitOnEventOrTimeout({target:window,name:\"hashchange\",delay:HASH_CHANGE_TIMEOUT}).then((()=>{this._blockHashChange--}))}const destination=state.destination;this.#updateInternalState(destination,state.uid,true);if(isValidRotation(destination.rotation)){this.linkService.rotation=destination.rotation}if(destination.dest){this.linkService.goToDestination(destination.dest)}else if(destination.hash){this.linkService.setHash(destination.hash)}else if(destination.page){this.linkService.page=destination.page}Promise.resolve().then((()=>{this._popStateInProgress=false}))}#pageHide(){if(!this._destination||this._destination.temporary){this.#tryPushCurrentPosition()}}#bindEvents(){if(this.#eventAbortController){return}this.#eventAbortController=new AbortController;const{signal:signal}=this.#eventAbortController;this.eventBus._on(\"updateviewarea\",this.#updateViewarea.bind(this),{signal:signal});window.addEventListener(\"popstate\",this.#popState.bind(this),{signal:signal});window.addEventListener(\"pagehide\",this.#pageHide.bind(this),{signal:signal})}#unbindEvents(){this.#eventAbortController?.abort();this.#eventAbortController=null}}function isDestHashesEqual(destHash,pushHash){if(typeof destHash!==\"string\"||typeof pushHash!==\"string\"){return false}if(destHash===pushHash){return true}const nameddest=parseQueryString(destHash).get(\"nameddest\");if(nameddest===pushHash){return true}return false}function isDestArraysEqual(firstDest,secondDest){function isEntryEqual(first,second){if(typeof first!==typeof second){return false}if(Array.isArray(first)||Array.isArray(second)){return false}if(first!==null&&typeof first===\"object\"&&second!==null){if(Object.keys(first).length!==Object.keys(second).length){return false}for(const key in first){if(!isEntryEqual(first[key],second[key])){return false}}return true}return first===second||Number.isNaN(first)&&Number.isNaN(second)}if(!(Array.isArray(firstDest)&&Array.isArray(secondDest))){return false}if(firstDest.length!==secondDest.length){return false}for(let i=0,ii=firstDest.length;i<ii;i++){if(!isEntryEqual(firstDest[i],secondDest[i])){return false}}return true}class PDFLayerViewer extends BaseTreeViewer{constructor(options){super(options);this.eventBus._on(\"optionalcontentconfigchanged\",(evt=>{this.#updateLayers(evt.promise)}));this.eventBus._on(\"resetlayers\",(()=>{this.#updateLayers()}));this.eventBus._on(\"togglelayerstree\",this._toggleAllTreeItems.bind(this))}reset(){super.reset();this._optionalContentConfig=null;this._optionalContentVisibility?.clear();this._optionalContentVisibility=null}_dispatchEvent(layersCount){this.eventBus.dispatch(\"layersloaded\",{source:this,layersCount:layersCount})}_bindLink(element,{groupId:groupId,input:input}){const setVisibility=()=>{const visible=input.checked;this._optionalContentConfig.setVisibility(groupId,visible);const cached=this._optionalContentVisibility.get(groupId);if(cached){cached.visible=visible}this.eventBus.dispatch(\"optionalcontentconfig\",{source:this,promise:Promise.resolve(this._optionalContentConfig)})};element.onclick=evt=>{if(evt.target===input){setVisibility();return true}else if(evt.target!==element){return true}input.checked=!input.checked;setVisibility();return false}}_setNestedName(element,{name:name=null}){if(typeof name===\"string\"){element.textContent=this._normalizeTextContent(name);return}element.setAttribute(\"data-l10n-id\",\"pdfjs-additional-layers\");element.style.fontStyle=\"italic\";this._l10n.translateOnce(element)}_addToggleButton(div,{name:name=null}){super._addToggleButton(div,name===null)}_toggleAllTreeItems(){if(!this._optionalContentConfig){return}super._toggleAllTreeItems()}render({optionalContentConfig:optionalContentConfig,pdfDocument:pdfDocument}){if(this._optionalContentConfig){this.reset()}this._optionalContentConfig=optionalContentConfig||null;this._pdfDocument=pdfDocument||null;const groups=optionalContentConfig?.getOrder();if(!groups){this._dispatchEvent(0);return}this._optionalContentVisibility=new Map;const fragment=document.createDocumentFragment(),queue=[{parent:fragment,groups:groups}];let layersCount=0,hasAnyNesting=false;while(queue.length>0){const levelData=queue.shift();for(const groupId of levelData.groups){const div=document.createElement(\"div\");div.className=\"treeItem\";const element=document.createElement(\"a\");div.append(element);if(typeof groupId===\"object\"){hasAnyNesting=true;this._addToggleButton(div,groupId);this._setNestedName(element,groupId);const itemsDiv=document.createElement(\"div\");itemsDiv.className=\"treeItems\";div.append(itemsDiv);queue.push({parent:itemsDiv,groups:groupId.order})}else{const group=optionalContentConfig.getGroup(groupId);const input=document.createElement(\"input\");this._bindLink(element,{groupId:groupId,input:input});input.type=\"checkbox\";input.checked=group.visible;this._optionalContentVisibility.set(groupId,{input:input,visible:input.checked});const label=document.createElement(\"label\");label.textContent=this._normalizeTextContent(group.name);label.append(input);element.append(label);layersCount++}levelData.parent.append(div)}}this._finishRendering(fragment,layersCount,hasAnyNesting)}async#updateLayers(promise=null){if(!this._optionalContentConfig){return}const pdfDocument=this._pdfDocument;const optionalContentConfig=await(promise||pdfDocument.getOptionalContentConfig({intent:\"display\"}));if(pdfDocument!==this._pdfDocument){return}if(promise){for(const[groupId,cached]of this._optionalContentVisibility){const group=optionalContentConfig.getGroup(groupId);if(group&&cached.visible!==group.visible){cached.input.checked=cached.visible=!cached.visible}}return}this.eventBus.dispatch(\"optionalcontentconfig\",{source:this,promise:Promise.resolve(optionalContentConfig)});this.render({optionalContentConfig:optionalContentConfig,pdfDocument:this._pdfDocument})}}class PDFOutlineViewer extends BaseTreeViewer{constructor(options){super(options);this.linkService=options.linkService;this.downloadManager=options.downloadManager;this.eventBus._on(\"toggleoutlinetree\",this._toggleAllTreeItems.bind(this));this.eventBus._on(\"currentoutlineitem\",this._currentOutlineItem.bind(this));this.eventBus._on(\"pagechanging\",(evt=>{this._currentPageNumber=evt.pageNumber}));this.eventBus._on(\"pagesloaded\",(evt=>{this._isPagesLoaded=!!evt.pagesCount;this._currentOutlineItemCapability?.resolve(this._isPagesLoaded)}));this.eventBus._on(\"sidebarviewchanged\",(evt=>{this._sidebarView=evt.view}))}reset(){super.reset();this._outline=null;this._pageNumberToDestHashCapability=null;this._currentPageNumber=1;this._isPagesLoaded=null;this._currentOutlineItemCapability?.resolve(false);this._currentOutlineItemCapability=null}_dispatchEvent(outlineCount){this._currentOutlineItemCapability=Promise.withResolvers();if(outlineCount===0||this._pdfDocument?.loadingParams.disableAutoFetch){this._currentOutlineItemCapability.resolve(false)}else if(this._isPagesLoaded!==null){this._currentOutlineItemCapability.resolve(this._isPagesLoaded)}this.eventBus.dispatch(\"outlineloaded\",{source:this,outlineCount:outlineCount,currentOutlineItemPromise:this._currentOutlineItemCapability.promise})}_bindLink(element,{url:url,newWindow:newWindow,action:action,attachment:attachment,dest:dest,setOCGState:setOCGState}){const{linkService:linkService}=this;if(url){linkService.addLinkAttributes(element,url,newWindow);return}if(action){element.href=linkService.getAnchorUrl(\"\");element.onclick=()=>{linkService.executeNamedAction(action);return false};return}if(attachment){element.href=linkService.getAnchorUrl(\"\");element.onclick=()=>{this.downloadManager.openOrDownloadData(attachment.content,attachment.filename);return false};return}if(setOCGState){element.href=linkService.getAnchorUrl(\"\");element.onclick=()=>{linkService.executeSetOCGState(setOCGState);return false};return}element.href=linkService.getDestinationHash(dest);element.onclick=evt=>{this._updateCurrentTreeItem(evt.target.parentNode);if(dest){linkService.goToDestination(dest)}return false}}_setStyles(element,{bold:bold,italic:italic}){if(bold){element.style.fontWeight=\"bold\"}if(italic){element.style.fontStyle=\"italic\"}}_addToggleButton(div,{count:count,items:items}){let hidden=false;if(count<0){let totalCount=items.length;if(totalCount>0){const queue=[...items];while(queue.length>0){const{count:nestedCount,items:nestedItems}=queue.shift();if(nestedCount>0&&nestedItems.length>0){totalCount+=nestedItems.length;queue.push(...nestedItems)}}}if(Math.abs(count)===totalCount){hidden=true}}super._addToggleButton(div,hidden)}_toggleAllTreeItems(){if(!this._outline){return}super._toggleAllTreeItems()}render({outline:outline,pdfDocument:pdfDocument}){if(this._outline){this.reset()}this._outline=outline||null;this._pdfDocument=pdfDocument||null;if(!outline){this._dispatchEvent(0);return}const fragment=document.createDocumentFragment();const queue=[{parent:fragment,items:outline}];let outlineCount=0,hasAnyNesting=false;while(queue.length>0){const levelData=queue.shift();for(const item of levelData.items){const div=document.createElement(\"div\");div.className=\"treeItem\";const element=document.createElement(\"a\");this._bindLink(element,item);this._setStyles(element,item);element.textContent=this._normalizeTextContent(item.title);div.append(element);if(item.items.length>0){hasAnyNesting=true;this._addToggleButton(div,item);const itemsDiv=document.createElement(\"div\");itemsDiv.className=\"treeItems\";div.append(itemsDiv);queue.push({parent:itemsDiv,items:item.items})}levelData.parent.append(div);outlineCount++}}this._finishRendering(fragment,outlineCount,hasAnyNesting)}async _currentOutlineItem(){if(!this._isPagesLoaded){throw new Error(\"_currentOutlineItem: All pages have not been loaded.\")}if(!this._outline||!this._pdfDocument){return}const pageNumberToDestHash=await this._getPageNumberToDestHash(this._pdfDocument);if(!pageNumberToDestHash){return}this._updateCurrentTreeItem(null);if(this._sidebarView!==SidebarView.OUTLINE){return}for(let i=this._currentPageNumber;i>0;i--){const destHash=pageNumberToDestHash.get(i);if(!destHash){continue}const linkElement=this.container.querySelector(`a[href=\"${destHash}\"]`);if(!linkElement){continue}this._scrollToCurrentTreeItem(linkElement.parentNode);break}}async _getPageNumberToDestHash(pdfDocument){if(this._pageNumberToDestHashCapability){return this._pageNumberToDestHashCapability.promise}this._pageNumberToDestHashCapability=Promise.withResolvers();const pageNumberToDestHash=new Map,pageNumberNesting=new Map;const queue=[{nesting:0,items:this._outline}];while(queue.length>0){const levelData=queue.shift(),currentNesting=levelData.nesting;for(const{dest:dest,items:items}of levelData.items){let explicitDest,pageNumber;if(typeof dest===\"string\"){explicitDest=await pdfDocument.getDestination(dest);if(pdfDocument!==this._pdfDocument){return null}}else{explicitDest=dest}if(Array.isArray(explicitDest)){const[destRef]=explicitDest;if(destRef&&typeof destRef===\"object\"){pageNumber=pdfDocument.cachedPageNumber(destRef)}else if(Number.isInteger(destRef)){pageNumber=destRef+1}if(Number.isInteger(pageNumber)&&(!pageNumberToDestHash.has(pageNumber)||currentNesting>pageNumberNesting.get(pageNumber))){const destHash=this.linkService.getDestinationHash(dest);pageNumberToDestHash.set(pageNumber,destHash);pageNumberNesting.set(pageNumber,currentNesting)}}if(items.length>0){queue.push({nesting:currentNesting+1,items:items})}}}this._pageNumberToDestHashCapability.resolve(pageNumberToDestHash.size>0?pageNumberToDestHash:null);return this._pageNumberToDestHashCapability.promise}}const DELAY_BEFORE_HIDING_CONTROLS=3e3;const ACTIVE_SELECTOR=\"pdfPresentationMode\";const CONTROLS_SELECTOR=\"pdfPresentationModeControls\";const MOUSE_SCROLL_COOLDOWN_TIME=50;const PAGE_SWITCH_THRESHOLD=.1;const SWIPE_MIN_DISTANCE_THRESHOLD=50;const SWIPE_ANGLE_THRESHOLD=Math.PI/6;class PDFPresentationMode{#state=PresentationModeState.UNKNOWN;#args=null;#fullscreenChangeAbortController=null;#windowAbortController=null;constructor({container:container,pdfViewer:pdfViewer,eventBus:eventBus}){this.container=container;this.pdfViewer=pdfViewer;this.eventBus=eventBus;this.contextMenuOpen=false;this.mouseScrollTimeStamp=0;this.mouseScrollDelta=0;this.touchSwipeState=null}async request(){const{container:container,pdfViewer:pdfViewer}=this;if(this.active||!pdfViewer.pagesCount||!container.requestFullscreen){return false}this.#addFullscreenChangeListeners();this.#notifyStateChange(PresentationModeState.CHANGING);const promise=container.requestFullscreen();this.#args={pageNumber:pdfViewer.currentPageNumber,scaleValue:pdfViewer.currentScaleValue,scrollMode:pdfViewer.scrollMode,spreadMode:null,annotationEditorMode:null};if(pdfViewer.spreadMode!==SpreadMode.NONE&&!(pdfViewer.pageViewsReady&&pdfViewer.hasEqualPageSizes)){console.warn(\"Ignoring Spread modes when entering PresentationMode, \"+\"since the document may contain varying page sizes.\");this.#args.spreadMode=pdfViewer.spreadMode}if(pdfViewer.annotationEditorMode!==AnnotationEditorType.DISABLE){this.#args.annotationEditorMode=pdfViewer.annotationEditorMode}try{await promise;pdfViewer.focus();return true}catch{this.#removeFullscreenChangeListeners();this.#notifyStateChange(PresentationModeState.NORMAL)}return false}get active(){return this.#state===PresentationModeState.CHANGING||this.#state===PresentationModeState.FULLSCREEN}#mouseWheel(evt){if(!this.active){return}evt.preventDefault();const delta=normalizeWheelEventDelta(evt);const currentTime=Date.now();const storedTime=this.mouseScrollTimeStamp;if(currentTime>storedTime&&currentTime-storedTime<MOUSE_SCROLL_COOLDOWN_TIME){return}if(this.mouseScrollDelta>0&&delta<0||this.mouseScrollDelta<0&&delta>0){this.#resetMouseScrollState()}this.mouseScrollDelta+=delta;if(Math.abs(this.mouseScrollDelta)>=PAGE_SWITCH_THRESHOLD){const totalDelta=this.mouseScrollDelta;this.#resetMouseScrollState();const success=totalDelta>0?this.pdfViewer.previousPage():this.pdfViewer.nextPage();if(success){this.mouseScrollTimeStamp=currentTime}}}#notifyStateChange(state){this.#state=state;this.eventBus.dispatch(\"presentationmodechanged\",{source:this,state:state})}#enter(){this.#notifyStateChange(PresentationModeState.FULLSCREEN);this.container.classList.add(ACTIVE_SELECTOR);setTimeout((()=>{this.pdfViewer.scrollMode=ScrollMode.PAGE;if(this.#args.spreadMode!==null){this.pdfViewer.spreadMode=SpreadMode.NONE}this.pdfViewer.currentPageNumber=this.#args.pageNumber;this.pdfViewer.currentScaleValue=\"page-fit\";if(this.#args.annotationEditorMode!==null){this.pdfViewer.annotationEditorMode={mode:AnnotationEditorType.NONE}}}),0);this.#addWindowListeners();this.#showControls();this.contextMenuOpen=false;document.getSelection().empty()}#exit(){const pageNumber=this.pdfViewer.currentPageNumber;this.container.classList.remove(ACTIVE_SELECTOR);setTimeout((()=>{this.#removeFullscreenChangeListeners();this.#notifyStateChange(PresentationModeState.NORMAL);this.pdfViewer.scrollMode=this.#args.scrollMode;if(this.#args.spreadMode!==null){this.pdfViewer.spreadMode=this.#args.spreadMode}this.pdfViewer.currentScaleValue=this.#args.scaleValue;this.pdfViewer.currentPageNumber=pageNumber;if(this.#args.annotationEditorMode!==null){this.pdfViewer.annotationEditorMode={mode:this.#args.annotationEditorMode}}this.#args=null}),0);this.#removeWindowListeners();this.#hideControls();this.#resetMouseScrollState();this.contextMenuOpen=false}#mouseDown(evt){if(this.contextMenuOpen){this.contextMenuOpen=false;evt.preventDefault();return}if(evt.button!==0){return}if(evt.target.href&&evt.target.parentNode?.hasAttribute(\"data-internal-link\")){return}evt.preventDefault();if(evt.shiftKey){this.pdfViewer.previousPage()}else{this.pdfViewer.nextPage()}}#contextMenu(){this.contextMenuOpen=true}#showControls(){if(this.controlsTimeout){clearTimeout(this.controlsTimeout)}else{this.container.classList.add(CONTROLS_SELECTOR)}this.controlsTimeout=setTimeout((()=>{this.container.classList.remove(CONTROLS_SELECTOR);delete this.controlsTimeout}),DELAY_BEFORE_HIDING_CONTROLS)}#hideControls(){if(!this.controlsTimeout){return}clearTimeout(this.controlsTimeout);this.container.classList.remove(CONTROLS_SELECTOR);delete this.controlsTimeout}#resetMouseScrollState(){this.mouseScrollTimeStamp=0;this.mouseScrollDelta=0}#touchSwipe(evt){if(!this.active){return}if(evt.touches.length>1){this.touchSwipeState=null;return}switch(evt.type){case\"touchstart\":this.touchSwipeState={startX:evt.touches[0].pageX,startY:evt.touches[0].pageY,endX:evt.touches[0].pageX,endY:evt.touches[0].pageY};break;case\"touchmove\":if(this.touchSwipeState===null){return}this.touchSwipeState.endX=evt.touches[0].pageX;this.touchSwipeState.endY=evt.touches[0].pageY;evt.preventDefault();break;case\"touchend\":if(this.touchSwipeState===null){return}let delta=0;const dx=this.touchSwipeState.endX-this.touchSwipeState.startX;const dy=this.touchSwipeState.endY-this.touchSwipeState.startY;const absAngle=Math.abs(Math.atan2(dy,dx));if(Math.abs(dx)>SWIPE_MIN_DISTANCE_THRESHOLD&&(absAngle<=SWIPE_ANGLE_THRESHOLD||absAngle>=Math.PI-SWIPE_ANGLE_THRESHOLD)){delta=dx}else if(Math.abs(dy)>SWIPE_MIN_DISTANCE_THRESHOLD&&Math.abs(absAngle-Math.PI/2)<=SWIPE_ANGLE_THRESHOLD){delta=dy}if(delta>0){this.pdfViewer.previousPage()}else if(delta<0){this.pdfViewer.nextPage()}break}}#addWindowListeners(){if(this.#windowAbortController){return}this.#windowAbortController=new AbortController;const{signal:signal}=this.#windowAbortController;const touchSwipeBind=this.#touchSwipe.bind(this);window.addEventListener(\"mousemove\",this.#showControls.bind(this),{signal:signal});window.addEventListener(\"mousedown\",this.#mouseDown.bind(this),{signal:signal});window.addEventListener(\"wheel\",this.#mouseWheel.bind(this),{passive:false,signal:signal});window.addEventListener(\"keydown\",this.#resetMouseScrollState.bind(this),{signal:signal});window.addEventListener(\"contextmenu\",this.#contextMenu.bind(this),{signal:signal});window.addEventListener(\"touchstart\",touchSwipeBind,{signal:signal});window.addEventListener(\"touchmove\",touchSwipeBind,{signal:signal});window.addEventListener(\"touchend\",touchSwipeBind,{signal:signal})}#removeWindowListeners(){this.#windowAbortController?.abort();this.#windowAbortController=null}#addFullscreenChangeListeners(){if(this.#fullscreenChangeAbortController){return}this.#fullscreenChangeAbortController=new AbortController;window.addEventListener(\"fullscreenchange\",(()=>{if(document.fullscreenElement){this.#enter()}else{this.#exit()}}),{signal:this.#fullscreenChangeAbortController.signal})}#removeFullscreenChangeListeners(){this.#fullscreenChangeAbortController?.abort();this.#fullscreenChangeAbortController=null}}class XfaLayerBuilder{constructor({pdfPage:pdfPage,annotationStorage:annotationStorage=null,linkService:linkService,xfaHtml:xfaHtml=null}){this.pdfPage=pdfPage;this.annotationStorage=annotationStorage;this.linkService=linkService;this.xfaHtml=xfaHtml;this.div=null;this._cancelled=false}async render({viewport:viewport,intent:intent=\"display\"}){if(intent===\"print\"){const parameters={viewport:viewport.clone({dontFlip:true}),div:this.div,xfaHtml:this.xfaHtml,annotationStorage:this.annotationStorage,linkService:this.linkService,intent:intent};this.div=document.createElement(\"div\");parameters.div=this.div;return XfaLayer.render(parameters)}const xfaHtml=await this.pdfPage.getXfa();if(this._cancelled||!xfaHtml){return{textDivs:[]}}const parameters={viewport:viewport.clone({dontFlip:true}),div:this.div,xfaHtml:xfaHtml,annotationStorage:this.annotationStorage,linkService:this.linkService,intent:intent};if(this.div){return XfaLayer.update(parameters)}this.div=document.createElement(\"div\");parameters.div=this.div;return XfaLayer.render(parameters)}cancel(){this._cancelled=true}hide(){if(!this.div){return}this.div.hidden=true}}function getXfaHtmlForPrinting(printContainer,pdfDocument){const xfaHtml=pdfDocument.allXfaHtml;const linkService=new SimpleLinkService;const scale=Math.round(PixelsPerInch.PDF_TO_CSS_UNITS*100)/100;for(const xfaPage of xfaHtml.children){const page=document.createElement(\"div\");page.className=\"xfaPrintedPage\";printContainer.append(page);const builder=new XfaLayerBuilder({pdfPage:null,annotationStorage:pdfDocument.annotationStorage,linkService:linkService,xfaHtml:xfaPage});const viewport=getXfaPageViewport(xfaPage,{scale:scale});builder.render({viewport:viewport,intent:\"print\"});page.append(builder.div)}}let activeService=null;let dialog=null;let overlayManager=null;let viewerApp={initialized:false};function renderPage(activeServiceOnEntry,pdfDocument,pageNumber,size,printResolution,optionalContentConfigPromise,printAnnotationStoragePromise){const scratchCanvas=activeService.scratchCanvas;const PRINT_UNITS=printResolution/PixelsPerInch.PDF;scratchCanvas.width=Math.floor(size.width*PRINT_UNITS);scratchCanvas.height=Math.floor(size.height*PRINT_UNITS);const ctx=scratchCanvas.getContext(\"2d\");ctx.save();ctx.fillStyle=\"rgb(255, 255, 255)\";ctx.fillRect(0,0,scratchCanvas.width,scratchCanvas.height);ctx.restore();return Promise.all([pdfDocument.getPage(pageNumber),printAnnotationStoragePromise]).then((function([pdfPage,printAnnotationStorage]){const renderContext={canvasContext:ctx,transform:[PRINT_UNITS,0,0,PRINT_UNITS,0,0],viewport:pdfPage.getViewport({scale:1,rotation:size.rotation}),intent:\"print\",annotationMode:AnnotationMode.ENABLE_STORAGE,optionalContentConfigPromise:optionalContentConfigPromise,printAnnotationStorage:printAnnotationStorage};const renderTask=pdfPage.render(renderContext);return renderTask.promise.catch((reason=>{if(!(reason instanceof RenderingCancelledException)){console.error(reason)}throw reason}))}))}class PDFPrintService{constructor({pdfDocument:pdfDocument,pagesOverview:pagesOverview,printContainer:printContainer,printResolution:printResolution,printAnnotationStoragePromise:printAnnotationStoragePromise=null}){this.pdfDocument=pdfDocument;this.pagesOverview=pagesOverview;this.printContainer=printContainer;this._printResolution=printResolution||150;this._optionalContentConfigPromise=pdfDocument.getOptionalContentConfig({intent:\"print\"});this._printAnnotationStoragePromise=printAnnotationStoragePromise||Promise.resolve();this.currentPage=-1;this.scratchCanvas=document.createElement(\"canvas\")}layout(){this.throwIfInactive();const body=document.querySelector(\"body\");body.setAttribute(\"data-pdfjsprinting\",true);const{width:width,height:height}=this.pagesOverview[0];const hasEqualPageSizes=this.pagesOverview.every((size=>size.width===width&&size.height===height));if(!hasEqualPageSizes){console.warn(\"Not all pages have the same size. The printed result may be incorrect!\")}this.pageStyleSheet=document.createElement(\"style\");this.pageStyleSheet.textContent=`@page { size: ${width}pt ${height}pt;}`;body.append(this.pageStyleSheet)}destroy(){if(activeService!==this){return}this.printContainer.textContent=\"\";const body=document.querySelector(\"body\");body.removeAttribute(\"data-pdfjsprinting\");if(this.pageStyleSheet){this.pageStyleSheet.remove();this.pageStyleSheet=null}this.scratchCanvas.width=this.scratchCanvas.height=0;this.scratchCanvas=null;activeService=null;ensureOverlay().then((function(){overlayManager.closeIfActive(dialog)}))}renderPages(){if(this.pdfDocument.isPureXfa){getXfaHtmlForPrinting(this.printContainer,this.pdfDocument);return Promise.resolve()}const pageCount=this.pagesOverview.length;const renderNextPage=(resolve,reject)=>{this.throwIfInactive();if(++this.currentPage>=pageCount){renderProgress(pageCount,pageCount);resolve();return}const index=this.currentPage;renderProgress(index,pageCount);renderPage(this,this.pdfDocument,index+1,this.pagesOverview[index],this._printResolution,this._optionalContentConfigPromise,this._printAnnotationStoragePromise).then(this.useRenderedPage.bind(this)).then((function(){renderNextPage(resolve,reject)}),reject)};return new Promise(renderNextPage)}useRenderedPage(){this.throwIfInactive();const img=document.createElement(\"img\");this.scratchCanvas.toBlob((blob=>{img.src=URL.createObjectURL(blob)}));const wrapper=document.createElement(\"div\");wrapper.className=\"printedPage\";wrapper.append(img);this.printContainer.append(wrapper);const{promise:promise,resolve:resolve,reject:reject}=Promise.withResolvers();img.onload=resolve;img.onerror=reject;promise.catch((()=>{})).then((()=>{URL.revokeObjectURL(img.src)}));return promise}performPrint(){this.throwIfInactive();return new Promise((resolve=>{setTimeout((()=>{if(!this.active){resolve();return}print.call(window);setTimeout(resolve,20)}),0)}))}get active(){return this===activeService}throwIfInactive(){if(!this.active){throw new Error(\"This print request was cancelled or completed.\")}}}const print=window.print;window.print=function(){if(activeService){console.warn(\"Ignored window.print() because of a pending print job.\");return}ensureOverlay().then((function(){if(activeService){overlayManager.open(dialog)}}));try{dispatchEvent(\"beforeprint\")}finally{if(!activeService){console.error(\"Expected print service to be initialized.\");ensureOverlay().then((function(){overlayManager.closeIfActive(dialog)}))}else{const activeServiceOnEntry=activeService;activeService.renderPages().then((()=>activeServiceOnEntry.performPrint())).catch((()=>{})).then((()=>{if(activeServiceOnEntry.active){abort()}}))}}};function dispatchEvent(eventType){const event=new CustomEvent(eventType,{bubbles:false,cancelable:false,detail:\"custom\"});window.dispatchEvent(event)}function abort(){if(activeService){activeService.destroy();dispatchEvent(\"afterprint\")}}function renderProgress(index,total){dialog||=document.getElementById(\"printServiceDialog\");const progress=Math.round(100*index/total);const progressBar=dialog.querySelector(\"progress\");const progressPerc=dialog.querySelector(\".relative-progress\");progressBar.value=progress;progressPerc.setAttribute(\"data-l10n-args\",JSON.stringify({progress:progress}))}window.addEventListener(\"keydown\",(function(event){if(event.keyCode===80&&(event.ctrlKey||event.metaKey)&&!event.altKey&&(!event.shiftKey||window.chrome||window.opera)){window.print();event.preventDefault();event.stopImmediatePropagation()}}),true);if(\"onbeforeprint\"in window){const stopPropagationIfNeeded=function(event){if(event.detail!==\"custom\"){event.stopImmediatePropagation()}};window.addEventListener(\"beforeprint\",stopPropagationIfNeeded);window.addEventListener(\"afterprint\",stopPropagationIfNeeded)}let overlayPromise;function ensureOverlay(){if(!overlayPromise){overlayManager=viewerApp.overlayManager;if(!overlayManager){throw new Error(\"The overlay manager has not yet been initialized.\")}dialog||=document.getElementById(\"printServiceDialog\");overlayPromise=overlayManager.register(dialog,true);document.getElementById(\"printCancel\").onclick=abort;dialog.addEventListener(\"close\",abort)}return overlayPromise}class PDFPrintServiceFactory{static initGlobals(app){viewerApp=app}static get supportsPrinting(){return shadow(this,\"supportsPrinting\",true)}static createPrintService(params){if(activeService){throw new Error(\"The print service is created and active.\")}return activeService=new PDFPrintService(params)}}const CLEANUP_TIMEOUT=3e4;class PDFRenderingQueue{constructor(){this.pdfViewer=null;this.pdfThumbnailViewer=null;this.onIdle=null;this.highestPriorityPage=null;this.idleTimeout=null;this.printing=false;this.isThumbnailViewEnabled=false;Object.defineProperty(this,\"hasViewer\",{value:()=>!!this.pdfViewer})}setViewer(pdfViewer){this.pdfViewer=pdfViewer}setThumbnailViewer(pdfThumbnailViewer){this.pdfThumbnailViewer=pdfThumbnailViewer}isHighestPriority(view){return this.highestPriorityPage===view.renderingId}renderHighestPriority(currentlyVisiblePages){if(this.idleTimeout){clearTimeout(this.idleTimeout);this.idleTimeout=null}if(this.pdfViewer.forceRendering(currentlyVisiblePages)){return}if(this.isThumbnailViewEnabled&&this.pdfThumbnailViewer?.forceRendering()){return}if(this.printing){return}if(this.onIdle){this.idleTimeout=setTimeout(this.onIdle.bind(this),CLEANUP_TIMEOUT)}}getHighestPriority(visible,views,scrolledDown,preRenderExtra=false,ignoreDetailViews=false){const visibleViews=visible.views,numVisible=visibleViews.length;if(numVisible===0){return null}for(let i=0;i<numVisible;i++){const view=visibleViews[i].view;if(!this.isViewFinished(view)){return view}}if(!ignoreDetailViews){for(let i=0;i<numVisible;i++){const{detailView:detailView}=visibleViews[i].view;if(detailView&&!this.isViewFinished(detailView)){return detailView}}}const firstId=visible.first.id,lastId=visible.last.id;if(lastId-firstId+1>numVisible){const visibleIds=visible.ids;for(let i=1,ii=lastId-firstId;i<ii;i++){const holeId=scrolledDown?firstId+i:lastId-i;if(visibleIds.has(holeId)){continue}const holeView=views[holeId-1];if(!this.isViewFinished(holeView)){return holeView}}}let preRenderIndex=scrolledDown?lastId:firstId-2;let preRenderView=views[preRenderIndex];if(preRenderView&&!this.isViewFinished(preRenderView)){return preRenderView}if(preRenderExtra){preRenderIndex+=scrolledDown?1:-1;preRenderView=views[preRenderIndex];if(preRenderView&&!this.isViewFinished(preRenderView)){return preRenderView}}return null}isViewFinished(view){return view.renderingState===RenderingStates.FINISHED}renderView(view){switch(view.renderingState){case RenderingStates.FINISHED:return false;case RenderingStates.PAUSED:this.highestPriorityPage=view.renderingId;view.resume();break;case RenderingStates.RUNNING:this.highestPriorityPage=view.renderingId;break;case RenderingStates.INITIAL:this.highestPriorityPage=view.renderingId;view.draw().finally((()=>{this.renderHighestPriority()})).catch((reason=>{if(reason instanceof RenderingCancelledException){return}console.error(\"renderView:\",reason)}));break}return true}}class PDFScriptingManager{#closeCapability=null;#destroyCapability=null;#docProperties=null;#eventAbortController=null;#eventBus=null;#externalServices=null;#pdfDocument=null;#pdfViewer=null;#ready=false;#scripting=null;#willPrintCapability=null;constructor({eventBus:eventBus,externalServices:externalServices=null,docProperties:docProperties=null}){this.#eventBus=eventBus;this.#externalServices=externalServices;this.#docProperties=docProperties}setViewer(pdfViewer){this.#pdfViewer=pdfViewer}async setDocument(pdfDocument){if(this.#pdfDocument){await this.#destroyScripting()}this.#pdfDocument=pdfDocument;if(!pdfDocument){return}const[objects,calculationOrder,docActions]=await Promise.all([pdfDocument.getFieldObjects(),pdfDocument.getCalculationOrderIds(),pdfDocument.getJSActions()]);if(!objects&&!docActions){await this.#destroyScripting();return}if(pdfDocument!==this.#pdfDocument){return}try{this.#scripting=this.#initScripting()}catch(error){console.error(\"setDocument:\",error);await this.#destroyScripting();return}const eventBus=this.#eventBus;this.#eventAbortController=new AbortController;const{signal:signal}=this.#eventAbortController;eventBus._on(\"updatefromsandbox\",(event=>{if(event?.source===window){this.#updateFromSandbox(event.detail)}}),{signal:signal});eventBus._on(\"dispatcheventinsandbox\",(event=>{this.#scripting?.dispatchEventInSandbox(event.detail)}),{signal:signal});eventBus._on(\"pagechanging\",(({pageNumber:pageNumber,previous:previous})=>{if(pageNumber===previous){return}this.#dispatchPageClose(previous);this.#dispatchPageOpen(pageNumber)}),{signal:signal});eventBus._on(\"pagerendered\",(({pageNumber:pageNumber})=>{if(!this._pageOpenPending.has(pageNumber)){return}if(pageNumber!==this.#pdfViewer.currentPageNumber){return}this.#dispatchPageOpen(pageNumber)}),{signal:signal});eventBus._on(\"pagesdestroy\",(async()=>{await this.#dispatchPageClose(this.#pdfViewer.currentPageNumber);await(this.#scripting?.dispatchEventInSandbox({id:\"doc\",name:\"WillClose\"}));this.#closeCapability?.resolve()}),{signal:signal});try{const docProperties=await this.#docProperties(pdfDocument);if(pdfDocument!==this.#pdfDocument){return}await this.#scripting.createSandbox({objects:objects,calculationOrder:calculationOrder,appInfo:{platform:navigator.platform,language:navigator.language},docInfo:{...docProperties,actions:docActions}});eventBus.dispatch(\"sandboxcreated\",{source:this})}catch(error){console.error(\"setDocument:\",error);await this.#destroyScripting();return}await(this.#scripting?.dispatchEventInSandbox({id:\"doc\",name:\"Open\"}));await this.#dispatchPageOpen(this.#pdfViewer.currentPageNumber,true);Promise.resolve().then((()=>{if(pdfDocument===this.#pdfDocument){this.#ready=true}}))}async dispatchWillSave(){return this.#scripting?.dispatchEventInSandbox({id:\"doc\",name:\"WillSave\"})}async dispatchDidSave(){return this.#scripting?.dispatchEventInSandbox({id:\"doc\",name:\"DidSave\"})}async dispatchWillPrint(){if(!this.#scripting){return}await(this.#willPrintCapability?.promise);this.#willPrintCapability=Promise.withResolvers();try{await this.#scripting.dispatchEventInSandbox({id:\"doc\",name:\"WillPrint\"})}catch(ex){this.#willPrintCapability.resolve();this.#willPrintCapability=null;throw ex}await this.#willPrintCapability.promise}async dispatchDidPrint(){return this.#scripting?.dispatchEventInSandbox({id:\"doc\",name:\"DidPrint\"})}get destroyPromise(){return this.#destroyCapability?.promise||null}get ready(){return this.#ready}get _pageOpenPending(){return shadow(this,\"_pageOpenPending\",new Set)}get _visitedPages(){return shadow(this,\"_visitedPages\",new Map)}async#updateFromSandbox(detail){const pdfViewer=this.#pdfViewer;const isInPresentationMode=pdfViewer.isInPresentationMode||pdfViewer.isChangingPresentationMode;const{id:id,siblings:siblings,command:command,value:value}=detail;if(!id){switch(command){case\"clear\":console.clear();break;case\"error\":console.error(value);break;case\"layout\":if(!isInPresentationMode){const modes=apiPageLayoutToViewerModes(value);pdfViewer.spreadMode=modes.spreadMode}break;case\"page-num\":pdfViewer.currentPageNumber=value+1;break;case\"print\":await pdfViewer.pagesPromise;this.#eventBus.dispatch(\"print\",{source:this});break;case\"println\":console.log(value);break;case\"zoom\":if(!isInPresentationMode){pdfViewer.currentScaleValue=value}break;case\"SaveAs\":this.#eventBus.dispatch(\"download\",{source:this});break;case\"FirstPage\":pdfViewer.currentPageNumber=1;break;case\"LastPage\":pdfViewer.currentPageNumber=pdfViewer.pagesCount;break;case\"NextPage\":pdfViewer.nextPage();break;case\"PrevPage\":pdfViewer.previousPage();break;case\"ZoomViewIn\":if(!isInPresentationMode){pdfViewer.increaseScale()}break;case\"ZoomViewOut\":if(!isInPresentationMode){pdfViewer.decreaseScale()}break;case\"WillPrintFinished\":this.#willPrintCapability?.resolve();this.#willPrintCapability=null;break}return}if(isInPresentationMode&&detail.focus){return}delete detail.id;delete detail.siblings;const ids=siblings?[id,...siblings]:[id];for(const elementId of ids){const element=document.querySelector(`[data-element-id=\"${elementId}\"]`);if(element){element.dispatchEvent(new CustomEvent(\"updatefromsandbox\",{detail:detail}))}else{this.#pdfDocument?.annotationStorage.setValue(elementId,detail)}}}async#dispatchPageOpen(pageNumber,initialize=false){const pdfDocument=this.#pdfDocument,visitedPages=this._visitedPages;if(initialize){this.#closeCapability=Promise.withResolvers()}if(!this.#closeCapability){return}const pageView=this.#pdfViewer.getPageView(pageNumber-1);if(pageView?.renderingState!==RenderingStates.FINISHED){this._pageOpenPending.add(pageNumber);return}this._pageOpenPending.delete(pageNumber);const actionsPromise=(async()=>{const actions=await(!visitedPages.has(pageNumber)?pageView.pdfPage?.getJSActions():null);if(pdfDocument!==this.#pdfDocument){return}await(this.#scripting?.dispatchEventInSandbox({id:\"page\",name:\"PageOpen\",pageNumber:pageNumber,actions:actions}))})();visitedPages.set(pageNumber,actionsPromise)}async#dispatchPageClose(pageNumber){const pdfDocument=this.#pdfDocument,visitedPages=this._visitedPages;if(!this.#closeCapability){return}if(this._pageOpenPending.has(pageNumber)){return}const actionsPromise=visitedPages.get(pageNumber);if(!actionsPromise){return}visitedPages.set(pageNumber,null);await actionsPromise;if(pdfDocument!==this.#pdfDocument){return}await(this.#scripting?.dispatchEventInSandbox({id:\"page\",name:\"PageClose\",pageNumber:pageNumber}))}#initScripting(){this.#destroyCapability=Promise.withResolvers();if(this.#scripting){throw new Error(\"#initScripting: Scripting already exists.\")}return this.#externalServices.createScripting()}async#destroyScripting(){if(!this.#scripting){this.#pdfDocument=null;this.#destroyCapability?.resolve();return}if(this.#closeCapability){await Promise.race([this.#closeCapability.promise,new Promise((resolve=>{setTimeout(resolve,1e3)}))]).catch((()=>{}));this.#closeCapability=null}this.#pdfDocument=null;try{await this.#scripting.destroySandbox()}catch{}this.#willPrintCapability?.reject(new Error(\"Scripting destroyed.\"));this.#willPrintCapability=null;this.#eventAbortController?.abort();this.#eventAbortController=null;this._pageOpenPending.clear();this._visitedPages.clear();this.#scripting=null;this.#ready=false;this.#destroyCapability?.resolve()}}const SIDEBAR_WIDTH_VAR=\"--sidebar-width\";const SIDEBAR_MIN_WIDTH=200;const SIDEBAR_RESIZING_CLASS=\"sidebarResizing\";const UI_NOTIFICATION_CLASS=\"pdfSidebarNotification\";class PDFSidebar{#isRTL=false;#mouseAC=null;#outerContainerWidth=null;#width=null;constructor({elements:elements,eventBus:eventBus,l10n:l10n}){this.isOpen=false;this.active=SidebarView.THUMBS;this.isInitialViewSet=false;this.isInitialEventDispatched=false;this.onToggled=null;this.onUpdateThumbnails=null;this.outerContainer=elements.outerContainer;this.sidebarContainer=elements.sidebarContainer;this.toggleButton=elements.toggleButton;this.resizer=elements.resizer;this.thumbnailButton=elements.thumbnailButton;this.outlineButton=elements.outlineButton;this.attachmentsButton=elements.attachmentsButton;this.layersButton=elements.layersButton;this.thumbnailView=elements.thumbnailView;this.outlineView=elements.outlineView;this.attachmentsView=elements.attachmentsView;this.layersView=elements.layersView;this._currentOutlineItemButton=elements.currentOutlineItemButton;this.eventBus=eventBus;this.#isRTL=l10n.getDirection()===\"rtl\";this.#addEventListeners()}reset(){this.isInitialViewSet=false;this.isInitialEventDispatched=false;this.#hideUINotification(true);this.switchView(SidebarView.THUMBS);this.outlineButton.disabled=false;this.attachmentsButton.disabled=false;this.layersButton.disabled=false;this._currentOutlineItemButton.disabled=true}get visibleView(){return this.isOpen?this.active:SidebarView.NONE}setInitialView(view=SidebarView.NONE){if(this.isInitialViewSet){return}this.isInitialViewSet=true;if(view===SidebarView.NONE||view===SidebarView.UNKNOWN){this.#dispatchEvent();return}this.switchView(view,true);if(!this.isInitialEventDispatched){this.#dispatchEvent()}}switchView(view,forceOpen=false){const isViewChanged=view!==this.active;let forceRendering=false;switch(view){case SidebarView.NONE:if(this.isOpen){this.close()}return;case SidebarView.THUMBS:if(this.isOpen&&isViewChanged){forceRendering=true}break;case SidebarView.OUTLINE:if(this.outlineButton.disabled){return}break;case SidebarView.ATTACHMENTS:if(this.attachmentsButton.disabled){return}break;case SidebarView.LAYERS:if(this.layersButton.disabled){return}break;default:console.error(`PDFSidebar.switchView: \"${view}\" is not a valid view.`);return}this.active=view;toggleCheckedBtn(this.thumbnailButton,view===SidebarView.THUMBS,this.thumbnailView);toggleCheckedBtn(this.outlineButton,view===SidebarView.OUTLINE,this.outlineView);toggleCheckedBtn(this.attachmentsButton,view===SidebarView.ATTACHMENTS,this.attachmentsView);toggleCheckedBtn(this.layersButton,view===SidebarView.LAYERS,this.layersView);if(forceOpen&&!this.isOpen){this.open();return}if(forceRendering){this.onUpdateThumbnails();this.onToggled()}if(isViewChanged){this.#dispatchEvent()}}open(){if(this.isOpen){return}this.isOpen=true;toggleExpandedBtn(this.toggleButton,true);this.outerContainer.classList.add(\"sidebarMoving\",\"sidebarOpen\");if(this.active===SidebarView.THUMBS){this.onUpdateThumbnails()}this.onToggled();this.#dispatchEvent();this.#hideUINotification()}close(evt=null){if(!this.isOpen){return}this.isOpen=false;toggleExpandedBtn(this.toggleButton,false);this.outerContainer.classList.add(\"sidebarMoving\");this.outerContainer.classList.remove(\"sidebarOpen\");this.onToggled();this.#dispatchEvent();if(evt?.detail>0){this.toggleButton.blur()}}toggle(evt=null){if(this.isOpen){this.close(evt)}else{this.open()}}#dispatchEvent(){if(this.isInitialViewSet){this.isInitialEventDispatched||=true}this.eventBus.dispatch(\"sidebarviewchanged\",{source:this,view:this.visibleView})}#showUINotification(){this.toggleButton.setAttribute(\"data-l10n-id\",\"pdfjs-toggle-sidebar-notification-button\");if(!this.isOpen){this.toggleButton.classList.add(UI_NOTIFICATION_CLASS)}}#hideUINotification(reset=false){if(this.isOpen||reset){this.toggleButton.classList.remove(UI_NOTIFICATION_CLASS)}if(reset){this.toggleButton.setAttribute(\"data-l10n-id\",\"pdfjs-toggle-sidebar-button\")}}#addEventListeners(){const{eventBus:eventBus,outerContainer:outerContainer}=this;this.sidebarContainer.addEventListener(\"transitionend\",(evt=>{if(evt.target===this.sidebarContainer){outerContainer.classList.remove(\"sidebarMoving\");eventBus.dispatch(\"resize\",{source:this})}}));this.toggleButton.addEventListener(\"click\",(evt=>{this.toggle(evt)}));this.thumbnailButton.addEventListener(\"click\",(()=>{this.switchView(SidebarView.THUMBS)}));this.outlineButton.addEventListener(\"click\",(()=>{this.switchView(SidebarView.OUTLINE)}));this.outlineButton.addEventListener(\"dblclick\",(()=>{eventBus.dispatch(\"toggleoutlinetree\",{source:this})}));this.attachmentsButton.addEventListener(\"click\",(()=>{this.switchView(SidebarView.ATTACHMENTS)}));this.layersButton.addEventListener(\"click\",(()=>{this.switchView(SidebarView.LAYERS)}));this.layersButton.addEventListener(\"dblclick\",(()=>{eventBus.dispatch(\"resetlayers\",{source:this})}));this._currentOutlineItemButton.addEventListener(\"click\",(()=>{eventBus.dispatch(\"currentoutlineitem\",{source:this})}));const onTreeLoaded=(count,button,view)=>{button.disabled=!count;if(count){this.#showUINotification()}else if(this.active===view){this.switchView(SidebarView.THUMBS)}};eventBus._on(\"outlineloaded\",(evt=>{onTreeLoaded(evt.outlineCount,this.outlineButton,SidebarView.OUTLINE);evt.currentOutlineItemPromise.then((enabled=>{if(!this.isInitialViewSet){return}this._currentOutlineItemButton.disabled=!enabled}))}));eventBus._on(\"attachmentsloaded\",(evt=>{onTreeLoaded(evt.attachmentsCount,this.attachmentsButton,SidebarView.ATTACHMENTS)}));eventBus._on(\"layersloaded\",(evt=>{onTreeLoaded(evt.layersCount,this.layersButton,SidebarView.LAYERS)}));eventBus._on(\"presentationmodechanged\",(evt=>{if(evt.state===PresentationModeState.NORMAL&&this.visibleView===SidebarView.THUMBS){this.onUpdateThumbnails()}}));this.resizer.addEventListener(\"mousedown\",(evt=>{if(evt.button!==0){return}outerContainer.classList.add(SIDEBAR_RESIZING_CLASS);this.#mouseAC=new AbortController;const opts={signal:this.#mouseAC.signal};window.addEventListener(\"mousemove\",this.#mouseMove.bind(this),opts);window.addEventListener(\"mouseup\",this.#mouseUp.bind(this),opts);window.addEventListener(\"blur\",this.#mouseUp.bind(this),opts)}));eventBus._on(\"resize\",(evt=>{if(evt.source!==window){return}this.#outerContainerWidth=null;if(!this.#width){return}if(!this.isOpen){this.#updateWidth(this.#width);return}outerContainer.classList.add(SIDEBAR_RESIZING_CLASS);const updated=this.#updateWidth(this.#width);Promise.resolve().then((()=>{outerContainer.classList.remove(SIDEBAR_RESIZING_CLASS);if(updated){eventBus.dispatch(\"resize\",{source:this})}}))}))}get outerContainerWidth(){return this.#outerContainerWidth||=this.outerContainer.clientWidth}#updateWidth(width=0){const maxWidth=Math.floor(this.outerContainerWidth/2);if(width>maxWidth){width=maxWidth}if(width<SIDEBAR_MIN_WIDTH){width=SIDEBAR_MIN_WIDTH}if(width===this.#width){return false}this.#width=width;docStyle.setProperty(SIDEBAR_WIDTH_VAR,`${width}px`);return true}#mouseMove(evt){let width=evt.clientX;if(this.#isRTL){width=this.outerContainerWidth-width}this.#updateWidth(width)}#mouseUp(evt){this.outerContainer.classList.remove(SIDEBAR_RESIZING_CLASS);this.eventBus.dispatch(\"resize\",{source:this});this.#mouseAC?.abort();this.#mouseAC=null}}const DRAW_UPSCALE_FACTOR=2;const MAX_NUM_SCALING_STEPS=3;const THUMBNAIL_WIDTH=98;function zeroCanvas(c){c.width=0;c.height=0}class TempImageFactory{static#tempCanvas=null;static getCanvas(width,height){const tempCanvas=this.#tempCanvas||=document.createElement(\"canvas\");tempCanvas.width=width;tempCanvas.height=height;const ctx=tempCanvas.getContext(\"2d\",{alpha:false});ctx.save();ctx.fillStyle=\"rgb(255, 255, 255)\";ctx.fillRect(0,0,width,height);ctx.restore();return[tempCanvas,tempCanvas.getContext(\"2d\")]}static destroyCanvas(){if(this.#tempCanvas){zeroCanvas(this.#tempCanvas)}this.#tempCanvas=null}}class PDFThumbnailView{constructor({container:container,eventBus:eventBus,id:id,defaultViewport:defaultViewport,optionalContentConfigPromise:optionalContentConfigPromise,linkService:linkService,renderingQueue:renderingQueue,maxCanvasPixels:maxCanvasPixels,maxCanvasDim:maxCanvasDim,pageColors:pageColors,enableHWA:enableHWA}){this.id=id;this.renderingId=\"thumbnail\"+id;this.pageLabel=null;this.pdfPage=null;this.rotation=0;this.viewport=defaultViewport;this.pdfPageRotate=defaultViewport.rotation;this._optionalContentConfigPromise=optionalContentConfigPromise||null;this.maxCanvasPixels=maxCanvasPixels??AppOptions.get(\"maxCanvasPixels\");this.maxCanvasDim=maxCanvasDim||AppOptions.get(\"maxCanvasDim\");this.pageColors=pageColors||null;this.enableHWA=enableHWA||false;this.eventBus=eventBus;this.linkService=linkService;this.renderingQueue=renderingQueue;this.renderTask=null;this.renderingState=RenderingStates.INITIAL;this.resume=null;const anchor=document.createElement(\"a\");anchor.href=linkService.getAnchorUrl(\"#page=\"+id);anchor.setAttribute(\"data-l10n-id\",\"pdfjs-thumb-page-title\");anchor.setAttribute(\"data-l10n-args\",this.#pageL10nArgs);anchor.onclick=function(){linkService.goToPage(id);return false};this.anchor=anchor;const div=document.createElement(\"div\");div.className=\"thumbnail\";div.setAttribute(\"data-page-number\",this.id);this.div=div;this.#updateDims();const img=document.createElement(\"div\");img.className=\"thumbnailImage\";this._placeholderImg=img;div.append(img);anchor.append(div);container.append(anchor)}#updateDims(){const{width:width,height:height}=this.viewport;const ratio=width/height;this.canvasWidth=THUMBNAIL_WIDTH;this.canvasHeight=this.canvasWidth/ratio|0;this.scale=this.canvasWidth/width;const{style:style}=this.div;style.setProperty(\"--thumbnail-width\",`${this.canvasWidth}px`);style.setProperty(\"--thumbnail-height\",`${this.canvasHeight}px`)}setPdfPage(pdfPage){this.pdfPage=pdfPage;this.pdfPageRotate=pdfPage.rotate;const totalRotation=(this.rotation+this.pdfPageRotate)%360;this.viewport=pdfPage.getViewport({scale:1,rotation:totalRotation});this.reset()}reset(){this.cancelRendering();this.renderingState=RenderingStates.INITIAL;this.div.removeAttribute(\"data-loaded\");this.image?.replaceWith(this._placeholderImg);this.#updateDims();if(this.image){this.image.removeAttribute(\"src\");delete this.image}}update({rotation:rotation=null}){if(typeof rotation===\"number\"){this.rotation=rotation}const totalRotation=(this.rotation+this.pdfPageRotate)%360;this.viewport=this.viewport.clone({scale:1,rotation:totalRotation});this.reset()}cancelRendering(){if(this.renderTask){this.renderTask.cancel();this.renderTask=null}this.resume=null}#getPageDrawContext(upscaleFactor=1,enableHWA=this.enableHWA){const canvas=document.createElement(\"canvas\");const ctx=canvas.getContext(\"2d\",{alpha:false,willReadFrequently:!enableHWA});const outputScale=new OutputScale;const width=upscaleFactor*this.canvasWidth,height=upscaleFactor*this.canvasHeight;outputScale.limitCanvas(width,height,this.maxCanvasPixels,this.maxCanvasDim);canvas.width=width*outputScale.sx|0;canvas.height=height*outputScale.sy|0;const transform=outputScale.scaled?[outputScale.sx,0,0,outputScale.sy,0,0]:null;return{ctx:ctx,canvas:canvas,transform:transform}}#convertCanvasToImage(canvas){if(this.renderingState!==RenderingStates.FINISHED){throw new Error(\"#convertCanvasToImage: Rendering has not finished.\")}const reducedCanvas=this.#reduceImage(canvas);const image=document.createElement(\"img\");image.className=\"thumbnailImage\";image.setAttribute(\"data-l10n-id\",\"pdfjs-thumb-page-canvas\");image.setAttribute(\"data-l10n-args\",this.#pageL10nArgs);image.src=reducedCanvas.toDataURL();this.image=image;this.div.setAttribute(\"data-loaded\",true);this._placeholderImg.replaceWith(image);zeroCanvas(reducedCanvas)}async draw(){if(this.renderingState!==RenderingStates.INITIAL){console.error(\"Must be in new state before drawing\");return}const{pageColors:pageColors,pdfPage:pdfPage}=this;if(!pdfPage){this.renderingState=RenderingStates.FINISHED;throw new Error(\"pdfPage is not loaded\")}this.renderingState=RenderingStates.RUNNING;const{ctx:ctx,canvas:canvas,transform:transform}=this.#getPageDrawContext(DRAW_UPSCALE_FACTOR);const drawViewport=this.viewport.clone({scale:DRAW_UPSCALE_FACTOR*this.scale});const renderContinueCallback=cont=>{if(!this.renderingQueue.isHighestPriority(this)){this.renderingState=RenderingStates.PAUSED;this.resume=()=>{this.renderingState=RenderingStates.RUNNING;cont()};return}cont()};const renderContext={canvasContext:ctx,transform:transform,viewport:drawViewport,optionalContentConfigPromise:this._optionalContentConfigPromise,pageColors:pageColors};const renderTask=this.renderTask=pdfPage.render(renderContext);renderTask.onContinue=renderContinueCallback;let error=null;try{await renderTask.promise}catch(e){if(e instanceof RenderingCancelledException){zeroCanvas(canvas);return}error=e}finally{if(renderTask===this.renderTask){this.renderTask=null}}this.renderingState=RenderingStates.FINISHED;this.#convertCanvasToImage(canvas);zeroCanvas(canvas);this.eventBus.dispatch(\"thumbnailrendered\",{source:this,pageNumber:this.id,pdfPage:pdfPage});if(error){throw error}}setImage(pageView){if(this.renderingState!==RenderingStates.INITIAL){return}const{thumbnailCanvas:canvas,pdfPage:pdfPage,scale:scale}=pageView;if(!canvas){return}if(!this.pdfPage){this.setPdfPage(pdfPage)}if(scale<this.scale){return}this.renderingState=RenderingStates.FINISHED;this.#convertCanvasToImage(canvas)}#getReducedImageDims(canvas){const width=canvas.width<<MAX_NUM_SCALING_STEPS,height=canvas.height<<MAX_NUM_SCALING_STEPS;const outputScale=new OutputScale;outputScale.sx=outputScale.sy=1;outputScale.limitCanvas(width,height,this.maxCanvasPixels,this.maxCanvasDim);return[width*outputScale.sx|0,height*outputScale.sy|0]}#reduceImage(img){const{ctx:ctx,canvas:canvas}=this.#getPageDrawContext(1,true);if(img.width<=2*canvas.width){ctx.drawImage(img,0,0,img.width,img.height,0,0,canvas.width,canvas.height);return canvas}let[reducedWidth,reducedHeight]=this.#getReducedImageDims(canvas);const[reducedImage,reducedImageCtx]=TempImageFactory.getCanvas(reducedWidth,reducedHeight);while(reducedWidth>img.width||reducedHeight>img.height){reducedWidth>>=1;reducedHeight>>=1}reducedImageCtx.drawImage(img,0,0,img.width,img.height,0,0,reducedWidth,reducedHeight);while(reducedWidth>2*canvas.width){reducedImageCtx.drawImage(reducedImage,0,0,reducedWidth,reducedHeight,0,0,reducedWidth>>1,reducedHeight>>1);reducedWidth>>=1;reducedHeight>>=1}ctx.drawImage(reducedImage,0,0,reducedWidth,reducedHeight,0,0,canvas.width,canvas.height);return canvas}get#pageL10nArgs(){return JSON.stringify({page:this.pageLabel??this.id})}setPageLabel(label){this.pageLabel=typeof label===\"string\"?label:null;this.anchor.setAttribute(\"data-l10n-args\",this.#pageL10nArgs);if(this.renderingState!==RenderingStates.FINISHED){return}this.image?.setAttribute(\"data-l10n-args\",this.#pageL10nArgs)}}const THUMBNAIL_SCROLL_MARGIN=-19;const THUMBNAIL_SELECTED_CLASS=\"selected\";class PDFThumbnailViewer{constructor({container:container,eventBus:eventBus,linkService:linkService,renderingQueue:renderingQueue,maxCanvasPixels:maxCanvasPixels,maxCanvasDim:maxCanvasDim,pageColors:pageColors,abortSignal:abortSignal,enableHWA:enableHWA}){this.container=container;this.eventBus=eventBus;this.linkService=linkService;this.renderingQueue=renderingQueue;this.maxCanvasPixels=maxCanvasPixels;this.maxCanvasDim=maxCanvasDim;this.pageColors=pageColors||null;this.enableHWA=enableHWA||false;this.scroll=watchScroll(this.container,this.#scrollUpdated.bind(this),abortSignal);this.#resetView()}#scrollUpdated(){this.renderingQueue.renderHighestPriority()}getThumbnail(index){return this._thumbnails[index]}#getVisibleThumbs(){return getVisibleElements({scrollEl:this.container,views:this._thumbnails})}scrollThumbnailIntoView(pageNumber){if(!this.pdfDocument){return}const thumbnailView=this._thumbnails[pageNumber-1];if(!thumbnailView){console.error('scrollThumbnailIntoView: Invalid \"pageNumber\" parameter.');return}if(pageNumber!==this._currentPageNumber){const prevThumbnailView=this._thumbnails[this._currentPageNumber-1];prevThumbnailView.div.classList.remove(THUMBNAIL_SELECTED_CLASS);thumbnailView.div.classList.add(THUMBNAIL_SELECTED_CLASS)}const{first:first,last:last,views:views}=this.#getVisibleThumbs();if(views.length>0){let shouldScroll=false;if(pageNumber<=first.id||pageNumber>=last.id){shouldScroll=true}else{for(const{id:id,percent:percent}of views){if(id!==pageNumber){continue}shouldScroll=percent<100;break}}if(shouldScroll){scrollIntoView(thumbnailView.div,{top:THUMBNAIL_SCROLL_MARGIN})}}this._currentPageNumber=pageNumber}get pagesRotation(){return this._pagesRotation}set pagesRotation(rotation){if(!isValidRotation(rotation)){throw new Error(\"Invalid thumbnails rotation angle.\")}if(!this.pdfDocument){return}if(this._pagesRotation===rotation){return}this._pagesRotation=rotation;const updateArgs={rotation:rotation};for(const thumbnail of this._thumbnails){thumbnail.update(updateArgs)}}cleanup(){for(const thumbnail of this._thumbnails){if(thumbnail.renderingState!==RenderingStates.FINISHED){thumbnail.reset()}}TempImageFactory.destroyCanvas()}#resetView(){this._thumbnails=[];this._currentPageNumber=1;this._pageLabels=null;this._pagesRotation=0;this.container.textContent=\"\"}setDocument(pdfDocument){if(this.pdfDocument){this.#cancelRendering();this.#resetView()}this.pdfDocument=pdfDocument;if(!pdfDocument){return}const firstPagePromise=pdfDocument.getPage(1);const optionalContentConfigPromise=pdfDocument.getOptionalContentConfig({intent:\"display\"});firstPagePromise.then((firstPdfPage=>{const pagesCount=pdfDocument.numPages;const viewport=firstPdfPage.getViewport({scale:1});for(let pageNum=1;pageNum<=pagesCount;++pageNum){const thumbnail=new PDFThumbnailView({container:this.container,eventBus:this.eventBus,id:pageNum,defaultViewport:viewport.clone(),optionalContentConfigPromise:optionalContentConfigPromise,linkService:this.linkService,renderingQueue:this.renderingQueue,maxCanvasPixels:this.maxCanvasPixels,maxCanvasDim:this.maxCanvasDim,pageColors:this.pageColors,enableHWA:this.enableHWA});this._thumbnails.push(thumbnail)}this._thumbnails[0]?.setPdfPage(firstPdfPage);const thumbnailView=this._thumbnails[this._currentPageNumber-1];thumbnailView.div.classList.add(THUMBNAIL_SELECTED_CLASS)})).catch((reason=>{console.error(\"Unable to initialize thumbnail viewer\",reason)}))}#cancelRendering(){for(const thumbnail of this._thumbnails){thumbnail.cancelRendering()}}setPageLabels(labels){if(!this.pdfDocument){return}if(!labels){this._pageLabels=null}else if(!(Array.isArray(labels)&&this.pdfDocument.numPages===labels.length)){this._pageLabels=null;console.error(\"PDFThumbnailViewer_setPageLabels: Invalid page labels.\")}else{this._pageLabels=labels}for(let i=0,ii=this._thumbnails.length;i<ii;i++){this._thumbnails[i].setPageLabel(this._pageLabels?.[i]??null)}}async#ensurePdfPageLoaded(thumbView){if(thumbView.pdfPage){return thumbView.pdfPage}try{const pdfPage=await this.pdfDocument.getPage(thumbView.id);if(!thumbView.pdfPage){thumbView.setPdfPage(pdfPage)}return pdfPage}catch(reason){console.error(\"Unable to get page for thumb view\",reason);return null}}#getScrollAhead(visible){if(visible.first?.id===1){return true}else if(visible.last?.id===this._thumbnails.length){return false}return this.scroll.down}forceRendering(){const visibleThumbs=this.#getVisibleThumbs();const scrollAhead=this.#getScrollAhead(visibleThumbs);const thumbView=this.renderingQueue.getHighestPriority(visibleThumbs,this._thumbnails,scrollAhead,false,true);if(thumbView){this.#ensurePdfPageLoaded(thumbView).then((()=>{this.renderingQueue.renderView(thumbView)}));return true}return false}}class AnnotationEditorLayerBuilder{#annotationLayer=null;#drawLayer=null;#onAppend=null;#structTreeLayer=null;#textLayer=null;#uiManager;constructor(options){this.pdfPage=options.pdfPage;this.accessibilityManager=options.accessibilityManager;this.l10n=options.l10n;this.l10n||=new genericl10n_GenericL10n;this.annotationEditorLayer=null;this.div=null;this._cancelled=false;this.#uiManager=options.uiManager;this.#annotationLayer=options.annotationLayer||null;this.#textLayer=options.textLayer||null;this.#drawLayer=options.drawLayer||null;this.#onAppend=options.onAppend||null;this.#structTreeLayer=options.structTreeLayer||null}async render({viewport:viewport,intent:intent=\"display\"}){if(intent!==\"display\"){return}if(this._cancelled){return}const clonedViewport=viewport.clone({dontFlip:true});if(this.div){this.annotationEditorLayer.update({viewport:clonedViewport});this.show();return}const div=this.div=document.createElement(\"div\");div.className=\"annotationEditorLayer\";div.hidden=true;div.dir=this.#uiManager.direction;this.#onAppend?.(div);this.annotationEditorLayer=new AnnotationEditorLayer({uiManager:this.#uiManager,div:div,structTreeLayer:this.#structTreeLayer,accessibilityManager:this.accessibilityManager,pageIndex:this.pdfPage.pageNumber-1,l10n:this.l10n,viewport:clonedViewport,annotationLayer:this.#annotationLayer,textLayer:this.#textLayer,drawLayer:this.#drawLayer});const parameters={viewport:clonedViewport,div:div,annotations:null,intent:intent};this.annotationEditorLayer.render(parameters);this.show()}cancel(){this._cancelled=true;if(!this.div){return}this.annotationEditorLayer.destroy()}hide(){if(!this.div){return}this.annotationEditorLayer.pause(true);this.div.hidden=true}show(){if(!this.div||this.annotationEditorLayer.isInvisible){return}this.div.hidden=false;this.annotationEditorLayer.pause(false)}}class AnnotationLayerBuilder{#annotations=null;#externalHide=false;#onAppend=null;#eventAbortController=null;#linksInjected=false;constructor({pdfPage:pdfPage,linkService:linkService,downloadManager:downloadManager,annotationStorage:annotationStorage=null,imageResourcesPath:imageResourcesPath=\"\",renderForms:renderForms=true,enableScripting:enableScripting=false,hasJSActionsPromise:hasJSActionsPromise=null,fieldObjectsPromise:fieldObjectsPromise=null,annotationCanvasMap:annotationCanvasMap=null,accessibilityManager:accessibilityManager=null,annotationEditorUIManager:annotationEditorUIManager=null,onAppend:onAppend=null}){this.pdfPage=pdfPage;this.linkService=linkService;this.downloadManager=downloadManager;this.imageResourcesPath=imageResourcesPath;this.renderForms=renderForms;this.annotationStorage=annotationStorage;this.enableScripting=enableScripting;this._hasJSActionsPromise=hasJSActionsPromise||Promise.resolve(false);this._fieldObjectsPromise=fieldObjectsPromise||Promise.resolve(null);this._annotationCanvasMap=annotationCanvasMap;this._accessibilityManager=accessibilityManager;this._annotationEditorUIManager=annotationEditorUIManager;this.#onAppend=onAppend;this.annotationLayer=null;this.div=null;this._cancelled=false;this._eventBus=linkService.eventBus}async render({viewport:viewport,intent:intent=\"display\",structTreeLayer:structTreeLayer=null}){if(this.div){if(this._cancelled||!this.annotationLayer){return}this.annotationLayer.update({viewport:viewport.clone({dontFlip:true})});return}const[annotations,hasJSActions,fieldObjects]=await Promise.all([this.pdfPage.getAnnotations({intent:intent}),this._hasJSActionsPromise,this._fieldObjectsPromise]);if(this._cancelled){return}const div=this.div=document.createElement(\"div\");div.className=\"annotationLayer\";this.#onAppend?.(div);if(annotations.length===0){this.#annotations=annotations;this.hide(true);return}this.#initAnnotationLayer(viewport,structTreeLayer);await this.annotationLayer.render({annotations:annotations,imageResourcesPath:this.imageResourcesPath,renderForms:this.renderForms,linkService:this.linkService,downloadManager:this.downloadManager,annotationStorage:this.annotationStorage,enableScripting:this.enableScripting,hasJSActions:hasJSActions,fieldObjects:fieldObjects});this.#annotations=annotations;if(this.linkService.isInPresentationMode){this.#updatePresentationModeState(PresentationModeState.FULLSCREEN)}if(!this.#eventAbortController){this.#eventAbortController=new AbortController;this._eventBus?._on(\"presentationmodechanged\",(evt=>{this.#updatePresentationModeState(evt.state)}),{signal:this.#eventAbortController.signal})}}#initAnnotationLayer(viewport,structTreeLayer){this.annotationLayer=new AnnotationLayer({div:this.div,accessibilityManager:this._accessibilityManager,annotationCanvasMap:this._annotationCanvasMap,annotationEditorUIManager:this._annotationEditorUIManager,page:this.pdfPage,viewport:viewport.clone({dontFlip:true}),structTreeLayer:structTreeLayer})}cancel(){this._cancelled=true;this.#eventAbortController?.abort();this.#eventAbortController=null}hide(internal=false){this.#externalHide=!internal;if(!this.div){return}this.div.hidden=true}hasEditableAnnotations(){return!!this.annotationLayer?.hasEditableAnnotations()}async injectLinkAnnotations({inferredLinks:inferredLinks,viewport:viewport,structTreeLayer:structTreeLayer=null}){if(this.#annotations===null){throw new Error(\"`render` method must be called before `injectLinkAnnotations`.\")}if(this._cancelled||this.#linksInjected){return}this.#linksInjected=true;const newLinks=this.#annotations.length?this.#checkInferredLinks(inferredLinks):inferredLinks;if(!newLinks.length){return}if(!this.annotationLayer){this.#initAnnotationLayer(viewport,structTreeLayer);setLayerDimensions(this.div,viewport)}await this.annotationLayer.addLinkAnnotations(newLinks,this.linkService);if(!this.#externalHide){this.div.hidden=false}}#updatePresentationModeState(state){if(!this.div){return}let disableFormElements=false;switch(state){case PresentationModeState.FULLSCREEN:disableFormElements=true;break;case PresentationModeState.NORMAL:break;default:return}for(const section of this.div.childNodes){if(section.hasAttribute(\"data-internal-link\")){continue}section.inert=disableFormElements}}#checkInferredLinks(inferredLinks){function annotationRects(annot){if(!annot.quadPoints){return[annot.rect]}const rects=[];for(let i=2,ii=annot.quadPoints.length;i<ii;i+=8){const trX=annot.quadPoints[i];const trY=annot.quadPoints[i+1];const blX=annot.quadPoints[i+2];const blY=annot.quadPoints[i+3];rects.push([blX,blY,trX,trY])}return rects}function intersectAnnotations(annot1,annot2){const intersections=[];const annot1Rects=annotationRects(annot1);const annot2Rects=annotationRects(annot2);for(const rect1 of annot1Rects){for(const rect2 of annot2Rects){const intersection=Util.intersect(rect1,rect2);if(intersection){intersections.push(intersection)}}}return intersections}function areaRects(rects){let totalArea=0;for(const rect of rects){totalArea+=Math.abs((rect[2]-rect[0])*(rect[3]-rect[1]))}return totalArea}return inferredLinks.filter((link=>{let linkAreaRects;for(const annotation of this.#annotations){if(annotation.annotationType!==AnnotationType.LINK||!annotation.url){continue}const intersections=intersectAnnotations(annotation,link);if(intersections.length===0){continue}linkAreaRects??=areaRects(annotationRects(link));if(areaRects(intersections)/linkAreaRects>.5){return false}}return true}))}}function DOMRectToPDF({width:width,height:height,left:left,top:top},pdfPageView){if(width===0||height===0){return null}const pageBox=pdfPageView.textLayer.div.getBoundingClientRect();const bottomLeft=pdfPageView.getPagePoint(left-pageBox.left,top-pageBox.top);const topRight=pdfPageView.getPagePoint(left-pageBox.left+width,top-pageBox.top+height);return Util.normalizeRect([bottomLeft[0],bottomLeft[1],topRight[0],topRight[1]])}function calculateLinkPosition(range,pdfPageView){const rangeRects=range.getClientRects();if(rangeRects.length===1){return{rect:DOMRectToPDF(rangeRects[0],pdfPageView)}}const rect=[Infinity,Infinity,-Infinity,-Infinity];const quadPoints=[];let i=0;for(const domRect of rangeRects){const normalized=DOMRectToPDF(domRect,pdfPageView);if(normalized===null){continue}quadPoints[i]=quadPoints[i+4]=normalized[0];quadPoints[i+1]=quadPoints[i+3]=normalized[3];quadPoints[i+2]=quadPoints[i+6]=normalized[2];quadPoints[i+5]=quadPoints[i+7]=normalized[1];Util.rectBoundingBox(...normalized,rect);i+=8}return{quadPoints:quadPoints,rect:rect}}function textPosition(container,offset){let currentContainer=container;do{if(currentContainer.nodeType===Node.TEXT_NODE){const currentLength=currentContainer.textContent.length;if(offset<=currentLength){return[currentContainer,offset]}offset-=currentLength}else if(currentContainer.firstChild){currentContainer=currentContainer.firstChild;continue}while(!currentContainer.nextSibling&&currentContainer!==container){currentContainer=currentContainer.parentNode}if(currentContainer!==container){currentContainer=currentContainer.nextSibling}}while(currentContainer!==container);throw new Error(\"Offset is bigger than container's contents length.\")}function createLinkAnnotation({url:url,index:index,length:length},pdfPageView,id){const highlighter=pdfPageView._textHighlighter;const[{begin:begin,end:end}]=highlighter._convertMatches([index],[length]);const range=new Range;range.setStart(...textPosition(highlighter.textDivs[begin.divIdx],begin.offset));range.setEnd(...textPosition(highlighter.textDivs[end.divIdx],end.offset));return{id:`inferred_link_${id}`,unsafeUrl:url,url:url,annotationType:AnnotationType.LINK,rotation:0,...calculateLinkPosition(range,pdfPageView),borderStyle:null}}class Autolinker{static#index=0;static#regex;static findLinks(text){this.#regex??=/\\b(?:https?:\\/\\/|mailto:|www\\.)(?:[\\S--[\\p{P}<>]]|\\/|[\\S--[\\[\\]]]+[\\S--[\\p{P}<>]])+|\\b[\\S--[@\\p{Ps}\\p{Pe}<>]]+@([\\S--[\\p{P}<>]]+(?:\\.[\\S--[\\p{P}<>]]+)+)/gmv;const[normalizedText,diffs]=normalize(text);const matches=normalizedText.matchAll(this.#regex);const links=[];for(const match of matches){const[url,emailDomain]=match;let raw;if(url.startsWith(\"www.\")||url.startsWith(\"http://\")||url.startsWith(\"https://\")){raw=url}else if(URL.canParse(`http://${emailDomain}`)){raw=url.startsWith(\"mailto:\")?url:`mailto:${url}`}else{continue}const absoluteURL=createValidAbsoluteUrl(raw,null,{addDefaultProtocol:true});if(absoluteURL){const[index,length]=getOriginalIndex(diffs,match.index,url.length);links.push({url:absoluteURL.href,index:index,length:length})}}return links}static processLinks(pdfPageView){return this.findLinks(pdfPageView._textHighlighter.textContentItemsStr.join(\"\\n\")).map((link=>createLinkAnnotation(link,pdfPageView,this.#index++)))}}class BasePDFPageView{#enableHWA=false;#loadingId=null;#minDurationToUpdateCanvas=0;#renderError=null;#renderingState=RenderingStates.INITIAL;#showCanvas=null;#startTime=0;#tempCanvas=null;canvas=null;div=null;eventBus=null;id=null;pageColors=null;renderingQueue=null;renderTask=null;resume=null;constructor(options){this.#enableHWA=#enableHWA in options?options.#enableHWA:options.enableHWA||false;this.eventBus=options.eventBus;this.id=options.id;this.pageColors=options.pageColors||null;this.renderingQueue=options.renderingQueue;this.#minDurationToUpdateCanvas=options.minDurationToUpdateCanvas??500}get renderingState(){return this.#renderingState}set renderingState(state){if(state===this.#renderingState){return}this.#renderingState=state;if(this.#loadingId){clearTimeout(this.#loadingId);this.#loadingId=null}switch(state){case RenderingStates.PAUSED:this.div.classList.remove(\"loading\");this.#startTime=0;this.#showCanvas?.(false);break;case RenderingStates.RUNNING:this.div.classList.add(\"loadingIcon\");this.#loadingId=setTimeout((()=>{this.div.classList.add(\"loading\");this.#loadingId=null}),0);this.#startTime=Date.now();break;case RenderingStates.INITIAL:case RenderingStates.FINISHED:this.div.classList.remove(\"loadingIcon\",\"loading\");this.#startTime=0;break}}_createCanvas(onShow,hideUntilComplete=false){const{pageColors:pageColors}=this;const hasHCM=!!(pageColors?.background&&pageColors?.foreground);const prevCanvas=this.canvas;const updateOnFirstShow=!prevCanvas&&!hasHCM&&!hideUntilComplete;let canvas=this.canvas=document.createElement(\"canvas\");this.#showCanvas=isLastShow=>{if(updateOnFirstShow){let tempCanvas=this.#tempCanvas;if(!isLastShow&&this.#minDurationToUpdateCanvas>0){if(Date.now()-this.#startTime<this.#minDurationToUpdateCanvas){return}if(!tempCanvas){tempCanvas=this.#tempCanvas=canvas;canvas=this.canvas=canvas.cloneNode(false);onShow(canvas)}}if(tempCanvas){const ctx=canvas.getContext(\"2d\",{alpha:false});ctx.drawImage(tempCanvas,0,0);if(isLastShow){this.#resetTempCanvas()}else{this.#startTime=Date.now()}return}onShow(canvas);this.#showCanvas=null;return}if(!isLastShow){return}if(prevCanvas){prevCanvas.replaceWith(canvas);prevCanvas.width=prevCanvas.height=0}else{onShow(canvas)}};const ctx=canvas.getContext(\"2d\",{alpha:false,willReadFrequently:!this.#enableHWA});return{canvas:canvas,prevCanvas:prevCanvas,ctx:ctx}}#renderContinueCallback=cont=>{this.#showCanvas?.(false);if(this.renderingQueue&&!this.renderingQueue.isHighestPriority(this)){this.renderingState=RenderingStates.PAUSED;this.resume=()=>{this.renderingState=RenderingStates.RUNNING;cont()};return}cont()};_resetCanvas(){const{canvas:canvas}=this;if(!canvas){return}canvas.remove();canvas.width=canvas.height=0;this.canvas=null;this.#resetTempCanvas()}#resetTempCanvas(){if(this.#tempCanvas){this.#tempCanvas.width=this.#tempCanvas.height=0;this.#tempCanvas=null}}async _drawCanvas(options,onCancel,onFinish){const renderTask=this.renderTask=this.pdfPage.render(options);renderTask.onContinue=this.#renderContinueCallback;renderTask.onError=error=>{if(error instanceof RenderingCancelledException){onCancel();this.#renderError=null}};let error=null;try{await renderTask.promise;this.#showCanvas?.(true)}catch(e){if(e instanceof RenderingCancelledException){return}error=e;this.#showCanvas?.(true)}finally{this.#renderError=error;if(renderTask===this.renderTask){this.renderTask=null}}this.renderingState=RenderingStates.FINISHED;onFinish(renderTask);if(error){throw error}}cancelRendering({cancelExtraDelay:cancelExtraDelay=0}={}){if(this.renderTask){this.renderTask.cancel(cancelExtraDelay);this.renderTask=null}this.resume=null}dispatchPageRender(){this.eventBus.dispatch(\"pagerender\",{source:this,pageNumber:this.id})}dispatchPageRendered(cssTransform,isDetailView){this.eventBus.dispatch(\"pagerendered\",{source:this,pageNumber:this.id,cssTransform:cssTransform,isDetailView:isDetailView,timestamp:performance.now(),error:this.#renderError})}}class DrawLayerBuilder{#drawLayer=null;constructor(options){this.pageIndex=options.pageIndex}async render({intent:intent=\"display\"}){if(intent!==\"display\"||this.#drawLayer||this._cancelled){return}this.#drawLayer=new DrawLayer({pageIndex:this.pageIndex})}cancel(){this._cancelled=true;if(!this.#drawLayer){return}this.#drawLayer.destroy();this.#drawLayer=null}setParent(parent){this.#drawLayer?.setParent(parent)}getDrawLayer(){return this.#drawLayer}}class PDFPageDetailView extends BasePDFPageView{#detailArea=null;renderingCancelled=false;constructor({pageView:pageView}){super(pageView);this.pageView=pageView;this.renderingId=\"detail\"+this.id;this.div=pageView.div}setPdfPage(pdfPage){this.pageView.setPdfPage(pdfPage)}get pdfPage(){return this.pageView.pdfPage}get renderingState(){return super.renderingState}set renderingState(value){this.renderingCancelled=false;super.renderingState=value}reset({keepCanvas:keepCanvas=false}={}){const renderingCancelled=this.renderingCancelled||this.renderingState===RenderingStates.RUNNING||this.renderingState===RenderingStates.PAUSED;this.cancelRendering();this.renderingState=RenderingStates.INITIAL;this.renderingCancelled=renderingCancelled;if(!keepCanvas){this._resetCanvas()}}#shouldRenderDifferentArea(visibleArea){if(!this.#detailArea){return true}const minDetailX=this.#detailArea.minX;const minDetailY=this.#detailArea.minY;const maxDetailX=this.#detailArea.width+minDetailX;const maxDetailY=this.#detailArea.height+minDetailY;if(visibleArea.minX<minDetailX||visibleArea.minY<minDetailY||visibleArea.maxX>maxDetailX||visibleArea.maxY>maxDetailY){return true}const{width:maxWidth,height:maxHeight,scale:scale}=this.pageView.viewport;if(this.#detailArea.scale!==scale){return true}const paddingLeftSize=visibleArea.minX-minDetailX;const paddingRightSize=maxDetailX-visibleArea.maxX;const paddingTopSize=visibleArea.minY-minDetailY;const paddingBottomSize=maxDetailY-visibleArea.maxY;const MOVEMENT_THRESHOLD=.5;const ratio=(1+MOVEMENT_THRESHOLD)/MOVEMENT_THRESHOLD;if(minDetailX>0&&paddingRightSize/paddingLeftSize>ratio||maxDetailX<maxWidth&&paddingLeftSize/paddingRightSize>ratio||minDetailY>0&&paddingBottomSize/paddingTopSize>ratio||maxDetailY<maxHeight&&paddingTopSize/paddingBottomSize>ratio){return true}return false}update({visibleArea:visibleArea=null,underlyingViewUpdated:underlyingViewUpdated=false}={}){if(underlyingViewUpdated){this.cancelRendering();this.renderingState=RenderingStates.INITIAL;return}if(!this.#shouldRenderDifferentArea(visibleArea)){return}const{viewport:viewport,capCanvasAreaFactor:capCanvasAreaFactor}=this.pageView;const visibleWidth=visibleArea.maxX-visibleArea.minX;const visibleHeight=visibleArea.maxY-visibleArea.minY;let{maxCanvasPixels:maxCanvasPixels}=this.pageView;if(capCanvasAreaFactor>=0){maxCanvasPixels=Math.min(maxCanvasPixels,OutputScale.getCappedWindowArea(capCanvasAreaFactor))}const visiblePixels=visibleWidth*visibleHeight*OutputScale.pixelRatio**2;const maxDetailToVisibleLinearRatio=Math.sqrt(maxCanvasPixels/visiblePixels);const maxOverflowScale=(maxDetailToVisibleLinearRatio-1)/2;let overflowScale=Math.min(1,maxOverflowScale);if(overflowScale<0){overflowScale=0}const overflowWidth=visibleWidth*overflowScale;const overflowHeight=visibleHeight*overflowScale;const minX=Math.max(0,visibleArea.minX-overflowWidth);const maxX=Math.min(viewport.width,visibleArea.maxX+overflowWidth);const minY=Math.max(0,visibleArea.minY-overflowHeight);const maxY=Math.min(viewport.height,visibleArea.maxY+overflowHeight);const width=maxX-minX;const height=maxY-minY;this.#detailArea={minX:minX,minY:minY,width:width,height:height,scale:viewport.scale};this.reset({keepCanvas:true})}async draw(){if(this.pageView.detailView!==this){return undefined}const hideUntilComplete=this.pageView.renderingState===RenderingStates.FINISHED||this.renderingState===RenderingStates.FINISHED;if(this.renderingState!==RenderingStates.INITIAL){console.error(\"Must be in new state before drawing\");this.reset()}const{div:div,pdfPage:pdfPage,viewport:viewport}=this.pageView;if(!pdfPage){this.renderingState=RenderingStates.FINISHED;throw new Error(\"pdfPage is not loaded\")}this.renderingState=RenderingStates.RUNNING;const canvasWrapper=this.pageView._ensureCanvasWrapper();const{canvas:canvas,prevCanvas:prevCanvas,ctx:ctx}=this._createCanvas((newCanvas=>{if(canvasWrapper.firstElementChild?.tagName===\"CANVAS\"){canvasWrapper.firstElementChild.after(newCanvas)}else{canvasWrapper.prepend(newCanvas)}}),hideUntilComplete);canvas.setAttribute(\"aria-hidden\",\"true\");const{width:width,height:height}=viewport;const area=this.#detailArea;const{pixelRatio:pixelRatio}=OutputScale;const transform=[pixelRatio,0,0,pixelRatio,-area.minX*pixelRatio,-area.minY*pixelRatio];canvas.width=area.width*pixelRatio;canvas.height=area.height*pixelRatio;const{style:style}=canvas;style.width=`${area.width*100/width}%`;style.height=`${area.height*100/height}%`;style.top=`${area.minY*100/height}%`;style.left=`${area.minX*100/width}%`;const renderingPromise=this._drawCanvas(this.pageView._getRenderingContext(ctx,transform),(()=>{this.canvas?.remove();this.canvas=prevCanvas}),(()=>{this.dispatchPageRendered(false,true)}));div.setAttribute(\"data-loaded\",true);this.dispatchPageRender();return renderingPromise}}const PDF_ROLE_TO_HTML_ROLE={Document:null,DocumentFragment:null,Part:\"group\",Sect:\"group\",Div:\"group\",Aside:\"note\",NonStruct:\"none\",P:null,H:\"heading\",Title:null,FENote:\"note\",Sub:\"group\",Lbl:null,Span:null,Em:null,Strong:null,Link:\"link\",Annot:\"note\",Form:\"form\",Ruby:null,RB:null,RT:null,RP:null,Warichu:null,WT:null,WP:null,L:\"list\",LI:\"listitem\",LBody:null,Table:\"table\",TR:\"row\",TH:\"columnheader\",TD:\"cell\",THead:\"columnheader\",TBody:null,TFoot:null,Caption:null,Figure:\"figure\",Formula:null,Artifact:null};const HEADING_PATTERN=/^H(\\d+)$/;class StructTreeLayerBuilder{#promise;#treeDom=null;#treePromise;#elementAttributes=new Map;#rawDims;#elementsToAddToTextLayer=null;constructor(pdfPage,rawDims){this.#promise=pdfPage.getStructTree();this.#rawDims=rawDims}async render(){if(this.#treePromise){return this.#treePromise}const{promise:promise,resolve:resolve,reject:reject}=Promise.withResolvers();this.#treePromise=promise;try{this.#treeDom=this.#walk(await this.#promise)}catch(ex){reject(ex)}this.#promise=null;this.#treeDom?.classList.add(\"structTree\");resolve(this.#treeDom);return promise}async getAriaAttributes(annotationId){try{await this.render();return this.#elementAttributes.get(annotationId)}catch{}return null}hide(){if(this.#treeDom&&!this.#treeDom.hidden){this.#treeDom.hidden=true}}show(){if(this.#treeDom?.hidden){this.#treeDom.hidden=false}}#setAttributes(structElement,htmlElement){const{alt:alt,id:id,lang:lang}=structElement;if(alt!==undefined){let added=false;const label=removeNullCharacters(alt);for(const child of structElement.children){if(child.type===\"annotation\"){let attrs=this.#elementAttributes.get(child.id);if(!attrs){attrs=new Map;this.#elementAttributes.set(child.id,attrs)}attrs.set(\"aria-label\",label);added=true}}if(!added){htmlElement.setAttribute(\"aria-label\",label)}}if(id!==undefined){htmlElement.setAttribute(\"aria-owns\",id)}if(lang!==undefined){htmlElement.setAttribute(\"lang\",removeNullCharacters(lang,true))}}#addImageInTextLayer(node,element){const{alt:alt,bbox:bbox,children:children}=node;const child=children?.[0];if(!this.#rawDims||!alt||!bbox||child?.type!==\"content\"){return false}const{id:id}=child;if(!id){return false}element.setAttribute(\"aria-owns\",id);const img=document.createElement(\"span\");(this.#elementsToAddToTextLayer||=new Map).set(id,img);img.setAttribute(\"role\",\"img\");img.setAttribute(\"aria-label\",removeNullCharacters(alt));const{pageHeight:pageHeight,pageX:pageX,pageY:pageY}=this.#rawDims;const calc=\"calc(var(--total-scale-factor) *\";const{style:style}=img;style.width=`${calc}${bbox[2]-bbox[0]}px)`;style.height=`${calc}${bbox[3]-bbox[1]}px)`;style.left=`${calc}${bbox[0]-pageX}px)`;style.top=`${calc}${pageHeight-bbox[3]+pageY}px)`;return true}addElementsToTextLayer(){if(!this.#elementsToAddToTextLayer){return}for(const[id,img]of this.#elementsToAddToTextLayer){document.getElementById(id)?.append(img)}this.#elementsToAddToTextLayer.clear();this.#elementsToAddToTextLayer=null}#walk(node){if(!node){return null}const element=document.createElement(\"span\");if(\"role\"in node){const{role:role}=node;const match=role.match(HEADING_PATTERN);if(match){element.setAttribute(\"role\",\"heading\");element.setAttribute(\"aria-level\",match[1])}else if(PDF_ROLE_TO_HTML_ROLE[role]){element.setAttribute(\"role\",PDF_ROLE_TO_HTML_ROLE[role])}if(role===\"Figure\"&&this.#addImageInTextLayer(node,element)){return element}}this.#setAttributes(node,element);if(node.children){if(node.children.length===1&&\"id\"in node.children[0]){this.#setAttributes(node.children[0],element)}else{for(const kid of node.children){element.append(this.#walk(kid))}}}return element}}class TextAccessibilityManager{#enabled=false;#textChildren=null;#textNodes=new Map;#waitingElements=new Map;setTextMapping(textDivs){this.#textChildren=textDivs}static#compareElementPositions(e1,e2){const rect1=e1.getBoundingClientRect();const rect2=e2.getBoundingClientRect();if(rect1.width===0&&rect1.height===0){return+1}if(rect2.width===0&&rect2.height===0){return-1}const top1=rect1.y;const bot1=rect1.y+rect1.height;const mid1=rect1.y+rect1.height/2;const top2=rect2.y;const bot2=rect2.y+rect2.height;const mid2=rect2.y+rect2.height/2;if(mid1<=top2&&mid2>=bot1){return-1}if(mid2<=top1&&mid1>=bot2){return+1}const centerX1=rect1.x+rect1.width/2;const centerX2=rect2.x+rect2.width/2;return centerX1-centerX2}enable(){if(this.#enabled){throw new Error(\"TextAccessibilityManager is already enabled.\")}if(!this.#textChildren){throw new Error(\"Text divs and strings have not been set.\")}this.#enabled=true;this.#textChildren=this.#textChildren.slice();this.#textChildren.sort(TextAccessibilityManager.#compareElementPositions);if(this.#textNodes.size>0){const textChildren=this.#textChildren;for(const[id,nodeIndex]of this.#textNodes){const element=document.getElementById(id);if(!element){this.#textNodes.delete(id);continue}this.#addIdToAriaOwns(id,textChildren[nodeIndex])}}for(const[element,isRemovable]of this.#waitingElements){this.addPointerInTextLayer(element,isRemovable)}this.#waitingElements.clear()}disable(){if(!this.#enabled){return}this.#waitingElements.clear();this.#textChildren=null;this.#enabled=false}removePointerInTextLayer(element){if(!this.#enabled){this.#waitingElements.delete(element);return}const children=this.#textChildren;if(!children||children.length===0){return}const{id:id}=element;const nodeIndex=this.#textNodes.get(id);if(nodeIndex===undefined){return}const node=children[nodeIndex];this.#textNodes.delete(id);let owns=node.getAttribute(\"aria-owns\");if(owns?.includes(id)){owns=owns.split(\" \").filter((x=>x!==id)).join(\" \");if(owns){node.setAttribute(\"aria-owns\",owns)}else{node.removeAttribute(\"aria-owns\");node.setAttribute(\"role\",\"presentation\")}}}#addIdToAriaOwns(id,node){const owns=node.getAttribute(\"aria-owns\");if(!owns?.includes(id)){node.setAttribute(\"aria-owns\",owns?`${owns} ${id}`:id)}node.removeAttribute(\"role\")}addPointerInTextLayer(element,isRemovable){const{id:id}=element;if(!id){return null}if(!this.#enabled){this.#waitingElements.set(element,isRemovable);return null}if(isRemovable){this.removePointerInTextLayer(element)}const children=this.#textChildren;if(!children||children.length===0){return null}const index=binarySearchFirstItem(children,(node=>TextAccessibilityManager.#compareElementPositions(element,node)<0));const nodeIndex=Math.max(0,index-1);const child=children[nodeIndex];this.#addIdToAriaOwns(id,child);this.#textNodes.set(id,nodeIndex);const parent=child.parentNode;return parent?.classList.contains(\"markedContent\")?parent.id:null}moveElementInDOM(container,element,contentElement,isRemovable){const id=this.addPointerInTextLayer(contentElement,isRemovable);if(!container.hasChildNodes()){container.append(element);return id}const children=Array.from(container.childNodes).filter((node=>node!==element));if(children.length===0){return id}const elementToCompare=contentElement||element;const index=binarySearchFirstItem(children,(node=>TextAccessibilityManager.#compareElementPositions(elementToCompare,node)<0));if(index===0){children[0].before(element)}else{children[index-1].after(element)}return id}}class TextHighlighter{#eventAbortController=null;constructor({findController:findController,eventBus:eventBus,pageIndex:pageIndex}){this.findController=findController;this.matches=[];this.eventBus=eventBus;this.pageIdx=pageIndex;this.textDivs=null;this.textContentItemsStr=null;this.enabled=false}setTextMapping(divs,texts){this.textDivs=divs;this.textContentItemsStr=texts}enable(){if(!this.textDivs||!this.textContentItemsStr){throw new Error(\"Text divs and strings have not been set.\")}if(this.enabled){throw new Error(\"TextHighlighter is already enabled.\")}this.enabled=true;if(!this.#eventAbortController){this.#eventAbortController=new AbortController;this.eventBus._on(\"updatetextlayermatches\",(evt=>{if(evt.pageIndex===this.pageIdx||evt.pageIndex===-1){this._updateMatches()}}),{signal:this.#eventAbortController.signal})}this._updateMatches()}disable(){if(!this.enabled){return}this.enabled=false;this.#eventAbortController?.abort();this.#eventAbortController=null;this._updateMatches(true)}_convertMatches(matches,matchesLength){if(!matches){return[]}const{textContentItemsStr:textContentItemsStr}=this;let i=0,iIndex=0;const end=textContentItemsStr.length-1;const result=[];for(let m=0,mm=matches.length;m<mm;m++){let matchIdx=matches[m];while(i!==end&&matchIdx>=iIndex+textContentItemsStr[i].length){iIndex+=textContentItemsStr[i].length;i++}if(i===textContentItemsStr.length){console.error(\"Could not find a matching mapping\")}const match={begin:{divIdx:i,offset:matchIdx-iIndex}};matchIdx+=matchesLength[m];while(i!==end&&matchIdx>iIndex+textContentItemsStr[i].length){iIndex+=textContentItemsStr[i].length;i++}match.end={divIdx:i,offset:matchIdx-iIndex};result.push(match)}return result}_renderMatches(matches){if(matches.length===0){return}const{findController:findController,pageIdx:pageIdx}=this;const{textContentItemsStr:textContentItemsStr,textDivs:textDivs}=this;const isSelectedPage=pageIdx===findController.selected.pageIdx;const selectedMatchIdx=findController.selected.matchIdx;const highlightAll=findController.state.highlightAll;let prevEnd=null;const infinity={divIdx:-1,offset:undefined};function beginText(begin,className){const divIdx=begin.divIdx;textDivs[divIdx].textContent=\"\";return appendTextToDiv(divIdx,0,begin.offset,className)}function appendTextToDiv(divIdx,fromOffset,toOffset,className){let div=textDivs[divIdx];if(div.nodeType===Node.TEXT_NODE){const span=document.createElement(\"span\");div.before(span);span.append(div);textDivs[divIdx]=span;div=span}const content=textContentItemsStr[divIdx].substring(fromOffset,toOffset);const node=document.createTextNode(content);if(className){const span=document.createElement(\"span\");span.className=`${className} appended`;span.append(node);div.append(span);if(className.includes(\"selected\")){const{left:left}=span.getClientRects()[0];const parentLeft=div.getBoundingClientRect().left;return left-parentLeft}return 0}div.append(node);return 0}let i0=selectedMatchIdx,i1=i0+1;if(highlightAll){i0=0;i1=matches.length}else if(!isSelectedPage){return}let lastDivIdx=-1;let lastOffset=-1;for(let i=i0;i<i1;i++){const match=matches[i];const begin=match.begin;if(begin.divIdx===lastDivIdx&&begin.offset===lastOffset){continue}lastDivIdx=begin.divIdx;lastOffset=begin.offset;const end=match.end;const isSelected=isSelectedPage&&i===selectedMatchIdx;const highlightSuffix=isSelected?\" selected\":\"\";let selectedLeft=0;if(!prevEnd||begin.divIdx!==prevEnd.divIdx){if(prevEnd!==null){appendTextToDiv(prevEnd.divIdx,prevEnd.offset,infinity.offset)}beginText(begin)}else{appendTextToDiv(prevEnd.divIdx,prevEnd.offset,begin.offset)}if(begin.divIdx===end.divIdx){selectedLeft=appendTextToDiv(begin.divIdx,begin.offset,end.offset,\"highlight\"+highlightSuffix)}else{selectedLeft=appendTextToDiv(begin.divIdx,begin.offset,infinity.offset,\"highlight begin\"+highlightSuffix);for(let n0=begin.divIdx+1,n1=end.divIdx;n0<n1;n0++){textDivs[n0].className=\"highlight middle\"+highlightSuffix}beginText(end,\"highlight end\"+highlightSuffix)}prevEnd=end;if(isSelected){findController.scrollMatchIntoView({element:textDivs[begin.divIdx],selectedLeft:selectedLeft,pageIndex:pageIdx,matchIndex:selectedMatchIdx})}}if(prevEnd){appendTextToDiv(prevEnd.divIdx,prevEnd.offset,infinity.offset)}}_updateMatches(reset=false){if(!this.enabled&&!reset){return}const{findController:findController,matches:matches,pageIdx:pageIdx}=this;const{textContentItemsStr:textContentItemsStr,textDivs:textDivs}=this;let clearedUntilDivIdx=-1;for(const match of matches){const begin=Math.max(clearedUntilDivIdx,match.begin.divIdx);for(let n=begin,end=match.end.divIdx;n<=end;n++){const div=textDivs[n];div.textContent=textContentItemsStr[n];div.className=\"\"}clearedUntilDivIdx=match.end.divIdx+1}if(!findController?.highlightMatches||reset){return}const pageMatches=findController.pageMatches[pageIdx]||null;const pageMatchesLength=findController.pageMatchesLength[pageIdx]||null;this.matches=this._convertMatches(pageMatches,pageMatchesLength);this._renderMatches(this.matches)}}class TextLayerBuilder{#enablePermissions=false;#onAppend=null;#renderingDone=false;#textLayer=null;static#textLayers=new Map;static#selectionChangeAbortController=null;constructor({pdfPage:pdfPage,highlighter:highlighter=null,accessibilityManager:accessibilityManager=null,enablePermissions:enablePermissions=false,onAppend:onAppend=null}){this.pdfPage=pdfPage;this.highlighter=highlighter;this.accessibilityManager=accessibilityManager;this.#enablePermissions=enablePermissions===true;this.#onAppend=onAppend;this.div=document.createElement(\"div\");this.div.tabIndex=0;this.div.className=\"textLayer\"}async render({viewport:viewport,textContentParams:textContentParams=null}){if(this.#renderingDone&&this.#textLayer){this.#textLayer.update({viewport:viewport,onBefore:this.hide.bind(this)});this.show();return}this.cancel();this.#textLayer=new TextLayer({textContentSource:this.pdfPage.streamTextContent(textContentParams||{includeMarkedContent:true,disableNormalization:true}),container:this.div,viewport:viewport});const{textDivs:textDivs,textContentItemsStr:textContentItemsStr}=this.#textLayer;this.highlighter?.setTextMapping(textDivs,textContentItemsStr);this.accessibilityManager?.setTextMapping(textDivs);await this.#textLayer.render();this.#renderingDone=true;const endOfContent=document.createElement(\"div\");endOfContent.className=\"endOfContent\";this.div.append(endOfContent);this.#bindMouse(endOfContent);this.#onAppend?.(this.div);this.highlighter?.enable();this.accessibilityManager?.enable()}hide(){if(!this.div.hidden&&this.#renderingDone){this.highlighter?.disable();this.div.hidden=true}}show(){if(this.div.hidden&&this.#renderingDone){this.div.hidden=false;this.highlighter?.enable()}}cancel(){this.#textLayer?.cancel();this.#textLayer=null;this.highlighter?.disable();this.accessibilityManager?.disable();TextLayerBuilder.#removeGlobalSelectionListener(this.div)}#bindMouse(end){const{div:div}=this;div.addEventListener(\"mousedown\",(()=>{div.classList.add(\"selecting\")}));div.addEventListener(\"copy\",(event=>{if(!this.#enablePermissions){const selection=document.getSelection();event.clipboardData.setData(\"text/plain\",removeNullCharacters(normalizeUnicode(selection.toString())))}stopEvent(event)}));TextLayerBuilder.#textLayers.set(div,end);TextLayerBuilder.#enableGlobalSelectionListener()}static#removeGlobalSelectionListener(textLayerDiv){this.#textLayers.delete(textLayerDiv);if(this.#textLayers.size===0){this.#selectionChangeAbortController?.abort();this.#selectionChangeAbortController=null}}static#enableGlobalSelectionListener(){if(this.#selectionChangeAbortController){return}this.#selectionChangeAbortController=new AbortController;const{signal:signal}=this.#selectionChangeAbortController;const reset=(end,textLayer)=>{textLayer.append(end);end.style.width=\"\";end.style.height=\"\";textLayer.classList.remove(\"selecting\")};let isPointerDown=false;document.addEventListener(\"pointerdown\",(()=>{isPointerDown=true}),{signal:signal});document.addEventListener(\"pointerup\",(()=>{isPointerDown=false;this.#textLayers.forEach(reset)}),{signal:signal});window.addEventListener(\"blur\",(()=>{isPointerDown=false;this.#textLayers.forEach(reset)}),{signal:signal});document.addEventListener(\"keyup\",(()=>{if(!isPointerDown){this.#textLayers.forEach(reset)}}),{signal:signal});var isFirefox,prevRange;document.addEventListener(\"selectionchange\",(()=>{const selection=document.getSelection();if(selection.rangeCount===0){this.#textLayers.forEach(reset);return}const activeTextLayers=new Set;for(let i=0;i<selection.rangeCount;i++){const range=selection.getRangeAt(i);for(const textLayerDiv of this.#textLayers.keys()){if(!activeTextLayers.has(textLayerDiv)&&range.intersectsNode(textLayerDiv)){activeTextLayers.add(textLayerDiv)}}}for(const[textLayerDiv,endDiv]of this.#textLayers){if(activeTextLayers.has(textLayerDiv)){textLayerDiv.classList.add(\"selecting\")}else{reset(endDiv,textLayerDiv)}}isFirefox??=getComputedStyle(this.#textLayers.values().next().value).getPropertyValue(\"-moz-user-select\")===\"none\";if(isFirefox){return}const range=selection.getRangeAt(0);const modifyStart=prevRange&&(range.compareBoundaryPoints(Range.END_TO_END,prevRange)===0||range.compareBoundaryPoints(Range.START_TO_END,prevRange)===0);let anchor=modifyStart?range.startContainer:range.endContainer;if(anchor.nodeType===Node.TEXT_NODE){anchor=anchor.parentNode}if(!modifyStart&&range.endOffset===0){do{while(!anchor.previousSibling){anchor=anchor.parentNode}anchor=anchor.previousSibling}while(!anchor.childNodes.length)}const parentTextLayer=anchor.parentElement?.closest(\".textLayer\");const endDiv=this.#textLayers.get(parentTextLayer);if(endDiv){endDiv.style.width=parentTextLayer.style.width;endDiv.style.height=parentTextLayer.style.height;anchor.parentElement.insertBefore(endDiv,modifyStart?anchor:anchor.nextSibling)}prevRange=range.cloneRange()}),{signal:signal})}}const DEFAULT_LAYER_PROPERTIES=null;const LAYERS_ORDER=new Map([[\"canvasWrapper\",0],[\"textLayer\",1],[\"annotationLayer\",2],[\"annotationEditorLayer\",3],[\"xfaLayer\",3]]);class PDFPageView extends BasePDFPageView{#annotationMode=AnnotationMode.ENABLE_FORMS;#canvasWrapper=null;#enableAutoLinking=true;#hasRestrictedScaling=false;#isEditing=false;#layerProperties=null;#needsRestrictedScaling=false;#originalViewport=null;#previousRotation=null;#scaleRoundX=1;#scaleRoundY=1;#textLayerMode=TextLayerMode.ENABLE;#userUnit=1;#useThumbnailCanvas={directDrawing:true,initialOptionalContent:true,regularAnnotations:true};#layers=[null,null,null,null];constructor(options){super(options);const container=options.container;const defaultViewport=options.defaultViewport;this.renderingId=\"page\"+this.id;this.#layerProperties=options.layerProperties||DEFAULT_LAYER_PROPERTIES;this.pdfPage=null;this.pageLabel=null;this.rotation=0;this.scale=options.scale||DEFAULT_SCALE;this.viewport=defaultViewport;this.pdfPageRotate=defaultViewport.rotation;this._optionalContentConfigPromise=options.optionalContentConfigPromise||null;this.#textLayerMode=options.textLayerMode??TextLayerMode.ENABLE;this.#annotationMode=options.annotationMode??AnnotationMode.ENABLE_FORMS;this.imageResourcesPath=options.imageResourcesPath||\"\";this.enableDetailCanvas=options.enableDetailCanvas??true;this.maxCanvasPixels=options.maxCanvasPixels??AppOptions.get(\"maxCanvasPixels\");this.maxCanvasDim=options.maxCanvasDim||AppOptions.get(\"maxCanvasDim\");this.capCanvasAreaFactor=options.capCanvasAreaFactor??AppOptions.get(\"capCanvasAreaFactor\");this.#enableAutoLinking=options.enableAutoLinking!==false;this.l10n=options.l10n;this.l10n||=new genericl10n_GenericL10n;this._isStandalone=!this.renderingQueue?.hasViewer();this._container=container;this._annotationCanvasMap=null;this.annotationLayer=null;this.annotationEditorLayer=null;this.textLayer=null;this.xfaLayer=null;this.structTreeLayer=null;this.drawLayer=null;this.detailView=null;const div=document.createElement(\"div\");div.className=\"page\";div.setAttribute(\"data-page-number\",this.id);div.setAttribute(\"role\",\"region\");div.setAttribute(\"data-l10n-id\",\"pdfjs-page-landmark\");div.setAttribute(\"data-l10n-args\",JSON.stringify({page:this.id}));this.div=div;this.#setDimensions();container?.append(div);if(this._isStandalone){container?.style.setProperty(\"--scale-factor\",this.scale*PixelsPerInch.PDF_TO_CSS_UNITS);if(this.pageColors?.background){container?.style.setProperty(\"--page-bg-color\",this.pageColors.background)}const{optionalContentConfigPromise:optionalContentConfigPromise}=options;if(optionalContentConfigPromise){optionalContentConfigPromise.then((optionalContentConfig=>{if(optionalContentConfigPromise!==this._optionalContentConfigPromise){return}this.#useThumbnailCanvas.initialOptionalContent=optionalContentConfig.hasInitialVisibility}))}if(!options.l10n){this.l10n.translate(this.div)}}}#addLayer(div,name){const pos=LAYERS_ORDER.get(name);const oldDiv=this.#layers[pos];this.#layers[pos]=div;if(oldDiv){oldDiv.replaceWith(div);return}for(let i=pos-1;i>=0;i--){const layer=this.#layers[i];if(layer){layer.after(div);return}}this.div.prepend(div)}#setDimensions(){const{div:div,viewport:viewport}=this;if(viewport.userUnit!==this.#userUnit){if(viewport.userUnit!==1){div.style.setProperty(\"--user-unit\",viewport.userUnit)}else{div.style.removeProperty(\"--user-unit\")}this.#userUnit=viewport.userUnit}if(this.pdfPage){if(this.#previousRotation===viewport.rotation){return}this.#previousRotation=viewport.rotation}setLayerDimensions(div,viewport,true,false)}setPdfPage(pdfPage){if(this._isStandalone&&(this.pageColors?.foreground===\"CanvasText\"||this.pageColors?.background===\"Canvas\")){this._container?.style.setProperty(\"--hcm-highlight-filter\",pdfPage.filterFactory.addHighlightHCMFilter(\"highlight\",\"CanvasText\",\"Canvas\",\"HighlightText\",\"Highlight\"));this._container?.style.setProperty(\"--hcm-highlight-selected-filter\",pdfPage.filterFactory.addHighlightHCMFilter(\"highlight_selected\",\"CanvasText\",\"Canvas\",\"HighlightText\",\"Highlight\"))}this.pdfPage=pdfPage;this.pdfPageRotate=pdfPage.rotate;const totalRotation=(this.rotation+this.pdfPageRotate)%360;this.viewport=pdfPage.getViewport({scale:this.scale*PixelsPerInch.PDF_TO_CSS_UNITS,rotation:totalRotation});this.#setDimensions();this.reset()}destroy(){this.reset();this.pdfPage?.cleanup()}hasEditableAnnotations(){return!!this.annotationLayer?.hasEditableAnnotations()}get _textHighlighter(){return shadow(this,\"_textHighlighter\",new TextHighlighter({pageIndex:this.id-1,eventBus:this.eventBus,findController:this.#layerProperties.findController}))}#dispatchLayerRendered(name,error){this.eventBus.dispatch(name,{source:this,pageNumber:this.id,error:error})}async#renderAnnotationLayer(){let error=null;try{await this.annotationLayer.render({viewport:this.viewport,intent:\"display\",structTreeLayer:this.structTreeLayer})}catch(ex){console.error(\"#renderAnnotationLayer:\",ex);error=ex}finally{this.#dispatchLayerRendered(\"annotationlayerrendered\",error)}}async#renderAnnotationEditorLayer(){let error=null;try{await this.annotationEditorLayer.render({viewport:this.viewport,intent:\"display\"})}catch(ex){console.error(\"#renderAnnotationEditorLayer:\",ex);error=ex}finally{this.#dispatchLayerRendered(\"annotationeditorlayerrendered\",error)}}async#renderDrawLayer(){try{await this.drawLayer.render({intent:\"display\"})}catch(ex){console.error(\"#renderDrawLayer:\",ex)}}async#renderXfaLayer(){let error=null;try{const result=await this.xfaLayer.render({viewport:this.viewport,intent:\"display\"});if(result?.textDivs&&this._textHighlighter){this.#buildXfaTextContentItems(result.textDivs)}}catch(ex){console.error(\"#renderXfaLayer:\",ex);error=ex}finally{if(this.xfaLayer?.div){this.l10n.pause();this.#addLayer(this.xfaLayer.div,\"xfaLayer\");this.l10n.resume()}this.#dispatchLayerRendered(\"xfalayerrendered\",error)}}async#renderTextLayer(){if(!this.textLayer){return}let error=null;try{await this.textLayer.render({viewport:this.viewport})}catch(ex){if(ex instanceof AbortException){return}console.error(\"#renderTextLayer:\",ex);error=ex}this.#dispatchLayerRendered(\"textlayerrendered\",error);this.#renderStructTreeLayer()}async#renderStructTreeLayer(){if(!this.textLayer){return}const treeDom=await(this.structTreeLayer?.render());if(treeDom){this.l10n.pause();this.structTreeLayer?.addElementsToTextLayer();if(this.canvas&&treeDom.parentNode!==this.canvas){this.canvas.append(treeDom)}this.l10n.resume()}this.structTreeLayer?.show()}async#buildXfaTextContentItems(textDivs){const text=await this.pdfPage.getTextContent();const items=[];for(const item of text.items){items.push(item.str)}this._textHighlighter.setTextMapping(textDivs,items);this._textHighlighter.enable()}async#injectLinkAnnotations(textLayerPromise){let error=null;try{await textLayerPromise;if(!this.annotationLayer){return}await this.annotationLayer.injectLinkAnnotations({inferredLinks:Autolinker.processLinks(this),viewport:this.viewport,structTreeLayer:this.structTreeLayer})}catch(ex){console.error(\"#injectLinkAnnotations:\",ex);error=ex}}_resetCanvas(){super._resetCanvas();this.#originalViewport=null}reset({keepAnnotationLayer:keepAnnotationLayer=false,keepAnnotationEditorLayer:keepAnnotationEditorLayer=false,keepXfaLayer:keepXfaLayer=false,keepTextLayer:keepTextLayer=false,keepCanvasWrapper:keepCanvasWrapper=false,preserveDetailViewState:preserveDetailViewState=false}={}){this.cancelRendering({keepAnnotationLayer:keepAnnotationLayer,keepAnnotationEditorLayer:keepAnnotationEditorLayer,keepXfaLayer:keepXfaLayer,keepTextLayer:keepTextLayer});this.renderingState=RenderingStates.INITIAL;const div=this.div;const childNodes=div.childNodes,annotationLayerNode=keepAnnotationLayer&&this.annotationLayer?.div||null,annotationEditorLayerNode=keepAnnotationEditorLayer&&this.annotationEditorLayer?.div||null,xfaLayerNode=keepXfaLayer&&this.xfaLayer?.div||null,textLayerNode=keepTextLayer&&this.textLayer?.div||null,canvasWrapperNode=keepCanvasWrapper&&this.#canvasWrapper||null;for(let i=childNodes.length-1;i>=0;i--){const node=childNodes[i];switch(node){case annotationLayerNode:case annotationEditorLayerNode:case xfaLayerNode:case textLayerNode:case canvasWrapperNode:continue}node.remove();const layerIndex=this.#layers.indexOf(node);if(layerIndex>=0){this.#layers[layerIndex]=null}}div.removeAttribute(\"data-loaded\");if(annotationLayerNode){this.annotationLayer.hide()}if(annotationEditorLayerNode){this.annotationEditorLayer.hide()}if(xfaLayerNode){this.xfaLayer.hide()}if(textLayerNode){this.textLayer.hide()}this.structTreeLayer?.hide();if(!keepCanvasWrapper&&this.#canvasWrapper){this.#canvasWrapper=null;this._resetCanvas()}if(!preserveDetailViewState){this.detailView?.reset({keepCanvas:keepCanvasWrapper});if(!keepCanvasWrapper){this.detailView=null}}}toggleEditingMode(isEditing){this.#isEditing=isEditing;if(!this.hasEditableAnnotations()){return}this.reset({keepAnnotationLayer:true,keepAnnotationEditorLayer:true,keepXfaLayer:true,keepTextLayer:true,keepCanvasWrapper:true})}updateVisibleArea(visibleArea){if(this.enableDetailCanvas){if(this.#needsRestrictedScaling&&this.maxCanvasPixels>0&&visibleArea){this.detailView??=new PDFPageDetailView({pageView:this});this.detailView.update({visibleArea:visibleArea})}else if(this.detailView){this.detailView.reset();this.detailView=null}}}update({scale:scale=0,rotation:rotation=null,optionalContentConfigPromise:optionalContentConfigPromise=null,drawingDelay:drawingDelay=-1}){this.scale=scale||this.scale;if(typeof rotation===\"number\"){this.rotation=rotation}if(optionalContentConfigPromise instanceof Promise){this._optionalContentConfigPromise=optionalContentConfigPromise;optionalContentConfigPromise.then((optionalContentConfig=>{if(optionalContentConfigPromise!==this._optionalContentConfigPromise){return}this.#useThumbnailCanvas.initialOptionalContent=optionalContentConfig.hasInitialVisibility}))}this.#useThumbnailCanvas.directDrawing=true;const totalRotation=(this.rotation+this.pdfPageRotate)%360;this.viewport=this.viewport.clone({scale:this.scale*PixelsPerInch.PDF_TO_CSS_UNITS,rotation:totalRotation});this.#setDimensions();if(this._isStandalone){this._container?.style.setProperty(\"--scale-factor\",this.viewport.scale)}this.#computeScale();if(this.canvas){const onlyCssZoom=this.#hasRestrictedScaling&&this.#needsRestrictedScaling;const postponeDrawing=drawingDelay>=0&&drawingDelay<1e3;if(postponeDrawing||onlyCssZoom){if(postponeDrawing&&!onlyCssZoom&&this.renderingState!==RenderingStates.FINISHED){this.cancelRendering({keepAnnotationLayer:true,keepAnnotationEditorLayer:true,keepXfaLayer:true,keepTextLayer:true,cancelExtraDelay:drawingDelay});this.renderingState=RenderingStates.FINISHED;this.#useThumbnailCanvas.directDrawing=false}this.cssTransform({redrawAnnotationLayer:true,redrawAnnotationEditorLayer:true,redrawXfaLayer:true,redrawTextLayer:!postponeDrawing,hideTextLayer:postponeDrawing});if(!postponeDrawing){this.detailView?.update({underlyingViewUpdated:true});this.dispatchPageRendered(true,false)}return}}this.cssTransform({});this.reset({keepAnnotationLayer:true,keepAnnotationEditorLayer:true,keepXfaLayer:true,keepTextLayer:true,keepCanvasWrapper:true,preserveDetailViewState:true});this.detailView?.update({underlyingViewUpdated:true})}#computeScale(){const{width:width,height:height}=this.viewport;const outputScale=this.outputScale=new OutputScale;if(this.maxCanvasPixels===0){const invScale=1/this.scale;outputScale.sx*=invScale;outputScale.sy*=invScale;this.#needsRestrictedScaling=true}else{this.#needsRestrictedScaling=outputScale.limitCanvas(width,height,this.maxCanvasPixels,this.maxCanvasDim,this.capCanvasAreaFactor)}}cancelRendering({keepAnnotationLayer:keepAnnotationLayer=false,keepAnnotationEditorLayer:keepAnnotationEditorLayer=false,keepXfaLayer:keepXfaLayer=false,keepTextLayer:keepTextLayer=false,cancelExtraDelay:cancelExtraDelay=0}={}){super.cancelRendering({cancelExtraDelay:cancelExtraDelay});if(this.textLayer&&(!keepTextLayer||!this.textLayer.div)){this.textLayer.cancel();this.textLayer=null}if(this.annotationLayer&&(!keepAnnotationLayer||!this.annotationLayer.div)){this.annotationLayer.cancel();this.annotationLayer=null;this._annotationCanvasMap=null}if(this.structTreeLayer&&!this.textLayer){this.structTreeLayer=null}if(this.annotationEditorLayer&&(!keepAnnotationEditorLayer||!this.annotationEditorLayer.div)){if(this.drawLayer){this.drawLayer.cancel();this.drawLayer=null}this.annotationEditorLayer.cancel();this.annotationEditorLayer=null}if(this.xfaLayer&&(!keepXfaLayer||!this.xfaLayer.div)){this.xfaLayer.cancel();this.xfaLayer=null;this._textHighlighter?.disable()}}cssTransform({redrawAnnotationLayer:redrawAnnotationLayer=false,redrawAnnotationEditorLayer:redrawAnnotationEditorLayer=false,redrawXfaLayer:redrawXfaLayer=false,redrawTextLayer:redrawTextLayer=false,hideTextLayer:hideTextLayer=false}){const{canvas:canvas}=this;if(!canvas){return}const originalViewport=this.#originalViewport;if(this.viewport!==originalViewport){const relativeRotation=(360+this.viewport.rotation-originalViewport.rotation)%360;if(relativeRotation===90||relativeRotation===270){const{width:width,height:height}=this.viewport;const scaleX=height/width;const scaleY=width/height;canvas.style.transform=`rotate(${relativeRotation}deg) scale(${scaleX},${scaleY})`}else{canvas.style.transform=relativeRotation===0?\"\":`rotate(${relativeRotation}deg)`}}if(redrawAnnotationLayer&&this.annotationLayer){this.#renderAnnotationLayer()}if(redrawAnnotationEditorLayer&&this.annotationEditorLayer){if(this.drawLayer){this.#renderDrawLayer()}this.#renderAnnotationEditorLayer()}if(redrawXfaLayer&&this.xfaLayer){this.#renderXfaLayer()}if(this.textLayer){if(hideTextLayer){this.textLayer.hide();this.structTreeLayer?.hide()}else if(redrawTextLayer){this.#renderTextLayer()}}}get width(){return this.viewport.width}get height(){return this.viewport.height}getPagePoint(x,y){return this.viewport.convertToPdfPoint(x,y)}_ensureCanvasWrapper(){let canvasWrapper=this.#canvasWrapper;if(!canvasWrapper){canvasWrapper=this.#canvasWrapper=document.createElement(\"div\");canvasWrapper.classList.add(\"canvasWrapper\");this.#addLayer(canvasWrapper,\"canvasWrapper\")}return canvasWrapper}_getRenderingContext(canvasContext,transform){return{canvasContext:canvasContext,transform:transform,viewport:this.viewport,annotationMode:this.#annotationMode,optionalContentConfigPromise:this._optionalContentConfigPromise,annotationCanvasMap:this._annotationCanvasMap,pageColors:this.pageColors,isEditing:this.#isEditing}}async draw(){if(this.renderingState!==RenderingStates.INITIAL){console.error(\"Must be in new state before drawing\");this.reset()}const{div:div,l10n:l10n,pdfPage:pdfPage,viewport:viewport}=this;if(!pdfPage){this.renderingState=RenderingStates.FINISHED;throw new Error(\"pdfPage is not loaded\")}this.renderingState=RenderingStates.RUNNING;const canvasWrapper=this._ensureCanvasWrapper();if(!this.textLayer&&this.#textLayerMode!==TextLayerMode.DISABLE&&!pdfPage.isPureXfa){this._accessibilityManager||=new TextAccessibilityManager;this.textLayer=new TextLayerBuilder({pdfPage:pdfPage,highlighter:this._textHighlighter,accessibilityManager:this._accessibilityManager,enablePermissions:this.#textLayerMode===TextLayerMode.ENABLE_PERMISSIONS,onAppend:textLayerDiv=>{this.l10n.pause();this.#addLayer(textLayerDiv,\"textLayer\");this.l10n.resume()}})}if(!this.annotationLayer&&this.#annotationMode!==AnnotationMode.DISABLE){const{annotationStorage:annotationStorage,annotationEditorUIManager:annotationEditorUIManager,downloadManager:downloadManager,enableScripting:enableScripting,fieldObjectsPromise:fieldObjectsPromise,hasJSActionsPromise:hasJSActionsPromise,linkService:linkService}=this.#layerProperties;this._annotationCanvasMap||=new Map;this.annotationLayer=new AnnotationLayerBuilder({pdfPage:pdfPage,annotationStorage:annotationStorage,imageResourcesPath:this.imageResourcesPath,renderForms:this.#annotationMode===AnnotationMode.ENABLE_FORMS,linkService:linkService,downloadManager:downloadManager,enableScripting:enableScripting,hasJSActionsPromise:hasJSActionsPromise,fieldObjectsPromise:fieldObjectsPromise,annotationCanvasMap:this._annotationCanvasMap,accessibilityManager:this._accessibilityManager,annotationEditorUIManager:annotationEditorUIManager,onAppend:annotationLayerDiv=>{this.#addLayer(annotationLayerDiv,\"annotationLayer\")}})}const{width:width,height:height}=viewport;this.#originalViewport=viewport;const{canvas:canvas,prevCanvas:prevCanvas,ctx:ctx}=this._createCanvas((newCanvas=>{canvasWrapper.prepend(newCanvas)}));canvas.setAttribute(\"role\",\"presentation\");if(!this.outputScale){this.#computeScale()}const{outputScale:outputScale}=this;this.#hasRestrictedScaling=this.#needsRestrictedScaling;const sfx=approximateFraction(outputScale.sx);const sfy=approximateFraction(outputScale.sy);const canvasWidth=canvas.width=floorToDivide(calcRound(width*outputScale.sx),sfx[0]);const canvasHeight=canvas.height=floorToDivide(calcRound(height*outputScale.sy),sfy[0]);const pageWidth=floorToDivide(calcRound(width),sfx[1]);const pageHeight=floorToDivide(calcRound(height),sfy[1]);outputScale.sx=canvasWidth/pageWidth;outputScale.sy=canvasHeight/pageHeight;if(this.#scaleRoundX!==sfx[1]){div.style.setProperty(\"--scale-round-x\",`${sfx[1]}px`);this.#scaleRoundX=sfx[1]}if(this.#scaleRoundY!==sfy[1]){div.style.setProperty(\"--scale-round-y\",`${sfy[1]}px`);this.#scaleRoundY=sfy[1]}const transform=outputScale.scaled?[outputScale.sx,0,0,outputScale.sy,0,0]:null;const resultPromise=this._drawCanvas(this._getRenderingContext(ctx,transform),(()=>{prevCanvas?.remove();this._resetCanvas()}),(renderTask=>{this.#useThumbnailCanvas.regularAnnotations=!renderTask.separateAnnots;this.dispatchPageRendered(false,false)})).then((async()=>{this.structTreeLayer||=new StructTreeLayerBuilder(pdfPage,viewport.rawDims);const textLayerPromise=this.#renderTextLayer();if(this.annotationLayer){await this.#renderAnnotationLayer();if(this.#enableAutoLinking&&this.annotationLayer&&this.textLayer){await this.#injectLinkAnnotations(textLayerPromise)}}const{annotationEditorUIManager:annotationEditorUIManager}=this.#layerProperties;if(!annotationEditorUIManager){return}this.drawLayer||=new DrawLayerBuilder({pageIndex:this.id});await this.#renderDrawLayer();this.drawLayer.setParent(canvasWrapper);this.annotationEditorLayer||=new AnnotationEditorLayerBuilder({uiManager:annotationEditorUIManager,pdfPage:pdfPage,l10n:l10n,structTreeLayer:this.structTreeLayer,accessibilityManager:this._accessibilityManager,annotationLayer:this.annotationLayer?.annotationLayer,textLayer:this.textLayer,drawLayer:this.drawLayer.getDrawLayer(),onAppend:annotationEditorLayerDiv=>{this.#addLayer(annotationEditorLayerDiv,\"annotationEditorLayer\")}});this.#renderAnnotationEditorLayer()}));if(pdfPage.isPureXfa){if(!this.xfaLayer){const{annotationStorage:annotationStorage,linkService:linkService}=this.#layerProperties;this.xfaLayer=new XfaLayerBuilder({pdfPage:pdfPage,annotationStorage:annotationStorage,linkService:linkService})}this.#renderXfaLayer()}div.setAttribute(\"data-loaded\",true);this.dispatchPageRender();return resultPromise}setPageLabel(label){this.pageLabel=typeof label===\"string\"?label:null;this.div.setAttribute(\"data-l10n-args\",JSON.stringify({page:this.pageLabel??this.id}));if(this.pageLabel!==null){this.div.setAttribute(\"data-page-label\",this.pageLabel)}else{this.div.removeAttribute(\"data-page-label\")}}get thumbnailCanvas(){const{directDrawing:directDrawing,initialOptionalContent:initialOptionalContent,regularAnnotations:regularAnnotations}=this.#useThumbnailCanvas;return directDrawing&&initialOptionalContent&&regularAnnotations?this.canvas:null}}const DEFAULT_CACHE_SIZE=10;const PagesCountLimit={FORCE_SCROLL_MODE_PAGE:1e4,FORCE_LAZY_PAGE_INIT:5e3,PAUSE_EAGER_PAGE_INIT:250};function isValidAnnotationEditorMode(mode){return Object.values(AnnotationEditorType).includes(mode)&&mode!==AnnotationEditorType.DISABLE}class PDFPageViewBuffer{#buf=new Set;#size=0;constructor(size){this.#size=size}push(view){const buf=this.#buf;if(buf.has(view)){buf.delete(view)}buf.add(view);if(buf.size>this.#size){this.#destroyFirstView()}}resize(newSize,idsToKeep=null){this.#size=newSize;const buf=this.#buf;if(idsToKeep){const ii=buf.size;let i=1;for(const view of buf){if(idsToKeep.has(view.id)){buf.delete(view);buf.add(view)}if(++i>ii){break}}}while(buf.size>this.#size){this.#destroyFirstView()}}has(view){return this.#buf.has(view)}[Symbol.iterator](){return this.#buf.keys()}#destroyFirstView(){const firstView=this.#buf.keys().next().value;firstView?.destroy();this.#buf.delete(firstView)}}class PDFViewer{#buffer=null;#altTextManager=null;#annotationEditorHighlightColors=null;#annotationEditorMode=AnnotationEditorType.NONE;#annotationEditorUIManager=null;#annotationMode=AnnotationMode.ENABLE_FORMS;#containerTopLeft=null;#editorUndoBar=null;#enableHWA=false;#enableHighlightFloatingButton=false;#enablePermissions=false;#enableUpdatedAddImage=false;#enableNewAltTextWhenAddingImage=false;#enableAutoLinking=true;#eventAbortController=null;#minDurationToUpdateCanvas=0;#mlManager=null;#scrollTimeoutId=null;#switchAnnotationEditorModeAC=null;#switchAnnotationEditorModeTimeoutId=null;#getAllTextInProgress=false;#hiddenCopyElement=null;#interruptCopyCondition=false;#previousContainerHeight=0;#resizeObserver=new ResizeObserver(this.#resizeObserverCallback.bind(this));#scrollModePageState=null;#scaleTimeoutId=null;#signatureManager=null;#supportsPinchToZoom=true;#textLayerMode=TextLayerMode.ENABLE;constructor(options){const viewerVersion=\"5.2.177\";if(version!==viewerVersion){throw new Error(`The API version \"${version}\" does not match the Viewer version \"${viewerVersion}\".`)}this.container=options.container;this.viewer=options.viewer||options.container.firstElementChild;if(this.container?.tagName!==\"DIV\"||this.viewer?.tagName!==\"DIV\"){throw new Error(\"Invalid `container` and/or `viewer` option.\")}if(this.container.offsetParent&&getComputedStyle(this.container).position!==\"absolute\"){throw new Error(\"The `container` must be absolutely positioned.\")}this.#resizeObserver.observe(this.container);this.eventBus=options.eventBus;this.linkService=options.linkService||new SimpleLinkService;this.downloadManager=options.downloadManager||null;this.findController=options.findController||null;this.#altTextManager=options.altTextManager||null;this.#signatureManager=options.signatureManager||null;this.#editorUndoBar=options.editorUndoBar||null;if(this.findController){this.findController.onIsPageVisible=pageNumber=>this._getVisiblePages().ids.has(pageNumber)}this._scriptingManager=options.scriptingManager||null;this.#textLayerMode=options.textLayerMode??TextLayerMode.ENABLE;this.#annotationMode=options.annotationMode??AnnotationMode.ENABLE_FORMS;this.#annotationEditorMode=options.annotationEditorMode??AnnotationEditorType.NONE;this.#annotationEditorHighlightColors=options.annotationEditorHighlightColors||null;this.#enableHighlightFloatingButton=options.enableHighlightFloatingButton===true;this.#enableUpdatedAddImage=options.enableUpdatedAddImage===true;this.#enableNewAltTextWhenAddingImage=options.enableNewAltTextWhenAddingImage===true;this.imageResourcesPath=options.imageResourcesPath||\"\";this.enablePrintAutoRotate=options.enablePrintAutoRotate||false;this.removePageBorders=options.removePageBorders||false;this.maxCanvasPixels=options.maxCanvasPixels;this.maxCanvasDim=options.maxCanvasDim;this.capCanvasAreaFactor=options.capCanvasAreaFactor;this.enableDetailCanvas=options.enableDetailCanvas??true;this.l10n=options.l10n;this.l10n||=new genericl10n_GenericL10n;this.#enablePermissions=options.enablePermissions||false;this.pageColors=options.pageColors||null;this.#mlManager=options.mlManager||null;this.#enableHWA=options.enableHWA||false;this.#supportsPinchToZoom=options.supportsPinchToZoom!==false;this.#enableAutoLinking=options.enableAutoLinking!==false;this.#minDurationToUpdateCanvas=options.minDurationToUpdateCanvas??500;this.defaultRenderingQueue=!options.renderingQueue;if(this.defaultRenderingQueue){this.renderingQueue=new PDFRenderingQueue;this.renderingQueue.setViewer(this)}else{this.renderingQueue=options.renderingQueue}const{abortSignal:abortSignal}=options;abortSignal?.addEventListener(\"abort\",(()=>{this.#resizeObserver.disconnect();this.#resizeObserver=null}),{once:true});this.scroll=watchScroll(this.container,this._scrollUpdate.bind(this),abortSignal);this.presentationModeState=PresentationModeState.UNKNOWN;this._resetView();if(this.removePageBorders){this.viewer.classList.add(\"removePageBorders\")}this.#updateContainerHeightCss();this.eventBus._on(\"thumbnailrendered\",(({pageNumber:pageNumber,pdfPage:pdfPage})=>{const pageView=this._pages[pageNumber-1];if(!this.#buffer.has(pageView)){pdfPage?.cleanup()}}));if(!options.l10n){this.l10n.translate(this.container)}}get pagesCount(){return this._pages.length}getPageView(index){return this._pages[index]}getCachedPageViews(){return new Set(this.#buffer)}get pageViewsReady(){return this._pages.every((pageView=>pageView?.pdfPage))}get renderForms(){return this.#annotationMode===AnnotationMode.ENABLE_FORMS}get enableScripting(){return!!this._scriptingManager}get currentPageNumber(){return this._currentPageNumber}set currentPageNumber(val){if(!Number.isInteger(val)){throw new Error(\"Invalid page number.\")}if(!this.pdfDocument){return}if(!this._setCurrentPageNumber(val,true)){console.error(`currentPageNumber: \"${val}\" is not a valid page.`)}}_setCurrentPageNumber(val,resetCurrentPageView=false){if(this._currentPageNumber===val){if(resetCurrentPageView){this.#resetCurrentPageView()}return true}if(!(0<val&&val<=this.pagesCount)){return false}const previous=this._currentPageNumber;this._currentPageNumber=val;this.eventBus.dispatch(\"pagechanging\",{source:this,pageNumber:val,pageLabel:this._pageLabels?.[val-1]??null,previous:previous});if(resetCurrentPageView){this.#resetCurrentPageView()}return true}get currentPageLabel(){return this._pageLabels?.[this._currentPageNumber-1]??null}set currentPageLabel(val){if(!this.pdfDocument){return}let page=val|0;if(this._pageLabels){const i=this._pageLabels.indexOf(val);if(i>=0){page=i+1}}if(!this._setCurrentPageNumber(page,true)){console.error(`currentPageLabel: \"${val}\" is not a valid page.`)}}get currentScale(){return this._currentScale!==UNKNOWN_SCALE?this._currentScale:DEFAULT_SCALE}set currentScale(val){if(isNaN(val)){throw new Error(\"Invalid numeric scale.\")}if(!this.pdfDocument){return}this.#setScale(val,{noScroll:false})}get currentScaleValue(){return this._currentScaleValue}set currentScaleValue(val){if(!this.pdfDocument){return}this.#setScale(val,{noScroll:false})}get pagesRotation(){return this._pagesRotation}set pagesRotation(rotation){if(!isValidRotation(rotation)){throw new Error(\"Invalid pages rotation angle.\")}if(!this.pdfDocument){return}rotation%=360;if(rotation<0){rotation+=360}if(this._pagesRotation===rotation){return}this._pagesRotation=rotation;const pageNumber=this._currentPageNumber;this.refresh(true,{rotation:rotation});if(this._currentScaleValue){this.#setScale(this._currentScaleValue,{noScroll:true})}this.eventBus.dispatch(\"rotationchanging\",{source:this,pagesRotation:rotation,pageNumber:pageNumber});if(this.defaultRenderingQueue){this.update()}}get firstPagePromise(){return this.pdfDocument?this._firstPageCapability.promise:null}get onePageRendered(){return this.pdfDocument?this._onePageRenderedCapability.promise:null}get pagesPromise(){return this.pdfDocument?this._pagesCapability.promise:null}get _layerProperties(){const self=this;return shadow(this,\"_layerProperties\",{get annotationEditorUIManager(){return self.#annotationEditorUIManager},get annotationStorage(){return self.pdfDocument?.annotationStorage},get downloadManager(){return self.downloadManager},get enableScripting(){return!!self._scriptingManager},get fieldObjectsPromise(){return self.pdfDocument?.getFieldObjects()},get findController(){return self.findController},get hasJSActionsPromise(){return self.pdfDocument?.hasJSActions()},get linkService(){return self.linkService}})}#initializePermissions(permissions){const params={annotationEditorMode:this.#annotationEditorMode,annotationMode:this.#annotationMode,textLayerMode:this.#textLayerMode};if(!permissions){return params}if(!permissions.includes(PermissionFlag.COPY)&&this.#textLayerMode===TextLayerMode.ENABLE){params.textLayerMode=TextLayerMode.ENABLE_PERMISSIONS}if(!permissions.includes(PermissionFlag.MODIFY_CONTENTS)){params.annotationEditorMode=AnnotationEditorType.DISABLE}if(!permissions.includes(PermissionFlag.MODIFY_ANNOTATIONS)&&!permissions.includes(PermissionFlag.FILL_INTERACTIVE_FORMS)&&this.#annotationMode===AnnotationMode.ENABLE_FORMS){params.annotationMode=AnnotationMode.ENABLE}return params}async#onePageRenderedOrForceFetch(signal){if(document.visibilityState===\"hidden\"||!this.container.offsetParent||this._getVisiblePages().views.length===0){return}const hiddenCapability=Promise.withResolvers(),ac=new AbortController;document.addEventListener(\"visibilitychange\",(()=>{if(document.visibilityState===\"hidden\"){hiddenCapability.resolve()}}),{signal:AbortSignal.any([signal,ac.signal])});await Promise.race([this._onePageRenderedCapability.promise,hiddenCapability.promise]);ac.abort()}async getAllText(){const texts=[];const buffer=[];for(let pageNum=1,pagesCount=this.pdfDocument.numPages;pageNum<=pagesCount;++pageNum){if(this.#interruptCopyCondition){return null}buffer.length=0;const page=await this.pdfDocument.getPage(pageNum);const{items:items}=await page.getTextContent();for(const item of items){if(item.str){buffer.push(item.str)}if(item.hasEOL){buffer.push(\"\\n\")}}texts.push(removeNullCharacters(buffer.join(\"\")))}return texts.join(\"\\n\")}#copyCallback(textLayerMode,event){const selection=document.getSelection();const{focusNode:focusNode,anchorNode:anchorNode}=selection;if(anchorNode&&focusNode&&selection.containsNode(this.#hiddenCopyElement)){if(this.#getAllTextInProgress||textLayerMode===TextLayerMode.ENABLE_PERMISSIONS){stopEvent(event);return}this.#getAllTextInProgress=true;const{classList:classList}=this.viewer;classList.add(\"copyAll\");const ac=new AbortController;window.addEventListener(\"keydown\",(ev=>this.#interruptCopyCondition=ev.key===\"Escape\"),{signal:ac.signal});this.getAllText().then((async text=>{if(text!==null){await navigator.clipboard.writeText(text)}})).catch((reason=>{console.warn(`Something goes wrong when extracting the text: ${reason.message}`)})).finally((()=>{this.#getAllTextInProgress=false;this.#interruptCopyCondition=false;ac.abort();classList.remove(\"copyAll\")}));stopEvent(event)}}setDocument(pdfDocument){if(this.pdfDocument){this.eventBus.dispatch(\"pagesdestroy\",{source:this});this._cancelRendering();this._resetView();this.findController?.setDocument(null);this._scriptingManager?.setDocument(null);this.#annotationEditorUIManager?.destroy();this.#annotationEditorUIManager=null}this.pdfDocument=pdfDocument;if(!pdfDocument){return}const pagesCount=pdfDocument.numPages;const firstPagePromise=pdfDocument.getPage(1);const optionalContentConfigPromise=pdfDocument.getOptionalContentConfig({intent:\"display\"});const permissionsPromise=this.#enablePermissions?pdfDocument.getPermissions():Promise.resolve();const{eventBus:eventBus,pageColors:pageColors,viewer:viewer}=this;this.#eventAbortController=new AbortController;const{signal:signal}=this.#eventAbortController;if(pagesCount>PagesCountLimit.FORCE_SCROLL_MODE_PAGE){console.warn(\"Forcing PAGE-scrolling for performance reasons, given the length of the document.\");const mode=this._scrollMode=ScrollMode.PAGE;eventBus.dispatch(\"scrollmodechanged\",{source:this,mode:mode})}this._pagesCapability.promise.then((()=>{eventBus.dispatch(\"pagesloaded\",{source:this,pagesCount:pagesCount})}),(()=>{}));const onBeforeDraw=evt=>{const pageView=this._pages[evt.pageNumber-1];if(!pageView){return}this.#buffer.push(pageView)};eventBus._on(\"pagerender\",onBeforeDraw,{signal:signal});const onAfterDraw=evt=>{if(evt.cssTransform||evt.isDetailView){return}this._onePageRenderedCapability.resolve({timestamp:evt.timestamp});eventBus._off(\"pagerendered\",onAfterDraw)};eventBus._on(\"pagerendered\",onAfterDraw,{signal:signal});Promise.all([firstPagePromise,permissionsPromise]).then((([firstPdfPage,permissions])=>{if(pdfDocument!==this.pdfDocument){return}this._firstPageCapability.resolve(firstPdfPage);this._optionalContentConfigPromise=optionalContentConfigPromise;const{annotationEditorMode:annotationEditorMode,annotationMode:annotationMode,textLayerMode:textLayerMode}=this.#initializePermissions(permissions);if(textLayerMode!==TextLayerMode.DISABLE){const element=this.#hiddenCopyElement=document.createElement(\"div\");element.id=\"hiddenCopyElement\";viewer.before(element)}if(annotationEditorMode!==AnnotationEditorType.DISABLE){const mode=annotationEditorMode;if(pdfDocument.isPureXfa){console.warn(\"Warning: XFA-editing is not implemented.\")}else if(isValidAnnotationEditorMode(mode)){this.#annotationEditorUIManager=new AnnotationEditorUIManager(this.container,viewer,this.#altTextManager,this.#signatureManager,eventBus,pdfDocument,pageColors,this.#annotationEditorHighlightColors,this.#enableHighlightFloatingButton,this.#enableUpdatedAddImage,this.#enableNewAltTextWhenAddingImage,this.#mlManager,this.#editorUndoBar,this.#supportsPinchToZoom);eventBus.dispatch(\"annotationeditoruimanager\",{source:this,uiManager:this.#annotationEditorUIManager});if(mode!==AnnotationEditorType.NONE){this.#preloadEditingData(mode);this.#annotationEditorUIManager.updateMode(mode)}}else{console.error(`Invalid AnnotationEditor mode: ${mode}`)}}const viewerElement=this._scrollMode===ScrollMode.PAGE?null:viewer;const scale=this.currentScale;const viewport=firstPdfPage.getViewport({scale:scale*PixelsPerInch.PDF_TO_CSS_UNITS});viewer.style.setProperty(\"--scale-factor\",viewport.scale);if(pageColors?.background){viewer.style.setProperty(\"--page-bg-color\",pageColors.background)}if(pageColors?.foreground===\"CanvasText\"||pageColors?.background===\"Canvas\"){viewer.style.setProperty(\"--hcm-highlight-filter\",pdfDocument.filterFactory.addHighlightHCMFilter(\"highlight\",\"CanvasText\",\"Canvas\",\"HighlightText\",\"Highlight\"));viewer.style.setProperty(\"--hcm-highlight-selected-filter\",pdfDocument.filterFactory.addHighlightHCMFilter(\"highlight_selected\",\"CanvasText\",\"Canvas\",\"HighlightText\",\"ButtonText\"))}for(let pageNum=1;pageNum<=pagesCount;++pageNum){const pageView=new PDFPageView({container:viewerElement,eventBus:eventBus,id:pageNum,scale:scale,defaultViewport:viewport.clone(),optionalContentConfigPromise:optionalContentConfigPromise,renderingQueue:this.renderingQueue,textLayerMode:textLayerMode,annotationMode:annotationMode,imageResourcesPath:this.imageResourcesPath,maxCanvasPixels:this.maxCanvasPixels,maxCanvasDim:this.maxCanvasDim,capCanvasAreaFactor:this.capCanvasAreaFactor,enableDetailCanvas:this.enableDetailCanvas,pageColors:pageColors,l10n:this.l10n,layerProperties:this._layerProperties,enableHWA:this.#enableHWA,enableAutoLinking:this.#enableAutoLinking,minDurationToUpdateCanvas:this.#minDurationToUpdateCanvas});this._pages.push(pageView)}this._pages[0]?.setPdfPage(firstPdfPage);if(this._scrollMode===ScrollMode.PAGE){this.#ensurePageViewVisible()}else if(this._spreadMode!==SpreadMode.NONE){this._updateSpreadMode()}this.#onePageRenderedOrForceFetch(signal).then((async()=>{if(pdfDocument!==this.pdfDocument){return}this.findController?.setDocument(pdfDocument);this._scriptingManager?.setDocument(pdfDocument);if(this.#hiddenCopyElement){document.addEventListener(\"copy\",this.#copyCallback.bind(this,textLayerMode),{signal:signal})}if(this.#annotationEditorUIManager){eventBus.dispatch(\"annotationeditormodechanged\",{source:this,mode:this.#annotationEditorMode})}if(pdfDocument.loadingParams.disableAutoFetch||pagesCount>PagesCountLimit.FORCE_LAZY_PAGE_INIT){this._pagesCapability.resolve();return}let getPagesLeft=pagesCount-1;if(getPagesLeft<=0){this._pagesCapability.resolve();return}for(let pageNum=2;pageNum<=pagesCount;++pageNum){const promise=pdfDocument.getPage(pageNum).then((pdfPage=>{const pageView=this._pages[pageNum-1];if(!pageView.pdfPage){pageView.setPdfPage(pdfPage)}if(--getPagesLeft===0){this._pagesCapability.resolve()}}),(reason=>{console.error(`Unable to get page ${pageNum} to initialize viewer`,reason);if(--getPagesLeft===0){this._pagesCapability.resolve()}}));if(pageNum%PagesCountLimit.PAUSE_EAGER_PAGE_INIT===0){await promise}}}));eventBus.dispatch(\"pagesinit\",{source:this});pdfDocument.getMetadata().then((({info:info})=>{if(pdfDocument!==this.pdfDocument){return}if(info.Language){viewer.lang=info.Language}}));if(this.defaultRenderingQueue){this.update()}})).catch((reason=>{console.error(\"Unable to initialize viewer\",reason);this._pagesCapability.reject(reason)}))}setPageLabels(labels){if(!this.pdfDocument){return}if(!labels){this._pageLabels=null}else if(!(Array.isArray(labels)&&this.pdfDocument.numPages===labels.length)){this._pageLabels=null;console.error(`setPageLabels: Invalid page labels.`)}else{this._pageLabels=labels}for(let i=0,ii=this._pages.length;i<ii;i++){this._pages[i].setPageLabel(this._pageLabels?.[i]??null)}}_resetView(){this._pages=[];this._currentPageNumber=1;this._currentScale=UNKNOWN_SCALE;this._currentScaleValue=null;this._pageLabels=null;this.#buffer=new PDFPageViewBuffer(DEFAULT_CACHE_SIZE);this._location=null;this._pagesRotation=0;this._optionalContentConfigPromise=null;this._firstPageCapability=Promise.withResolvers();this._onePageRenderedCapability=Promise.withResolvers();this._pagesCapability=Promise.withResolvers();this._scrollMode=ScrollMode.VERTICAL;this._previousScrollMode=ScrollMode.UNKNOWN;this._spreadMode=SpreadMode.NONE;this.#scrollModePageState={previousPageNumber:1,scrollDown:true,pages:[]};this.#eventAbortController?.abort();this.#eventAbortController=null;this.viewer.textContent=\"\";this._updateScrollMode();this.viewer.removeAttribute(\"lang\");this.#hiddenCopyElement?.remove();this.#hiddenCopyElement=null;this.#cleanupTimeouts();this.#cleanupSwitchAnnotationEditorMode()}#ensurePageViewVisible(){if(this._scrollMode!==ScrollMode.PAGE){throw new Error(\"#ensurePageViewVisible: Invalid scrollMode value.\")}const pageNumber=this._currentPageNumber,state=this.#scrollModePageState,viewer=this.viewer;viewer.textContent=\"\";state.pages.length=0;if(this._spreadMode===SpreadMode.NONE&&!this.isInPresentationMode){const pageView=this._pages[pageNumber-1];viewer.append(pageView.div);state.pages.push(pageView)}else{const pageIndexSet=new Set,parity=this._spreadMode-1;if(parity===-1){pageIndexSet.add(pageNumber-1)}else if(pageNumber%2!==parity){pageIndexSet.add(pageNumber-1);pageIndexSet.add(pageNumber)}else{pageIndexSet.add(pageNumber-2);pageIndexSet.add(pageNumber-1)}const spread=document.createElement(\"div\");spread.className=\"spread\";if(this.isInPresentationMode){const dummyPage=document.createElement(\"div\");dummyPage.className=\"dummyPage\";spread.append(dummyPage)}for(const i of pageIndexSet){const pageView=this._pages[i];if(!pageView){continue}spread.append(pageView.div);state.pages.push(pageView)}viewer.append(spread)}state.scrollDown=pageNumber>=state.previousPageNumber;state.previousPageNumber=pageNumber}_scrollUpdate(){if(this.pagesCount===0){return}if(this.#scrollTimeoutId){clearTimeout(this.#scrollTimeoutId)}this.#scrollTimeoutId=setTimeout((()=>{this.#scrollTimeoutId=null;this.update()}),100);this.update()}#scrollIntoView(pageView,pageSpot=null){const{div:div,id:id}=pageView;if(this._currentPageNumber!==id){this._setCurrentPageNumber(id)}if(this._scrollMode===ScrollMode.PAGE){this.#ensurePageViewVisible();this.update()}if(!pageSpot&&!this.isInPresentationMode){const left=div.offsetLeft+div.clientLeft,right=left+div.clientWidth;const{scrollLeft:scrollLeft,clientWidth:clientWidth}=this.container;if(this._scrollMode===ScrollMode.HORIZONTAL||left<scrollLeft||right>scrollLeft+clientWidth){pageSpot={left:0,top:0}}}scrollIntoView(div,pageSpot);if(!this._currentScaleValue&&this._location){this._location=null}}#isSameScale(newScale){return newScale===this._currentScale||Math.abs(newScale-this._currentScale)<1e-15}#setScaleUpdatePages(newScale,newValue,{noScroll:noScroll=false,preset:preset=false,drawingDelay:drawingDelay=-1,origin:origin=null}){this._currentScaleValue=newValue.toString();if(this.#isSameScale(newScale)){if(preset){this.eventBus.dispatch(\"scalechanging\",{source:this,scale:newScale,presetValue:newValue})}return}this.viewer.style.setProperty(\"--scale-factor\",newScale*PixelsPerInch.PDF_TO_CSS_UNITS);const postponeDrawing=drawingDelay>=0&&drawingDelay<1e3;this.refresh(true,{scale:newScale,drawingDelay:postponeDrawing?drawingDelay:-1});if(postponeDrawing){this.#scaleTimeoutId=setTimeout((()=>{this.#scaleTimeoutId=null;this.refresh()}),drawingDelay)}const previousScale=this._currentScale;this._currentScale=newScale;if(!noScroll){let page=this._currentPageNumber,dest;if(this._location&&!(this.isInPresentationMode||this.isChangingPresentationMode)){page=this._location.pageNumber;dest=[null,{name:\"XYZ\"},this._location.left,this._location.top,null]}this.scrollPageIntoView({pageNumber:page,destArray:dest,allowNegativeOffset:true});if(Array.isArray(origin)){const scaleDiff=newScale/previousScale-1;const[top,left]=this.containerTopLeft;this.container.scrollLeft+=(origin[0]-left)*scaleDiff;this.container.scrollTop+=(origin[1]-top)*scaleDiff}}this.eventBus.dispatch(\"scalechanging\",{source:this,scale:newScale,presetValue:preset?newValue:undefined});if(this.defaultRenderingQueue){this.update()}}get#pageWidthScaleFactor(){if(this._spreadMode!==SpreadMode.NONE&&this._scrollMode!==ScrollMode.HORIZONTAL){return 2}return 1}#setScale(value,options){let scale=parseFloat(value);if(scale>0){options.preset=false;this.#setScaleUpdatePages(scale,value,options)}else{const currentPage=this._pages[this._currentPageNumber-1];if(!currentPage){return}let hPadding=SCROLLBAR_PADDING,vPadding=VERTICAL_PADDING;if(this.isInPresentationMode){hPadding=vPadding=4;if(this._spreadMode!==SpreadMode.NONE){hPadding*=2}}else if(this.removePageBorders){hPadding=vPadding=0}else if(this._scrollMode===ScrollMode.HORIZONTAL){[hPadding,vPadding]=[vPadding,hPadding]}const pageWidthScale=(this.container.clientWidth-hPadding)/currentPage.width*currentPage.scale/this.#pageWidthScaleFactor;const pageHeightScale=(this.container.clientHeight-vPadding)/currentPage.height*currentPage.scale;switch(value){case\"page-actual\":scale=1;break;case\"page-width\":scale=pageWidthScale;break;case\"page-height\":scale=pageHeightScale;break;case\"page-fit\":scale=Math.min(pageWidthScale,pageHeightScale);break;case\"auto\":const horizontalScale=isPortraitOrientation(currentPage)?pageWidthScale:Math.min(pageHeightScale,pageWidthScale);scale=Math.min(MAX_AUTO_SCALE,horizontalScale);break;default:console.error(`#setScale: \"${value}\" is an unknown zoom value.`);return}options.preset=true;this.#setScaleUpdatePages(scale,value,options)}}#resetCurrentPageView(){const pageView=this._pages[this._currentPageNumber-1];if(this.isInPresentationMode){this.#setScale(this._currentScaleValue,{noScroll:true})}this.#scrollIntoView(pageView)}pageLabelToPageNumber(label){if(!this._pageLabels){return null}const i=this._pageLabels.indexOf(label);if(i<0){return null}return i+1}scrollPageIntoView({pageNumber:pageNumber,destArray:destArray=null,allowNegativeOffset:allowNegativeOffset=false,ignoreDestinationZoom:ignoreDestinationZoom=false}){if(!this.pdfDocument){return}const pageView=Number.isInteger(pageNumber)&&this._pages[pageNumber-1];if(!pageView){console.error(`scrollPageIntoView: \"${pageNumber}\" is not a valid pageNumber parameter.`);return}if(this.isInPresentationMode||!destArray){this._setCurrentPageNumber(pageNumber,true);return}let x=0,y=0;let width=0,height=0,widthScale,heightScale;const changeOrientation=pageView.rotation%180!==0;const pageWidth=(changeOrientation?pageView.height:pageView.width)/pageView.scale/PixelsPerInch.PDF_TO_CSS_UNITS;const pageHeight=(changeOrientation?pageView.width:pageView.height)/pageView.scale/PixelsPerInch.PDF_TO_CSS_UNITS;let scale=0;switch(destArray[1].name){case\"XYZ\":x=destArray[2];y=destArray[3];scale=destArray[4];x=x!==null?x:0;y=y!==null?y:pageHeight;break;case\"Fit\":case\"FitB\":scale=\"page-fit\";break;case\"FitH\":case\"FitBH\":y=destArray[2];scale=\"page-width\";if(y===null&&this._location){x=this._location.left;y=this._location.top}else if(typeof y!==\"number\"||y<0){y=pageHeight}break;case\"FitV\":case\"FitBV\":x=destArray[2];width=pageWidth;height=pageHeight;scale=\"page-height\";break;case\"FitR\":x=destArray[2];y=destArray[3];width=destArray[4]-x;height=destArray[5]-y;let hPadding=SCROLLBAR_PADDING,vPadding=VERTICAL_PADDING;if(this.removePageBorders){hPadding=vPadding=0}widthScale=(this.container.clientWidth-hPadding)/width/PixelsPerInch.PDF_TO_CSS_UNITS;heightScale=(this.container.clientHeight-vPadding)/height/PixelsPerInch.PDF_TO_CSS_UNITS;scale=Math.min(Math.abs(widthScale),Math.abs(heightScale));break;default:console.error(`scrollPageIntoView: \"${destArray[1].name}\" is not a valid destination type.`);return}if(!ignoreDestinationZoom){if(scale&&scale!==this._currentScale){this.currentScaleValue=scale}else if(this._currentScale===UNKNOWN_SCALE){this.currentScaleValue=DEFAULT_SCALE_VALUE}}if(scale===\"page-fit\"&&!destArray[4]){this.#scrollIntoView(pageView);return}const boundingRect=[pageView.viewport.convertToViewportPoint(x,y),pageView.viewport.convertToViewportPoint(x+width,y+height)];let left=Math.min(boundingRect[0][0],boundingRect[1][0]);let top=Math.min(boundingRect[0][1],boundingRect[1][1]);if(!allowNegativeOffset){left=Math.max(left,0);top=Math.max(top,0)}this.#scrollIntoView(pageView,{left:left,top:top})}_updateLocation(firstPage){const currentScale=this._currentScale;const currentScaleValue=this._currentScaleValue;const normalizedScaleValue=parseFloat(currentScaleValue)===currentScale?Math.round(currentScale*1e4)/100:currentScaleValue;const pageNumber=firstPage.id;const currentPageView=this._pages[pageNumber-1];const container=this.container;const topLeft=currentPageView.getPagePoint(container.scrollLeft-firstPage.x,container.scrollTop-firstPage.y);const intLeft=Math.round(topLeft[0]);const intTop=Math.round(topLeft[1]);let pdfOpenParams=`#page=${pageNumber}`;if(!this.isInPresentationMode){pdfOpenParams+=`&zoom=${normalizedScaleValue},${intLeft},${intTop}`}this._location={pageNumber:pageNumber,scale:normalizedScaleValue,top:intTop,left:intLeft,rotation:this._pagesRotation,pdfOpenParams:pdfOpenParams}}update(){const visible=this._getVisiblePages();const visiblePages=visible.views,numVisiblePages=visiblePages.length;if(numVisiblePages===0){return}const newCacheSize=Math.max(DEFAULT_CACHE_SIZE,2*numVisiblePages+1);this.#buffer.resize(newCacheSize,visible.ids);for(const{view:view,visibleArea:visibleArea}of visiblePages){view.updateVisibleArea(visibleArea)}for(const view of this.#buffer){if(!visible.ids.has(view.id)){view.updateVisibleArea(null)}}this.renderingQueue.renderHighestPriority(visible);const isSimpleLayout=this._spreadMode===SpreadMode.NONE&&(this._scrollMode===ScrollMode.PAGE||this._scrollMode===ScrollMode.VERTICAL);const currentId=this._currentPageNumber;let stillFullyVisible=false;for(const page of visiblePages){if(page.percent<100){break}if(page.id===currentId&&isSimpleLayout){stillFullyVisible=true;break}}this._setCurrentPageNumber(stillFullyVisible?currentId:visiblePages[0].id);this._updateLocation(visible.first);this.eventBus.dispatch(\"updateviewarea\",{source:this,location:this._location})}#switchToEditAnnotationMode(){const visible=this._getVisiblePages();const pagesToRefresh=[];const{ids:ids,views:views}=visible;for(const page of views){const{view:view}=page;if(!view.hasEditableAnnotations()){ids.delete(view.id);continue}pagesToRefresh.push(page)}if(pagesToRefresh.length===0){return null}this.renderingQueue.renderHighestPriority({first:pagesToRefresh[0],last:pagesToRefresh.at(-1),views:pagesToRefresh,ids:ids});return ids}containsElement(element){return this.container.contains(element)}focus(){this.container.focus()}get _isContainerRtl(){return getComputedStyle(this.container).direction===\"rtl\"}get isInPresentationMode(){return this.presentationModeState===PresentationModeState.FULLSCREEN}get isChangingPresentationMode(){return this.presentationModeState===PresentationModeState.CHANGING}get isHorizontalScrollbarEnabled(){return this.isInPresentationMode?false:this.container.scrollWidth>this.container.clientWidth}get isVerticalScrollbarEnabled(){return this.isInPresentationMode?false:this.container.scrollHeight>this.container.clientHeight}_getVisiblePages(){const views=this._scrollMode===ScrollMode.PAGE?this.#scrollModePageState.pages:this._pages,horizontal=this._scrollMode===ScrollMode.HORIZONTAL,rtl=horizontal&&this._isContainerRtl;return getVisibleElements({scrollEl:this.container,views:views,sortByVisibility:true,horizontal:horizontal,rtl:rtl})}cleanup(){for(const pageView of this._pages){if(pageView.renderingState!==RenderingStates.FINISHED){pageView.reset()}}}_cancelRendering(){for(const pageView of this._pages){pageView.cancelRendering()}}async#ensurePdfPageLoaded(pageView){if(pageView.pdfPage){return pageView.pdfPage}try{const pdfPage=await this.pdfDocument.getPage(pageView.id);if(!pageView.pdfPage){pageView.setPdfPage(pdfPage)}return pdfPage}catch(reason){console.error(\"Unable to get page for page view\",reason);return null}}#getScrollAhead(visible){if(visible.first?.id===1){return true}else if(visible.last?.id===this.pagesCount){return false}switch(this._scrollMode){case ScrollMode.PAGE:return this.#scrollModePageState.scrollDown;case ScrollMode.HORIZONTAL:return this.scroll.right}return this.scroll.down}forceRendering(currentlyVisiblePages){const visiblePages=currentlyVisiblePages||this._getVisiblePages();const scrollAhead=this.#getScrollAhead(visiblePages);const preRenderExtra=this._spreadMode!==SpreadMode.NONE&&this._scrollMode!==ScrollMode.HORIZONTAL;const ignoreDetailViews=this.#scaleTimeoutId!==null||this.#scrollTimeoutId!==null&&visiblePages.views.some((page=>page.detailView?.renderingCancelled));const pageView=this.renderingQueue.getHighestPriority(visiblePages,this._pages,scrollAhead,preRenderExtra,ignoreDetailViews);if(pageView){this.#ensurePdfPageLoaded(pageView).then((()=>{this.renderingQueue.renderView(pageView)}));return true}return false}get hasEqualPageSizes(){const firstPageView=this._pages[0];for(let i=1,ii=this._pages.length;i<ii;++i){const pageView=this._pages[i];if(pageView.width!==firstPageView.width||pageView.height!==firstPageView.height){return false}}return true}getPagesOverview(){let initialOrientation;return this._pages.map((pageView=>{const viewport=pageView.pdfPage.getViewport({scale:1});const orientation=isPortraitOrientation(viewport);if(initialOrientation===undefined){initialOrientation=orientation}else if(this.enablePrintAutoRotate&&orientation!==initialOrientation){return{width:viewport.height,height:viewport.width,rotation:(viewport.rotation-90)%360}}return{width:viewport.width,height:viewport.height,rotation:viewport.rotation}}))}get optionalContentConfigPromise(){if(!this.pdfDocument){return Promise.resolve(null)}if(!this._optionalContentConfigPromise){console.error(\"optionalContentConfigPromise: Not initialized yet.\");return this.pdfDocument.getOptionalContentConfig({intent:\"display\"})}return this._optionalContentConfigPromise}set optionalContentConfigPromise(promise){if(!(promise instanceof Promise)){throw new Error(`Invalid optionalContentConfigPromise: ${promise}`)}if(!this.pdfDocument){return}if(!this._optionalContentConfigPromise){return}this._optionalContentConfigPromise=promise;this.refresh(false,{optionalContentConfigPromise:promise});this.eventBus.dispatch(\"optionalcontentconfigchanged\",{source:this,promise:promise})}get scrollMode(){return this._scrollMode}set scrollMode(mode){if(this._scrollMode===mode){return}if(!isValidScrollMode(mode)){throw new Error(`Invalid scroll mode: ${mode}`)}if(this.pagesCount>PagesCountLimit.FORCE_SCROLL_MODE_PAGE){return}this._previousScrollMode=this._scrollMode;this._scrollMode=mode;this.eventBus.dispatch(\"scrollmodechanged\",{source:this,mode:mode});this._updateScrollMode(this._currentPageNumber)}_updateScrollMode(pageNumber=null){const scrollMode=this._scrollMode,viewer=this.viewer;viewer.classList.toggle(\"scrollHorizontal\",scrollMode===ScrollMode.HORIZONTAL);viewer.classList.toggle(\"scrollWrapped\",scrollMode===ScrollMode.WRAPPED);if(!this.pdfDocument||!pageNumber){return}if(scrollMode===ScrollMode.PAGE){this.#ensurePageViewVisible()}else if(this._previousScrollMode===ScrollMode.PAGE){this._updateSpreadMode()}if(this._currentScaleValue&&isNaN(this._currentScaleValue)){this.#setScale(this._currentScaleValue,{noScroll:true})}this._setCurrentPageNumber(pageNumber,true);this.update()}get spreadMode(){return this._spreadMode}set spreadMode(mode){if(this._spreadMode===mode){return}if(!isValidSpreadMode(mode)){throw new Error(`Invalid spread mode: ${mode}`)}this._spreadMode=mode;this.eventBus.dispatch(\"spreadmodechanged\",{source:this,mode:mode});this._updateSpreadMode(this._currentPageNumber)}_updateSpreadMode(pageNumber=null){if(!this.pdfDocument){return}const viewer=this.viewer,pages=this._pages;if(this._scrollMode===ScrollMode.PAGE){this.#ensurePageViewVisible()}else{viewer.textContent=\"\";if(this._spreadMode===SpreadMode.NONE){for(const pageView of this._pages){viewer.append(pageView.div)}}else{const parity=this._spreadMode-1;let spread=null;for(let i=0,ii=pages.length;i<ii;++i){if(spread===null){spread=document.createElement(\"div\");spread.className=\"spread\";viewer.append(spread)}else if(i%2===parity){spread=spread.cloneNode(false);viewer.append(spread)}spread.append(pages[i].div)}}}if(!pageNumber){return}if(this._currentScaleValue&&isNaN(this._currentScaleValue)){this.#setScale(this._currentScaleValue,{noScroll:true})}this._setCurrentPageNumber(pageNumber,true);this.update()}_getPageAdvance(currentPageNumber,previous=false){switch(this._scrollMode){case ScrollMode.WRAPPED:{const{views:views}=this._getVisiblePages(),pageLayout=new Map;for(const{id:id,y:y,percent:percent,widthPercent:widthPercent}of views){if(percent===0||widthPercent<100){continue}let yArray=pageLayout.get(y);if(!yArray){pageLayout.set(y,yArray||=[])}yArray.push(id)}for(const yArray of pageLayout.values()){const currentIndex=yArray.indexOf(currentPageNumber);if(currentIndex===-1){continue}const numPages=yArray.length;if(numPages===1){break}if(previous){for(let i=currentIndex-1,ii=0;i>=ii;i--){const currentId=yArray[i],expectedId=yArray[i+1]-1;if(currentId<expectedId){return currentPageNumber-expectedId}}}else{for(let i=currentIndex+1,ii=numPages;i<ii;i++){const currentId=yArray[i],expectedId=yArray[i-1]+1;if(currentId>expectedId){return expectedId-currentPageNumber}}}if(previous){const firstId=yArray[0];if(firstId<currentPageNumber){return currentPageNumber-firstId+1}}else{const lastId=yArray[numPages-1];if(lastId>currentPageNumber){return lastId-currentPageNumber+1}}break}break}case ScrollMode.HORIZONTAL:{break}case ScrollMode.PAGE:case ScrollMode.VERTICAL:{if(this._spreadMode===SpreadMode.NONE){break}const parity=this._spreadMode-1;if(previous&&currentPageNumber%2!==parity){break}else if(!previous&&currentPageNumber%2===parity){break}const{views:views}=this._getVisiblePages(),expectedId=previous?currentPageNumber-1:currentPageNumber+1;for(const{id:id,percent:percent,widthPercent:widthPercent}of views){if(id!==expectedId){continue}if(percent>0&&widthPercent===100){return 2}break}break}}return 1}nextPage(){const currentPageNumber=this._currentPageNumber,pagesCount=this.pagesCount;if(currentPageNumber>=pagesCount){return false}const advance=this._getPageAdvance(currentPageNumber,false)||1;this.currentPageNumber=Math.min(currentPageNumber+advance,pagesCount);return true}previousPage(){const currentPageNumber=this._currentPageNumber;if(currentPageNumber<=1){return false}const advance=this._getPageAdvance(currentPageNumber,true)||1;this.currentPageNumber=Math.max(currentPageNumber-advance,1);return true}updateScale({drawingDelay:drawingDelay,scaleFactor:scaleFactor=null,steps:steps=null,origin:origin}){if(steps===null&&scaleFactor===null){throw new Error(\"Invalid updateScale options: either `steps` or `scaleFactor` must be provided.\")}if(!this.pdfDocument){return}let newScale=this._currentScale;if(scaleFactor>0&&scaleFactor!==1){newScale=Math.round(newScale*scaleFactor*100)/100}else if(steps){const delta=steps>0?DEFAULT_SCALE_DELTA:1/DEFAULT_SCALE_DELTA;const round=steps>0?Math.ceil:Math.floor;steps=Math.abs(steps);do{newScale=round((newScale*delta).toFixed(2)*10)/10}while(--steps>0)}newScale=MathClamp(newScale,MIN_SCALE,MAX_SCALE);this.#setScale(newScale,{noScroll:false,drawingDelay:drawingDelay,origin:origin})}increaseScale(options={}){this.updateScale({...options,steps:options.steps??1})}decreaseScale(options={}){this.updateScale({...options,steps:-(options.steps??1)})}#updateContainerHeightCss(height=this.container.clientHeight){if(height!==this.#previousContainerHeight){this.#previousContainerHeight=height;docStyle.setProperty(\"--viewer-container-height\",`${height}px`)}}#resizeObserverCallback(entries){for(const entry of entries){if(entry.target===this.container){this.#updateContainerHeightCss(Math.floor(entry.borderBoxSize[0].blockSize));this.#containerTopLeft=null;break}}}get containerTopLeft(){return this.#containerTopLeft||=[this.container.offsetTop,this.container.offsetLeft]}#cleanupTimeouts(){if(this.#scaleTimeoutId!==null){clearTimeout(this.#scaleTimeoutId);this.#scaleTimeoutId=null}if(this.#scrollTimeoutId!==null){clearTimeout(this.#scrollTimeoutId);this.#scrollTimeoutId=null}}#cleanupSwitchAnnotationEditorMode(){this.#switchAnnotationEditorModeAC?.abort();this.#switchAnnotationEditorModeAC=null;if(this.#switchAnnotationEditorModeTimeoutId!==null){clearTimeout(this.#switchAnnotationEditorModeTimeoutId);this.#switchAnnotationEditorModeTimeoutId=null}}#preloadEditingData(mode){switch(mode){case AnnotationEditorType.STAMP:this.#mlManager?.loadModel(\"altText\");break;case AnnotationEditorType.SIGNATURE:this.#signatureManager?.loadSignatures();break}}get annotationEditorMode(){return this.#annotationEditorUIManager?this.#annotationEditorMode:AnnotationEditorType.DISABLE}set annotationEditorMode({mode:mode,editId:editId=null,isFromKeyboard:isFromKeyboard=false}){if(!this.#annotationEditorUIManager){throw new Error(`The AnnotationEditor is not enabled.`)}if(this.#annotationEditorMode===mode){return}if(!isValidAnnotationEditorMode(mode)){throw new Error(`Invalid AnnotationEditor mode: ${mode}`)}if(!this.pdfDocument){return}this.#preloadEditingData(mode);const{eventBus:eventBus,pdfDocument:pdfDocument}=this;const updater=async()=>{this.#cleanupSwitchAnnotationEditorMode();this.#annotationEditorMode=mode;await this.#annotationEditorUIManager.updateMode(mode,editId,isFromKeyboard);if(mode!==this.#annotationEditorMode||pdfDocument!==this.pdfDocument){return}eventBus.dispatch(\"annotationeditormodechanged\",{source:this,mode:mode})};if(mode===AnnotationEditorType.NONE||this.#annotationEditorMode===AnnotationEditorType.NONE){const isEditing=mode!==AnnotationEditorType.NONE;if(!isEditing){this.pdfDocument.annotationStorage.resetModifiedIds()}for(const pageView of this._pages){pageView.toggleEditingMode(isEditing)}const idsToRefresh=this.#switchToEditAnnotationMode();if(isEditing&&idsToRefresh){this.#cleanupSwitchAnnotationEditorMode();this.#switchAnnotationEditorModeAC=new AbortController;const signal=AbortSignal.any([this.#eventAbortController.signal,this.#switchAnnotationEditorModeAC.signal]);eventBus._on(\"pagerendered\",(({pageNumber:pageNumber})=>{idsToRefresh.delete(pageNumber);if(idsToRefresh.size===0){this.#switchAnnotationEditorModeTimeoutId=setTimeout(updater,0)}}),{signal:signal});return}}updater()}refresh(noUpdate=false,updateArgs=Object.create(null)){if(!this.pdfDocument){return}for(const pageView of this._pages){pageView.update(updateArgs)}this.#cleanupTimeouts();if(!noUpdate){this.update()}}}class SecondaryToolbar{#opts;constructor(options,eventBus){this.#opts=options;const buttons=[{element:options.presentationModeButton,eventName:\"presentationmode\",close:true},{element:options.printButton,eventName:\"print\",close:true},{element:options.downloadButton,eventName:\"download\",close:true},{element:options.viewBookmarkButton,eventName:null,close:true},{element:options.firstPageButton,eventName:\"firstpage\",close:true},{element:options.lastPageButton,eventName:\"lastpage\",close:true},{element:options.pageRotateCwButton,eventName:\"rotatecw\",close:false},{element:options.pageRotateCcwButton,eventName:\"rotateccw\",close:false},{element:options.cursorSelectToolButton,eventName:\"switchcursortool\",eventDetails:{tool:CursorTool.SELECT},close:true},{element:options.cursorHandToolButton,eventName:\"switchcursortool\",eventDetails:{tool:CursorTool.HAND},close:true},{element:options.scrollPageButton,eventName:\"switchscrollmode\",eventDetails:{mode:ScrollMode.PAGE},close:true},{element:options.scrollVerticalButton,eventName:\"switchscrollmode\",eventDetails:{mode:ScrollMode.VERTICAL},close:true},{element:options.scrollHorizontalButton,eventName:\"switchscrollmode\",eventDetails:{mode:ScrollMode.HORIZONTAL},close:true},{element:options.scrollWrappedButton,eventName:\"switchscrollmode\",eventDetails:{mode:ScrollMode.WRAPPED},close:true},{element:options.spreadNoneButton,eventName:\"switchspreadmode\",eventDetails:{mode:SpreadMode.NONE},close:true},{element:options.spreadOddButton,eventName:\"switchspreadmode\",eventDetails:{mode:SpreadMode.ODD},close:true},{element:options.spreadEvenButton,eventName:\"switchspreadmode\",eventDetails:{mode:SpreadMode.EVEN},close:true},{element:options.imageAltTextSettingsButton,eventName:\"imagealttextsettings\",close:true},{element:options.documentPropertiesButton,eventName:\"documentproperties\",close:true}];buttons.push({element:options.openFileButton,eventName:\"openfile\",close:true});this.eventBus=eventBus;this.opened=false;this.#bindListeners(buttons);this.reset()}get isOpen(){return this.opened}setPageNumber(pageNumber){this.pageNumber=pageNumber;this.#updateUIState()}setPagesCount(pagesCount){this.pagesCount=pagesCount;this.#updateUIState()}reset(){this.pageNumber=0;this.pagesCount=0;this.#updateUIState();this.eventBus.dispatch(\"switchcursortool\",{source:this,reset:true});this.#scrollModeChanged({mode:ScrollMode.VERTICAL});this.#spreadModeChanged({mode:SpreadMode.NONE})}#updateUIState(){const{firstPageButton:firstPageButton,lastPageButton:lastPageButton,pageRotateCwButton:pageRotateCwButton,pageRotateCcwButton:pageRotateCcwButton}=this.#opts;firstPageButton.disabled=this.pageNumber<=1;lastPageButton.disabled=this.pageNumber>=this.pagesCount;pageRotateCwButton.disabled=this.pagesCount===0;pageRotateCcwButton.disabled=this.pagesCount===0}#bindListeners(buttons){const{eventBus:eventBus}=this;const{toggleButton:toggleButton}=this.#opts;toggleButton.addEventListener(\"click\",this.toggle.bind(this));for(const{element:element,eventName:eventName,close:close,eventDetails:eventDetails}of buttons){element.addEventListener(\"click\",(evt=>{if(eventName!==null){eventBus.dispatch(eventName,{source:this,...eventDetails})}if(close){this.close()}eventBus.dispatch(\"reporttelemetry\",{source:this,details:{type:\"buttons\",data:{id:element.id}}})}))}eventBus._on(\"cursortoolchanged\",this.#cursorToolChanged.bind(this));eventBus._on(\"scrollmodechanged\",this.#scrollModeChanged.bind(this));eventBus._on(\"spreadmodechanged\",this.#spreadModeChanged.bind(this))}#cursorToolChanged({tool:tool,disabled:disabled}){const{cursorSelectToolButton:cursorSelectToolButton,cursorHandToolButton:cursorHandToolButton}=this.#opts;toggleCheckedBtn(cursorSelectToolButton,tool===CursorTool.SELECT);toggleCheckedBtn(cursorHandToolButton,tool===CursorTool.HAND);cursorSelectToolButton.disabled=disabled;cursorHandToolButton.disabled=disabled}#scrollModeChanged({mode:mode}){const{scrollPageButton:scrollPageButton,scrollVerticalButton:scrollVerticalButton,scrollHorizontalButton:scrollHorizontalButton,scrollWrappedButton:scrollWrappedButton,spreadNoneButton:spreadNoneButton,spreadOddButton:spreadOddButton,spreadEvenButton:spreadEvenButton}=this.#opts;toggleCheckedBtn(scrollPageButton,mode===ScrollMode.PAGE);toggleCheckedBtn(scrollVerticalButton,mode===ScrollMode.VERTICAL);toggleCheckedBtn(scrollHorizontalButton,mode===ScrollMode.HORIZONTAL);toggleCheckedBtn(scrollWrappedButton,mode===ScrollMode.WRAPPED);const forceScrollModePage=this.pagesCount>PagesCountLimit.FORCE_SCROLL_MODE_PAGE;scrollPageButton.disabled=forceScrollModePage;scrollVerticalButton.disabled=forceScrollModePage;scrollHorizontalButton.disabled=forceScrollModePage;scrollWrappedButton.disabled=forceScrollModePage;const isHorizontal=mode===ScrollMode.HORIZONTAL;spreadNoneButton.disabled=isHorizontal;spreadOddButton.disabled=isHorizontal;spreadEvenButton.disabled=isHorizontal}#spreadModeChanged({mode:mode}){const{spreadNoneButton:spreadNoneButton,spreadOddButton:spreadOddButton,spreadEvenButton:spreadEvenButton}=this.#opts;toggleCheckedBtn(spreadNoneButton,mode===SpreadMode.NONE);toggleCheckedBtn(spreadOddButton,mode===SpreadMode.ODD);toggleCheckedBtn(spreadEvenButton,mode===SpreadMode.EVEN)}open(){if(this.opened){return}this.opened=true;const{toggleButton:toggleButton,toolbar:toolbar}=this.#opts;toggleExpandedBtn(toggleButton,true,toolbar)}close(){if(!this.opened){return}this.opened=false;const{toggleButton:toggleButton,toolbar:toolbar}=this.#opts;toggleExpandedBtn(toggleButton,false,toolbar)}toggle(){if(this.opened){this.close()}else{this.open()}}}const DEFAULT_HEIGHT_IN_PAGE=40;class SignatureManager{#addButton;#tabsToAltText=null;#clearButton;#clearDescription;#currentEditor;#description;#dialog;#drawCurves=null;#drawPlaceholder;#drawPath=null;#drawPathString=\"\";#drawPoints=null;#drawSVG;#drawThickness;#errorBar;#extractedSignatureData=null;#imagePath=null;#imagePicker;#imagePickerLink;#imagePlaceholder;#imageSVG;#saveCheckbox;#saveContainer;#tabButtons;#addSignatureToolbarButton;#loadSignaturesPromise=null;#typeInput;#currentTab=null;#currentTabAC=null;#hasDescriptionChanged=false;#eventBus;#l10n;#overlayManager;#editDescriptionDialog;#signatureStorage;#uiManager=null;static#l10nDescription=null;constructor({dialog:dialog,panels:panels,typeButton:typeButton,typeInput:typeInput,drawButton:drawButton,drawPlaceholder:drawPlaceholder,drawSVG:drawSVG,drawThickness:drawThickness,imageButton:imageButton,imageSVG:imageSVG,imagePlaceholder:imagePlaceholder,imagePicker:imagePicker,imagePickerLink:imagePickerLink,description:description,clearButton:clearButton,cancelButton:cancelButton,addButton:addButton,errorCloseButton:errorCloseButton,errorBar:errorBar,saveCheckbox:saveCheckbox,saveContainer:saveContainer},editSignatureElements,addSignatureToolbarButton,overlayManager,l10n,signatureStorage,eventBus){this.#addButton=addButton;this.#clearButton=clearButton;this.#clearDescription=description.lastElementChild;this.#description=description.firstElementChild;this.#dialog=dialog;this.#drawSVG=drawSVG;this.#drawPlaceholder=drawPlaceholder;this.#drawThickness=drawThickness;this.#errorBar=errorBar;this.#imageSVG=imageSVG;this.#imagePlaceholder=imagePlaceholder;this.#imagePicker=imagePicker;this.#imagePickerLink=imagePickerLink;this.#overlayManager=overlayManager;this.#saveCheckbox=saveCheckbox;this.#saveContainer=saveContainer;this.#addSignatureToolbarButton=addSignatureToolbarButton;this.#typeInput=typeInput;this.#l10n=l10n;this.#signatureStorage=signatureStorage;this.#eventBus=eventBus;this.#editDescriptionDialog=new EditDescriptionDialog(editSignatureElements,overlayManager);SignatureManager.#l10nDescription||=Object.freeze({signature:\"pdfjs-editor-add-signature-description-default-when-drawing\"});dialog.addEventListener(\"close\",this.#close.bind(this));dialog.addEventListener(\"contextmenu\",(e=>{const{target:target}=e;if(target!==this.#typeInput&&target!==this.#description){e.preventDefault()}}));dialog.addEventListener(\"drop\",(e=>{stopEvent(e)}));cancelButton.addEventListener(\"click\",this.#cancel.bind(this));addButton.addEventListener(\"click\",this.#add.bind(this));clearButton.addEventListener(\"click\",(()=>{this.#reportTelemetry({type:\"signature\",action:\"pdfjs.signature.clear\",data:{type:this.#currentTab}});this.#initTab(null)}),{passive:true});this.#description.addEventListener(\"input\",(()=>{this.#clearDescription.disabled=this.#description.value===\"\"}),{passive:true});this.#clearDescription.addEventListener(\"click\",(()=>{this.#description.value=\"\";this.#clearDescription.disabled=true}),{passive:true});errorCloseButton.addEventListener(\"click\",(()=>{errorBar.hidden=true}),{passive:true});this.#initTabButtons(typeButton,drawButton,imageButton,panels);imagePicker.accept=SupportedImageMimeTypes.join(\",\");eventBus._on(\"storedsignatureschanged\",this.#signaturesChanged.bind(this));overlayManager.register(dialog)}#initTabButtons(typeButton,drawButton,imageButton,panels){const buttons=this.#tabButtons=new Map([[\"type\",typeButton],[\"draw\",drawButton],[\"image\",imageButton]]);const tabCallback=e=>{for(const[name,button]of buttons){if(button===e.target){button.setAttribute(\"aria-selected\",true);button.setAttribute(\"tabindex\",0);panels.setAttribute(\"data-selected\",name);this.#initTab(name)}else{button.setAttribute(\"aria-selected\",false);button.setAttribute(\"tabindex\",-1)}}};const buttonsArray=Array.from(buttons.values());for(let i=0,ii=buttonsArray.length;i<ii;i++){const button=buttonsArray[i];button.addEventListener(\"click\",tabCallback,{passive:true});button.addEventListener(\"keydown\",(({key:key})=>{if(key!==\"ArrowLeft\"&&key!==\"ArrowRight\"){return}buttonsArray[i+(key===\"ArrowLeft\"?-1:1)]?.focus()}),{passive:true})}}#resetCommon(){this.#hasDescriptionChanged=false;this.#description.value=\"\";if(this.#currentTab){this.#tabsToAltText.get(this.#currentTab).value=\"\"}}#resetTab(name){switch(name){case\"type\":this.#typeInput.value=\"\";break;case\"draw\":this.#drawCurves=null;this.#drawPoints=null;this.#drawPathString=\"\";this.#drawPath?.remove();this.#drawPath=null;this.#drawPlaceholder.hidden=false;this.#drawThickness.value=1;break;case\"image\":this.#imagePlaceholder.hidden=false;this.#imagePath?.remove();this.#imagePath=null;break}}#initTab(name){if(name&&this.#currentTab===name){return}if(this.#currentTab){this.#tabsToAltText.get(this.#currentTab).value=this.#description.value}if(name){this.#currentTab=name}this.#errorBar.hidden=true;const reset=!name;if(reset){this.#resetCommon()}else{this.#description.value=this.#tabsToAltText.get(this.#currentTab).value}this.#clearDescription.disabled=this.#description.value===\"\";this.#currentTabAC?.abort();this.#currentTabAC=new AbortController;switch(this.#currentTab){case\"type\":this.#initTypeTab(reset);break;case\"draw\":this.#initDrawTab(reset);break;case\"image\":this.#initImageTab(reset);break}}#disableButtons(value){this.#saveCheckbox.disabled=this.#clearButton.disabled=this.#addButton.disabled=this.#description.disabled=!value}#initTypeTab(reset){if(reset){this.#resetTab(\"type\")}this.#disableButtons(this.#typeInput.value);const{signal:signal}=this.#currentTabAC;const options={passive:true,signal:signal};this.#typeInput.addEventListener(\"input\",(()=>{const{value:value}=this.#typeInput;if(!this.#hasDescriptionChanged){this.#tabsToAltText.get(\"type\").default=this.#description.value=value;this.#clearDescription.disabled=value===\"\"}this.#disableButtons(value)}),options);this.#description.addEventListener(\"input\",(()=>{this.#hasDescriptionChanged=this.#typeInput.value!==this.#description.value}),options)}#initDrawTab(reset){if(reset){this.#resetTab(\"draw\")}this.#disableButtons(this.#drawPath);const{signal:signal}=this.#currentTabAC;const options={signal:signal};let currentPointerId=NaN;const drawCallback=e=>{const{pointerId:pointerId}=e;if(!isNaN(currentPointerId)&&currentPointerId!==pointerId){return}currentPointerId=pointerId;e.preventDefault();this.#drawSVG.setPointerCapture(pointerId);const{width:drawWidth,height:drawHeight}=this.#drawSVG.getBoundingClientRect();let{offsetX:offsetX,offsetY:offsetY}=e;offsetX=Math.round(offsetX);offsetY=Math.round(offsetY);if(e.target===this.#drawPlaceholder){this.#drawPlaceholder.hidden=true}if(!this.#drawCurves){this.#drawCurves={width:drawWidth,height:drawHeight,thickness:parseInt(this.#drawThickness.value),curves:[]};this.#disableButtons(true);const svgFactory=new DOMSVGFactory;const path=this.#drawPath=svgFactory.createElement(\"path\");path.setAttribute(\"stroke-width\",this.#drawThickness.value);this.#drawSVG.append(path);this.#drawSVG.addEventListener(\"pointerdown\",drawCallback,options);this.#drawPlaceholder.removeEventListener(\"pointerdown\",drawCallback);if(this.#description.value===\"\"){this.#l10n.get(SignatureManager.#l10nDescription.signature).then((description=>{this.#tabsToAltText.get(\"draw\").default=description;this.#description.value||=description;this.#clearDescription.disabled=this.#description.value===\"\"}))}}this.#drawPoints=[offsetX,offsetY];this.#drawCurves.curves.push({points:this.#drawPoints});this.#drawPathString+=`M ${offsetX} ${offsetY}`;this.#drawPath.setAttribute(\"d\",this.#drawPathString);const finishDrawAC=new AbortController;const listenerDrawOptions={signal:AbortSignal.any([signal,finishDrawAC.signal])};this.#drawSVG.addEventListener(\"contextmenu\",noContextMenu,listenerDrawOptions);this.#drawSVG.addEventListener(\"pointermove\",(evt=>{evt.preventDefault();let{offsetX:x,offsetY:y}=evt;x=Math.round(x);y=Math.round(y);const drawPoints=this.#drawPoints;if(x<0||y<0||x>drawWidth||y>drawHeight||x===drawPoints.at(-2)&&y===drawPoints.at(-1)){return}if(drawPoints.length>=4){const[x1,y1,x2,y2]=drawPoints.slice(-4);this.#drawPathString+=`C${(x1+5*x2)/6} ${(y1+5*y2)/6} ${(5*x2+x)/6} ${(5*y2+y)/6} ${(x2+x)/2} ${(y2+y)/2}`}else{this.#drawPathString+=`L${x} ${y}`}drawPoints.push(x,y);this.#drawPath.setAttribute(\"d\",this.#drawPathString)}),listenerDrawOptions);this.#drawSVG.addEventListener(\"pointerup\",(evt=>{const{pointerId:pId}=evt;if(!isNaN(currentPointerId)&&currentPointerId!==pId){return}currentPointerId=NaN;evt.preventDefault();this.#drawSVG.releasePointerCapture(pId);finishDrawAC.abort();if(this.#drawPoints.length===2){this.#drawPathString+=`L${this.#drawPoints[0]} ${this.#drawPoints[1]}`;this.#drawPath.setAttribute(\"d\",this.#drawPathString)}}),listenerDrawOptions)};if(this.#drawCurves){this.#drawSVG.addEventListener(\"pointerdown\",drawCallback,options)}else{this.#drawPlaceholder.addEventListener(\"pointerdown\",drawCallback,options)}this.#drawThickness.addEventListener(\"input\",(()=>{const{value:thickness}=this.#drawThickness;this.#drawThickness.setAttribute(\"data-l10n-args\",JSON.stringify({thickness:thickness}));if(!this.#drawCurves){return}this.#drawPath.setAttribute(\"stroke-width\",thickness);this.#drawCurves.thickness=thickness}),options)}#initImageTab(reset){if(reset){this.#resetTab(\"image\")}this.#disableButtons(this.#imagePath);const{signal:signal}=this.#currentTabAC;const options={signal:signal};const passiveOptions={passive:true,signal:signal};this.#imagePickerLink.addEventListener(\"keydown\",(e=>{const{key:key}=e;if(key===\"Enter\"||key===\" \"){stopEvent(e);this.#imagePicker.click()}}),options);this.#imagePicker.addEventListener(\"click\",(()=>{this.#dialog.classList.toggle(\"waiting\",true)}),passiveOptions);this.#imagePicker.addEventListener(\"change\",(async()=>{const file=this.#imagePicker.files?.[0];if(!file||!SupportedImageMimeTypes.includes(file.type)){this.#errorBar.hidden=false;this.#dialog.classList.toggle(\"waiting\",false);return}await this.#extractSignature(file)}),passiveOptions);this.#imagePicker.addEventListener(\"cancel\",(()=>{this.#dialog.classList.toggle(\"waiting\",false)}),passiveOptions);this.#imagePlaceholder.addEventListener(\"dragover\",(e=>{const{dataTransfer:dataTransfer}=e;for(const{type:type}of dataTransfer.items){if(!SupportedImageMimeTypes.includes(type)){continue}dataTransfer.dropEffect=dataTransfer.effectAllowed===\"copy\"?\"copy\":\"move\";stopEvent(e);return}dataTransfer.dropEffect=\"none\"}),options);this.#imagePlaceholder.addEventListener(\"drop\",(e=>{const{dataTransfer:{files:files}}=e;if(!files?.length){return}for(const file of files){if(SupportedImageMimeTypes.includes(file.type)){this.#extractSignature(file);break}}stopEvent(e);this.#dialog.classList.toggle(\"waiting\",true)}),options)}async#extractSignature(file){let data;try{data=await this.#uiManager.imageManager.getFromFile(file)}catch(e){console.error(\"SignatureManager.#extractSignature.\",e)}if(!data){this.#errorBar.hidden=false;this.#dialog.classList.toggle(\"waiting\",false);return}const{outline:outline}=this.#extractedSignatureData=this.#currentEditor.getFromImage(data.bitmap);if(!outline){this.#dialog.classList.toggle(\"waiting\",false);return}this.#imagePlaceholder.hidden=true;this.#disableButtons(true);const svgFactory=new DOMSVGFactory;const path=this.#imagePath=svgFactory.createElement(\"path\");this.#imageSVG.setAttribute(\"viewBox\",outline.viewBox);this.#imageSVG.setAttribute(\"preserveAspectRatio\",\"xMidYMid meet\");this.#imageSVG.append(path);path.setAttribute(\"d\",outline.toSVGPath());this.#tabsToAltText.get(\"image\").default=file.name;if(this.#description.value===\"\"){this.#description.value=file.name||\"\";this.#clearDescription.disabled=this.#description.value===\"\"}this.#dialog.classList.toggle(\"waiting\",false)}#getOutlineForType(){return this.#currentEditor.getFromText(this.#typeInput.value,window.getComputedStyle(this.#typeInput))}#getOutlineForDraw(){const{width:width,height:height}=this.#drawSVG.getBoundingClientRect();return this.#currentEditor.getDrawnSignature(this.#drawCurves,width,height)}#reportTelemetry(data){this.#eventBus.dispatch(\"reporttelemetry\",{source:this,details:{type:\"editing\",data:data}})}#addToolbarButton(signatureData,uuid,description){const{curves:curves,areContours:areContours,thickness:thickness,width:width,height:height}=signatureData;const maxDim=Math.max(width,height);const outlineData=SignatureExtractor.processDrawnLines({lines:{curves:curves,thickness:thickness,width:width,height:height},pageWidth:maxDim,pageHeight:maxDim,rotation:0,innerMargin:0,mustSmooth:false,areContours:areContours});if(!outlineData){return}const{outline:outline}=outlineData;const svgFactory=new DOMSVGFactory;const div=document.createElement(\"div\");const button=document.createElement(\"button\");button.addEventListener(\"click\",(()=>{this.#eventBus.dispatch(\"switchannotationeditorparams\",{source:this,type:AnnotationEditorParamsType.CREATE,value:{signatureData:{lines:{curves:curves,thickness:thickness,width:width,height:height},mustSmooth:false,areContours:areContours,description:description,uuid:uuid,heightInPage:DEFAULT_HEIGHT_IN_PAGE}}})}));div.append(button);div.classList.add(\"toolbarAddSignatureButtonContainer\");const svg=svgFactory.create(1,1,true);button.append(svg);const span=document.createElement(\"span\");span.ariaHidden=true;button.append(span);button.classList.add(\"toolbarAddSignatureButton\");button.type=\"button\";span.textContent=description;button.setAttribute(\"data-l10n-id\",\"pdfjs-editor-add-saved-signature-button\");button.setAttribute(\"data-l10n-args\",JSON.stringify({description:description}));button.tabIndex=0;const path=svgFactory.createElement(\"path\");svg.append(path);svg.setAttribute(\"viewBox\",outline.viewBox);svg.setAttribute(\"preserveAspectRatio\",\"xMidYMid meet\");if(areContours){path.classList.add(\"contours\")}path.setAttribute(\"d\",outline.toSVGPath());const deleteButton=document.createElement(\"button\");div.append(deleteButton);deleteButton.classList.add(\"toolbarButton\",\"deleteButton\");deleteButton.setAttribute(\"data-l10n-id\",\"pdfjs-editor-delete-signature-button1\");deleteButton.type=\"button\";deleteButton.tabIndex=0;deleteButton.addEventListener(\"click\",(async()=>{if(await this.#signatureStorage.delete(uuid)){div.remove();this.#reportTelemetry({type:\"signature\",action:\"pdfjs.signature.delete_saved\",data:{savedCount:await this.#signatureStorage.size()}})}}));const deleteSpan=document.createElement(\"span\");deleteButton.append(deleteSpan);deleteSpan.setAttribute(\"data-l10n-id\",\"pdfjs-editor-delete-signature-button-label1\");this.#addSignatureToolbarButton.before(div)}async#signaturesChanged(){const parent=this.#addSignatureToolbarButton.parentElement;while(parent.firstElementChild!==this.#addSignatureToolbarButton){parent.firstElementChild.remove()}this.#loadSignaturesPromise=null;await this.loadSignatures(true)}getSignature(params){return this.open(params)}async loadSignatures(reload=false){if(!this.#addSignatureToolbarButton||!reload&&this.#addSignatureToolbarButton.previousElementSibling||!this.#signatureStorage){return}if(!this.#loadSignaturesPromise){this.#loadSignaturesPromise=this.#signatureStorage.getAll().then((async signatures=>[signatures,await Promise.all(Array.from(signatures.values(),(({signatureData:signatureData})=>SignatureExtractor.decompressSignature(signatureData))))]));if(!reload){return}}const[signatures,signaturesData]=await this.#loadSignaturesPromise;this.#loadSignaturesPromise=null;let i=0;for(const[uuid,{description:description}]of signatures){const data=signaturesData[i++];if(!data){continue}data.curves=data.outlines.map((points=>({points:points})));delete data.outlines;this.#addToolbarButton(data,uuid,description)}}async renderEditButton(editor){const button=document.createElement(\"button\");button.classList.add(\"altText\",\"editDescription\");button.tabIndex=0;button.title=editor.description;const span=document.createElement(\"span\");button.append(span);span.setAttribute(\"data-l10n-id\",\"pdfjs-editor-add-signature-edit-button-label\");button.addEventListener(\"click\",(()=>{this.#editDescriptionDialog.open(editor)}),{passive:true});return button}async open({uiManager:uiManager,editor:editor}){this.#tabsToAltText||=new Map(this.#tabButtons.keys().map((name=>[name,{value:\"\",default:\"\"}])));this.#uiManager=uiManager;this.#currentEditor=editor;this.#uiManager.removeEditListeners();const isStorageFull=await this.#signatureStorage.isFull();this.#saveContainer.classList.toggle(\"fullStorage\",isStorageFull);this.#saveCheckbox.checked=!isStorageFull;await this.#overlayManager.open(this.#dialog);const tabType=this.#tabButtons.get(\"type\");tabType.focus();tabType.click()}#cancel(){this.#finish()}#finish(){this.#overlayManager.closeIfActive(this.#dialog)}#close(){if(this.#currentEditor._drawId===null){this.#currentEditor.remove()}this.#uiManager?.addEditListeners();this.#currentTabAC?.abort();this.#currentTabAC=null;this.#uiManager=null;this.#currentEditor=null;this.#resetCommon();for(const[name]of this.#tabButtons){this.#resetTab(name)}this.#disableButtons(false);this.#currentTab=null;this.#tabsToAltText=null}async#add(){let data;const type=this.#currentTab;switch(type){case\"type\":data=this.#getOutlineForType();break;case\"draw\":data=this.#getOutlineForDraw();break;case\"image\":data=this.#extractedSignatureData;break}let uuid=null;const description=this.#description.value;if(this.#saveCheckbox.checked){const{newCurves:newCurves,areContours:areContours,thickness:thickness,width:width,height:height}=data;const signatureData=await SignatureExtractor.compressSignature({outlines:newCurves,areContours:areContours,thickness:thickness,width:width,height:height});uuid=await this.#signatureStorage.create({description:description,signatureData:signatureData});if(uuid){this.#addToolbarButton({curves:newCurves.map((points=>({points:points}))),areContours:areContours,thickness:thickness,width:width,height:height},uuid,description)}else{console.warn(\"SignatureManager.add: cannot save the signature.\")}}const altText=this.#tabsToAltText.get(type);this.#reportTelemetry({type:\"signature\",action:\"pdfjs.signature.created\",data:{type:type,saved:!!uuid,savedCount:await this.#signatureStorage.size(),descriptionChanged:description!==altText.default}});this.#currentEditor.addSignature(data,DEFAULT_HEIGHT_IN_PAGE,this.#description.value,uuid);this.#finish()}destroy(){this.#uiManager=null;this.#finish()}}class EditDescriptionDialog{#currentEditor;#previousDescription;#description;#dialog;#overlayManager;#signatureSVG;#uiManager;constructor({dialog:dialog,description:description,cancelButton:cancelButton,updateButton:updateButton,editSignatureView:editSignatureView},overlayManager){const descriptionInput=this.#description=description.firstElementChild;this.#signatureSVG=editSignatureView;this.#dialog=dialog;this.#overlayManager=overlayManager;dialog.addEventListener(\"close\",this.#close.bind(this));dialog.addEventListener(\"contextmenu\",(e=>{if(e.target!==this.#description){e.preventDefault()}}));cancelButton.addEventListener(\"click\",this.#cancel.bind(this));updateButton.addEventListener(\"click\",this.#update.bind(this));const clearDescription=description.lastElementChild;clearDescription.addEventListener(\"click\",(()=>{descriptionInput.value=\"\";clearDescription.disabled=true;updateButton.disabled=this.#previousDescription===\"\"}));descriptionInput.addEventListener(\"input\",(()=>{const{value:value}=descriptionInput;clearDescription.disabled=value===\"\";updateButton.disabled=value===this.#previousDescription;editSignatureView.setAttribute(\"aria-label\",value)}),{passive:true});overlayManager.register(dialog)}async open(editor){this.#uiManager=editor._uiManager;this.#currentEditor=editor;this.#previousDescription=this.#description.value=editor.description;this.#description.dispatchEvent(new Event(\"input\"));this.#uiManager.removeEditListeners();const{areContours:areContours,outline:outline}=editor.getSignaturePreview();const svgFactory=new DOMSVGFactory;const path=svgFactory.createElement(\"path\");this.#signatureSVG.append(path);this.#signatureSVG.setAttribute(\"viewBox\",outline.viewBox);path.setAttribute(\"d\",outline.toSVGPath());if(areContours){path.classList.add(\"contours\")}await this.#overlayManager.open(this.#dialog)}async#update(){this.#currentEditor._reportTelemetry({action:\"pdfjs.signature.edit_description\",data:{hasBeenChanged:true}});this.#currentEditor.description=this.#description.value;this.#finish()}#cancel(){this.#currentEditor._reportTelemetry({action:\"pdfjs.signature.edit_description\",data:{hasBeenChanged:false}});this.#finish()}#finish(){this.#overlayManager.closeIfActive(this.#dialog)}#close(){this.#uiManager?.addEditListeners();this.#uiManager=null;this.#currentEditor=null;this.#signatureSVG.firstElementChild.remove()}}class Toolbar{#colorPicker=null;#opts;constructor(options,eventBus,toolbarDensity=0){this.#opts=options;this.eventBus=eventBus;const buttons=[{element:options.previous,eventName:\"previouspage\"},{element:options.next,eventName:\"nextpage\"},{element:options.zoomIn,eventName:\"zoomin\"},{element:options.zoomOut,eventName:\"zoomout\"},{element:options.print,eventName:\"print\"},{element:options.download,eventName:\"download\"},{element:options.editorFreeTextButton,eventName:\"switchannotationeditormode\",eventDetails:{get mode(){const{classList:classList}=options.editorFreeTextButton;return classList.contains(\"toggled\")?AnnotationEditorType.NONE:AnnotationEditorType.FREETEXT}}},{element:options.editorHighlightButton,eventName:\"switchannotationeditormode\",eventDetails:{get mode(){const{classList:classList}=options.editorHighlightButton;return classList.contains(\"toggled\")?AnnotationEditorType.NONE:AnnotationEditorType.HIGHLIGHT}}},{element:options.editorInkButton,eventName:\"switchannotationeditormode\",eventDetails:{get mode(){const{classList:classList}=options.editorInkButton;return classList.contains(\"toggled\")?AnnotationEditorType.NONE:AnnotationEditorType.INK}}},{element:options.editorStampButton,eventName:\"switchannotationeditormode\",eventDetails:{get mode(){const{classList:classList}=options.editorStampButton;return classList.contains(\"toggled\")?AnnotationEditorType.NONE:AnnotationEditorType.STAMP}},telemetry:{type:\"editing\",data:{action:\"pdfjs.image.icon_click\"}}},{element:options.editorSignatureButton,eventName:\"switchannotationeditormode\",eventDetails:{get mode(){const{classList:classList}=options.editorSignatureButton;return classList.contains(\"toggled\")?AnnotationEditorType.NONE:AnnotationEditorType.SIGNATURE}}}];this.#bindListeners(buttons);this.#updateToolbarDensity({value:toolbarDensity});this.reset()}#updateToolbarDensity({value:value}){let name=\"normal\";switch(value){case 1:name=\"compact\";break;case 2:name=\"touch\";break}document.documentElement.setAttribute(\"data-toolbar-density\",name)}setPageNumber(pageNumber,pageLabel){this.pageNumber=pageNumber;this.pageLabel=pageLabel;this.#updateUIState(false)}setPagesCount(pagesCount,hasPageLabels){this.pagesCount=pagesCount;this.hasPageLabels=hasPageLabels;this.#updateUIState(true)}setPageScale(pageScaleValue,pageScale){this.pageScaleValue=(pageScaleValue||pageScale).toString();this.pageScale=pageScale;this.#updateUIState(false)}reset(){this.#colorPicker=null;this.pageNumber=0;this.pageLabel=null;this.hasPageLabels=false;this.pagesCount=0;this.pageScaleValue=DEFAULT_SCALE_VALUE;this.pageScale=DEFAULT_SCALE;this.#updateUIState(true);this.updateLoadingIndicatorState();this.#editorModeChanged({mode:AnnotationEditorType.DISABLE})}#bindListeners(buttons){const{eventBus:eventBus}=this;const{editorHighlightColorPicker:editorHighlightColorPicker,editorHighlightButton:editorHighlightButton,pageNumber:pageNumber,scaleSelect:scaleSelect}=this.#opts;const self=this;for(const{element:element,eventName:eventName,eventDetails:eventDetails,telemetry:telemetry}of buttons){element.addEventListener(\"click\",(evt=>{if(eventName!==null){eventBus.dispatch(eventName,{source:this,...eventDetails,isFromKeyboard:evt.detail===0})}if(telemetry){eventBus.dispatch(\"reporttelemetry\",{source:this,details:telemetry})}}))}pageNumber.addEventListener(\"click\",(function(){this.select()}));pageNumber.addEventListener(\"change\",(function(){eventBus.dispatch(\"pagenumberchanged\",{source:self,value:this.value})}));scaleSelect.addEventListener(\"change\",(function(){if(this.value===\"custom\"){return}eventBus.dispatch(\"scalechanged\",{source:self,value:this.value})}));scaleSelect.addEventListener(\"click\",(function({target:target}){if(this.value===self.pageScaleValue&&target.tagName.toUpperCase()===\"OPTION\"){this.blur()}}));scaleSelect.oncontextmenu=noContextMenu;eventBus._on(\"annotationeditormodechanged\",this.#editorModeChanged.bind(this));eventBus._on(\"showannotationeditorui\",(({mode:mode})=>{switch(mode){case AnnotationEditorType.HIGHLIGHT:editorHighlightButton.click();break}}));eventBus._on(\"toolbardensity\",this.#updateToolbarDensity.bind(this));if(editorHighlightColorPicker){eventBus._on(\"annotationeditoruimanager\",(({uiManager:uiManager})=>{const cp=this.#colorPicker=new ColorPicker({uiManager:uiManager});uiManager.setMainHighlightColorPicker(cp);editorHighlightColorPicker.append(cp.renderMainDropdown())}));eventBus._on(\"mainhighlightcolorpickerupdatecolor\",(({value:value})=>{this.#colorPicker?.updateColor(value)}))}}#editorModeChanged({mode:mode}){const{editorFreeTextButton:editorFreeTextButton,editorFreeTextParamsToolbar:editorFreeTextParamsToolbar,editorHighlightButton:editorHighlightButton,editorHighlightParamsToolbar:editorHighlightParamsToolbar,editorInkButton:editorInkButton,editorInkParamsToolbar:editorInkParamsToolbar,editorStampButton:editorStampButton,editorStampParamsToolbar:editorStampParamsToolbar,editorSignatureButton:editorSignatureButton,editorSignatureParamsToolbar:editorSignatureParamsToolbar}=this.#opts;toggleExpandedBtn(editorFreeTextButton,mode===AnnotationEditorType.FREETEXT,editorFreeTextParamsToolbar);toggleExpandedBtn(editorHighlightButton,mode===AnnotationEditorType.HIGHLIGHT,editorHighlightParamsToolbar);toggleExpandedBtn(editorInkButton,mode===AnnotationEditorType.INK,editorInkParamsToolbar);toggleExpandedBtn(editorStampButton,mode===AnnotationEditorType.STAMP,editorStampParamsToolbar);toggleExpandedBtn(editorSignatureButton,mode===AnnotationEditorType.SIGNATURE,editorSignatureParamsToolbar);const isDisable=mode===AnnotationEditorType.DISABLE;editorFreeTextButton.disabled=isDisable;editorHighlightButton.disabled=isDisable;editorInkButton.disabled=isDisable;editorStampButton.disabled=isDisable;editorSignatureButton.disabled=isDisable}#updateUIState(resetNumPages=false){const{pageNumber:pageNumber,pagesCount:pagesCount,pageScaleValue:pageScaleValue,pageScale:pageScale}=this;const opts=this.#opts;if(resetNumPages){if(this.hasPageLabels){opts.pageNumber.type=\"text\";opts.numPages.setAttribute(\"data-l10n-id\",\"pdfjs-page-of-pages\")}else{opts.pageNumber.type=\"number\";opts.numPages.setAttribute(\"data-l10n-id\",\"pdfjs-of-pages\");opts.numPages.setAttribute(\"data-l10n-args\",JSON.stringify({pagesCount:pagesCount}))}opts.pageNumber.max=pagesCount}if(this.hasPageLabels){opts.pageNumber.value=this.pageLabel;opts.numPages.setAttribute(\"data-l10n-args\",JSON.stringify({pageNumber:pageNumber,pagesCount:pagesCount}))}else{opts.pageNumber.value=pageNumber}opts.previous.disabled=pageNumber<=1;opts.next.disabled=pageNumber>=pagesCount;opts.zoomOut.disabled=pageScale<=MIN_SCALE;opts.zoomIn.disabled=pageScale>=MAX_SCALE;let predefinedValueFound=false;for(const option of opts.scaleSelect.options){if(option.value!==pageScaleValue){option.selected=false;continue}option.selected=true;predefinedValueFound=true}if(!predefinedValueFound){opts.customScaleOption.selected=true;opts.customScaleOption.setAttribute(\"data-l10n-args\",JSON.stringify({scale:Math.round(pageScale*1e4)/100}))}}updateLoadingIndicatorState(loading=false){const{pageNumber:pageNumber}=this.#opts;pageNumber.classList.toggle(\"loading\",loading)}}const DEFAULT_VIEW_HISTORY_CACHE_SIZE=20;class ViewHistory{constructor(fingerprint,cacheSize=DEFAULT_VIEW_HISTORY_CACHE_SIZE){this.fingerprint=fingerprint;this.cacheSize=cacheSize;this._initializedPromise=this._readFromStorage().then((databaseStr=>{const database=JSON.parse(databaseStr||\"{}\");let index=-1;if(!Array.isArray(database.files)){database.files=[]}else{while(database.files.length>=this.cacheSize){database.files.shift()}for(let i=0,ii=database.files.length;i<ii;i++){const branch=database.files[i];if(branch.fingerprint===this.fingerprint){index=i;break}}}if(index===-1){index=database.files.push({fingerprint:this.fingerprint})-1}this.file=database.files[index];this.database=database}))}async _writeToStorage(){const databaseStr=JSON.stringify(this.database);localStorage.setItem(\"pdfjs.history\",databaseStr)}async _readFromStorage(){return localStorage.getItem(\"pdfjs.history\")}async set(name,val){await this._initializedPromise;this.file[name]=val;return this._writeToStorage()}async setMultiple(properties){await this._initializedPromise;for(const name in properties){this.file[name]=properties[name]}return this._writeToStorage()}async get(name,defaultValue){await this._initializedPromise;const val=this.file[name];return val!==undefined?val:defaultValue}async getMultiple(properties){await this._initializedPromise;const values=Object.create(null);for(const name in properties){const val=this.file[name];values[name]=val!==undefined?val:properties[name]}return values}}const FORCE_PAGES_LOADED_TIMEOUT=1e4;const ViewOnLoad={UNKNOWN:-1,PREVIOUS:0,INITIAL:1};const PDFViewerApplication={initialBookmark:document.location.hash.substring(1),_initializedCapability:{...Promise.withResolvers(),settled:false},appConfig:null,pdfDocument:null,pdfLoadingTask:null,printService:null,pdfViewer:null,pdfThumbnailViewer:null,pdfRenderingQueue:null,pdfPresentationMode:null,pdfDocumentProperties:null,pdfLinkService:null,pdfHistory:null,pdfSidebar:null,pdfOutlineViewer:null,pdfAttachmentViewer:null,pdfLayerViewer:null,pdfCursorTools:null,pdfScriptingManager:null,store:null,downloadManager:null,overlayManager:null,preferences:new Preferences,toolbar:null,secondaryToolbar:null,eventBus:null,l10n:null,annotationEditorParams:null,imageAltTextSettings:null,isInitialViewSet:false,isViewerEmbedded:window.parent!==window,url:\"\",baseUrl:\"\",mlManager:null,_downloadUrl:\"\",_eventBusAbortController:null,_windowAbortController:null,_globalAbortController:new AbortController,documentInfo:null,metadata:null,_contentDispositionFilename:null,_contentLength:null,_saveInProgress:false,_wheelUnusedTicks:0,_wheelUnusedFactor:1,_touchManager:null,_touchUnusedTicks:0,_touchUnusedFactor:1,_PDFBug:null,_hasAnnotationEditors:false,_title:document.title,_printAnnotationStoragePromise:null,_isCtrlKeyDown:false,_caretBrowsing:null,_isScrolling:false,editorUndoBar:null,async initialize(appConfig){this.appConfig=appConfig;try{await this.preferences.initializedPromise}catch(ex){console.error(\"initialize:\",ex)}if(AppOptions.get(\"pdfBugEnabled\")){await this._parseHashParams()}let mode;switch(AppOptions.get(\"viewerCssTheme\")){case 1:mode=\"light\";break;case 2:mode=\"dark\";break}if(mode){docStyle.setProperty(\"color-scheme\",mode)}this.l10n=await this.externalServices.createL10n();document.getElementsByTagName(\"html\")[0].dir=this.l10n.getDirection();this.l10n.translate(appConfig.appContainer||document.documentElement);if(this.isViewerEmbedded&&AppOptions.get(\"externalLinkTarget\")===LinkTarget.NONE){AppOptions.set(\"externalLinkTarget\",LinkTarget.TOP)}await this._initializeViewerComponents();this.bindEvents();this.bindWindowEvents();this._initializedCapability.settled=true;this._initializedCapability.resolve()},async _parseHashParams(){const hash=document.location.hash.substring(1);if(!hash){return}const{mainContainer:mainContainer,viewerContainer:viewerContainer}=this.appConfig,params=parseQueryString(hash);const loadPDFBug=async()=>{if(this._PDFBug){return}const{PDFBug:PDFBug}=await import(AppOptions.get(\"debuggerSrc\"));this._PDFBug=PDFBug};if(params.get(\"disableworker\")===\"true\"){try{GlobalWorkerOptions.workerSrc||=AppOptions.get(\"workerSrc\");await import(PDFWorker.workerSrc)}catch(ex){console.error(\"_parseHashParams:\",ex)}}if(params.has(\"textlayer\")){switch(params.get(\"textlayer\")){case\"off\":AppOptions.set(\"textLayerMode\",TextLayerMode.DISABLE);break;case\"visible\":case\"shadow\":case\"hover\":viewerContainer.classList.add(`textLayer-${params.get(\"textlayer\")}`);try{await loadPDFBug();this._PDFBug.loadCSS()}catch(ex){console.error(\"_parseHashParams:\",ex)}break}}if(params.has(\"pdfbug\")){const enabled=params.get(\"pdfbug\").split(\",\");try{await loadPDFBug();this._PDFBug.init(mainContainer,enabled)}catch(ex){console.error(\"_parseHashParams:\",ex)}const debugOpts={pdfBug:true,fontExtraProperties:true};if(globalThis.StepperManager?.enabled){debugOpts.minDurationToUpdateCanvas=0}AppOptions.setAll(debugOpts)}if(params.has(\"locale\")){AppOptions.set(\"localeProperties\",{lang:params.get(\"locale\")})}const opts={disableAutoFetch:x=>x===\"true\",disableFontFace:x=>x===\"true\",disableHistory:x=>x===\"true\",disableRange:x=>x===\"true\",disableStream:x=>x===\"true\",verbosity:x=>x|0};for(const name in opts){const check=opts[name],key=name.toLowerCase();if(params.has(key)){AppOptions.set(name,check(params.get(key)))}}},async _initializeViewerComponents(){const{appConfig:appConfig,externalServices:externalServices,l10n:l10n,mlManager:mlManager}=this;const abortSignal=this._globalAbortController.signal;const eventBus=new EventBus;this.eventBus=AppOptions.eventBus=eventBus;mlManager?.setEventBus(eventBus,abortSignal);const overlayManager=this.overlayManager=new OverlayManager;const renderingQueue=this.pdfRenderingQueue=new PDFRenderingQueue;renderingQueue.onIdle=this._cleanup.bind(this);const linkService=this.pdfLinkService=new PDFLinkService({eventBus:eventBus,externalLinkTarget:AppOptions.get(\"externalLinkTarget\"),externalLinkRel:AppOptions.get(\"externalLinkRel\"),ignoreDestinationZoom:AppOptions.get(\"ignoreDestinationZoom\")});const downloadManager=this.downloadManager=new DownloadManager;const findController=this.findController=new PDFFindController({linkService:linkService,eventBus:eventBus,updateMatchesCountOnProgress:true});const pdfScriptingManager=this.pdfScriptingManager=new PDFScriptingManager({eventBus:eventBus,externalServices:externalServices,docProperties:this._scriptingDocProperties.bind(this)});const container=appConfig.mainContainer,viewer=appConfig.viewerContainer;const annotationEditorMode=AppOptions.get(\"annotationEditorMode\");const pageColors=AppOptions.get(\"forcePageColors\")||window.matchMedia(\"(forced-colors: active)\").matches?{background:AppOptions.get(\"pageColorsBackground\"),foreground:AppOptions.get(\"pageColorsForeground\")}:null;let altTextManager;if(AppOptions.get(\"enableUpdatedAddImage\")){altTextManager=appConfig.newAltTextDialog?new NewAltTextManager(appConfig.newAltTextDialog,overlayManager,eventBus):null}else{altTextManager=appConfig.altTextDialog?new AltTextManager(appConfig.altTextDialog,container,overlayManager,eventBus):null}if(appConfig.editorUndoBar){this.editorUndoBar=new EditorUndoBar(appConfig.editorUndoBar,eventBus)}const signatureManager=AppOptions.get(\"enableSignatureEditor\")&&appConfig.addSignatureDialog?new SignatureManager(appConfig.addSignatureDialog,appConfig.editSignatureDialog,appConfig.annotationEditorParams?.editorSignatureAddSignature||null,overlayManager,l10n,externalServices.createSignatureStorage(eventBus,abortSignal),eventBus):null;const enableHWA=AppOptions.get(\"enableHWA\"),maxCanvasPixels=AppOptions.get(\"maxCanvasPixels\"),maxCanvasDim=AppOptions.get(\"maxCanvasDim\"),capCanvasAreaFactor=AppOptions.get(\"capCanvasAreaFactor\");const pdfViewer=this.pdfViewer=new PDFViewer({container:container,viewer:viewer,eventBus:eventBus,renderingQueue:renderingQueue,linkService:linkService,downloadManager:downloadManager,altTextManager:altTextManager,signatureManager:signatureManager,editorUndoBar:this.editorUndoBar,findController:findController,scriptingManager:AppOptions.get(\"enableScripting\")&&pdfScriptingManager,l10n:l10n,textLayerMode:AppOptions.get(\"textLayerMode\"),annotationMode:AppOptions.get(\"annotationMode\"),annotationEditorMode:annotationEditorMode,annotationEditorHighlightColors:AppOptions.get(\"highlightEditorColors\"),enableHighlightFloatingButton:AppOptions.get(\"enableHighlightFloatingButton\"),enableUpdatedAddImage:AppOptions.get(\"enableUpdatedAddImage\"),enableNewAltTextWhenAddingImage:AppOptions.get(\"enableNewAltTextWhenAddingImage\"),imageResourcesPath:AppOptions.get(\"imageResourcesPath\"),enablePrintAutoRotate:AppOptions.get(\"enablePrintAutoRotate\"),maxCanvasPixels:maxCanvasPixels,maxCanvasDim:maxCanvasDim,capCanvasAreaFactor:capCanvasAreaFactor,enableDetailCanvas:AppOptions.get(\"enableDetailCanvas\"),enablePermissions:AppOptions.get(\"enablePermissions\"),pageColors:pageColors,mlManager:mlManager,abortSignal:abortSignal,enableHWA:enableHWA,supportsPinchToZoom:this.supportsPinchToZoom,enableAutoLinking:AppOptions.get(\"enableAutoLinking\"),minDurationToUpdateCanvas:AppOptions.get(\"minDurationToUpdateCanvas\")});renderingQueue.setViewer(pdfViewer);linkService.setViewer(pdfViewer);pdfScriptingManager.setViewer(pdfViewer);if(appConfig.sidebar?.thumbnailView){this.pdfThumbnailViewer=new PDFThumbnailViewer({container:appConfig.sidebar.thumbnailView,eventBus:eventBus,renderingQueue:renderingQueue,linkService:linkService,maxCanvasPixels:maxCanvasPixels,maxCanvasDim:maxCanvasDim,pageColors:pageColors,abortSignal:abortSignal,enableHWA:enableHWA});renderingQueue.setThumbnailViewer(this.pdfThumbnailViewer)}if(!this.isViewerEmbedded&&!AppOptions.get(\"disableHistory\")){this.pdfHistory=new PDFHistory({linkService:linkService,eventBus:eventBus});linkService.setHistory(this.pdfHistory)}if(!this.supportsIntegratedFind&&appConfig.findBar){this.findBar=new PDFFindBar(appConfig.findBar,appConfig.principalContainer,eventBus)}if(appConfig.annotationEditorParams){if(annotationEditorMode!==AnnotationEditorType.DISABLE){const editorSignatureButton=appConfig.toolbar?.editorSignatureButton;if(editorSignatureButton&&AppOptions.get(\"enableSignatureEditor\")){editorSignatureButton.parentElement.hidden=false}this.annotationEditorParams=new AnnotationEditorParams(appConfig.annotationEditorParams,eventBus)}else{for(const id of[\"editorModeButtons\",\"editorModeSeparator\"]){document.getElementById(id)?.classList.add(\"hidden\")}}}if(mlManager&&appConfig.secondaryToolbar?.imageAltTextSettingsButton){this.imageAltTextSettings=new ImageAltTextSettings(appConfig.altTextSettingsDialog,overlayManager,eventBus,mlManager)}if(appConfig.documentProperties){this.pdfDocumentProperties=new PDFDocumentProperties(appConfig.documentProperties,overlayManager,eventBus,l10n,(()=>this._docFilename))}if(appConfig.secondaryToolbar?.cursorHandToolButton){this.pdfCursorTools=new PDFCursorTools({container:container,eventBus:eventBus,cursorToolOnLoad:AppOptions.get(\"cursorToolOnLoad\")})}if(appConfig.toolbar){this.toolbar=new Toolbar(appConfig.toolbar,eventBus,AppOptions.get(\"toolbarDensity\"))}if(appConfig.secondaryToolbar){if(AppOptions.get(\"enableAltText\")){appConfig.secondaryToolbar.imageAltTextSettingsButton?.classList.remove(\"hidden\");appConfig.secondaryToolbar.imageAltTextSettingsSeparator?.classList.remove(\"hidden\")}this.secondaryToolbar=new SecondaryToolbar(appConfig.secondaryToolbar,eventBus)}if(this.supportsFullscreen&&appConfig.secondaryToolbar?.presentationModeButton){this.pdfPresentationMode=new PDFPresentationMode({container:container,pdfViewer:pdfViewer,eventBus:eventBus})}if(appConfig.passwordOverlay){this.passwordPrompt=new PasswordPrompt(appConfig.passwordOverlay,overlayManager,this.isViewerEmbedded)}if(appConfig.sidebar?.outlineView){this.pdfOutlineViewer=new PDFOutlineViewer({container:appConfig.sidebar.outlineView,eventBus:eventBus,l10n:l10n,linkService:linkService,downloadManager:downloadManager})}if(appConfig.sidebar?.attachmentsView){this.pdfAttachmentViewer=new PDFAttachmentViewer({container:appConfig.sidebar.attachmentsView,eventBus:eventBus,l10n:l10n,downloadManager:downloadManager})}if(appConfig.sidebar?.layersView){this.pdfLayerViewer=new PDFLayerViewer({container:appConfig.sidebar.layersView,eventBus:eventBus,l10n:l10n})}if(appConfig.sidebar){this.pdfSidebar=new PDFSidebar({elements:appConfig.sidebar,eventBus:eventBus,l10n:l10n});this.pdfSidebar.onToggled=this.forceRendering.bind(this);this.pdfSidebar.onUpdateThumbnails=()=>{for(const pageView of pdfViewer.getCachedPageViews()){if(pageView.renderingState===RenderingStates.FINISHED){this.pdfThumbnailViewer.getThumbnail(pageView.id-1)?.setImage(pageView)}}this.pdfThumbnailViewer.scrollThumbnailIntoView(pdfViewer.currentPageNumber)}}},async run(config){await this.initialize(config);const{appConfig:appConfig,eventBus:eventBus}=this;let file;const queryString=document.location.search.substring(1);const params=parseQueryString(queryString);file=params.get(\"file\")??AppOptions.get(\"defaultUrl\");validateFileURL(file);const fileInput=this._openFileInput=document.createElement(\"input\");fileInput.id=\"fileInput\";fileInput.hidden=true;fileInput.type=\"file\";fileInput.value=null;document.body.append(fileInput);fileInput.addEventListener(\"change\",(function(evt){const{files:files}=evt.target;if(!files||files.length===0){return}eventBus.dispatch(\"fileinputchange\",{source:this,fileInput:evt.target})}));appConfig.mainContainer.addEventListener(\"dragover\",(function(evt){for(const item of evt.dataTransfer.items){if(item.type===\"application/pdf\"){evt.dataTransfer.dropEffect=evt.dataTransfer.effectAllowed===\"copy\"?\"copy\":\"move\";stopEvent(evt);return}}}));appConfig.mainContainer.addEventListener(\"drop\",(function(evt){if(evt.dataTransfer.files?.[0].type!==\"application/pdf\"){return}stopEvent(evt);eventBus.dispatch(\"fileinputchange\",{source:this,fileInput:evt.dataTransfer})}));if(!AppOptions.get(\"supportsDocumentFonts\")){AppOptions.set(\"disableFontFace\",true);this.l10n.get(\"pdfjs-web-fonts-disabled\").then((msg=>{console.warn(msg)}))}if(!this.supportsPrinting){appConfig.toolbar?.print?.classList.add(\"hidden\");appConfig.secondaryToolbar?.printButton.classList.add(\"hidden\")}if(!this.supportsFullscreen){appConfig.secondaryToolbar?.presentationModeButton.classList.add(\"hidden\")}if(this.supportsIntegratedFind){appConfig.findBar?.toggleButton?.classList.add(\"hidden\")}if(file){this.open({url:file})}else{this._hideViewBookmark()}},get externalServices(){return shadow(this,\"externalServices\",new ExternalServices)},get initialized(){return this._initializedCapability.settled},get initializedPromise(){return this._initializedCapability.promise},updateZoom(steps,scaleFactor,origin){if(this.pdfViewer.isInPresentationMode){return}this.pdfViewer.updateScale({drawingDelay:AppOptions.get(\"defaultZoomDelay\"),steps:steps,scaleFactor:scaleFactor,origin:origin})},zoomIn(){this.updateZoom(1)},zoomOut(){this.updateZoom(-1)},zoomReset(){if(this.pdfViewer.isInPresentationMode){return}this.pdfViewer.currentScaleValue=DEFAULT_SCALE_VALUE},touchPinchCallback(origin,prevDistance,distance){if(this.supportsPinchToZoom){const newScaleFactor=this._accumulateFactor(this.pdfViewer.currentScale,distance/prevDistance,\"_touchUnusedFactor\");this.updateZoom(null,newScaleFactor,origin)}else{const PIXELS_PER_LINE_SCALE=30;const ticks=this._accumulateTicks((distance-prevDistance)/PIXELS_PER_LINE_SCALE,\"_touchUnusedTicks\");this.updateZoom(ticks,null,origin)}},touchPinchEndCallback(){this._touchUnusedTicks=0;this._touchUnusedFactor=1},get pagesCount(){return this.pdfDocument?this.pdfDocument.numPages:0},get page(){return this.pdfViewer.currentPageNumber},set page(val){this.pdfViewer.currentPageNumber=val},get supportsPrinting(){return shadow(this,\"supportsPrinting\",AppOptions.get(\"supportsPrinting\")&&PDFPrintServiceFactory.supportsPrinting)},get supportsFullscreen(){return shadow(this,\"supportsFullscreen\",document.fullscreenEnabled)},get supportsPinchToZoom(){return shadow(this,\"supportsPinchToZoom\",AppOptions.get(\"supportsPinchToZoom\"))},get supportsIntegratedFind(){return shadow(this,\"supportsIntegratedFind\",AppOptions.get(\"supportsIntegratedFind\"))},get loadingBar(){const barElement=document.getElementById(\"loadingBar\");const bar=barElement?new ProgressBar(barElement):null;return shadow(this,\"loadingBar\",bar)},get supportsMouseWheelZoomCtrlKey(){return shadow(this,\"supportsMouseWheelZoomCtrlKey\",AppOptions.get(\"supportsMouseWheelZoomCtrlKey\"))},get supportsMouseWheelZoomMetaKey(){return shadow(this,\"supportsMouseWheelZoomMetaKey\",AppOptions.get(\"supportsMouseWheelZoomMetaKey\"))},get supportsCaretBrowsingMode(){return AppOptions.get(\"supportsCaretBrowsingMode\")},moveCaret(isUp,select){this._caretBrowsing||=new CaretBrowsingMode(this._globalAbortController.signal,this.appConfig.mainContainer,this.appConfig.viewerContainer,this.appConfig.toolbar?.container);this._caretBrowsing.moveCaret(isUp,select)},setTitleUsingUrl(url=\"\",downloadUrl=null){this.url=url;this.baseUrl=updateUrlHash(url,\"\",true);if(downloadUrl){this._downloadUrl=downloadUrl===url?this.baseUrl:updateUrlHash(downloadUrl,\"\",true)}if(isDataScheme(url)){this._hideViewBookmark()}let title=pdfjs_getPdfFilenameFromUrl(url,\"\");if(!title){try{title=decodeURIComponent(getFilenameFromUrl(url))}catch{}}this.setTitle(title||url)},setTitle(title=this._title){this._title=title;if(this.isViewerEmbedded){return}const editorIndicator=this._hasAnnotationEditors&&!this.pdfRenderingQueue.printing;document.title=`${editorIndicator?\"* \":\"\"}${title}`},get _docFilename(){return this._contentDispositionFilename||pdfjs_getPdfFilenameFromUrl(this.url)},_hideViewBookmark(){const{secondaryToolbar:secondaryToolbar}=this.appConfig;secondaryToolbar?.viewBookmarkButton.classList.add(\"hidden\");if(secondaryToolbar?.presentationModeButton.classList.contains(\"hidden\")){document.getElementById(\"viewBookmarkSeparator\")?.classList.add(\"hidden\")}},async close(){this._unblockDocumentLoadEvent();this._hideViewBookmark();if(!this.pdfLoadingTask){return}if(this.pdfDocument?.annotationStorage.size>0&&this._annotationStorageModified){try{await this.save()}catch{}}const promises=[];promises.push(this.pdfLoadingTask.destroy());this.pdfLoadingTask=null;if(this.pdfDocument){this.pdfDocument=null;this.pdfThumbnailViewer?.setDocument(null);this.pdfViewer.setDocument(null);this.pdfLinkService.setDocument(null);this.pdfDocumentProperties?.setDocument(null)}this.pdfLinkService.externalLinkEnabled=true;this.store=null;this.isInitialViewSet=false;this.url=\"\";this.baseUrl=\"\";this._downloadUrl=\"\";this.documentInfo=null;this.metadata=null;this._contentDispositionFilename=null;this._contentLength=null;this._saveInProgress=false;this._hasAnnotationEditors=false;promises.push(this.pdfScriptingManager.destroyPromise,this.passwordPrompt.close());this.setTitle();this.pdfSidebar?.reset();this.pdfOutlineViewer?.reset();this.pdfAttachmentViewer?.reset();this.pdfLayerViewer?.reset();this.pdfHistory?.reset();this.findBar?.reset();this.toolbar?.reset();this.secondaryToolbar?.reset();this._PDFBug?.cleanup();await Promise.all(promises)},async open(args){if(this.pdfLoadingTask){await this.close()}const workerParams=AppOptions.getAll(OptionKind.WORKER);Object.assign(GlobalWorkerOptions,workerParams);if(args.url){this.setTitleUsingUrl(args.originalUrl||args.url,args.url)}const apiParams=AppOptions.getAll(OptionKind.API);const loadingTask=getDocument({...apiParams,...args});this.pdfLoadingTask=loadingTask;loadingTask.onPassword=(updateCallback,reason)=>{if(this.isViewerEmbedded){this._unblockDocumentLoadEvent()}this.pdfLinkService.externalLinkEnabled=false;this.passwordPrompt.setUpdateCallback(updateCallback,reason);this.passwordPrompt.open()};loadingTask.onProgress=({loaded:loaded,total:total})=>{this.progress(loaded/total)};return loadingTask.promise.then((pdfDocument=>{this.load(pdfDocument)}),(reason=>{if(loadingTask!==this.pdfLoadingTask){return undefined}let key=\"pdfjs-loading-error\";if(reason instanceof InvalidPDFException){key=\"pdfjs-invalid-file-error\"}else if(reason instanceof ResponseException){key=reason.missing?\"pdfjs-missing-file-error\":\"pdfjs-unexpected-response-error\"}return this._documentError(key,{message:reason.message}).then((()=>{throw reason}))}))},async download(){let data;try{data=await(this.pdfDocument?this.pdfDocument.getData():this.pdfLoadingTask.getData())}catch{}this.downloadManager.download(data,this._downloadUrl,this._docFilename)},async save(){if(this._saveInProgress){return}this._saveInProgress=true;await this.pdfScriptingManager.dispatchWillSave();try{const data=await this.pdfDocument.saveDocument();this.downloadManager.download(data,this._downloadUrl,this._docFilename)}catch(reason){console.error(`Error when saving the document:`,reason);await this.download()}finally{await this.pdfScriptingManager.dispatchDidSave();this._saveInProgress=false}if(this._hasAnnotationEditors){this.externalServices.reportTelemetry({type:\"editing\",data:{type:\"save\",stats:this.pdfDocument?.annotationStorage.editorStats}})}},async downloadOrSave(){const{classList:classList}=this.appConfig.appContainer;classList.add(\"wait\");await(this.pdfDocument?.annotationStorage.size>0?this.save():this.download());classList.remove(\"wait\")},async _documentError(key,moreInfo=null){this._unblockDocumentLoadEvent();const message=await this._otherError(key||\"pdfjs-loading-error\",moreInfo);this.eventBus.dispatch(\"documenterror\",{source:this,message:message,reason:moreInfo?.message??null})},async _otherError(key,moreInfo=null){const message=await this.l10n.get(key);const moreInfoText=[`PDF.js v${version||\"?\"} (build: ${build||\"?\"})`];if(moreInfo){moreInfoText.push(`Message: ${moreInfo.message}`);if(moreInfo.stack){moreInfoText.push(`Stack: ${moreInfo.stack}`)}else{if(moreInfo.filename){moreInfoText.push(`File: ${moreInfo.filename}`)}if(moreInfo.lineNumber){moreInfoText.push(`Line: ${moreInfo.lineNumber}`)}}}console.error(`${message}\\n\\n${moreInfoText.join(\"\\n\")}`);return message},progress(level){const percent=Math.round(level*100);if(!this.loadingBar||percent<=this.loadingBar.percent){return}this.loadingBar.percent=percent;if(this.pdfDocument?.loadingParams.disableAutoFetch??AppOptions.get(\"disableAutoFetch\")){this.loadingBar.setDisableAutoFetch()}},load(pdfDocument){this.pdfDocument=pdfDocument;pdfDocument.getDownloadInfo().then((({length:length})=>{this._contentLength=length;this.loadingBar?.hide();firstPagePromise.then((()=>{this.eventBus.dispatch(\"documentloaded\",{source:this})}))}));const pageLayoutPromise=pdfDocument.getPageLayout().catch((()=>{}));const pageModePromise=pdfDocument.getPageMode().catch((()=>{}));const openActionPromise=pdfDocument.getOpenAction().catch((()=>{}));this.toolbar?.setPagesCount(pdfDocument.numPages,false);this.secondaryToolbar?.setPagesCount(pdfDocument.numPages);this.pdfLinkService.setDocument(pdfDocument);this.pdfDocumentProperties?.setDocument(pdfDocument);const pdfViewer=this.pdfViewer;pdfViewer.setDocument(pdfDocument);const{firstPagePromise:firstPagePromise,onePageRendered:onePageRendered,pagesPromise:pagesPromise}=pdfViewer;this.pdfThumbnailViewer?.setDocument(pdfDocument);const storedPromise=(this.store=new ViewHistory(pdfDocument.fingerprints[0])).getMultiple({page:null,zoom:DEFAULT_SCALE_VALUE,scrollLeft:\"0\",scrollTop:\"0\",rotation:null,sidebarView:SidebarView.UNKNOWN,scrollMode:ScrollMode.UNKNOWN,spreadMode:SpreadMode.UNKNOWN}).catch((()=>{}));firstPagePromise.then((pdfPage=>{this.loadingBar?.setWidth(this.appConfig.viewerContainer);this._initializeAnnotationStorageCallbacks(pdfDocument);Promise.all([animationStarted,storedPromise,pageLayoutPromise,pageModePromise,openActionPromise]).then((async([timeStamp,stored,pageLayout,pageMode,openAction])=>{const viewOnLoad=AppOptions.get(\"viewOnLoad\");this._initializePdfHistory({fingerprint:pdfDocument.fingerprints[0],viewOnLoad:viewOnLoad,initialDest:openAction?.dest});const initialBookmark=this.initialBookmark;const zoom=AppOptions.get(\"defaultZoomValue\");let hash=zoom?`zoom=${zoom}`:null;let rotation=null;let sidebarView=AppOptions.get(\"sidebarViewOnLoad\");let scrollMode=AppOptions.get(\"scrollModeOnLoad\");let spreadMode=AppOptions.get(\"spreadModeOnLoad\");if(stored?.page&&viewOnLoad!==ViewOnLoad.INITIAL){hash=`page=${stored.page}&zoom=${zoom||stored.zoom},`+`${stored.scrollLeft},${stored.scrollTop}`;rotation=parseInt(stored.rotation,10);if(sidebarView===SidebarView.UNKNOWN){sidebarView=stored.sidebarView|0}if(scrollMode===ScrollMode.UNKNOWN){scrollMode=stored.scrollMode|0}if(spreadMode===SpreadMode.UNKNOWN){spreadMode=stored.spreadMode|0}}if(pageMode&&sidebarView===SidebarView.UNKNOWN){sidebarView=apiPageModeToSidebarView(pageMode)}if(pageLayout&&scrollMode===ScrollMode.UNKNOWN&&spreadMode===SpreadMode.UNKNOWN){const modes=apiPageLayoutToViewerModes(pageLayout);spreadMode=modes.spreadMode}this.setInitialView(hash,{rotation:rotation,sidebarView:sidebarView,scrollMode:scrollMode,spreadMode:spreadMode});this.eventBus.dispatch(\"documentinit\",{source:this});if(!this.isViewerEmbedded){pdfViewer.focus()}await Promise.race([pagesPromise,new Promise((resolve=>{setTimeout(resolve,FORCE_PAGES_LOADED_TIMEOUT)}))]);if(!initialBookmark&&!hash){return}if(pdfViewer.hasEqualPageSizes){return}this.initialBookmark=initialBookmark;pdfViewer.currentScaleValue=pdfViewer.currentScaleValue;this.setInitialView(hash)})).catch((()=>{this.setInitialView()})).then((function(){pdfViewer.update()}))}));pagesPromise.then((()=>{this._unblockDocumentLoadEvent();this._initializeAutoPrint(pdfDocument,openActionPromise)}),(reason=>{this._documentError(\"pdfjs-loading-error\",{message:reason.message})}));onePageRendered.then((data=>{this.externalServices.reportTelemetry({type:\"pageInfo\",timestamp:data.timestamp});if(this.pdfOutlineViewer){pdfDocument.getOutline().then((outline=>{if(pdfDocument!==this.pdfDocument){return}this.pdfOutlineViewer.render({outline:outline,pdfDocument:pdfDocument})}))}if(this.pdfAttachmentViewer){pdfDocument.getAttachments().then((attachments=>{if(pdfDocument!==this.pdfDocument){return}this.pdfAttachmentViewer.render({attachments:attachments})}))}if(this.pdfLayerViewer){pdfViewer.optionalContentConfigPromise.then((optionalContentConfig=>{if(pdfDocument!==this.pdfDocument){return}this.pdfLayerViewer.render({optionalContentConfig:optionalContentConfig,pdfDocument:pdfDocument})}))}}));this._initializePageLabels(pdfDocument);this._initializeMetadata(pdfDocument)},async _scriptingDocProperties(pdfDocument){if(!this.documentInfo){await new Promise((resolve=>{this.eventBus._on(\"metadataloaded\",resolve,{once:true})}));if(pdfDocument!==this.pdfDocument){return null}}if(!this._contentLength){await new Promise((resolve=>{this.eventBus._on(\"documentloaded\",resolve,{once:true})}));if(pdfDocument!==this.pdfDocument){return null}}return{...this.documentInfo,baseURL:this.baseUrl,filesize:this._contentLength,filename:this._docFilename,metadata:this.metadata?.getRaw(),authors:this.metadata?.get(\"dc:creator\"),numPages:this.pagesCount,URL:this.url}},async _initializeAutoPrint(pdfDocument,openActionPromise){const[openAction,jsActions]=await Promise.all([openActionPromise,this.pdfViewer.enableScripting?null:pdfDocument.getJSActions()]);if(pdfDocument!==this.pdfDocument){return}let triggerAutoPrint=openAction?.action===\"Print\";if(jsActions){console.warn(\"Warning: JavaScript support is not enabled\");for(const name in jsActions){if(triggerAutoPrint){break}switch(name){case\"WillClose\":case\"WillSave\":case\"DidSave\":case\"WillPrint\":case\"DidPrint\":continue}triggerAutoPrint=jsActions[name].some((js=>AutoPrintRegExp.test(js)))}}if(triggerAutoPrint){this.triggerPrinting()}},async _initializeMetadata(pdfDocument){const{info:info,metadata:metadata,contentDispositionFilename:contentDispositionFilename,contentLength:contentLength}=await pdfDocument.getMetadata();if(pdfDocument!==this.pdfDocument){return}this.documentInfo=info;this.metadata=metadata;this._contentDispositionFilename??=contentDispositionFilename;this._contentLength??=contentLength;console.log(`PDF ${pdfDocument.fingerprints[0]} [${info.PDFFormatVersion} `+`${(info.Producer||\"-\").trim()} / ${(info.Creator||\"-\").trim()}] `+`(PDF.js: ${version||\"?\"} [${build||\"?\"}])`);let pdfTitle=info.Title;const metadataTitle=metadata?.get(\"dc:title\");if(metadataTitle){if(metadataTitle!==\"Untitled\"&&!/[\\uFFF0-\\uFFFF]/g.test(metadataTitle)){pdfTitle=metadataTitle}}if(pdfTitle){this.setTitle(`${pdfTitle} - ${this._contentDispositionFilename||this._title}`)}else if(this._contentDispositionFilename){this.setTitle(this._contentDispositionFilename)}if(info.IsXFAPresent&&!info.IsAcroFormPresent&&!pdfDocument.isPureXfa){if(pdfDocument.loadingParams.enableXfa){console.warn(\"Warning: XFA Foreground documents are not supported\")}else{console.warn(\"Warning: XFA support is not enabled\")}}else if((info.IsAcroFormPresent||info.IsXFAPresent)&&!this.pdfViewer.renderForms){console.warn(\"Warning: Interactive form support is not enabled\")}if(info.IsSignaturesPresent){console.warn(\"Warning: Digital signatures validation is not supported\")}this.eventBus.dispatch(\"metadataloaded\",{source:this})},async _initializePageLabels(pdfDocument){const labels=await pdfDocument.getPageLabels();if(pdfDocument!==this.pdfDocument){return}if(!labels||AppOptions.get(\"disablePageLabels\")){return}const numLabels=labels.length;let standardLabels=0,emptyLabels=0;for(let i=0;i<numLabels;i++){const label=labels[i];if(label===(i+1).toString()){standardLabels++}else if(label===\"\"){emptyLabels++}else{break}}if(standardLabels>=numLabels||emptyLabels>=numLabels){return}const{pdfViewer:pdfViewer,pdfThumbnailViewer:pdfThumbnailViewer,toolbar:toolbar}=this;pdfViewer.setPageLabels(labels);pdfThumbnailViewer?.setPageLabels(labels);toolbar?.setPagesCount(numLabels,true);toolbar?.setPageNumber(pdfViewer.currentPageNumber,pdfViewer.currentPageLabel)},_initializePdfHistory({fingerprint:fingerprint,viewOnLoad:viewOnLoad,initialDest:initialDest=null}){if(!this.pdfHistory){return}this.pdfHistory.initialize({fingerprint:fingerprint,resetHistory:viewOnLoad===ViewOnLoad.INITIAL,updateUrl:AppOptions.get(\"historyUpdateUrl\")});if(this.pdfHistory.initialBookmark){this.initialBookmark=this.pdfHistory.initialBookmark;this.initialRotation=this.pdfHistory.initialRotation}if(initialDest&&!this.initialBookmark&&viewOnLoad===ViewOnLoad.UNKNOWN){this.initialBookmark=JSON.stringify(initialDest);this.pdfHistory.push({explicitDest:initialDest,pageNumber:null})}},_initializeAnnotationStorageCallbacks(pdfDocument){if(pdfDocument!==this.pdfDocument){return}const{annotationStorage:annotationStorage}=pdfDocument;annotationStorage.onSetModified=()=>{window.addEventListener(\"beforeunload\",beforeUnload);this._annotationStorageModified=true};annotationStorage.onResetModified=()=>{window.removeEventListener(\"beforeunload\",beforeUnload);delete this._annotationStorageModified};annotationStorage.onAnnotationEditor=typeStr=>{this._hasAnnotationEditors=!!typeStr;this.setTitle()}},setInitialView(storedHash,{rotation:rotation,sidebarView:sidebarView,scrollMode:scrollMode,spreadMode:spreadMode}={}){const setRotation=angle=>{if(isValidRotation(angle)){this.pdfViewer.pagesRotation=angle}};const setViewerModes=(scroll,spread)=>{if(isValidScrollMode(scroll)){this.pdfViewer.scrollMode=scroll}if(isValidSpreadMode(spread)){this.pdfViewer.spreadMode=spread}};this.isInitialViewSet=true;this.pdfSidebar?.setInitialView(sidebarView);setViewerModes(scrollMode,spreadMode);if(this.initialBookmark){setRotation(this.initialRotation);delete this.initialRotation;this.pdfLinkService.setHash(this.initialBookmark);this.initialBookmark=null}else if(storedHash){setRotation(rotation);this.pdfLinkService.setHash(storedHash)}this.toolbar?.setPageNumber(this.pdfViewer.currentPageNumber,this.pdfViewer.currentPageLabel);this.secondaryToolbar?.setPageNumber(this.pdfViewer.currentPageNumber);if(!this.pdfViewer.currentScaleValue){this.pdfViewer.currentScaleValue=DEFAULT_SCALE_VALUE}},_cleanup(){if(!this.pdfDocument){return}this.pdfViewer.cleanup();this.pdfThumbnailViewer?.cleanup();this.pdfDocument.cleanup(AppOptions.get(\"fontExtraProperties\"))},forceRendering(){this.pdfRenderingQueue.printing=!!this.printService;this.pdfRenderingQueue.isThumbnailViewEnabled=this.pdfSidebar?.visibleView===SidebarView.THUMBS;this.pdfRenderingQueue.renderHighestPriority()},beforePrint(){this._printAnnotationStoragePromise=this.pdfScriptingManager.dispatchWillPrint().catch((()=>{})).then((()=>this.pdfDocument?.annotationStorage.print));if(this.printService){return}if(!this.supportsPrinting){this._otherError(\"pdfjs-printing-not-supported\");return}if(!this.pdfViewer.pageViewsReady){this.l10n.get(\"pdfjs-printing-not-ready\").then((msg=>{window.alert(msg)}));return}this.printService=PDFPrintServiceFactory.createPrintService({pdfDocument:this.pdfDocument,pagesOverview:this.pdfViewer.getPagesOverview(),printContainer:this.appConfig.printContainer,printResolution:AppOptions.get(\"printResolution\"),printAnnotationStoragePromise:this._printAnnotationStoragePromise});this.forceRendering();this.setTitle();this.printService.layout();if(this._hasAnnotationEditors){this.externalServices.reportTelemetry({type:\"editing\",data:{type:\"print\",stats:this.pdfDocument?.annotationStorage.editorStats}})}},afterPrint(){if(this._printAnnotationStoragePromise){this._printAnnotationStoragePromise.then((()=>{this.pdfScriptingManager.dispatchDidPrint()}));this._printAnnotationStoragePromise=null}if(this.printService){this.printService.destroy();this.printService=null;this.pdfDocument?.annotationStorage.resetModified()}this.forceRendering();this.setTitle()},rotatePages(delta){this.pdfViewer.pagesRotation+=delta},requestPresentationMode(){this.pdfPresentationMode?.request()},triggerPrinting(){if(this.supportsPrinting){window.print()}},bindEvents(){if(this._eventBusAbortController){return}const ac=this._eventBusAbortController=new AbortController;const opts={signal:ac.signal};const{eventBus:eventBus,externalServices:externalServices,pdfDocumentProperties:pdfDocumentProperties,pdfViewer:pdfViewer,preferences:preferences}=this;eventBus._on(\"resize\",onResize.bind(this),opts);eventBus._on(\"hashchange\",onHashchange.bind(this),opts);eventBus._on(\"beforeprint\",this.beforePrint.bind(this),opts);eventBus._on(\"afterprint\",this.afterPrint.bind(this),opts);eventBus._on(\"pagerender\",onPageRender.bind(this),opts);eventBus._on(\"pagerendered\",onPageRendered.bind(this),opts);eventBus._on(\"updateviewarea\",onUpdateViewarea.bind(this),opts);eventBus._on(\"pagechanging\",onPageChanging.bind(this),opts);eventBus._on(\"scalechanging\",onScaleChanging.bind(this),opts);eventBus._on(\"rotationchanging\",onRotationChanging.bind(this),opts);eventBus._on(\"sidebarviewchanged\",onSidebarViewChanged.bind(this),opts);eventBus._on(\"pagemode\",onPageMode.bind(this),opts);eventBus._on(\"namedaction\",onNamedAction.bind(this),opts);eventBus._on(\"presentationmodechanged\",(evt=>pdfViewer.presentationModeState=evt.state),opts);eventBus._on(\"presentationmode\",this.requestPresentationMode.bind(this),opts);eventBus._on(\"switchannotationeditormode\",(evt=>pdfViewer.annotationEditorMode=evt),opts);eventBus._on(\"print\",this.triggerPrinting.bind(this),opts);eventBus._on(\"download\",this.downloadOrSave.bind(this),opts);eventBus._on(\"firstpage\",(()=>this.page=1),opts);eventBus._on(\"lastpage\",(()=>this.page=this.pagesCount),opts);eventBus._on(\"nextpage\",(()=>pdfViewer.nextPage()),opts);eventBus._on(\"previouspage\",(()=>pdfViewer.previousPage()),opts);eventBus._on(\"zoomin\",this.zoomIn.bind(this),opts);eventBus._on(\"zoomout\",this.zoomOut.bind(this),opts);eventBus._on(\"zoomreset\",this.zoomReset.bind(this),opts);eventBus._on(\"pagenumberchanged\",onPageNumberChanged.bind(this),opts);eventBus._on(\"scalechanged\",(evt=>pdfViewer.currentScaleValue=evt.value),opts);eventBus._on(\"rotatecw\",this.rotatePages.bind(this,90),opts);eventBus._on(\"rotateccw\",this.rotatePages.bind(this,-90),opts);eventBus._on(\"optionalcontentconfig\",(evt=>pdfViewer.optionalContentConfigPromise=evt.promise),opts);eventBus._on(\"switchscrollmode\",(evt=>pdfViewer.scrollMode=evt.mode),opts);eventBus._on(\"scrollmodechanged\",onViewerModesChanged.bind(this,\"scrollMode\"),opts);eventBus._on(\"switchspreadmode\",(evt=>pdfViewer.spreadMode=evt.mode),opts);eventBus._on(\"spreadmodechanged\",onViewerModesChanged.bind(this,\"spreadMode\"),opts);eventBus._on(\"imagealttextsettings\",onImageAltTextSettings.bind(this),opts);eventBus._on(\"documentproperties\",(()=>pdfDocumentProperties?.open()),opts);eventBus._on(\"findfromurlhash\",onFindFromUrlHash.bind(this),opts);eventBus._on(\"updatefindmatchescount\",onUpdateFindMatchesCount.bind(this),opts);eventBus._on(\"updatefindcontrolstate\",onUpdateFindControlState.bind(this),opts);eventBus._on(\"fileinputchange\",onFileInputChange.bind(this),opts);eventBus._on(\"openfile\",onOpenFile.bind(this),opts)},bindWindowEvents(){if(this._windowAbortController){return}this._windowAbortController=new AbortController;const{eventBus:eventBus,appConfig:{mainContainer:mainContainer},pdfViewer:pdfViewer,_windowAbortController:{signal:signal}}=this;this._touchManager=new TouchManager({container:window,isPinchingDisabled:()=>pdfViewer.isInPresentationMode,isPinchingStopped:()=>this.overlayManager?.active,onPinching:this.touchPinchCallback.bind(this),onPinchEnd:this.touchPinchEndCallback.bind(this),signal:signal});function addWindowResolutionChange(evt=null){if(evt){pdfViewer.refresh()}const mediaQueryList=window.matchMedia(`(resolution: ${OutputScale.pixelRatio}dppx)`);mediaQueryList.addEventListener(\"change\",addWindowResolutionChange,{once:true,signal:signal})}addWindowResolutionChange();window.addEventListener(\"wheel\",onWheel.bind(this),{passive:false,signal:signal});window.addEventListener(\"click\",onClick.bind(this),{signal:signal});window.addEventListener(\"keydown\",onKeyDown.bind(this),{signal:signal});window.addEventListener(\"keyup\",onKeyUp.bind(this),{signal:signal});window.addEventListener(\"resize\",(()=>eventBus.dispatch(\"resize\",{source:window})),{signal:signal});window.addEventListener(\"hashchange\",(()=>{eventBus.dispatch(\"hashchange\",{source:window,hash:document.location.hash.substring(1)})}),{signal:signal});window.addEventListener(\"beforeprint\",(()=>eventBus.dispatch(\"beforeprint\",{source:window})),{signal:signal});window.addEventListener(\"afterprint\",(()=>eventBus.dispatch(\"afterprint\",{source:window})),{signal:signal});window.addEventListener(\"updatefromsandbox\",(evt=>{eventBus.dispatch(\"updatefromsandbox\",{source:window,detail:evt.detail})}),{signal:signal});if(!(\"onscrollend\"in document.documentElement)){return}({scrollTop:this._lastScrollTop,scrollLeft:this._lastScrollLeft}=mainContainer);const scrollend=()=>{({scrollTop:this._lastScrollTop,scrollLeft:this._lastScrollLeft}=mainContainer);this._isScrolling=false;mainContainer.addEventListener(\"scroll\",scroll,{passive:true,signal:signal});mainContainer.removeEventListener(\"scrollend\",scrollend);mainContainer.removeEventListener(\"blur\",scrollend)};const scroll=()=>{if(this._isCtrlKeyDown){return}if(this._lastScrollTop===mainContainer.scrollTop&&this._lastScrollLeft===mainContainer.scrollLeft){return}mainContainer.removeEventListener(\"scroll\",scroll);this._isScrolling=true;mainContainer.addEventListener(\"scrollend\",scrollend,{signal:signal});mainContainer.addEventListener(\"blur\",scrollend,{signal:signal})};mainContainer.addEventListener(\"scroll\",scroll,{passive:true,signal:signal})},unbindEvents(){this._eventBusAbortController?.abort();this._eventBusAbortController=null},unbindWindowEvents(){this._windowAbortController?.abort();this._windowAbortController=null;this._touchManager=null},async testingClose(){this.unbindEvents();this.unbindWindowEvents();this._globalAbortController?.abort();this._globalAbortController=null;this.findBar?.close();await Promise.all([this.l10n?.destroy(),this.close()])},_accumulateTicks(ticks,prop){if(this[prop]>0&&ticks<0||this[prop]<0&&ticks>0){this[prop]=0}this[prop]+=ticks;const wholeTicks=Math.trunc(this[prop]);this[prop]-=wholeTicks;return wholeTicks},_accumulateFactor(previousScale,factor,prop){if(factor===1){return 1}if(this[prop]>1&&factor<1||this[prop]<1&&factor>1){this[prop]=1}const newFactor=Math.floor(previousScale*factor*this[prop]*100)/(100*previousScale);this[prop]=factor/newFactor;return newFactor},_unblockDocumentLoadEvent(){document.blockUnblockOnload?.(false);this._unblockDocumentLoadEvent=()=>{}},get scriptingReady(){return this.pdfScriptingManager.ready}};initCom(PDFViewerApplication);{PDFPrintServiceFactory.initGlobals(PDFViewerApplication)}{const HOSTED_VIEWER_ORIGINS=new Set([\"null\",\"http://mozilla.github.io\",\"https://mozilla.github.io\"]);var validateFileURL=function(file){if(!file){return}const viewerOrigin=URL.parse(window.location)?.origin||\"null\";if(HOSTED_VIEWER_ORIGINS.has(viewerOrigin)){return}const fileOrigin=URL.parse(file,window.location)?.origin;if(fileOrigin===viewerOrigin){return}const ex=new Error(\"file origin does not match viewer's\");PDFViewerApplication._documentError(\"pdfjs-loading-error\",{message:ex.message});throw ex};var onFileInputChange=function(evt){if(this.pdfViewer?.isInPresentationMode){return}const file=evt.fileInput.files[0];this.open({url:URL.createObjectURL(file),originalUrl:file.name})};var onOpenFile=function(evt){this._openFileInput?.click()}}function onPageRender({pageNumber:pageNumber}){if(pageNumber===this.page){this.toolbar?.updateLoadingIndicatorState(true)}}function onPageRendered({pageNumber:pageNumber,isDetailView:isDetailView,error:error}){if(pageNumber===this.page){this.toolbar?.updateLoadingIndicatorState(false)}if(!isDetailView&&this.pdfSidebar?.visibleView===SidebarView.THUMBS){const pageView=this.pdfViewer.getPageView(pageNumber-1);const thumbnailView=this.pdfThumbnailViewer?.getThumbnail(pageNumber-1);if(pageView){thumbnailView?.setImage(pageView)}}if(error){this._otherError(\"pdfjs-rendering-error\",error)}}function onPageMode({mode:mode}){let view;switch(mode){case\"thumbs\":view=SidebarView.THUMBS;break;case\"bookmarks\":case\"outline\":view=SidebarView.OUTLINE;break;case\"attachments\":view=SidebarView.ATTACHMENTS;break;case\"layers\":view=SidebarView.LAYERS;break;case\"none\":view=SidebarView.NONE;break;default:console.error('Invalid \"pagemode\" hash parameter: '+mode);return}this.pdfSidebar?.switchView(view,true)}function onNamedAction(evt){switch(evt.action){case\"GoToPage\":this.appConfig.toolbar?.pageNumber.select();break;case\"Find\":if(!this.supportsIntegratedFind){this.findBar?.toggle()}break;case\"Print\":this.triggerPrinting();break;case\"SaveAs\":this.downloadOrSave();break}}function onSidebarViewChanged({view:view}){this.pdfRenderingQueue.isThumbnailViewEnabled=view===SidebarView.THUMBS;if(this.isInitialViewSet){this.store?.set(\"sidebarView\",view).catch((()=>{}))}}function onUpdateViewarea({location:location}){if(this.isInitialViewSet){this.store?.setMultiple({page:location.pageNumber,zoom:location.scale,scrollLeft:location.left,scrollTop:location.top,rotation:location.rotation}).catch((()=>{}))}if(this.appConfig.secondaryToolbar){this.appConfig.secondaryToolbar.viewBookmarkButton.href=this.pdfLinkService.getAnchorUrl(location.pdfOpenParams)}}function onViewerModesChanged(name,evt){if(this.isInitialViewSet&&!this.pdfViewer.isInPresentationMode){this.store?.set(name,evt.mode).catch((()=>{}))}}function onResize(){const{pdfDocument:pdfDocument,pdfViewer:pdfViewer,pdfRenderingQueue:pdfRenderingQueue}=this;if(pdfRenderingQueue.printing&&window.matchMedia(\"print\").matches){return}if(!pdfDocument){return}const currentScaleValue=pdfViewer.currentScaleValue;if(currentScaleValue===\"auto\"||currentScaleValue===\"page-fit\"||currentScaleValue===\"page-width\"){pdfViewer.currentScaleValue=currentScaleValue}pdfViewer.update()}function onHashchange(evt){const hash=evt.hash;if(!hash){return}if(!this.isInitialViewSet){this.initialBookmark=hash}else if(!this.pdfHistory?.popStateInProgress){this.pdfLinkService.setHash(hash)}}function onPageNumberChanged(evt){const{pdfViewer:pdfViewer}=this;if(evt.value!==\"\"){this.pdfLinkService.goToPage(evt.value)}if(evt.value!==pdfViewer.currentPageNumber.toString()&&evt.value!==pdfViewer.currentPageLabel){this.toolbar?.setPageNumber(pdfViewer.currentPageNumber,pdfViewer.currentPageLabel)}}function onImageAltTextSettings(){this.imageAltTextSettings?.open({enableGuessAltText:AppOptions.get(\"enableGuessAltText\"),enableNewAltTextWhenAddingImage:AppOptions.get(\"enableNewAltTextWhenAddingImage\")})}function onFindFromUrlHash(evt){this.eventBus.dispatch(\"find\",{source:evt.source,type:\"\",query:evt.query,caseSensitive:false,entireWord:false,highlightAll:true,findPrevious:false,matchDiacritics:true})}function onUpdateFindMatchesCount({matchesCount:matchesCount}){if(this.supportsIntegratedFind){this.externalServices.updateFindMatchesCount(matchesCount)}else{this.findBar?.updateResultsCount(matchesCount)}}function onUpdateFindControlState({state:state,previous:previous,entireWord:entireWord,matchesCount:matchesCount,rawQuery:rawQuery}){if(this.supportsIntegratedFind){this.externalServices.updateFindControlState({result:state,findPrevious:previous,entireWord:entireWord,matchesCount:matchesCount,rawQuery:rawQuery})}else{this.findBar?.updateUIState(state,previous,matchesCount)}}function onScaleChanging(evt){this.toolbar?.setPageScale(evt.presetValue,evt.scale);this.pdfViewer.update()}function onRotationChanging(evt){if(this.pdfThumbnailViewer){this.pdfThumbnailViewer.pagesRotation=evt.pagesRotation}this.forceRendering();this.pdfViewer.currentPageNumber=evt.pageNumber}function onPageChanging({pageNumber:pageNumber,pageLabel:pageLabel}){this.toolbar?.setPageNumber(pageNumber,pageLabel);this.secondaryToolbar?.setPageNumber(pageNumber);if(this.pdfSidebar?.visibleView===SidebarView.THUMBS){this.pdfThumbnailViewer?.scrollThumbnailIntoView(pageNumber)}const currentPage=this.pdfViewer.getPageView(pageNumber-1);this.toolbar?.updateLoadingIndicatorState(currentPage?.renderingState===RenderingStates.RUNNING)}function onWheel(evt){const{pdfViewer:pdfViewer,supportsMouseWheelZoomCtrlKey:supportsMouseWheelZoomCtrlKey,supportsMouseWheelZoomMetaKey:supportsMouseWheelZoomMetaKey,supportsPinchToZoom:supportsPinchToZoom}=this;if(pdfViewer.isInPresentationMode){return}const deltaMode=evt.deltaMode;let scaleFactor=Math.exp(-evt.deltaY/100);const isBuiltInMac=false;const isPinchToZoom=evt.ctrlKey&&!this._isCtrlKeyDown&&deltaMode===WheelEvent.DOM_DELTA_PIXEL&&evt.deltaX===0&&(Math.abs(scaleFactor-1)<.05||isBuiltInMac)&&evt.deltaZ===0;const origin=[evt.clientX,evt.clientY];if(isPinchToZoom||evt.ctrlKey&&supportsMouseWheelZoomCtrlKey||evt.metaKey&&supportsMouseWheelZoomMetaKey){evt.preventDefault();if(this._isScrolling||document.visibilityState===\"hidden\"||this.overlayManager.active){return}if(isPinchToZoom&&supportsPinchToZoom){scaleFactor=this._accumulateFactor(pdfViewer.currentScale,scaleFactor,\"_wheelUnusedFactor\");this.updateZoom(null,scaleFactor,origin)}else{const delta=normalizeWheelEventDirection(evt);let ticks=0;if(deltaMode===WheelEvent.DOM_DELTA_LINE||deltaMode===WheelEvent.DOM_DELTA_PAGE){ticks=Math.abs(delta)>=1?Math.sign(delta):this._accumulateTicks(delta,\"_wheelUnusedTicks\")}else{const PIXELS_PER_LINE_SCALE=30;ticks=this._accumulateTicks(delta/PIXELS_PER_LINE_SCALE,\"_wheelUnusedTicks\")}this.updateZoom(ticks,null,origin)}}}function closeSecondaryToolbar({target:target}){if(!this.secondaryToolbar?.isOpen){return}const{toolbar:toolbar,secondaryToolbar:secondaryToolbar}=this.appConfig;if(this.pdfViewer.containsElement(target)||toolbar?.container.contains(target)&&!secondaryToolbar?.toolbar.contains(target)&&!secondaryToolbar?.toggleButton.contains(target)){this.secondaryToolbar.close()}}function closeEditorUndoBar(evt){if(!this.editorUndoBar?.isOpen){return}if(this.appConfig.secondaryToolbar?.toolbar.contains(evt.target)){this.editorUndoBar.hide()}}function onClick(evt){closeSecondaryToolbar.call(this,evt);closeEditorUndoBar.call(this,evt)}function onKeyUp(evt){if(evt.key===\"Control\"){this._isCtrlKeyDown=false}}function onKeyDown(evt){this._isCtrlKeyDown=evt.key===\"Control\";if(this.editorUndoBar?.isOpen&&evt.keyCode!==9&&evt.keyCode!==16&&!((evt.keyCode===13||evt.keyCode===32)&&getActiveOrFocusedElement()===this.appConfig.editorUndoBar.undoButton)){this.editorUndoBar.hide()}if(this.overlayManager.active){return}const{eventBus:eventBus,pdfViewer:pdfViewer}=this;const isViewerInPresentationMode=pdfViewer.isInPresentationMode;let handled=false,ensureViewerFocused=false;const cmd=(evt.ctrlKey?1:0)|(evt.altKey?2:0)|(evt.shiftKey?4:0)|(evt.metaKey?8:0);if(cmd===1||cmd===8||cmd===5||cmd===12){switch(evt.keyCode){case 70:if(!this.supportsIntegratedFind&&!evt.shiftKey){this.findBar?.open();handled=true}break;case 71:if(!this.supportsIntegratedFind){const{state:state}=this.findController;if(state){const newState={source:window,type:\"again\",findPrevious:cmd===5||cmd===12};eventBus.dispatch(\"find\",{...state,...newState})}handled=true}break;case 61:case 107:case 187:case 171:this.zoomIn();handled=true;break;case 173:case 109:case 189:this.zoomOut();handled=true;break;case 48:case 96:if(!isViewerInPresentationMode){setTimeout((()=>{this.zoomReset()}));handled=false}break;case 38:if(isViewerInPresentationMode||this.page>1){this.page=1;handled=true;ensureViewerFocused=true}break;case 40:if(isViewerInPresentationMode||this.page<this.pagesCount){this.page=this.pagesCount;handled=true;ensureViewerFocused=true}break}}if(cmd===1||cmd===8){switch(evt.keyCode){case 83:eventBus.dispatch(\"download\",{source:window});handled=true;break;case 79:{eventBus.dispatch(\"openfile\",{source:window});handled=true}break}}if(cmd===3||cmd===10){switch(evt.keyCode){case 80:this.requestPresentationMode();handled=true;this.externalServices.reportTelemetry({type:\"buttons\",data:{id:\"presentationModeKeyboard\"}});break;case 71:if(this.appConfig.toolbar){this.appConfig.toolbar.pageNumber.select();handled=true}break}}if(handled){if(ensureViewerFocused&&!isViewerInPresentationMode){pdfViewer.focus()}evt.preventDefault();return}const curElement=getActiveOrFocusedElement();const curElementTagName=curElement?.tagName.toUpperCase();if(curElementTagName===\"INPUT\"||curElementTagName===\"TEXTAREA\"||curElementTagName===\"SELECT\"||curElementTagName===\"BUTTON\"&&(evt.keyCode===13||evt.keyCode===32)||curElement?.isContentEditable){if(evt.keyCode!==27){return}}if(cmd===0){let turnPage=0,turnOnlyIfPageFit=false;switch(evt.keyCode){case 38:if(this.supportsCaretBrowsingMode){this.moveCaret(true,false);handled=true;break}case 33:if(pdfViewer.isVerticalScrollbarEnabled){turnOnlyIfPageFit=true}turnPage=-1;break;case 8:if(!isViewerInPresentationMode){turnOnlyIfPageFit=true}turnPage=-1;break;case 37:if(this.supportsCaretBrowsingMode){return}if(pdfViewer.isHorizontalScrollbarEnabled){turnOnlyIfPageFit=true}case 75:case 80:turnPage=-1;break;case 27:if(this.secondaryToolbar?.isOpen){this.secondaryToolbar.close();handled=true}if(!this.supportsIntegratedFind&&this.findBar?.opened){this.findBar.close();handled=true}break;case 40:if(this.supportsCaretBrowsingMode){this.moveCaret(false,false);handled=true;break}case 34:if(pdfViewer.isVerticalScrollbarEnabled){turnOnlyIfPageFit=true}turnPage=1;break;case 13:case 32:if(!isViewerInPresentationMode){turnOnlyIfPageFit=true}turnPage=1;break;case 39:if(this.supportsCaretBrowsingMode){return}if(pdfViewer.isHorizontalScrollbarEnabled){turnOnlyIfPageFit=true}case 74:case 78:turnPage=1;break;case 36:if(isViewerInPresentationMode||this.page>1){this.page=1;handled=true;ensureViewerFocused=true}break;case 35:if(isViewerInPresentationMode||this.page<this.pagesCount){this.page=this.pagesCount;handled=true;ensureViewerFocused=true}break;case 83:this.pdfCursorTools?.switchTool(CursorTool.SELECT);break;case 72:this.pdfCursorTools?.switchTool(CursorTool.HAND);break;case 82:this.rotatePages(90);break;case 115:this.pdfSidebar?.toggle();break}if(turnPage!==0&&(!turnOnlyIfPageFit||pdfViewer.currentScaleValue===\"page-fit\")){if(turnPage>0){pdfViewer.nextPage()}else{pdfViewer.previousPage()}handled=true}}if(cmd===4){switch(evt.keyCode){case 13:case 32:if(!isViewerInPresentationMode&&pdfViewer.currentScaleValue!==\"page-fit\"){break}pdfViewer.previousPage();handled=true;break;case 38:this.moveCaret(true,true);handled=true;break;case 40:this.moveCaret(false,true);handled=true;break;case 82:this.rotatePages(-90);break}}if(!handled&&!isViewerInPresentationMode){if(evt.keyCode>=33&&evt.keyCode<=40||evt.keyCode===32&&curElementTagName!==\"BUTTON\"){ensureViewerFocused=true}}if(ensureViewerFocused&&!pdfViewer.containsElement(curElement)){pdfViewer.focus()}if(handled){evt.preventDefault()}}function beforeUnload(evt){evt.preventDefault();evt.returnValue=\"\";return false}const pdfjsVersion=\"5.2.177\";const pdfjsBuild=\"293506ada\";const AppConstants={LinkTarget:LinkTarget,RenderingStates:RenderingStates,ScrollMode:ScrollMode,SpreadMode:SpreadMode};window.PDFViewerApplication=PDFViewerApplication;window.PDFViewerApplicationConstants=AppConstants;window.PDFViewerApplicationOptions=AppOptions;function getViewerConfiguration(){return{appContainer:document.body,principalContainer:document.getElementById(\"mainContainer\"),mainContainer:document.getElementById(\"viewerContainer\"),viewerContainer:document.getElementById(\"viewer\"),toolbar:{container:document.getElementById(\"toolbarContainer\"),numPages:document.getElementById(\"numPages\"),pageNumber:document.getElementById(\"pageNumber\"),scaleSelect:document.getElementById(\"scaleSelect\"),customScaleOption:document.getElementById(\"customScaleOption\"),previous:document.getElementById(\"previous\"),next:document.getElementById(\"next\"),zoomIn:document.getElementById(\"zoomInButton\"),zoomOut:document.getElementById(\"zoomOutButton\"),print:document.getElementById(\"printButton\"),editorFreeTextButton:document.getElementById(\"editorFreeTextButton\"),editorFreeTextParamsToolbar:document.getElementById(\"editorFreeTextParamsToolbar\"),editorHighlightButton:document.getElementById(\"editorHighlightButton\"),editorHighlightParamsToolbar:document.getElementById(\"editorHighlightParamsToolbar\"),editorHighlightColorPicker:document.getElementById(\"editorHighlightColorPicker\"),editorInkButton:document.getElementById(\"editorInkButton\"),editorInkParamsToolbar:document.getElementById(\"editorInkParamsToolbar\"),editorStampButton:document.getElementById(\"editorStampButton\"),editorStampParamsToolbar:document.getElementById(\"editorStampParamsToolbar\"),editorSignatureButton:document.getElementById(\"editorSignatureButton\"),editorSignatureParamsToolbar:document.getElementById(\"editorSignatureParamsToolbar\"),download:document.getElementById(\"downloadButton\")},secondaryToolbar:{toolbar:document.getElementById(\"secondaryToolbar\"),toggleButton:document.getElementById(\"secondaryToolbarToggleButton\"),presentationModeButton:document.getElementById(\"presentationMode\"),openFileButton:document.getElementById(\"secondaryOpenFile\"),printButton:document.getElementById(\"secondaryPrint\"),downloadButton:document.getElementById(\"secondaryDownload\"),viewBookmarkButton:document.getElementById(\"viewBookmark\"),firstPageButton:document.getElementById(\"firstPage\"),lastPageButton:document.getElementById(\"lastPage\"),pageRotateCwButton:document.getElementById(\"pageRotateCw\"),pageRotateCcwButton:document.getElementById(\"pageRotateCcw\"),cursorSelectToolButton:document.getElementById(\"cursorSelectTool\"),cursorHandToolButton:document.getElementById(\"cursorHandTool\"),scrollPageButton:document.getElementById(\"scrollPage\"),scrollVerticalButton:document.getElementById(\"scrollVertical\"),scrollHorizontalButton:document.getElementById(\"scrollHorizontal\"),scrollWrappedButton:document.getElementById(\"scrollWrapped\"),spreadNoneButton:document.getElementById(\"spreadNone\"),spreadOddButton:document.getElementById(\"spreadOdd\"),spreadEvenButton:document.getElementById(\"spreadEven\"),imageAltTextSettingsButton:document.getElementById(\"imageAltTextSettings\"),imageAltTextSettingsSeparator:document.getElementById(\"imageAltTextSettingsSeparator\"),documentPropertiesButton:document.getElementById(\"documentProperties\")},sidebar:{outerContainer:document.getElementById(\"outerContainer\"),sidebarContainer:document.getElementById(\"sidebarContainer\"),toggleButton:document.getElementById(\"sidebarToggleButton\"),resizer:document.getElementById(\"sidebarResizer\"),thumbnailButton:document.getElementById(\"viewThumbnail\"),outlineButton:document.getElementById(\"viewOutline\"),attachmentsButton:document.getElementById(\"viewAttachments\"),layersButton:document.getElementById(\"viewLayers\"),thumbnailView:document.getElementById(\"thumbnailView\"),outlineView:document.getElementById(\"outlineView\"),attachmentsView:document.getElementById(\"attachmentsView\"),layersView:document.getElementById(\"layersView\"),currentOutlineItemButton:document.getElementById(\"currentOutlineItem\")},findBar:{bar:document.getElementById(\"findbar\"),toggleButton:document.getElementById(\"viewFindButton\"),findField:document.getElementById(\"findInput\"),highlightAllCheckbox:document.getElementById(\"findHighlightAll\"),caseSensitiveCheckbox:document.getElementById(\"findMatchCase\"),matchDiacriticsCheckbox:document.getElementById(\"findMatchDiacritics\"),entireWordCheckbox:document.getElementById(\"findEntireWord\"),findMsg:document.getElementById(\"findMsg\"),findResultsCount:document.getElementById(\"findResultsCount\"),findPreviousButton:document.getElementById(\"findPreviousButton\"),findNextButton:document.getElementById(\"findNextButton\")},passwordOverlay:{dialog:document.getElementById(\"passwordDialog\"),label:document.getElementById(\"passwordText\"),input:document.getElementById(\"password\"),submitButton:document.getElementById(\"passwordSubmit\"),cancelButton:document.getElementById(\"passwordCancel\")},documentProperties:{dialog:document.getElementById(\"documentPropertiesDialog\"),closeButton:document.getElementById(\"documentPropertiesClose\"),fields:{fileName:document.getElementById(\"fileNameField\"),fileSize:document.getElementById(\"fileSizeField\"),title:document.getElementById(\"titleField\"),author:document.getElementById(\"authorField\"),subject:document.getElementById(\"subjectField\"),keywords:document.getElementById(\"keywordsField\"),creationDate:document.getElementById(\"creationDateField\"),modificationDate:document.getElementById(\"modificationDateField\"),creator:document.getElementById(\"creatorField\"),producer:document.getElementById(\"producerField\"),version:document.getElementById(\"versionField\"),pageCount:document.getElementById(\"pageCountField\"),pageSize:document.getElementById(\"pageSizeField\"),linearized:document.getElementById(\"linearizedField\")}},altTextDialog:{dialog:document.getElementById(\"altTextDialog\"),optionDescription:document.getElementById(\"descriptionButton\"),optionDecorative:document.getElementById(\"decorativeButton\"),textarea:document.getElementById(\"descriptionTextarea\"),cancelButton:document.getElementById(\"altTextCancel\"),saveButton:document.getElementById(\"altTextSave\")},newAltTextDialog:{dialog:document.getElementById(\"newAltTextDialog\"),title:document.getElementById(\"newAltTextTitle\"),descriptionContainer:document.getElementById(\"newAltTextDescriptionContainer\"),textarea:document.getElementById(\"newAltTextDescriptionTextarea\"),disclaimer:document.getElementById(\"newAltTextDisclaimer\"),learnMore:document.getElementById(\"newAltTextLearnMore\"),imagePreview:document.getElementById(\"newAltTextImagePreview\"),createAutomatically:document.getElementById(\"newAltTextCreateAutomatically\"),createAutomaticallyButton:document.getElementById(\"newAltTextCreateAutomaticallyButton\"),downloadModel:document.getElementById(\"newAltTextDownloadModel\"),downloadModelDescription:document.getElementById(\"newAltTextDownloadModelDescription\"),error:document.getElementById(\"newAltTextError\"),errorCloseButton:document.getElementById(\"newAltTextCloseButton\"),cancelButton:document.getElementById(\"newAltTextCancel\"),notNowButton:document.getElementById(\"newAltTextNotNow\"),saveButton:document.getElementById(\"newAltTextSave\")},altTextSettingsDialog:{dialog:document.getElementById(\"altTextSettingsDialog\"),createModelButton:document.getElementById(\"createModelButton\"),aiModelSettings:document.getElementById(\"aiModelSettings\"),learnMore:document.getElementById(\"altTextSettingsLearnMore\"),deleteModelButton:document.getElementById(\"deleteModelButton\"),downloadModelButton:document.getElementById(\"downloadModelButton\"),showAltTextDialogButton:document.getElementById(\"showAltTextDialogButton\"),altTextSettingsCloseButton:document.getElementById(\"altTextSettingsCloseButton\"),closeButton:document.getElementById(\"altTextSettingsCloseButton\")},addSignatureDialog:{dialog:document.getElementById(\"addSignatureDialog\"),panels:document.getElementById(\"addSignatureActionContainer\"),typeButton:document.getElementById(\"addSignatureTypeButton\"),typeInput:document.getElementById(\"addSignatureTypeInput\"),drawButton:document.getElementById(\"addSignatureDrawButton\"),drawSVG:document.getElementById(\"addSignatureDraw\"),drawPlaceholder:document.getElementById(\"addSignatureDrawPlaceholder\"),drawThickness:document.getElementById(\"addSignatureDrawThickness\"),imageButton:document.getElementById(\"addSignatureImageButton\"),imageSVG:document.getElementById(\"addSignatureImage\"),imagePlaceholder:document.getElementById(\"addSignatureImagePlaceholder\"),imagePicker:document.getElementById(\"addSignatureFilePicker\"),imagePickerLink:document.getElementById(\"addSignatureImageBrowse\"),description:document.getElementById(\"addSignatureDescription\"),clearButton:document.getElementById(\"clearSignatureButton\"),saveContainer:document.getElementById(\"addSignatureSaveContainer\"),saveCheckbox:document.getElementById(\"addSignatureSaveCheckbox\"),errorBar:document.getElementById(\"addSignatureError\"),errorCloseButton:document.getElementById(\"addSignatureErrorCloseButton\"),cancelButton:document.getElementById(\"addSignatureCancelButton\"),addButton:document.getElementById(\"addSignatureAddButton\")},editSignatureDialog:{dialog:document.getElementById(\"editSignatureDescriptionDialog\"),description:document.getElementById(\"editSignatureDescription\"),editSignatureView:document.getElementById(\"editSignatureView\"),cancelButton:document.getElementById(\"editSignatureCancelButton\"),updateButton:document.getElementById(\"editSignatureUpdateButton\")},annotationEditorParams:{editorFreeTextFontSize:document.getElementById(\"editorFreeTextFontSize\"),editorFreeTextColor:document.getElementById(\"editorFreeTextColor\"),editorInkColor:document.getElementById(\"editorInkColor\"),editorInkThickness:document.getElementById(\"editorInkThickness\"),editorInkOpacity:document.getElementById(\"editorInkOpacity\"),editorStampAddImage:document.getElementById(\"editorStampAddImage\"),editorSignatureAddSignature:document.getElementById(\"editorSignatureAddSignature\"),editorFreeHighlightThickness:document.getElementById(\"editorFreeHighlightThickness\"),editorHighlightShowAll:document.getElementById(\"editorHighlightShowAll\")},printContainer:document.getElementById(\"printContainer\"),editorUndoBar:{container:document.getElementById(\"editorUndoBar\"),message:document.getElementById(\"editorUndoBarMessage\"),undoButton:document.getElementById(\"editorUndoBarUndoButton\"),closeButton:document.getElementById(\"editorUndoBarCloseButton\")}}}function webViewerLoad(){const config=getViewerConfiguration();const event=new CustomEvent(\"webviewerloaded\",{bubbles:true,cancelable:true,detail:{source:window}});try{parent.document.dispatchEvent(event)}catch(ex){console.error(\"webviewerloaded:\",ex);document.dispatchEvent(event)}PDFViewerApplication.run(config)}document.blockUnblockOnload?.(true);if(document.readyState===\"interactive\"||document.readyState===\"complete\"){webViewerLoad()}else{document.addEventListener(\"DOMContentLoaded\",webViewerLoad,true)}export{PDFViewerApplication,AppConstants as PDFViewerApplicationConstants,AppOptions as PDFViewerApplicationOptions};\n/Users/luke/code/psci/chatbot-ui-2/public/pdfjs/local/pdf.min.mjs:22:const isNodeJS=typeof process===\"object\"&&process+\"\"===\"[object process]\"&&!process.versions.nw&&!(process.versions.electron&&process.type&&process.type!==\"browser\");const FONT_IDENTITY_MATRIX=[.001,0,0,.001,0,0];const LINE_FACTOR=1.35;const LINE_DESCENT_FACTOR=.35;const BASELINE_FACTOR=LINE_DESCENT_FACTOR/LINE_FACTOR;const RenderingIntentFlag={ANY:1,DISPLAY:2,PRINT:4,SAVE:8,ANNOTATIONS_FORMS:16,ANNOTATIONS_STORAGE:32,ANNOTATIONS_DISABLE:64,IS_EDITING:128,OPLIST:256};const AnnotationMode={DISABLE:0,ENABLE:1,ENABLE_FORMS:2,ENABLE_STORAGE:3};const AnnotationEditorPrefix=\"pdfjs_internal_editor_\";const AnnotationEditorType={DISABLE:-1,NONE:0,FREETEXT:3,HIGHLIGHT:9,STAMP:13,INK:15,SIGNATURE:101};const AnnotationEditorParamsType={RESIZE:1,CREATE:2,FREETEXT_SIZE:11,FREETEXT_COLOR:12,FREETEXT_OPACITY:13,INK_COLOR:21,INK_THICKNESS:22,INK_OPACITY:23,HIGHLIGHT_COLOR:31,HIGHLIGHT_DEFAULT_COLOR:32,HIGHLIGHT_THICKNESS:33,HIGHLIGHT_FREE:34,HIGHLIGHT_SHOW_ALL:35,DRAW_STEP:41};const PermissionFlag={PRINT:4,MODIFY_CONTENTS:8,COPY:16,MODIFY_ANNOTATIONS:32,FILL_INTERACTIVE_FORMS:256,COPY_FOR_ACCESSIBILITY:512,ASSEMBLE:1024,PRINT_HIGH_QUALITY:2048};const TextRenderingMode={FILL:0,STROKE:1,FILL_STROKE:2,INVISIBLE:3,FILL_ADD_TO_PATH:4,STROKE_ADD_TO_PATH:5,FILL_STROKE_ADD_TO_PATH:6,ADD_TO_PATH:7,FILL_STROKE_MASK:3,ADD_TO_PATH_FLAG:4};const util_ImageKind={GRAYSCALE_1BPP:1,RGB_24BPP:2,RGBA_32BPP:3};const AnnotationType={TEXT:1,LINK:2,FREETEXT:3,LINE:4,SQUARE:5,CIRCLE:6,POLYGON:7,POLYLINE:8,HIGHLIGHT:9,UNDERLINE:10,SQUIGGLY:11,STRIKEOUT:12,STAMP:13,CARET:14,INK:15,POPUP:16,FILEATTACHMENT:17,SOUND:18,MOVIE:19,WIDGET:20,SCREEN:21,PRINTERMARK:22,TRAPNET:23,WATERMARK:24,THREED:25,REDACT:26};const AnnotationReplyType={GROUP:\"Group\",REPLY:\"R\"};const AnnotationFlag={INVISIBLE:1,HIDDEN:2,PRINT:4,NOZOOM:8,NOROTATE:16,NOVIEW:32,READONLY:64,LOCKED:128,TOGGLENOVIEW:256,LOCKEDCONTENTS:512};const AnnotationFieldFlag={READONLY:1,REQUIRED:2,NOEXPORT:4,MULTILINE:4096,PASSWORD:8192,NOTOGGLETOOFF:16384,RADIO:32768,PUSHBUTTON:65536,COMBO:131072,EDIT:262144,SORT:524288,FILESELECT:1048576,MULTISELECT:2097152,DONOTSPELLCHECK:4194304,DONOTSCROLL:8388608,COMB:16777216,RICHTEXT:33554432,RADIOSINUNISON:33554432,COMMITONSELCHANGE:67108864};const AnnotationBorderStyleType={SOLID:1,DASHED:2,BEVELED:3,INSET:4,UNDERLINE:5};const AnnotationActionEventType={E:\"Mouse Enter\",X:\"Mouse Exit\",D:\"Mouse Down\",U:\"Mouse Up\",Fo:\"Focus\",Bl:\"Blur\",PO:\"PageOpen\",PC:\"PageClose\",PV:\"PageVisible\",PI:\"PageInvisible\",K:\"Keystroke\",F:\"Format\",V:\"Validate\",C:\"Calculate\"};const DocumentActionEventType={WC:\"WillClose\",WS:\"WillSave\",DS:\"DidSave\",WP:\"WillPrint\",DP:\"DidPrint\"};const PageActionEventType={O:\"PageOpen\",C:\"PageClose\"};const VerbosityLevel={ERRORS:0,WARNINGS:1,INFOS:5};const OPS={dependency:1,setLineWidth:2,setLineCap:3,setLineJoin:4,setMiterLimit:5,setDash:6,setRenderingIntent:7,setFlatness:8,setGState:9,save:10,restore:11,transform:12,moveTo:13,lineTo:14,curveTo:15,curveTo2:16,curveTo3:17,closePath:18,rectangle:19,stroke:20,closeStroke:21,fill:22,eoFill:23,fillStroke:24,eoFillStroke:25,closeFillStroke:26,closeEOFillStroke:27,endPath:28,clip:29,eoClip:30,beginText:31,endText:32,setCharSpacing:33,setWordSpacing:34,setHScale:35,setLeading:36,setFont:37,setTextRenderingMode:38,setTextRise:39,moveText:40,setLeadingMoveText:41,setTextMatrix:42,nextLine:43,showText:44,showSpacedText:45,nextLineShowText:46,nextLineSetSpacingShowText:47,setCharWidth:48,setCharWidthAndBounds:49,setStrokeColorSpace:50,setFillColorSpace:51,setStrokeColor:52,setStrokeColorN:53,setFillColor:54,setFillColorN:55,setStrokeGray:56,setFillGray:57,setStrokeRGBColor:58,setFillRGBColor:59,setStrokeCMYKColor:60,setFillCMYKColor:61,shadingFill:62,beginInlineImage:63,beginImageData:64,endInlineImage:65,paintXObject:66,markPoint:67,markPointProps:68,beginMarkedContent:69,beginMarkedContentProps:70,endMarkedContent:71,beginCompat:72,endCompat:73,paintFormXObjectBegin:74,paintFormXObjectEnd:75,beginGroup:76,endGroup:77,beginAnnotation:80,endAnnotation:81,paintImageMaskXObject:83,paintImageMaskXObjectGroup:84,paintImageXObject:85,paintInlineImageXObject:86,paintInlineImageXObjectGroup:87,paintImageXObjectRepeat:88,paintImageMaskXObjectRepeat:89,paintSolidColorImageMask:90,constructPath:91,setStrokeTransparent:92,setFillTransparent:93,rawFillPath:94};const DrawOPS={moveTo:0,lineTo:1,curveTo:2,closePath:3};const PasswordResponses={NEED_PASSWORD:1,INCORRECT_PASSWORD:2};let verbosity=VerbosityLevel.WARNINGS;function setVerbosityLevel(level){if(Number.isInteger(level)){verbosity=level}}function getVerbosityLevel(){return verbosity}function info(msg){if(verbosity>=VerbosityLevel.INFOS){console.log(`Info: ${msg}`)}}function warn(msg){if(verbosity>=VerbosityLevel.WARNINGS){console.log(`Warning: ${msg}`)}}function unreachable(msg){throw new Error(msg)}function assert(cond,msg){if(!cond){unreachable(msg)}}function _isValidProtocol(url){switch(url?.protocol){case\"http:\":case\"https:\":case\"ftp:\":case\"mailto:\":case\"tel:\":return true;default:return false}}function createValidAbsoluteUrl(url,baseUrl=null,options=null){if(!url){return null}if(options&&typeof url===\"string\"){if(options.addDefaultProtocol&&url.startsWith(\"www.\")){const dots=url.match(/\\./g);if(dots?.length>=2){url=`http://${url}`}}if(options.tryConvertEncoding){try{url=stringToUTF8String(url)}catch{}}}const absoluteUrl=baseUrl?URL.parse(url,baseUrl):URL.parse(url);return _isValidProtocol(absoluteUrl)?absoluteUrl:null}function updateUrlHash(url,hash,allowRel=false){const res=URL.parse(url);if(res){res.hash=hash;return res.href}if(allowRel&&createValidAbsoluteUrl(url,\"http://example.com\")){return url.split(\"#\",1)[0]+`${hash?`#${hash}`:\"\"}`}return\"\"}function shadow(obj,prop,value,nonSerializable=false){Object.defineProperty(obj,prop,{value:value,enumerable:!nonSerializable,configurable:true,writable:false});return value}const BaseException=function BaseExceptionClosure(){function BaseException(message,name){this.message=message;this.name=name}BaseException.prototype=new Error;BaseException.constructor=BaseException;return BaseException}();class PasswordException extends BaseException{constructor(msg,code){super(msg,\"PasswordException\");this.code=code}}class UnknownErrorException extends BaseException{constructor(msg,details){super(msg,\"UnknownErrorException\");this.details=details}}class InvalidPDFException extends BaseException{constructor(msg){super(msg,\"InvalidPDFException\")}}class ResponseException extends BaseException{constructor(msg,status,missing){super(msg,\"ResponseException\");this.status=status;this.missing=missing}}class FormatError extends BaseException{constructor(msg){super(msg,\"FormatError\")}}class AbortException extends BaseException{constructor(msg){super(msg,\"AbortException\")}}function bytesToString(bytes){if(typeof bytes!==\"object\"||bytes?.length===undefined){unreachable(\"Invalid argument for bytesToString\")}const length=bytes.length;const MAX_ARGUMENT_COUNT=8192;if(length<MAX_ARGUMENT_COUNT){return String.fromCharCode.apply(null,bytes)}const strBuf=[];for(let i=0;i<length;i+=MAX_ARGUMENT_COUNT){const chunkEnd=Math.min(i+MAX_ARGUMENT_COUNT,length);const chunk=bytes.subarray(i,chunkEnd);strBuf.push(String.fromCharCode.apply(null,chunk))}return strBuf.join(\"\")}function stringToBytes(str){if(typeof str!==\"string\"){unreachable(\"Invalid argument for stringToBytes\")}const length=str.length;const bytes=new Uint8Array(length);for(let i=0;i<length;++i){bytes[i]=str.charCodeAt(i)&255}return bytes}function string32(value){return String.fromCharCode(value>>24&255,value>>16&255,value>>8&255,value&255)}function objectSize(obj){return Object.keys(obj).length}function isLittleEndian(){const buffer8=new Uint8Array(4);buffer8[0]=1;const view32=new Uint32Array(buffer8.buffer,0,1);return view32[0]===1}function isEvalSupported(){try{new Function(\"\");return true}catch{return false}}class util_FeatureTest{static get isLittleEndian(){return shadow(this,\"isLittleEndian\",isLittleEndian())}static get isEvalSupported(){return shadow(this,\"isEvalSupported\",isEvalSupported())}static get isOffscreenCanvasSupported(){return shadow(this,\"isOffscreenCanvasSupported\",typeof OffscreenCanvas!==\"undefined\")}static get isImageDecoderSupported(){return shadow(this,\"isImageDecoderSupported\",typeof ImageDecoder!==\"undefined\")}static get platform(){const{platform:platform,userAgent:userAgent}=navigator;return shadow(this,\"platform\",{isAndroid:userAgent.includes(\"Android\"),isLinux:platform.includes(\"Linux\"),isMac:platform.includes(\"Mac\"),isWindows:platform.includes(\"Win\"),isFirefox:userAgent.includes(\"Firefox\")})}static get isCSSRoundSupported(){return shadow(this,\"isCSSRoundSupported\",globalThis.CSS?.supports?.(\"width: round(1.5px, 1px)\"))}}const hexNumbers=Array.from(Array(256).keys(),(n=>n.toString(16).padStart(2,\"0\")));class Util{static makeHexColor(r,g,b){return`#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`}static scaleMinMax(transform,minMax){let temp;if(transform[0]){if(transform[0]<0){temp=minMax[0];minMax[0]=minMax[2];minMax[2]=temp}minMax[0]*=transform[0];minMax[2]*=transform[0];if(transform[3]<0){temp=minMax[1];minMax[1]=minMax[3];minMax[3]=temp}minMax[1]*=transform[3];minMax[3]*=transform[3]}else{temp=minMax[0];minMax[0]=minMax[1];minMax[1]=temp;temp=minMax[2];minMax[2]=minMax[3];minMax[3]=temp;if(transform[1]<0){temp=minMax[1];minMax[1]=minMax[3];minMax[3]=temp}minMax[1]*=transform[1];minMax[3]*=transform[1];if(transform[2]<0){temp=minMax[0];minMax[0]=minMax[2];minMax[2]=temp}minMax[0]*=transform[2];minMax[2]*=transform[2]}minMax[0]+=transform[4];minMax[1]+=transform[5];minMax[2]+=transform[4];minMax[3]+=transform[5]}static transform(m1,m2){return[m1[0]*m2[0]+m1[2]*m2[1],m1[1]*m2[0]+m1[3]*m2[1],m1[0]*m2[2]+m1[2]*m2[3],m1[1]*m2[2]+m1[3]*m2[3],m1[0]*m2[4]+m1[2]*m2[5]+m1[4],m1[1]*m2[4]+m1[3]*m2[5]+m1[5]]}static applyTransform(p,m,pos=0){const p0=p[pos];const p1=p[pos+1];p[pos]=p0*m[0]+p1*m[2]+m[4];p[pos+1]=p0*m[1]+p1*m[3]+m[5]}static applyTransformToBezier(p,transform,pos=0){const m0=transform[0];const m1=transform[1];const m2=transform[2];const m3=transform[3];const m4=transform[4];const m5=transform[5];for(let i=0;i<6;i+=2){const pI=p[pos+i];const pI1=p[pos+i+1];p[pos+i]=pI*m0+pI1*m2+m4;p[pos+i+1]=pI*m1+pI1*m3+m5}}static applyInverseTransform(p,m){const p0=p[0];const p1=p[1];const d=m[0]*m[3]-m[1]*m[2];p[0]=(p0*m[3]-p1*m[2]+m[2]*m[5]-m[4]*m[3])/d;p[1]=(-p0*m[1]+p1*m[0]+m[4]*m[1]-m[5]*m[0])/d}static axialAlignedBoundingBox(rect,transform,output){const m0=transform[0];const m1=transform[1];const m2=transform[2];const m3=transform[3];const m4=transform[4];const m5=transform[5];const r0=rect[0];const r1=rect[1];const r2=rect[2];const r3=rect[3];let a0=m0*r0+m4;let a2=a0;let a1=m0*r2+m4;let a3=a1;let b0=m3*r1+m5;let b2=b0;let b1=m3*r3+m5;let b3=b1;if(m1!==0||m2!==0){const m1r0=m1*r0;const m1r2=m1*r2;const m2r1=m2*r1;const m2r3=m2*r3;a0+=m2r1;a3+=m2r1;a1+=m2r3;a2+=m2r3;b0+=m1r0;b3+=m1r0;b1+=m1r2;b2+=m1r2}output[0]=Math.min(output[0],a0,a1,a2,a3);output[1]=Math.min(output[1],b0,b1,b2,b3);output[2]=Math.max(output[2],a0,a1,a2,a3);output[3]=Math.max(output[3],b0,b1,b2,b3)}static inverseTransform(m){const d=m[0]*m[3]-m[1]*m[2];return[m[3]/d,-m[1]/d,-m[2]/d,m[0]/d,(m[2]*m[5]-m[4]*m[3])/d,(m[4]*m[1]-m[5]*m[0])/d]}static singularValueDecompose2dScale(matrix,output){const m0=matrix[0];const m1=matrix[1];const m2=matrix[2];const m3=matrix[3];const a=m0**2+m1**2;const b=m0*m2+m1*m3;const c=m2**2+m3**2;const first=(a+c)/2;const second=Math.sqrt(first**2-(a*c-b**2));output[0]=Math.sqrt(first+second||1);output[1]=Math.sqrt(first-second||1)}static normalizeRect(rect){const r=rect.slice(0);if(rect[0]>rect[2]){r[0]=rect[2];r[2]=rect[0]}if(rect[1]>rect[3]){r[1]=rect[3];r[3]=rect[1]}return r}static intersect(rect1,rect2){const xLow=Math.max(Math.min(rect1[0],rect1[2]),Math.min(rect2[0],rect2[2]));const xHigh=Math.min(Math.max(rect1[0],rect1[2]),Math.max(rect2[0],rect2[2]));if(xLow>xHigh){return null}const yLow=Math.max(Math.min(rect1[1],rect1[3]),Math.min(rect2[1],rect2[3]));const yHigh=Math.min(Math.max(rect1[1],rect1[3]),Math.max(rect2[1],rect2[3]));if(yLow>yHigh){return null}return[xLow,yLow,xHigh,yHigh]}static pointBoundingBox(x,y,minMax){minMax[0]=Math.min(minMax[0],x);minMax[1]=Math.min(minMax[1],y);minMax[2]=Math.max(minMax[2],x);minMax[3]=Math.max(minMax[3],y)}static rectBoundingBox(x0,y0,x1,y1,minMax){minMax[0]=Math.min(minMax[0],x0,x1);minMax[1]=Math.min(minMax[1],y0,y1);minMax[2]=Math.max(minMax[2],x0,x1);minMax[3]=Math.max(minMax[3],y0,y1)}static#getExtremumOnCurve(x0,x1,x2,x3,y0,y1,y2,y3,t,minMax){if(t<=0||t>=1){return}const mt=1-t;const tt=t*t;const ttt=tt*t;const x=mt*(mt*(mt*x0+3*t*x1)+3*tt*x2)+ttt*x3;const y=mt*(mt*(mt*y0+3*t*y1)+3*tt*y2)+ttt*y3;minMax[0]=Math.min(minMax[0],x);minMax[1]=Math.min(minMax[1],y);minMax[2]=Math.max(minMax[2],x);minMax[3]=Math.max(minMax[3],y)}static#getExtremum(x0,x1,x2,x3,y0,y1,y2,y3,a,b,c,minMax){if(Math.abs(a)<1e-12){if(Math.abs(b)>=1e-12){this.#getExtremumOnCurve(x0,x1,x2,x3,y0,y1,y2,y3,-c/b,minMax)}return}const delta=b**2-4*c*a;if(delta<0){return}const sqrtDelta=Math.sqrt(delta);const a2=2*a;this.#getExtremumOnCurve(x0,x1,x2,x3,y0,y1,y2,y3,(-b+sqrtDelta)/a2,minMax);this.#getExtremumOnCurve(x0,x1,x2,x3,y0,y1,y2,y3,(-b-sqrtDelta)/a2,minMax)}static bezierBoundingBox(x0,y0,x1,y1,x2,y2,x3,y3,minMax){minMax[0]=Math.min(minMax[0],x0,x3);minMax[1]=Math.min(minMax[1],y0,y3);minMax[2]=Math.max(minMax[2],x0,x3);minMax[3]=Math.max(minMax[3],y0,y3);this.#getExtremum(x0,x1,x2,x3,y0,y1,y2,y3,3*(-x0+3*(x1-x2)+x3),6*(x0-2*x1+x2),3*(x1-x0),minMax);this.#getExtremum(x0,x1,x2,x3,y0,y1,y2,y3,3*(-y0+3*(y1-y2)+y3),6*(y0-2*y1+y2),3*(y1-y0),minMax)}}const PDFStringTranslateTable=null&&[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,728,711,710,729,733,731,730,732,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8226,8224,8225,8230,8212,8211,402,8260,8249,8250,8722,8240,8222,8220,8221,8216,8217,8218,8482,64257,64258,321,338,352,376,381,305,322,339,353,382,0,8364];function stringToPDFString(str,keepEscapeSequence=false){if(str[0]>=\"ï\"){let encoding;if(str[0]===\"þ\"&&str[1]===\"ÿ\"){encoding=\"utf-16be\";if(str.length%2===1){str=str.slice(0,-1)}}else if(str[0]===\"ÿ\"&&str[1]===\"þ\"){encoding=\"utf-16le\";if(str.length%2===1){str=str.slice(0,-1)}}else if(str[0]===\"ï\"&&str[1]===\"»\"&&str[2]===\"¿\"){encoding=\"utf-8\"}if(encoding){try{const decoder=new TextDecoder(encoding,{fatal:true});const buffer=stringToBytes(str);const decoded=decoder.decode(buffer);if(keepEscapeSequence||!decoded.includes(\"\u001b\")){return decoded}return decoded.replaceAll(/\\x1b[^\\x1b]*(?:\\x1b|$)/g,\"\")}catch(ex){warn(`stringToPDFString: \"${ex}\".`)}}}const strBuf=[];for(let i=0,ii=str.length;i<ii;i++){const charCode=str.charCodeAt(i);if(!keepEscapeSequence&&charCode===27){while(++i<ii&&str.charCodeAt(i)!==27){}continue}const code=PDFStringTranslateTable[charCode];strBuf.push(code?String.fromCharCode(code):str.charAt(i))}return strBuf.join(\"\")}function stringToUTF8String(str){return decodeURIComponent(escape(str))}function utf8StringToString(str){return unescape(encodeURIComponent(str))}function isArrayEqual(arr1,arr2){if(arr1.length!==arr2.length){return false}for(let i=0,ii=arr1.length;i<ii;i++){if(arr1[i]!==arr2[i]){return false}}return true}function getModificationDate(date=new Date){const buffer=[date.getUTCFullYear().toString(),(date.getUTCMonth()+1).toString().padStart(2,\"0\"),date.getUTCDate().toString().padStart(2,\"0\"),date.getUTCHours().toString().padStart(2,\"0\"),date.getUTCMinutes().toString().padStart(2,\"0\"),date.getUTCSeconds().toString().padStart(2,\"0\")];return buffer.join(\"\")}let NormalizeRegex=null;let NormalizationMap=null;function normalizeUnicode(str){if(!NormalizeRegex){NormalizeRegex=/([\\u00a0\\u00b5\\u037e\\u0eb3\\u2000-\\u200a\\u202f\\u2126\\ufb00-\\ufb04\\ufb06\\ufb20-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufba1\\ufba4-\\ufba9\\ufbae-\\ufbb1\\ufbd3-\\ufbdc\\ufbde-\\ufbe7\\ufbea-\\ufbf8\\ufbfc-\\ufbfd\\ufc00-\\ufc5d\\ufc64-\\ufcf1\\ufcf5-\\ufd3d\\ufd88\\ufdf4\\ufdfa-\\ufdfb\\ufe71\\ufe77\\ufe79\\ufe7b\\ufe7d]+)|(\\ufb05+)/gu;NormalizationMap=new Map([[\"ﬅ\",\"ſt\"]])}return str.replaceAll(NormalizeRegex,((_,p1,p2)=>p1?p1.normalize(\"NFKC\"):NormalizationMap.get(p2)))}function getUuid(){if(typeof crypto.randomUUID===\"function\"){return crypto.randomUUID()}const buf=new Uint8Array(32);crypto.getRandomValues(buf);return bytesToString(buf)}const AnnotationPrefix=\"pdfjs_internal_id_\";function _isValidExplicitDest(validRef,validName,dest){if(!Array.isArray(dest)||dest.length<2){return false}const[page,zoom,...args]=dest;if(!validRef(page)&&!Number.isInteger(page)){return false}if(!validName(zoom)){return false}const argsLen=args.length;let allowNull=true;switch(zoom.name){case\"XYZ\":if(argsLen<2||argsLen>3){return false}break;case\"Fit\":case\"FitB\":return argsLen===0;case\"FitH\":case\"FitBH\":case\"FitV\":case\"FitBV\":if(argsLen>1){return false}break;case\"FitR\":if(argsLen!==4){return false}allowNull=false;break;default:return false}for(const arg of args){if(typeof arg===\"number\"||allowNull&&arg===null){continue}return false}return true}function MathClamp(v,min,max){return Math.min(Math.max(v,min),max)}function toHexUtil(arr){if(Uint8Array.prototype.toHex){return arr.toHex()}return Array.from(arr,(num=>hexNumbers[num])).join(\"\")}function toBase64Util(arr){if(Uint8Array.prototype.toBase64){return arr.toBase64()}return btoa(bytesToString(arr))}function fromBase64Util(str){if(Uint8Array.fromBase64){return Uint8Array.fromBase64(str)}return stringToBytes(atob(str))}if(typeof Promise.try!==\"function\"){Promise.try=function(fn,...args){return new Promise((resolve=>{resolve(fn(...args))}))}}if(typeof Math.sumPrecise!==\"function\"){Math.sumPrecise=function(numbers){return numbers.reduce(((a,b)=>a+b),0)}}const SVG_NS=\"http://www.w3.org/2000/svg\";class PixelsPerInch{static CSS=96;static PDF=72;static PDF_TO_CSS_UNITS=this.CSS/this.PDF}async function fetchData(url,type=\"text\"){if(isValidFetchUrl(url,document.baseURI)){const response=await fetch(url);if(!response.ok){throw new Error(response.statusText)}switch(type){case\"arraybuffer\":return response.arrayBuffer();case\"blob\":return response.blob();case\"json\":return response.json()}return response.text()}return new Promise(((resolve,reject)=>{const request=new XMLHttpRequest;request.open(\"GET\",url,true);request.responseType=type;request.onreadystatechange=()=>{if(request.readyState!==XMLHttpRequest.DONE){return}if(request.status===200||request.status===0){switch(type){case\"arraybuffer\":case\"blob\":case\"json\":resolve(request.response);return}resolve(request.responseText);return}reject(new Error(request.statusText))};request.send(null)}))}class PageViewport{constructor({viewBox:viewBox,userUnit:userUnit,scale:scale,rotation:rotation,offsetX:offsetX=0,offsetY:offsetY=0,dontFlip:dontFlip=false}){this.viewBox=viewBox;this.userUnit=userUnit;this.scale=scale;this.rotation=rotation;this.offsetX=offsetX;this.offsetY=offsetY;scale*=userUnit;const centerX=(viewBox[2]+viewBox[0])/2;const centerY=(viewBox[3]+viewBox[1])/2;let rotateA,rotateB,rotateC,rotateD;rotation%=360;if(rotation<0){rotation+=360}switch(rotation){case 180:rotateA=-1;rotateB=0;rotateC=0;rotateD=1;break;case 90:rotateA=0;rotateB=1;rotateC=1;rotateD=0;break;case 270:rotateA=0;rotateB=-1;rotateC=-1;rotateD=0;break;case 0:rotateA=1;rotateB=0;rotateC=0;rotateD=-1;break;default:throw new Error(\"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\")}if(dontFlip){rotateC=-rotateC;rotateD=-rotateD}let offsetCanvasX,offsetCanvasY;let width,height;if(rotateA===0){offsetCanvasX=Math.abs(centerY-viewBox[1])*scale+offsetX;offsetCanvasY=Math.abs(centerX-viewBox[0])*scale+offsetY;width=(viewBox[3]-viewBox[1])*scale;height=(viewBox[2]-viewBox[0])*scale}else{offsetCanvasX=Math.abs(centerX-viewBox[0])*scale+offsetX;offsetCanvasY=Math.abs(centerY-viewBox[1])*scale+offsetY;width=(viewBox[2]-viewBox[0])*scale;height=(viewBox[3]-viewBox[1])*scale}this.transform=[rotateA*scale,rotateB*scale,rotateC*scale,rotateD*scale,offsetCanvasX-rotateA*scale*centerX-rotateC*scale*centerY,offsetCanvasY-rotateB*scale*centerX-rotateD*scale*centerY];this.width=width;this.height=height}get rawDims(){const dims=this.viewBox;return shadow(this,\"rawDims\",{pageWidth:dims[2]-dims[0],pageHeight:dims[3]-dims[1],pageX:dims[0],pageY:dims[1]})}clone({scale:scale=this.scale,rotation:rotation=this.rotation,offsetX:offsetX=this.offsetX,offsetY:offsetY=this.offsetY,dontFlip:dontFlip=false}={}){return new PageViewport({viewBox:this.viewBox.slice(),userUnit:this.userUnit,scale:scale,rotation:rotation,offsetX:offsetX,offsetY:offsetY,dontFlip:dontFlip})}convertToViewportPoint(x,y){const p=[x,y];Util.applyTransform(p,this.transform);return p}convertToViewportRectangle(rect){const topLeft=[rect[0],rect[1]];Util.applyTransform(topLeft,this.transform);const bottomRight=[rect[2],rect[3]];Util.applyTransform(bottomRight,this.transform);return[topLeft[0],topLeft[1],bottomRight[0],bottomRight[1]]}convertToPdfPoint(x,y){const p=[x,y];Util.applyInverseTransform(p,this.transform);return p}}class RenderingCancelledException extends BaseException{constructor(msg,extraDelay=0){super(msg,\"RenderingCancelledException\");this.extraDelay=extraDelay}}function isDataScheme(url){const ii=url.length;let i=0;while(i<ii&&url[i].trim()===\"\"){i++}return url.substring(i,i+5).toLowerCase()===\"data:\"}function isPdfFile(filename){return typeof filename===\"string\"&&/\\.pdf$/i.test(filename)}function getFilenameFromUrl(url){[url]=url.split(/[#?]/,1);return url.substring(url.lastIndexOf(\"/\")+1)}function getPdfFilenameFromUrl(url,defaultFilename=\"document.pdf\"){if(typeof url!==\"string\"){return defaultFilename}if(isDataScheme(url)){warn('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');return defaultFilename}const reURI=/^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;const reFilename=/[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;const splitURI=reURI.exec(url);let suggestedFilename=reFilename.exec(splitURI[1])||reFilename.exec(splitURI[2])||reFilename.exec(splitURI[3]);if(suggestedFilename){suggestedFilename=suggestedFilename[0];if(suggestedFilename.includes(\"%\")){try{suggestedFilename=reFilename.exec(decodeURIComponent(suggestedFilename))[0]}catch{}}}return suggestedFilename||defaultFilename}class StatTimer{started=Object.create(null);times=[];time(name){if(name in this.started){warn(`Timer is already running for ${name}`)}this.started[name]=Date.now()}timeEnd(name){if(!(name in this.started)){warn(`Timer has not been started for ${name}`)}this.times.push({name:name,start:this.started[name],end:Date.now()});delete this.started[name]}toString(){const outBuf=[];let longest=0;for(const{name:name}of this.times){longest=Math.max(name.length,longest)}for(const{name:name,start:start,end:end}of this.times){outBuf.push(`${name.padEnd(longest)} ${end-start}ms\\n`)}return outBuf.join(\"\")}}function isValidFetchUrl(url,baseUrl){const res=baseUrl?URL.parse(url,baseUrl):URL.parse(url);return res?.protocol===\"http:\"||res?.protocol===\"https:\"}function noContextMenu(e){e.preventDefault()}function stopEvent(e){e.preventDefault();e.stopPropagation()}function deprecated(details){console.log(\"Deprecated API usage: \"+details)}class PDFDateString{static#regex;static toDateObject(input){if(!input||typeof input!==\"string\"){return null}this.#regex||=new RegExp(\"^D:\"+\"(\\\\d{4})\"+\"(\\\\d{2})?\"+\"(\\\\d{2})?\"+\"(\\\\d{2})?\"+\"(\\\\d{2})?\"+\"(\\\\d{2})?\"+\"([Z|+|-])?\"+\"(\\\\d{2})?\"+\"'?\"+\"(\\\\d{2})?\"+\"'?\");const matches=this.#regex.exec(input);if(!matches){return null}const year=parseInt(matches[1],10);let month=parseInt(matches[2],10);month=month>=1&&month<=12?month-1:0;let day=parseInt(matches[3],10);day=day>=1&&day<=31?day:1;let hour=parseInt(matches[4],10);hour=hour>=0&&hour<=23?hour:0;let minute=parseInt(matches[5],10);minute=minute>=0&&minute<=59?minute:0;let second=parseInt(matches[6],10);second=second>=0&&second<=59?second:0;const universalTimeRelation=matches[7]||\"Z\";let offsetHour=parseInt(matches[8],10);offsetHour=offsetHour>=0&&offsetHour<=23?offsetHour:0;let offsetMinute=parseInt(matches[9],10)||0;offsetMinute=offsetMinute>=0&&offsetMinute<=59?offsetMinute:0;if(universalTimeRelation===\"-\"){hour+=offsetHour;minute+=offsetMinute}else if(universalTimeRelation===\"+\"){hour-=offsetHour;minute-=offsetMinute}return new Date(Date.UTC(year,month,day,hour,minute,second))}}function getXfaPageViewport(xfaPage,{scale:scale=1,rotation:rotation=0}){const{width:width,height:height}=xfaPage.attributes.style;const viewBox=[0,0,parseInt(width),parseInt(height)];return new PageViewport({viewBox:viewBox,userUnit:1,scale:scale,rotation:rotation})}function getRGB(color){if(color.startsWith(\"#\")){const colorRGB=parseInt(color.slice(1),16);return[(colorRGB&16711680)>>16,(colorRGB&65280)>>8,colorRGB&255]}if(color.startsWith(\"rgb(\")){return color.slice(4,-1).split(\",\").map((x=>parseInt(x)))}if(color.startsWith(\"rgba(\")){return color.slice(5,-1).split(\",\").map((x=>parseInt(x))).slice(0,3)}warn(`Not a valid color format: \"${color}\"`);return[0,0,0]}function getColorValues(colors){const span=document.createElement(\"span\");span.style.visibility=\"hidden\";span.style.colorScheme=\"only light\";document.body.append(span);for(const name of colors.keys()){span.style.color=name;const computedColor=window.getComputedStyle(span).color;colors.set(name,getRGB(computedColor))}span.remove()}function getCurrentTransform(ctx){const{a:a,b:b,c:c,d:d,e:e,f:f}=ctx.getTransform();return[a,b,c,d,e,f]}function getCurrentTransformInverse(ctx){const{a:a,b:b,c:c,d:d,e:e,f:f}=ctx.getTransform().invertSelf();return[a,b,c,d,e,f]}function setLayerDimensions(div,viewport,mustFlip=false,mustRotate=true){if(viewport instanceof PageViewport){const{pageWidth:pageWidth,pageHeight:pageHeight}=viewport.rawDims;const{style:style}=div;const useRound=util_FeatureTest.isCSSRoundSupported;const w=`var(--total-scale-factor) * ${pageWidth}px`,h=`var(--total-scale-factor) * ${pageHeight}px`;const widthStr=useRound?`round(down, ${w}, var(--scale-round-x))`:`calc(${w})`,heightStr=useRound?`round(down, ${h}, var(--scale-round-y))`:`calc(${h})`;if(!mustFlip||viewport.rotation%180===0){style.width=widthStr;style.height=heightStr}else{style.width=heightStr;style.height=widthStr}}if(mustRotate){div.setAttribute(\"data-main-rotation\",viewport.rotation)}}class OutputScale{constructor(){const{pixelRatio:pixelRatio}=OutputScale;this.sx=pixelRatio;this.sy=pixelRatio}get scaled(){return this.sx!==1||this.sy!==1}get symmetric(){return this.sx===this.sy}limitCanvas(width,height,maxPixels,maxDim,capAreaFactor=-1){let maxAreaScale=Infinity,maxWidthScale=Infinity,maxHeightScale=Infinity;if(capAreaFactor>=0){const cappedWindowArea=OutputScale.getCappedWindowArea(capAreaFactor);maxPixels=maxPixels>0?Math.min(maxPixels,cappedWindowArea):cappedWindowArea}if(maxPixels>0){maxAreaScale=Math.sqrt(maxPixels/(width*height))}if(maxDim!==-1){maxWidthScale=maxDim/width;maxHeightScale=maxDim/height}const maxScale=Math.min(maxAreaScale,maxWidthScale,maxHeightScale);if(this.sx>maxScale||this.sy>maxScale){this.sx=maxScale;this.sy=maxScale;return true}return false}static get pixelRatio(){return globalThis.devicePixelRatio||1}static getCappedWindowArea(capAreaFactor){return Math.ceil(window.screen.availWidth*window.screen.availHeight*this.pixelRatio**2*(1+capAreaFactor/100))}}const SupportedImageMimeTypes=[\"image/apng\",\"image/avif\",\"image/bmp\",\"image/gif\",\"image/jpeg\",\"image/png\",\"image/svg+xml\",\"image/webp\",\"image/x-icon\"];class EditorToolbar{#toolbar=null;#colorPicker=null;#editor;#buttons=null;#altText=null;#signatureDescriptionButton=null;static#l10nRemove=null;constructor(editor){this.#editor=editor;EditorToolbar.#l10nRemove||=Object.freeze({freetext:\"pdfjs-editor-remove-freetext-button\",highlight:\"pdfjs-editor-remove-highlight-button\",ink:\"pdfjs-editor-remove-ink-button\",stamp:\"pdfjs-editor-remove-stamp-button\",signature:\"pdfjs-editor-remove-signature-button\"})}render(){const editToolbar=this.#toolbar=document.createElement(\"div\");editToolbar.classList.add(\"editToolbar\",\"hidden\");editToolbar.setAttribute(\"role\",\"toolbar\");const signal=this.#editor._uiManager._signal;editToolbar.addEventListener(\"contextmenu\",noContextMenu,{signal:signal});editToolbar.addEventListener(\"pointerdown\",EditorToolbar.#pointerDown,{signal:signal});const buttons=this.#buttons=document.createElement(\"div\");buttons.className=\"buttons\";editToolbar.append(buttons);const position=this.#editor.toolbarPosition;if(position){const{style:style}=editToolbar;const x=this.#editor._uiManager.direction===\"ltr\"?1-position[0]:position[0];style.insetInlineEnd=`${100*x}%`;style.top=`calc(${100*position[1]}% + var(--editor-toolbar-vert-offset))`}this.#addDeleteButton();return editToolbar}get div(){return this.#toolbar}static#pointerDown(e){e.stopPropagation()}#focusIn(e){this.#editor._focusEventsAllowed=false;stopEvent(e)}#focusOut(e){this.#editor._focusEventsAllowed=true;stopEvent(e)}#addListenersToElement(element){const signal=this.#editor._uiManager._signal;element.addEventListener(\"focusin\",this.#focusIn.bind(this),{capture:true,signal:signal});element.addEventListener(\"focusout\",this.#focusOut.bind(this),{capture:true,signal:signal});element.addEventListener(\"contextmenu\",noContextMenu,{signal:signal})}hide(){this.#toolbar.classList.add(\"hidden\");this.#colorPicker?.hideDropdown()}show(){this.#toolbar.classList.remove(\"hidden\");this.#altText?.shown()}#addDeleteButton(){const{editorType:editorType,_uiManager:_uiManager}=this.#editor;const button=document.createElement(\"button\");button.className=\"delete\";button.tabIndex=0;button.setAttribute(\"data-l10n-id\",EditorToolbar.#l10nRemove[editorType]);this.#addListenersToElement(button);button.addEventListener(\"click\",(e=>{_uiManager.delete()}),{signal:_uiManager._signal});this.#buttons.append(button)}get#divider(){const divider=document.createElement(\"div\");divider.className=\"divider\";return divider}async addAltText(altText){const button=await altText.render();this.#addListenersToElement(button);this.#buttons.prepend(button,this.#divider);this.#altText=altText}addColorPicker(colorPicker){this.#colorPicker=colorPicker;const button=colorPicker.renderButton();this.#addListenersToElement(button);this.#buttons.prepend(button,this.#divider)}async addEditSignatureButton(signatureManager){const button=this.#signatureDescriptionButton=await signatureManager.renderEditButton(this.#editor);this.#addListenersToElement(button);this.#buttons.prepend(button,this.#divider)}updateEditSignatureButton(description){if(this.#signatureDescriptionButton){this.#signatureDescriptionButton.title=description}}remove(){this.#toolbar.remove();this.#colorPicker?.destroy();this.#colorPicker=null}}class HighlightToolbar{#buttons=null;#toolbar=null;#uiManager;constructor(uiManager){this.#uiManager=uiManager}#render(){const editToolbar=this.#toolbar=document.createElement(\"div\");editToolbar.className=\"editToolbar\";editToolbar.setAttribute(\"role\",\"toolbar\");editToolbar.addEventListener(\"contextmenu\",noContextMenu,{signal:this.#uiManager._signal});const buttons=this.#buttons=document.createElement(\"div\");buttons.className=\"buttons\";editToolbar.append(buttons);this.#addHighlightButton();return editToolbar}#getLastPoint(boxes,isLTR){let lastY=0;let lastX=0;for(const box of boxes){const y=box.y+box.height;if(y<lastY){continue}const x=box.x+(isLTR?box.width:0);if(y>lastY){lastX=x;lastY=y;continue}if(isLTR){if(x>lastX){lastX=x}}else if(x<lastX){lastX=x}}return[isLTR?1-lastX:lastX,lastY]}show(parent,boxes,isLTR){const[x,y]=this.#getLastPoint(boxes,isLTR);const{style:style}=this.#toolbar||=this.#render();parent.append(this.#toolbar);style.insetInlineEnd=`${100*x}%`;style.top=`calc(${100*y}% + var(--editor-toolbar-vert-offset))`}hide(){this.#toolbar.remove()}#addHighlightButton(){const button=document.createElement(\"button\");button.className=\"highlightButton\";button.tabIndex=0;button.setAttribute(\"data-l10n-id\",`pdfjs-highlight-floating-button1`);const span=document.createElement(\"span\");button.append(span);span.className=\"visuallyHidden\";span.setAttribute(\"data-l10n-id\",\"pdfjs-highlight-floating-button-label\");const signal=this.#uiManager._signal;button.addEventListener(\"contextmenu\",noContextMenu,{signal:signal});button.addEventListener(\"click\",(()=>{this.#uiManager.highlightSelection(\"floating_button\")}),{signal:signal});this.#buttons.append(button)}}function bindEvents(obj,element,names){for(const name of names){element.addEventListener(name,obj[name].bind(obj))}}class IdManager{#id=0;get id(){return`${AnnotationEditorPrefix}${this.#id++}`}}class ImageManager{#baseId=getUuid();#id=0;#cache=null;static get _isSVGFittingCanvas(){const svg=`data:image/svg+xml;charset=UTF-8,<svg viewBox=\"0 0 1 1\" width=\"1\" height=\"1\" xmlns=\"http://www.w3.org/2000/svg\"><rect width=\"1\" height=\"1\" style=\"fill:red;\"/></svg>`;const canvas=new OffscreenCanvas(1,3);const ctx=canvas.getContext(\"2d\",{willReadFrequently:true});const image=new Image;image.src=svg;const promise=image.decode().then((()=>{ctx.drawImage(image,0,0,1,1,0,0,1,3);return new Uint32Array(ctx.getImageData(0,0,1,1).data.buffer)[0]===0}));return shadow(this,\"_isSVGFittingCanvas\",promise)}async#get(key,rawData){this.#cache||=new Map;let data=this.#cache.get(key);if(data===null){return null}if(data?.bitmap){data.refCounter+=1;return data}try{data||={bitmap:null,id:`image_${this.#baseId}_${this.#id++}`,refCounter:0,isSvg:false};let image;if(typeof rawData===\"string\"){data.url=rawData;image=await fetchData(rawData,\"blob\")}else if(rawData instanceof File){image=data.file=rawData}else if(rawData instanceof Blob){image=rawData}if(image.type===\"image/svg+xml\"){const mustRemoveAspectRatioPromise=ImageManager._isSVGFittingCanvas;const fileReader=new FileReader;const imageElement=new Image;const imagePromise=new Promise(((resolve,reject)=>{imageElement.onload=()=>{data.bitmap=imageElement;data.isSvg=true;resolve()};fileReader.onload=async()=>{const url=data.svgUrl=fileReader.result;imageElement.src=await mustRemoveAspectRatioPromise?`${url}#svgView(preserveAspectRatio(none))`:url};imageElement.onerror=fileReader.onerror=reject}));fileReader.readAsDataURL(image);await imagePromise}else{data.bitmap=await createImageBitmap(image)}data.refCounter=1}catch(e){warn(e);data=null}this.#cache.set(key,data);if(data){this.#cache.set(data.id,data)}return data}async getFromFile(file){const{lastModified:lastModified,name:name,size:size,type:type}=file;return this.#get(`${lastModified}_${name}_${size}_${type}`,file)}async getFromUrl(url){return this.#get(url,url)}async getFromBlob(id,blobPromise){const blob=await blobPromise;return this.#get(id,blob)}async getFromId(id){this.#cache||=new Map;const data=this.#cache.get(id);if(!data){return null}if(data.bitmap){data.refCounter+=1;return data}if(data.file){return this.getFromFile(data.file)}if(data.blobPromise){const{blobPromise:blobPromise}=data;delete data.blobPromise;return this.getFromBlob(data.id,blobPromise)}return this.getFromUrl(data.url)}getFromCanvas(id,canvas){this.#cache||=new Map;let data=this.#cache.get(id);if(data?.bitmap){data.refCounter+=1;return data}const offscreen=new OffscreenCanvas(canvas.width,canvas.height);const ctx=offscreen.getContext(\"2d\");ctx.drawImage(canvas,0,0);data={bitmap:offscreen.transferToImageBitmap(),id:`image_${this.#baseId}_${this.#id++}`,refCounter:1,isSvg:false};this.#cache.set(id,data);this.#cache.set(data.id,data);return data}getSvgUrl(id){const data=this.#cache.get(id);if(!data?.isSvg){return null}return data.svgUrl}deleteId(id){this.#cache||=new Map;const data=this.#cache.get(id);if(!data){return}data.refCounter-=1;if(data.refCounter!==0){return}const{bitmap:bitmap}=data;if(!data.url&&!data.file){const canvas=new OffscreenCanvas(bitmap.width,bitmap.height);const ctx=canvas.getContext(\"bitmaprenderer\");ctx.transferFromImageBitmap(bitmap);data.blobPromise=canvas.convertToBlob()}bitmap.close?.();data.bitmap=null}isValidId(id){return id.startsWith(`image_${this.#baseId}_`)}}class CommandManager{#commands=[];#locked=false;#maxSize;#position=-1;constructor(maxSize=128){this.#maxSize=maxSize}add({cmd:cmd,undo:undo,post:post,mustExec:mustExec,type:type=NaN,overwriteIfSameType:overwriteIfSameType=false,keepUndo:keepUndo=false}){if(mustExec){cmd()}if(this.#locked){return}const save={cmd:cmd,undo:undo,post:post,type:type};if(this.#position===-1){if(this.#commands.length>0){this.#commands.length=0}this.#position=0;this.#commands.push(save);return}if(overwriteIfSameType&&this.#commands[this.#position].type===type){if(keepUndo){save.undo=this.#commands[this.#position].undo}this.#commands[this.#position]=save;return}const next=this.#position+1;if(next===this.#maxSize){this.#commands.splice(0,1)}else{this.#position=next;if(next<this.#commands.length){this.#commands.splice(next)}}this.#commands.push(save)}undo(){if(this.#position===-1){return}this.#locked=true;const{undo:undo,post:post}=this.#commands[this.#position];undo();post?.();this.#locked=false;this.#position-=1}redo(){if(this.#position<this.#commands.length-1){this.#position+=1;this.#locked=true;const{cmd:cmd,post:post}=this.#commands[this.#position];cmd();post?.();this.#locked=false}}hasSomethingToUndo(){return this.#position!==-1}hasSomethingToRedo(){return this.#position<this.#commands.length-1}cleanType(type){if(this.#position===-1){return}for(let i=this.#position;i>=0;i--){if(this.#commands[i].type!==type){this.#commands.splice(i+1,this.#position-i);this.#position=i;return}}this.#commands.length=0;this.#position=-1}destroy(){this.#commands=null}}class KeyboardManager{constructor(callbacks){this.buffer=[];this.callbacks=new Map;this.allKeys=new Set;const{isMac:isMac}=util_FeatureTest.platform;for(const[keys,callback,options={}]of callbacks){for(const key of keys){const isMacKey=key.startsWith(\"mac+\");if(isMac&&isMacKey){this.callbacks.set(key.slice(4),{callback:callback,options:options});this.allKeys.add(key.split(\"+\").at(-1))}else if(!isMac&&!isMacKey){this.callbacks.set(key,{callback:callback,options:options});this.allKeys.add(key.split(\"+\").at(-1))}}}}#serialize(event){if(event.altKey){this.buffer.push(\"alt\")}if(event.ctrlKey){this.buffer.push(\"ctrl\")}if(event.metaKey){this.buffer.push(\"meta\")}if(event.shiftKey){this.buffer.push(\"shift\")}this.buffer.push(event.key);const str=this.buffer.join(\"+\");this.buffer.length=0;return str}exec(self,event){if(!this.allKeys.has(event.key)){return}const info=this.callbacks.get(this.#serialize(event));if(!info){return}const{callback:callback,options:{bubbles:bubbles=false,args:args=[],checker:checker=null}}=info;if(checker&&!checker(self,event)){return}callback.bind(self,...args,event)();if(!bubbles){stopEvent(event)}}}class ColorManager{static _colorsMapping=new Map([[\"CanvasText\",[0,0,0]],[\"Canvas\",[255,255,255]]]);get _colors(){const colors=new Map([[\"CanvasText\",null],[\"Canvas\",null]]);getColorValues(colors);return shadow(this,\"_colors\",colors)}convert(color){const rgb=getRGB(color);if(!window.matchMedia(\"(forced-colors: active)\").matches){return rgb}for(const[name,RGB]of this._colors){if(RGB.every(((x,i)=>x===rgb[i]))){return ColorManager._colorsMapping.get(name)}}return rgb}getHexCode(name){const rgb=this._colors.get(name);if(!rgb){return name}return Util.makeHexColor(...rgb)}}class AnnotationEditorUIManager{#abortController=new AbortController;#activeEditor=null;#allEditors=new Map;#allLayers=new Map;#altTextManager=null;#annotationStorage=null;#changedExistingAnnotations=null;#commandManager=new CommandManager;#copyPasteAC=null;#currentDrawingSession=null;#currentPageIndex=0;#deletedAnnotationsElementIds=new Set;#draggingEditors=null;#editorTypes=null;#editorsToRescale=new Set;_editorUndoBar=null;#enableHighlightFloatingButton=false;#enableUpdatedAddImage=false;#enableNewAltTextWhenAddingImage=false;#filterFactory=null;#focusMainContainerTimeoutId=null;#focusManagerAC=null;#highlightColors=null;#highlightWhenShiftUp=false;#highlightToolbar=null;#idManager=new IdManager;#isEnabled=false;#isWaiting=false;#keyboardManagerAC=null;#lastActiveElement=null;#mainHighlightColorPicker=null;#missingCanvases=null;#mlManager=null;#mode=AnnotationEditorType.NONE;#selectedEditors=new Set;#selectedTextNode=null;#signatureManager=null;#pageColors=null;#showAllStates=null;#previousStates={isEditing:false,isEmpty:true,hasSomethingToUndo:false,hasSomethingToRedo:false,hasSelectedEditor:false,hasSelectedText:false};#translation=[0,0];#translationTimeoutId=null;#container=null;#viewer=null;#updateModeCapability=null;static TRANSLATE_SMALL=1;static TRANSLATE_BIG=10;static get _keyboardManager(){const proto=AnnotationEditorUIManager.prototype;const arrowChecker=self=>self.#container.contains(document.activeElement)&&document.activeElement.tagName!==\"BUTTON\"&&self.hasSomethingToControl();const textInputChecker=(_self,{target:el})=>{if(el instanceof HTMLInputElement){const{type:type}=el;return type!==\"text\"&&type!==\"number\"}return true};const small=this.TRANSLATE_SMALL;const big=this.TRANSLATE_BIG;return shadow(this,\"_keyboardManager\",new KeyboardManager([[[\"ctrl+a\",\"mac+meta+a\"],proto.selectAll,{checker:textInputChecker}],[[\"ctrl+z\",\"mac+meta+z\"],proto.undo,{checker:textInputChecker}],[[\"ctrl+y\",\"ctrl+shift+z\",\"mac+meta+shift+z\",\"ctrl+shift+Z\",\"mac+meta+shift+Z\"],proto.redo,{checker:textInputChecker}],[[\"Backspace\",\"alt+Backspace\",\"ctrl+Backspace\",\"shift+Backspace\",\"mac+Backspace\",\"mac+alt+Backspace\",\"mac+ctrl+Backspace\",\"Delete\",\"ctrl+Delete\",\"shift+Delete\",\"mac+Delete\"],proto.delete,{checker:textInputChecker}],[[\"Enter\",\"mac+Enter\"],proto.addNewEditorFromKeyboard,{checker:(self,{target:el})=>!(el instanceof HTMLButtonElement)&&self.#container.contains(el)&&!self.isEnterHandled}],[[\" \",\"mac+ \"],proto.addNewEditorFromKeyboard,{checker:(self,{target:el})=>!(el instanceof HTMLButtonElement)&&self.#container.contains(document.activeElement)}],[[\"Escape\",\"mac+Escape\"],proto.unselectAll],[[\"ArrowLeft\",\"mac+ArrowLeft\"],proto.translateSelectedEditors,{args:[-small,0],checker:arrowChecker}],[[\"ctrl+ArrowLeft\",\"mac+shift+ArrowLeft\"],proto.translateSelectedEditors,{args:[-big,0],checker:arrowChecker}],[[\"ArrowRight\",\"mac+ArrowRight\"],proto.translateSelectedEditors,{args:[small,0],checker:arrowChecker}],[[\"ctrl+ArrowRight\",\"mac+shift+ArrowRight\"],proto.translateSelectedEditors,{args:[big,0],checker:arrowChecker}],[[\"ArrowUp\",\"mac+ArrowUp\"],proto.translateSelectedEditors,{args:[0,-small],checker:arrowChecker}],[[\"ctrl+ArrowUp\",\"mac+shift+ArrowUp\"],proto.translateSelectedEditors,{args:[0,-big],checker:arrowChecker}],[[\"ArrowDown\",\"mac+ArrowDown\"],proto.translateSelectedEditors,{args:[0,small],checker:arrowChecker}],[[\"ctrl+ArrowDown\",\"mac+shift+ArrowDown\"],proto.translateSelectedEditors,{args:[0,big],checker:arrowChecker}]]))}constructor(container,viewer,altTextManager,signatureManager,eventBus,pdfDocument,pageColors,highlightColors,enableHighlightFloatingButton,enableUpdatedAddImage,enableNewAltTextWhenAddingImage,mlManager,editorUndoBar,supportsPinchToZoom){const signal=this._signal=this.#abortController.signal;this.#container=container;this.#viewer=viewer;this.#altTextManager=altTextManager;this.#signatureManager=signatureManager;this._eventBus=eventBus;eventBus._on(\"editingaction\",this.onEditingAction.bind(this),{signal:signal});eventBus._on(\"pagechanging\",this.onPageChanging.bind(this),{signal:signal});eventBus._on(\"scalechanging\",this.onScaleChanging.bind(this),{signal:signal});eventBus._on(\"rotationchanging\",this.onRotationChanging.bind(this),{signal:signal});eventBus._on(\"setpreference\",this.onSetPreference.bind(this),{signal:signal});eventBus._on(\"switchannotationeditorparams\",(evt=>this.updateParams(evt.type,evt.value)),{signal:signal});this.#addSelectionListener();this.#addDragAndDropListeners();this.#addKeyboardManager();this.#annotationStorage=pdfDocument.annotationStorage;this.#filterFactory=pdfDocument.filterFactory;this.#pageColors=pageColors;this.#highlightColors=highlightColors||null;this.#enableHighlightFloatingButton=enableHighlightFloatingButton;this.#enableUpdatedAddImage=enableUpdatedAddImage;this.#enableNewAltTextWhenAddingImage=enableNewAltTextWhenAddingImage;this.#mlManager=mlManager||null;this.viewParameters={realScale:PixelsPerInch.PDF_TO_CSS_UNITS,rotation:0};this.isShiftKeyDown=false;this._editorUndoBar=editorUndoBar||null;this._supportsPinchToZoom=supportsPinchToZoom!==false}destroy(){this.#updateModeCapability?.resolve();this.#updateModeCapability=null;this.#abortController?.abort();this.#abortController=null;this._signal=null;for(const layer of this.#allLayers.values()){layer.destroy()}this.#allLayers.clear();this.#allEditors.clear();this.#editorsToRescale.clear();this.#missingCanvases?.clear();this.#activeEditor=null;this.#selectedEditors.clear();this.#commandManager.destroy();this.#altTextManager?.destroy();this.#signatureManager?.destroy();this.#highlightToolbar?.hide();this.#highlightToolbar=null;this.#mainHighlightColorPicker?.destroy();this.#mainHighlightColorPicker=null;if(this.#focusMainContainerTimeoutId){clearTimeout(this.#focusMainContainerTimeoutId);this.#focusMainContainerTimeoutId=null}if(this.#translationTimeoutId){clearTimeout(this.#translationTimeoutId);this.#translationTimeoutId=null}this._editorUndoBar?.destroy()}combinedSignal(ac){return AbortSignal.any([this._signal,ac.signal])}get mlManager(){return this.#mlManager}get useNewAltTextFlow(){return this.#enableUpdatedAddImage}get useNewAltTextWhenAddingImage(){return this.#enableNewAltTextWhenAddingImage}get hcmFilter(){return shadow(this,\"hcmFilter\",this.#pageColors?this.#filterFactory.addHCMFilter(this.#pageColors.foreground,this.#pageColors.background):\"none\")}get direction(){return shadow(this,\"direction\",getComputedStyle(this.#container).direction)}get highlightColors(){return shadow(this,\"highlightColors\",this.#highlightColors?new Map(this.#highlightColors.split(\",\").map((pair=>pair.split(\"=\").map((x=>x.trim()))))):null)}get highlightColorNames(){return shadow(this,\"highlightColorNames\",this.highlightColors?new Map(Array.from(this.highlightColors,(e=>e.reverse()))):null)}setCurrentDrawingSession(layer){if(layer){this.unselectAll();this.disableUserSelect(true)}else{this.disableUserSelect(false)}this.#currentDrawingSession=layer}setMainHighlightColorPicker(colorPicker){this.#mainHighlightColorPicker=colorPicker}editAltText(editor,firstTime=false){this.#altTextManager?.editAltText(this,editor,firstTime)}getSignature(editor){this.#signatureManager?.getSignature({uiManager:this,editor:editor})}get signatureManager(){return this.#signatureManager}switchToMode(mode,callback){this._eventBus.on(\"annotationeditormodechanged\",callback,{once:true,signal:this._signal});this._eventBus.dispatch(\"showannotationeditorui\",{source:this,mode:mode})}setPreference(name,value){this._eventBus.dispatch(\"setpreference\",{source:this,name:name,value:value})}onSetPreference({name:name,value:value}){switch(name){case\"enableNewAltTextWhenAddingImage\":this.#enableNewAltTextWhenAddingImage=value;break}}onPageChanging({pageNumber:pageNumber}){this.#currentPageIndex=pageNumber-1}focusMainContainer(){this.#container.focus()}findParent(x,y){for(const layer of this.#allLayers.values()){const{x:layerX,y:layerY,width:width,height:height}=layer.div.getBoundingClientRect();if(x>=layerX&&x<=layerX+width&&y>=layerY&&y<=layerY+height){return layer}}return null}disableUserSelect(value=false){this.#viewer.classList.toggle(\"noUserSelect\",value)}addShouldRescale(editor){this.#editorsToRescale.add(editor)}removeShouldRescale(editor){this.#editorsToRescale.delete(editor)}onScaleChanging({scale:scale}){this.commitOrRemove();this.viewParameters.realScale=scale*PixelsPerInch.PDF_TO_CSS_UNITS;for(const editor of this.#editorsToRescale){editor.onScaleChanging()}this.#currentDrawingSession?.onScaleChanging()}onRotationChanging({pagesRotation:pagesRotation}){this.commitOrRemove();this.viewParameters.rotation=pagesRotation}#getAnchorElementForSelection({anchorNode:anchorNode}){return anchorNode.nodeType===Node.TEXT_NODE?anchorNode.parentElement:anchorNode}#getLayerForTextLayer(textLayer){const{currentLayer:currentLayer}=this;if(currentLayer.hasTextLayer(textLayer)){return currentLayer}for(const layer of this.#allLayers.values()){if(layer.hasTextLayer(textLayer)){return layer}}return null}highlightSelection(methodOfCreation=\"\"){const selection=document.getSelection();if(!selection||selection.isCollapsed){return}const{anchorNode:anchorNode,anchorOffset:anchorOffset,focusNode:focusNode,focusOffset:focusOffset}=selection;const text=selection.toString();const anchorElement=this.#getAnchorElementForSelection(selection);const textLayer=anchorElement.closest(\".textLayer\");const boxes=this.getSelectionBoxes(textLayer);if(!boxes){return}selection.empty();const layer=this.#getLayerForTextLayer(textLayer);const isNoneMode=this.#mode===AnnotationEditorType.NONE;const callback=()=>{layer?.createAndAddNewEditor({x:0,y:0},false,{methodOfCreation:methodOfCreation,boxes:boxes,anchorNode:anchorNode,anchorOffset:anchorOffset,focusNode:focusNode,focusOffset:focusOffset,text:text});if(isNoneMode){this.showAllEditors(\"highlight\",true,true)}};if(isNoneMode){this.switchToMode(AnnotationEditorType.HIGHLIGHT,callback);return}callback()}#displayHighlightToolbar(){const selection=document.getSelection();if(!selection||selection.isCollapsed){return}const anchorElement=this.#getAnchorElementForSelection(selection);const textLayer=anchorElement.closest(\".textLayer\");const boxes=this.getSelectionBoxes(textLayer);if(!boxes){return}this.#highlightToolbar||=new HighlightToolbar(this);this.#highlightToolbar.show(textLayer,boxes,this.direction===\"ltr\")}addToAnnotationStorage(editor){if(!editor.isEmpty()&&this.#annotationStorage&&!this.#annotationStorage.has(editor.id)){this.#annotationStorage.setValue(editor.id,editor)}}#selectionChange(){const selection=document.getSelection();if(!selection||selection.isCollapsed){if(this.#selectedTextNode){this.#highlightToolbar?.hide();this.#selectedTextNode=null;this.#dispatchUpdateStates({hasSelectedText:false})}return}const{anchorNode:anchorNode}=selection;if(anchorNode===this.#selectedTextNode){return}const anchorElement=this.#getAnchorElementForSelection(selection);const textLayer=anchorElement.closest(\".textLayer\");if(!textLayer){if(this.#selectedTextNode){this.#highlightToolbar?.hide();this.#selectedTextNode=null;this.#dispatchUpdateStates({hasSelectedText:false})}return}this.#highlightToolbar?.hide();this.#selectedTextNode=anchorNode;this.#dispatchUpdateStates({hasSelectedText:true});if(this.#mode!==AnnotationEditorType.HIGHLIGHT&&this.#mode!==AnnotationEditorType.NONE){return}if(this.#mode===AnnotationEditorType.HIGHLIGHT){this.showAllEditors(\"highlight\",true,true)}this.#highlightWhenShiftUp=this.isShiftKeyDown;if(!this.isShiftKeyDown){const activeLayer=this.#mode===AnnotationEditorType.HIGHLIGHT?this.#getLayerForTextLayer(textLayer):null;activeLayer?.toggleDrawing();const ac=new AbortController;const signal=this.combinedSignal(ac);const pointerup=e=>{if(e.type===\"pointerup\"&&e.button!==0){return}ac.abort();activeLayer?.toggleDrawing(true);if(e.type===\"pointerup\"){this.#onSelectEnd(\"main_toolbar\")}};window.addEventListener(\"pointerup\",pointerup,{signal:signal});window.addEventListener(\"blur\",pointerup,{signal:signal})}}#onSelectEnd(methodOfCreation=\"\"){if(this.#mode===AnnotationEditorType.HIGHLIGHT){this.highlightSelection(methodOfCreation)}else if(this.#enableHighlightFloatingButton){this.#displayHighlightToolbar()}}#addSelectionListener(){document.addEventListener(\"selectionchange\",this.#selectionChange.bind(this),{signal:this._signal})}#addFocusManager(){if(this.#focusManagerAC){return}this.#focusManagerAC=new AbortController;const signal=this.combinedSignal(this.#focusManagerAC);window.addEventListener(\"focus\",this.focus.bind(this),{signal:signal});window.addEventListener(\"blur\",this.blur.bind(this),{signal:signal})}#removeFocusManager(){this.#focusManagerAC?.abort();this.#focusManagerAC=null}blur(){this.isShiftKeyDown=false;if(this.#highlightWhenShiftUp){this.#highlightWhenShiftUp=false;this.#onSelectEnd(\"main_toolbar\")}if(!this.hasSelection){return}const{activeElement:activeElement}=document;for(const editor of this.#selectedEditors){if(editor.div.contains(activeElement)){this.#lastActiveElement=[editor,activeElement];editor._focusEventsAllowed=false;break}}}focus(){if(!this.#lastActiveElement){return}const[lastEditor,lastActiveElement]=this.#lastActiveElement;this.#lastActiveElement=null;lastActiveElement.addEventListener(\"focusin\",(()=>{lastEditor._focusEventsAllowed=true}),{once:true,signal:this._signal});lastActiveElement.focus()}#addKeyboardManager(){if(this.#keyboardManagerAC){return}this.#keyboardManagerAC=new AbortController;const signal=this.combinedSignal(this.#keyboardManagerAC);window.addEventListener(\"keydown\",this.keydown.bind(this),{signal:signal});window.addEventListener(\"keyup\",this.keyup.bind(this),{signal:signal})}#removeKeyboardManager(){this.#keyboardManagerAC?.abort();this.#keyboardManagerAC=null}#addCopyPasteListeners(){if(this.#copyPasteAC){return}this.#copyPasteAC=new AbortController;const signal=this.combinedSignal(this.#copyPasteAC);document.addEventListener(\"copy\",this.copy.bind(this),{signal:signal});document.addEventListener(\"cut\",this.cut.bind(this),{signal:signal});document.addEventListener(\"paste\",this.paste.bind(this),{signal:signal})}#removeCopyPasteListeners(){this.#copyPasteAC?.abort();this.#copyPasteAC=null}#addDragAndDropListeners(){const signal=this._signal;document.addEventListener(\"dragover\",this.dragOver.bind(this),{signal:signal});document.addEventListener(\"drop\",this.drop.bind(this),{signal:signal})}addEditListeners(){this.#addKeyboardManager();this.#addCopyPasteListeners()}removeEditListeners(){this.#removeKeyboardManager();this.#removeCopyPasteListeners()}dragOver(event){for(const{type:type}of event.dataTransfer.items){for(const editorType of this.#editorTypes){if(editorType.isHandlingMimeForPasting(type)){event.dataTransfer.dropEffect=\"copy\";event.preventDefault();return}}}}drop(event){for(const item of event.dataTransfer.items){for(const editorType of this.#editorTypes){if(editorType.isHandlingMimeForPasting(item.type)){editorType.paste(item,this.currentLayer);event.preventDefault();return}}}}copy(event){event.preventDefault();this.#activeEditor?.commitOrRemove();if(!this.hasSelection){return}const editors=[];for(const editor of this.#selectedEditors){const serialized=editor.serialize(true);if(serialized){editors.push(serialized)}}if(editors.length===0){return}event.clipboardData.setData(\"application/pdfjs\",JSON.stringify(editors))}cut(event){this.copy(event);this.delete()}async paste(event){event.preventDefault();const{clipboardData:clipboardData}=event;for(const item of clipboardData.items){for(const editorType of this.#editorTypes){if(editorType.isHandlingMimeForPasting(item.type)){editorType.paste(item,this.currentLayer);return}}}let data=clipboardData.getData(\"application/pdfjs\");if(!data){return}try{data=JSON.parse(data)}catch(ex){warn(`paste: \"${ex.message}\".`);return}if(!Array.isArray(data)){return}this.unselectAll();const layer=this.currentLayer;try{const newEditors=[];for(const editor of data){const deserializedEditor=await layer.deserialize(editor);if(!deserializedEditor){return}newEditors.push(deserializedEditor)}const cmd=()=>{for(const editor of newEditors){this.#addEditorToLayer(editor)}this.#selectEditors(newEditors)};const undo=()=>{for(const editor of newEditors){editor.remove()}};this.addCommands({cmd:cmd,undo:undo,mustExec:true})}catch(ex){warn(`paste: \"${ex.message}\".`)}}keydown(event){if(!this.isShiftKeyDown&&event.key===\"Shift\"){this.isShiftKeyDown=true}if(this.#mode!==AnnotationEditorType.NONE&&!this.isEditorHandlingKeyboard){AnnotationEditorUIManager._keyboardManager.exec(this,event)}}keyup(event){if(this.isShiftKeyDown&&event.key===\"Shift\"){this.isShiftKeyDown=false;if(this.#highlightWhenShiftUp){this.#highlightWhenShiftUp=false;this.#onSelectEnd(\"main_toolbar\")}}}onEditingAction({name:name}){switch(name){case\"undo\":case\"redo\":case\"delete\":case\"selectAll\":this[name]();break;case\"highlightSelection\":this.highlightSelection(\"context_menu\");break}}#dispatchUpdateStates(details){const hasChanged=Object.entries(details).some((([key,value])=>this.#previousStates[key]!==value));if(hasChanged){this._eventBus.dispatch(\"annotationeditorstateschanged\",{source:this,details:Object.assign(this.#previousStates,details)});if(this.#mode===AnnotationEditorType.HIGHLIGHT&&details.hasSelectedEditor===false){this.#dispatchUpdateUI([[AnnotationEditorParamsType.HIGHLIGHT_FREE,true]])}}}#dispatchUpdateUI(details){this._eventBus.dispatch(\"annotationeditorparamschanged\",{source:this,details:details})}setEditingState(isEditing){if(isEditing){this.#addFocusManager();this.#addCopyPasteListeners();this.#dispatchUpdateStates({isEditing:this.#mode!==AnnotationEditorType.NONE,isEmpty:this.#isEmpty(),hasSomethingToUndo:this.#commandManager.hasSomethingToUndo(),hasSomethingToRedo:this.#commandManager.hasSomethingToRedo(),hasSelectedEditor:false})}else{this.#removeFocusManager();this.#removeCopyPasteListeners();this.#dispatchUpdateStates({isEditing:false});this.disableUserSelect(false)}}registerEditorTypes(types){if(this.#editorTypes){return}this.#editorTypes=types;for(const editorType of this.#editorTypes){this.#dispatchUpdateUI(editorType.defaultPropertiesToUpdate)}}getId(){return this.#idManager.id}get currentLayer(){return this.#allLayers.get(this.#currentPageIndex)}getLayer(pageIndex){return this.#allLayers.get(pageIndex)}get currentPageIndex(){return this.#currentPageIndex}addLayer(layer){this.#allLayers.set(layer.pageIndex,layer);if(this.#isEnabled){layer.enable()}else{layer.disable()}}removeLayer(layer){this.#allLayers.delete(layer.pageIndex)}async updateMode(mode,editId=null,isFromKeyboard=false){if(this.#mode===mode){return}if(this.#updateModeCapability){await this.#updateModeCapability.promise;if(!this.#updateModeCapability){return}}this.#updateModeCapability=Promise.withResolvers();this.#currentDrawingSession?.commitOrRemove();this.#mode=mode;if(mode===AnnotationEditorType.NONE){this.setEditingState(false);this.#disableAll();this._editorUndoBar?.hide();this.#updateModeCapability.resolve();return}if(mode===AnnotationEditorType.SIGNATURE){await(this.#signatureManager?.loadSignatures())}this.setEditingState(true);await this.#enableAll();this.unselectAll();for(const layer of this.#allLayers.values()){layer.updateMode(mode)}if(!editId){if(isFromKeyboard){this.addNewEditorFromKeyboard()}this.#updateModeCapability.resolve();return}for(const editor of this.#allEditors.values()){if(editor.annotationElementId===editId){this.setSelected(editor);editor.enterInEditMode()}else{editor.unselect()}}this.#updateModeCapability.resolve()}addNewEditorFromKeyboard(){if(this.currentLayer.canCreateNewEmptyEditor()){this.currentLayer.addNewEditor()}}updateToolbar(mode){if(mode===this.#mode){return}this._eventBus.dispatch(\"switchannotationeditormode\",{source:this,mode:mode})}updateParams(type,value){if(!this.#editorTypes){return}switch(type){case AnnotationEditorParamsType.CREATE:this.currentLayer.addNewEditor(value);return;case AnnotationEditorParamsType.HIGHLIGHT_DEFAULT_COLOR:this.#mainHighlightColorPicker?.updateColor(value);break;case AnnotationEditorParamsType.HIGHLIGHT_SHOW_ALL:this._eventBus.dispatch(\"reporttelemetry\",{source:this,details:{type:\"editing\",data:{type:\"highlight\",action:\"toggle_visibility\"}}});(this.#showAllStates||=new Map).set(type,value);this.showAllEditors(\"highlight\",value);break}for(const editor of this.#selectedEditors){editor.updateParams(type,value)}for(const editorType of this.#editorTypes){editorType.updateDefaultParams(type,value)}}showAllEditors(type,visible,updateButton=false){for(const editor of this.#allEditors.values()){if(editor.editorType===type){editor.show(visible)}}const state=this.#showAllStates?.get(AnnotationEditorParamsType.HIGHLIGHT_SHOW_ALL)??true;if(state!==visible){this.#dispatchUpdateUI([[AnnotationEditorParamsType.HIGHLIGHT_SHOW_ALL,visible]])}}enableWaiting(mustWait=false){if(this.#isWaiting===mustWait){return}this.#isWaiting=mustWait;for(const layer of this.#allLayers.values()){if(mustWait){layer.disableClick()}else{layer.enableClick()}layer.div.classList.toggle(\"waiting\",mustWait)}}async#enableAll(){if(!this.#isEnabled){this.#isEnabled=true;const promises=[];for(const layer of this.#allLayers.values()){promises.push(layer.enable())}await Promise.all(promises);for(const editor of this.#allEditors.values()){editor.enable()}}}#disableAll(){this.unselectAll();if(this.#isEnabled){this.#isEnabled=false;for(const layer of this.#allLayers.values()){layer.disable()}for(const editor of this.#allEditors.values()){editor.disable()}}}getEditors(pageIndex){const editors=[];for(const editor of this.#allEditors.values()){if(editor.pageIndex===pageIndex){editors.push(editor)}}return editors}getEditor(id){return this.#allEditors.get(id)}addEditor(editor){this.#allEditors.set(editor.id,editor)}removeEditor(editor){if(editor.div.contains(document.activeElement)){if(this.#focusMainContainerTimeoutId){clearTimeout(this.#focusMainContainerTimeoutId)}this.#focusMainContainerTimeoutId=setTimeout((()=>{this.focusMainContainer();this.#focusMainContainerTimeoutId=null}),0)}this.#allEditors.delete(editor.id);if(editor.annotationElementId){this.#missingCanvases?.delete(editor.annotationElementId)}this.unselect(editor);if(!editor.annotationElementId||!this.#deletedAnnotationsElementIds.has(editor.annotationElementId)){this.#annotationStorage?.remove(editor.id)}}addDeletedAnnotationElement(editor){this.#deletedAnnotationsElementIds.add(editor.annotationElementId);this.addChangedExistingAnnotation(editor);editor.deleted=true}isDeletedAnnotationElement(annotationElementId){return this.#deletedAnnotationsElementIds.has(annotationElementId)}removeDeletedAnnotationElement(editor){this.#deletedAnnotationsElementIds.delete(editor.annotationElementId);this.removeChangedExistingAnnotation(editor);editor.deleted=false}#addEditorToLayer(editor){const layer=this.#allLayers.get(editor.pageIndex);if(layer){layer.addOrRebuild(editor)}else{this.addEditor(editor);this.addToAnnotationStorage(editor)}}setActiveEditor(editor){if(this.#activeEditor===editor){return}this.#activeEditor=editor;if(editor){this.#dispatchUpdateUI(editor.propertiesToUpdate)}}get#lastSelectedEditor(){let ed=null;for(ed of this.#selectedEditors){}return ed}updateUI(editor){if(this.#lastSelectedEditor===editor){this.#dispatchUpdateUI(editor.propertiesToUpdate)}}updateUIForDefaultProperties(editorType){this.#dispatchUpdateUI(editorType.defaultPropertiesToUpdate)}toggleSelected(editor){if(this.#selectedEditors.has(editor)){this.#selectedEditors.delete(editor);editor.unselect();this.#dispatchUpdateStates({hasSelectedEditor:this.hasSelection});return}this.#selectedEditors.add(editor);editor.select();this.#dispatchUpdateUI(editor.propertiesToUpdate);this.#dispatchUpdateStates({hasSelectedEditor:true})}setSelected(editor){this.#currentDrawingSession?.commitOrRemove();for(const ed of this.#selectedEditors){if(ed!==editor){ed.unselect()}}this.#selectedEditors.clear();this.#selectedEditors.add(editor);editor.select();this.#dispatchUpdateUI(editor.propertiesToUpdate);this.#dispatchUpdateStates({hasSelectedEditor:true})}isSelected(editor){return this.#selectedEditors.has(editor)}get firstSelectedEditor(){return this.#selectedEditors.values().next().value}unselect(editor){editor.unselect();this.#selectedEditors.delete(editor);this.#dispatchUpdateStates({hasSelectedEditor:this.hasSelection})}get hasSelection(){return this.#selectedEditors.size!==0}get isEnterHandled(){return this.#selectedEditors.size===1&&this.firstSelectedEditor.isEnterHandled}undo(){this.#commandManager.undo();this.#dispatchUpdateStates({hasSomethingToUndo:this.#commandManager.hasSomethingToUndo(),hasSomethingToRedo:true,isEmpty:this.#isEmpty()});this._editorUndoBar?.hide()}redo(){this.#commandManager.redo();this.#dispatchUpdateStates({hasSomethingToUndo:true,hasSomethingToRedo:this.#commandManager.hasSomethingToRedo(),isEmpty:this.#isEmpty()})}addCommands(params){this.#commandManager.add(params);this.#dispatchUpdateStates({hasSomethingToUndo:true,hasSomethingToRedo:false,isEmpty:this.#isEmpty()})}cleanUndoStack(type){this.#commandManager.cleanType(type)}#isEmpty(){if(this.#allEditors.size===0){return true}if(this.#allEditors.size===1){for(const editor of this.#allEditors.values()){return editor.isEmpty()}}return false}delete(){this.commitOrRemove();const drawingEditor=this.currentLayer?.endDrawingSession(true);if(!this.hasSelection&&!drawingEditor){return}const editors=drawingEditor?[drawingEditor]:[...this.#selectedEditors];const cmd=()=>{this._editorUndoBar?.show(undo,editors.length===1?editors[0].editorType:editors.length);for(const editor of editors){editor.remove()}};const undo=()=>{for(const editor of editors){this.#addEditorToLayer(editor)}};this.addCommands({cmd:cmd,undo:undo,mustExec:true})}commitOrRemove(){this.#activeEditor?.commitOrRemove()}hasSomethingToControl(){return this.#activeEditor||this.hasSelection}#selectEditors(editors){for(const editor of this.#selectedEditors){editor.unselect()}this.#selectedEditors.clear();for(const editor of editors){if(editor.isEmpty()){continue}this.#selectedEditors.add(editor);editor.select()}this.#dispatchUpdateStates({hasSelectedEditor:this.hasSelection})}selectAll(){for(const editor of this.#selectedEditors){editor.commit()}this.#selectEditors(this.#allEditors.values())}unselectAll(){if(this.#activeEditor){this.#activeEditor.commitOrRemove();if(this.#mode!==AnnotationEditorType.NONE){return}}if(this.#currentDrawingSession?.commitOrRemove()){return}if(!this.hasSelection){return}for(const editor of this.#selectedEditors){editor.unselect()}this.#selectedEditors.clear();this.#dispatchUpdateStates({hasSelectedEditor:false})}translateSelectedEditors(x,y,noCommit=false){if(!noCommit){this.commitOrRemove()}if(!this.hasSelection){return}this.#translation[0]+=x;this.#translation[1]+=y;const[totalX,totalY]=this.#translation;const editors=[...this.#selectedEditors];const TIME_TO_WAIT=1e3;if(this.#translationTimeoutId){clearTimeout(this.#translationTimeoutId)}this.#translationTimeoutId=setTimeout((()=>{this.#translationTimeoutId=null;this.#translation[0]=this.#translation[1]=0;this.addCommands({cmd:()=>{for(const editor of editors){if(this.#allEditors.has(editor.id)){editor.translateInPage(totalX,totalY);editor.translationDone()}}},undo:()=>{for(const editor of editors){if(this.#allEditors.has(editor.id)){editor.translateInPage(-totalX,-totalY);editor.translationDone()}}},mustExec:false})}),TIME_TO_WAIT);for(const editor of editors){editor.translateInPage(x,y);editor.translationDone()}}setUpDragSession(){if(!this.hasSelection){return}this.disableUserSelect(true);this.#draggingEditors=new Map;for(const editor of this.#selectedEditors){this.#draggingEditors.set(editor,{savedX:editor.x,savedY:editor.y,savedPageIndex:editor.pageIndex,newX:0,newY:0,newPageIndex:-1})}}endDragSession(){if(!this.#draggingEditors){return false}this.disableUserSelect(false);const map=this.#draggingEditors;this.#draggingEditors=null;let mustBeAddedInUndoStack=false;for(const[{x:x,y:y,pageIndex:pageIndex},value]of map){value.newX=x;value.newY=y;value.newPageIndex=pageIndex;mustBeAddedInUndoStack||=x!==value.savedX||y!==value.savedY||pageIndex!==value.savedPageIndex}if(!mustBeAddedInUndoStack){return false}const move=(editor,x,y,pageIndex)=>{if(this.#allEditors.has(editor.id)){const parent=this.#allLayers.get(pageIndex);if(parent){editor._setParentAndPosition(parent,x,y)}else{editor.pageIndex=pageIndex;editor.x=x;editor.y=y}}};this.addCommands({cmd:()=>{for(const[editor,{newX:newX,newY:newY,newPageIndex:newPageIndex}]of map){move(editor,newX,newY,newPageIndex)}},undo:()=>{for(const[editor,{savedX:savedX,savedY:savedY,savedPageIndex:savedPageIndex}]of map){move(editor,savedX,savedY,savedPageIndex)}},mustExec:true});return true}dragSelectedEditors(tx,ty){if(!this.#draggingEditors){return}for(const editor of this.#draggingEditors.keys()){editor.drag(tx,ty)}}rebuild(editor){if(editor.parent===null){const parent=this.getLayer(editor.pageIndex);if(parent){parent.changeParent(editor);parent.addOrRebuild(editor)}else{this.addEditor(editor);this.addToAnnotationStorage(editor);editor.rebuild()}}else{editor.parent.addOrRebuild(editor)}}get isEditorHandlingKeyboard(){return this.getActive()?.shouldGetKeyboardEvents()||this.#selectedEditors.size===1&&this.firstSelectedEditor.shouldGetKeyboardEvents()}isActive(editor){return this.#activeEditor===editor}getActive(){return this.#activeEditor}getMode(){return this.#mode}get imageManager(){return shadow(this,\"imageManager\",new ImageManager)}getSelectionBoxes(textLayer){if(!textLayer){return null}const selection=document.getSelection();for(let i=0,ii=selection.rangeCount;i<ii;i++){if(!textLayer.contains(selection.getRangeAt(i).commonAncestorContainer)){return null}}const{x:layerX,y:layerY,width:parentWidth,height:parentHeight}=textLayer.getBoundingClientRect();let rotator;switch(textLayer.getAttribute(\"data-main-rotation\")){case\"90\":rotator=(x,y,w,h)=>({x:(y-layerY)/parentHeight,y:1-(x+w-layerX)/parentWidth,width:h/parentHeight,height:w/parentWidth});break;case\"180\":rotator=(x,y,w,h)=>({x:1-(x+w-layerX)/parentWidth,y:1-(y+h-layerY)/parentHeight,width:w/parentWidth,height:h/parentHeight});break;case\"270\":rotator=(x,y,w,h)=>({x:1-(y+h-layerY)/parentHeight,y:(x-layerX)/parentWidth,width:h/parentHeight,height:w/parentWidth});break;default:rotator=(x,y,w,h)=>({x:(x-layerX)/parentWidth,y:(y-layerY)/parentHeight,width:w/parentWidth,height:h/parentHeight});break}const boxes=[];for(let i=0,ii=selection.rangeCount;i<ii;i++){const range=selection.getRangeAt(i);if(range.collapsed){continue}for(const{x:x,y:y,width:width,height:height}of range.getClientRects()){if(width===0||height===0){continue}boxes.push(rotator(x,y,width,height))}}return boxes.length===0?null:boxes}addChangedExistingAnnotation({annotationElementId:annotationElementId,id:id}){(this.#changedExistingAnnotations||=new Map).set(annotationElementId,id)}removeChangedExistingAnnotation({annotationElementId:annotationElementId}){this.#changedExistingAnnotations?.delete(annotationElementId)}renderAnnotationElement(annotation){const editorId=this.#changedExistingAnnotations?.get(annotation.data.id);if(!editorId){return}const editor=this.#annotationStorage.getRawValue(editorId);if(!editor){return}if(this.#mode===AnnotationEditorType.NONE&&!editor.hasBeenModified){return}editor.renderAnnotationElement(annotation)}setMissingCanvas(annotationId,annotationElementId,canvas){const editor=this.#missingCanvases?.get(annotationId);if(!editor){return}editor.setCanvas(annotationElementId,canvas);this.#missingCanvases.delete(annotationId)}addMissingCanvas(annotationId,editor){(this.#missingCanvases||=new Map).set(annotationId,editor)}}class AltText{#altText=null;#altTextDecorative=false;#altTextButton=null;#altTextButtonLabel=null;#altTextTooltip=null;#altTextTooltipTimeout=null;#altTextWasFromKeyBoard=false;#badge=null;#editor=null;#guessedText=null;#textWithDisclaimer=null;#useNewAltTextFlow=false;static#l10nNewButton=null;static _l10n=null;constructor(editor){this.#editor=editor;this.#useNewAltTextFlow=editor._uiManager.useNewAltTextFlow;AltText.#l10nNewButton||=Object.freeze({added:\"pdfjs-editor-new-alt-text-added-button\",\"added-label\":\"pdfjs-editor-new-alt-text-added-button-label\",missing:\"pdfjs-editor-new-alt-text-missing-button\",\"missing-label\":\"pdfjs-editor-new-alt-text-missing-button-label\",review:\"pdfjs-editor-new-alt-text-to-review-button\",\"review-label\":\"pdfjs-editor-new-alt-text-to-review-button-label\"})}static initialize(l10n){AltText._l10n??=l10n}async render(){const altText=this.#altTextButton=document.createElement(\"button\");altText.className=\"altText\";altText.tabIndex=\"0\";const label=this.#altTextButtonLabel=document.createElement(\"span\");altText.append(label);if(this.#useNewAltTextFlow){altText.classList.add(\"new\");altText.setAttribute(\"data-l10n-id\",AltText.#l10nNewButton.missing);label.setAttribute(\"data-l10n-id\",AltText.#l10nNewButton[\"missing-label\"])}else{altText.setAttribute(\"data-l10n-id\",\"pdfjs-editor-alt-text-button\");label.setAttribute(\"data-l10n-id\",\"pdfjs-editor-alt-text-button-label\")}const signal=this.#editor._uiManager._signal;altText.addEventListener(\"contextmenu\",noContextMenu,{signal:signal});altText.addEventListener(\"pointerdown\",(event=>event.stopPropagation()),{signal:signal});const onClick=event=>{event.preventDefault();this.#editor._uiManager.editAltText(this.#editor);if(this.#useNewAltTextFlow){this.#editor._reportTelemetry({action:\"pdfjs.image.alt_text.image_status_label_clicked\",data:{label:this.#label}})}};altText.addEventListener(\"click\",onClick,{capture:true,signal:signal});altText.addEventListener(\"keydown\",(event=>{if(event.target===altText&&event.key===\"Enter\"){this.#altTextWasFromKeyBoard=true;onClick(event)}}),{signal:signal});await this.#setState();return altText}get#label(){return this.#altText&&\"added\"||this.#altText===null&&this.guessedText&&\"review\"||\"missing\"}finish(){if(!this.#altTextButton){return}this.#altTextButton.focus({focusVisible:this.#altTextWasFromKeyBoard});this.#altTextWasFromKeyBoard=false}isEmpty(){if(this.#useNewAltTextFlow){return this.#altText===null}return!this.#altText&&!this.#altTextDecorative}hasData(){if(this.#useNewAltTextFlow){return this.#altText!==null||!!this.#guessedText}return this.isEmpty()}get guessedText(){return this.#guessedText}async setGuessedText(guessedText){if(this.#altText!==null){return}this.#guessedText=guessedText;this.#textWithDisclaimer=await AltText._l10n.get(\"pdfjs-editor-new-alt-text-generated-alt-text-with-disclaimer\",{generatedAltText:guessedText});this.#setState()}toggleAltTextBadge(visibility=false){if(!this.#useNewAltTextFlow||this.#altText){this.#badge?.remove();this.#badge=null;return}if(!this.#badge){const badge=this.#badge=document.createElement(\"div\");badge.className=\"noAltTextBadge\";this.#editor.div.append(badge)}this.#badge.classList.toggle(\"hidden\",!visibility)}serialize(isForCopying){let altText=this.#altText;if(!isForCopying&&this.#guessedText===altText){altText=this.#textWithDisclaimer}return{altText:altText,decorative:this.#altTextDecorative,guessedText:this.#guessedText,textWithDisclaimer:this.#textWithDisclaimer}}get data(){return{altText:this.#altText,decorative:this.#altTextDecorative}}set data({altText:altText,decorative:decorative,guessedText:guessedText,textWithDisclaimer:textWithDisclaimer,cancel:cancel=false}){if(guessedText){this.#guessedText=guessedText;this.#textWithDisclaimer=textWithDisclaimer}if(this.#altText===altText&&this.#altTextDecorative===decorative){return}if(!cancel){this.#altText=altText;this.#altTextDecorative=decorative}this.#setState()}toggle(enabled=false){if(!this.#altTextButton){return}if(!enabled&&this.#altTextTooltipTimeout){clearTimeout(this.#altTextTooltipTimeout);this.#altTextTooltipTimeout=null}this.#altTextButton.disabled=!enabled}shown(){this.#editor._reportTelemetry({action:\"pdfjs.image.alt_text.image_status_label_displayed\",data:{label:this.#label}})}destroy(){this.#altTextButton?.remove();this.#altTextButton=null;this.#altTextButtonLabel=null;this.#altTextTooltip=null;this.#badge?.remove();this.#badge=null}async#setState(){const button=this.#altTextButton;if(!button){return}if(this.#useNewAltTextFlow){button.classList.toggle(\"done\",!!this.#altText);button.setAttribute(\"data-l10n-id\",AltText.#l10nNewButton[this.#label]);this.#altTextButtonLabel?.setAttribute(\"data-l10n-id\",AltText.#l10nNewButton[`${this.#label}-label`]);if(!this.#altText){this.#altTextTooltip?.remove();return}}else{if(!this.#altText&&!this.#altTextDecorative){button.classList.remove(\"done\");this.#altTextTooltip?.remove();return}button.classList.add(\"done\");button.setAttribute(\"data-l10n-id\",\"pdfjs-editor-alt-text-edit-button\")}let tooltip=this.#altTextTooltip;if(!tooltip){this.#altTextTooltip=tooltip=document.createElement(\"span\");tooltip.className=\"tooltip\";tooltip.setAttribute(\"role\",\"tooltip\");tooltip.id=`alt-text-tooltip-${this.#editor.id}`;const DELAY_TO_SHOW_TOOLTIP=100;const signal=this.#editor._uiManager._signal;signal.addEventListener(\"abort\",(()=>{clearTimeout(this.#altTextTooltipTimeout);this.#altTextTooltipTimeout=null}),{once:true});button.addEventListener(\"mouseenter\",(()=>{this.#altTextTooltipTimeout=setTimeout((()=>{this.#altTextTooltipTimeout=null;this.#altTextTooltip.classList.add(\"show\");this.#editor._reportTelemetry({action:\"alt_text_tooltip\"})}),DELAY_TO_SHOW_TOOLTIP)}),{signal:signal});button.addEventListener(\"mouseleave\",(()=>{if(this.#altTextTooltipTimeout){clearTimeout(this.#altTextTooltipTimeout);this.#altTextTooltipTimeout=null}this.#altTextTooltip?.classList.remove(\"show\")}),{signal:signal})}if(this.#altTextDecorative){tooltip.setAttribute(\"data-l10n-id\",\"pdfjs-editor-alt-text-decorative-tooltip\")}else{tooltip.removeAttribute(\"data-l10n-id\");tooltip.textContent=this.#altText}if(!tooltip.parentNode){button.append(tooltip)}const element=this.#editor.getElementForAltText();element?.setAttribute(\"aria-describedby\",tooltip.id)}}class TouchManager{#container;#isPinching=false;#isPinchingStopped=null;#isPinchingDisabled;#onPinchStart;#onPinching;#onPinchEnd;#pointerDownAC=null;#signal;#touchInfo=null;#touchManagerAC;#touchMoveAC=null;constructor({container:container,isPinchingDisabled:isPinchingDisabled=null,isPinchingStopped:isPinchingStopped=null,onPinchStart:onPinchStart=null,onPinching:onPinching=null,onPinchEnd:onPinchEnd=null,signal:signal}){this.#container=container;this.#isPinchingStopped=isPinchingStopped;this.#isPinchingDisabled=isPinchingDisabled;this.#onPinchStart=onPinchStart;this.#onPinching=onPinching;this.#onPinchEnd=onPinchEnd;this.#touchManagerAC=new AbortController;this.#signal=AbortSignal.any([signal,this.#touchManagerAC.signal]);container.addEventListener(\"touchstart\",this.#onTouchStart.bind(this),{passive:false,signal:this.#signal})}get MIN_TOUCH_DISTANCE_TO_PINCH(){return 35/OutputScale.pixelRatio}#onTouchStart(evt){if(this.#isPinchingDisabled?.()){return}if(evt.touches.length===1){if(this.#pointerDownAC){return}const pointerDownAC=this.#pointerDownAC=new AbortController;const signal=AbortSignal.any([this.#signal,pointerDownAC.signal]);const container=this.#container;const opts={capture:true,signal:signal,passive:false};const cancelPointerDown=e=>{if(e.pointerType===\"touch\"){this.#pointerDownAC?.abort();this.#pointerDownAC=null}};container.addEventListener(\"pointerdown\",(e=>{if(e.pointerType===\"touch\"){stopEvent(e);cancelPointerDown(e)}}),opts);container.addEventListener(\"pointerup\",cancelPointerDown,opts);container.addEventListener(\"pointercancel\",cancelPointerDown,opts);return}if(!this.#touchMoveAC){this.#touchMoveAC=new AbortController;const signal=AbortSignal.any([this.#signal,this.#touchMoveAC.signal]);const container=this.#container;const opt={signal:signal,capture:false,passive:false};container.addEventListener(\"touchmove\",this.#onTouchMove.bind(this),opt);const onTouchEnd=this.#onTouchEnd.bind(this);container.addEventListener(\"touchend\",onTouchEnd,opt);container.addEventListener(\"touchcancel\",onTouchEnd,opt);opt.capture=true;container.addEventListener(\"pointerdown\",stopEvent,opt);container.addEventListener(\"pointermove\",stopEvent,opt);container.addEventListener(\"pointercancel\",stopEvent,opt);container.addEventListener(\"pointerup\",stopEvent,opt);this.#onPinchStart?.()}stopEvent(evt);if(evt.touches.length!==2||this.#isPinchingStopped?.()){this.#touchInfo=null;return}let[touch0,touch1]=evt.touches;if(touch0.identifier>touch1.identifier){[touch0,touch1]=[touch1,touch0]}this.#touchInfo={touch0X:touch0.screenX,touch0Y:touch0.screenY,touch1X:touch1.screenX,touch1Y:touch1.screenY}}#onTouchMove(evt){if(!this.#touchInfo||evt.touches.length!==2){return}stopEvent(evt);let[touch0,touch1]=evt.touches;if(touch0.identifier>touch1.identifier){[touch0,touch1]=[touch1,touch0]}const{screenX:screen0X,screenY:screen0Y}=touch0;const{screenX:screen1X,screenY:screen1Y}=touch1;const touchInfo=this.#touchInfo;const{touch0X:pTouch0X,touch0Y:pTouch0Y,touch1X:pTouch1X,touch1Y:pTouch1Y}=touchInfo;const prevGapX=pTouch1X-pTouch0X;const prevGapY=pTouch1Y-pTouch0Y;const currGapX=screen1X-screen0X;const currGapY=screen1Y-screen0Y;const distance=Math.hypot(currGapX,currGapY)||1;const pDistance=Math.hypot(prevGapX,prevGapY)||1;if(!this.#isPinching&&Math.abs(pDistance-distance)<=TouchManager.MIN_TOUCH_DISTANCE_TO_PINCH){return}touchInfo.touch0X=screen0X;touchInfo.touch0Y=screen0Y;touchInfo.touch1X=screen1X;touchInfo.touch1Y=screen1Y;if(!this.#isPinching){this.#isPinching=true;return}const origin=[(screen0X+screen1X)/2,(screen0Y+screen1Y)/2];this.#onPinching?.(origin,pDistance,distance)}#onTouchEnd(evt){if(evt.touches.length>=2){return}if(this.#touchMoveAC){this.#touchMoveAC.abort();this.#touchMoveAC=null;this.#onPinchEnd?.()}if(!this.#touchInfo){return}stopEvent(evt);this.#touchInfo=null;this.#isPinching=false}destroy(){this.#touchManagerAC?.abort();this.#touchManagerAC=null;this.#pointerDownAC?.abort();this.#pointerDownAC=null}}class AnnotationEditor{#accessibilityData=null;#allResizerDivs=null;#altText=null;#disabled=false;#dragPointerId=null;#dragPointerType=\"\";#keepAspectRatio=false;#resizersDiv=null;#lastPointerCoords=null;#savedDimensions=null;#focusAC=null;#focusedResizerName=\"\";#hasBeenClicked=false;#initialRect=null;#isEditing=false;#isInEditMode=false;#isResizerEnabledForKeyboard=false;#moveInDOMTimeout=null;#prevDragX=0;#prevDragY=0;#telemetryTimeouts=null;#touchManager=null;_isCopy=false;_editToolbar=null;_initialOptions=Object.create(null);_initialData=null;_isVisible=true;_uiManager=null;_focusEventsAllowed=true;static _l10n=null;static _l10nResizer=null;#isDraggable=false;#zIndex=AnnotationEditor._zIndex++;static _borderLineWidth=-1;static _colorManager=new ColorManager;static _zIndex=1;static _telemetryTimeout=1e3;static get _resizerKeyboardManager(){const resize=AnnotationEditor.prototype._resizeWithKeyboard;const small=AnnotationEditorUIManager.TRANSLATE_SMALL;const big=AnnotationEditorUIManager.TRANSLATE_BIG;return shadow(this,\"_resizerKeyboardManager\",new KeyboardManager([[[\"ArrowLeft\",\"mac+ArrowLeft\"],resize,{args:[-small,0]}],[[\"ctrl+ArrowLeft\",\"mac+shift+ArrowLeft\"],resize,{args:[-big,0]}],[[\"ArrowRight\",\"mac+ArrowRight\"],resize,{args:[small,0]}],[[\"ctrl+ArrowRight\",\"mac+shift+ArrowRight\"],resize,{args:[big,0]}],[[\"ArrowUp\",\"mac+ArrowUp\"],resize,{args:[0,-small]}],[[\"ctrl+ArrowUp\",\"mac+shift+ArrowUp\"],resize,{args:[0,-big]}],[[\"ArrowDown\",\"mac+ArrowDown\"],resize,{args:[0,small]}],[[\"ctrl+ArrowDown\",\"mac+shift+ArrowDown\"],resize,{args:[0,big]}],[[\"Escape\",\"mac+Escape\"],AnnotationEditor.prototype._stopResizingWithKeyboard]]))}constructor(parameters){this.parent=parameters.parent;this.id=parameters.id;this.width=this.height=null;this.pageIndex=parameters.parent.pageIndex;this.name=parameters.name;this.div=null;this._uiManager=parameters.uiManager;this.annotationElementId=null;this._willKeepAspectRatio=false;this._initialOptions.isCentered=parameters.isCentered;this._structTreeParentId=null;const{rotation:rotation,rawDims:{pageWidth:pageWidth,pageHeight:pageHeight,pageX:pageX,pageY:pageY}}=this.parent.viewport;this.rotation=rotation;this.pageRotation=(360+rotation-this._uiManager.viewParameters.rotation)%360;this.pageDimensions=[pageWidth,pageHeight];this.pageTranslation=[pageX,pageY];const[width,height]=this.parentDimensions;this.x=parameters.x/width;this.y=parameters.y/height;this.isAttachedToDOM=false;this.deleted=false}get editorType(){return Object.getPrototypeOf(this).constructor._type}static get isDrawer(){return false}static get _defaultLineColor(){return shadow(this,\"_defaultLineColor\",this._colorManager.getHexCode(\"CanvasText\"))}static deleteAnnotationElement(editor){const fakeEditor=new FakeEditor({id:editor.parent.getNextId(),parent:editor.parent,uiManager:editor._uiManager});fakeEditor.annotationElementId=editor.annotationElementId;fakeEditor.deleted=true;fakeEditor._uiManager.addToAnnotationStorage(fakeEditor)}static initialize(l10n,_uiManager){AnnotationEditor._l10n??=l10n;AnnotationEditor._l10nResizer||=Object.freeze({topLeft:\"pdfjs-editor-resizer-top-left\",topMiddle:\"pdfjs-editor-resizer-top-middle\",topRight:\"pdfjs-editor-resizer-top-right\",middleRight:\"pdfjs-editor-resizer-middle-right\",bottomRight:\"pdfjs-editor-resizer-bottom-right\",bottomMiddle:\"pdfjs-editor-resizer-bottom-middle\",bottomLeft:\"pdfjs-editor-resizer-bottom-left\",middleLeft:\"pdfjs-editor-resizer-middle-left\"});if(AnnotationEditor._borderLineWidth!==-1){return}const style=getComputedStyle(document.documentElement);AnnotationEditor._borderLineWidth=parseFloat(style.getPropertyValue(\"--outline-width\"))||0}static updateDefaultParams(_type,_value){}static get defaultPropertiesToUpdate(){return[]}static isHandlingMimeForPasting(mime){return false}static paste(item,parent){unreachable(\"Not implemented\")}get propertiesToUpdate(){return[]}get _isDraggable(){return this.#isDraggable}set _isDraggable(value){this.#isDraggable=value;this.div?.classList.toggle(\"draggable\",value)}get isEnterHandled(){return true}center(){const[pageWidth,pageHeight]=this.pageDimensions;switch(this.parentRotation){case 90:this.x-=this.height*pageHeight/(pageWidth*2);this.y+=this.width*pageWidth/(pageHeight*2);break;case 180:this.x+=this.width/2;this.y+=this.height/2;break;case 270:this.x+=this.height*pageHeight/(pageWidth*2);this.y-=this.width*pageWidth/(pageHeight*2);break;default:this.x-=this.width/2;this.y-=this.height/2;break}this.fixAndSetPosition()}addCommands(params){this._uiManager.addCommands(params)}get currentLayer(){return this._uiManager.currentLayer}setInBackground(){this.div.style.zIndex=0}setInForeground(){this.div.style.zIndex=this.#zIndex}setParent(parent){if(parent!==null){this.pageIndex=parent.pageIndex;this.pageDimensions=parent.pageDimensions}else{this.#stopResizing()}this.parent=parent}focusin(event){if(!this._focusEventsAllowed){return}if(!this.#hasBeenClicked){this.parent.setSelected(this)}else{this.#hasBeenClicked=false}}focusout(event){if(!this._focusEventsAllowed){return}if(!this.isAttachedToDOM){return}const target=event.relatedTarget;if(target?.closest(`#${this.id}`)){return}event.preventDefault();if(!this.parent?.isMultipleSelection){this.commitOrRemove()}}commitOrRemove(){if(this.isEmpty()){this.remove()}else{this.commit()}}commit(){this.addToAnnotationStorage()}addToAnnotationStorage(){this._uiManager.addToAnnotationStorage(this)}setAt(x,y,tx,ty){const[width,height]=this.parentDimensions;[tx,ty]=this.screenToPageTranslation(tx,ty);this.x=(x+tx)/width;this.y=(y+ty)/height;this.fixAndSetPosition()}_moveAfterPaste(baseX,baseY){const[parentWidth,parentHeight]=this.parentDimensions;this.setAt(baseX*parentWidth,baseY*parentHeight,this.width*parentWidth,this.height*parentHeight);this._onTranslated()}#translate([width,height],x,y){[x,y]=this.screenToPageTranslation(x,y);this.x+=x/width;this.y+=y/height;this._onTranslating(this.x,this.y);this.fixAndSetPosition()}translate(x,y){this.#translate(this.parentDimensions,x,y)}translateInPage(x,y){this.#initialRect||=[this.x,this.y,this.width,this.height];this.#translate(this.pageDimensions,x,y);this.div.scrollIntoView({block:\"nearest\"})}translationDone(){this._onTranslated(this.x,this.y)}drag(tx,ty){this.#initialRect||=[this.x,this.y,this.width,this.height];const{div:div,parentDimensions:[parentWidth,parentHeight]}=this;this.x+=tx/parentWidth;this.y+=ty/parentHeight;if(this.parent&&(this.x<0||this.x>1||this.y<0||this.y>1)){const{x:x,y:y}=this.div.getBoundingClientRect();if(this.parent.findNewParent(this,x,y)){this.x-=Math.floor(this.x);this.y-=Math.floor(this.y)}}let{x:x,y:y}=this;const[bx,by]=this.getBaseTranslation();x+=bx;y+=by;const{style:style}=div;style.left=`${(100*x).toFixed(2)}%`;style.top=`${(100*y).toFixed(2)}%`;this._onTranslating(x,y);div.scrollIntoView({block:\"nearest\"})}_onTranslating(x,y){}_onTranslated(x,y){}get _hasBeenMoved(){return!!this.#initialRect&&(this.#initialRect[0]!==this.x||this.#initialRect[1]!==this.y)}get _hasBeenResized(){return!!this.#initialRect&&(this.#initialRect[2]!==this.width||this.#initialRect[3]!==this.height)}getBaseTranslation(){const[parentWidth,parentHeight]=this.parentDimensions;const{_borderLineWidth:_borderLineWidth}=AnnotationEditor;const x=_borderLineWidth/parentWidth;const y=_borderLineWidth/parentHeight;switch(this.rotation){case 90:return[-x,y];case 180:return[x,y];case 270:return[x,-y];default:return[-x,-y]}}get _mustFixPosition(){return true}fixAndSetPosition(rotation=this.rotation){const{div:{style:style},pageDimensions:[pageWidth,pageHeight]}=this;let{x:x,y:y,width:width,height:height}=this;width*=pageWidth;height*=pageHeight;x*=pageWidth;y*=pageHeight;if(this._mustFixPosition){switch(rotation){case 0:x=MathClamp(x,0,pageWidth-width);y=MathClamp(y,0,pageHeight-height);break;case 90:x=MathClamp(x,0,pageWidth-height);y=MathClamp(y,width,pageHeight);break;case 180:x=MathClamp(x,width,pageWidth);y=MathClamp(y,height,pageHeight);break;case 270:x=MathClamp(x,height,pageWidth);y=MathClamp(y,0,pageHeight-width);break}}this.x=x/=pageWidth;this.y=y/=pageHeight;const[bx,by]=this.getBaseTranslation();x+=bx;y+=by;style.left=`${(100*x).toFixed(2)}%`;style.top=`${(100*y).toFixed(2)}%`;this.moveInDOM()}static#rotatePoint(x,y,angle){switch(angle){case 90:return[y,-x];case 180:return[-x,-y];case 270:return[-y,x];default:return[x,y]}}screenToPageTranslation(x,y){return AnnotationEditor.#rotatePoint(x,y,this.parentRotation)}pageTranslationToScreen(x,y){return AnnotationEditor.#rotatePoint(x,y,360-this.parentRotation)}#getRotationMatrix(rotation){switch(rotation){case 90:{const[pageWidth,pageHeight]=this.pageDimensions;return[0,-pageWidth/pageHeight,pageHeight/pageWidth,0]}case 180:return[-1,0,0,-1];case 270:{const[pageWidth,pageHeight]=this.pageDimensions;return[0,pageWidth/pageHeight,-pageHeight/pageWidth,0]}default:return[1,0,0,1]}}get parentScale(){return this._uiManager.viewParameters.realScale}get parentRotation(){return(this._uiManager.viewParameters.rotation+this.pageRotation)%360}get parentDimensions(){const{parentScale:parentScale,pageDimensions:[pageWidth,pageHeight]}=this;return[pageWidth*parentScale,pageHeight*parentScale]}setDims(width,height){const[parentWidth,parentHeight]=this.parentDimensions;const{style:style}=this.div;style.width=`${(100*width/parentWidth).toFixed(2)}%`;if(!this.#keepAspectRatio){style.height=`${(100*height/parentHeight).toFixed(2)}%`}}fixDims(){const{style:style}=this.div;const{height:height,width:width}=style;const widthPercent=width.endsWith(\"%\");const heightPercent=!this.#keepAspectRatio&&height.endsWith(\"%\");if(widthPercent&&heightPercent){return}const[parentWidth,parentHeight]=this.parentDimensions;if(!widthPercent){style.width=`${(100*parseFloat(width)/parentWidth).toFixed(2)}%`}if(!this.#keepAspectRatio&&!heightPercent){style.height=`${(100*parseFloat(height)/parentHeight).toFixed(2)}%`}}getInitialTranslation(){return[0,0]}#createResizers(){if(this.#resizersDiv){return}this.#resizersDiv=document.createElement(\"div\");this.#resizersDiv.classList.add(\"resizers\");const classes=this._willKeepAspectRatio?[\"topLeft\",\"topRight\",\"bottomRight\",\"bottomLeft\"]:[\"topLeft\",\"topMiddle\",\"topRight\",\"middleRight\",\"bottomRight\",\"bottomMiddle\",\"bottomLeft\",\"middleLeft\"];const signal=this._uiManager._signal;for(const name of classes){const div=document.createElement(\"div\");this.#resizersDiv.append(div);div.classList.add(\"resizer\",name);div.setAttribute(\"data-resizer-name\",name);div.addEventListener(\"pointerdown\",this.#resizerPointerdown.bind(this,name),{signal:signal});div.addEventListener(\"contextmenu\",noContextMenu,{signal:signal});div.tabIndex=-1}this.div.prepend(this.#resizersDiv)}#resizerPointerdown(name,event){event.preventDefault();const{isMac:isMac}=util_FeatureTest.platform;if(event.button!==0||event.ctrlKey&&isMac){return}this.#altText?.toggle(false);const savedDraggable=this._isDraggable;this._isDraggable=false;this.#lastPointerCoords=[event.screenX,event.screenY];const ac=new AbortController;const signal=this._uiManager.combinedSignal(ac);this.parent.togglePointerEvents(false);window.addEventListener(\"pointermove\",this.#resizerPointermove.bind(this,name),{passive:true,capture:true,signal:signal});window.addEventListener(\"touchmove\",stopEvent,{passive:false,signal:signal});window.addEventListener(\"contextmenu\",noContextMenu,{signal:signal});this.#savedDimensions={savedX:this.x,savedY:this.y,savedWidth:this.width,savedHeight:this.height};const savedParentCursor=this.parent.div.style.cursor;const savedCursor=this.div.style.cursor;this.div.style.cursor=this.parent.div.style.cursor=window.getComputedStyle(event.target).cursor;const pointerUpCallback=()=>{ac.abort();this.parent.togglePointerEvents(true);this.#altText?.toggle(true);this._isDraggable=savedDraggable;this.parent.div.style.cursor=savedParentCursor;this.div.style.cursor=savedCursor;this.#addResizeToUndoStack()};window.addEventListener(\"pointerup\",pointerUpCallback,{signal:signal});window.addEventListener(\"blur\",pointerUpCallback,{signal:signal})}#resize(x,y,width,height){this.width=width;this.height=height;this.x=x;this.y=y;const[parentWidth,parentHeight]=this.parentDimensions;this.setDims(parentWidth*width,parentHeight*height);this.fixAndSetPosition();this._onResized()}_onResized(){}#addResizeToUndoStack(){if(!this.#savedDimensions){return}const{savedX:savedX,savedY:savedY,savedWidth:savedWidth,savedHeight:savedHeight}=this.#savedDimensions;this.#savedDimensions=null;const newX=this.x;const newY=this.y;const newWidth=this.width;const newHeight=this.height;if(newX===savedX&&newY===savedY&&newWidth===savedWidth&&newHeight===savedHeight){return}this.addCommands({cmd:this.#resize.bind(this,newX,newY,newWidth,newHeight),undo:this.#resize.bind(this,savedX,savedY,savedWidth,savedHeight),mustExec:true})}static _round(x){return Math.round(x*1e4)/1e4}#resizerPointermove(name,event){const[parentWidth,parentHeight]=this.parentDimensions;const savedX=this.x;const savedY=this.y;const savedWidth=this.width;const savedHeight=this.height;const minWidth=AnnotationEditor.MIN_SIZE/parentWidth;const minHeight=AnnotationEditor.MIN_SIZE/parentHeight;const rotationMatrix=this.#getRotationMatrix(this.rotation);const transf=(x,y)=>[rotationMatrix[0]*x+rotationMatrix[2]*y,rotationMatrix[1]*x+rotationMatrix[3]*y];const invRotationMatrix=this.#getRotationMatrix(360-this.rotation);const invTransf=(x,y)=>[invRotationMatrix[0]*x+invRotationMatrix[2]*y,invRotationMatrix[1]*x+invRotationMatrix[3]*y];let getPoint;let getOpposite;let isDiagonal=false;let isHorizontal=false;switch(name){case\"topLeft\":isDiagonal=true;getPoint=(w,h)=>[0,0];getOpposite=(w,h)=>[w,h];break;case\"topMiddle\":getPoint=(w,h)=>[w/2,0];getOpposite=(w,h)=>[w/2,h];break;case\"topRight\":isDiagonal=true;getPoint=(w,h)=>[w,0];getOpposite=(w,h)=>[0,h];break;case\"middleRight\":isHorizontal=true;getPoint=(w,h)=>[w,h/2];getOpposite=(w,h)=>[0,h/2];break;case\"bottomRight\":isDiagonal=true;getPoint=(w,h)=>[w,h];getOpposite=(w,h)=>[0,0];break;case\"bottomMiddle\":getPoint=(w,h)=>[w/2,h];getOpposite=(w,h)=>[w/2,0];break;case\"bottomLeft\":isDiagonal=true;getPoint=(w,h)=>[0,h];getOpposite=(w,h)=>[w,0];break;case\"middleLeft\":isHorizontal=true;getPoint=(w,h)=>[0,h/2];getOpposite=(w,h)=>[w,h/2];break}const point=getPoint(savedWidth,savedHeight);const oppositePoint=getOpposite(savedWidth,savedHeight);let transfOppositePoint=transf(...oppositePoint);const oppositeX=AnnotationEditor._round(savedX+transfOppositePoint[0]);const oppositeY=AnnotationEditor._round(savedY+transfOppositePoint[1]);let ratioX=1;let ratioY=1;let deltaX,deltaY;if(!event.fromKeyboard){const{screenX:screenX,screenY:screenY}=event;const[lastScreenX,lastScreenY]=this.#lastPointerCoords;[deltaX,deltaY]=this.screenToPageTranslation(screenX-lastScreenX,screenY-lastScreenY);this.#lastPointerCoords[0]=screenX;this.#lastPointerCoords[1]=screenY}else{({deltaX:deltaX,deltaY:deltaY}=event)}[deltaX,deltaY]=invTransf(deltaX/parentWidth,deltaY/parentHeight);if(isDiagonal){const oldDiag=Math.hypot(savedWidth,savedHeight);ratioX=ratioY=Math.max(Math.min(Math.hypot(oppositePoint[0]-point[0]-deltaX,oppositePoint[1]-point[1]-deltaY)/oldDiag,1/savedWidth,1/savedHeight),minWidth/savedWidth,minHeight/savedHeight)}else if(isHorizontal){ratioX=MathClamp(Math.abs(oppositePoint[0]-point[0]-deltaX),minWidth,1)/savedWidth}else{ratioY=MathClamp(Math.abs(oppositePoint[1]-point[1]-deltaY),minHeight,1)/savedHeight}const newWidth=AnnotationEditor._round(savedWidth*ratioX);const newHeight=AnnotationEditor._round(savedHeight*ratioY);transfOppositePoint=transf(...getOpposite(newWidth,newHeight));const newX=oppositeX-transfOppositePoint[0];const newY=oppositeY-transfOppositePoint[1];this.#initialRect||=[this.x,this.y,this.width,this.height];this.width=newWidth;this.height=newHeight;this.x=newX;this.y=newY;this.setDims(parentWidth*newWidth,parentHeight*newHeight);this.fixAndSetPosition();this._onResizing()}_onResizing(){}altTextFinish(){this.#altText?.finish()}async addEditToolbar(){if(this._editToolbar||this.#isInEditMode){return this._editToolbar}this._editToolbar=new EditorToolbar(this);this.div.append(this._editToolbar.render());if(this.#altText){await this._editToolbar.addAltText(this.#altText)}return this._editToolbar}removeEditToolbar(){if(!this._editToolbar){return}this._editToolbar.remove();this._editToolbar=null;this.#altText?.destroy()}addContainer(container){const editToolbarDiv=this._editToolbar?.div;if(editToolbarDiv){editToolbarDiv.before(container)}else{this.div.append(container)}}getClientDimensions(){return this.div.getBoundingClientRect()}async addAltTextButton(){if(this.#altText){return}AltText.initialize(AnnotationEditor._l10n);this.#altText=new AltText(this);if(this.#accessibilityData){this.#altText.data=this.#accessibilityData;this.#accessibilityData=null}await this.addEditToolbar()}get altTextData(){return this.#altText?.data}set altTextData(data){if(!this.#altText){return}this.#altText.data=data}get guessedAltText(){return this.#altText?.guessedText}async setGuessedAltText(text){await(this.#altText?.setGuessedText(text))}serializeAltText(isForCopying){return this.#altText?.serialize(isForCopying)}hasAltText(){return!!this.#altText&&!this.#altText.isEmpty()}hasAltTextData(){return this.#altText?.hasData()??false}render(){const div=this.div=document.createElement(\"div\");div.setAttribute(\"data-editor-rotation\",(360-this.rotation)%360);div.className=this.name;div.setAttribute(\"id\",this.id);div.tabIndex=this.#disabled?-1:0;div.setAttribute(\"role\",\"application\");if(this.defaultL10nId){div.setAttribute(\"data-l10n-id\",this.defaultL10nId)}if(!this._isVisible){div.classList.add(\"hidden\")}this.setInForeground();this.#addFocusListeners();const[parentWidth,parentHeight]=this.parentDimensions;if(this.parentRotation%180!==0){div.style.maxWidth=`${(100*parentHeight/parentWidth).toFixed(2)}%`;div.style.maxHeight=`${(100*parentWidth/parentHeight).toFixed(2)}%`}const[tx,ty]=this.getInitialTranslation();this.translate(tx,ty);bindEvents(this,div,[\"keydown\",\"pointerdown\"]);if(this.isResizable&&this._uiManager._supportsPinchToZoom){this.#touchManager||=new TouchManager({container:div,isPinchingDisabled:()=>!this.isSelected,onPinchStart:this.#touchPinchStartCallback.bind(this),onPinching:this.#touchPinchCallback.bind(this),onPinchEnd:this.#touchPinchEndCallback.bind(this),signal:this._uiManager._signal})}this._uiManager._editorUndoBar?.hide();return div}#touchPinchStartCallback(){this.#savedDimensions={savedX:this.x,savedY:this.y,savedWidth:this.width,savedHeight:this.height};this.#altText?.toggle(false);this.parent.togglePointerEvents(false)}#touchPinchCallback(_origin,prevDistance,distance){const slowDownFactor=.7;let factor=slowDownFactor*(distance/prevDistance)+1-slowDownFactor;if(factor===1){return}const rotationMatrix=this.#getRotationMatrix(this.rotation);const transf=(x,y)=>[rotationMatrix[0]*x+rotationMatrix[2]*y,rotationMatrix[1]*x+rotationMatrix[3]*y];const[parentWidth,parentHeight]=this.parentDimensions;const savedX=this.x;const savedY=this.y;const savedWidth=this.width;const savedHeight=this.height;const minWidth=AnnotationEditor.MIN_SIZE/parentWidth;const minHeight=AnnotationEditor.MIN_SIZE/parentHeight;factor=Math.max(Math.min(factor,1/savedWidth,1/savedHeight),minWidth/savedWidth,minHeight/savedHeight);const newWidth=AnnotationEditor._round(savedWidth*factor);const newHeight=AnnotationEditor._round(savedHeight*factor);if(newWidth===savedWidth&&newHeight===savedHeight){return}this.#initialRect||=[savedX,savedY,savedWidth,savedHeight];const transfCenterPoint=transf(savedWidth/2,savedHeight/2);const centerX=AnnotationEditor._round(savedX+transfCenterPoint[0]);const centerY=AnnotationEditor._round(savedY+transfCenterPoint[1]);const newTransfCenterPoint=transf(newWidth/2,newHeight/2);this.x=centerX-newTransfCenterPoint[0];this.y=centerY-newTransfCenterPoint[1];this.width=newWidth;this.height=newHeight;this.setDims(parentWidth*newWidth,parentHeight*newHeight);this.fixAndSetPosition();this._onResizing()}#touchPinchEndCallback(){this.#altText?.toggle(true);this.parent.togglePointerEvents(true);this.#addResizeToUndoStack()}pointerdown(event){const{isMac:isMac}=util_FeatureTest.platform;if(event.button!==0||event.ctrlKey&&isMac){event.preventDefault();return}this.#hasBeenClicked=true;if(this._isDraggable){this.#setUpDragSession(event);return}this.#selectOnPointerEvent(event)}get isSelected(){return this._uiManager.isSelected(this)}#selectOnPointerEvent(event){const{isMac:isMac}=util_FeatureTest.platform;if(event.ctrlKey&&!isMac||event.shiftKey||event.metaKey&&isMac){this.parent.toggleSelected(this)}else{this.parent.setSelected(this)}}#setUpDragSession(event){const{isSelected:isSelected}=this;this._uiManager.setUpDragSession();let hasDraggingStarted=false;const ac=new AbortController;const signal=this._uiManager.combinedSignal(ac);const opts={capture:true,passive:false,signal:signal};const cancelDrag=e=>{ac.abort();this.#dragPointerId=null;this.#hasBeenClicked=false;if(!this._uiManager.endDragSession()){this.#selectOnPointerEvent(e)}if(hasDraggingStarted){this._onStopDragging()}};if(isSelected){this.#prevDragX=event.clientX;this.#prevDragY=event.clientY;this.#dragPointerId=event.pointerId;this.#dragPointerType=event.pointerType;window.addEventListener(\"pointermove\",(e=>{if(!hasDraggingStarted){hasDraggingStarted=true;this._onStartDragging()}const{clientX:x,clientY:y,pointerId:pointerId}=e;if(pointerId!==this.#dragPointerId){stopEvent(e);return}const[tx,ty]=this.screenToPageTranslation(x-this.#prevDragX,y-this.#prevDragY);this.#prevDragX=x;this.#prevDragY=y;this._uiManager.dragSelectedEditors(tx,ty)}),opts);window.addEventListener(\"touchmove\",stopEvent,opts);window.addEventListener(\"pointerdown\",(e=>{if(e.pointerType===this.#dragPointerType){if(this.#touchManager||e.isPrimary){cancelDrag(e)}}stopEvent(e)}),opts)}const pointerUpCallback=e=>{if(!this.#dragPointerId||this.#dragPointerId===e.pointerId){cancelDrag(e);return}stopEvent(e)};window.addEventListener(\"pointerup\",pointerUpCallback,{signal:signal});window.addEventListener(\"blur\",pointerUpCallback,{signal:signal})}_onStartDragging(){}_onStopDragging(){}moveInDOM(){if(this.#moveInDOMTimeout){clearTimeout(this.#moveInDOMTimeout)}this.#moveInDOMTimeout=setTimeout((()=>{this.#moveInDOMTimeout=null;this.parent?.moveEditorInDOM(this)}),0)}_setParentAndPosition(parent,x,y){parent.changeParent(this);this.x=x;this.y=y;this.fixAndSetPosition();this._onTranslated()}getRect(tx,ty,rotation=this.rotation){const scale=this.parentScale;const[pageWidth,pageHeight]=this.pageDimensions;const[pageX,pageY]=this.pageTranslation;const shiftX=tx/scale;const shiftY=ty/scale;const x=this.x*pageWidth;const y=this.y*pageHeight;const width=this.width*pageWidth;const height=this.height*pageHeight;switch(rotation){case 0:return[x+shiftX+pageX,pageHeight-y-shiftY-height+pageY,x+shiftX+width+pageX,pageHeight-y-shiftY+pageY];case 90:return[x+shiftY+pageX,pageHeight-y+shiftX+pageY,x+shiftY+height+pageX,pageHeight-y+shiftX+width+pageY];case 180:return[x-shiftX-width+pageX,pageHeight-y+shiftY+pageY,x-shiftX+pageX,pageHeight-y+shiftY+height+pageY];case 270:return[x-shiftY-height+pageX,pageHeight-y-shiftX-width+pageY,x-shiftY+pageX,pageHeight-y-shiftX+pageY];default:throw new Error(\"Invalid rotation\")}}getRectInCurrentCoords(rect,pageHeight){const[x1,y1,x2,y2]=rect;const width=x2-x1;const height=y2-y1;switch(this.rotation){case 0:return[x1,pageHeight-y2,width,height];case 90:return[x1,pageHeight-y1,height,width];case 180:return[x2,pageHeight-y1,width,height];case 270:return[x2,pageHeight-y2,height,width];default:throw new Error(\"Invalid rotation\")}}onceAdded(focus){}isEmpty(){return false}enableEditMode(){this.#isInEditMode=true}disableEditMode(){this.#isInEditMode=false}isInEditMode(){return this.#isInEditMode}shouldGetKeyboardEvents(){return this.#isResizerEnabledForKeyboard}needsToBeRebuilt(){return this.div&&!this.isAttachedToDOM}get isOnScreen(){const{top:top,left:left,bottom:bottom,right:right}=this.getClientDimensions();const{innerHeight:innerHeight,innerWidth:innerWidth}=window;return left<innerWidth&&right>0&&top<innerHeight&&bottom>0}#addFocusListeners(){if(this.#focusAC||!this.div){return}this.#focusAC=new AbortController;const signal=this._uiManager.combinedSignal(this.#focusAC);this.div.addEventListener(\"focusin\",this.focusin.bind(this),{signal:signal});this.div.addEventListener(\"focusout\",this.focusout.bind(this),{signal:signal})}rebuild(){this.#addFocusListeners()}rotate(_angle){}resize(){}serializeDeleted(){return{id:this.annotationElementId,deleted:true,pageIndex:this.pageIndex,popupRef:this._initialData?.popupRef||\"\"}}serialize(isForCopying=false,context=null){unreachable(\"An editor must be serializable\")}static async deserialize(data,parent,uiManager){const editor=new this.prototype.constructor({parent:parent,id:parent.getNextId(),uiManager:uiManager});editor.rotation=data.rotation;editor.#accessibilityData=data.accessibilityData;editor._isCopy=data.isCopy||false;const[pageWidth,pageHeight]=editor.pageDimensions;const[x,y,width,height]=editor.getRectInCurrentCoords(data.rect,pageHeight);editor.x=x/pageWidth;editor.y=y/pageHeight;editor.width=width/pageWidth;editor.height=height/pageHeight;return editor}get hasBeenModified(){return!!this.annotationElementId&&(this.deleted||this.serialize()!==null)}remove(){this.#focusAC?.abort();this.#focusAC=null;if(!this.isEmpty()){this.commit()}if(this.parent){this.parent.remove(this)}else{this._uiManager.removeEditor(this)}if(this.#moveInDOMTimeout){clearTimeout(this.#moveInDOMTimeout);this.#moveInDOMTimeout=null}this.#stopResizing();this.removeEditToolbar();if(this.#telemetryTimeouts){for(const timeout of this.#telemetryTimeouts.values()){clearTimeout(timeout)}this.#telemetryTimeouts=null}this.parent=null;this.#touchManager?.destroy();this.#touchManager=null}get isResizable(){return false}makeResizable(){if(this.isResizable){this.#createResizers();this.#resizersDiv.classList.remove(\"hidden\")}}get toolbarPosition(){return null}keydown(event){if(!this.isResizable||event.target!==this.div||event.key!==\"Enter\"){return}this._uiManager.setSelected(this);this.#savedDimensions={savedX:this.x,savedY:this.y,savedWidth:this.width,savedHeight:this.height};const children=this.#resizersDiv.children;if(!this.#allResizerDivs){this.#allResizerDivs=Array.from(children);const boundResizerKeydown=this.#resizerKeydown.bind(this);const boundResizerBlur=this.#resizerBlur.bind(this);const signal=this._uiManager._signal;for(const div of this.#allResizerDivs){const name=div.getAttribute(\"data-resizer-name\");div.setAttribute(\"role\",\"spinbutton\");div.addEventListener(\"keydown\",boundResizerKeydown,{signal:signal});div.addEventListener(\"blur\",boundResizerBlur,{signal:signal});div.addEventListener(\"focus\",this.#resizerFocus.bind(this,name),{signal:signal});div.setAttribute(\"data-l10n-id\",AnnotationEditor._l10nResizer[name])}}const first=this.#allResizerDivs[0];let firstPosition=0;for(const div of children){if(div===first){break}firstPosition++}const nextFirstPosition=(360-this.rotation+this.parentRotation)%360/90*(this.#allResizerDivs.length/4);if(nextFirstPosition!==firstPosition){if(nextFirstPosition<firstPosition){for(let i=0;i<firstPosition-nextFirstPosition;i++){this.#resizersDiv.append(this.#resizersDiv.firstChild)}}else if(nextFirstPosition>firstPosition){for(let i=0;i<nextFirstPosition-firstPosition;i++){this.#resizersDiv.firstChild.before(this.#resizersDiv.lastChild)}}let i=0;for(const child of children){const div=this.#allResizerDivs[i++];const name=div.getAttribute(\"data-resizer-name\");child.setAttribute(\"data-l10n-id\",AnnotationEditor._l10nResizer[name])}}this.#setResizerTabIndex(0);this.#isResizerEnabledForKeyboard=true;this.#resizersDiv.firstChild.focus({focusVisible:true});event.preventDefault();event.stopImmediatePropagation()}#resizerKeydown(event){AnnotationEditor._resizerKeyboardManager.exec(this,event)}#resizerBlur(event){if(this.#isResizerEnabledForKeyboard&&event.relatedTarget?.parentNode!==this.#resizersDiv){this.#stopResizing()}}#resizerFocus(name){this.#focusedResizerName=this.#isResizerEnabledForKeyboard?name:\"\"}#setResizerTabIndex(value){if(!this.#allResizerDivs){return}for(const div of this.#allResizerDivs){div.tabIndex=value}}_resizeWithKeyboard(x,y){if(!this.#isResizerEnabledForKeyboard){return}this.#resizerPointermove(this.#focusedResizerName,{deltaX:x,deltaY:y,fromKeyboard:true})}#stopResizing(){this.#isResizerEnabledForKeyboard=false;this.#setResizerTabIndex(-1);this.#addResizeToUndoStack()}_stopResizingWithKeyboard(){this.#stopResizing();this.div.focus()}select(){this.makeResizable();this.div?.classList.add(\"selectedEditor\");if(!this._editToolbar){this.addEditToolbar().then((()=>{if(this.div?.classList.contains(\"selectedEditor\")){this._editToolbar?.show()}}));return}this._editToolbar?.show();this.#altText?.toggleAltTextBadge(false)}unselect(){this.#resizersDiv?.classList.add(\"hidden\");this.div?.classList.remove(\"selectedEditor\");if(this.div?.contains(document.activeElement)){this._uiManager.currentLayer.div.focus({preventScroll:true})}this._editToolbar?.hide();this.#altText?.toggleAltTextBadge(true)}updateParams(type,value){}disableEditing(){}enableEditing(){}enterInEditMode(){}getElementForAltText(){return this.div}get contentDiv(){return this.div}get isEditing(){return this.#isEditing}set isEditing(value){this.#isEditing=value;if(!this.parent){return}if(value){this.parent.setSelected(this);this.parent.setActiveEditor(this)}else{this.parent.setActiveEditor(null)}}setAspectRatio(width,height){this.#keepAspectRatio=true;const aspectRatio=width/height;const{style:style}=this.div;style.aspectRatio=aspectRatio;style.height=\"auto\"}static get MIN_SIZE(){return 16}static canCreateNewEmptyEditor(){return true}get telemetryInitialData(){return{action:\"added\"}}get telemetryFinalData(){return null}_reportTelemetry(data,mustWait=false){if(mustWait){this.#telemetryTimeouts||=new Map;const{action:action}=data;let timeout=this.#telemetryTimeouts.get(action);if(timeout){clearTimeout(timeout)}timeout=setTimeout((()=>{this._reportTelemetry(data);this.#telemetryTimeouts.delete(action);if(this.#telemetryTimeouts.size===0){this.#telemetryTimeouts=null}}),AnnotationEditor._telemetryTimeout);this.#telemetryTimeouts.set(action,timeout);return}data.type||=this.editorType;this._uiManager._eventBus.dispatch(\"reporttelemetry\",{source:this,details:{type:\"editing\",data:data}})}show(visible=this._isVisible){this.div.classList.toggle(\"hidden\",!visible);this._isVisible=visible}enable(){if(this.div){this.div.tabIndex=0}this.#disabled=false}disable(){if(this.div){this.div.tabIndex=-1}this.#disabled=true}renderAnnotationElement(annotation){let content=annotation.container.querySelector(\".annotationContent\");if(!content){content=document.createElement(\"div\");content.classList.add(\"annotationContent\",this.editorType);annotation.container.prepend(content)}else if(content.nodeName===\"CANVAS\"){const canvas=content;content=document.createElement(\"div\");content.classList.add(\"annotationContent\",this.editorType);canvas.before(content)}return content}resetAnnotationElement(annotation){const{firstChild:firstChild}=annotation.container;if(firstChild?.nodeName===\"DIV\"&&firstChild.classList.contains(\"annotationContent\")){firstChild.remove()}}}class FakeEditor extends AnnotationEditor{constructor(params){super(params);this.annotationElementId=params.annotationElementId;this.deleted=true}serialize(){return this.serializeDeleted()}}const SEED=3285377520;const MASK_HIGH=4294901760;const MASK_LOW=65535;class MurmurHash3_64{constructor(seed){this.h1=seed?seed&4294967295:SEED;this.h2=seed?seed&4294967295:SEED}update(input){let data,length;if(typeof input===\"string\"){data=new Uint8Array(input.length*2);length=0;for(let i=0,ii=input.length;i<ii;i++){const code=input.charCodeAt(i);if(code<=255){data[length++]=code}else{data[length++]=code>>>8;data[length++]=code&255}}}else if(ArrayBuffer.isView(input)){data=input.slice();length=data.byteLength}else{throw new Error(\"Invalid data format, must be a string or TypedArray.\")}const blockCounts=length>>2;const tailLength=length-blockCounts*4;const dataUint32=new Uint32Array(data.buffer,0,blockCounts);let k1=0,k2=0;let h1=this.h1,h2=this.h2;const C1=3432918353,C2=461845907;const C1_LOW=C1&MASK_LOW,C2_LOW=C2&MASK_LOW;for(let i=0;i<blockCounts;i++){if(i&1){k1=dataUint32[i];k1=k1*C1&MASK_HIGH|k1*C1_LOW&MASK_LOW;k1=k1<<15|k1>>>17;k1=k1*C2&MASK_HIGH|k1*C2_LOW&MASK_LOW;h1^=k1;h1=h1<<13|h1>>>19;h1=h1*5+3864292196}else{k2=dataUint32[i];k2=k2*C1&MASK_HIGH|k2*C1_LOW&MASK_LOW;k2=k2<<15|k2>>>17;k2=k2*C2&MASK_HIGH|k2*C2_LOW&MASK_LOW;h2^=k2;h2=h2<<13|h2>>>19;h2=h2*5+3864292196}}k1=0;switch(tailLength){case 3:k1^=data[blockCounts*4+2]<<16;case 2:k1^=data[blockCounts*4+1]<<8;case 1:k1^=data[blockCounts*4];k1=k1*C1&MASK_HIGH|k1*C1_LOW&MASK_LOW;k1=k1<<15|k1>>>17;k1=k1*C2&MASK_HIGH|k1*C2_LOW&MASK_LOW;if(blockCounts&1){h1^=k1}else{h2^=k1}}this.h1=h1;this.h2=h2}hexdigest(){let h1=this.h1,h2=this.h2;h1^=h2>>>1;h1=h1*3981806797&MASK_HIGH|h1*36045&MASK_LOW;h2=h2*4283543511&MASK_HIGH|((h2<<16|h1>>>16)*2950163797&MASK_HIGH)>>>16;h1^=h2>>>1;h1=h1*444984403&MASK_HIGH|h1*60499&MASK_LOW;h2=h2*3301882366&MASK_HIGH|((h2<<16|h1>>>16)*3120437893&MASK_HIGH)>>>16;h1^=h2>>>1;return(h1>>>0).toString(16).padStart(8,\"0\")+(h2>>>0).toString(16).padStart(8,\"0\")}}const SerializableEmpty=Object.freeze({map:null,hash:\"\",transfer:undefined});class AnnotationStorage{#modified=false;#modifiedIds=null;#storage=new Map;constructor(){this.onSetModified=null;this.onResetModified=null;this.onAnnotationEditor=null}getValue(key,defaultValue){const value=this.#storage.get(key);if(value===undefined){return defaultValue}return Object.assign(defaultValue,value)}getRawValue(key){return this.#storage.get(key)}remove(key){this.#storage.delete(key);if(this.#storage.size===0){this.resetModified()}if(typeof this.onAnnotationEditor===\"function\"){for(const value of this.#storage.values()){if(value instanceof AnnotationEditor){return}}this.onAnnotationEditor(null)}}setValue(key,value){const obj=this.#storage.get(key);let modified=false;if(obj!==undefined){for(const[entry,val]of Object.entries(value)){if(obj[entry]!==val){modified=true;obj[entry]=val}}}else{modified=true;this.#storage.set(key,value)}if(modified){this.#setModified()}if(value instanceof AnnotationEditor&&typeof this.onAnnotationEditor===\"function\"){this.onAnnotationEditor(value.constructor._type)}}has(key){return this.#storage.has(key)}get size(){return this.#storage.size}#setModified(){if(!this.#modified){this.#modified=true;if(typeof this.onSetModified===\"function\"){this.onSetModified()}}}resetModified(){if(this.#modified){this.#modified=false;if(typeof this.onResetModified===\"function\"){this.onResetModified()}}}get print(){return new PrintAnnotationStorage(this)}get serializable(){if(this.#storage.size===0){return SerializableEmpty}const map=new Map,hash=new MurmurHash3_64,transfer=[];const context=Object.create(null);let hasBitmap=false;for(const[key,val]of this.#storage){const serialized=val instanceof AnnotationEditor?val.serialize(false,context):val;if(serialized){map.set(key,serialized);hash.update(`${key}:${JSON.stringify(serialized)}`);hasBitmap||=!!serialized.bitmap}}if(hasBitmap){for(const value of map.values()){if(value.bitmap){transfer.push(value.bitmap)}}}return map.size>0?{map:map,hash:hash.hexdigest(),transfer:transfer}:SerializableEmpty}get editorStats(){let stats=null;const typeToEditor=new Map;for(const value of this.#storage.values()){if(!(value instanceof AnnotationEditor)){continue}const editorStats=value.telemetryFinalData;if(!editorStats){continue}const{type:type}=editorStats;if(!typeToEditor.has(type)){typeToEditor.set(type,Object.getPrototypeOf(value).constructor)}stats||=Object.create(null);const map=stats[type]||=new Map;for(const[key,val]of Object.entries(editorStats)){if(key===\"type\"){continue}let counters=map.get(key);if(!counters){counters=new Map;map.set(key,counters)}const count=counters.get(val)??0;counters.set(val,count+1)}}for(const[type,editor]of typeToEditor){stats[type]=editor.computeTelemetryFinalData(stats[type])}return stats}resetModifiedIds(){this.#modifiedIds=null}get modifiedIds(){if(this.#modifiedIds){return this.#modifiedIds}const ids=[];for(const value of this.#storage.values()){if(!(value instanceof AnnotationEditor)||!value.annotationElementId||!value.serialize()){continue}ids.push(value.annotationElementId)}return this.#modifiedIds={ids:new Set(ids),hash:ids.join(\",\")}}[Symbol.iterator](){return this.#storage.entries()}}class PrintAnnotationStorage extends AnnotationStorage{#serializable;constructor(parent){super();const{map:map,hash:hash,transfer:transfer}=parent.serializable;const clone=structuredClone(map,transfer?{transfer:transfer}:null);this.#serializable={map:clone,hash:hash,transfer:transfer}}get print(){unreachable(\"Should not call PrintAnnotationStorage.print\")}get serializable(){return this.#serializable}get modifiedIds(){return shadow(this,\"modifiedIds\",{ids:new Set,hash:\"\"})}}class FontLoader{#systemFonts=new Set;constructor({ownerDocument:ownerDocument=globalThis.document,styleElement:styleElement=null}){this._document=ownerDocument;this.nativeFontFaces=new Set;this.styleElement=null;this.loadingRequests=[];this.loadTestFontId=0}addNativeFontFace(nativeFontFace){this.nativeFontFaces.add(nativeFontFace);this._document.fonts.add(nativeFontFace)}removeNativeFontFace(nativeFontFace){this.nativeFontFaces.delete(nativeFontFace);this._document.fonts.delete(nativeFontFace)}insertRule(rule){if(!this.styleElement){this.styleElement=this._document.createElement(\"style\");this._document.documentElement.getElementsByTagName(\"head\")[0].append(this.styleElement)}const styleSheet=this.styleElement.sheet;styleSheet.insertRule(rule,styleSheet.cssRules.length)}clear(){for(const nativeFontFace of this.nativeFontFaces){this._document.fonts.delete(nativeFontFace)}this.nativeFontFaces.clear();this.#systemFonts.clear();if(this.styleElement){this.styleElement.remove();this.styleElement=null}}async loadSystemFont({systemFontInfo:info,disableFontFace:disableFontFace,_inspectFont:_inspectFont}){if(!info||this.#systemFonts.has(info.loadedName)){return}assert(!disableFontFace,\"loadSystemFont shouldn't be called when `disableFontFace` is set.\");if(this.isFontLoadingAPISupported){const{loadedName:loadedName,src:src,style:style}=info;const fontFace=new FontFace(loadedName,src,style);this.addNativeFontFace(fontFace);try{await fontFace.load();this.#systemFonts.add(loadedName);_inspectFont?.(info)}catch{warn(`Cannot load system font: ${info.baseFontName}, installing it could help to improve PDF rendering.`);this.removeNativeFontFace(fontFace)}return}unreachable(\"Not implemented: loadSystemFont without the Font Loading API.\")}async bind(font){if(font.attached||font.missingFile&&!font.systemFontInfo){return}font.attached=true;if(font.systemFontInfo){await this.loadSystemFont(font);return}if(this.isFontLoadingAPISupported){const nativeFontFace=font.createNativeFontFace();if(nativeFontFace){this.addNativeFontFace(nativeFontFace);try{await nativeFontFace.loaded}catch(ex){warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);font.disableFontFace=true;throw ex}}return}const rule=font.createFontFaceRule();if(rule){this.insertRule(rule);if(this.isSyncFontLoadingSupported){return}await new Promise((resolve=>{const request=this._queueLoadingCallback(resolve);this._prepareFontLoadEvent(font,request)}))}}get isFontLoadingAPISupported(){const hasFonts=!!this._document?.fonts;return shadow(this,\"isFontLoadingAPISupported\",hasFonts)}get isSyncFontLoadingSupported(){return shadow(this,\"isSyncFontLoadingSupported\",isNodeJS||util_FeatureTest.platform.isFirefox)}_queueLoadingCallback(callback){function completeRequest(){assert(!request.done,\"completeRequest() cannot be called twice.\");request.done=true;while(loadingRequests.length>0&&loadingRequests[0].done){const otherRequest=loadingRequests.shift();setTimeout(otherRequest.callback,0)}}const{loadingRequests:loadingRequests}=this;const request={done:false,complete:completeRequest,callback:callback};loadingRequests.push(request);return request}get _loadTestFont(){const testFont=atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\"+\"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\"+\"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\"+\"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\"+\"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\"+\"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\"+\"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\"+\"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\"+\"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\"+\"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\"+\"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\"+\"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\"+\"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"+\"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"+\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"+\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"+\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\"+\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\"+\"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\"+\"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\"+\"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\"+\"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");return shadow(this,\"_loadTestFont\",testFont)}_prepareFontLoadEvent(font,request){function int32(data,offset){return data.charCodeAt(offset)<<24|data.charCodeAt(offset+1)<<16|data.charCodeAt(offset+2)<<8|data.charCodeAt(offset+3)&255}function spliceString(s,offset,remove,insert){const chunk1=s.substring(0,offset);const chunk2=s.substring(offset+remove);return chunk1+insert+chunk2}let i,ii;const canvas=this._document.createElement(\"canvas\");canvas.width=1;canvas.height=1;const ctx=canvas.getContext(\"2d\");let called=0;function isFontReady(name,callback){if(++called>30){warn(\"Load test font never loaded.\");callback();return}ctx.font=\"30px \"+name;ctx.fillText(\".\",0,20);const imageData=ctx.getImageData(0,0,1,1);if(imageData.data[3]>0){callback();return}setTimeout(isFontReady.bind(null,name,callback))}const loadTestFontId=`lt${Date.now()}${this.loadTestFontId++}`;let data=this._loadTestFont;const COMMENT_OFFSET=976;data=spliceString(data,COMMENT_OFFSET,loadTestFontId.length,loadTestFontId);const CFF_CHECKSUM_OFFSET=16;const XXXX_VALUE=1482184792;let checksum=int32(data,CFF_CHECKSUM_OFFSET);for(i=0,ii=loadTestFontId.length-3;i<ii;i+=4){checksum=checksum-XXXX_VALUE+int32(loadTestFontId,i)|0}if(i<loadTestFontId.length){checksum=checksum-XXXX_VALUE+int32(loadTestFontId+\"XXX\",i)|0}data=spliceString(data,CFF_CHECKSUM_OFFSET,4,string32(checksum));const url=`url(data:font/opentype;base64,${btoa(data)});`;const rule=`@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;this.insertRule(rule);const div=this._document.createElement(\"div\");div.style.visibility=\"hidden\";div.style.width=div.style.height=\"10px\";div.style.position=\"absolute\";div.style.top=div.style.left=\"0px\";for(const name of[font.loadedName,loadTestFontId]){const span=this._document.createElement(\"span\");span.textContent=\"Hi\";span.style.fontFamily=name;div.append(span)}this._document.body.append(div);isFontReady(loadTestFontId,(()=>{div.remove();request.complete()}))}}class FontFaceObject{constructor(translatedData,inspectFont=null){this.compiledGlyphs=Object.create(null);for(const i in translatedData){this[i]=translatedData[i]}this._inspectFont=inspectFont}createNativeFontFace(){if(!this.data||this.disableFontFace){return null}let nativeFontFace;if(!this.cssFontInfo){nativeFontFace=new FontFace(this.loadedName,this.data,{})}else{const css={weight:this.cssFontInfo.fontWeight};if(this.cssFontInfo.italicAngle){css.style=`oblique ${this.cssFontInfo.italicAngle}deg`}nativeFontFace=new FontFace(this.cssFontInfo.fontFamily,this.data,css)}this._inspectFont?.(this);return nativeFontFace}createFontFaceRule(){if(!this.data||this.disableFontFace){return null}const url=`url(data:${this.mimetype};base64,${toBase64Util(this.data)});`;let rule;if(!this.cssFontInfo){rule=`@font-face {font-family:\"${this.loadedName}\";src:${url}}`}else{let css=`font-weight: ${this.cssFontInfo.fontWeight};`;if(this.cssFontInfo.italicAngle){css+=`font-style: oblique ${this.cssFontInfo.italicAngle}deg;`}rule=`@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`}this._inspectFont?.(this,url);return rule}getPathGenerator(objs,character){if(this.compiledGlyphs[character]!==undefined){return this.compiledGlyphs[character]}const objId=this.loadedName+\"_path_\"+character;let cmds;try{cmds=objs.get(objId)}catch(ex){warn(`getPathGenerator - ignoring character: \"${ex}\".`)}const path=new Path2D(cmds||\"\");if(!this.fontExtraProperties){objs.delete(objId)}return this.compiledGlyphs[character]=path}}const CallbackKind={DATA:1,ERROR:2};const StreamKind={CANCEL:1,CANCEL_COMPLETE:2,CLOSE:3,ENQUEUE:4,ERROR:5,PULL:6,PULL_COMPLETE:7,START_COMPLETE:8};function onFn(){}function wrapReason(ex){if(ex instanceof AbortException||ex instanceof InvalidPDFException||ex instanceof PasswordException||ex instanceof ResponseException||ex instanceof UnknownErrorException){return ex}if(!(ex instanceof Error||typeof ex===\"object\"&&ex!==null)){unreachable('wrapReason: Expected \"reason\" to be a (possibly cloned) Error.')}switch(ex.name){case\"AbortException\":return new AbortException(ex.message);case\"InvalidPDFException\":return new InvalidPDFException(ex.message);case\"PasswordException\":return new PasswordException(ex.message,ex.code);case\"ResponseException\":return new ResponseException(ex.message,ex.status,ex.missing);case\"UnknownErrorException\":return new UnknownErrorException(ex.message,ex.details)}return new UnknownErrorException(ex.message,ex.toString())}class MessageHandler{#messageAC=new AbortController;constructor(sourceName,targetName,comObj){this.sourceName=sourceName;this.targetName=targetName;this.comObj=comObj;this.callbackId=1;this.streamId=1;this.streamSinks=Object.create(null);this.streamControllers=Object.create(null);this.callbackCapabilities=Object.create(null);this.actionHandler=Object.create(null);comObj.addEventListener(\"message\",this.#onMessage.bind(this),{signal:this.#messageAC.signal})}#onMessage({data:data}){if(data.targetName!==this.sourceName){return}if(data.stream){this.#processStreamMessage(data);return}if(data.callback){const callbackId=data.callbackId;const capability=this.callbackCapabilities[callbackId];if(!capability){throw new Error(`Cannot resolve callback ${callbackId}`)}delete this.callbackCapabilities[callbackId];if(data.callback===CallbackKind.DATA){capability.resolve(data.data)}else if(data.callback===CallbackKind.ERROR){capability.reject(wrapReason(data.reason))}else{throw new Error(\"Unexpected callback case\")}return}const action=this.actionHandler[data.action];if(!action){throw new Error(`Unknown action from worker: ${data.action}`)}if(data.callbackId){const sourceName=this.sourceName,targetName=data.sourceName,comObj=this.comObj;Promise.try(action,data.data).then((function(result){comObj.postMessage({sourceName:sourceName,targetName:targetName,callback:CallbackKind.DATA,callbackId:data.callbackId,data:result})}),(function(reason){comObj.postMessage({sourceName:sourceName,targetName:targetName,callback:CallbackKind.ERROR,callbackId:data.callbackId,reason:wrapReason(reason)})}));return}if(data.streamId){this.#createStreamSink(data);return}action(data.data)}on(actionName,handler){const ah=this.actionHandler;if(ah[actionName]){throw new Error(`There is already an actionName called \"${actionName}\"`)}ah[actionName]=handler}send(actionName,data,transfers){this.comObj.postMessage({sourceName:this.sourceName,targetName:this.targetName,action:actionName,data:data},transfers)}sendWithPromise(actionName,data,transfers){const callbackId=this.callbackId++;const capability=Promise.withResolvers();this.callbackCapabilities[callbackId]=capability;try{this.comObj.postMessage({sourceName:this.sourceName,targetName:this.targetName,action:actionName,callbackId:callbackId,data:data},transfers)}catch(ex){capability.reject(ex)}return capability.promise}sendWithStream(actionName,data,queueingStrategy,transfers){const streamId=this.streamId++,sourceName=this.sourceName,targetName=this.targetName,comObj=this.comObj;return new ReadableStream({start:controller=>{const startCapability=Promise.withResolvers();this.streamControllers[streamId]={controller:controller,startCall:startCapability,pullCall:null,cancelCall:null,isClosed:false};comObj.postMessage({sourceName:sourceName,targetName:targetName,action:actionName,streamId:streamId,data:data,desiredSize:controller.desiredSize},transfers);return startCapability.promise},pull:controller=>{const pullCapability=Promise.withResolvers();this.streamControllers[streamId].pullCall=pullCapability;comObj.postMessage({sourceName:sourceName,targetName:targetName,stream:StreamKind.PULL,streamId:streamId,desiredSize:controller.desiredSize});return pullCapability.promise},cancel:reason=>{assert(reason instanceof Error,\"cancel must have a valid reason\");const cancelCapability=Promise.withResolvers();this.streamControllers[streamId].cancelCall=cancelCapability;this.streamControllers[streamId].isClosed=true;comObj.postMessage({sourceName:sourceName,targetName:targetName,stream:StreamKind.CANCEL,streamId:streamId,reason:wrapReason(reason)});return cancelCapability.promise}},queueingStrategy)}#createStreamSink(data){const streamId=data.streamId,sourceName=this.sourceName,targetName=data.sourceName,comObj=this.comObj;const self=this,action=this.actionHandler[data.action];const streamSink={enqueue(chunk,size=1,transfers){if(this.isCancelled){return}const lastDesiredSize=this.desiredSize;this.desiredSize-=size;if(lastDesiredSize>0&&this.desiredSize<=0){this.sinkCapability=Promise.withResolvers();this.ready=this.sinkCapability.promise}comObj.postMessage({sourceName:sourceName,targetName:targetName,stream:StreamKind.ENQUEUE,streamId:streamId,chunk:chunk},transfers)},close(){if(this.isCancelled){return}this.isCancelled=true;comObj.postMessage({sourceName:sourceName,targetName:targetName,stream:StreamKind.CLOSE,streamId:streamId});delete self.streamSinks[streamId]},error(reason){assert(reason instanceof Error,\"error must have a valid reason\");if(this.isCancelled){return}this.isCancelled=true;comObj.postMessage({sourceName:sourceName,targetName:targetName,stream:StreamKind.ERROR,streamId:streamId,reason:wrapReason(reason)})},sinkCapability:Promise.withResolvers(),onPull:null,onCancel:null,isCancelled:false,desiredSize:data.desiredSize,ready:null};streamSink.sinkCapability.resolve();streamSink.ready=streamSink.sinkCapability.promise;this.streamSinks[streamId]=streamSink;Promise.try(action,data.data,streamSink).then((function(){comObj.postMessage({sourceName:sourceName,targetName:targetName,stream:StreamKind.START_COMPLETE,streamId:streamId,success:true})}),(function(reason){comObj.postMessage({sourceName:sourceName,targetName:targetName,stream:StreamKind.START_COMPLETE,streamId:streamId,reason:wrapReason(reason)})}))}#processStreamMessage(data){const streamId=data.streamId,sourceName=this.sourceName,targetName=data.sourceName,comObj=this.comObj;const streamController=this.streamControllers[streamId],streamSink=this.streamSinks[streamId];switch(data.stream){case StreamKind.START_COMPLETE:if(data.success){streamController.startCall.resolve()}else{streamController.startCall.reject(wrapReason(data.reason))}break;case StreamKind.PULL_COMPLETE:if(data.success){streamController.pullCall.resolve()}else{streamController.pullCall.reject(wrapReason(data.reason))}break;case StreamKind.PULL:if(!streamSink){comObj.postMessage({sourceName:sourceName,targetName:targetName,stream:StreamKind.PULL_COMPLETE,streamId:streamId,success:true});break}if(streamSink.desiredSize<=0&&data.desiredSize>0){streamSink.sinkCapability.resolve()}streamSink.desiredSize=data.desiredSize;Promise.try(streamSink.onPull||onFn).then((function(){comObj.postMessage({sourceName:sourceName,targetName:targetName,stream:StreamKind.PULL_COMPLETE,streamId:streamId,success:true})}),(function(reason){comObj.postMessage({sourceName:sourceName,targetName:targetName,stream:StreamKind.PULL_COMPLETE,streamId:streamId,reason:wrapReason(reason)})}));break;case StreamKind.ENQUEUE:assert(streamController,\"enqueue should have stream controller\");if(streamController.isClosed){break}streamController.controller.enqueue(data.chunk);break;case StreamKind.CLOSE:assert(streamController,\"close should have stream controller\");if(streamController.isClosed){break}streamController.isClosed=true;streamController.controller.close();this.#deleteStreamController(streamController,streamId);break;case StreamKind.ERROR:assert(streamController,\"error should have stream controller\");streamController.controller.error(wrapReason(data.reason));this.#deleteStreamController(streamController,streamId);break;case StreamKind.CANCEL_COMPLETE:if(data.success){streamController.cancelCall.resolve()}else{streamController.cancelCall.reject(wrapReason(data.reason))}this.#deleteStreamController(streamController,streamId);break;case StreamKind.CANCEL:if(!streamSink){break}const dataReason=wrapReason(data.reason);Promise.try(streamSink.onCancel||onFn,dataReason).then((function(){comObj.postMessage({sourceName:sourceName,targetName:targetName,stream:StreamKind.CANCEL_COMPLETE,streamId:streamId,success:true})}),(function(reason){comObj.postMessage({sourceName:sourceName,targetName:targetName,stream:StreamKind.CANCEL_COMPLETE,streamId:streamId,reason:wrapReason(reason)})}));streamSink.sinkCapability.reject(dataReason);streamSink.isCancelled=true;delete this.streamSinks[streamId];break;default:throw new Error(\"Unexpected stream case\")}}async#deleteStreamController(streamController,streamId){await Promise.allSettled([streamController.startCall?.promise,streamController.pullCall?.promise,streamController.cancelCall?.promise]);delete this.streamControllers[streamId]}destroy(){this.#messageAC?.abort();this.#messageAC=null}}class BaseCanvasFactory{#enableHWA=false;constructor({enableHWA:enableHWA=false}){this.#enableHWA=enableHWA}create(width,height){if(width<=0||height<=0){throw new Error(\"Invalid canvas size\")}const canvas=this._createCanvas(width,height);return{canvas:canvas,context:canvas.getContext(\"2d\",{willReadFrequently:!this.#enableHWA})}}reset(canvasAndContext,width,height){if(!canvasAndContext.canvas){throw new Error(\"Canvas is not specified\")}if(width<=0||height<=0){throw new Error(\"Invalid canvas size\")}canvasAndContext.canvas.width=width;canvasAndContext.canvas.height=height}destroy(canvasAndContext){if(!canvasAndContext.canvas){throw new Error(\"Canvas is not specified\")}canvasAndContext.canvas.width=0;canvasAndContext.canvas.height=0;canvasAndContext.canvas=null;canvasAndContext.context=null}_createCanvas(width,height){unreachable(\"Abstract method `_createCanvas` called.\")}}class DOMCanvasFactory extends BaseCanvasFactory{constructor({ownerDocument:ownerDocument=globalThis.document,enableHWA:enableHWA=false}){super({enableHWA:enableHWA});this._document=ownerDocument}_createCanvas(width,height){const canvas=this._document.createElement(\"canvas\");canvas.width=width;canvas.height=height;return canvas}}class BaseCMapReaderFactory{constructor({baseUrl:baseUrl=null,isCompressed:isCompressed=true}){this.baseUrl=baseUrl;this.isCompressed=isCompressed}async fetch({name:name}){if(!this.baseUrl){throw new Error(\"Ensure that the `cMapUrl` and `cMapPacked` API parameters are provided.\")}if(!name){throw new Error(\"CMap name must be specified.\")}const url=this.baseUrl+name+(this.isCompressed?\".bcmap\":\"\");return this._fetch(url).then((cMapData=>({cMapData:cMapData,isCompressed:this.isCompressed}))).catch((reason=>{throw new Error(`Unable to load ${this.isCompressed?\"binary \":\"\"}CMap at: ${url}`)}))}async _fetch(url){unreachable(\"Abstract method `_fetch` called.\")}}class DOMCMapReaderFactory extends BaseCMapReaderFactory{async _fetch(url){const data=await fetchData(url,this.isCompressed?\"arraybuffer\":\"text\");return data instanceof ArrayBuffer?new Uint8Array(data):stringToBytes(data)}}class BaseFilterFactory{addFilter(maps){return\"none\"}addHCMFilter(fgColor,bgColor){return\"none\"}addAlphaFilter(map){return\"none\"}addLuminosityFilter(map){return\"none\"}addHighlightHCMFilter(filterName,fgColor,bgColor,newFgColor,newBgColor){return\"none\"}destroy(keepHCM=false){}}class DOMFilterFactory extends BaseFilterFactory{#baseUrl;#_cache;#_defs;#docId;#document;#_hcmCache;#id=0;constructor({docId:docId,ownerDocument:ownerDocument=globalThis.document}){super();this.#docId=docId;this.#document=ownerDocument}get#cache(){return this.#_cache||=new Map}get#hcmCache(){return this.#_hcmCache||=new Map}get#defs(){if(!this.#_defs){const div=this.#document.createElement(\"div\");const{style:style}=div;style.visibility=\"hidden\";style.contain=\"strict\";style.width=style.height=0;style.position=\"absolute\";style.top=style.left=0;style.zIndex=-1;const svg=this.#document.createElementNS(SVG_NS,\"svg\");svg.setAttribute(\"width\",0);svg.setAttribute(\"height\",0);this.#_defs=this.#document.createElementNS(SVG_NS,\"defs\");div.append(svg);svg.append(this.#_defs);this.#document.body.append(div)}return this.#_defs}#createTables(maps){if(maps.length===1){const mapR=maps[0];const buffer=new Array(256);for(let i=0;i<256;i++){buffer[i]=mapR[i]/255}const table=buffer.join(\",\");return[table,table,table]}const[mapR,mapG,mapB]=maps;const bufferR=new Array(256);const bufferG=new Array(256);const bufferB=new Array(256);for(let i=0;i<256;i++){bufferR[i]=mapR[i]/255;bufferG[i]=mapG[i]/255;bufferB[i]=mapB[i]/255}return[bufferR.join(\",\"),bufferG.join(\",\"),bufferB.join(\",\")]}#createUrl(id){if(this.#baseUrl===undefined){this.#baseUrl=\"\";const url=this.#document.URL;if(url!==this.#document.baseURI){if(isDataScheme(url)){warn('#createUrl: ignore \"data:\"-URL for performance reasons.')}else{this.#baseUrl=updateUrlHash(url,\"\")}}}return`url(${this.#baseUrl}#${id})`}addFilter(maps){if(!maps){return\"none\"}let value=this.#cache.get(maps);if(value){return value}const[tableR,tableG,tableB]=this.#createTables(maps);const key=maps.length===1?tableR:`${tableR}${tableG}${tableB}`;value=this.#cache.get(key);if(value){this.#cache.set(maps,value);return value}const id=`g_${this.#docId}_transfer_map_${this.#id++}`;const url=this.#createUrl(id);this.#cache.set(maps,url);this.#cache.set(key,url);const filter=this.#createFilter(id);this.#addTransferMapConversion(tableR,tableG,tableB,filter);return url}addHCMFilter(fgColor,bgColor){const key=`${fgColor}-${bgColor}`;const filterName=\"base\";let info=this.#hcmCache.get(filterName);if(info?.key===key){return info.url}if(info){info.filter?.remove();info.key=key;info.url=\"none\";info.filter=null}else{info={key:key,url:\"none\",filter:null};this.#hcmCache.set(filterName,info)}if(!fgColor||!bgColor){return info.url}const fgRGB=this.#getRGB(fgColor);fgColor=Util.makeHexColor(...fgRGB);const bgRGB=this.#getRGB(bgColor);bgColor=Util.makeHexColor(...bgRGB);this.#defs.style.color=\"\";if(fgColor===\"#000000\"&&bgColor===\"#ffffff\"||fgColor===bgColor){return info.url}const map=new Array(256);for(let i=0;i<=255;i++){const x=i/255;map[i]=x<=.03928?x/12.92:((x+.055)/1.055)**2.4}const table=map.join(\",\");const id=`g_${this.#docId}_hcm_filter`;const filter=info.filter=this.#createFilter(id);this.#addTransferMapConversion(table,table,table,filter);this.#addGrayConversion(filter);const getSteps=(c,n)=>{const start=fgRGB[c]/255;const end=bgRGB[c]/255;const arr=new Array(n+1);for(let i=0;i<=n;i++){arr[i]=start+i/n*(end-start)}return arr.join(\",\")};this.#addTransferMapConversion(getSteps(0,5),getSteps(1,5),getSteps(2,5),filter);info.url=this.#createUrl(id);return info.url}addAlphaFilter(map){let value=this.#cache.get(map);if(value){return value}const[tableA]=this.#createTables([map]);const key=`alpha_${tableA}`;value=this.#cache.get(key);if(value){this.#cache.set(map,value);return value}const id=`g_${this.#docId}_alpha_map_${this.#id++}`;const url=this.#createUrl(id);this.#cache.set(map,url);this.#cache.set(key,url);const filter=this.#createFilter(id);this.#addTransferMapAlphaConversion(tableA,filter);return url}addLuminosityFilter(map){let value=this.#cache.get(map||\"luminosity\");if(value){return value}let tableA,key;if(map){[tableA]=this.#createTables([map]);key=`luminosity_${tableA}`}else{key=\"luminosity\"}value=this.#cache.get(key);if(value){this.#cache.set(map,value);return value}const id=`g_${this.#docId}_luminosity_map_${this.#id++}`;const url=this.#createUrl(id);this.#cache.set(map,url);this.#cache.set(key,url);const filter=this.#createFilter(id);this.#addLuminosityConversion(filter);if(map){this.#addTransferMapAlphaConversion(tableA,filter)}return url}addHighlightHCMFilter(filterName,fgColor,bgColor,newFgColor,newBgColor){const key=`${fgColor}-${bgColor}-${newFgColor}-${newBgColor}`;let info=this.#hcmCache.get(filterName);if(info?.key===key){return info.url}if(info){info.filter?.remove();info.key=key;info.url=\"none\";info.filter=null}else{info={key:key,url:\"none\",filter:null};this.#hcmCache.set(filterName,info)}if(!fgColor||!bgColor){return info.url}const[fgRGB,bgRGB]=[fgColor,bgColor].map(this.#getRGB.bind(this));let fgGray=Math.round(.2126*fgRGB[0]+.7152*fgRGB[1]+.0722*fgRGB[2]);let bgGray=Math.round(.2126*bgRGB[0]+.7152*bgRGB[1]+.0722*bgRGB[2]);let[newFgRGB,newBgRGB]=[newFgColor,newBgColor].map(this.#getRGB.bind(this));if(bgGray<fgGray){[fgGray,bgGray,newFgRGB,newBgRGB]=[bgGray,fgGray,newBgRGB,newFgRGB]}this.#defs.style.color=\"\";const getSteps=(fg,bg,n)=>{const arr=new Array(256);const step=(bgGray-fgGray)/n;const newStart=fg/255;const newStep=(bg-fg)/(255*n);let prev=0;for(let i=0;i<=n;i++){const k=Math.round(fgGray+i*step);const value=newStart+i*newStep;for(let j=prev;j<=k;j++){arr[j]=value}prev=k+1}for(let i=prev;i<256;i++){arr[i]=arr[prev-1]}return arr.join(\",\")};const id=`g_${this.#docId}_hcm_${filterName}_filter`;const filter=info.filter=this.#createFilter(id);this.#addGrayConversion(filter);this.#addTransferMapConversion(getSteps(newFgRGB[0],newBgRGB[0],5),getSteps(newFgRGB[1],newBgRGB[1],5),getSteps(newFgRGB[2],newBgRGB[2],5),filter);info.url=this.#createUrl(id);return info.url}destroy(keepHCM=false){if(keepHCM&&this.#_hcmCache?.size){return}this.#_defs?.parentNode.parentNode.remove();this.#_defs=null;this.#_cache?.clear();this.#_cache=null;this.#_hcmCache?.clear();this.#_hcmCache=null;this.#id=0}#addLuminosityConversion(filter){const feColorMatrix=this.#document.createElementNS(SVG_NS,\"feColorMatrix\");feColorMatrix.setAttribute(\"type\",\"matrix\");feColorMatrix.setAttribute(\"values\",\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.3 0.59 0.11 0 0\");filter.append(feColorMatrix)}#addGrayConversion(filter){const feColorMatrix=this.#document.createElementNS(SVG_NS,\"feColorMatrix\");feColorMatrix.setAttribute(\"type\",\"matrix\");feColorMatrix.setAttribute(\"values\",\"0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0 0 0 1 0\");filter.append(feColorMatrix)}#createFilter(id){const filter=this.#document.createElementNS(SVG_NS,\"filter\");filter.setAttribute(\"color-interpolation-filters\",\"sRGB\");filter.setAttribute(\"id\",id);this.#defs.append(filter);return filter}#appendFeFunc(feComponentTransfer,func,table){const feFunc=this.#document.createElementNS(SVG_NS,func);feFunc.setAttribute(\"type\",\"discrete\");feFunc.setAttribute(\"tableValues\",table);feComponentTransfer.append(feFunc)}#addTransferMapConversion(rTable,gTable,bTable,filter){const feComponentTransfer=this.#document.createElementNS(SVG_NS,\"feComponentTransfer\");filter.append(feComponentTransfer);this.#appendFeFunc(feComponentTransfer,\"feFuncR\",rTable);this.#appendFeFunc(feComponentTransfer,\"feFuncG\",gTable);this.#appendFeFunc(feComponentTransfer,\"feFuncB\",bTable)}#addTransferMapAlphaConversion(aTable,filter){const feComponentTransfer=this.#document.createElementNS(SVG_NS,\"feComponentTransfer\");filter.append(feComponentTransfer);this.#appendFeFunc(feComponentTransfer,\"feFuncA\",aTable)}#getRGB(color){this.#defs.style.color=color;return getRGB(getComputedStyle(this.#defs).getPropertyValue(\"color\"))}}class BaseStandardFontDataFactory{constructor({baseUrl:baseUrl=null}){this.baseUrl=baseUrl}async fetch({filename:filename}){if(!this.baseUrl){throw new Error(\"Ensure that the `standardFontDataUrl` API parameter is provided.\")}if(!filename){throw new Error(\"Font filename must be specified.\")}const url=`${this.baseUrl}${filename}`;return this._fetch(url).catch((reason=>{throw new Error(`Unable to load font data at: ${url}`)}))}async _fetch(url){unreachable(\"Abstract method `_fetch` called.\")}}class DOMStandardFontDataFactory extends BaseStandardFontDataFactory{async _fetch(url){const data=await fetchData(url,\"arraybuffer\");return new Uint8Array(data)}}class BaseWasmFactory{constructor({baseUrl:baseUrl=null}){this.baseUrl=baseUrl}async fetch({filename:filename}){if(!this.baseUrl){throw new Error(\"Ensure that the `wasmUrl` API parameter is provided.\")}if(!filename){throw new Error(\"Wasm filename must be specified.\")}const url=`${this.baseUrl}${filename}`;return this._fetch(url).catch((reason=>{throw new Error(`Unable to load wasm data at: ${url}`)}))}async _fetch(url){unreachable(\"Abstract method `_fetch` called.\")}}class DOMWasmFactory extends BaseWasmFactory{async _fetch(url){const data=await fetchData(url,\"arraybuffer\");return new Uint8Array(data)}}if(isNodeJS){warn(\"Please use the `legacy` build in Node.js environments.\")}async function node_utils_fetchData(url){const fs=process.getBuiltinModule(\"fs\");const data=await fs.promises.readFile(url);return new Uint8Array(data)}class NodeFilterFactory extends BaseFilterFactory{}class NodeCanvasFactory extends BaseCanvasFactory{_createCanvas(width,height){const require=process.getBuiltinModule(\"module\").createRequire(import.meta.url);const canvas=require(\"@napi-rs/canvas\");return canvas.createCanvas(width,height)}}class NodeCMapReaderFactory extends BaseCMapReaderFactory{async _fetch(url){return node_utils_fetchData(url)}}class NodeStandardFontDataFactory extends BaseStandardFontDataFactory{async _fetch(url){return node_utils_fetchData(url)}}class NodeWasmFactory extends BaseWasmFactory{async _fetch(url){return node_utils_fetchData(url)}}const PathType={FILL:\"Fill\",STROKE:\"Stroke\",SHADING:\"Shading\"};function applyBoundingBox(ctx,bbox){if(!bbox){return}const width=bbox[2]-bbox[0];const height=bbox[3]-bbox[1];const region=new Path2D;region.rect(bbox[0],bbox[1],width,height);ctx.clip(region)}class BaseShadingPattern{isModifyingCurrentTransform(){return false}getPattern(){unreachable(\"Abstract method `getPattern` called.\")}}class RadialAxialShadingPattern extends BaseShadingPattern{constructor(IR){super();this._type=IR[1];this._bbox=IR[2];this._colorStops=IR[3];this._p0=IR[4];this._p1=IR[5];this._r0=IR[6];this._r1=IR[7];this.matrix=null}_createGradient(ctx){let grad;if(this._type===\"axial\"){grad=ctx.createLinearGradient(this._p0[0],this._p0[1],this._p1[0],this._p1[1])}else if(this._type===\"radial\"){grad=ctx.createRadialGradient(this._p0[0],this._p0[1],this._r0,this._p1[0],this._p1[1],this._r1)}for(const colorStop of this._colorStops){grad.addColorStop(colorStop[0],colorStop[1])}return grad}getPattern(ctx,owner,inverse,pathType){let pattern;if(pathType===PathType.STROKE||pathType===PathType.FILL){const ownerBBox=owner.current.getClippedPathBoundingBox(pathType,getCurrentTransform(ctx))||[0,0,0,0];const width=Math.ceil(ownerBBox[2]-ownerBBox[0])||1;const height=Math.ceil(ownerBBox[3]-ownerBBox[1])||1;const tmpCanvas=owner.cachedCanvases.getCanvas(\"pattern\",width,height);const tmpCtx=tmpCanvas.context;tmpCtx.clearRect(0,0,tmpCtx.canvas.width,tmpCtx.canvas.height);tmpCtx.beginPath();tmpCtx.rect(0,0,tmpCtx.canvas.width,tmpCtx.canvas.height);tmpCtx.translate(-ownerBBox[0],-ownerBBox[1]);inverse=Util.transform(inverse,[1,0,0,1,ownerBBox[0],ownerBBox[1]]);tmpCtx.transform(...owner.baseTransform);if(this.matrix){tmpCtx.transform(...this.matrix)}applyBoundingBox(tmpCtx,this._bbox);tmpCtx.fillStyle=this._createGradient(tmpCtx);tmpCtx.fill();pattern=ctx.createPattern(tmpCanvas.canvas,\"no-repeat\");const domMatrix=new DOMMatrix(inverse);pattern.setTransform(domMatrix)}else{applyBoundingBox(ctx,this._bbox);pattern=this._createGradient(ctx)}return pattern}}function drawTriangle(data,context,p1,p2,p3,c1,c2,c3){const coords=context.coords,colors=context.colors;const bytes=data.data,rowSize=data.width*4;let tmp;if(coords[p1+1]>coords[p2+1]){tmp=p1;p1=p2;p2=tmp;tmp=c1;c1=c2;c2=tmp}if(coords[p2+1]>coords[p3+1]){tmp=p2;p2=p3;p3=tmp;tmp=c2;c2=c3;c3=tmp}if(coords[p1+1]>coords[p2+1]){tmp=p1;p1=p2;p2=tmp;tmp=c1;c1=c2;c2=tmp}const x1=(coords[p1]+context.offsetX)*context.scaleX;const y1=(coords[p1+1]+context.offsetY)*context.scaleY;const x2=(coords[p2]+context.offsetX)*context.scaleX;const y2=(coords[p2+1]+context.offsetY)*context.scaleY;const x3=(coords[p3]+context.offsetX)*context.scaleX;const y3=(coords[p3+1]+context.offsetY)*context.scaleY;if(y1>=y3){return}const c1r=colors[c1],c1g=colors[c1+1],c1b=colors[c1+2];const c2r=colors[c2],c2g=colors[c2+1],c2b=colors[c2+2];const c3r=colors[c3],c3g=colors[c3+1],c3b=colors[c3+2];const minY=Math.round(y1),maxY=Math.round(y3);let xa,car,cag,cab;let xb,cbr,cbg,cbb;for(let y=minY;y<=maxY;y++){if(y<y2){const k=y<y1?0:(y1-y)/(y1-y2);xa=x1-(x1-x2)*k;car=c1r-(c1r-c2r)*k;cag=c1g-(c1g-c2g)*k;cab=c1b-(c1b-c2b)*k}else{let k;if(y>y3){k=1}else if(y2===y3){k=0}else{k=(y2-y)/(y2-y3)}xa=x2-(x2-x3)*k;car=c2r-(c2r-c3r)*k;cag=c2g-(c2g-c3g)*k;cab=c2b-(c2b-c3b)*k}let k;if(y<y1){k=0}else if(y>y3){k=1}else{k=(y1-y)/(y1-y3)}xb=x1-(x1-x3)*k;cbr=c1r-(c1r-c3r)*k;cbg=c1g-(c1g-c3g)*k;cbb=c1b-(c1b-c3b)*k;const x1_=Math.round(Math.min(xa,xb));const x2_=Math.round(Math.max(xa,xb));let j=rowSize*y+x1_*4;for(let x=x1_;x<=x2_;x++){k=(xa-x)/(xa-xb);if(k<0){k=0}else if(k>1){k=1}bytes[j++]=car-(car-cbr)*k|0;bytes[j++]=cag-(cag-cbg)*k|0;bytes[j++]=cab-(cab-cbb)*k|0;bytes[j++]=255}}}function drawFigure(data,figure,context){const ps=figure.coords;const cs=figure.colors;let i,ii;switch(figure.type){case\"lattice\":const verticesPerRow=figure.verticesPerRow;const rows=Math.floor(ps.length/verticesPerRow)-1;const cols=verticesPerRow-1;for(i=0;i<rows;i++){let q=i*verticesPerRow;for(let j=0;j<cols;j++,q++){drawTriangle(data,context,ps[q],ps[q+1],ps[q+verticesPerRow],cs[q],cs[q+1],cs[q+verticesPerRow]);drawTriangle(data,context,ps[q+verticesPerRow+1],ps[q+1],ps[q+verticesPerRow],cs[q+verticesPerRow+1],cs[q+1],cs[q+verticesPerRow])}}break;case\"triangles\":for(i=0,ii=ps.length;i<ii;i+=3){drawTriangle(data,context,ps[i],ps[i+1],ps[i+2],cs[i],cs[i+1],cs[i+2])}break;default:throw new Error(\"illegal figure\")}}class MeshShadingPattern extends BaseShadingPattern{constructor(IR){super();this._coords=IR[2];this._colors=IR[3];this._figures=IR[4];this._bounds=IR[5];this._bbox=IR[6];this._background=IR[7];this.matrix=null}_createMeshCanvas(combinedScale,backgroundColor,cachedCanvases){const EXPECTED_SCALE=1.1;const MAX_PATTERN_SIZE=3e3;const BORDER_SIZE=2;const offsetX=Math.floor(this._bounds[0]);const offsetY=Math.floor(this._bounds[1]);const boundsWidth=Math.ceil(this._bounds[2])-offsetX;const boundsHeight=Math.ceil(this._bounds[3])-offsetY;const width=Math.min(Math.ceil(Math.abs(boundsWidth*combinedScale[0]*EXPECTED_SCALE)),MAX_PATTERN_SIZE);const height=Math.min(Math.ceil(Math.abs(boundsHeight*combinedScale[1]*EXPECTED_SCALE)),MAX_PATTERN_SIZE);const scaleX=boundsWidth/width;const scaleY=boundsHeight/height;const context={coords:this._coords,colors:this._colors,offsetX:-offsetX,offsetY:-offsetY,scaleX:1/scaleX,scaleY:1/scaleY};const paddedWidth=width+BORDER_SIZE*2;const paddedHeight=height+BORDER_SIZE*2;const tmpCanvas=cachedCanvases.getCanvas(\"mesh\",paddedWidth,paddedHeight);const tmpCtx=tmpCanvas.context;const data=tmpCtx.createImageData(width,height);if(backgroundColor){const bytes=data.data;for(let i=0,ii=bytes.length;i<ii;i+=4){bytes[i]=backgroundColor[0];bytes[i+1]=backgroundColor[1];bytes[i+2]=backgroundColor[2];bytes[i+3]=255}}for(const figure of this._figures){drawFigure(data,figure,context)}tmpCtx.putImageData(data,BORDER_SIZE,BORDER_SIZE);const canvas=tmpCanvas.canvas;return{canvas:canvas,offsetX:offsetX-BORDER_SIZE*scaleX,offsetY:offsetY-BORDER_SIZE*scaleY,scaleX:scaleX,scaleY:scaleY}}isModifyingCurrentTransform(){return true}getPattern(ctx,owner,inverse,pathType){applyBoundingBox(ctx,this._bbox);const scale=new Float32Array(2);if(pathType===PathType.SHADING){Util.singularValueDecompose2dScale(getCurrentTransform(ctx),scale)}else if(this.matrix){Util.singularValueDecompose2dScale(this.matrix,scale);const[matrixScaleX,matrixScaleY]=scale;Util.singularValueDecompose2dScale(owner.baseTransform,scale);scale[0]*=matrixScaleX;scale[1]*=matrixScaleY}else{Util.singularValueDecompose2dScale(owner.baseTransform,scale)}const temporaryPatternCanvas=this._createMeshCanvas(scale,pathType===PathType.SHADING?null:this._background,owner.cachedCanvases);if(pathType!==PathType.SHADING){ctx.setTransform(...owner.baseTransform);if(this.matrix){ctx.transform(...this.matrix)}}ctx.translate(temporaryPatternCanvas.offsetX,temporaryPatternCanvas.offsetY);ctx.scale(temporaryPatternCanvas.scaleX,temporaryPatternCanvas.scaleY);return ctx.createPattern(temporaryPatternCanvas.canvas,\"no-repeat\")}}class DummyShadingPattern extends BaseShadingPattern{getPattern(){return\"hotpink\"}}function getShadingPattern(IR){switch(IR[0]){case\"RadialAxial\":return new RadialAxialShadingPattern(IR);case\"Mesh\":return new MeshShadingPattern(IR);case\"Dummy\":return new DummyShadingPattern}throw new Error(`Unknown IR type: ${IR[0]}`)}const PaintType={COLORED:1,UNCOLORED:2};class TilingPattern{static MAX_PATTERN_SIZE=3e3;constructor(IR,ctx,canvasGraphicsFactory,baseTransform){this.color=IR[1];this.operatorList=IR[2];this.matrix=IR[3];this.bbox=IR[4];this.xstep=IR[5];this.ystep=IR[6];this.paintType=IR[7];this.tilingType=IR[8];this.ctx=ctx;this.canvasGraphicsFactory=canvasGraphicsFactory;this.baseTransform=baseTransform}createPatternCanvas(owner){const{bbox:bbox,operatorList:operatorList,paintType:paintType,tilingType:tilingType,color:color,canvasGraphicsFactory:canvasGraphicsFactory}=this;let{xstep:xstep,ystep:ystep}=this;xstep=Math.abs(xstep);ystep=Math.abs(ystep);info(\"TilingType: \"+tilingType);const x0=bbox[0],y0=bbox[1],x1=bbox[2],y1=bbox[3];const width=x1-x0;const height=y1-y0;const scale=new Float32Array(2);Util.singularValueDecompose2dScale(this.matrix,scale);const[matrixScaleX,matrixScaleY]=scale;Util.singularValueDecompose2dScale(this.baseTransform,scale);const combinedScaleX=matrixScaleX*scale[0];const combinedScaleY=matrixScaleY*scale[1];let canvasWidth=width,canvasHeight=height,redrawHorizontally=false,redrawVertically=false;const xScaledStep=Math.ceil(xstep*combinedScaleX);const yScaledStep=Math.ceil(ystep*combinedScaleY);const xScaledWidth=Math.ceil(width*combinedScaleX);const yScaledHeight=Math.ceil(height*combinedScaleY);if(xScaledStep>=xScaledWidth){canvasWidth=xstep}else{redrawHorizontally=true}if(yScaledStep>=yScaledHeight){canvasHeight=ystep}else{redrawVertically=true}const dimx=this.getSizeAndScale(canvasWidth,this.ctx.canvas.width,combinedScaleX);const dimy=this.getSizeAndScale(canvasHeight,this.ctx.canvas.height,combinedScaleY);const tmpCanvas=owner.cachedCanvases.getCanvas(\"pattern\",dimx.size,dimy.size);const tmpCtx=tmpCanvas.context;const graphics=canvasGraphicsFactory.createCanvasGraphics(tmpCtx);graphics.groupLevel=owner.groupLevel;this.setFillAndStrokeStyleToContext(graphics,paintType,color);tmpCtx.translate(-dimx.scale*x0,-dimy.scale*y0);graphics.transform(dimx.scale,0,0,dimy.scale,0,0);tmpCtx.save();this.clipBbox(graphics,x0,y0,x1,y1);graphics.baseTransform=getCurrentTransform(graphics.ctx);graphics.executeOperatorList(operatorList);graphics.endDrawing();tmpCtx.restore();if(redrawHorizontally||redrawVertically){const image=tmpCanvas.canvas;if(redrawHorizontally){canvasWidth=xstep}if(redrawVertically){canvasHeight=ystep}const dimx2=this.getSizeAndScale(canvasWidth,this.ctx.canvas.width,combinedScaleX);const dimy2=this.getSizeAndScale(canvasHeight,this.ctx.canvas.height,combinedScaleY);const xSize=dimx2.size;const ySize=dimy2.size;const tmpCanvas2=owner.cachedCanvases.getCanvas(\"pattern-workaround\",xSize,ySize);const tmpCtx2=tmpCanvas2.context;const ii=redrawHorizontally?Math.floor(width/xstep):0;const jj=redrawVertically?Math.floor(height/ystep):0;for(let i=0;i<=ii;i++){for(let j=0;j<=jj;j++){tmpCtx2.drawImage(image,xSize*i,ySize*j,xSize,ySize,0,0,xSize,ySize)}}return{canvas:tmpCanvas2.canvas,scaleX:dimx2.scale,scaleY:dimy2.scale,offsetX:x0,offsetY:y0}}return{canvas:tmpCanvas.canvas,scaleX:dimx.scale,scaleY:dimy.scale,offsetX:x0,offsetY:y0}}getSizeAndScale(step,realOutputSize,scale){const maxSize=Math.max(TilingPattern.MAX_PATTERN_SIZE,realOutputSize);let size=Math.ceil(step*scale);if(size>=maxSize){size=maxSize}else{scale=size/step}return{scale:scale,size:size}}clipBbox(graphics,x0,y0,x1,y1){const bboxWidth=x1-x0;const bboxHeight=y1-y0;graphics.ctx.rect(x0,y0,bboxWidth,bboxHeight);Util.axialAlignedBoundingBox([x0,y0,x1,y1],getCurrentTransform(graphics.ctx),graphics.current.minMax);graphics.clip();graphics.endPath()}setFillAndStrokeStyleToContext(graphics,paintType,color){const context=graphics.ctx,current=graphics.current;switch(paintType){case PaintType.COLORED:const ctx=this.ctx;context.fillStyle=ctx.fillStyle;context.strokeStyle=ctx.strokeStyle;current.fillColor=ctx.fillStyle;current.strokeColor=ctx.strokeStyle;break;case PaintType.UNCOLORED:const cssColor=Util.makeHexColor(color[0],color[1],color[2]);context.fillStyle=cssColor;context.strokeStyle=cssColor;current.fillColor=cssColor;current.strokeColor=cssColor;break;default:throw new FormatError(`Unsupported paint type: ${paintType}`)}}isModifyingCurrentTransform(){return false}getPattern(ctx,owner,inverse,pathType){let matrix=inverse;if(pathType!==PathType.SHADING){matrix=Util.transform(matrix,owner.baseTransform);if(this.matrix){matrix=Util.transform(matrix,this.matrix)}}const temporaryPatternCanvas=this.createPatternCanvas(owner);let domMatrix=new DOMMatrix(matrix);domMatrix=domMatrix.translate(temporaryPatternCanvas.offsetX,temporaryPatternCanvas.offsetY);domMatrix=domMatrix.scale(1/temporaryPatternCanvas.scaleX,1/temporaryPatternCanvas.scaleY);const pattern=ctx.createPattern(temporaryPatternCanvas.canvas,\"repeat\");pattern.setTransform(domMatrix);return pattern}}function convertToRGBA(params){switch(params.kind){case ImageKind.GRAYSCALE_1BPP:return convertBlackAndWhiteToRGBA(params);case ImageKind.RGB_24BPP:return convertRGBToRGBA(params)}return null}function convertBlackAndWhiteToRGBA({src:src,srcPos:srcPos=0,dest:dest,width:width,height:height,nonBlackColor:nonBlackColor=4294967295,inverseDecode:inverseDecode=false}){const black=util_FeatureTest.isLittleEndian?4278190080:255;const[zeroMapping,oneMapping]=inverseDecode?[nonBlackColor,black]:[black,nonBlackColor];const widthInSource=width>>3;const widthRemainder=width&7;const srcLength=src.length;dest=new Uint32Array(dest.buffer);let destPos=0;for(let i=0;i<height;i++){for(const max=srcPos+widthInSource;srcPos<max;srcPos++){const elem=srcPos<srcLength?src[srcPos]:255;dest[destPos++]=elem&128?oneMapping:zeroMapping;dest[destPos++]=elem&64?oneMapping:zeroMapping;dest[destPos++]=elem&32?oneMapping:zeroMapping;dest[destPos++]=elem&16?oneMapping:zeroMapping;dest[destPos++]=elem&8?oneMapping:zeroMapping;dest[destPos++]=elem&4?oneMapping:zeroMapping;dest[destPos++]=elem&2?oneMapping:zeroMapping;dest[destPos++]=elem&1?oneMapping:zeroMapping}if(widthRemainder===0){continue}const elem=srcPos<srcLength?src[srcPos++]:255;for(let j=0;j<widthRemainder;j++){dest[destPos++]=elem&1<<7-j?oneMapping:zeroMapping}}return{srcPos:srcPos,destPos:destPos}}function convertRGBToRGBA({src:src,srcPos:srcPos=0,dest:dest,destPos:destPos=0,width:width,height:height}){let i=0;const len=width*height*3;const len32=len>>2;const src32=new Uint32Array(src.buffer,srcPos,len32);if(FeatureTest.isLittleEndian){for(;i<len32-2;i+=3,destPos+=4){const s1=src32[i];const s2=src32[i+1];const s3=src32[i+2];dest[destPos]=s1|4278190080;dest[destPos+1]=s1>>>24|s2<<8|4278190080;dest[destPos+2]=s2>>>16|s3<<16|4278190080;dest[destPos+3]=s3>>>8|4278190080}for(let j=i*4,jj=srcPos+len;j<jj;j+=3){dest[destPos++]=src[j]|src[j+1]<<8|src[j+2]<<16|4278190080}}else{for(;i<len32-2;i+=3,destPos+=4){const s1=src32[i];const s2=src32[i+1];const s3=src32[i+2];dest[destPos]=s1|255;dest[destPos+1]=s1<<24|s2>>>8|255;dest[destPos+2]=s2<<16|s3>>>16|255;dest[destPos+3]=s3<<8|255}for(let j=i*4,jj=srcPos+len;j<jj;j+=3){dest[destPos++]=src[j]<<24|src[j+1]<<16|src[j+2]<<8|255}}return{srcPos:srcPos+len,destPos:destPos}}function grayToRGBA(src,dest){if(FeatureTest.isLittleEndian){for(let i=0,ii=src.length;i<ii;i++){dest[i]=src[i]*65793|4278190080}}else{for(let i=0,ii=src.length;i<ii;i++){dest[i]=src[i]*16843008|255}}}const MIN_FONT_SIZE=16;const MAX_FONT_SIZE=100;const EXECUTION_TIME=15;const EXECUTION_STEPS=10;const FULL_CHUNK_HEIGHT=16;const SCALE_MATRIX=new DOMMatrix;const XY=new Float32Array(2);const MIN_MAX_INIT=new Float32Array([Infinity,Infinity,-Infinity,-Infinity]);function mirrorContextOperations(ctx,destCtx){if(ctx._removeMirroring){throw new Error(\"Context is already forwarding operations.\")}ctx.__originalSave=ctx.save;ctx.__originalRestore=ctx.restore;ctx.__originalRotate=ctx.rotate;ctx.__originalScale=ctx.scale;ctx.__originalTranslate=ctx.translate;ctx.__originalTransform=ctx.transform;ctx.__originalSetTransform=ctx.setTransform;ctx.__originalResetTransform=ctx.resetTransform;ctx.__originalClip=ctx.clip;ctx.__originalMoveTo=ctx.moveTo;ctx.__originalLineTo=ctx.lineTo;ctx.__originalBezierCurveTo=ctx.bezierCurveTo;ctx.__originalRect=ctx.rect;ctx.__originalClosePath=ctx.closePath;ctx.__originalBeginPath=ctx.beginPath;ctx._removeMirroring=()=>{ctx.save=ctx.__originalSave;ctx.restore=ctx.__originalRestore;ctx.rotate=ctx.__originalRotate;ctx.scale=ctx.__originalScale;ctx.translate=ctx.__originalTranslate;ctx.transform=ctx.__originalTransform;ctx.setTransform=ctx.__originalSetTransform;ctx.resetTransform=ctx.__originalResetTransform;ctx.clip=ctx.__originalClip;ctx.moveTo=ctx.__originalMoveTo;ctx.lineTo=ctx.__originalLineTo;ctx.bezierCurveTo=ctx.__originalBezierCurveTo;ctx.rect=ctx.__originalRect;ctx.closePath=ctx.__originalClosePath;ctx.beginPath=ctx.__originalBeginPath;delete ctx._removeMirroring};ctx.save=function(){destCtx.save();this.__originalSave()};ctx.restore=function(){destCtx.restore();this.__originalRestore()};ctx.translate=function(x,y){destCtx.translate(x,y);this.__originalTranslate(x,y)};ctx.scale=function(x,y){destCtx.scale(x,y);this.__originalScale(x,y)};ctx.transform=function(a,b,c,d,e,f){destCtx.transform(a,b,c,d,e,f);this.__originalTransform(a,b,c,d,e,f)};ctx.setTransform=function(a,b,c,d,e,f){destCtx.setTransform(a,b,c,d,e,f);this.__originalSetTransform(a,b,c,d,e,f)};ctx.resetTransform=function(){destCtx.resetTransform();this.__originalResetTransform()};ctx.rotate=function(angle){destCtx.rotate(angle);this.__originalRotate(angle)};ctx.clip=function(rule){destCtx.clip(rule);this.__originalClip(rule)};ctx.moveTo=function(x,y){destCtx.moveTo(x,y);this.__originalMoveTo(x,y)};ctx.lineTo=function(x,y){destCtx.lineTo(x,y);this.__originalLineTo(x,y)};ctx.bezierCurveTo=function(cp1x,cp1y,cp2x,cp2y,x,y){destCtx.bezierCurveTo(cp1x,cp1y,cp2x,cp2y,x,y);this.__originalBezierCurveTo(cp1x,cp1y,cp2x,cp2y,x,y)};ctx.rect=function(x,y,width,height){destCtx.rect(x,y,width,height);this.__originalRect(x,y,width,height)};ctx.closePath=function(){destCtx.closePath();this.__originalClosePath()};ctx.beginPath=function(){destCtx.beginPath();this.__originalBeginPath()}}class CachedCanvases{constructor(canvasFactory){this.canvasFactory=canvasFactory;this.cache=Object.create(null)}getCanvas(id,width,height){let canvasEntry;if(this.cache[id]!==undefined){canvasEntry=this.cache[id];this.canvasFactory.reset(canvasEntry,width,height)}else{canvasEntry=this.canvasFactory.create(width,height);this.cache[id]=canvasEntry}return canvasEntry}delete(id){delete this.cache[id]}clear(){for(const id in this.cache){const canvasEntry=this.cache[id];this.canvasFactory.destroy(canvasEntry);delete this.cache[id]}}}function drawImageAtIntegerCoords(ctx,srcImg,srcX,srcY,srcW,srcH,destX,destY,destW,destH){const[a,b,c,d,tx,ty]=getCurrentTransform(ctx);if(b===0&&c===0){const tlX=destX*a+tx;const rTlX=Math.round(tlX);const tlY=destY*d+ty;const rTlY=Math.round(tlY);const brX=(destX+destW)*a+tx;const rWidth=Math.abs(Math.round(brX)-rTlX)||1;const brY=(destY+destH)*d+ty;const rHeight=Math.abs(Math.round(brY)-rTlY)||1;ctx.setTransform(Math.sign(a),0,0,Math.sign(d),rTlX,rTlY);ctx.drawImage(srcImg,srcX,srcY,srcW,srcH,0,0,rWidth,rHeight);ctx.setTransform(a,b,c,d,tx,ty);return[rWidth,rHeight]}if(a===0&&d===0){const tlX=destY*c+tx;const rTlX=Math.round(tlX);const tlY=destX*b+ty;const rTlY=Math.round(tlY);const brX=(destY+destH)*c+tx;const rWidth=Math.abs(Math.round(brX)-rTlX)||1;const brY=(destX+destW)*b+ty;const rHeight=Math.abs(Math.round(brY)-rTlY)||1;ctx.setTransform(0,Math.sign(b),Math.sign(c),0,rTlX,rTlY);ctx.drawImage(srcImg,srcX,srcY,srcW,srcH,0,0,rHeight,rWidth);ctx.setTransform(a,b,c,d,tx,ty);return[rHeight,rWidth]}ctx.drawImage(srcImg,srcX,srcY,srcW,srcH,destX,destY,destW,destH);const scaleX=Math.hypot(a,b);const scaleY=Math.hypot(c,d);return[scaleX*destW,scaleY*destH]}class CanvasExtraState{alphaIsShape=false;fontSize=0;fontSizeScale=1;textMatrix=null;textMatrixScale=1;fontMatrix=FONT_IDENTITY_MATRIX;leading=0;x=0;y=0;lineX=0;lineY=0;charSpacing=0;wordSpacing=0;textHScale=1;textRenderingMode=TextRenderingMode.FILL;textRise=0;fillColor=\"#000000\";strokeColor=\"#000000\";patternFill=false;patternStroke=false;fillAlpha=1;strokeAlpha=1;lineWidth=1;activeSMask=null;transferMaps=\"none\";constructor(width,height){this.clipBox=new Float32Array([0,0,width,height]);this.minMax=MIN_MAX_INIT.slice()}clone(){const clone=Object.create(this);clone.clipBox=this.clipBox.slice();clone.minMax=this.minMax.slice();return clone}getPathBoundingBox(pathType=PathType.FILL,transform=null){const box=this.minMax.slice();if(pathType===PathType.STROKE){if(!transform){unreachable(\"Stroke bounding box must include transform.\")}Util.singularValueDecompose2dScale(transform,XY);const xStrokePad=XY[0]*this.lineWidth/2;const yStrokePad=XY[1]*this.lineWidth/2;box[0]-=xStrokePad;box[1]-=yStrokePad;box[2]+=xStrokePad;box[3]+=yStrokePad}return box}updateClipFromPath(){const intersect=Util.intersect(this.clipBox,this.getPathBoundingBox());this.startNewPathAndClipBox(intersect||[0,0,0,0])}isEmptyClip(){return this.minMax[0]===Infinity}startNewPathAndClipBox(box){this.clipBox.set(box,0);this.minMax.set(MIN_MAX_INIT,0)}getClippedPathBoundingBox(pathType=PathType.FILL,transform=null){return Util.intersect(this.clipBox,this.getPathBoundingBox(pathType,transform))}}function putBinaryImageData(ctx,imgData){if(imgData instanceof ImageData){ctx.putImageData(imgData,0,0);return}const height=imgData.height,width=imgData.width;const partialChunkHeight=height%FULL_CHUNK_HEIGHT;const fullChunks=(height-partialChunkHeight)/FULL_CHUNK_HEIGHT;const totalChunks=partialChunkHeight===0?fullChunks:fullChunks+1;const chunkImgData=ctx.createImageData(width,FULL_CHUNK_HEIGHT);let srcPos=0,destPos;const src=imgData.data;const dest=chunkImgData.data;let i,j,thisChunkHeight,elemsInThisChunk;if(imgData.kind===util_ImageKind.GRAYSCALE_1BPP){const srcLength=src.byteLength;const dest32=new Uint32Array(dest.buffer,0,dest.byteLength>>2);const dest32DataLength=dest32.length;const fullSrcDiff=width+7>>3;const white=4294967295;const black=util_FeatureTest.isLittleEndian?4278190080:255;for(i=0;i<totalChunks;i++){thisChunkHeight=i<fullChunks?FULL_CHUNK_HEIGHT:partialChunkHeight;destPos=0;for(j=0;j<thisChunkHeight;j++){const srcDiff=srcLength-srcPos;let k=0;const kEnd=srcDiff>fullSrcDiff?width:srcDiff*8-7;const kEndUnrolled=kEnd&~7;let mask=0;let srcByte=0;for(;k<kEndUnrolled;k+=8){srcByte=src[srcPos++];dest32[destPos++]=srcByte&128?white:black;dest32[destPos++]=srcByte&64?white:black;dest32[destPos++]=srcByte&32?white:black;dest32[destPos++]=srcByte&16?white:black;dest32[destPos++]=srcByte&8?white:black;dest32[destPos++]=srcByte&4?white:black;dest32[destPos++]=srcByte&2?white:black;dest32[destPos++]=srcByte&1?white:black}for(;k<kEnd;k++){if(mask===0){srcByte=src[srcPos++];mask=128}dest32[destPos++]=srcByte&mask?white:black;mask>>=1}}while(destPos<dest32DataLength){dest32[destPos++]=0}ctx.putImageData(chunkImgData,0,i*FULL_CHUNK_HEIGHT)}}else if(imgData.kind===util_ImageKind.RGBA_32BPP){j=0;elemsInThisChunk=width*FULL_CHUNK_HEIGHT*4;for(i=0;i<fullChunks;i++){dest.set(src.subarray(srcPos,srcPos+elemsInThisChunk));srcPos+=elemsInThisChunk;ctx.putImageData(chunkImgData,0,j);j+=FULL_CHUNK_HEIGHT}if(i<totalChunks){elemsInThisChunk=width*partialChunkHeight*4;dest.set(src.subarray(srcPos,srcPos+elemsInThisChunk));ctx.putImageData(chunkImgData,0,j)}}else if(imgData.kind===util_ImageKind.RGB_24BPP){thisChunkHeight=FULL_CHUNK_HEIGHT;elemsInThisChunk=width*thisChunkHeight;for(i=0;i<totalChunks;i++){if(i>=fullChunks){thisChunkHeight=partialChunkHeight;elemsInThisChunk=width*thisChunkHeight}destPos=0;for(j=elemsInThisChunk;j--;){dest[destPos++]=src[srcPos++];dest[destPos++]=src[srcPos++];dest[destPos++]=src[srcPos++];dest[destPos++]=255}ctx.putImageData(chunkImgData,0,i*FULL_CHUNK_HEIGHT)}}else{throw new Error(`bad image kind: ${imgData.kind}`)}}function putBinaryImageMask(ctx,imgData){if(imgData.bitmap){ctx.drawImage(imgData.bitmap,0,0);return}const height=imgData.height,width=imgData.width;const partialChunkHeight=height%FULL_CHUNK_HEIGHT;const fullChunks=(height-partialChunkHeight)/FULL_CHUNK_HEIGHT;const totalChunks=partialChunkHeight===0?fullChunks:fullChunks+1;const chunkImgData=ctx.createImageData(width,FULL_CHUNK_HEIGHT);let srcPos=0;const src=imgData.data;const dest=chunkImgData.data;for(let i=0;i<totalChunks;i++){const thisChunkHeight=i<fullChunks?FULL_CHUNK_HEIGHT:partialChunkHeight;({srcPos:srcPos}=convertBlackAndWhiteToRGBA({src:src,srcPos:srcPos,dest:dest,width:width,height:thisChunkHeight,nonBlackColor:0}));ctx.putImageData(chunkImgData,0,i*FULL_CHUNK_HEIGHT)}}function copyCtxState(sourceCtx,destCtx){const properties=[\"strokeStyle\",\"fillStyle\",\"fillRule\",\"globalAlpha\",\"lineWidth\",\"lineCap\",\"lineJoin\",\"miterLimit\",\"globalCompositeOperation\",\"font\",\"filter\"];for(const property of properties){if(sourceCtx[property]!==undefined){destCtx[property]=sourceCtx[property]}}if(sourceCtx.setLineDash!==undefined){destCtx.setLineDash(sourceCtx.getLineDash());destCtx.lineDashOffset=sourceCtx.lineDashOffset}}function resetCtxToDefault(ctx){ctx.strokeStyle=ctx.fillStyle=\"#000000\";ctx.fillRule=\"nonzero\";ctx.globalAlpha=1;ctx.lineWidth=1;ctx.lineCap=\"butt\";ctx.lineJoin=\"miter\";ctx.miterLimit=10;ctx.globalCompositeOperation=\"source-over\";ctx.font=\"10px sans-serif\";if(ctx.setLineDash!==undefined){ctx.setLineDash([]);ctx.lineDashOffset=0}const{filter:filter}=ctx;if(filter!==\"none\"&&filter!==\"\"){ctx.filter=\"none\"}}function getImageSmoothingEnabled(transform,interpolate){if(interpolate){return true}Util.singularValueDecompose2dScale(transform,XY);const actualScale=Math.fround(OutputScale.pixelRatio*PixelsPerInch.PDF_TO_CSS_UNITS);return XY[0]<=actualScale&&XY[1]<=actualScale}const LINE_CAP_STYLES=[\"butt\",\"round\",\"square\"];const LINE_JOIN_STYLES=[\"miter\",\"round\",\"bevel\"];const NORMAL_CLIP={};const EO_CLIP={};class CanvasGraphics{constructor(canvasCtx,commonObjs,objs,canvasFactory,filterFactory,{optionalContentConfig:optionalContentConfig,markedContentStack:markedContentStack=null},annotationCanvasMap,pageColors){this.ctx=canvasCtx;this.current=new CanvasExtraState(this.ctx.canvas.width,this.ctx.canvas.height);this.stateStack=[];this.pendingClip=null;this.pendingEOFill=false;this.res=null;this.xobjs=null;this.commonObjs=commonObjs;this.objs=objs;this.canvasFactory=canvasFactory;this.filterFactory=filterFactory;this.groupStack=[];this.baseTransform=null;this.baseTransformStack=[];this.groupLevel=0;this.smaskStack=[];this.smaskCounter=0;this.tempSMask=null;this.suspendedCtx=null;this.contentVisible=true;this.markedContentStack=markedContentStack||[];this.optionalContentConfig=optionalContentConfig;this.cachedCanvases=new CachedCanvases(this.canvasFactory);this.cachedPatterns=new Map;this.annotationCanvasMap=annotationCanvasMap;this.viewportScale=1;this.outputScaleX=1;this.outputScaleY=1;this.pageColors=pageColors;this._cachedScaleForStroking=[-1,0];this._cachedGetSinglePixelWidth=null;this._cachedBitmapsMap=new Map}getObject(data,fallback=null){if(typeof data===\"string\"){return data.startsWith(\"g_\")?this.commonObjs.get(data):this.objs.get(data)}return fallback}beginDrawing({transform:transform,viewport:viewport,transparency:transparency=false,background:background=null}){const width=this.ctx.canvas.width;const height=this.ctx.canvas.height;const savedFillStyle=this.ctx.fillStyle;this.ctx.fillStyle=background||\"#ffffff\";this.ctx.fillRect(0,0,width,height);this.ctx.fillStyle=savedFillStyle;if(transparency){const transparentCanvas=this.cachedCanvases.getCanvas(\"transparent\",width,height);this.compositeCtx=this.ctx;this.transparentCanvas=transparentCanvas.canvas;this.ctx=transparentCanvas.context;this.ctx.save();this.ctx.transform(...getCurrentTransform(this.compositeCtx))}this.ctx.save();resetCtxToDefault(this.ctx);if(transform){this.ctx.transform(...transform);this.outputScaleX=transform[0];this.outputScaleY=transform[0]}this.ctx.transform(...viewport.transform);this.viewportScale=viewport.scale;this.baseTransform=getCurrentTransform(this.ctx)}executeOperatorList(operatorList,executionStartIdx,continueCallback,stepper){const argsArray=operatorList.argsArray;const fnArray=operatorList.fnArray;let i=executionStartIdx||0;const argsArrayLen=argsArray.length;if(argsArrayLen===i){return i}const chunkOperations=argsArrayLen-i>EXECUTION_STEPS&&typeof continueCallback===\"function\";const endTime=chunkOperations?Date.now()+EXECUTION_TIME:0;let steps=0;const commonObjs=this.commonObjs;const objs=this.objs;let fnId;while(true){if(stepper!==undefined&&i===stepper.nextBreakPoint){stepper.breakIt(i,continueCallback);return i}fnId=fnArray[i];if(fnId!==OPS.dependency){this[fnId].apply(this,argsArray[i])}else{for(const depObjId of argsArray[i]){const objsPool=depObjId.startsWith(\"g_\")?commonObjs:objs;if(!objsPool.has(depObjId)){objsPool.get(depObjId,continueCallback);return i}}}i++;if(i===argsArrayLen){return i}if(chunkOperations&&++steps>EXECUTION_STEPS){if(Date.now()>endTime){continueCallback();return i}steps=0}}}#restoreInitialState(){while(this.stateStack.length||this.inSMaskMode){this.restore()}this.current.activeSMask=null;this.ctx.restore();if(this.transparentCanvas){this.ctx=this.compositeCtx;this.ctx.save();this.ctx.setTransform(1,0,0,1,0,0);this.ctx.drawImage(this.transparentCanvas,0,0);this.ctx.restore();this.transparentCanvas=null}}endDrawing(){this.#restoreInitialState();this.cachedCanvases.clear();this.cachedPatterns.clear();for(const cache of this._cachedBitmapsMap.values()){for(const canvas of cache.values()){if(typeof HTMLCanvasElement!==\"undefined\"&&canvas instanceof HTMLCanvasElement){canvas.width=canvas.height=0}}cache.clear()}this._cachedBitmapsMap.clear();this.#drawFilter()}#drawFilter(){if(this.pageColors){const hcmFilterId=this.filterFactory.addHCMFilter(this.pageColors.foreground,this.pageColors.background);if(hcmFilterId!==\"none\"){const savedFilter=this.ctx.filter;this.ctx.filter=hcmFilterId;this.ctx.drawImage(this.ctx.canvas,0,0);this.ctx.filter=savedFilter}}}_scaleImage(img,inverseTransform){const width=img.width??img.displayWidth;const height=img.height??img.displayHeight;let widthScale=Math.max(Math.hypot(inverseTransform[0],inverseTransform[1]),1);let heightScale=Math.max(Math.hypot(inverseTransform[2],inverseTransform[3]),1);let paintWidth=width,paintHeight=height;let tmpCanvasId=\"prescale1\";let tmpCanvas,tmpCtx;while(widthScale>2&&paintWidth>1||heightScale>2&&paintHeight>1){let newWidth=paintWidth,newHeight=paintHeight;if(widthScale>2&&paintWidth>1){newWidth=paintWidth>=16384?Math.floor(paintWidth/2)-1||1:Math.ceil(paintWidth/2);widthScale/=paintWidth/newWidth}if(heightScale>2&&paintHeight>1){newHeight=paintHeight>=16384?Math.floor(paintHeight/2)-1||1:Math.ceil(paintHeight)/2;heightScale/=paintHeight/newHeight}tmpCanvas=this.cachedCanvases.getCanvas(tmpCanvasId,newWidth,newHeight);tmpCtx=tmpCanvas.context;tmpCtx.clearRect(0,0,newWidth,newHeight);tmpCtx.drawImage(img,0,0,paintWidth,paintHeight,0,0,newWidth,newHeight);img=tmpCanvas.canvas;paintWidth=newWidth;paintHeight=newHeight;tmpCanvasId=tmpCanvasId===\"prescale1\"?\"prescale2\":\"prescale1\"}return{img:img,paintWidth:paintWidth,paintHeight:paintHeight}}_createMaskCanvas(img){const ctx=this.ctx;const{width:width,height:height}=img;const fillColor=this.current.fillColor;const isPatternFill=this.current.patternFill;const currentTransform=getCurrentTransform(ctx);let cache,cacheKey,scaled,maskCanvas;if((img.bitmap||img.data)&&img.count>1){const mainKey=img.bitmap||img.data.buffer;cacheKey=JSON.stringify(isPatternFill?currentTransform:[currentTransform.slice(0,4),fillColor]);cache=this._cachedBitmapsMap.get(mainKey);if(!cache){cache=new Map;this._cachedBitmapsMap.set(mainKey,cache)}const cachedImage=cache.get(cacheKey);if(cachedImage&&!isPatternFill){const offsetX=Math.round(Math.min(currentTransform[0],currentTransform[2])+currentTransform[4]);const offsetY=Math.round(Math.min(currentTransform[1],currentTransform[3])+currentTransform[5]);return{canvas:cachedImage,offsetX:offsetX,offsetY:offsetY}}scaled=cachedImage}if(!scaled){maskCanvas=this.cachedCanvases.getCanvas(\"maskCanvas\",width,height);putBinaryImageMask(maskCanvas.context,img)}let maskToCanvas=Util.transform(currentTransform,[1/width,0,0,-1/height,0,0]);maskToCanvas=Util.transform(maskToCanvas,[1,0,0,1,0,-height]);const minMax=MIN_MAX_INIT.slice();Util.axialAlignedBoundingBox([0,0,width,height],maskToCanvas,minMax);const[minX,minY,maxX,maxY]=minMax;const drawnWidth=Math.round(maxX-minX)||1;const drawnHeight=Math.round(maxY-minY)||1;const fillCanvas=this.cachedCanvases.getCanvas(\"fillCanvas\",drawnWidth,drawnHeight);const fillCtx=fillCanvas.context;const offsetX=minX;const offsetY=minY;fillCtx.translate(-offsetX,-offsetY);fillCtx.transform(...maskToCanvas);if(!scaled){scaled=this._scaleImage(maskCanvas.canvas,getCurrentTransformInverse(fillCtx));scaled=scaled.img;if(cache&&isPatternFill){cache.set(cacheKey,scaled)}}fillCtx.imageSmoothingEnabled=getImageSmoothingEnabled(getCurrentTransform(fillCtx),img.interpolate);drawImageAtIntegerCoords(fillCtx,scaled,0,0,scaled.width,scaled.height,0,0,width,height);fillCtx.globalCompositeOperation=\"source-in\";const inverse=Util.transform(getCurrentTransformInverse(fillCtx),[1,0,0,1,-offsetX,-offsetY]);fillCtx.fillStyle=isPatternFill?fillColor.getPattern(ctx,this,inverse,PathType.FILL):fillColor;fillCtx.fillRect(0,0,width,height);if(cache&&!isPatternFill){this.cachedCanvases.delete(\"fillCanvas\");cache.set(cacheKey,fillCanvas.canvas)}return{canvas:fillCanvas.canvas,offsetX:Math.round(offsetX),offsetY:Math.round(offsetY)}}setLineWidth(width){if(width!==this.current.lineWidth){this._cachedScaleForStroking[0]=-1}this.current.lineWidth=width;this.ctx.lineWidth=width}setLineCap(style){this.ctx.lineCap=LINE_CAP_STYLES[style]}setLineJoin(style){this.ctx.lineJoin=LINE_JOIN_STYLES[style]}setMiterLimit(limit){this.ctx.miterLimit=limit}setDash(dashArray,dashPhase){const ctx=this.ctx;if(ctx.setLineDash!==undefined){ctx.setLineDash(dashArray);ctx.lineDashOffset=dashPhase}}setRenderingIntent(intent){}setFlatness(flatness){}setGState(states){for(const[key,value]of states){switch(key){case\"LW\":this.setLineWidth(value);break;case\"LC\":this.setLineCap(value);break;case\"LJ\":this.setLineJoin(value);break;case\"ML\":this.setMiterLimit(value);break;case\"D\":this.setDash(value[0],value[1]);break;case\"RI\":this.setRenderingIntent(value);break;case\"FL\":this.setFlatness(value);break;case\"Font\":this.setFont(value[0],value[1]);break;case\"CA\":this.current.strokeAlpha=value;break;case\"ca\":this.ctx.globalAlpha=this.current.fillAlpha=value;break;case\"BM\":this.ctx.globalCompositeOperation=value;break;case\"SMask\":this.current.activeSMask=value?this.tempSMask:null;this.tempSMask=null;this.checkSMaskState();break;case\"TR\":this.ctx.filter=this.current.transferMaps=this.filterFactory.addFilter(value);break}}}get inSMaskMode(){return!!this.suspendedCtx}checkSMaskState(){const inSMaskMode=this.inSMaskMode;if(this.current.activeSMask&&!inSMaskMode){this.beginSMaskMode()}else if(!this.current.activeSMask&&inSMaskMode){this.endSMaskMode()}}beginSMaskMode(){if(this.inSMaskMode){throw new Error(\"beginSMaskMode called while already in smask mode\")}const drawnWidth=this.ctx.canvas.width;const drawnHeight=this.ctx.canvas.height;const cacheId=\"smaskGroupAt\"+this.groupLevel;const scratchCanvas=this.cachedCanvases.getCanvas(cacheId,drawnWidth,drawnHeight);this.suspendedCtx=this.ctx;const ctx=this.ctx=scratchCanvas.context;ctx.setTransform(this.suspendedCtx.getTransform());copyCtxState(this.suspendedCtx,ctx);mirrorContextOperations(ctx,this.suspendedCtx);this.setGState([[\"BM\",\"source-over\"]])}endSMaskMode(){if(!this.inSMaskMode){throw new Error(\"endSMaskMode called while not in smask mode\")}this.ctx._removeMirroring();copyCtxState(this.ctx,this.suspendedCtx);this.ctx=this.suspendedCtx;this.suspendedCtx=null}compose(dirtyBox){if(!this.current.activeSMask){return}if(!dirtyBox){dirtyBox=[0,0,this.ctx.canvas.width,this.ctx.canvas.height]}else{dirtyBox[0]=Math.floor(dirtyBox[0]);dirtyBox[1]=Math.floor(dirtyBox[1]);dirtyBox[2]=Math.ceil(dirtyBox[2]);dirtyBox[3]=Math.ceil(dirtyBox[3])}const smask=this.current.activeSMask;const suspendedCtx=this.suspendedCtx;this.composeSMask(suspendedCtx,smask,this.ctx,dirtyBox);this.ctx.save();this.ctx.setTransform(1,0,0,1,0,0);this.ctx.clearRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height);this.ctx.restore()}composeSMask(ctx,smask,layerCtx,layerBox){const layerOffsetX=layerBox[0];const layerOffsetY=layerBox[1];const layerWidth=layerBox[2]-layerOffsetX;const layerHeight=layerBox[3]-layerOffsetY;if(layerWidth===0||layerHeight===0){return}this.genericComposeSMask(smask.context,layerCtx,layerWidth,layerHeight,smask.subtype,smask.backdrop,smask.transferMap,layerOffsetX,layerOffsetY,smask.offsetX,smask.offsetY);ctx.save();ctx.globalAlpha=1;ctx.globalCompositeOperation=\"source-over\";ctx.setTransform(1,0,0,1,0,0);ctx.drawImage(layerCtx.canvas,0,0);ctx.restore()}genericComposeSMask(maskCtx,layerCtx,width,height,subtype,backdrop,transferMap,layerOffsetX,layerOffsetY,maskOffsetX,maskOffsetY){let maskCanvas=maskCtx.canvas;let maskX=layerOffsetX-maskOffsetX;let maskY=layerOffsetY-maskOffsetY;if(backdrop){const backdropRGB=Util.makeHexColor(...backdrop);if(maskX<0||maskY<0||maskX+width>maskCanvas.width||maskY+height>maskCanvas.height){const canvas=this.cachedCanvases.getCanvas(\"maskExtension\",width,height);const ctx=canvas.context;ctx.drawImage(maskCanvas,-maskX,-maskY);ctx.globalCompositeOperation=\"destination-atop\";ctx.fillStyle=backdropRGB;ctx.fillRect(0,0,width,height);ctx.globalCompositeOperation=\"source-over\";maskCanvas=canvas.canvas;maskX=maskY=0}else{maskCtx.save();maskCtx.globalAlpha=1;maskCtx.setTransform(1,0,0,1,0,0);const clip=new Path2D;clip.rect(maskX,maskY,width,height);maskCtx.clip(clip);maskCtx.globalCompositeOperation=\"destination-atop\";maskCtx.fillStyle=backdropRGB;maskCtx.fillRect(maskX,maskY,width,height);maskCtx.restore()}}layerCtx.save();layerCtx.globalAlpha=1;layerCtx.setTransform(1,0,0,1,0,0);if(subtype===\"Alpha\"&&transferMap){layerCtx.filter=this.filterFactory.addAlphaFilter(transferMap)}else if(subtype===\"Luminosity\"){layerCtx.filter=this.filterFactory.addLuminosityFilter(transferMap)}const clip=new Path2D;clip.rect(layerOffsetX,layerOffsetY,width,height);layerCtx.clip(clip);layerCtx.globalCompositeOperation=\"destination-in\";layerCtx.drawImage(maskCanvas,maskX,maskY,width,height,layerOffsetX,layerOffsetY,width,height);layerCtx.restore()}save(){if(this.inSMaskMode){copyCtxState(this.ctx,this.suspendedCtx)}this.ctx.save();const old=this.current;this.stateStack.push(old);this.current=old.clone()}restore(){if(this.stateStack.length===0){if(this.inSMaskMode){this.endSMaskMode()}return}this.current=this.stateStack.pop();this.ctx.restore();if(this.inSMaskMode){copyCtxState(this.suspendedCtx,this.ctx)}this.checkSMaskState();this.pendingClip=null;this._cachedScaleForStroking[0]=-1;this._cachedGetSinglePixelWidth=null}transform(a,b,c,d,e,f){this.ctx.transform(a,b,c,d,e,f);this._cachedScaleForStroking[0]=-1;this._cachedGetSinglePixelWidth=null}constructPath(op,data,minMax){let[path]=data;if(!minMax){path||=data[0]=new Path2D;this[op](path);return}if(!(path instanceof Path2D)){const path2d=data[0]=new Path2D;for(let i=0,ii=path.length;i<ii;){switch(path[i++]){case DrawOPS.moveTo:path2d.moveTo(path[i++],path[i++]);break;case DrawOPS.lineTo:path2d.lineTo(path[i++],path[i++]);break;case DrawOPS.curveTo:path2d.bezierCurveTo(path[i++],path[i++],path[i++],path[i++],path[i++],path[i++]);break;case DrawOPS.closePath:path2d.closePath();break;default:warn(`Unrecognized drawing path operator: ${path[i-1]}`);break}}path=path2d}Util.axialAlignedBoundingBox(minMax,getCurrentTransform(this.ctx),this.current.minMax);this[op](path)}closePath(){this.ctx.closePath()}stroke(path,consumePath=true){const ctx=this.ctx;const strokeColor=this.current.strokeColor;ctx.globalAlpha=this.current.strokeAlpha;if(this.contentVisible){if(typeof strokeColor===\"object\"&&strokeColor?.getPattern){const baseTransform=strokeColor.isModifyingCurrentTransform()?ctx.getTransform():null;ctx.save();ctx.strokeStyle=strokeColor.getPattern(ctx,this,getCurrentTransformInverse(ctx),PathType.STROKE);if(baseTransform){const newPath=new Path2D;newPath.addPath(path,ctx.getTransform().invertSelf().multiplySelf(baseTransform));path=newPath}this.rescaleAndStroke(path,false);ctx.restore()}else{this.rescaleAndStroke(path,true)}}if(consumePath){this.consumePath(path,this.current.getClippedPathBoundingBox(PathType.STROKE,getCurrentTransform(this.ctx)))}ctx.globalAlpha=this.current.fillAlpha}closeStroke(path){this.stroke(path)}fill(path,consumePath=true){const ctx=this.ctx;const fillColor=this.current.fillColor;const isPatternFill=this.current.patternFill;let needRestore=false;if(isPatternFill){const baseTransform=fillColor.isModifyingCurrentTransform()?ctx.getTransform():null;ctx.save();ctx.fillStyle=fillColor.getPattern(ctx,this,getCurrentTransformInverse(ctx),PathType.FILL);if(baseTransform){const newPath=new Path2D;newPath.addPath(path,ctx.getTransform().invertSelf().multiplySelf(baseTransform));path=newPath}needRestore=true}const intersect=this.current.getClippedPathBoundingBox();if(this.contentVisible&&intersect!==null){if(this.pendingEOFill){ctx.fill(path,\"evenodd\");this.pendingEOFill=false}else{ctx.fill(path)}}if(needRestore){ctx.restore()}if(consumePath){this.consumePath(path,intersect)}}eoFill(path){this.pendingEOFill=true;this.fill(path)}fillStroke(path){this.fill(path,false);this.stroke(path,false);this.consumePath(path)}eoFillStroke(path){this.pendingEOFill=true;this.fillStroke(path)}closeFillStroke(path){this.fillStroke(path)}closeEOFillStroke(path){this.pendingEOFill=true;this.fillStroke(path)}endPath(path){this.consumePath(path)}rawFillPath(path){this.ctx.fill(path)}clip(){this.pendingClip=NORMAL_CLIP}eoClip(){this.pendingClip=EO_CLIP}beginText(){this.current.textMatrix=null;this.current.textMatrixScale=1;this.current.x=this.current.lineX=0;this.current.y=this.current.lineY=0}endText(){const paths=this.pendingTextPaths;const ctx=this.ctx;if(paths===undefined){return}const newPath=new Path2D;const invTransf=ctx.getTransform().invertSelf();for(const{transform:transform,x:x,y:y,fontSize:fontSize,path:path}of paths){newPath.addPath(path,new DOMMatrix(transform).preMultiplySelf(invTransf).translate(x,y).scale(fontSize,-fontSize))}ctx.clip(newPath);delete this.pendingTextPaths}setCharSpacing(spacing){this.current.charSpacing=spacing}setWordSpacing(spacing){this.current.wordSpacing=spacing}setHScale(scale){this.current.textHScale=scale/100}setLeading(leading){this.current.leading=-leading}setFont(fontRefName,size){const fontObj=this.commonObjs.get(fontRefName);const current=this.current;if(!fontObj){throw new Error(`Can't find font for ${fontRefName}`)}current.fontMatrix=fontObj.fontMatrix||FONT_IDENTITY_MATRIX;if(current.fontMatrix[0]===0||current.fontMatrix[3]===0){warn(\"Invalid font matrix for font \"+fontRefName)}if(size<0){size=-size;current.fontDirection=-1}else{current.fontDirection=1}this.current.font=fontObj;this.current.fontSize=size;if(fontObj.isType3Font){return}const name=fontObj.loadedName||\"sans-serif\";const typeface=fontObj.systemFontInfo?.css||`\"${name}\", ${fontObj.fallbackName}`;let bold=\"normal\";if(fontObj.black){bold=\"900\"}else if(fontObj.bold){bold=\"bold\"}const italic=fontObj.italic?\"italic\":\"normal\";let browserFontSize=size;if(size<MIN_FONT_SIZE){browserFontSize=MIN_FONT_SIZE}else if(size>MAX_FONT_SIZE){browserFontSize=MAX_FONT_SIZE}this.current.fontSizeScale=size/browserFontSize;this.ctx.font=`${italic} ${bold} ${browserFontSize}px ${typeface}`}setTextRenderingMode(mode){this.current.textRenderingMode=mode}setTextRise(rise){this.current.textRise=rise}moveText(x,y){this.current.x=this.current.lineX+=x;this.current.y=this.current.lineY+=y}setLeadingMoveText(x,y){this.setLeading(-y);this.moveText(x,y)}setTextMatrix(matrix){const{current:current}=this;current.textMatrix=matrix;current.textMatrixScale=Math.hypot(matrix[0],matrix[1]);current.x=current.lineX=0;current.y=current.lineY=0}nextLine(){this.moveText(0,this.current.leading)}#getScaledPath(path,currentTransform,transform){const newPath=new Path2D;newPath.addPath(path,new DOMMatrix(transform).invertSelf().multiplySelf(currentTransform));return newPath}paintChar(character,x,y,patternFillTransform,patternStrokeTransform){const ctx=this.ctx;const current=this.current;const font=current.font;const textRenderingMode=current.textRenderingMode;const fontSize=current.fontSize/current.fontSizeScale;const fillStrokeMode=textRenderingMode&TextRenderingMode.FILL_STROKE_MASK;const isAddToPathSet=!!(textRenderingMode&TextRenderingMode.ADD_TO_PATH_FLAG);const patternFill=current.patternFill&&!font.missingFile;const patternStroke=current.patternStroke&&!font.missingFile;let path;if(font.disableFontFace||isAddToPathSet||patternFill||patternStroke){path=font.getPathGenerator(this.commonObjs,character)}if(font.disableFontFace||patternFill||patternStroke){ctx.save();ctx.translate(x,y);ctx.scale(fontSize,-fontSize);let currentTransform;if(fillStrokeMode===TextRenderingMode.FILL||fillStrokeMode===TextRenderingMode.FILL_STROKE){if(patternFillTransform){currentTransform=ctx.getTransform();ctx.setTransform(...patternFillTransform);ctx.fill(this.#getScaledPath(path,currentTransform,patternFillTransform))}else{ctx.fill(path)}}if(fillStrokeMode===TextRenderingMode.STROKE||fillStrokeMode===TextRenderingMode.FILL_STROKE){if(patternStrokeTransform){currentTransform||=ctx.getTransform();ctx.setTransform(...patternStrokeTransform);const{a:a,b:b,c:c,d:d}=currentTransform;const invPatternTransform=Util.inverseTransform(patternStrokeTransform);const transf=Util.transform([a,b,c,d,0,0],invPatternTransform);Util.singularValueDecompose2dScale(transf,XY);ctx.lineWidth*=Math.max(XY[0],XY[1])/fontSize;ctx.stroke(this.#getScaledPath(path,currentTransform,patternStrokeTransform))}else{ctx.lineWidth/=fontSize;ctx.stroke(path)}}ctx.restore()}else{if(fillStrokeMode===TextRenderingMode.FILL||fillStrokeMode===TextRenderingMode.FILL_STROKE){ctx.fillText(character,x,y)}if(fillStrokeMode===TextRenderingMode.STROKE||fillStrokeMode===TextRenderingMode.FILL_STROKE){ctx.strokeText(character,x,y)}}if(isAddToPathSet){const paths=this.pendingTextPaths||=[];paths.push({transform:getCurrentTransform(ctx),x:x,y:y,fontSize:fontSize,path:path})}}get isFontSubpixelAAEnabled(){const{context:ctx}=this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\",10,10);ctx.scale(1.5,1);ctx.fillText(\"I\",0,10);const data=ctx.getImageData(0,0,10,10).data;let enabled=false;for(let i=3;i<data.length;i+=4){if(data[i]>0&&data[i]<255){enabled=true;break}}return shadow(this,\"isFontSubpixelAAEnabled\",enabled)}showText(glyphs){const current=this.current;const font=current.font;if(font.isType3Font){return this.showType3Text(glyphs)}const fontSize=current.fontSize;if(fontSize===0){return undefined}const ctx=this.ctx;const fontSizeScale=current.fontSizeScale;const charSpacing=current.charSpacing;const wordSpacing=current.wordSpacing;const fontDirection=current.fontDirection;const textHScale=current.textHScale*fontDirection;const glyphsLength=glyphs.length;const vertical=font.vertical;const spacingDir=vertical?1:-1;const defaultVMetrics=font.defaultVMetrics;const widthAdvanceScale=fontSize*current.fontMatrix[0];const simpleFillText=current.textRenderingMode===TextRenderingMode.FILL&&!font.disableFontFace&&!current.patternFill;ctx.save();if(current.textMatrix){ctx.transform(...current.textMatrix)}ctx.translate(current.x,current.y+current.textRise);if(fontDirection>0){ctx.scale(textHScale,-1)}else{ctx.scale(textHScale,1)}let patternFillTransform,patternStrokeTransform;if(current.patternFill){ctx.save();const pattern=current.fillColor.getPattern(ctx,this,getCurrentTransformInverse(ctx),PathType.FILL);patternFillTransform=getCurrentTransform(ctx);ctx.restore();ctx.fillStyle=pattern}if(current.patternStroke){ctx.save();const pattern=current.strokeColor.getPattern(ctx,this,getCurrentTransformInverse(ctx),PathType.STROKE);patternStrokeTransform=getCurrentTransform(ctx);ctx.restore();ctx.strokeStyle=pattern}let lineWidth=current.lineWidth;const scale=current.textMatrixScale;if(scale===0||lineWidth===0){const fillStrokeMode=current.textRenderingMode&TextRenderingMode.FILL_STROKE_MASK;if(fillStrokeMode===TextRenderingMode.STROKE||fillStrokeMode===TextRenderingMode.FILL_STROKE){lineWidth=this.getSinglePixelWidth()}}else{lineWidth/=scale}if(fontSizeScale!==1){ctx.scale(fontSizeScale,fontSizeScale);lineWidth/=fontSizeScale}ctx.lineWidth=lineWidth;if(font.isInvalidPDFjsFont){const chars=[];let width=0;for(const glyph of glyphs){chars.push(glyph.unicode);width+=glyph.width}ctx.fillText(chars.join(\"\"),0,0);current.x+=width*widthAdvanceScale*textHScale;ctx.restore();this.compose();return undefined}let x=0,i;for(i=0;i<glyphsLength;++i){const glyph=glyphs[i];if(typeof glyph===\"number\"){x+=spacingDir*glyph*fontSize/1e3;continue}let restoreNeeded=false;const spacing=(glyph.isSpace?wordSpacing:0)+charSpacing;const character=glyph.fontChar;const accent=glyph.accent;let scaledX,scaledY;let width=glyph.width;if(vertical){const vmetric=glyph.vmetric||defaultVMetrics;const vx=-(glyph.vmetric?vmetric[1]:width*.5)*widthAdvanceScale;const vy=vmetric[2]*widthAdvanceScale;width=vmetric?-vmetric[0]:width;scaledX=vx/fontSizeScale;scaledY=(x+vy)/fontSizeScale}else{scaledX=x/fontSizeScale;scaledY=0}if(font.remeasure&&width>0){const measuredWidth=ctx.measureText(character).width*1e3/fontSize*fontSizeScale;if(width<measuredWidth&&this.isFontSubpixelAAEnabled){const characterScaleX=width/measuredWidth;restoreNeeded=true;ctx.save();ctx.scale(characterScaleX,1);scaledX/=characterScaleX}else if(width!==measuredWidth){scaledX+=(width-measuredWidth)/2e3*fontSize/fontSizeScale}}if(this.contentVisible&&(glyph.isInFont||font.missingFile)){if(simpleFillText&&!accent){ctx.fillText(character,scaledX,scaledY)}else{this.paintChar(character,scaledX,scaledY,patternFillTransform,patternStrokeTransform);if(accent){const scaledAccentX=scaledX+fontSize*accent.offset.x/fontSizeScale;const scaledAccentY=scaledY-fontSize*accent.offset.y/fontSizeScale;this.paintChar(accent.fontChar,scaledAccentX,scaledAccentY,patternFillTransform,patternStrokeTransform)}}}const charWidth=vertical?width*widthAdvanceScale-spacing*fontDirection:width*widthAdvanceScale+spacing*fontDirection;x+=charWidth;if(restoreNeeded){ctx.restore()}}if(vertical){current.y-=x}else{current.x+=x*textHScale}ctx.restore();this.compose();return undefined}showType3Text(glyphs){const ctx=this.ctx;const current=this.current;const font=current.font;const fontSize=current.fontSize;const fontDirection=current.fontDirection;const spacingDir=font.vertical?1:-1;const charSpacing=current.charSpacing;const wordSpacing=current.wordSpacing;const textHScale=current.textHScale*fontDirection;const fontMatrix=current.fontMatrix||FONT_IDENTITY_MATRIX;const glyphsLength=glyphs.length;const isTextInvisible=current.textRenderingMode===TextRenderingMode.INVISIBLE;let i,glyph,width,spacingLength;if(isTextInvisible||fontSize===0){return}this._cachedScaleForStroking[0]=-1;this._cachedGetSinglePixelWidth=null;ctx.save();if(current.textMatrix){ctx.transform(...current.textMatrix)}ctx.translate(current.x,current.y+current.textRise);ctx.scale(textHScale,fontDirection);for(i=0;i<glyphsLength;++i){glyph=glyphs[i];if(typeof glyph===\"number\"){spacingLength=spacingDir*glyph*fontSize/1e3;this.ctx.translate(spacingLength,0);current.x+=spacingLength*textHScale;continue}const spacing=(glyph.isSpace?wordSpacing:0)+charSpacing;const operatorList=font.charProcOperatorList[glyph.operatorListId];if(!operatorList){warn(`Type3 character \"${glyph.operatorListId}\" is not available.`)}else if(this.contentVisible){this.save();ctx.scale(fontSize,fontSize);ctx.transform(...fontMatrix);this.executeOperatorList(operatorList);this.restore()}const p=[glyph.width,0];Util.applyTransform(p,fontMatrix);width=p[0]*fontSize+spacing;ctx.translate(width,0);current.x+=width*textHScale}ctx.restore()}setCharWidth(xWidth,yWidth){}setCharWidthAndBounds(xWidth,yWidth,llx,lly,urx,ury){const clip=new Path2D;clip.rect(llx,lly,urx-llx,ury-lly);this.ctx.clip(clip);this.endPath()}getColorN_Pattern(IR){let pattern;if(IR[0]===\"TilingPattern\"){const baseTransform=this.baseTransform||getCurrentTransform(this.ctx);const canvasGraphicsFactory={createCanvasGraphics:ctx=>new CanvasGraphics(ctx,this.commonObjs,this.objs,this.canvasFactory,this.filterFactory,{optionalContentConfig:this.optionalContentConfig,markedContentStack:this.markedContentStack})};pattern=new TilingPattern(IR,this.ctx,canvasGraphicsFactory,baseTransform)}else{pattern=this._getPattern(IR[1],IR[2])}return pattern}setStrokeColorN(){this.current.strokeColor=this.getColorN_Pattern(arguments);this.current.patternStroke=true}setFillColorN(){this.current.fillColor=this.getColorN_Pattern(arguments);this.current.patternFill=true}setStrokeRGBColor(r,g,b){this.ctx.strokeStyle=this.current.strokeColor=Util.makeHexColor(r,g,b);this.current.patternStroke=false}setStrokeTransparent(){this.ctx.strokeStyle=this.current.strokeColor=\"transparent\";this.current.patternStroke=false}setFillRGBColor(r,g,b){this.ctx.fillStyle=this.current.fillColor=Util.makeHexColor(r,g,b);this.current.patternFill=false}setFillTransparent(){this.ctx.fillStyle=this.current.fillColor=\"transparent\";this.current.patternFill=false}_getPattern(objId,matrix=null){let pattern;if(this.cachedPatterns.has(objId)){pattern=this.cachedPatterns.get(objId)}else{pattern=getShadingPattern(this.getObject(objId));this.cachedPatterns.set(objId,pattern)}if(matrix){pattern.matrix=matrix}return pattern}shadingFill(objId){if(!this.contentVisible){return}const ctx=this.ctx;this.save();const pattern=this._getPattern(objId);ctx.fillStyle=pattern.getPattern(ctx,this,getCurrentTransformInverse(ctx),PathType.SHADING);const inv=getCurrentTransformInverse(ctx);if(inv){const{width:width,height:height}=ctx.canvas;const minMax=MIN_MAX_INIT.slice();Util.axialAlignedBoundingBox([0,0,width,height],inv,minMax);const[x0,y0,x1,y1]=minMax;this.ctx.fillRect(x0,y0,x1-x0,y1-y0)}else{this.ctx.fillRect(-1e10,-1e10,2e10,2e10)}this.compose(this.current.getClippedPathBoundingBox());this.restore()}beginInlineImage(){unreachable(\"Should not call beginInlineImage\")}beginImageData(){unreachable(\"Should not call beginImageData\")}paintFormXObjectBegin(matrix,bbox){if(!this.contentVisible){return}this.save();this.baseTransformStack.push(this.baseTransform);if(matrix){this.transform(...matrix)}this.baseTransform=getCurrentTransform(this.ctx);if(bbox){Util.axialAlignedBoundingBox(bbox,this.baseTransform,this.current.minMax);const[x0,y0,x1,y1]=bbox;const clip=new Path2D;clip.rect(x0,y0,x1-x0,y1-y0);this.ctx.clip(clip);this.endPath()}}paintFormXObjectEnd(){if(!this.contentVisible){return}this.restore();this.baseTransform=this.baseTransformStack.pop()}beginGroup(group){if(!this.contentVisible){return}this.save();if(this.inSMaskMode){this.endSMaskMode();this.current.activeSMask=null}const currentCtx=this.ctx;if(!group.isolated){info(\"TODO: Support non-isolated groups.\")}if(group.knockout){warn(\"Knockout groups not supported.\")}const currentTransform=getCurrentTransform(currentCtx);if(group.matrix){currentCtx.transform(...group.matrix)}if(!group.bbox){throw new Error(\"Bounding box is required.\")}let bounds=MIN_MAX_INIT.slice();Util.axialAlignedBoundingBox(group.bbox,getCurrentTransform(currentCtx),bounds);const canvasBounds=[0,0,currentCtx.canvas.width,currentCtx.canvas.height];bounds=Util.intersect(bounds,canvasBounds)||[0,0,0,0];const offsetX=Math.floor(bounds[0]);const offsetY=Math.floor(bounds[1]);const drawnWidth=Math.max(Math.ceil(bounds[2])-offsetX,1);const drawnHeight=Math.max(Math.ceil(bounds[3])-offsetY,1);this.current.startNewPathAndClipBox([0,0,drawnWidth,drawnHeight]);let cacheId=\"groupAt\"+this.groupLevel;if(group.smask){cacheId+=\"_smask_\"+this.smaskCounter++%2}const scratchCanvas=this.cachedCanvases.getCanvas(cacheId,drawnWidth,drawnHeight);const groupCtx=scratchCanvas.context;groupCtx.translate(-offsetX,-offsetY);groupCtx.transform(...currentTransform);let clip=new Path2D;const[x0,y0,x1,y1]=group.bbox;clip.rect(x0,y0,x1-x0,y1-y0);if(group.matrix){const path=new Path2D;path.addPath(clip,new DOMMatrix(group.matrix));clip=path}groupCtx.clip(clip);if(group.smask){this.smaskStack.push({canvas:scratchCanvas.canvas,context:groupCtx,offsetX:offsetX,offsetY:offsetY,subtype:group.smask.subtype,backdrop:group.smask.backdrop,transferMap:group.smask.transferMap||null,startTransformInverse:null})}else{currentCtx.setTransform(1,0,0,1,0,0);currentCtx.translate(offsetX,offsetY);currentCtx.save()}copyCtxState(currentCtx,groupCtx);this.ctx=groupCtx;this.setGState([[\"BM\",\"source-over\"],[\"ca\",1],[\"CA\",1]]);this.groupStack.push(currentCtx);this.groupLevel++}endGroup(group){if(!this.contentVisible){return}this.groupLevel--;const groupCtx=this.ctx;const ctx=this.groupStack.pop();this.ctx=ctx;this.ctx.imageSmoothingEnabled=false;if(group.smask){this.tempSMask=this.smaskStack.pop();this.restore()}else{this.ctx.restore();const currentMtx=getCurrentTransform(this.ctx);this.restore();this.ctx.save();this.ctx.setTransform(...currentMtx);const dirtyBox=MIN_MAX_INIT.slice();Util.axialAlignedBoundingBox([0,0,groupCtx.canvas.width,groupCtx.canvas.height],currentMtx,dirtyBox);this.ctx.drawImage(groupCtx.canvas,0,0);this.ctx.restore();this.compose(dirtyBox)}}beginAnnotation(id,rect,transform,matrix,hasOwnCanvas){this.#restoreInitialState();resetCtxToDefault(this.ctx);this.ctx.save();this.save();if(this.baseTransform){this.ctx.setTransform(...this.baseTransform)}if(rect){const width=rect[2]-rect[0];const height=rect[3]-rect[1];if(hasOwnCanvas&&this.annotationCanvasMap){transform=transform.slice();transform[4]-=rect[0];transform[5]-=rect[1];rect=rect.slice();rect[0]=rect[1]=0;rect[2]=width;rect[3]=height;Util.singularValueDecompose2dScale(getCurrentTransform(this.ctx),XY);const{viewportScale:viewportScale}=this;const canvasWidth=Math.ceil(width*this.outputScaleX*viewportScale);const canvasHeight=Math.ceil(height*this.outputScaleY*viewportScale);this.annotationCanvas=this.canvasFactory.create(canvasWidth,canvasHeight);const{canvas:canvas,context:context}=this.annotationCanvas;this.annotationCanvasMap.set(id,canvas);this.annotationCanvas.savedCtx=this.ctx;this.ctx=context;this.ctx.save();this.ctx.setTransform(XY[0],0,0,-XY[1],0,height*XY[1]);resetCtxToDefault(this.ctx)}else{resetCtxToDefault(this.ctx);this.endPath();const clip=new Path2D;clip.rect(rect[0],rect[1],width,height);this.ctx.clip(clip)}}this.current=new CanvasExtraState(this.ctx.canvas.width,this.ctx.canvas.height);this.transform(...transform);this.transform(...matrix)}endAnnotation(){if(this.annotationCanvas){this.ctx.restore();this.#drawFilter();this.ctx=this.annotationCanvas.savedCtx;delete this.annotationCanvas.savedCtx;delete this.annotationCanvas}}paintImageMaskXObject(img){if(!this.contentVisible){return}const count=img.count;img=this.getObject(img.data,img);img.count=count;const ctx=this.ctx;const mask=this._createMaskCanvas(img);const maskCanvas=mask.canvas;ctx.save();ctx.setTransform(1,0,0,1,0,0);ctx.drawImage(maskCanvas,mask.offsetX,mask.offsetY);ctx.restore();this.compose()}paintImageMaskXObjectRepeat(img,scaleX,skewX=0,skewY=0,scaleY,positions){if(!this.contentVisible){return}img=this.getObject(img.data,img);const ctx=this.ctx;ctx.save();const currentTransform=getCurrentTransform(ctx);ctx.transform(scaleX,skewX,skewY,scaleY,0,0);const mask=this._createMaskCanvas(img);ctx.setTransform(1,0,0,1,mask.offsetX-currentTransform[4],mask.offsetY-currentTransform[5]);for(let i=0,ii=positions.length;i<ii;i+=2){const trans=Util.transform(currentTransform,[scaleX,skewX,skewY,scaleY,positions[i],positions[i+1]]);ctx.drawImage(mask.canvas,trans[4],trans[5])}ctx.restore();this.compose()}paintImageMaskXObjectGroup(images){if(!this.contentVisible){return}const ctx=this.ctx;const fillColor=this.current.fillColor;const isPatternFill=this.current.patternFill;for(const image of images){const{data:data,width:width,height:height,transform:transform}=image;const maskCanvas=this.cachedCanvases.getCanvas(\"maskCanvas\",width,height);const maskCtx=maskCanvas.context;maskCtx.save();const img=this.getObject(data,image);putBinaryImageMask(maskCtx,img);maskCtx.globalCompositeOperation=\"source-in\";maskCtx.fillStyle=isPatternFill?fillColor.getPattern(maskCtx,this,getCurrentTransformInverse(ctx),PathType.FILL):fillColor;maskCtx.fillRect(0,0,width,height);maskCtx.restore();ctx.save();ctx.transform(...transform);ctx.scale(1,-1);drawImageAtIntegerCoords(ctx,maskCanvas.canvas,0,0,width,height,0,-1,1,1);ctx.restore()}this.compose()}paintImageXObject(objId){if(!this.contentVisible){return}const imgData=this.getObject(objId);if(!imgData){warn(\"Dependent image isn't ready yet\");return}this.paintInlineImageXObject(imgData)}paintImageXObjectRepeat(objId,scaleX,scaleY,positions){if(!this.contentVisible){return}const imgData=this.getObject(objId);if(!imgData){warn(\"Dependent image isn't ready yet\");return}const width=imgData.width;const height=imgData.height;const map=[];for(let i=0,ii=positions.length;i<ii;i+=2){map.push({transform:[scaleX,0,0,scaleY,positions[i],positions[i+1]],x:0,y:0,w:width,h:height})}this.paintInlineImageXObjectGroup(imgData,map)}applyTransferMapsToCanvas(ctx){if(this.current.transferMaps!==\"none\"){ctx.filter=this.current.transferMaps;ctx.drawImage(ctx.canvas,0,0);ctx.filter=\"none\"}return ctx.canvas}applyTransferMapsToBitmap(imgData){if(this.current.transferMaps===\"none\"){return imgData.bitmap}const{bitmap:bitmap,width:width,height:height}=imgData;const tmpCanvas=this.cachedCanvases.getCanvas(\"inlineImage\",width,height);const tmpCtx=tmpCanvas.context;tmpCtx.filter=this.current.transferMaps;tmpCtx.drawImage(bitmap,0,0);tmpCtx.filter=\"none\";return tmpCanvas.canvas}paintInlineImageXObject(imgData){if(!this.contentVisible){return}const width=imgData.width;const height=imgData.height;const ctx=this.ctx;this.save();const{filter:filter}=ctx;if(filter!==\"none\"&&filter!==\"\"){ctx.filter=\"none\"}ctx.scale(1/width,-1/height);let imgToPaint;if(imgData.bitmap){imgToPaint=this.applyTransferMapsToBitmap(imgData)}else if(typeof HTMLElement===\"function\"&&imgData instanceof HTMLElement||!imgData.data){imgToPaint=imgData}else{const tmpCanvas=this.cachedCanvases.getCanvas(\"inlineImage\",width,height);const tmpCtx=tmpCanvas.context;putBinaryImageData(tmpCtx,imgData);imgToPaint=this.applyTransferMapsToCanvas(tmpCtx)}const scaled=this._scaleImage(imgToPaint,getCurrentTransformInverse(ctx));ctx.imageSmoothingEnabled=getImageSmoothingEnabled(getCurrentTransform(ctx),imgData.interpolate);drawImageAtIntegerCoords(ctx,scaled.img,0,0,scaled.paintWidth,scaled.paintHeight,0,-height,width,height);this.compose();this.restore()}paintInlineImageXObjectGroup(imgData,map){if(!this.contentVisible){return}const ctx=this.ctx;let imgToPaint;if(imgData.bitmap){imgToPaint=imgData.bitmap}else{const w=imgData.width;const h=imgData.height;const tmpCanvas=this.cachedCanvases.getCanvas(\"inlineImage\",w,h);const tmpCtx=tmpCanvas.context;putBinaryImageData(tmpCtx,imgData);imgToPaint=this.applyTransferMapsToCanvas(tmpCtx)}for(const entry of map){ctx.save();ctx.transform(...entry.transform);ctx.scale(1,-1);drawImageAtIntegerCoords(ctx,imgToPaint,entry.x,entry.y,entry.w,entry.h,0,-1,1,1);ctx.restore()}this.compose()}paintSolidColorImageMask(){if(!this.contentVisible){return}this.ctx.fillRect(0,0,1,1);this.compose()}markPoint(tag){}markPointProps(tag,properties){}beginMarkedContent(tag){this.markedContentStack.push({visible:true})}beginMarkedContentProps(tag,properties){if(tag===\"OC\"){this.markedContentStack.push({visible:this.optionalContentConfig.isVisible(properties)})}else{this.markedContentStack.push({visible:true})}this.contentVisible=this.isContentVisible()}endMarkedContent(){this.markedContentStack.pop();this.contentVisible=this.isContentVisible()}beginCompat(){}endCompat(){}consumePath(path,clipBox){const isEmpty=this.current.isEmptyClip();if(this.pendingClip){this.current.updateClipFromPath()}if(!this.pendingClip){this.compose(clipBox)}const ctx=this.ctx;if(this.pendingClip){if(!isEmpty){if(this.pendingClip===EO_CLIP){ctx.clip(path,\"evenodd\")}else{ctx.clip(path)}}this.pendingClip=null}this.current.startNewPathAndClipBox(this.current.clipBox)}getSinglePixelWidth(){if(!this._cachedGetSinglePixelWidth){const m=getCurrentTransform(this.ctx);if(m[1]===0&&m[2]===0){this._cachedGetSinglePixelWidth=1/Math.min(Math.abs(m[0]),Math.abs(m[3]))}else{const absDet=Math.abs(m[0]*m[3]-m[2]*m[1]);const normX=Math.hypot(m[0],m[2]);const normY=Math.hypot(m[1],m[3]);this._cachedGetSinglePixelWidth=Math.max(normX,normY)/absDet}}return this._cachedGetSinglePixelWidth}getScaleForStroking(){if(this._cachedScaleForStroking[0]===-1){const{lineWidth:lineWidth}=this.current;const{a:a,b:b,c:c,d:d}=this.ctx.getTransform();let scaleX,scaleY;if(b===0&&c===0){const normX=Math.abs(a);const normY=Math.abs(d);if(normX===normY){if(lineWidth===0){scaleX=scaleY=1/normX}else{const scaledLineWidth=normX*lineWidth;scaleX=scaleY=scaledLineWidth<1?1/scaledLineWidth:1}}else if(lineWidth===0){scaleX=1/normX;scaleY=1/normY}else{const scaledXLineWidth=normX*lineWidth;const scaledYLineWidth=normY*lineWidth;scaleX=scaledXLineWidth<1?1/scaledXLineWidth:1;scaleY=scaledYLineWidth<1?1/scaledYLineWidth:1}}else{const absDet=Math.abs(a*d-b*c);const normX=Math.hypot(a,b);const normY=Math.hypot(c,d);if(lineWidth===0){scaleX=normY/absDet;scaleY=normX/absDet}else{const baseArea=lineWidth*absDet;scaleX=normY>baseArea?normY/baseArea:1;scaleY=normX>baseArea?normX/baseArea:1}}this._cachedScaleForStroking[0]=scaleX;this._cachedScaleForStroking[1]=scaleY}return this._cachedScaleForStroking}rescaleAndStroke(path,saveRestore){const{ctx:ctx,current:{lineWidth:lineWidth}}=this;const[scaleX,scaleY]=this.getScaleForStroking();if(scaleX===scaleY){ctx.lineWidth=(lineWidth||1)*scaleX;ctx.stroke(path);return}const dashes=ctx.getLineDash();if(saveRestore){ctx.save()}ctx.scale(scaleX,scaleY);SCALE_MATRIX.a=1/scaleX;SCALE_MATRIX.d=1/scaleY;const newPath=new Path2D;newPath.addPath(path,SCALE_MATRIX);if(dashes.length>0){const scale=Math.max(scaleX,scaleY);ctx.setLineDash(dashes.map((x=>x/scale)));ctx.lineDashOffset/=scale}ctx.lineWidth=lineWidth||1;ctx.stroke(newPath);if(saveRestore){ctx.restore()}}isContentVisible(){for(let i=this.markedContentStack.length-1;i>=0;i--){if(!this.markedContentStack[i].visible){return false}}return true}}for(const op in OPS){if(CanvasGraphics.prototype[op]!==undefined){CanvasGraphics.prototype[OPS[op]]=CanvasGraphics.prototype[op]}}class GlobalWorkerOptions{static#port=null;static#src=\"\";static get workerPort(){return this.#port}static set workerPort(val){if(!(typeof Worker!==\"undefined\"&&val instanceof Worker)&&val!==null){throw new Error(\"Invalid `workerPort` type.\")}this.#port=val}static get workerSrc(){return this.#src}static set workerSrc(val){if(typeof val!==\"string\"){throw new Error(\"Invalid `workerSrc` type.\")}this.#src=val}}class Metadata{#map;#data;constructor({parsedData:parsedData,rawData:rawData}){this.#map=parsedData;this.#data=rawData}getRaw(){return this.#data}get(name){return this.#map.get(name)??null}[Symbol.iterator](){return this.#map.entries()}}const INTERNAL=Symbol(\"INTERNAL\");class OptionalContentGroup{#isDisplay=false;#isPrint=false;#userSet=false;#visible=true;constructor(renderingIntent,{name:name,intent:intent,usage:usage,rbGroups:rbGroups}){this.#isDisplay=!!(renderingIntent&RenderingIntentFlag.DISPLAY);this.#isPrint=!!(renderingIntent&RenderingIntentFlag.PRINT);this.name=name;this.intent=intent;this.usage=usage;this.rbGroups=rbGroups}get visible(){if(this.#userSet){return this.#visible}if(!this.#visible){return false}const{print:print,view:view}=this.usage;if(this.#isDisplay){return view?.viewState!==\"OFF\"}else if(this.#isPrint){return print?.printState!==\"OFF\"}return true}_setVisible(internal,visible,userSet=false){if(internal!==INTERNAL){unreachable(\"Internal method `_setVisible` called.\")}this.#userSet=userSet;this.#visible=visible}}class OptionalContentConfig{#cachedGetHash=null;#groups=new Map;#initialHash=null;#order=null;constructor(data,renderingIntent=RenderingIntentFlag.DISPLAY){this.renderingIntent=renderingIntent;this.name=null;this.creator=null;if(data===null){return}this.name=data.name;this.creator=data.creator;this.#order=data.order;for(const group of data.groups){this.#groups.set(group.id,new OptionalContentGroup(renderingIntent,group))}if(data.baseState===\"OFF\"){for(const group of this.#groups.values()){group._setVisible(INTERNAL,false)}}for(const on of data.on){this.#groups.get(on)._setVisible(INTERNAL,true)}for(const off of data.off){this.#groups.get(off)._setVisible(INTERNAL,false)}this.#initialHash=this.getHash()}#evaluateVisibilityExpression(array){const length=array.length;if(length<2){return true}const operator=array[0];for(let i=1;i<length;i++){const element=array[i];let state;if(Array.isArray(element)){state=this.#evaluateVisibilityExpression(element)}else if(this.#groups.has(element)){state=this.#groups.get(element).visible}else{warn(`Optional content group not found: ${element}`);return true}switch(operator){case\"And\":if(!state){return false}break;case\"Or\":if(state){return true}break;case\"Not\":return!state;default:return true}}return operator===\"And\"}isVisible(group){if(this.#groups.size===0){return true}if(!group){info(\"Optional content group not defined.\");return true}if(group.type===\"OCG\"){if(!this.#groups.has(group.id)){warn(`Optional content group not found: ${group.id}`);return true}return this.#groups.get(group.id).visible}else if(group.type===\"OCMD\"){if(group.expression){return this.#evaluateVisibilityExpression(group.expression)}if(!group.policy||group.policy===\"AnyOn\"){for(const id of group.ids){if(!this.#groups.has(id)){warn(`Optional content group not found: ${id}`);return true}if(this.#groups.get(id).visible){return true}}return false}else if(group.policy===\"AllOn\"){for(const id of group.ids){if(!this.#groups.has(id)){warn(`Optional content group not found: ${id}`);return true}if(!this.#groups.get(id).visible){return false}}return true}else if(group.policy===\"AnyOff\"){for(const id of group.ids){if(!this.#groups.has(id)){warn(`Optional content group not found: ${id}`);return true}if(!this.#groups.get(id).visible){return true}}return false}else if(group.policy===\"AllOff\"){for(const id of group.ids){if(!this.#groups.has(id)){warn(`Optional content group not found: ${id}`);return true}if(this.#groups.get(id).visible){return false}}return true}warn(`Unknown optional content policy ${group.policy}.`);return true}warn(`Unknown group type ${group.type}.`);return true}setVisibility(id,visible=true,preserveRB=true){const group=this.#groups.get(id);if(!group){warn(`Optional content group not found: ${id}`);return}if(preserveRB&&visible&&group.rbGroups.length){for(const rbGroup of group.rbGroups){for(const otherId of rbGroup){if(otherId!==id){this.#groups.get(otherId)?._setVisible(INTERNAL,false,true)}}}}group._setVisible(INTERNAL,!!visible,true);this.#cachedGetHash=null}setOCGState({state:state,preserveRB:preserveRB}){let operator;for(const elem of state){switch(elem){case\"ON\":case\"OFF\":case\"Toggle\":operator=elem;continue}const group=this.#groups.get(elem);if(!group){continue}switch(operator){case\"ON\":this.setVisibility(elem,true,preserveRB);break;case\"OFF\":this.setVisibility(elem,false,preserveRB);break;case\"Toggle\":this.setVisibility(elem,!group.visible,preserveRB);break}}this.#cachedGetHash=null}get hasInitialVisibility(){return this.#initialHash===null||this.getHash()===this.#initialHash}getOrder(){if(!this.#groups.size){return null}if(this.#order){return this.#order.slice()}return[...this.#groups.keys()]}getGroup(id){return this.#groups.get(id)||null}getHash(){if(this.#cachedGetHash!==null){return this.#cachedGetHash}const hash=new MurmurHash3_64;for(const[id,group]of this.#groups){hash.update(`${id}:${group.visible}`)}return this.#cachedGetHash=hash.hexdigest()}[Symbol.iterator](){return this.#groups.entries()}}class PDFDataTransportStream{constructor(pdfDataRangeTransport,{disableRange:disableRange=false,disableStream:disableStream=false}){assert(pdfDataRangeTransport,'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.');const{length:length,initialData:initialData,progressiveDone:progressiveDone,contentDispositionFilename:contentDispositionFilename}=pdfDataRangeTransport;this._queuedChunks=[];this._progressiveDone=progressiveDone;this._contentDispositionFilename=contentDispositionFilename;if(initialData?.length>0){const buffer=initialData instanceof Uint8Array&&initialData.byteLength===initialData.buffer.byteLength?initialData.buffer:new Uint8Array(initialData).buffer;this._queuedChunks.push(buffer)}this._pdfDataRangeTransport=pdfDataRangeTransport;this._isStreamingSupported=!disableStream;this._isRangeSupported=!disableRange;this._contentLength=length;this._fullRequestReader=null;this._rangeReaders=[];pdfDataRangeTransport.addRangeListener(((begin,chunk)=>{this._onReceiveData({begin:begin,chunk:chunk})}));pdfDataRangeTransport.addProgressListener(((loaded,total)=>{this._onProgress({loaded:loaded,total:total})}));pdfDataRangeTransport.addProgressiveReadListener((chunk=>{this._onReceiveData({chunk:chunk})}));pdfDataRangeTransport.addProgressiveDoneListener((()=>{this._onProgressiveDone()}));pdfDataRangeTransport.transportReady()}_onReceiveData({begin:begin,chunk:chunk}){const buffer=chunk instanceof Uint8Array&&chunk.byteLength===chunk.buffer.byteLength?chunk.buffer:new Uint8Array(chunk).buffer;if(begin===undefined){if(this._fullRequestReader){this._fullRequestReader._enqueue(buffer)}else{this._queuedChunks.push(buffer)}}else{const found=this._rangeReaders.some((function(rangeReader){if(rangeReader._begin!==begin){return false}rangeReader._enqueue(buffer);return true}));assert(found,\"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\")}}get _progressiveDataLength(){return this._fullRequestReader?._loaded??0}_onProgress(evt){if(evt.total===undefined){this._rangeReaders[0]?.onProgress?.({loaded:evt.loaded})}else{this._fullRequestReader?.onProgress?.({loaded:evt.loaded,total:evt.total})}}_onProgressiveDone(){this._fullRequestReader?.progressiveDone();this._progressiveDone=true}_removeRangeReader(reader){const i=this._rangeReaders.indexOf(reader);if(i>=0){this._rangeReaders.splice(i,1)}}getFullReader(){assert(!this._fullRequestReader,\"PDFDataTransportStream.getFullReader can only be called once.\");const queuedChunks=this._queuedChunks;this._queuedChunks=null;return new PDFDataTransportStreamReader(this,queuedChunks,this._progressiveDone,this._contentDispositionFilename)}getRangeReader(begin,end){if(end<=this._progressiveDataLength){return null}const reader=new PDFDataTransportStreamRangeReader(this,begin,end);this._pdfDataRangeTransport.requestDataRange(begin,end);this._rangeReaders.push(reader);return reader}cancelAllRequests(reason){this._fullRequestReader?.cancel(reason);for(const reader of this._rangeReaders.slice(0)){reader.cancel(reason)}this._pdfDataRangeTransport.abort()}}class PDFDataTransportStreamReader{constructor(stream,queuedChunks,progressiveDone=false,contentDispositionFilename=null){this._stream=stream;this._done=progressiveDone||false;this._filename=isPdfFile(contentDispositionFilename)?contentDispositionFilename:null;this._queuedChunks=queuedChunks||[];this._loaded=0;for(const chunk of this._queuedChunks){this._loaded+=chunk.byteLength}this._requests=[];this._headersReady=Promise.resolve();stream._fullRequestReader=this;this.onProgress=null}_enqueue(chunk){if(this._done){return}if(this._requests.length>0){const requestCapability=this._requests.shift();requestCapability.resolve({value:chunk,done:false})}else{this._queuedChunks.push(chunk)}this._loaded+=chunk.byteLength}get headersReady(){return this._headersReady}get filename(){return this._filename}get isRangeSupported(){return this._stream._isRangeSupported}get isStreamingSupported(){return this._stream._isStreamingSupported}get contentLength(){return this._stream._contentLength}async read(){if(this._queuedChunks.length>0){const chunk=this._queuedChunks.shift();return{value:chunk,done:false}}if(this._done){return{value:undefined,done:true}}const requestCapability=Promise.withResolvers();this._requests.push(requestCapability);return requestCapability.promise}cancel(reason){this._done=true;for(const requestCapability of this._requests){requestCapability.resolve({value:undefined,done:true})}this._requests.length=0}progressiveDone(){if(this._done){return}this._done=true}}class PDFDataTransportStreamRangeReader{constructor(stream,begin,end){this._stream=stream;this._begin=begin;this._end=end;this._queuedChunk=null;this._requests=[];this._done=false;this.onProgress=null}_enqueue(chunk){if(this._done){return}if(this._requests.length===0){this._queuedChunk=chunk}else{const requestsCapability=this._requests.shift();requestsCapability.resolve({value:chunk,done:false});for(const requestCapability of this._requests){requestCapability.resolve({value:undefined,done:true})}this._requests.length=0}this._done=true;this._stream._removeRangeReader(this)}get isStreamingSupported(){return false}async read(){if(this._queuedChunk){const chunk=this._queuedChunk;this._queuedChunk=null;return{value:chunk,done:false}}if(this._done){return{value:undefined,done:true}}const requestCapability=Promise.withResolvers();this._requests.push(requestCapability);return requestCapability.promise}cancel(reason){this._done=true;for(const requestCapability of this._requests){requestCapability.resolve({value:undefined,done:true})}this._requests.length=0;this._stream._removeRangeReader(this)}}function getFilenameFromContentDispositionHeader(contentDisposition){let needsEncodingFixup=true;let tmp=toParamRegExp(\"filename\\\\*\",\"i\").exec(contentDisposition);if(tmp){tmp=tmp[1];let filename=rfc2616unquote(tmp);filename=unescape(filename);filename=rfc5987decode(filename);filename=rfc2047decode(filename);return fixupEncoding(filename)}tmp=rfc2231getparam(contentDisposition);if(tmp){const filename=rfc2047decode(tmp);return fixupEncoding(filename)}tmp=toParamRegExp(\"filename\",\"i\").exec(contentDisposition);if(tmp){tmp=tmp[1];let filename=rfc2616unquote(tmp);filename=rfc2047decode(filename);return fixupEncoding(filename)}function toParamRegExp(attributePattern,flags){return new RegExp(\"(?:^|;)\\\\s*\"+attributePattern+\"\\\\s*=\\\\s*\"+\"(\"+'[^\";\\\\s][^;\\\\s]*'+\"|\"+'\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?'+\")\",flags)}function textdecode(encoding,value){if(encoding){if(!/^[\\x00-\\xFF]+$/.test(value)){return value}try{const decoder=new TextDecoder(encoding,{fatal:true});const buffer=stringToBytes(value);value=decoder.decode(buffer);needsEncodingFixup=false}catch{}}return value}function fixupEncoding(value){if(needsEncodingFixup&&/[\\x80-\\xff]/.test(value)){value=textdecode(\"utf-8\",value);if(needsEncodingFixup){value=textdecode(\"iso-8859-1\",value)}}return value}function rfc2231getparam(contentDispositionStr){const matches=[];let match;const iter=toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\",\"ig\");while((match=iter.exec(contentDispositionStr))!==null){let[,n,quot,part]=match;n=parseInt(n,10);if(n in matches){if(n===0){break}continue}matches[n]=[quot,part]}const parts=[];for(let n=0;n<matches.length;++n){if(!(n in matches)){break}let[quot,part]=matches[n];part=rfc2616unquote(part);if(quot){part=unescape(part);if(n===0){part=rfc5987decode(part)}}parts.push(part)}return parts.join(\"\")}function rfc2616unquote(value){if(value.startsWith('\"')){const parts=value.slice(1).split('\\\\\"');for(let i=0;i<parts.length;++i){const quotindex=parts[i].indexOf('\"');if(quotindex!==-1){parts[i]=parts[i].slice(0,quotindex);parts.length=i+1}parts[i]=parts[i].replaceAll(/\\\\(.)/g,\"$1\")}value=parts.join('\"')}return value}function rfc5987decode(extvalue){const encodingend=extvalue.indexOf(\"'\");if(encodingend===-1){return extvalue}const encoding=extvalue.slice(0,encodingend);const langvalue=extvalue.slice(encodingend+1);const value=langvalue.replace(/^[^']*'/,\"\");return textdecode(encoding,value)}function rfc2047decode(value){if(!value.startsWith(\"=?\")||/[\\x00-\\x19\\x80-\\xff]/.test(value)){return value}return value.replaceAll(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,(function(matches,charset,encoding,text){if(encoding===\"q\"||encoding===\"Q\"){text=text.replaceAll(\"_\",\" \");text=text.replaceAll(/=([0-9a-fA-F]{2})/g,(function(match,hex){return String.fromCharCode(parseInt(hex,16))}));return textdecode(charset,text)}try{text=atob(text)}catch{}return textdecode(charset,text)}))}return\"\"}function createHeaders(isHttp,httpHeaders){const headers=new Headers;if(!isHttp||!httpHeaders||typeof httpHeaders!==\"object\"){return headers}for(const key in httpHeaders){const val=httpHeaders[key];if(val!==undefined){headers.append(key,val)}}return headers}function getResponseOrigin(url){return URL.parse(url)?.origin??null}function validateRangeRequestCapabilities({responseHeaders:responseHeaders,isHttp:isHttp,rangeChunkSize:rangeChunkSize,disableRange:disableRange}){const returnValues={allowRangeRequests:false,suggestedLength:undefined};const length=parseInt(responseHeaders.get(\"Content-Length\"),10);if(!Number.isInteger(length)){return returnValues}returnValues.suggestedLength=length;if(length<=2*rangeChunkSize){return returnValues}if(disableRange||!isHttp){return returnValues}if(responseHeaders.get(\"Accept-Ranges\")!==\"bytes\"){return returnValues}const contentEncoding=responseHeaders.get(\"Content-Encoding\")||\"identity\";if(contentEncoding!==\"identity\"){return returnValues}returnValues.allowRangeRequests=true;return returnValues}function extractFilenameFromHeader(responseHeaders){const contentDisposition=responseHeaders.get(\"Content-Disposition\");if(contentDisposition){let filename=getFilenameFromContentDispositionHeader(contentDisposition);if(filename.includes(\"%\")){try{filename=decodeURIComponent(filename)}catch{}}if(isPdfFile(filename)){return filename}}return null}function createResponseError(status,url){return new ResponseException(`Unexpected server response (${status}) while retrieving PDF \"${url}\".`,status,status===404||status===0&&url.startsWith(\"file:\"))}function validateResponseStatus(status){return status===200||status===206}function createFetchOptions(headers,withCredentials,abortController){return{method:\"GET\",headers:headers,signal:abortController.signal,mode:\"cors\",credentials:withCredentials?\"include\":\"same-origin\",redirect:\"follow\"}}function getArrayBuffer(val){if(val instanceof Uint8Array){return val.buffer}if(val instanceof ArrayBuffer){return val}warn(`getArrayBuffer - unexpected data format: ${val}`);return new Uint8Array(val).buffer}class PDFFetchStream{_responseOrigin=null;constructor(source){this.source=source;this.isHttp=/^https?:/i.test(source.url);this.headers=createHeaders(this.isHttp,source.httpHeaders);this._fullRequestReader=null;this._rangeRequestReaders=[]}get _progressiveDataLength(){return this._fullRequestReader?._loaded??0}getFullReader(){assert(!this._fullRequestReader,\"PDFFetchStream.getFullReader can only be called once.\");this._fullRequestReader=new PDFFetchStreamReader(this);return this._fullRequestReader}getRangeReader(begin,end){if(end<=this._progressiveDataLength){return null}const reader=new PDFFetchStreamRangeReader(this,begin,end);this._rangeRequestReaders.push(reader);return reader}cancelAllRequests(reason){this._fullRequestReader?.cancel(reason);for(const reader of this._rangeRequestReaders.slice(0)){reader.cancel(reason)}}}class PDFFetchStreamReader{constructor(stream){this._stream=stream;this._reader=null;this._loaded=0;this._filename=null;const source=stream.source;this._withCredentials=source.withCredentials||false;this._contentLength=source.length;this._headersCapability=Promise.withResolvers();this._disableRange=source.disableRange||false;this._rangeChunkSize=source.rangeChunkSize;if(!this._rangeChunkSize&&!this._disableRange){this._disableRange=true}this._abortController=new AbortController;this._isStreamingSupported=!source.disableStream;this._isRangeSupported=!source.disableRange;const headers=new Headers(stream.headers);const url=source.url;fetch(url,createFetchOptions(headers,this._withCredentials,this._abortController)).then((response=>{stream._responseOrigin=getResponseOrigin(response.url);if(!validateResponseStatus(response.status)){throw createResponseError(response.status,url)}this._reader=response.body.getReader();this._headersCapability.resolve();const responseHeaders=response.headers;const{allowRangeRequests:allowRangeRequests,suggestedLength:suggestedLength}=validateRangeRequestCapabilities({responseHeaders:responseHeaders,isHttp:stream.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange});this._isRangeSupported=allowRangeRequests;this._contentLength=suggestedLength||this._contentLength;this._filename=extractFilenameFromHeader(responseHeaders);if(!this._isStreamingSupported&&this._isRangeSupported){this.cancel(new AbortException(\"Streaming is disabled.\"))}})).catch(this._headersCapability.reject);this.onProgress=null}get headersReady(){return this._headersCapability.promise}get filename(){return this._filename}get contentLength(){return this._contentLength}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}async read(){await this._headersCapability.promise;const{value:value,done:done}=await this._reader.read();if(done){return{value:value,done:done}}this._loaded+=value.byteLength;this.onProgress?.({loaded:this._loaded,total:this._contentLength});return{value:getArrayBuffer(value),done:false}}cancel(reason){this._reader?.cancel(reason);this._abortController.abort()}}class PDFFetchStreamRangeReader{constructor(stream,begin,end){this._stream=stream;this._reader=null;this._loaded=0;const source=stream.source;this._withCredentials=source.withCredentials||false;this._readCapability=Promise.withResolvers();this._isStreamingSupported=!source.disableStream;this._abortController=new AbortController;const headers=new Headers(stream.headers);headers.append(\"Range\",`bytes=${begin}-${end-1}`);const url=source.url;fetch(url,createFetchOptions(headers,this._withCredentials,this._abortController)).then((response=>{const responseOrigin=getResponseOrigin(response.url);if(responseOrigin!==stream._responseOrigin){throw new Error(`Expected range response-origin \"${responseOrigin}\" to match \"${stream._responseOrigin}\".`)}if(!validateResponseStatus(response.status)){throw createResponseError(response.status,url)}this._readCapability.resolve();this._reader=response.body.getReader()})).catch(this._readCapability.reject);this.onProgress=null}get isStreamingSupported(){return this._isStreamingSupported}async read(){await this._readCapability.promise;const{value:value,done:done}=await this._reader.read();if(done){return{value:value,done:done}}this._loaded+=value.byteLength;this.onProgress?.({loaded:this._loaded});return{value:getArrayBuffer(value),done:false}}cancel(reason){this._reader?.cancel(reason);this._abortController.abort()}}const OK_RESPONSE=200;const PARTIAL_CONTENT_RESPONSE=206;function network_getArrayBuffer(xhr){const data=xhr.response;if(typeof data!==\"string\"){return data}return stringToBytes(data).buffer}class NetworkManager{_responseOrigin=null;constructor({url:url,httpHeaders:httpHeaders,withCredentials:withCredentials}){this.url=url;this.isHttp=/^https?:/i.test(url);this.headers=createHeaders(this.isHttp,httpHeaders);this.withCredentials=withCredentials||false;this.currXhrId=0;this.pendingRequests=Object.create(null)}request(args){const xhr=new XMLHttpRequest;const xhrId=this.currXhrId++;const pendingRequest=this.pendingRequests[xhrId]={xhr:xhr};xhr.open(\"GET\",this.url);xhr.withCredentials=this.withCredentials;for(const[key,val]of this.headers){xhr.setRequestHeader(key,val)}if(this.isHttp&&\"begin\"in args&&\"end\"in args){xhr.setRequestHeader(\"Range\",`bytes=${args.begin}-${args.end-1}`);pendingRequest.expectedStatus=PARTIAL_CONTENT_RESPONSE}else{pendingRequest.expectedStatus=OK_RESPONSE}xhr.responseType=\"arraybuffer\";assert(args.onError,\"Expected `onError` callback to be provided.\");xhr.onerror=()=>{args.onError(xhr.status)};xhr.onreadystatechange=this.onStateChange.bind(this,xhrId);xhr.onprogress=this.onProgress.bind(this,xhrId);pendingRequest.onHeadersReceived=args.onHeadersReceived;pendingRequest.onDone=args.onDone;pendingRequest.onError=args.onError;pendingRequest.onProgress=args.onProgress;xhr.send(null);return xhrId}onProgress(xhrId,evt){const pendingRequest=this.pendingRequests[xhrId];if(!pendingRequest){return}pendingRequest.onProgress?.(evt)}onStateChange(xhrId,evt){const pendingRequest=this.pendingRequests[xhrId];if(!pendingRequest){return}const xhr=pendingRequest.xhr;if(xhr.readyState>=2&&pendingRequest.onHeadersReceived){pendingRequest.onHeadersReceived();delete pendingRequest.onHeadersReceived}if(xhr.readyState!==4){return}if(!(xhrId in this.pendingRequests)){return}delete this.pendingRequests[xhrId];if(xhr.status===0&&this.isHttp){pendingRequest.onError(xhr.status);return}const xhrStatus=xhr.status||OK_RESPONSE;const ok_response_on_range_request=xhrStatus===OK_RESPONSE&&pendingRequest.expectedStatus===PARTIAL_CONTENT_RESPONSE;if(!ok_response_on_range_request&&xhrStatus!==pendingRequest.expectedStatus){pendingRequest.onError(xhr.status);return}const chunk=network_getArrayBuffer(xhr);if(xhrStatus===PARTIAL_CONTENT_RESPONSE){const rangeHeader=xhr.getResponseHeader(\"Content-Range\");const matches=/bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);if(matches){pendingRequest.onDone({begin:parseInt(matches[1],10),chunk:chunk})}else{warn(`Missing or invalid \"Content-Range\" header.`);pendingRequest.onError(0)}}else if(chunk){pendingRequest.onDone({begin:0,chunk:chunk})}else{pendingRequest.onError(xhr.status)}}getRequestXhr(xhrId){return this.pendingRequests[xhrId].xhr}isPendingRequest(xhrId){return xhrId in this.pendingRequests}abortRequest(xhrId){const xhr=this.pendingRequests[xhrId].xhr;delete this.pendingRequests[xhrId];xhr.abort()}}class PDFNetworkStream{constructor(source){this._source=source;this._manager=new NetworkManager(source);this._rangeChunkSize=source.rangeChunkSize;this._fullRequestReader=null;this._rangeRequestReaders=[]}_onRangeRequestReaderClosed(reader){const i=this._rangeRequestReaders.indexOf(reader);if(i>=0){this._rangeRequestReaders.splice(i,1)}}getFullReader(){assert(!this._fullRequestReader,\"PDFNetworkStream.getFullReader can only be called once.\");this._fullRequestReader=new PDFNetworkStreamFullRequestReader(this._manager,this._source);return this._fullRequestReader}getRangeReader(begin,end){const reader=new PDFNetworkStreamRangeRequestReader(this._manager,begin,end);reader.onClosed=this._onRangeRequestReaderClosed.bind(this);this._rangeRequestReaders.push(reader);return reader}cancelAllRequests(reason){this._fullRequestReader?.cancel(reason);for(const reader of this._rangeRequestReaders.slice(0)){reader.cancel(reason)}}}class PDFNetworkStreamFullRequestReader{constructor(manager,source){this._manager=manager;this._url=source.url;this._fullRequestId=manager.request({onHeadersReceived:this._onHeadersReceived.bind(this),onDone:this._onDone.bind(this),onError:this._onError.bind(this),onProgress:this._onProgress.bind(this)});this._headersCapability=Promise.withResolvers();this._disableRange=source.disableRange||false;this._contentLength=source.length;this._rangeChunkSize=source.rangeChunkSize;if(!this._rangeChunkSize&&!this._disableRange){this._disableRange=true}this._isStreamingSupported=false;this._isRangeSupported=false;this._cachedChunks=[];this._requests=[];this._done=false;this._storedError=undefined;this._filename=null;this.onProgress=null}_onHeadersReceived(){const fullRequestXhrId=this._fullRequestId;const fullRequestXhr=this._manager.getRequestXhr(fullRequestXhrId);this._manager._responseOrigin=getResponseOrigin(fullRequestXhr.responseURL);const rawResponseHeaders=fullRequestXhr.getAllResponseHeaders();const responseHeaders=new Headers(rawResponseHeaders?rawResponseHeaders.trimStart().replace(/[^\\S ]+$/,\"\").split(/[\\r\\n]+/).map((x=>{const[key,...val]=x.split(\": \");return[key,val.join(\": \")]})):[]);const{allowRangeRequests:allowRangeRequests,suggestedLength:suggestedLength}=validateRangeRequestCapabilities({responseHeaders:responseHeaders,isHttp:this._manager.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange});if(allowRangeRequests){this._isRangeSupported=true}this._contentLength=suggestedLength||this._contentLength;this._filename=extractFilenameFromHeader(responseHeaders);if(this._isRangeSupported){this._manager.abortRequest(fullRequestXhrId)}this._headersCapability.resolve()}_onDone(data){if(data){if(this._requests.length>0){const requestCapability=this._requests.shift();requestCapability.resolve({value:data.chunk,done:false})}else{this._cachedChunks.push(data.chunk)}}this._done=true;if(this._cachedChunks.length>0){return}for(const requestCapability of this._requests){requestCapability.resolve({value:undefined,done:true})}this._requests.length=0}_onError(status){this._storedError=createResponseError(status,this._url);this._headersCapability.reject(this._storedError);for(const requestCapability of this._requests){requestCapability.reject(this._storedError)}this._requests.length=0;this._cachedChunks.length=0}_onProgress(evt){this.onProgress?.({loaded:evt.loaded,total:evt.lengthComputable?evt.total:this._contentLength})}get filename(){return this._filename}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}get contentLength(){return this._contentLength}get headersReady(){return this._headersCapability.promise}async read(){await this._headersCapability.promise;if(this._storedError){throw this._storedError}if(this._cachedChunks.length>0){const chunk=this._cachedChunks.shift();return{value:chunk,done:false}}if(this._done){return{value:undefined,done:true}}const requestCapability=Promise.withResolvers();this._requests.push(requestCapability);return requestCapability.promise}cancel(reason){this._done=true;this._headersCapability.reject(reason);for(const requestCapability of this._requests){requestCapability.resolve({value:undefined,done:true})}this._requests.length=0;if(this._manager.isPendingRequest(this._fullRequestId)){this._manager.abortRequest(this._fullRequestId)}this._fullRequestReader=null}}class PDFNetworkStreamRangeRequestReader{constructor(manager,begin,end){this._manager=manager;this._url=manager.url;this._requestId=manager.request({begin:begin,end:end,onHeadersReceived:this._onHeadersReceived.bind(this),onDone:this._onDone.bind(this),onError:this._onError.bind(this),onProgress:this._onProgress.bind(this)});this._requests=[];this._queuedChunk=null;this._done=false;this._storedError=undefined;this.onProgress=null;this.onClosed=null}_onHeadersReceived(){const responseOrigin=getResponseOrigin(this._manager.getRequestXhr(this._requestId)?.responseURL);if(responseOrigin!==this._manager._responseOrigin){this._storedError=new Error(`Expected range response-origin \"${responseOrigin}\" to match \"${this._manager._responseOrigin}\".`);this._onError(0)}}_close(){this.onClosed?.(this)}_onDone(data){const chunk=data.chunk;if(this._requests.length>0){const requestCapability=this._requests.shift();requestCapability.resolve({value:chunk,done:false})}else{this._queuedChunk=chunk}this._done=true;for(const requestCapability of this._requests){requestCapability.resolve({value:undefined,done:true})}this._requests.length=0;this._close()}_onError(status){this._storedError??=createResponseError(status,this._url);for(const requestCapability of this._requests){requestCapability.reject(this._storedError)}this._requests.length=0;this._queuedChunk=null}_onProgress(evt){if(!this.isStreamingSupported){this.onProgress?.({loaded:evt.loaded})}}get isStreamingSupported(){return false}async read(){if(this._storedError){throw this._storedError}if(this._queuedChunk!==null){const chunk=this._queuedChunk;this._queuedChunk=null;return{value:chunk,done:false}}if(this._done){return{value:undefined,done:true}}const requestCapability=Promise.withResolvers();this._requests.push(requestCapability);return requestCapability.promise}cancel(reason){this._done=true;for(const requestCapability of this._requests){requestCapability.resolve({value:undefined,done:true})}this._requests.length=0;if(this._manager.isPendingRequest(this._requestId)){this._manager.abortRequest(this._requestId)}this._close()}}const urlRegex=/^[a-z][a-z0-9\\-+.]+:/i;function parseUrlOrPath(sourceUrl){if(urlRegex.test(sourceUrl)){return new URL(sourceUrl)}const url=process.getBuiltinModule(\"url\");return new URL(url.pathToFileURL(sourceUrl))}class PDFNodeStream{constructor(source){this.source=source;this.url=parseUrlOrPath(source.url);assert(this.url.protocol===\"file:\",\"PDFNodeStream only supports file:// URLs.\");this._fullRequestReader=null;this._rangeRequestReaders=[]}get _progressiveDataLength(){return this._fullRequestReader?._loaded??0}getFullReader(){assert(!this._fullRequestReader,\"PDFNodeStream.getFullReader can only be called once.\");this._fullRequestReader=new PDFNodeStreamFsFullReader(this);return this._fullRequestReader}getRangeReader(start,end){if(end<=this._progressiveDataLength){return null}const rangeReader=new PDFNodeStreamFsRangeReader(this,start,end);this._rangeRequestReaders.push(rangeReader);return rangeReader}cancelAllRequests(reason){this._fullRequestReader?.cancel(reason);for(const reader of this._rangeRequestReaders.slice(0)){reader.cancel(reason)}}}class PDFNodeStreamFsFullReader{constructor(stream){this._url=stream.url;this._done=false;this._storedError=null;this.onProgress=null;const source=stream.source;this._contentLength=source.length;this._loaded=0;this._filename=null;this._disableRange=source.disableRange||false;this._rangeChunkSize=source.rangeChunkSize;if(!this._rangeChunkSize&&!this._disableRange){this._disableRange=true}this._isStreamingSupported=!source.disableStream;this._isRangeSupported=!source.disableRange;this._readableStream=null;this._readCapability=Promise.withResolvers();this._headersCapability=Promise.withResolvers();const fs=process.getBuiltinModule(\"fs\");fs.promises.lstat(this._url).then((stat=>{this._contentLength=stat.size;this._setReadableStream(fs.createReadStream(this._url));this._headersCapability.resolve()}),(error=>{if(error.code===\"ENOENT\"){error=createResponseError(0,this._url.href)}this._storedError=error;this._headersCapability.reject(error)}))}get headersReady(){return this._headersCapability.promise}get filename(){return this._filename}get contentLength(){return this._contentLength}get isRangeSupported(){return this._isRangeSupported}get isStreamingSupported(){return this._isStreamingSupported}async read(){await this._readCapability.promise;if(this._done){return{value:undefined,done:true}}if(this._storedError){throw this._storedError}const chunk=this._readableStream.read();if(chunk===null){this._readCapability=Promise.withResolvers();return this.read()}this._loaded+=chunk.length;this.onProgress?.({loaded:this._loaded,total:this._contentLength});const buffer=new Uint8Array(chunk).buffer;return{value:buffer,done:false}}cancel(reason){if(!this._readableStream){this._error(reason);return}this._readableStream.destroy(reason)}_error(reason){this._storedError=reason;this._readCapability.resolve()}_setReadableStream(readableStream){this._readableStream=readableStream;readableStream.on(\"readable\",(()=>{this._readCapability.resolve()}));readableStream.on(\"end\",(()=>{readableStream.destroy();this._done=true;this._readCapability.resolve()}));readableStream.on(\"error\",(reason=>{this._error(reason)}));if(!this._isStreamingSupported&&this._isRangeSupported){this._error(new AbortException(\"streaming is disabled\"))}if(this._storedError){this._readableStream.destroy(this._storedError)}}}class PDFNodeStreamFsRangeReader{constructor(stream,start,end){this._url=stream.url;this._done=false;this._storedError=null;this.onProgress=null;this._loaded=0;this._readableStream=null;this._readCapability=Promise.withResolvers();const source=stream.source;this._isStreamingSupported=!source.disableStream;const fs=process.getBuiltinModule(\"fs\");this._setReadableStream(fs.createReadStream(this._url,{start:start,end:end-1}))}get isStreamingSupported(){return this._isStreamingSupported}async read(){await this._readCapability.promise;if(this._done){return{value:undefined,done:true}}if(this._storedError){throw this._storedError}const chunk=this._readableStream.read();if(chunk===null){this._readCapability=Promise.withResolvers();return this.read()}this._loaded+=chunk.length;this.onProgress?.({loaded:this._loaded});const buffer=new Uint8Array(chunk).buffer;return{value:buffer,done:false}}cancel(reason){if(!this._readableStream){this._error(reason);return}this._readableStream.destroy(reason)}_error(reason){this._storedError=reason;this._readCapability.resolve()}_setReadableStream(readableStream){this._readableStream=readableStream;readableStream.on(\"readable\",(()=>{this._readCapability.resolve()}));readableStream.on(\"end\",(()=>{readableStream.destroy();this._done=true;this._readCapability.resolve()}));readableStream.on(\"error\",(reason=>{this._error(reason)}));if(this._storedError){this._readableStream.destroy(this._storedError)}}}const MAX_TEXT_DIVS_TO_RENDER=1e5;const DEFAULT_FONT_SIZE=30;class TextLayer{#capability=Promise.withResolvers();#container=null;#disableProcessItems=false;#fontInspectorEnabled=!!globalThis.FontInspector?.enabled;#lang=null;#layoutTextParams=null;#pageHeight=0;#pageWidth=0;#reader=null;#rootContainer=null;#rotation=0;#scale=0;#styleCache=Object.create(null);#textContentItemsStr=[];#textContentSource=null;#textDivs=[];#textDivProperties=new WeakMap;#transform=null;static#ascentCache=new Map;static#canvasContexts=new Map;static#canvasCtxFonts=new WeakMap;static#minFontSize=null;static#pendingTextLayers=new Set;constructor({textContentSource:textContentSource,container:container,viewport:viewport}){if(textContentSource instanceof ReadableStream){this.#textContentSource=textContentSource}else if(typeof textContentSource===\"object\"){this.#textContentSource=new ReadableStream({start(controller){controller.enqueue(textContentSource);controller.close()}})}else{throw new Error('No \"textContentSource\" parameter specified.')}this.#container=this.#rootContainer=container;this.#scale=viewport.scale*OutputScale.pixelRatio;this.#rotation=viewport.rotation;this.#layoutTextParams={div:null,properties:null,ctx:null};const{pageWidth:pageWidth,pageHeight:pageHeight,pageX:pageX,pageY:pageY}=viewport.rawDims;this.#transform=[1,0,0,-1,-pageX,pageY+pageHeight];this.#pageWidth=pageWidth;this.#pageHeight=pageHeight;TextLayer.#ensureMinFontSizeComputed();setLayerDimensions(container,viewport);this.#capability.promise.finally((()=>{TextLayer.#pendingTextLayers.delete(this);this.#layoutTextParams=null;this.#styleCache=null})).catch((()=>{}))}static get fontFamilyMap(){const{isWindows:isWindows,isFirefox:isFirefox}=util_FeatureTest.platform;return shadow(this,\"fontFamilyMap\",new Map([[\"sans-serif\",`${isWindows&&isFirefox?\"Calibri, \":\"\"}sans-serif`],[\"monospace\",`${isWindows&&isFirefox?\"Lucida Console, \":\"\"}monospace`]]))}render(){const pump=()=>{this.#reader.read().then((({value:value,done:done})=>{if(done){this.#capability.resolve();return}this.#lang??=value.lang;Object.assign(this.#styleCache,value.styles);this.#processItems(value.items);pump()}),this.#capability.reject)};this.#reader=this.#textContentSource.getReader();TextLayer.#pendingTextLayers.add(this);pump();return this.#capability.promise}update({viewport:viewport,onBefore:onBefore=null}){const scale=viewport.scale*OutputScale.pixelRatio;const rotation=viewport.rotation;if(rotation!==this.#rotation){onBefore?.();this.#rotation=rotation;setLayerDimensions(this.#rootContainer,{rotation:rotation})}if(scale!==this.#scale){onBefore?.();this.#scale=scale;const params={div:null,properties:null,ctx:TextLayer.#getCtx(this.#lang)};for(const div of this.#textDivs){params.properties=this.#textDivProperties.get(div);params.div=div;this.#layout(params)}}}cancel(){const abortEx=new AbortException(\"TextLayer task cancelled.\");this.#reader?.cancel(abortEx).catch((()=>{}));this.#reader=null;this.#capability.reject(abortEx)}get textDivs(){return this.#textDivs}get textContentItemsStr(){return this.#textContentItemsStr}#processItems(items){if(this.#disableProcessItems){return}this.#layoutTextParams.ctx??=TextLayer.#getCtx(this.#lang);const textDivs=this.#textDivs,textContentItemsStr=this.#textContentItemsStr;for(const item of items){if(textDivs.length>MAX_TEXT_DIVS_TO_RENDER){warn(\"Ignoring additional textDivs for performance reasons.\");this.#disableProcessItems=true;return}if(item.str===undefined){if(item.type===\"beginMarkedContentProps\"||item.type===\"beginMarkedContent\"){const parent=this.#container;this.#container=document.createElement(\"span\");this.#container.classList.add(\"markedContent\");if(item.id!==null){this.#container.setAttribute(\"id\",`${item.id}`)}parent.append(this.#container)}else if(item.type===\"endMarkedContent\"){this.#container=this.#container.parentNode}continue}textContentItemsStr.push(item.str);this.#appendText(item)}}#appendText(geom){const textDiv=document.createElement(\"span\");const textDivProperties={angle:0,canvasWidth:0,hasText:geom.str!==\"\",hasEOL:geom.hasEOL,fontSize:0};this.#textDivs.push(textDiv);const tx=Util.transform(this.#transform,geom.transform);let angle=Math.atan2(tx[1],tx[0]);const style=this.#styleCache[geom.fontName];if(style.vertical){angle+=Math.PI/2}let fontFamily=this.#fontInspectorEnabled&&style.fontSubstitution||style.fontFamily;fontFamily=TextLayer.fontFamilyMap.get(fontFamily)||fontFamily;const fontHeight=Math.hypot(tx[2],tx[3]);const fontAscent=fontHeight*TextLayer.#getAscent(fontFamily,style,this.#lang);let left,top;if(angle===0){left=tx[4];top=tx[5]-fontAscent}else{left=tx[4]+fontAscent*Math.sin(angle);top=tx[5]-fontAscent*Math.cos(angle)}const scaleFactorStr=\"calc(var(--total-scale-factor) *\";const divStyle=textDiv.style;if(this.#container===this.#rootContainer){divStyle.left=`${(100*left/this.#pageWidth).toFixed(2)}%`;divStyle.top=`${(100*top/this.#pageHeight).toFixed(2)}%`}else{divStyle.left=`${scaleFactorStr}${left.toFixed(2)}px)`;divStyle.top=`${scaleFactorStr}${top.toFixed(2)}px)`}divStyle.fontSize=`${scaleFactorStr}${(TextLayer.#minFontSize*fontHeight).toFixed(2)}px)`;divStyle.fontFamily=fontFamily;textDivProperties.fontSize=fontHeight;textDiv.setAttribute(\"role\",\"presentation\");textDiv.textContent=geom.str;textDiv.dir=geom.dir;if(this.#fontInspectorEnabled){textDiv.dataset.fontName=style.fontSubstitutionLoadedName||geom.fontName}if(angle!==0){textDivProperties.angle=angle*(180/Math.PI)}let shouldScaleText=false;if(geom.str.length>1){shouldScaleText=true}else if(geom.str!==\" \"&&geom.transform[0]!==geom.transform[3]){const absScaleX=Math.abs(geom.transform[0]),absScaleY=Math.abs(geom.transform[3]);if(absScaleX!==absScaleY&&Math.max(absScaleX,absScaleY)/Math.min(absScaleX,absScaleY)>1.5){shouldScaleText=true}}if(shouldScaleText){textDivProperties.canvasWidth=style.vertical?geom.height:geom.width}this.#textDivProperties.set(textDiv,textDivProperties);this.#layoutTextParams.div=textDiv;this.#layoutTextParams.properties=textDivProperties;this.#layout(this.#layoutTextParams);if(textDivProperties.hasText){this.#container.append(textDiv)}if(textDivProperties.hasEOL){const br=document.createElement(\"br\");br.setAttribute(\"role\",\"presentation\");this.#container.append(br)}}#layout(params){const{div:div,properties:properties,ctx:ctx}=params;const{style:style}=div;let transform=\"\";if(TextLayer.#minFontSize>1){transform=`scale(${1/TextLayer.#minFontSize})`}if(properties.canvasWidth!==0&&properties.hasText){const{fontFamily:fontFamily}=style;const{canvasWidth:canvasWidth,fontSize:fontSize}=properties;TextLayer.#ensureCtxFont(ctx,fontSize*this.#scale,fontFamily);const{width:width}=ctx.measureText(div.textContent);if(width>0){transform=`scaleX(${canvasWidth*this.#scale/width}) ${transform}`}}if(properties.angle!==0){transform=`rotate(${properties.angle}deg) ${transform}`}if(transform.length>0){style.transform=transform}}static cleanup(){if(this.#pendingTextLayers.size>0){return}this.#ascentCache.clear();for(const{canvas:canvas}of this.#canvasContexts.values()){canvas.remove()}this.#canvasContexts.clear()}static#getCtx(lang=null){let ctx=this.#canvasContexts.get(lang||=\"\");if(!ctx){const canvas=document.createElement(\"canvas\");canvas.className=\"hiddenCanvasElement\";canvas.lang=lang;document.body.append(canvas);ctx=canvas.getContext(\"2d\",{alpha:false,willReadFrequently:true});this.#canvasContexts.set(lang,ctx);this.#canvasCtxFonts.set(ctx,{size:0,family:\"\"})}return ctx}static#ensureCtxFont(ctx,size,family){const cached=this.#canvasCtxFonts.get(ctx);if(size===cached.size&&family===cached.family){return}ctx.font=`${size}px ${family}`;cached.size=size;cached.family=family}static#ensureMinFontSizeComputed(){if(this.#minFontSize!==null){return}const div=document.createElement(\"div\");div.style.opacity=0;div.style.lineHeight=1;div.style.fontSize=\"1px\";div.style.position=\"absolute\";div.textContent=\"X\";document.body.append(div);this.#minFontSize=div.getBoundingClientRect().height;div.remove()}static#getAscent(fontFamily,style,lang){const cachedAscent=this.#ascentCache.get(fontFamily);if(cachedAscent){return cachedAscent}const ctx=this.#getCtx(lang);ctx.canvas.width=ctx.canvas.height=DEFAULT_FONT_SIZE;this.#ensureCtxFont(ctx,DEFAULT_FONT_SIZE,fontFamily);const metrics=ctx.measureText(\"\");const ascent=metrics.fontBoundingBoxAscent;const descent=Math.abs(metrics.fontBoundingBoxDescent);ctx.canvas.width=ctx.canvas.height=0;let ratio=.8;if(ascent){ratio=ascent/(ascent+descent)}else{if(util_FeatureTest.platform.isFirefox){warn(\"Enable the `dom.textMetrics.fontBoundingBox.enabled` preference \"+\"in `about:config` to improve TextLayer rendering.\")}if(style.ascent){ratio=style.ascent}else if(style.descent){ratio=1+style.descent}}this.#ascentCache.set(fontFamily,ratio);return ratio}}class XfaText{static textContent(xfa){const items=[];const output={items:items,styles:Object.create(null)};function walk(node){if(!node){return}let str=null;const name=node.name;if(name===\"#text\"){str=node.value}else if(!XfaText.shouldBuildText(name)){return}else if(node?.attributes?.textContent){str=node.attributes.textContent}else if(node.value){str=node.value}if(str!==null){items.push({str:str})}if(!node.children){return}for(const child of node.children){walk(child)}}walk(xfa);return output}static shouldBuildText(name){return!(name===\"textarea\"||name===\"input\"||name===\"option\"||name===\"select\")}}const DEFAULT_RANGE_CHUNK_SIZE=65536;const RENDERING_CANCELLED_TIMEOUT=100;function getDocument(src={}){if(typeof src===\"string\"||src instanceof URL){src={url:src}}else if(src instanceof ArrayBuffer||ArrayBuffer.isView(src)){src={data:src}}const task=new PDFDocumentLoadingTask;const{docId:docId}=task;const url=src.url?getUrlProp(src.url):null;const data=src.data?getDataProp(src.data):null;const httpHeaders=src.httpHeaders||null;const withCredentials=src.withCredentials===true;const password=src.password??null;const rangeTransport=src.range instanceof PDFDataRangeTransport?src.range:null;const rangeChunkSize=Number.isInteger(src.rangeChunkSize)&&src.rangeChunkSize>0?src.rangeChunkSize:DEFAULT_RANGE_CHUNK_SIZE;let worker=src.worker instanceof PDFWorker?src.worker:null;const verbosity=src.verbosity;const docBaseUrl=typeof src.docBaseUrl===\"string\"&&!isDataScheme(src.docBaseUrl)?src.docBaseUrl:null;const cMapUrl=getFactoryUrlProp(src.cMapUrl);const cMapPacked=src.cMapPacked!==false;const CMapReaderFactory=src.CMapReaderFactory||(isNodeJS?NodeCMapReaderFactory:DOMCMapReaderFactory);const iccUrl=getFactoryUrlProp(src.iccUrl);const standardFontDataUrl=getFactoryUrlProp(src.standardFontDataUrl);const StandardFontDataFactory=src.StandardFontDataFactory||(isNodeJS?NodeStandardFontDataFactory:DOMStandardFontDataFactory);const wasmUrl=getFactoryUrlProp(src.wasmUrl);const WasmFactory=src.WasmFactory||(isNodeJS?NodeWasmFactory:DOMWasmFactory);const ignoreErrors=src.stopAtErrors!==true;const maxImageSize=Number.isInteger(src.maxImageSize)&&src.maxImageSize>-1?src.maxImageSize:-1;const isEvalSupported=src.isEvalSupported!==false;const isOffscreenCanvasSupported=typeof src.isOffscreenCanvasSupported===\"boolean\"?src.isOffscreenCanvasSupported:!isNodeJS;const isImageDecoderSupported=typeof src.isImageDecoderSupported===\"boolean\"?src.isImageDecoderSupported:!isNodeJS&&(util_FeatureTest.platform.isFirefox||!globalThis.chrome);const canvasMaxAreaInBytes=Number.isInteger(src.canvasMaxAreaInBytes)?src.canvasMaxAreaInBytes:-1;const disableFontFace=typeof src.disableFontFace===\"boolean\"?src.disableFontFace:isNodeJS;const fontExtraProperties=src.fontExtraProperties===true;const enableXfa=src.enableXfa===true;const ownerDocument=src.ownerDocument||globalThis.document;const disableRange=src.disableRange===true;const disableStream=src.disableStream===true;const disableAutoFetch=src.disableAutoFetch===true;const pdfBug=src.pdfBug===true;const CanvasFactory=src.CanvasFactory||(isNodeJS?NodeCanvasFactory:DOMCanvasFactory);const FilterFactory=src.FilterFactory||(isNodeJS?NodeFilterFactory:DOMFilterFactory);const enableHWA=src.enableHWA===true;const useWasm=src.useWasm!==false;const length=rangeTransport?rangeTransport.length:src.length??NaN;const useSystemFonts=typeof src.useSystemFonts===\"boolean\"?src.useSystemFonts:!isNodeJS&&!disableFontFace;const useWorkerFetch=typeof src.useWorkerFetch===\"boolean\"?src.useWorkerFetch:!!(CMapReaderFactory===DOMCMapReaderFactory&&StandardFontDataFactory===DOMStandardFontDataFactory&&WasmFactory===DOMWasmFactory&&cMapUrl&&standardFontDataUrl&&wasmUrl&&isValidFetchUrl(cMapUrl,document.baseURI)&&isValidFetchUrl(standardFontDataUrl,document.baseURI)&&isValidFetchUrl(wasmUrl,document.baseURI));const styleElement=null;setVerbosityLevel(verbosity);const transportFactory={canvasFactory:new CanvasFactory({ownerDocument:ownerDocument,enableHWA:enableHWA}),filterFactory:new FilterFactory({docId:docId,ownerDocument:ownerDocument}),cMapReaderFactory:useWorkerFetch?null:new CMapReaderFactory({baseUrl:cMapUrl,isCompressed:cMapPacked}),standardFontDataFactory:useWorkerFetch?null:new StandardFontDataFactory({baseUrl:standardFontDataUrl}),wasmFactory:useWorkerFetch?null:new WasmFactory({baseUrl:wasmUrl})};if(!worker){const workerParams={verbosity:verbosity,port:GlobalWorkerOptions.workerPort};worker=workerParams.port?PDFWorker.fromPort(workerParams):new PDFWorker(workerParams);task._worker=worker}const docParams={docId:docId,apiVersion:\"5.2.177\",data:data,password:password,disableAutoFetch:disableAutoFetch,rangeChunkSize:rangeChunkSize,length:length,docBaseUrl:docBaseUrl,enableXfa:enableXfa,evaluatorOptions:{maxImageSize:maxImageSize,disableFontFace:disableFontFace,ignoreErrors:ignoreErrors,isEvalSupported:isEvalSupported,isOffscreenCanvasSupported:isOffscreenCanvasSupported,isImageDecoderSupported:isImageDecoderSupported,canvasMaxAreaInBytes:canvasMaxAreaInBytes,fontExtraProperties:fontExtraProperties,useSystemFonts:useSystemFonts,useWasm:useWasm,useWorkerFetch:useWorkerFetch,cMapUrl:cMapUrl,iccUrl:iccUrl,standardFontDataUrl:standardFontDataUrl,wasmUrl:wasmUrl}};const transportParams={ownerDocument:ownerDocument,pdfBug:pdfBug,styleElement:styleElement,loadingParams:{disableAutoFetch:disableAutoFetch,enableXfa:enableXfa}};worker.promise.then((function(){if(task.destroyed){throw new Error(\"Loading aborted\")}if(worker.destroyed){throw new Error(\"Worker was destroyed\")}const workerIdPromise=worker.messageHandler.sendWithPromise(\"GetDocRequest\",docParams,data?[data.buffer]:null);let networkStream;if(rangeTransport){networkStream=new PDFDataTransportStream(rangeTransport,{disableRange:disableRange,disableStream:disableStream})}else if(!data){if(!url){throw new Error(\"getDocument - no `url` parameter provided.\")}let NetworkStream;if(isNodeJS){if(isValidFetchUrl(url)){if(typeof fetch===\"undefined\"||typeof Response===\"undefined\"||!(\"body\"in Response.prototype)){throw new Error(\"getDocument - the Fetch API was disabled in Node.js, see `--no-experimental-fetch`.\")}NetworkStream=PDFFetchStream}else{NetworkStream=PDFNodeStream}}else{NetworkStream=isValidFetchUrl(url)?PDFFetchStream:PDFNetworkStream}networkStream=new NetworkStream({url:url,length:length,httpHeaders:httpHeaders,withCredentials:withCredentials,rangeChunkSize:rangeChunkSize,disableRange:disableRange,disableStream:disableStream})}return workerIdPromise.then((workerId=>{if(task.destroyed){throw new Error(\"Loading aborted\")}if(worker.destroyed){throw new Error(\"Worker was destroyed\")}const messageHandler=new MessageHandler(docId,workerId,worker.port);const transport=new WorkerTransport(messageHandler,task,networkStream,transportParams,transportFactory);task._transport=transport;messageHandler.send(\"Ready\",null)}))})).catch(task._capability.reject);return task}function getUrlProp(val){if(val instanceof URL){return val.href}if(typeof val===\"string\"){if(isNodeJS){return val}const url=URL.parse(val,window.location);if(url){return url.href}}throw new Error(\"Invalid PDF url data: \"+\"either string or URL-object is expected in the url property.\")}function getDataProp(val){if(isNodeJS&&typeof Buffer!==\"undefined\"&&val instanceof Buffer){throw new Error(\"Please provide binary data as `Uint8Array`, rather than `Buffer`.\")}if(val instanceof Uint8Array&&val.byteLength===val.buffer.byteLength){return val}if(typeof val===\"string\"){return stringToBytes(val)}if(val instanceof ArrayBuffer||ArrayBuffer.isView(val)||typeof val===\"object\"&&!isNaN(val?.length)){return new Uint8Array(val)}throw new Error(\"Invalid PDF binary data: either TypedArray, \"+\"string, or array-like object is expected in the data property.\")}function getFactoryUrlProp(val){if(typeof val!==\"string\"){return null}if(val.endsWith(\"/\")){return val}throw new Error(`Invalid factory url: \"${val}\" must include trailing slash.`)}const isRefProxy=v=>typeof v===\"object\"&&Number.isInteger(v?.num)&&v.num>=0&&Number.isInteger(v?.gen)&&v.gen>=0;const isNameProxy=v=>typeof v===\"object\"&&typeof v?.name===\"string\";const isValidExplicitDest=_isValidExplicitDest.bind(null,isRefProxy,isNameProxy);class PDFDocumentLoadingTask{static#docId=0;_capability=Promise.withResolvers();_transport=null;_worker=null;docId=`d${PDFDocumentLoadingTask.#docId++}`;destroyed=false;onPassword=null;onProgress=null;get promise(){return this._capability.promise}async destroy(){this.destroyed=true;try{if(this._worker?.port){this._worker._pendingDestroy=true}await(this._transport?.destroy())}catch(ex){if(this._worker?.port){delete this._worker._pendingDestroy}throw ex}this._transport=null;this._worker?.destroy();this._worker=null}async getData(){return this._transport.getData()}}class PDFDataRangeTransport{constructor(length,initialData,progressiveDone=false,contentDispositionFilename=null){this.length=length;this.initialData=initialData;this.progressiveDone=progressiveDone;this.contentDispositionFilename=contentDispositionFilename;this._rangeListeners=[];this._progressListeners=[];this._progressiveReadListeners=[];this._progressiveDoneListeners=[];this._readyCapability=Promise.withResolvers()}addRangeListener(listener){this._rangeListeners.push(listener)}addProgressListener(listener){this._progressListeners.push(listener)}addProgressiveReadListener(listener){this._progressiveReadListeners.push(listener)}addProgressiveDoneListener(listener){this._progressiveDoneListeners.push(listener)}onDataRange(begin,chunk){for(const listener of this._rangeListeners){listener(begin,chunk)}}onDataProgress(loaded,total){this._readyCapability.promise.then((()=>{for(const listener of this._progressListeners){listener(loaded,total)}}))}onDataProgressiveRead(chunk){this._readyCapability.promise.then((()=>{for(const listener of this._progressiveReadListeners){listener(chunk)}}))}onDataProgressiveDone(){this._readyCapability.promise.then((()=>{for(const listener of this._progressiveDoneListeners){listener()}}))}transportReady(){this._readyCapability.resolve()}requestDataRange(begin,end){unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\")}abort(){}}class PDFDocumentProxy{constructor(pdfInfo,transport){this._pdfInfo=pdfInfo;this._transport=transport}get annotationStorage(){return this._transport.annotationStorage}get canvasFactory(){return this._transport.canvasFactory}get filterFactory(){return this._transport.filterFactory}get numPages(){return this._pdfInfo.numPages}get fingerprints(){return this._pdfInfo.fingerprints}get isPureXfa(){return shadow(this,\"isPureXfa\",!!this._transport._htmlForXfa)}get allXfaHtml(){return this._transport._htmlForXfa}getPage(pageNumber){return this._transport.getPage(pageNumber)}getPageIndex(ref){return this._transport.getPageIndex(ref)}getDestinations(){return this._transport.getDestinations()}getDestination(id){return this._transport.getDestination(id)}getPageLabels(){return this._transport.getPageLabels()}getPageLayout(){return this._transport.getPageLayout()}getPageMode(){return this._transport.getPageMode()}getViewerPreferences(){return this._transport.getViewerPreferences()}getOpenAction(){return this._transport.getOpenAction()}getAttachments(){return this._transport.getAttachments()}getJSActions(){return this._transport.getDocJSActions()}getOutline(){return this._transport.getOutline()}getOptionalContentConfig({intent:intent=\"display\"}={}){const{renderingIntent:renderingIntent}=this._transport.getRenderingIntent(intent);return this._transport.getOptionalContentConfig(renderingIntent)}getPermissions(){return this._transport.getPermissions()}getMetadata(){return this._transport.getMetadata()}getMarkInfo(){return this._transport.getMarkInfo()}getData(){return this._transport.getData()}saveDocument(){return this._transport.saveDocument()}getDownloadInfo(){return this._transport.downloadInfoCapability.promise}cleanup(keepLoadedFonts=false){return this._transport.startCleanup(keepLoadedFonts||this.isPureXfa)}destroy(){return this.loadingTask.destroy()}cachedPageNumber(ref){return this._transport.cachedPageNumber(ref)}get loadingParams(){return this._transport.loadingParams}get loadingTask(){return this._transport.loadingTask}getFieldObjects(){return this._transport.getFieldObjects()}hasJSActions(){return this._transport.hasJSActions()}getCalculationOrderIds(){return this._transport.getCalculationOrderIds()}}class PDFPageProxy{#pendingCleanup=false;constructor(pageIndex,pageInfo,transport,pdfBug=false){this._pageIndex=pageIndex;this._pageInfo=pageInfo;this._transport=transport;this._stats=pdfBug?new StatTimer:null;this._pdfBug=pdfBug;this.commonObjs=transport.commonObjs;this.objs=new PDFObjects;this._intentStates=new Map;this.destroyed=false}get pageNumber(){return this._pageIndex+1}get rotate(){return this._pageInfo.rotate}get ref(){return this._pageInfo.ref}get userUnit(){return this._pageInfo.userUnit}get view(){return this._pageInfo.view}getViewport({scale:scale,rotation:rotation=this.rotate,offsetX:offsetX=0,offsetY:offsetY=0,dontFlip:dontFlip=false}={}){return new PageViewport({viewBox:this.view,userUnit:this.userUnit,scale:scale,rotation:rotation,offsetX:offsetX,offsetY:offsetY,dontFlip:dontFlip})}getAnnotations({intent:intent=\"display\"}={}){const{renderingIntent:renderingIntent}=this._transport.getRenderingIntent(intent);return this._transport.getAnnotations(this._pageIndex,renderingIntent)}getJSActions(){return this._transport.getPageJSActions(this._pageIndex)}get filterFactory(){return this._transport.filterFactory}get isPureXfa(){return shadow(this,\"isPureXfa\",!!this._transport._htmlForXfa)}async getXfa(){return this._transport._htmlForXfa?.children[this._pageIndex]||null}render({canvasContext:canvasContext,viewport:viewport,intent:intent=\"display\",annotationMode:annotationMode=AnnotationMode.ENABLE,transform:transform=null,background:background=null,optionalContentConfigPromise:optionalContentConfigPromise=null,annotationCanvasMap:annotationCanvasMap=null,pageColors:pageColors=null,printAnnotationStorage:printAnnotationStorage=null,isEditing:isEditing=false}){this._stats?.time(\"Overall\");const intentArgs=this._transport.getRenderingIntent(intent,annotationMode,printAnnotationStorage,isEditing);const{renderingIntent:renderingIntent,cacheKey:cacheKey}=intentArgs;this.#pendingCleanup=false;optionalContentConfigPromise||=this._transport.getOptionalContentConfig(renderingIntent);let intentState=this._intentStates.get(cacheKey);if(!intentState){intentState=Object.create(null);this._intentStates.set(cacheKey,intentState)}if(intentState.streamReaderCancelTimeout){clearTimeout(intentState.streamReaderCancelTimeout);intentState.streamReaderCancelTimeout=null}const intentPrint=!!(renderingIntent&RenderingIntentFlag.PRINT);if(!intentState.displayReadyCapability){intentState.displayReadyCapability=Promise.withResolvers();intentState.operatorList={fnArray:[],argsArray:[],lastChunk:false,separateAnnots:null};this._stats?.time(\"Page Request\");this._pumpOperatorList(intentArgs)}const complete=error=>{intentState.renderTasks.delete(internalRenderTask);if(intentPrint){this.#pendingCleanup=true}this.#tryCleanup();if(error){internalRenderTask.capability.reject(error);this._abortOperatorList({intentState:intentState,reason:error instanceof Error?error:new Error(error)})}else{internalRenderTask.capability.resolve()}if(this._stats){this._stats.timeEnd(\"Rendering\");this._stats.timeEnd(\"Overall\");if(globalThis.Stats?.enabled){globalThis.Stats.add(this.pageNumber,this._stats)}}};const internalRenderTask=new InternalRenderTask({callback:complete,params:{canvasContext:canvasContext,viewport:viewport,transform:transform,background:background},objs:this.objs,commonObjs:this.commonObjs,annotationCanvasMap:annotationCanvasMap,operatorList:intentState.operatorList,pageIndex:this._pageIndex,canvasFactory:this._transport.canvasFactory,filterFactory:this._transport.filterFactory,useRequestAnimationFrame:!intentPrint,pdfBug:this._pdfBug,pageColors:pageColors});(intentState.renderTasks||=new Set).add(internalRenderTask);const renderTask=internalRenderTask.task;Promise.all([intentState.displayReadyCapability.promise,optionalContentConfigPromise]).then((([transparency,optionalContentConfig])=>{if(this.destroyed){complete();return}this._stats?.time(\"Rendering\");if(!(optionalContentConfig.renderingIntent&renderingIntent)){throw new Error(\"Must use the same `intent`-argument when calling the `PDFPageProxy.render` \"+\"and `PDFDocumentProxy.getOptionalContentConfig` methods.\")}internalRenderTask.initializeGraphics({transparency:transparency,optionalContentConfig:optionalContentConfig});internalRenderTask.operatorListChanged()})).catch(complete);return renderTask}getOperatorList({intent:intent=\"display\",annotationMode:annotationMode=AnnotationMode.ENABLE,printAnnotationStorage:printAnnotationStorage=null,isEditing:isEditing=false}={}){function operatorListChanged(){if(intentState.operatorList.lastChunk){intentState.opListReadCapability.resolve(intentState.operatorList);intentState.renderTasks.delete(opListTask)}}const intentArgs=this._transport.getRenderingIntent(intent,annotationMode,printAnnotationStorage,isEditing,true);let intentState=this._intentStates.get(intentArgs.cacheKey);if(!intentState){intentState=Object.create(null);this._intentStates.set(intentArgs.cacheKey,intentState)}let opListTask;if(!intentState.opListReadCapability){opListTask=Object.create(null);opListTask.operatorListChanged=operatorListChanged;intentState.opListReadCapability=Promise.withResolvers();(intentState.renderTasks||=new Set).add(opListTask);intentState.operatorList={fnArray:[],argsArray:[],lastChunk:false,separateAnnots:null};this._stats?.time(\"Page Request\");this._pumpOperatorList(intentArgs)}return intentState.opListReadCapability.promise}streamTextContent({includeMarkedContent:includeMarkedContent=false,disableNormalization:disableNormalization=false}={}){const TEXT_CONTENT_CHUNK_SIZE=100;return this._transport.messageHandler.sendWithStream(\"GetTextContent\",{pageIndex:this._pageIndex,includeMarkedContent:includeMarkedContent===true,disableNormalization:disableNormalization===true},{highWaterMark:TEXT_CONTENT_CHUNK_SIZE,size(textContent){return textContent.items.length}})}getTextContent(params={}){if(this._transport._htmlForXfa){return this.getXfa().then((xfa=>XfaText.textContent(xfa)))}const readableStream=this.streamTextContent(params);return new Promise((function(resolve,reject){function pump(){reader.read().then((function({value:value,done:done}){if(done){resolve(textContent);return}textContent.lang??=value.lang;Object.assign(textContent.styles,value.styles);textContent.items.push(...value.items);pump()}),reject)}const reader=readableStream.getReader();const textContent={items:[],styles:Object.create(null),lang:null};pump()}))}getStructTree(){return this._transport.getStructTree(this._pageIndex)}_destroy(){this.destroyed=true;const waitOn=[];for(const intentState of this._intentStates.values()){this._abortOperatorList({intentState:intentState,reason:new Error(\"Page was destroyed.\"),force:true});if(intentState.opListReadCapability){continue}for(const internalRenderTask of intentState.renderTasks){waitOn.push(internalRenderTask.completed);internalRenderTask.cancel()}}this.objs.clear();this.#pendingCleanup=false;return Promise.all(waitOn)}cleanup(resetStats=false){this.#pendingCleanup=true;const success=this.#tryCleanup();if(resetStats&&success){this._stats&&=new StatTimer}return success}#tryCleanup(){if(!this.#pendingCleanup||this.destroyed){return false}for(const{renderTasks:renderTasks,operatorList:operatorList}of this._intentStates.values()){if(renderTasks.size>0||!operatorList.lastChunk){return false}}this._intentStates.clear();this.objs.clear();this.#pendingCleanup=false;return true}_startRenderPage(transparency,cacheKey){const intentState=this._intentStates.get(cacheKey);if(!intentState){return}this._stats?.timeEnd(\"Page Request\");intentState.displayReadyCapability?.resolve(transparency)}_renderPageChunk(operatorListChunk,intentState){for(let i=0,ii=operatorListChunk.length;i<ii;i++){intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i])}intentState.operatorList.lastChunk=operatorListChunk.lastChunk;intentState.operatorList.separateAnnots=operatorListChunk.separateAnnots;for(const internalRenderTask of intentState.renderTasks){internalRenderTask.operatorListChanged()}if(operatorListChunk.lastChunk){this.#tryCleanup()}}_pumpOperatorList({renderingIntent:renderingIntent,cacheKey:cacheKey,annotationStorageSerializable:annotationStorageSerializable,modifiedIds:modifiedIds}){const{map:map,transfer:transfer}=annotationStorageSerializable;const readableStream=this._transport.messageHandler.sendWithStream(\"GetOperatorList\",{pageIndex:this._pageIndex,intent:renderingIntent,cacheKey:cacheKey,annotationStorage:map,modifiedIds:modifiedIds},transfer);const reader=readableStream.getReader();const intentState=this._intentStates.get(cacheKey);intentState.streamReader=reader;const pump=()=>{reader.read().then((({value:value,done:done})=>{if(done){intentState.streamReader=null;return}if(this._transport.destroyed){return}this._renderPageChunk(value,intentState);pump()}),(reason=>{intentState.streamReader=null;if(this._transport.destroyed){return}if(intentState.operatorList){intentState.operatorList.lastChunk=true;for(const internalRenderTask of intentState.renderTasks){internalRenderTask.operatorListChanged()}this.#tryCleanup()}if(intentState.displayReadyCapability){intentState.displayReadyCapability.reject(reason)}else if(intentState.opListReadCapability){intentState.opListReadCapability.reject(reason)}else{throw reason}}))};pump()}_abortOperatorList({intentState:intentState,reason:reason,force:force=false}){if(!intentState.streamReader){return}if(intentState.streamReaderCancelTimeout){clearTimeout(intentState.streamReaderCancelTimeout);intentState.streamReaderCancelTimeout=null}if(!force){if(intentState.renderTasks.size>0){return}if(reason instanceof RenderingCancelledException){let delay=RENDERING_CANCELLED_TIMEOUT;if(reason.extraDelay>0&&reason.extraDelay<1e3){delay+=reason.extraDelay}intentState.streamReaderCancelTimeout=setTimeout((()=>{intentState.streamReaderCancelTimeout=null;this._abortOperatorList({intentState:intentState,reason:reason,force:true})}),delay);return}}intentState.streamReader.cancel(new AbortException(reason.message)).catch((()=>{}));intentState.streamReader=null;if(this._transport.destroyed){return}for(const[curCacheKey,curIntentState]of this._intentStates){if(curIntentState===intentState){this._intentStates.delete(curCacheKey);break}}this.cleanup()}get stats(){return this._stats}}class LoopbackPort{#listeners=new Map;#deferred=Promise.resolve();postMessage(obj,transfer){const event={data:structuredClone(obj,transfer?{transfer:transfer}:null)};this.#deferred.then((()=>{for(const[listener]of this.#listeners){listener.call(this,event)}}))}addEventListener(name,listener,options=null){let rmAbort=null;if(options?.signal instanceof AbortSignal){const{signal:signal}=options;if(signal.aborted){warn(\"LoopbackPort - cannot use an `aborted` signal.\");return}const onAbort=()=>this.removeEventListener(name,listener);rmAbort=()=>signal.removeEventListener(\"abort\",onAbort);signal.addEventListener(\"abort\",onAbort)}this.#listeners.set(listener,rmAbort)}removeEventListener(name,listener){const rmAbort=this.#listeners.get(listener);rmAbort?.();this.#listeners.delete(listener)}terminate(){for(const[,rmAbort]of this.#listeners){rmAbort?.()}this.#listeners.clear()}}class PDFWorker{static#fakeWorkerId=0;static#isWorkerDisabled=false;static#workerPorts;static{if(isNodeJS){this.#isWorkerDisabled=true;GlobalWorkerOptions.workerSrc||=\"./pdf.worker.mjs\"}this._isSameOrigin=(baseUrl,otherUrl)=>{const base=URL.parse(baseUrl);if(!base?.origin||base.origin===\"null\"){return false}const other=new URL(otherUrl,base);return base.origin===other.origin};this._createCDNWrapper=url=>{const wrapper=`await import(\"${url}\");`;return URL.createObjectURL(new Blob([wrapper],{type:\"text/javascript\"}))}}constructor({name:name=null,port:port=null,verbosity:verbosity=getVerbosityLevel()}={}){this.name=name;this.destroyed=false;this.verbosity=verbosity;this._readyCapability=Promise.withResolvers();this._port=null;this._webWorker=null;this._messageHandler=null;if(port){if(PDFWorker.#workerPorts?.has(port)){throw new Error(\"Cannot use more than one PDFWorker per port.\")}(PDFWorker.#workerPorts||=new WeakMap).set(port,this);this._initializeFromPort(port);return}this._initialize()}get promise(){return this._readyCapability.promise}#resolve(){this._readyCapability.resolve();this._messageHandler.send(\"configure\",{verbosity:this.verbosity})}get port(){return this._port}get messageHandler(){return this._messageHandler}_initializeFromPort(port){this._port=port;this._messageHandler=new MessageHandler(\"main\",\"worker\",port);this._messageHandler.on(\"ready\",(function(){}));this.#resolve()}_initialize(){if(PDFWorker.#isWorkerDisabled||PDFWorker.#mainThreadWorkerMessageHandler){this._setupFakeWorker();return}let{workerSrc:workerSrc}=PDFWorker;try{if(!PDFWorker._isSameOrigin(window.location,workerSrc)){workerSrc=PDFWorker._createCDNWrapper(new URL(workerSrc,window.location).href)}const worker=new Worker(workerSrc,{type:\"module\"});const messageHandler=new MessageHandler(\"main\",\"worker\",worker);const terminateEarly=()=>{ac.abort();messageHandler.destroy();worker.terminate();if(this.destroyed){this._readyCapability.reject(new Error(\"Worker was destroyed\"))}else{this._setupFakeWorker()}};const ac=new AbortController;worker.addEventListener(\"error\",(()=>{if(!this._webWorker){terminateEarly()}}),{signal:ac.signal});messageHandler.on(\"test\",(data=>{ac.abort();if(this.destroyed||!data){terminateEarly();return}this._messageHandler=messageHandler;this._port=worker;this._webWorker=worker;this.#resolve()}));messageHandler.on(\"ready\",(data=>{ac.abort();if(this.destroyed){terminateEarly();return}try{sendTest()}catch{this._setupFakeWorker()}}));const sendTest=()=>{const testObj=new Uint8Array;messageHandler.send(\"test\",testObj,[testObj.buffer])};sendTest();return}catch{info(\"The worker has been disabled.\")}this._setupFakeWorker()}_setupFakeWorker(){if(!PDFWorker.#isWorkerDisabled){warn(\"Setting up fake worker.\");PDFWorker.#isWorkerDisabled=true}PDFWorker._setupFakeWorkerGlobal.then((WorkerMessageHandler=>{if(this.destroyed){this._readyCapability.reject(new Error(\"Worker was destroyed\"));return}const port=new LoopbackPort;this._port=port;const id=`fake${PDFWorker.#fakeWorkerId++}`;const workerHandler=new MessageHandler(id+\"_worker\",id,port);WorkerMessageHandler.setup(workerHandler,port);this._messageHandler=new MessageHandler(id,id+\"_worker\",port);this.#resolve()})).catch((reason=>{this._readyCapability.reject(new Error(`Setting up fake worker failed: \"${reason.message}\".`))}))}destroy(){this.destroyed=true;this._webWorker?.terminate();this._webWorker=null;PDFWorker.#workerPorts?.delete(this._port);this._port=null;this._messageHandler?.destroy();this._messageHandler=null}static fromPort(params){if(!params?.port){throw new Error(\"PDFWorker.fromPort - invalid method signature.\")}const cachedPort=this.#workerPorts?.get(params.port);if(cachedPort){if(cachedPort._pendingDestroy){throw new Error(\"PDFWorker.fromPort - the worker is being destroyed.\\n\"+\"Please remember to await `PDFDocumentLoadingTask.destroy()`-calls.\")}return cachedPort}return new PDFWorker(params)}static get workerSrc(){if(GlobalWorkerOptions.workerSrc){return GlobalWorkerOptions.workerSrc}throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.')}static get#mainThreadWorkerMessageHandler(){try{return globalThis.pdfjsWorker?.WorkerMessageHandler||null}catch{return null}}static get _setupFakeWorkerGlobal(){const loader=async()=>{if(this.#mainThreadWorkerMessageHandler){return this.#mainThreadWorkerMessageHandler}const worker=await import(this.workerSrc);return worker.WorkerMessageHandler};return shadow(this,\"_setupFakeWorkerGlobal\",loader())}}class WorkerTransport{#methodPromises=new Map;#pageCache=new Map;#pagePromises=new Map;#pageRefCache=new Map;#passwordCapability=null;constructor(messageHandler,loadingTask,networkStream,params,factory){this.messageHandler=messageHandler;this.loadingTask=loadingTask;this.commonObjs=new PDFObjects;this.fontLoader=new FontLoader({ownerDocument:params.ownerDocument,styleElement:params.styleElement});this.loadingParams=params.loadingParams;this._params=params;this.canvasFactory=factory.canvasFactory;this.filterFactory=factory.filterFactory;this.cMapReaderFactory=factory.cMapReaderFactory;this.standardFontDataFactory=factory.standardFontDataFactory;this.wasmFactory=factory.wasmFactory;this.destroyed=false;this.destroyCapability=null;this._networkStream=networkStream;this._fullReader=null;this._lastProgress=null;this.downloadInfoCapability=Promise.withResolvers();this.setupMessageHandler()}#cacheSimpleMethod(name,data=null){const cachedPromise=this.#methodPromises.get(name);if(cachedPromise){return cachedPromise}const promise=this.messageHandler.sendWithPromise(name,data);this.#methodPromises.set(name,promise);return promise}get annotationStorage(){return shadow(this,\"annotationStorage\",new AnnotationStorage)}getRenderingIntent(intent,annotationMode=AnnotationMode.ENABLE,printAnnotationStorage=null,isEditing=false,isOpList=false){let renderingIntent=RenderingIntentFlag.DISPLAY;let annotationStorageSerializable=SerializableEmpty;switch(intent){case\"any\":renderingIntent=RenderingIntentFlag.ANY;break;case\"display\":break;case\"print\":renderingIntent=RenderingIntentFlag.PRINT;break;default:warn(`getRenderingIntent - invalid intent: ${intent}`)}const annotationStorage=renderingIntent&RenderingIntentFlag.PRINT&&printAnnotationStorage instanceof PrintAnnotationStorage?printAnnotationStorage:this.annotationStorage;switch(annotationMode){case AnnotationMode.DISABLE:renderingIntent+=RenderingIntentFlag.ANNOTATIONS_DISABLE;break;case AnnotationMode.ENABLE:break;case AnnotationMode.ENABLE_FORMS:renderingIntent+=RenderingIntentFlag.ANNOTATIONS_FORMS;break;case AnnotationMode.ENABLE_STORAGE:renderingIntent+=RenderingIntentFlag.ANNOTATIONS_STORAGE;annotationStorageSerializable=annotationStorage.serializable;break;default:warn(`getRenderingIntent - invalid annotationMode: ${annotationMode}`)}if(isEditing){renderingIntent+=RenderingIntentFlag.IS_EDITING}if(isOpList){renderingIntent+=RenderingIntentFlag.OPLIST}const{ids:modifiedIds,hash:modifiedIdsHash}=annotationStorage.modifiedIds;const cacheKeyBuf=[renderingIntent,annotationStorageSerializable.hash,modifiedIdsHash];return{renderingIntent:renderingIntent,cacheKey:cacheKeyBuf.join(\"_\"),annotationStorageSerializable:annotationStorageSerializable,modifiedIds:modifiedIds}}destroy(){if(this.destroyCapability){return this.destroyCapability.promise}this.destroyed=true;this.destroyCapability=Promise.withResolvers();this.#passwordCapability?.reject(new Error(\"Worker was destroyed during onPassword callback\"));const waitOn=[];for(const page of this.#pageCache.values()){waitOn.push(page._destroy())}this.#pageCache.clear();this.#pagePromises.clear();this.#pageRefCache.clear();if(this.hasOwnProperty(\"annotationStorage\")){this.annotationStorage.resetModified()}const terminated=this.messageHandler.sendWithPromise(\"Terminate\",null);waitOn.push(terminated);Promise.all(waitOn).then((()=>{this.commonObjs.clear();this.fontLoader.clear();this.#methodPromises.clear();this.filterFactory.destroy();TextLayer.cleanup();this._networkStream?.cancelAllRequests(new AbortException(\"Worker was terminated.\"));this.messageHandler?.destroy();this.messageHandler=null;this.destroyCapability.resolve()}),this.destroyCapability.reject);return this.destroyCapability.promise}setupMessageHandler(){const{messageHandler:messageHandler,loadingTask:loadingTask}=this;messageHandler.on(\"GetReader\",((data,sink)=>{assert(this._networkStream,\"GetReader - no `IPDFStream` instance available.\");this._fullReader=this._networkStream.getFullReader();this._fullReader.onProgress=evt=>{this._lastProgress={loaded:evt.loaded,total:evt.total}};sink.onPull=()=>{this._fullReader.read().then((function({value:value,done:done}){if(done){sink.close();return}assert(value instanceof ArrayBuffer,\"GetReader - expected an ArrayBuffer.\");sink.enqueue(new Uint8Array(value),1,[value])})).catch((reason=>{sink.error(reason)}))};sink.onCancel=reason=>{this._fullReader.cancel(reason);sink.ready.catch((readyReason=>{if(this.destroyed){return}throw readyReason}))}}));messageHandler.on(\"ReaderHeadersReady\",(async data=>{await this._fullReader.headersReady;const{isStreamingSupported:isStreamingSupported,isRangeSupported:isRangeSupported,contentLength:contentLength}=this._fullReader;if(!isStreamingSupported||!isRangeSupported){if(this._lastProgress){loadingTask.onProgress?.(this._lastProgress)}this._fullReader.onProgress=evt=>{loadingTask.onProgress?.({loaded:evt.loaded,total:evt.total})}}return{isStreamingSupported:isStreamingSupported,isRangeSupported:isRangeSupported,contentLength:contentLength}}));messageHandler.on(\"GetRangeReader\",((data,sink)=>{assert(this._networkStream,\"GetRangeReader - no `IPDFStream` instance available.\");const rangeReader=this._networkStream.getRangeReader(data.begin,data.end);if(!rangeReader){sink.close();return}sink.onPull=()=>{rangeReader.read().then((function({value:value,done:done}){if(done){sink.close();return}assert(value instanceof ArrayBuffer,\"GetRangeReader - expected an ArrayBuffer.\");sink.enqueue(new Uint8Array(value),1,[value])})).catch((reason=>{sink.error(reason)}))};sink.onCancel=reason=>{rangeReader.cancel(reason);sink.ready.catch((readyReason=>{if(this.destroyed){return}throw readyReason}))}}));messageHandler.on(\"GetDoc\",(({pdfInfo:pdfInfo})=>{this._numPages=pdfInfo.numPages;this._htmlForXfa=pdfInfo.htmlForXfa;delete pdfInfo.htmlForXfa;loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo,this))}));messageHandler.on(\"DocException\",(ex=>{loadingTask._capability.reject(wrapReason(ex))}));messageHandler.on(\"PasswordRequest\",(ex=>{this.#passwordCapability=Promise.withResolvers();try{if(!loadingTask.onPassword){throw wrapReason(ex)}const updatePassword=password=>{if(password instanceof Error){this.#passwordCapability.reject(password)}else{this.#passwordCapability.resolve({password:password})}};loadingTask.onPassword(updatePassword,ex.code)}catch(err){this.#passwordCapability.reject(err)}return this.#passwordCapability.promise}));messageHandler.on(\"DataLoaded\",(data=>{loadingTask.onProgress?.({loaded:data.length,total:data.length});this.downloadInfoCapability.resolve(data)}));messageHandler.on(\"StartRenderPage\",(data=>{if(this.destroyed){return}const page=this.#pageCache.get(data.pageIndex);page._startRenderPage(data.transparency,data.cacheKey)}));messageHandler.on(\"commonobj\",(([id,type,exportedData])=>{if(this.destroyed){return null}if(this.commonObjs.has(id)){return null}switch(type){case\"Font\":if(\"error\"in exportedData){const exportedError=exportedData.error;warn(`Error during font loading: ${exportedError}`);this.commonObjs.resolve(id,exportedError);break}const inspectFont=this._params.pdfBug&&globalThis.FontInspector?.enabled?(font,url)=>globalThis.FontInspector.fontAdded(font,url):null;const font=new FontFaceObject(exportedData,inspectFont);this.fontLoader.bind(font).catch((()=>messageHandler.sendWithPromise(\"FontFallback\",{id:id}))).finally((()=>{if(!font.fontExtraProperties&&font.data){font.data=null}this.commonObjs.resolve(id,font)}));break;case\"CopyLocalImage\":const{imageRef:imageRef}=exportedData;assert(imageRef,\"The imageRef must be defined.\");for(const pageProxy of this.#pageCache.values()){for(const[,data]of pageProxy.objs){if(data?.ref!==imageRef){continue}if(!data.dataLen){return null}this.commonObjs.resolve(id,structuredClone(data));return data.dataLen}}break;case\"FontPath\":case\"Image\":case\"Pattern\":this.commonObjs.resolve(id,exportedData);break;default:throw new Error(`Got unknown common object type ${type}`)}return null}));messageHandler.on(\"obj\",(([id,pageIndex,type,imageData])=>{if(this.destroyed){return}const pageProxy=this.#pageCache.get(pageIndex);if(pageProxy.objs.has(id)){return}if(pageProxy._intentStates.size===0){imageData?.bitmap?.close();return}switch(type){case\"Image\":case\"Pattern\":pageProxy.objs.resolve(id,imageData);break;default:throw new Error(`Got unknown object type ${type}`)}}));messageHandler.on(\"DocProgress\",(data=>{if(this.destroyed){return}loadingTask.onProgress?.({loaded:data.loaded,total:data.total})}));messageHandler.on(\"FetchBinaryData\",(async data=>{if(this.destroyed){throw new Error(\"Worker was destroyed.\")}const factory=this[data.type];if(!factory){throw new Error(`${data.type} not initialized, see the \\`useWorkerFetch\\` parameter.`)}return factory.fetch(data)}))}getData(){return this.messageHandler.sendWithPromise(\"GetData\",null)}saveDocument(){if(this.annotationStorage.size<=0){warn(\"saveDocument called while `annotationStorage` is empty, \"+\"please use the getData-method instead.\")}const{map:map,transfer:transfer}=this.annotationStorage.serializable;return this.messageHandler.sendWithPromise(\"SaveDocument\",{isPureXfa:!!this._htmlForXfa,numPages:this._numPages,annotationStorage:map,filename:this._fullReader?.filename??null},transfer).finally((()=>{this.annotationStorage.resetModified()}))}getPage(pageNumber){if(!Number.isInteger(pageNumber)||pageNumber<=0||pageNumber>this._numPages){return Promise.reject(new Error(\"Invalid page request.\"))}const pageIndex=pageNumber-1,cachedPromise=this.#pagePromises.get(pageIndex);if(cachedPromise){return cachedPromise}const promise=this.messageHandler.sendWithPromise(\"GetPage\",{pageIndex:pageIndex}).then((pageInfo=>{if(this.destroyed){throw new Error(\"Transport destroyed\")}if(pageInfo.refStr){this.#pageRefCache.set(pageInfo.refStr,pageNumber)}const page=new PDFPageProxy(pageIndex,pageInfo,this,this._params.pdfBug);this.#pageCache.set(pageIndex,page);return page}));this.#pagePromises.set(pageIndex,promise);return promise}getPageIndex(ref){if(!isRefProxy(ref)){return Promise.reject(new Error(\"Invalid pageIndex request.\"))}return this.messageHandler.sendWithPromise(\"GetPageIndex\",{num:ref.num,gen:ref.gen})}getAnnotations(pageIndex,intent){return this.messageHandler.sendWithPromise(\"GetAnnotations\",{pageIndex:pageIndex,intent:intent})}getFieldObjects(){return this.#cacheSimpleMethod(\"GetFieldObjects\")}hasJSActions(){return this.#cacheSimpleMethod(\"HasJSActions\")}getCalculationOrderIds(){return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\",null)}getDestinations(){return this.messageHandler.sendWithPromise(\"GetDestinations\",null)}getDestination(id){if(typeof id!==\"string\"){return Promise.reject(new Error(\"Invalid destination request.\"))}return this.messageHandler.sendWithPromise(\"GetDestination\",{id:id})}getPageLabels(){return this.messageHandler.sendWithPromise(\"GetPageLabels\",null)}getPageLayout(){return this.messageHandler.sendWithPromise(\"GetPageLayout\",null)}getPageMode(){return this.messageHandler.sendWithPromise(\"GetPageMode\",null)}getViewerPreferences(){return this.messageHandler.sendWithPromise(\"GetViewerPreferences\",null)}getOpenAction(){return this.messageHandler.sendWithPromise(\"GetOpenAction\",null)}getAttachments(){return this.messageHandler.sendWithPromise(\"GetAttachments\",null)}getDocJSActions(){return this.#cacheSimpleMethod(\"GetDocJSActions\")}getPageJSActions(pageIndex){return this.messageHandler.sendWithPromise(\"GetPageJSActions\",{pageIndex:pageIndex})}getStructTree(pageIndex){return this.messageHandler.sendWithPromise(\"GetStructTree\",{pageIndex:pageIndex})}getOutline(){return this.messageHandler.sendWithPromise(\"GetOutline\",null)}getOptionalContentConfig(renderingIntent){return this.#cacheSimpleMethod(\"GetOptionalContentConfig\").then((data=>new OptionalContentConfig(data,renderingIntent)))}getPermissions(){return this.messageHandler.sendWithPromise(\"GetPermissions\",null)}getMetadata(){const name=\"GetMetadata\",cachedPromise=this.#methodPromises.get(name);if(cachedPromise){return cachedPromise}const promise=this.messageHandler.sendWithPromise(name,null).then((results=>({info:results[0],metadata:results[1]?new Metadata(results[1]):null,contentDispositionFilename:this._fullReader?.filename??null,contentLength:this._fullReader?.contentLength??null})));this.#methodPromises.set(name,promise);return promise}getMarkInfo(){return this.messageHandler.sendWithPromise(\"GetMarkInfo\",null)}async startCleanup(keepLoadedFonts=false){if(this.destroyed){return}await this.messageHandler.sendWithPromise(\"Cleanup\",null);for(const page of this.#pageCache.values()){const cleanupSuccessful=page.cleanup();if(!cleanupSuccessful){throw new Error(`startCleanup: Page ${page.pageNumber} is currently rendering.`)}}this.commonObjs.clear();if(!keepLoadedFonts){this.fontLoader.clear()}this.#methodPromises.clear();this.filterFactory.destroy(true);TextLayer.cleanup()}cachedPageNumber(ref){if(!isRefProxy(ref)){return null}const refStr=ref.gen===0?`${ref.num}R`:`${ref.num}R${ref.gen}`;return this.#pageRefCache.get(refStr)??null}}const INITIAL_DATA=Symbol(\"INITIAL_DATA\");class PDFObjects{#objs=Object.create(null);#ensureObj(objId){return this.#objs[objId]||={...Promise.withResolvers(),data:INITIAL_DATA}}get(objId,callback=null){if(callback){const obj=this.#ensureObj(objId);obj.promise.then((()=>callback(obj.data)));return null}const obj=this.#objs[objId];if(!obj||obj.data===INITIAL_DATA){throw new Error(`Requesting object that isn't resolved yet ${objId}.`)}return obj.data}has(objId){const obj=this.#objs[objId];return!!obj&&obj.data!==INITIAL_DATA}delete(objId){const obj=this.#objs[objId];if(!obj||obj.data===INITIAL_DATA){return false}delete this.#objs[objId];return true}resolve(objId,data=null){const obj=this.#ensureObj(objId);obj.data=data;obj.resolve()}clear(){for(const objId in this.#objs){const{data:data}=this.#objs[objId];data?.bitmap?.close()}this.#objs=Object.create(null)}*[Symbol.iterator](){for(const objId in this.#objs){const{data:data}=this.#objs[objId];if(data===INITIAL_DATA){continue}yield[objId,data]}}}class RenderTask{#internalRenderTask=null;onContinue=null;onError=null;constructor(internalRenderTask){this.#internalRenderTask=internalRenderTask}get promise(){return this.#internalRenderTask.capability.promise}cancel(extraDelay=0){this.#internalRenderTask.cancel(null,extraDelay)}get separateAnnots(){const{separateAnnots:separateAnnots}=this.#internalRenderTask.operatorList;if(!separateAnnots){return false}const{annotationCanvasMap:annotationCanvasMap}=this.#internalRenderTask;return separateAnnots.form||separateAnnots.canvas&&annotationCanvasMap?.size>0}}class InternalRenderTask{#rAF=null;static#canvasInUse=new WeakSet;constructor({callback:callback,params:params,objs:objs,commonObjs:commonObjs,annotationCanvasMap:annotationCanvasMap,operatorList:operatorList,pageIndex:pageIndex,canvasFactory:canvasFactory,filterFactory:filterFactory,useRequestAnimationFrame:useRequestAnimationFrame=false,pdfBug:pdfBug=false,pageColors:pageColors=null}){this.callback=callback;this.params=params;this.objs=objs;this.commonObjs=commonObjs;this.annotationCanvasMap=annotationCanvasMap;this.operatorListIdx=null;this.operatorList=operatorList;this._pageIndex=pageIndex;this.canvasFactory=canvasFactory;this.filterFactory=filterFactory;this._pdfBug=pdfBug;this.pageColors=pageColors;this.running=false;this.graphicsReadyCallback=null;this.graphicsReady=false;this._useRequestAnimationFrame=useRequestAnimationFrame===true&&typeof window!==\"undefined\";this.cancelled=false;this.capability=Promise.withResolvers();this.task=new RenderTask(this);this._cancelBound=this.cancel.bind(this);this._continueBound=this._continue.bind(this);this._scheduleNextBound=this._scheduleNext.bind(this);this._nextBound=this._next.bind(this);this._canvas=params.canvasContext.canvas}get completed(){return this.capability.promise.catch((function(){}))}initializeGraphics({transparency:transparency=false,optionalContentConfig:optionalContentConfig}){if(this.cancelled){return}if(this._canvas){if(InternalRenderTask.#canvasInUse.has(this._canvas)){throw new Error(\"Cannot use the same canvas during multiple render() operations. \"+\"Use different canvas or ensure previous operations were \"+\"cancelled or completed.\")}InternalRenderTask.#canvasInUse.add(this._canvas)}if(this._pdfBug&&globalThis.StepperManager?.enabled){this.stepper=globalThis.StepperManager.create(this._pageIndex);this.stepper.init(this.operatorList);this.stepper.nextBreakPoint=this.stepper.getNextBreakPoint()}const{canvasContext:canvasContext,viewport:viewport,transform:transform,background:background}=this.params;this.gfx=new CanvasGraphics(canvasContext,this.commonObjs,this.objs,this.canvasFactory,this.filterFactory,{optionalContentConfig:optionalContentConfig},this.annotationCanvasMap,this.pageColors);this.gfx.beginDrawing({transform:transform,viewport:viewport,transparency:transparency,background:background});this.operatorListIdx=0;this.graphicsReady=true;this.graphicsReadyCallback?.()}cancel(error=null,extraDelay=0){this.running=false;this.cancelled=true;this.gfx?.endDrawing();if(this.#rAF){window.cancelAnimationFrame(this.#rAF);this.#rAF=null}InternalRenderTask.#canvasInUse.delete(this._canvas);error||=new RenderingCancelledException(`Rendering cancelled, page ${this._pageIndex+1}`,extraDelay);this.callback(error);this.task.onError?.(error)}operatorListChanged(){if(!this.graphicsReady){this.graphicsReadyCallback||=this._continueBound;return}this.stepper?.updateOperatorList(this.operatorList);if(this.running){return}this._continue()}_continue(){this.running=true;if(this.cancelled){return}if(this.task.onContinue){this.task.onContinue(this._scheduleNextBound)}else{this._scheduleNext()}}_scheduleNext(){if(this._useRequestAnimationFrame){this.#rAF=window.requestAnimationFrame((()=>{this.#rAF=null;this._nextBound().catch(this._cancelBound)}))}else{Promise.resolve().then(this._nextBound).catch(this._cancelBound)}}async _next(){if(this.cancelled){return}this.operatorListIdx=this.gfx.executeOperatorList(this.operatorList,this.operatorListIdx,this._continueBound,this.stepper);if(this.operatorListIdx===this.operatorList.argsArray.length){this.running=false;if(this.operatorList.lastChunk){this.gfx.endDrawing();InternalRenderTask.#canvasInUse.delete(this._canvas);this.callback()}}}}const version=\"5.2.177\";const build=\"293506ada\";function makeColorComp(n){return Math.floor(Math.max(0,Math.min(1,n))*255).toString(16).padStart(2,\"0\")}function scaleAndClamp(x){return Math.max(0,Math.min(255,255*x))}class ColorConverters{static CMYK_G([c,y,m,k]){return[\"G\",1-Math.min(1,.3*c+.59*m+.11*y+k)]}static G_CMYK([g]){return[\"CMYK\",0,0,0,1-g]}static G_RGB([g]){return[\"RGB\",g,g,g]}static G_rgb([g]){g=scaleAndClamp(g);return[g,g,g]}static G_HTML([g]){const G=makeColorComp(g);return`#${G}${G}${G}`}static RGB_G([r,g,b]){return[\"G\",.3*r+.59*g+.11*b]}static RGB_rgb(color){return color.map(scaleAndClamp)}static RGB_HTML(color){return`#${color.map(makeColorComp).join(\"\")}`}static T_HTML(){return\"#00000000\"}static T_rgb(){return[null]}static CMYK_RGB([c,y,m,k]){return[\"RGB\",1-Math.min(1,c+k),1-Math.min(1,m+k),1-Math.min(1,y+k)]}static CMYK_rgb([c,y,m,k]){return[scaleAndClamp(1-Math.min(1,c+k)),scaleAndClamp(1-Math.min(1,m+k)),scaleAndClamp(1-Math.min(1,y+k))]}static CMYK_HTML(components){const rgb=this.CMYK_RGB(components).slice(1);return this.RGB_HTML(rgb)}static RGB_CMYK([r,g,b]){const c=1-r;const m=1-g;const y=1-b;const k=Math.min(c,m,y);return[\"CMYK\",c,m,y,k]}}class BaseSVGFactory{create(width,height,skipDimensions=false){if(width<=0||height<=0){throw new Error(\"Invalid SVG dimensions\")}const svg=this._createSVG(\"svg:svg\");svg.setAttribute(\"version\",\"1.1\");if(!skipDimensions){svg.setAttribute(\"width\",`${width}px`);svg.setAttribute(\"height\",`${height}px`)}svg.setAttribute(\"preserveAspectRatio\",\"none\");svg.setAttribute(\"viewBox\",`0 0 ${width} ${height}`);return svg}createElement(type){if(typeof type!==\"string\"){throw new Error(\"Invalid SVG element type\")}return this._createSVG(type)}_createSVG(type){unreachable(\"Abstract method `_createSVG` called.\")}}class DOMSVGFactory extends BaseSVGFactory{_createSVG(type){return document.createElementNS(SVG_NS,type)}}class XfaLayer{static setupStorage(html,id,element,storage,intent){const storedData=storage.getValue(id,{value:null});switch(element.name){case\"textarea\":if(storedData.value!==null){html.textContent=storedData.value}if(intent===\"print\"){break}html.addEventListener(\"input\",(event=>{storage.setValue(id,{value:event.target.value})}));break;case\"input\":if(element.attributes.type===\"radio\"||element.attributes.type===\"checkbox\"){if(storedData.value===element.attributes.xfaOn){html.setAttribute(\"checked\",true)}else if(storedData.value===element.attributes.xfaOff){html.removeAttribute(\"checked\")}if(intent===\"print\"){break}html.addEventListener(\"change\",(event=>{storage.setValue(id,{value:event.target.checked?event.target.getAttribute(\"xfaOn\"):event.target.getAttribute(\"xfaOff\")})}))}else{if(storedData.value!==null){html.setAttribute(\"value\",storedData.value)}if(intent===\"print\"){break}html.addEventListener(\"input\",(event=>{storage.setValue(id,{value:event.target.value})}))}break;case\"select\":if(storedData.value!==null){html.setAttribute(\"value\",storedData.value);for(const option of element.children){if(option.attributes.value===storedData.value){option.attributes.selected=true}else if(option.attributes.hasOwnProperty(\"selected\")){delete option.attributes.selected}}}html.addEventListener(\"input\",(event=>{const options=event.target.options;const value=options.selectedIndex===-1?\"\":options[options.selectedIndex].value;storage.setValue(id,{value:value})}));break}}static setAttributes({html:html,element:element,storage:storage=null,intent:intent,linkService:linkService}){const{attributes:attributes}=element;const isHTMLAnchorElement=html instanceof HTMLAnchorElement;if(attributes.type===\"radio\"){attributes.name=`${attributes.name}-${intent}`}for(const[key,value]of Object.entries(attributes)){if(value===null||value===undefined){continue}switch(key){case\"class\":if(value.length){html.setAttribute(key,value.join(\" \"))}break;case\"dataId\":break;case\"id\":html.setAttribute(\"data-element-id\",value);break;case\"style\":Object.assign(html.style,value);break;case\"textContent\":html.textContent=value;break;default:if(!isHTMLAnchorElement||key!==\"href\"&&key!==\"newWindow\"){html.setAttribute(key,value)}}}if(isHTMLAnchorElement){linkService.addLinkAttributes(html,attributes.href,attributes.newWindow)}if(storage&&attributes.dataId){this.setupStorage(html,attributes.dataId,element,storage)}}static render(parameters){const storage=parameters.annotationStorage;const linkService=parameters.linkService;const root=parameters.xfaHtml;const intent=parameters.intent||\"display\";const rootHtml=document.createElement(root.name);if(root.attributes){this.setAttributes({html:rootHtml,element:root,intent:intent,linkService:linkService})}const isNotForRichText=intent!==\"richText\";const rootDiv=parameters.div;rootDiv.append(rootHtml);if(parameters.viewport){const transform=`matrix(${parameters.viewport.transform.join(\",\")})`;rootDiv.style.transform=transform}if(isNotForRichText){rootDiv.setAttribute(\"class\",\"xfaLayer xfaFont\")}const textDivs=[];if(root.children.length===0){if(root.value){const node=document.createTextNode(root.value);rootHtml.append(node);if(isNotForRichText&&XfaText.shouldBuildText(root.name)){textDivs.push(node)}}return{textDivs:textDivs}}const stack=[[root,-1,rootHtml]];while(stack.length>0){const[parent,i,html]=stack.at(-1);if(i+1===parent.children.length){stack.pop();continue}const child=parent.children[++stack.at(-1)[1]];if(child===null){continue}const{name:name}=child;if(name===\"#text\"){const node=document.createTextNode(child.value);textDivs.push(node);html.append(node);continue}const childHtml=child?.attributes?.xmlns?document.createElementNS(child.attributes.xmlns,name):document.createElement(name);html.append(childHtml);if(child.attributes){this.setAttributes({html:childHtml,element:child,storage:storage,intent:intent,linkService:linkService})}if(child.children?.length>0){stack.push([child,-1,childHtml])}else if(child.value){const node=document.createTextNode(child.value);if(isNotForRichText&&XfaText.shouldBuildText(name)){textDivs.push(node)}childHtml.append(node)}}for(const el of rootDiv.querySelectorAll(\".xfaNonInteractive input, .xfaNonInteractive textarea\")){el.setAttribute(\"readOnly\",true)}return{textDivs:textDivs}}static update(parameters){const transform=`matrix(${parameters.viewport.transform.join(\",\")})`;parameters.div.style.transform=transform;parameters.div.hidden=false}}const DEFAULT_TAB_INDEX=1e3;const annotation_layer_DEFAULT_FONT_SIZE=9;const GetElementsByNameSet=new WeakSet;class AnnotationElementFactory{static create(parameters){const subtype=parameters.data.annotationType;switch(subtype){case AnnotationType.LINK:return new LinkAnnotationElement(parameters);case AnnotationType.TEXT:return new TextAnnotationElement(parameters);case AnnotationType.WIDGET:const fieldType=parameters.data.fieldType;switch(fieldType){case\"Tx\":return new TextWidgetAnnotationElement(parameters);case\"Btn\":if(parameters.data.radioButton){return new RadioButtonWidgetAnnotationElement(parameters)}else if(parameters.data.checkBox){return new CheckboxWidgetAnnotationElement(parameters)}return new PushButtonWidgetAnnotationElement(parameters);case\"Ch\":return new ChoiceWidgetAnnotationElement(parameters);case\"Sig\":return new SignatureWidgetAnnotationElement(parameters)}return new WidgetAnnotationElement(parameters);case AnnotationType.POPUP:return new PopupAnnotationElement(parameters);case AnnotationType.FREETEXT:return new FreeTextAnnotationElement(parameters);case AnnotationType.LINE:return new LineAnnotationElement(parameters);case AnnotationType.SQUARE:return new SquareAnnotationElement(parameters);case AnnotationType.CIRCLE:return new CircleAnnotationElement(parameters);case AnnotationType.POLYLINE:return new PolylineAnnotationElement(parameters);case AnnotationType.CARET:return new CaretAnnotationElement(parameters);case AnnotationType.INK:return new InkAnnotationElement(parameters);case AnnotationType.POLYGON:return new PolygonAnnotationElement(parameters);case AnnotationType.HIGHLIGHT:return new HighlightAnnotationElement(parameters);case AnnotationType.UNDERLINE:return new UnderlineAnnotationElement(parameters);case AnnotationType.SQUIGGLY:return new SquigglyAnnotationElement(parameters);case AnnotationType.STRIKEOUT:return new StrikeOutAnnotationElement(parameters);case AnnotationType.STAMP:return new StampAnnotationElement(parameters);case AnnotationType.FILEATTACHMENT:return new FileAttachmentAnnotationElement(parameters);default:return new AnnotationElement(parameters)}}}class AnnotationElement{#updates=null;#hasBorder=false;#popupElement=null;constructor(parameters,{isRenderable:isRenderable=false,ignoreBorder:ignoreBorder=false,createQuadrilaterals:createQuadrilaterals=false}={}){this.isRenderable=isRenderable;this.data=parameters.data;this.layer=parameters.layer;this.linkService=parameters.linkService;this.downloadManager=parameters.downloadManager;this.imageResourcesPath=parameters.imageResourcesPath;this.renderForms=parameters.renderForms;this.svgFactory=parameters.svgFactory;this.annotationStorage=parameters.annotationStorage;this.enableScripting=parameters.enableScripting;this.hasJSActions=parameters.hasJSActions;this._fieldObjects=parameters.fieldObjects;this.parent=parameters.parent;if(isRenderable){this.container=this._createContainer(ignoreBorder)}if(createQuadrilaterals){this._createQuadrilaterals()}}static _hasPopupData({titleObj:titleObj,contentsObj:contentsObj,richText:richText}){return!!(titleObj?.str||contentsObj?.str||richText?.str)}get _isEditable(){return this.data.isEditable}get hasPopupData(){return AnnotationElement._hasPopupData(this.data)}updateEdited(params){if(!this.container){return}this.#updates||={rect:this.data.rect.slice(0)};const{rect:rect}=params;if(rect){this.#setRectEdited(rect)}this.#popupElement?.popup.updateEdited(params)}resetEdited(){if(!this.#updates){return}this.#setRectEdited(this.#updates.rect);this.#popupElement?.popup.resetEdited();this.#updates=null}#setRectEdited(rect){const{container:{style:style},data:{rect:currentRect,rotation:rotation},parent:{viewport:{rawDims:{pageWidth:pageWidth,pageHeight:pageHeight,pageX:pageX,pageY:pageY}}}}=this;currentRect?.splice(0,4,...rect);style.left=`${100*(rect[0]-pageX)/pageWidth}%`;style.top=`${100*(pageHeight-rect[3]+pageY)/pageHeight}%`;if(rotation===0){style.width=`${100*(rect[2]-rect[0])/pageWidth}%`;style.height=`${100*(rect[3]-rect[1])/pageHeight}%`}else{this.setRotation(rotation)}}_createContainer(ignoreBorder){const{data:data,parent:{page:page,viewport:viewport}}=this;const container=document.createElement(\"section\");container.setAttribute(\"data-annotation-id\",data.id);if(!(this instanceof WidgetAnnotationElement)){container.tabIndex=DEFAULT_TAB_INDEX}const{style:style}=container;style.zIndex=this.parent.zIndex++;if(data.alternativeText){container.title=data.alternativeText}if(data.noRotate){container.classList.add(\"norotate\")}if(!data.rect||this instanceof PopupAnnotationElement){const{rotation:rotation}=data;if(!data.hasOwnCanvas&&rotation!==0){this.setRotation(rotation,container)}return container}const{width:width,height:height}=this;if(!ignoreBorder&&data.borderStyle.width>0){style.borderWidth=`${data.borderStyle.width}px`;const horizontalRadius=data.borderStyle.horizontalCornerRadius;const verticalRadius=data.borderStyle.verticalCornerRadius;if(horizontalRadius>0||verticalRadius>0){const radius=`calc(${horizontalRadius}px * var(--total-scale-factor)) / calc(${verticalRadius}px * var(--total-scale-factor))`;style.borderRadius=radius}else if(this instanceof RadioButtonWidgetAnnotationElement){const radius=`calc(${width}px * var(--total-scale-factor)) / calc(${height}px * var(--total-scale-factor))`;style.borderRadius=radius}switch(data.borderStyle.style){case AnnotationBorderStyleType.SOLID:style.borderStyle=\"solid\";break;case AnnotationBorderStyleType.DASHED:style.borderStyle=\"dashed\";break;case AnnotationBorderStyleType.BEVELED:warn(\"Unimplemented border style: beveled\");break;case AnnotationBorderStyleType.INSET:warn(\"Unimplemented border style: inset\");break;case AnnotationBorderStyleType.UNDERLINE:style.borderBottomStyle=\"solid\";break;default:break}const borderColor=data.borderColor||null;if(borderColor){this.#hasBorder=true;style.borderColor=Util.makeHexColor(borderColor[0]|0,borderColor[1]|0,borderColor[2]|0)}else{style.borderWidth=0}}const rect=Util.normalizeRect([data.rect[0],page.view[3]-data.rect[1]+page.view[1],data.rect[2],page.view[3]-data.rect[3]+page.view[1]]);const{pageWidth:pageWidth,pageHeight:pageHeight,pageX:pageX,pageY:pageY}=viewport.rawDims;style.left=`${100*(rect[0]-pageX)/pageWidth}%`;style.top=`${100*(rect[1]-pageY)/pageHeight}%`;const{rotation:rotation}=data;if(data.hasOwnCanvas||rotation===0){style.width=`${100*width/pageWidth}%`;style.height=`${100*height/pageHeight}%`}else{this.setRotation(rotation,container)}return container}setRotation(angle,container=this.container){if(!this.data.rect){return}const{pageWidth:pageWidth,pageHeight:pageHeight}=this.parent.viewport.rawDims;let{width:width,height:height}=this;if(angle%180!==0){[width,height]=[height,width]}container.style.width=`${100*width/pageWidth}%`;container.style.height=`${100*height/pageHeight}%`;container.setAttribute(\"data-main-rotation\",(360-angle)%360)}get _commonActions(){const setColor=(jsName,styleName,event)=>{const color=event.detail[jsName];const colorType=color[0];const colorArray=color.slice(1);event.target.style[styleName]=ColorConverters[`${colorType}_HTML`](colorArray);this.annotationStorage.setValue(this.data.id,{[styleName]:ColorConverters[`${colorType}_rgb`](colorArray)})};return shadow(this,\"_commonActions\",{display:event=>{const{display:display}=event.detail;const hidden=display%2===1;this.container.style.visibility=hidden?\"hidden\":\"visible\";this.annotationStorage.setValue(this.data.id,{noView:hidden,noPrint:display===1||display===2})},print:event=>{this.annotationStorage.setValue(this.data.id,{noPrint:!event.detail.print})},hidden:event=>{const{hidden:hidden}=event.detail;this.container.style.visibility=hidden?\"hidden\":\"visible\";this.annotationStorage.setValue(this.data.id,{noPrint:hidden,noView:hidden})},focus:event=>{setTimeout((()=>event.target.focus({preventScroll:false})),0)},userName:event=>{event.target.title=event.detail.userName},readonly:event=>{event.target.disabled=event.detail.readonly},required:event=>{this._setRequired(event.target,event.detail.required)},bgColor:event=>{setColor(\"bgColor\",\"backgroundColor\",event)},fillColor:event=>{setColor(\"fillColor\",\"backgroundColor\",event)},fgColor:event=>{setColor(\"fgColor\",\"color\",event)},textColor:event=>{setColor(\"textColor\",\"color\",event)},borderColor:event=>{setColor(\"borderColor\",\"borderColor\",event)},strokeColor:event=>{setColor(\"strokeColor\",\"borderColor\",event)},rotation:event=>{const angle=event.detail.rotation;this.setRotation(angle);this.annotationStorage.setValue(this.data.id,{rotation:angle})}})}_dispatchEventFromSandbox(actions,jsEvent){const commonActions=this._commonActions;for(const name of Object.keys(jsEvent.detail)){const action=actions[name]||commonActions[name];action?.(jsEvent)}}_setDefaultPropertiesFromJS(element){if(!this.enableScripting){return}const storedData=this.annotationStorage.getRawValue(this.data.id);if(!storedData){return}const commonActions=this._commonActions;for(const[actionName,detail]of Object.entries(storedData)){const action=commonActions[actionName];if(action){const eventProxy={detail:{[actionName]:detail},target:element};action(eventProxy);delete storedData[actionName]}}}_createQuadrilaterals(){if(!this.container){return}const{quadPoints:quadPoints}=this.data;if(!quadPoints){return}const[rectBlX,rectBlY,rectTrX,rectTrY]=this.data.rect.map((x=>Math.fround(x)));if(quadPoints.length===8){const[trX,trY,blX,blY]=quadPoints.subarray(2,6);if(rectTrX===trX&&rectTrY===trY&&rectBlX===blX&&rectBlY===blY){return}}const{style:style}=this.container;let svgBuffer;if(this.#hasBorder){const{borderColor:borderColor,borderWidth:borderWidth}=style;style.borderWidth=0;svgBuffer=[\"url('data:image/svg+xml;utf8,\",`<svg xmlns=\"http://www.w3.org/2000/svg\"`,` preserveAspectRatio=\"none\" viewBox=\"0 0 1 1\">`,`<g fill=\"transparent\" stroke=\"${borderColor}\" stroke-width=\"${borderWidth}\">`];this.container.classList.add(\"hasBorder\")}const width=rectTrX-rectBlX;const height=rectTrY-rectBlY;const{svgFactory:svgFactory}=this;const svg=svgFactory.createElement(\"svg\");svg.classList.add(\"quadrilateralsContainer\");svg.setAttribute(\"width\",0);svg.setAttribute(\"height\",0);const defs=svgFactory.createElement(\"defs\");svg.append(defs);const clipPath=svgFactory.createElement(\"clipPath\");const id=`clippath_${this.data.id}`;clipPath.setAttribute(\"id\",id);clipPath.setAttribute(\"clipPathUnits\",\"objectBoundingBox\");defs.append(clipPath);for(let i=2,ii=quadPoints.length;i<ii;i+=8){const trX=quadPoints[i];const trY=quadPoints[i+1];const blX=quadPoints[i+2];const blY=quadPoints[i+3];const rect=svgFactory.createElement(\"rect\");const x=(blX-rectBlX)/width;const y=(rectTrY-trY)/height;const rectWidth=(trX-blX)/width;const rectHeight=(trY-blY)/height;rect.setAttribute(\"x\",x);rect.setAttribute(\"y\",y);rect.setAttribute(\"width\",rectWidth);rect.setAttribute(\"height\",rectHeight);clipPath.append(rect);svgBuffer?.push(`<rect vector-effect=\"non-scaling-stroke\" x=\"${x}\" y=\"${y}\" width=\"${rectWidth}\" height=\"${rectHeight}\"/>`)}if(this.#hasBorder){svgBuffer.push(`</g></svg>')`);style.backgroundImage=svgBuffer.join(\"\")}this.container.append(svg);this.container.style.clipPath=`url(#${id})`}_createPopup(){const{data:data}=this;const popup=this.#popupElement=new PopupAnnotationElement({data:{color:data.color,titleObj:data.titleObj,modificationDate:data.modificationDate,contentsObj:data.contentsObj,richText:data.richText,parentRect:data.rect,borderStyle:0,id:`popup_${data.id}`,rotation:data.rotation},parent:this.parent,elements:[this]});this.parent.div.append(popup.render())}render(){unreachable(\"Abstract method `AnnotationElement.render` called\")}_getElementsByName(name,skipId=null){const fields=[];if(this._fieldObjects){const fieldObj=this._fieldObjects[name];if(fieldObj){for(const{page:page,id:id,exportValues:exportValues}of fieldObj){if(page===-1){continue}if(id===skipId){continue}const exportValue=typeof exportValues===\"string\"?exportValues:null;const domElement=document.querySelector(`[data-element-id=\"${id}\"]`);if(domElement&&!GetElementsByNameSet.has(domElement)){warn(`_getElementsByName - element not allowed: ${id}`);continue}fields.push({id:id,exportValue:exportValue,domElement:domElement})}}return fields}for(const domElement of document.getElementsByName(name)){const{exportValue:exportValue}=domElement;const id=domElement.getAttribute(\"data-element-id\");if(id===skipId){continue}if(!GetElementsByNameSet.has(domElement)){continue}fields.push({id:id,exportValue:exportValue,domElement:domElement})}return fields}show(){if(this.container){this.container.hidden=false}this.popup?.maybeShow()}hide(){if(this.container){this.container.hidden=true}this.popup?.forceHide()}getElementsToTriggerPopup(){return this.container}addHighlightArea(){const triggers=this.getElementsToTriggerPopup();if(Array.isArray(triggers)){for(const element of triggers){element.classList.add(\"highlightArea\")}}else{triggers.classList.add(\"highlightArea\")}}_editOnDoubleClick(){if(!this._isEditable){return}const{annotationEditorType:mode,data:{id:editId}}=this;this.container.addEventListener(\"dblclick\",(()=>{this.linkService.eventBus?.dispatch(\"switchannotationeditormode\",{source:this,mode:mode,editId:editId})}))}get width(){return this.data.rect[2]-this.data.rect[0]}get height(){return this.data.rect[3]-this.data.rect[1]}}class LinkAnnotationElement extends AnnotationElement{constructor(parameters,options=null){super(parameters,{isRenderable:true,ignoreBorder:!!options?.ignoreBorder,createQuadrilaterals:true});this.isTooltipOnly=parameters.data.isTooltipOnly}render(){const{data:data,linkService:linkService}=this;const link=document.createElement(\"a\");link.setAttribute(\"data-element-id\",data.id);let isBound=false;if(data.url){linkService.addLinkAttributes(link,data.url,data.newWindow);isBound=true}else if(data.action){this._bindNamedAction(link,data.action);isBound=true}else if(data.attachment){this.#bindAttachment(link,data.attachment,data.attachmentDest);isBound=true}else if(data.setOCGState){this.#bindSetOCGState(link,data.setOCGState);isBound=true}else if(data.dest){this._bindLink(link,data.dest);isBound=true}else{if(data.actions&&(data.actions.Action||data.actions[\"Mouse Up\"]||data.actions[\"Mouse Down\"])&&this.enableScripting&&this.hasJSActions){this._bindJSAction(link,data);isBound=true}if(data.resetForm){this._bindResetFormAction(link,data.resetForm);isBound=true}else if(this.isTooltipOnly&&!isBound){this._bindLink(link,\"\");isBound=true}}this.container.classList.add(\"linkAnnotation\");if(isBound){this.container.append(link)}return this.container}#setInternalLink(){this.container.setAttribute(\"data-internal-link\",\"\")}_bindLink(link,destination){link.href=this.linkService.getDestinationHash(destination);link.onclick=()=>{if(destination){this.linkService.goToDestination(destination)}return false};if(destination||destination===\"\"){this.#setInternalLink()}}_bindNamedAction(link,action){link.href=this.linkService.getAnchorUrl(\"\");link.onclick=()=>{this.linkService.executeNamedAction(action);return false};this.#setInternalLink()}#bindAttachment(link,attachment,dest=null){link.href=this.linkService.getAnchorUrl(\"\");if(attachment.description){link.title=attachment.description}link.onclick=()=>{this.downloadManager?.openOrDownloadData(attachment.content,attachment.filename,dest);return false};this.#setInternalLink()}#bindSetOCGState(link,action){link.href=this.linkService.getAnchorUrl(\"\");link.onclick=()=>{this.linkService.executeSetOCGState(action);return false};this.#setInternalLink()}_bindJSAction(link,data){link.href=this.linkService.getAnchorUrl(\"\");const map=new Map([[\"Action\",\"onclick\"],[\"Mouse Up\",\"onmouseup\"],[\"Mouse Down\",\"onmousedown\"]]);for(const name of Object.keys(data.actions)){const jsName=map.get(name);if(!jsName){continue}link[jsName]=()=>{this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\",{source:this,detail:{id:data.id,name:name}});return false}}if(!link.onclick){link.onclick=()=>false}this.#setInternalLink()}_bindResetFormAction(link,resetForm){const otherClickAction=link.onclick;if(!otherClickAction){link.href=this.linkService.getAnchorUrl(\"\")}this.#setInternalLink();if(!this._fieldObjects){warn(`_bindResetFormAction - \"resetForm\" action not supported, `+\"ensure that the `fieldObjects` parameter is provided.\");if(!otherClickAction){link.onclick=()=>false}return}link.onclick=()=>{otherClickAction?.();const{fields:resetFormFields,refs:resetFormRefs,include:include}=resetForm;const allFields=[];if(resetFormFields.length!==0||resetFormRefs.length!==0){const fieldIds=new Set(resetFormRefs);for(const fieldName of resetFormFields){const fields=this._fieldObjects[fieldName]||[];for(const{id:id}of fields){fieldIds.add(id)}}for(const fields of Object.values(this._fieldObjects)){for(const field of fields){if(fieldIds.has(field.id)===include){allFields.push(field)}}}}else{for(const fields of Object.values(this._fieldObjects)){allFields.push(...fields)}}const storage=this.annotationStorage;const allIds=[];for(const field of allFields){const{id:id}=field;allIds.push(id);switch(field.type){case\"text\":{const value=field.defaultValue||\"\";storage.setValue(id,{value:value});break}case\"checkbox\":case\"radiobutton\":{const value=field.defaultValue===field.exportValues;storage.setValue(id,{value:value});break}case\"combobox\":case\"listbox\":{const value=field.defaultValue||\"\";storage.setValue(id,{value:value});break}default:continue}const domElement=document.querySelector(`[data-element-id=\"${id}\"]`);if(!domElement){continue}else if(!GetElementsByNameSet.has(domElement)){warn(`_bindResetFormAction - element not allowed: ${id}`);continue}domElement.dispatchEvent(new Event(\"resetform\"))}if(this.enableScripting){this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\",{source:this,detail:{id:\"app\",ids:allIds,name:\"ResetForm\"}})}return false}}}class TextAnnotationElement extends AnnotationElement{constructor(parameters){super(parameters,{isRenderable:true})}render(){this.container.classList.add(\"textAnnotation\");const image=document.createElement(\"img\");image.src=this.imageResourcesPath+\"annotation-\"+this.data.name.toLowerCase()+\".svg\";image.setAttribute(\"data-l10n-id\",\"pdfjs-text-annotation-type\");image.setAttribute(\"data-l10n-args\",JSON.stringify({type:this.data.name}));if(!this.data.popupRef&&this.hasPopupData){this._createPopup()}this.container.append(image);return this.container}}class WidgetAnnotationElement extends AnnotationElement{render(){return this.container}showElementAndHideCanvas(element){if(this.data.hasOwnCanvas){if(element.previousSibling?.nodeName===\"CANVAS\"){element.previousSibling.hidden=true}element.hidden=false}}_getKeyModifier(event){return util_FeatureTest.platform.isMac?event.metaKey:event.ctrlKey}_setEventListener(element,elementData,baseName,eventName,valueGetter){if(baseName.includes(\"mouse\")){element.addEventListener(baseName,(event=>{this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\",{source:this,detail:{id:this.data.id,name:eventName,value:valueGetter(event),shift:event.shiftKey,modifier:this._getKeyModifier(event)}})}))}else{element.addEventListener(baseName,(event=>{if(baseName===\"blur\"){if(!elementData.focused||!event.relatedTarget){return}elementData.focused=false}else if(baseName===\"focus\"){if(elementData.focused){return}elementData.focused=true}if(!valueGetter){return}this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\",{source:this,detail:{id:this.data.id,name:eventName,value:valueGetter(event)}})}))}}_setEventListeners(element,elementData,names,getter){for(const[baseName,eventName]of names){if(eventName===\"Action\"||this.data.actions?.[eventName]){if(eventName===\"Focus\"||eventName===\"Blur\"){elementData||={focused:false}}this._setEventListener(element,elementData,baseName,eventName,getter);if(eventName===\"Focus\"&&!this.data.actions?.Blur){this._setEventListener(element,elementData,\"blur\",\"Blur\",null)}else if(eventName===\"Blur\"&&!this.data.actions?.Focus){this._setEventListener(element,elementData,\"focus\",\"Focus\",null)}}}}_setBackgroundColor(element){const color=this.data.backgroundColor||null;element.style.backgroundColor=color===null?\"transparent\":Util.makeHexColor(color[0],color[1],color[2])}_setTextStyle(element){const TEXT_ALIGNMENT=[\"left\",\"center\",\"right\"];const{fontColor:fontColor}=this.data.defaultAppearanceData;const fontSize=this.data.defaultAppearanceData.fontSize||annotation_layer_DEFAULT_FONT_SIZE;const style=element.style;let computedFontSize;const BORDER_SIZE=2;const roundToOneDecimal=x=>Math.round(10*x)/10;if(this.data.multiLine){const height=Math.abs(this.data.rect[3]-this.data.rect[1]-BORDER_SIZE);const numberOfLines=Math.round(height/(LINE_FACTOR*fontSize))||1;const lineHeight=height/numberOfLines;computedFontSize=Math.min(fontSize,roundToOneDecimal(lineHeight/LINE_FACTOR))}else{const height=Math.abs(this.data.rect[3]-this.data.rect[1]-BORDER_SIZE);computedFontSize=Math.min(fontSize,roundToOneDecimal(height/LINE_FACTOR))}style.fontSize=`calc(${computedFontSize}px * var(--total-scale-factor))`;style.color=Util.makeHexColor(fontColor[0],fontColor[1],fontColor[2]);if(this.data.textAlignment!==null){style.textAlign=TEXT_ALIGNMENT[this.data.textAlignment]}}_setRequired(element,isRequired){if(isRequired){element.setAttribute(\"required\",true)}else{element.removeAttribute(\"required\")}element.setAttribute(\"aria-required\",isRequired)}}class TextWidgetAnnotationElement extends WidgetAnnotationElement{constructor(parameters){const isRenderable=parameters.renderForms||parameters.data.hasOwnCanvas||!parameters.data.hasAppearance&&!!parameters.data.fieldValue;super(parameters,{isRenderable:isRenderable})}setPropertyOnSiblings(base,key,value,keyInStorage){const storage=this.annotationStorage;for(const element of this._getElementsByName(base.name,base.id)){if(element.domElement){element.domElement[key]=value}storage.setValue(element.id,{[keyInStorage]:value})}}render(){const storage=this.annotationStorage;const id=this.data.id;this.container.classList.add(\"textWidgetAnnotation\");let element=null;if(this.renderForms){const storedData=storage.getValue(id,{value:this.data.fieldValue});let textContent=storedData.value||\"\";const maxLen=storage.getValue(id,{charLimit:this.data.maxLen}).charLimit;if(maxLen&&textContent.length>maxLen){textContent=textContent.slice(0,maxLen)}let fieldFormattedValues=storedData.formattedValue||this.data.textContent?.join(\"\\n\")||null;if(fieldFormattedValues&&this.data.comb){fieldFormattedValues=fieldFormattedValues.replaceAll(/\\s+/g,\"\")}const elementData={userValue:textContent,formattedValue:fieldFormattedValues,lastCommittedValue:null,commitKey:1,focused:false};if(this.data.multiLine){element=document.createElement(\"textarea\");element.textContent=fieldFormattedValues??textContent;if(this.data.doNotScroll){element.style.overflowY=\"hidden\"}}else{element=document.createElement(\"input\");element.type=this.data.password?\"password\":\"text\";element.setAttribute(\"value\",fieldFormattedValues??textContent);if(this.data.doNotScroll){element.style.overflowX=\"hidden\"}}if(this.data.hasOwnCanvas){element.hidden=true}GetElementsByNameSet.add(element);element.setAttribute(\"data-element-id\",id);element.disabled=this.data.readOnly;element.name=this.data.fieldName;element.tabIndex=DEFAULT_TAB_INDEX;this._setRequired(element,this.data.required);if(maxLen){element.maxLength=maxLen}element.addEventListener(\"input\",(event=>{storage.setValue(id,{value:event.target.value});this.setPropertyOnSiblings(element,\"value\",event.target.value,\"value\");elementData.formattedValue=null}));element.addEventListener(\"resetform\",(event=>{const defaultValue=this.data.defaultFieldValue??\"\";element.value=elementData.userValue=defaultValue;elementData.formattedValue=null}));let blurListener=event=>{const{formattedValue:formattedValue}=elementData;if(formattedValue!==null&&formattedValue!==undefined){event.target.value=formattedValue}event.target.scrollLeft=0};if(this.enableScripting&&this.hasJSActions){element.addEventListener(\"focus\",(event=>{if(elementData.focused){return}const{target:target}=event;if(elementData.userValue){target.value=elementData.userValue}elementData.lastCommittedValue=target.value;elementData.commitKey=1;if(!this.data.actions?.Focus){elementData.focused=true}}));element.addEventListener(\"updatefromsandbox\",(jsEvent=>{this.showElementAndHideCanvas(jsEvent.target);const actions={value(event){elementData.userValue=event.detail.value??\"\";storage.setValue(id,{value:elementData.userValue.toString()});event.target.value=elementData.userValue},formattedValue(event){const{formattedValue:formattedValue}=event.detail;elementData.formattedValue=formattedValue;if(formattedValue!==null&&formattedValue!==undefined&&event.target!==document.activeElement){event.target.value=formattedValue}storage.setValue(id,{formattedValue:formattedValue})},selRange(event){event.target.setSelectionRange(...event.detail.selRange)},charLimit:event=>{const{charLimit:charLimit}=event.detail;const{target:target}=event;if(charLimit===0){target.removeAttribute(\"maxLength\");return}target.setAttribute(\"maxLength\",charLimit);let value=elementData.userValue;if(!value||value.length<=charLimit){return}value=value.slice(0,charLimit);target.value=elementData.userValue=value;storage.setValue(id,{value:value});this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\",{source:this,detail:{id:id,name:\"Keystroke\",value:value,willCommit:true,commitKey:1,selStart:target.selectionStart,selEnd:target.selectionEnd}})}};this._dispatchEventFromSandbox(actions,jsEvent)}));element.addEventListener(\"keydown\",(event=>{elementData.commitKey=1;let commitKey=-1;if(event.key===\"Escape\"){commitKey=0}else if(event.key===\"Enter\"&&!this.data.multiLine){commitKey=2}else if(event.key===\"Tab\"){elementData.commitKey=3}if(commitKey===-1){return}const{value:value}=event.target;if(elementData.lastCommittedValue===value){return}elementData.lastCommittedValue=value;elementData.userValue=value;this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\",{source:this,detail:{id:id,name:\"Keystroke\",value:value,willCommit:true,commitKey:commitKey,selStart:event.target.selectionStart,selEnd:event.target.selectionEnd}})}));const _blurListener=blurListener;blurListener=null;element.addEventListener(\"blur\",(event=>{if(!elementData.focused||!event.relatedTarget){return}if(!this.data.actions?.Blur){elementData.focused=false}const{value:value}=event.target;elementData.userValue=value;if(elementData.lastCommittedValue!==value){this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\",{source:this,detail:{id:id,name:\"Keystroke\",value:value,willCommit:true,commitKey:elementData.commitKey,selStart:event.target.selectionStart,selEnd:event.target.selectionEnd}})}_blurListener(event)}));if(this.data.actions?.Keystroke){element.addEventListener(\"beforeinput\",(event=>{elementData.lastCommittedValue=null;const{data:data,target:target}=event;const{value:value,selectionStart:selectionStart,selectionEnd:selectionEnd}=target;let selStart=selectionStart,selEnd=selectionEnd;switch(event.inputType){case\"deleteWordBackward\":{const match=value.substring(0,selectionStart).match(/\\w*[^\\w]*$/);if(match){selStart-=match[0].length}break}case\"deleteWordForward\":{const match=value.substring(selectionStart).match(/^[^\\w]*\\w*/);if(match){selEnd+=match[0].length}break}case\"deleteContentBackward\":if(selectionStart===selectionEnd){selStart-=1}break;case\"deleteContentForward\":if(selectionStart===selectionEnd){selEnd+=1}break}event.preventDefault();this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\",{source:this,detail:{id:id,name:\"Keystroke\",value:value,change:data||\"\",willCommit:false,selStart:selStart,selEnd:selEnd}})}))}this._setEventListeners(element,elementData,[[\"focus\",\"Focus\"],[\"blur\",\"Blur\"],[\"mousedown\",\"Mouse Down\"],[\"mouseenter\",\"Mouse Enter\"],[\"mouseleave\",\"Mouse Exit\"],[\"mouseup\",\"Mouse Up\"]],(event=>event.target.value))}if(blurListener){element.addEventListener(\"blur\",blurListener)}if(this.data.comb){const fieldWidth=this.data.rect[2]-this.data.rect[0];const combWidth=fieldWidth/maxLen;element.classList.add(\"comb\");element.style.letterSpacing=`calc(${combWidth}px * var(--total-scale-factor) - 1ch)`}}else{element=document.createElement(\"div\");element.textContent=this.data.fieldValue;element.style.verticalAlign=\"middle\";element.style.display=\"table-cell\";if(this.data.hasOwnCanvas){element.hidden=true}}this._setTextStyle(element);this._setBackgroundColor(element);this._setDefaultPropertiesFromJS(element);this.container.append(element);return this.container}}class SignatureWidgetAnnotationElement extends WidgetAnnotationElement{constructor(parameters){super(parameters,{isRenderable:!!parameters.data.hasOwnCanvas})}}class CheckboxWidgetAnnotationElement extends WidgetAnnotationElement{constructor(parameters){super(parameters,{isRenderable:parameters.renderForms})}render(){const storage=this.annotationStorage;const data=this.data;const id=data.id;let value=storage.getValue(id,{value:data.exportValue===data.fieldValue}).value;if(typeof value===\"string\"){value=value!==\"Off\";storage.setValue(id,{value:value})}this.container.classList.add(\"buttonWidgetAnnotation\",\"checkBox\");const element=document.createElement(\"input\");GetElementsByNameSet.add(element);element.setAttribute(\"data-element-id\",id);element.disabled=data.readOnly;this._setRequired(element,this.data.required);element.type=\"checkbox\";element.name=data.fieldName;if(value){element.setAttribute(\"checked\",true)}element.setAttribute(\"exportValue\",data.exportValue);element.tabIndex=DEFAULT_TAB_INDEX;element.addEventListener(\"change\",(event=>{const{name:name,checked:checked}=event.target;for(const checkbox of this._getElementsByName(name,id)){const curChecked=checked&&checkbox.exportValue===data.exportValue;if(checkbox.domElement){checkbox.domElement.checked=curChecked}storage.setValue(checkbox.id,{value:curChecked})}storage.setValue(id,{value:checked})}));element.addEventListener(\"resetform\",(event=>{const defaultValue=data.defaultFieldValue||\"Off\";event.target.checked=defaultValue===data.exportValue}));if(this.enableScripting&&this.hasJSActions){element.addEventListener(\"updatefromsandbox\",(jsEvent=>{const actions={value(event){event.target.checked=event.detail.value!==\"Off\";storage.setValue(id,{value:event.target.checked})}};this._dispatchEventFromSandbox(actions,jsEvent)}));this._setEventListeners(element,null,[[\"change\",\"Validate\"],[\"change\",\"Action\"],[\"focus\",\"Focus\"],[\"blur\",\"Blur\"],[\"mousedown\",\"Mouse Down\"],[\"mouseenter\",\"Mouse Enter\"],[\"mouseleave\",\"Mouse Exit\"],[\"mouseup\",\"Mouse Up\"]],(event=>event.target.checked))}this._setBackgroundColor(element);this._setDefaultPropertiesFromJS(element);this.container.append(element);return this.container}}class RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement{constructor(parameters){super(parameters,{isRenderable:parameters.renderForms})}render(){this.container.classList.add(\"buttonWidgetAnnotation\",\"radioButton\");const storage=this.annotationStorage;const data=this.data;const id=data.id;let value=storage.getValue(id,{value:data.fieldValue===data.buttonValue}).value;if(typeof value===\"string\"){value=value!==data.buttonValue;storage.setValue(id,{value:value})}if(value){for(const radio of this._getElementsByName(data.fieldName,id)){storage.setValue(radio.id,{value:false})}}const element=document.createElement(\"input\");GetElementsByNameSet.add(element);element.setAttribute(\"data-element-id\",id);element.disabled=data.readOnly;this._setRequired(element,this.data.required);element.type=\"radio\";element.name=data.fieldName;if(value){element.setAttribute(\"checked\",true)}element.tabIndex=DEFAULT_TAB_INDEX;element.addEventListener(\"change\",(event=>{const{name:name,checked:checked}=event.target;for(const radio of this._getElementsByName(name,id)){storage.setValue(radio.id,{value:false})}storage.setValue(id,{value:checked})}));element.addEventListener(\"resetform\",(event=>{const defaultValue=data.defaultFieldValue;event.target.checked=defaultValue!==null&&defaultValue!==undefined&&defaultValue===data.buttonValue}));if(this.enableScripting&&this.hasJSActions){const pdfButtonValue=data.buttonValue;element.addEventListener(\"updatefromsandbox\",(jsEvent=>{const actions={value:event=>{const checked=pdfButtonValue===event.detail.value;for(const radio of this._getElementsByName(event.target.name)){const curChecked=checked&&radio.id===id;if(radio.domElement){radio.domElement.checked=curChecked}storage.setValue(radio.id,{value:curChecked})}}};this._dispatchEventFromSandbox(actions,jsEvent)}));this._setEventListeners(element,null,[[\"change\",\"Validate\"],[\"change\",\"Action\"],[\"focus\",\"Focus\"],[\"blur\",\"Blur\"],[\"mousedown\",\"Mouse Down\"],[\"mouseenter\",\"Mouse Enter\"],[\"mouseleave\",\"Mouse Exit\"],[\"mouseup\",\"Mouse Up\"]],(event=>event.target.checked))}this._setBackgroundColor(element);this._setDefaultPropertiesFromJS(element);this.container.append(element);return this.container}}class PushButtonWidgetAnnotationElement extends LinkAnnotationElement{constructor(parameters){super(parameters,{ignoreBorder:parameters.data.hasAppearance})}render(){const container=super.render();container.classList.add(\"buttonWidgetAnnotation\",\"pushButton\");const linkElement=container.lastChild;if(this.enableScripting&&this.hasJSActions&&linkElement){this._setDefaultPropertiesFromJS(linkElement);linkElement.addEventListener(\"updatefromsandbox\",(jsEvent=>{this._dispatchEventFromSandbox({},jsEvent)}))}return container}}class ChoiceWidgetAnnotationElement extends WidgetAnnotationElement{constructor(parameters){super(parameters,{isRenderable:parameters.renderForms})}render(){this.container.classList.add(\"choiceWidgetAnnotation\");const storage=this.annotationStorage;const id=this.data.id;const storedData=storage.getValue(id,{value:this.data.fieldValue});const selectElement=document.createElement(\"select\");GetElementsByNameSet.add(selectElement);selectElement.setAttribute(\"data-element-id\",id);selectElement.disabled=this.data.readOnly;this._setRequired(selectElement,this.data.required);selectElement.name=this.data.fieldName;selectElement.tabIndex=DEFAULT_TAB_INDEX;let addAnEmptyEntry=this.data.combo&&this.data.options.length>0;if(!this.data.combo){selectElement.size=this.data.options.length;if(this.data.multiSelect){selectElement.multiple=true}}selectElement.addEventListener(\"resetform\",(event=>{const defaultValue=this.data.defaultFieldValue;for(const option of selectElement.options){option.selected=option.value===defaultValue}}));for(const option of this.data.options){const optionElement=document.createElement(\"option\");optionElement.textContent=option.displayValue;optionElement.value=option.exportValue;if(storedData.value.includes(option.exportValue)){optionElement.setAttribute(\"selected\",true);addAnEmptyEntry=false}selectElement.append(optionElement)}let removeEmptyEntry=null;if(addAnEmptyEntry){const noneOptionElement=document.createElement(\"option\");noneOptionElement.value=\" \";noneOptionElement.setAttribute(\"hidden\",true);noneOptionElement.setAttribute(\"selected\",true);selectElement.prepend(noneOptionElement);removeEmptyEntry=()=>{noneOptionElement.remove();selectElement.removeEventListener(\"input\",removeEmptyEntry);removeEmptyEntry=null};selectElement.addEventListener(\"input\",removeEmptyEntry)}const getValue=isExport=>{const name=isExport?\"value\":\"textContent\";const{options:options,multiple:multiple}=selectElement;if(!multiple){return options.selectedIndex===-1?null:options[options.selectedIndex][name]}return Array.prototype.filter.call(options,(option=>option.selected)).map((option=>option[name]))};let selectedValues=getValue(false);const getItems=event=>{const options=event.target.options;return Array.prototype.map.call(options,(option=>({displayValue:option.textContent,exportValue:option.value})))};if(this.enableScripting&&this.hasJSActions){selectElement.addEventListener(\"updatefromsandbox\",(jsEvent=>{const actions={value(event){removeEmptyEntry?.();const value=event.detail.value;const values=new Set(Array.isArray(value)?value:[value]);for(const option of selectElement.options){option.selected=values.has(option.value)}storage.setValue(id,{value:getValue(true)});selectedValues=getValue(false)},multipleSelection(event){selectElement.multiple=true},remove(event){const options=selectElement.options;const index=event.detail.remove;options[index].selected=false;selectElement.remove(index);if(options.length>0){const i=Array.prototype.findIndex.call(options,(option=>option.selected));if(i===-1){options[0].selected=true}}storage.setValue(id,{value:getValue(true),items:getItems(event)});selectedValues=getValue(false)},clear(event){while(selectElement.length!==0){selectElement.remove(0)}storage.setValue(id,{value:null,items:[]});selectedValues=getValue(false)},insert(event){const{index:index,displayValue:displayValue,exportValue:exportValue}=event.detail.insert;const selectChild=selectElement.children[index];const optionElement=document.createElement(\"option\");optionElement.textContent=displayValue;optionElement.value=exportValue;if(selectChild){selectChild.before(optionElement)}else{selectElement.append(optionElement)}storage.setValue(id,{value:getValue(true),items:getItems(event)});selectedValues=getValue(false)},items(event){const{items:items}=event.detail;while(selectElement.length!==0){selectElement.remove(0)}for(const item of items){const{displayValue:displayValue,exportValue:exportValue}=item;const optionElement=document.createElement(\"option\");optionElement.textContent=displayValue;optionElement.value=exportValue;selectElement.append(optionElement)}if(selectElement.options.length>0){selectElement.options[0].selected=true}storage.setValue(id,{value:getValue(true),items:getItems(event)});selectedValues=getValue(false)},indices(event){const indices=new Set(event.detail.indices);for(const option of event.target.options){option.selected=indices.has(option.index)}storage.setValue(id,{value:getValue(true)});selectedValues=getValue(false)},editable(event){event.target.disabled=!event.detail.editable}};this._dispatchEventFromSandbox(actions,jsEvent)}));selectElement.addEventListener(\"input\",(event=>{const exportValue=getValue(true);const change=getValue(false);storage.setValue(id,{value:exportValue});event.preventDefault();this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\",{source:this,detail:{id:id,name:\"Keystroke\",value:selectedValues,change:change,changeEx:exportValue,willCommit:false,commitKey:1,keyDown:false}})}));this._setEventListeners(selectElement,null,[[\"focus\",\"Focus\"],[\"blur\",\"Blur\"],[\"mousedown\",\"Mouse Down\"],[\"mouseenter\",\"Mouse Enter\"],[\"mouseleave\",\"Mouse Exit\"],[\"mouseup\",\"Mouse Up\"],[\"input\",\"Action\"],[\"input\",\"Validate\"]],(event=>event.target.value))}else{selectElement.addEventListener(\"input\",(function(event){storage.setValue(id,{value:getValue(true)})}))}if(this.data.combo){this._setTextStyle(selectElement)}else{}this._setBackgroundColor(selectElement);this._setDefaultPropertiesFromJS(selectElement);this.container.append(selectElement);return this.container}}class PopupAnnotationElement extends AnnotationElement{constructor(parameters){const{data:data,elements:elements}=parameters;super(parameters,{isRenderable:AnnotationElement._hasPopupData(data)});this.elements=elements;this.popup=null}render(){this.container.classList.add(\"popupAnnotation\");const popup=this.popup=new PopupElement({container:this.container,color:this.data.color,titleObj:this.data.titleObj,modificationDate:this.data.modificationDate,contentsObj:this.data.contentsObj,richText:this.data.richText,rect:this.data.rect,parentRect:this.data.parentRect||null,parent:this.parent,elements:this.elements,open:this.data.open});const elementIds=[];for(const element of this.elements){element.popup=popup;element.container.ariaHasPopup=\"dialog\";elementIds.push(element.data.id);element.addHighlightArea()}this.container.setAttribute(\"aria-controls\",elementIds.map((id=>`${AnnotationPrefix}${id}`)).join(\",\"));return this.container}}class PopupElement{#boundKeyDown=this.#keyDown.bind(this);#boundHide=this.#hide.bind(this);#boundShow=this.#show.bind(this);#boundToggle=this.#toggle.bind(this);#color=null;#container=null;#contentsObj=null;#dateObj=null;#elements=null;#parent=null;#parentRect=null;#pinned=false;#popup=null;#position=null;#rect=null;#richText=null;#titleObj=null;#updates=null;#wasVisible=false;constructor({container:container,color:color,elements:elements,titleObj:titleObj,modificationDate:modificationDate,contentsObj:contentsObj,richText:richText,parent:parent,rect:rect,parentRect:parentRect,open:open}){this.#container=container;this.#titleObj=titleObj;this.#contentsObj=contentsObj;this.#richText=richText;this.#parent=parent;this.#color=color;this.#rect=rect;this.#parentRect=parentRect;this.#elements=elements;this.#dateObj=PDFDateString.toDateObject(modificationDate);this.trigger=elements.flatMap((e=>e.getElementsToTriggerPopup()));for(const element of this.trigger){element.addEventListener(\"click\",this.#boundToggle);element.addEventListener(\"mouseenter\",this.#boundShow);element.addEventListener(\"mouseleave\",this.#boundHide);element.classList.add(\"popupTriggerArea\")}for(const element of elements){element.container?.addEventListener(\"keydown\",this.#boundKeyDown)}this.#container.hidden=true;if(open){this.#toggle()}}render(){if(this.#popup){return}const popup=this.#popup=document.createElement(\"div\");popup.className=\"popup\";if(this.#color){const baseColor=popup.style.outlineColor=Util.makeHexColor(...this.#color);popup.style.backgroundColor=`color-mix(in srgb, ${baseColor} 30%, white)`}const header=document.createElement(\"span\");header.className=\"header\";const title=document.createElement(\"h1\");header.append(title);({dir:title.dir,str:title.textContent}=this.#titleObj);popup.append(header);if(this.#dateObj){const modificationDate=document.createElement(\"span\");modificationDate.classList.add(\"popupDate\");modificationDate.setAttribute(\"data-l10n-id\",\"pdfjs-annotation-date-time-string\");modificationDate.setAttribute(\"data-l10n-args\",JSON.stringify({dateObj:this.#dateObj.valueOf()}));header.append(modificationDate)}const html=this.#html;if(html){XfaLayer.render({xfaHtml:html,intent:\"richText\",div:popup});popup.lastChild.classList.add(\"richText\",\"popupContent\")}else{const contents=this._formatContents(this.#contentsObj);popup.append(contents)}this.#container.append(popup)}get#html(){const richText=this.#richText;const contentsObj=this.#contentsObj;if(richText?.str&&(!contentsObj?.str||contentsObj.str===richText.str)){return this.#richText.html||null}return null}get#fontSize(){return this.#html?.attributes?.style?.fontSize||0}get#fontColor(){return this.#html?.attributes?.style?.color||null}#makePopupContent(text){const popupLines=[];const popupContent={str:text,html:{name:\"div\",attributes:{dir:\"auto\"},children:[{name:\"p\",children:popupLines}]}};const lineAttributes={style:{color:this.#fontColor,fontSize:this.#fontSize?`calc(${this.#fontSize}px * var(--total-scale-factor))`:\"\"}};for(const line of text.split(\"\\n\")){popupLines.push({name:\"span\",value:line,attributes:lineAttributes})}return popupContent}_formatContents({str:str,dir:dir}){const p=document.createElement(\"p\");p.classList.add(\"popupContent\");p.dir=dir;const lines=str.split(/(?:\\r\\n?|\\n)/);for(let i=0,ii=lines.length;i<ii;++i){const line=lines[i];p.append(document.createTextNode(line));if(i<ii-1){p.append(document.createElement(\"br\"))}}return p}#keyDown(event){if(event.altKey||event.shiftKey||event.ctrlKey||event.metaKey){return}if(event.key===\"Enter\"||event.key===\"Escape\"&&this.#pinned){this.#toggle()}}updateEdited({rect:rect,popupContent:popupContent}){this.#updates||={contentsObj:this.#contentsObj,richText:this.#richText};if(rect){this.#position=null}if(popupContent){this.#richText=this.#makePopupContent(popupContent);this.#contentsObj=null}this.#popup?.remove();this.#popup=null}resetEdited(){if(!this.#updates){return}({contentsObj:this.#contentsObj,richText:this.#richText}=this.#updates);this.#updates=null;this.#popup?.remove();this.#popup=null;this.#position=null}#setPosition(){if(this.#position!==null){return}const{page:{view:view},viewport:{rawDims:{pageWidth:pageWidth,pageHeight:pageHeight,pageX:pageX,pageY:pageY}}}=this.#parent;let useParentRect=!!this.#parentRect;let rect=useParentRect?this.#parentRect:this.#rect;for(const element of this.#elements){if(!rect||Util.intersect(element.data.rect,rect)!==null){rect=element.data.rect;useParentRect=true;break}}const normalizedRect=Util.normalizeRect([rect[0],view[3]-rect[1]+view[1],rect[2],view[3]-rect[3]+view[1]]);const HORIZONTAL_SPACE_AFTER_ANNOTATION=5;const parentWidth=useParentRect?rect[2]-rect[0]+HORIZONTAL_SPACE_AFTER_ANNOTATION:0;const popupLeft=normalizedRect[0]+parentWidth;const popupTop=normalizedRect[1];this.#position=[100*(popupLeft-pageX)/pageWidth,100*(popupTop-pageY)/pageHeight];const{style:style}=this.#container;style.left=`${this.#position[0]}%`;style.top=`${this.#position[1]}%`}#toggle(){this.#pinned=!this.#pinned;if(this.#pinned){this.#show();this.#container.addEventListener(\"click\",this.#boundToggle);this.#container.addEventListener(\"keydown\",this.#boundKeyDown)}else{this.#hide();this.#container.removeEventListener(\"click\",this.#boundToggle);this.#container.removeEventListener(\"keydown\",this.#boundKeyDown)}}#show(){if(!this.#popup){this.render()}if(!this.isVisible){this.#setPosition();this.#container.hidden=false;this.#container.style.zIndex=parseInt(this.#container.style.zIndex)+1e3}else if(this.#pinned){this.#container.classList.add(\"focused\")}}#hide(){this.#container.classList.remove(\"focused\");if(this.#pinned||!this.isVisible){return}this.#container.hidden=true;this.#container.style.zIndex=parseInt(this.#container.style.zIndex)-1e3}forceHide(){this.#wasVisible=this.isVisible;if(!this.#wasVisible){return}this.#container.hidden=true}maybeShow(){if(!this.#wasVisible){return}if(!this.#popup){this.#show()}this.#wasVisible=false;this.#container.hidden=false}get isVisible(){return this.#container.hidden===false}}class FreeTextAnnotationElement extends AnnotationElement{constructor(parameters){super(parameters,{isRenderable:true,ignoreBorder:true});this.textContent=parameters.data.textContent;this.textPosition=parameters.data.textPosition;this.annotationEditorType=AnnotationEditorType.FREETEXT}render(){this.container.classList.add(\"freeTextAnnotation\");if(this.textContent){const content=document.createElement(\"div\");content.classList.add(\"annotationTextContent\");content.setAttribute(\"role\",\"comment\");for(const line of this.textContent){const lineSpan=document.createElement(\"span\");lineSpan.textContent=line;content.append(lineSpan)}this.container.append(content)}if(!this.data.popupRef&&this.hasPopupData){this._createPopup()}this._editOnDoubleClick();return this.container}}class LineAnnotationElement extends AnnotationElement{#line=null;constructor(parameters){super(parameters,{isRenderable:true,ignoreBorder:true})}render(){this.container.classList.add(\"lineAnnotation\");const{data:data,width:width,height:height}=this;const svg=this.svgFactory.create(width,height,true);const line=this.#line=this.svgFactory.createElement(\"svg:line\");line.setAttribute(\"x1\",data.rect[2]-data.lineCoordinates[0]);line.setAttribute(\"y1\",data.rect[3]-data.lineCoordinates[1]);line.setAttribute(\"x2\",data.rect[2]-data.lineCoordinates[2]);line.setAttribute(\"y2\",data.rect[3]-data.lineCoordinates[3]);line.setAttribute(\"stroke-width\",data.borderStyle.width||1);line.setAttribute(\"stroke\",\"transparent\");line.setAttribute(\"fill\",\"transparent\");svg.append(line);this.container.append(svg);if(!data.popupRef&&this.hasPopupData){this._createPopup()}return this.container}getElementsToTriggerPopup(){return this.#line}addHighlightArea(){this.container.classList.add(\"highlightArea\")}}class SquareAnnotationElement extends AnnotationElement{#square=null;constructor(parameters){super(parameters,{isRenderable:true,ignoreBorder:true})}render(){this.container.classList.add(\"squareAnnotation\");const{data:data,width:width,height:height}=this;const svg=this.svgFactory.create(width,height,true);const borderWidth=data.borderStyle.width;const square=this.#square=this.svgFactory.createElement(\"svg:rect\");square.setAttribute(\"x\",borderWidth/2);square.setAttribute(\"y\",borderWidth/2);square.setAttribute(\"width\",width-borderWidth);square.setAttribute(\"height\",height-borderWidth);square.setAttribute(\"stroke-width\",borderWidth||1);square.setAttribute(\"stroke\",\"transparent\");square.setAttribute(\"fill\",\"transparent\");svg.append(square);this.container.append(svg);if(!data.popupRef&&this.hasPopupData){this._createPopup()}return this.container}getElementsToTriggerPopup(){return this.#square}addHighlightArea(){this.container.classList.add(\"highlightArea\")}}class CircleAnnotationElement extends AnnotationElement{#circle=null;constructor(parameters){super(parameters,{isRenderable:true,ignoreBorder:true})}render(){this.container.classList.add(\"circleAnnotation\");const{data:data,width:width,height:height}=this;const svg=this.svgFactory.create(width,height,true);const borderWidth=data.borderStyle.width;const circle=this.#circle=this.svgFactory.createElement(\"svg:ellipse\");circle.setAttribute(\"cx\",width/2);circle.setAttribute(\"cy\",height/2);circle.setAttribute(\"rx\",width/2-borderWidth/2);circle.setAttribute(\"ry\",height/2-borderWidth/2);circle.setAttribute(\"stroke-width\",borderWidth||1);circle.setAttribute(\"stroke\",\"transparent\");circle.setAttribute(\"fill\",\"transparent\");svg.append(circle);this.container.append(svg);if(!data.popupRef&&this.hasPopupData){this._createPopup()}return this.container}getElementsToTriggerPopup(){return this.#circle}addHighlightArea(){this.container.classList.add(\"highlightArea\")}}class PolylineAnnotationElement extends AnnotationElement{#polyline=null;constructor(parameters){super(parameters,{isRenderable:true,ignoreBorder:true});this.containerClassName=\"polylineAnnotation\";this.svgElementName=\"svg:polyline\"}render(){this.container.classList.add(this.containerClassName);const{data:{rect:rect,vertices:vertices,borderStyle:borderStyle,popupRef:popupRef},width:width,height:height}=this;if(!vertices){return this.container}const svg=this.svgFactory.create(width,height,true);let points=[];for(let i=0,ii=vertices.length;i<ii;i+=2){const x=vertices[i]-rect[0];const y=rect[3]-vertices[i+1];points.push(`${x},${y}`)}points=points.join(\" \");const polyline=this.#polyline=this.svgFactory.createElement(this.svgElementName);polyline.setAttribute(\"points\",points);polyline.setAttribute(\"stroke-width\",borderStyle.width||1);polyline.setAttribute(\"stroke\",\"transparent\");polyline.setAttribute(\"fill\",\"transparent\");svg.append(polyline);this.container.append(svg);if(!popupRef&&this.hasPopupData){this._createPopup()}return this.container}getElementsToTriggerPopup(){return this.#polyline}addHighlightArea(){this.container.classList.add(\"highlightArea\")}}class PolygonAnnotationElement extends PolylineAnnotationElement{constructor(parameters){super(parameters);this.containerClassName=\"polygonAnnotation\";this.svgElementName=\"svg:polygon\"}}class CaretAnnotationElement extends AnnotationElement{constructor(parameters){super(parameters,{isRenderable:true,ignoreBorder:true})}render(){this.container.classList.add(\"caretAnnotation\");if(!this.data.popupRef&&this.hasPopupData){this._createPopup()}return this.container}}class InkAnnotationElement extends AnnotationElement{#polylinesGroupElement=null;#polylines=[];constructor(parameters){super(parameters,{isRenderable:true,ignoreBorder:true});this.containerClassName=\"inkAnnotation\";this.svgElementName=\"svg:polyline\";this.annotationEditorType=this.data.it===\"InkHighlight\"?AnnotationEditorType.HIGHLIGHT:AnnotationEditorType.INK}#getTransform(rotation,rect){switch(rotation){case 90:return{transform:`rotate(90) translate(${-rect[0]},${rect[1]}) scale(1,-1)`,width:rect[3]-rect[1],height:rect[2]-rect[0]};case 180:return{transform:`rotate(180) translate(${-rect[2]},${rect[1]}) scale(1,-1)`,width:rect[2]-rect[0],height:rect[3]-rect[1]};case 270:return{transform:`rotate(270) translate(${-rect[2]},${rect[3]}) scale(1,-1)`,width:rect[3]-rect[1],height:rect[2]-rect[0]};default:return{transform:`translate(${-rect[0]},${rect[3]}) scale(1,-1)`,width:rect[2]-rect[0],height:rect[3]-rect[1]}}}render(){this.container.classList.add(this.containerClassName);const{data:{rect:rect,rotation:rotation,inkLists:inkLists,borderStyle:borderStyle,popupRef:popupRef}}=this;const{transform:transform,width:width,height:height}=this.#getTransform(rotation,rect);const svg=this.svgFactory.create(width,height,true);const g=this.#polylinesGroupElement=this.svgFactory.createElement(\"svg:g\");svg.append(g);g.setAttribute(\"stroke-width\",borderStyle.width||1);g.setAttribute(\"stroke-linecap\",\"round\");g.setAttribute(\"stroke-linejoin\",\"round\");g.setAttribute(\"stroke-miterlimit\",10);g.setAttribute(\"stroke\",\"transparent\");g.setAttribute(\"fill\",\"transparent\");g.setAttribute(\"transform\",transform);for(let i=0,ii=inkLists.length;i<ii;i++){const polyline=this.svgFactory.createElement(this.svgElementName);this.#polylines.push(polyline);polyline.setAttribute(\"points\",inkLists[i].join(\",\"));g.append(polyline)}if(!popupRef&&this.hasPopupData){this._createPopup()}this.container.append(svg);this._editOnDoubleClick();return this.container}updateEdited(params){super.updateEdited(params);const{thickness:thickness,points:points,rect:rect}=params;const g=this.#polylinesGroupElement;if(thickness>=0){g.setAttribute(\"stroke-width\",thickness||1)}if(points){for(let i=0,ii=this.#polylines.length;i<ii;i++){this.#polylines[i].setAttribute(\"points\",points[i].join(\",\"))}}if(rect){const{transform:transform,width:width,height:height}=this.#getTransform(this.data.rotation,rect);const root=g.parentElement;root.setAttribute(\"viewBox\",`0 0 ${width} ${height}`);g.setAttribute(\"transform\",transform)}}getElementsToTriggerPopup(){return this.#polylines}addHighlightArea(){this.container.classList.add(\"highlightArea\")}}class HighlightAnnotationElement extends AnnotationElement{constructor(parameters){super(parameters,{isRenderable:true,ignoreBorder:true,createQuadrilaterals:true});this.annotationEditorType=AnnotationEditorType.HIGHLIGHT}render(){if(!this.data.popupRef&&this.hasPopupData){this._createPopup()}this.container.classList.add(\"highlightAnnotation\");this._editOnDoubleClick();return this.container}}class UnderlineAnnotationElement extends AnnotationElement{constructor(parameters){super(parameters,{isRenderable:true,ignoreBorder:true,createQuadrilaterals:true})}render(){if(!this.data.popupRef&&this.hasPopupData){this._createPopup()}this.container.classList.add(\"underlineAnnotation\");return this.container}}class SquigglyAnnotationElement extends AnnotationElement{constructor(parameters){super(parameters,{isRenderable:true,ignoreBorder:true,createQuadrilaterals:true})}render(){if(!this.data.popupRef&&this.hasPopupData){this._createPopup()}this.container.classList.add(\"squigglyAnnotation\");return this.container}}class StrikeOutAnnotationElement extends AnnotationElement{constructor(parameters){super(parameters,{isRenderable:true,ignoreBorder:true,createQuadrilaterals:true})}render(){if(!this.data.popupRef&&this.hasPopupData){this._createPopup()}this.container.classList.add(\"strikeoutAnnotation\");return this.container}}class StampAnnotationElement extends AnnotationElement{constructor(parameters){super(parameters,{isRenderable:true,ignoreBorder:true});this.annotationEditorType=AnnotationEditorType.STAMP}render(){this.container.classList.add(\"stampAnnotation\");this.container.setAttribute(\"role\",\"img\");if(!this.data.popupRef&&this.hasPopupData){this._createPopup()}this._editOnDoubleClick();return this.container}}class FileAttachmentAnnotationElement extends AnnotationElement{#trigger=null;constructor(parameters){super(parameters,{isRenderable:true});const{file:file}=this.data;this.filename=file.filename;this.content=file.content;this.linkService.eventBus?.dispatch(\"fileattachmentannotation\",{source:this,...file})}render(){this.container.classList.add(\"fileAttachmentAnnotation\");const{container:container,data:data}=this;let trigger;if(data.hasAppearance||data.fillAlpha===0){trigger=document.createElement(\"div\")}else{trigger=document.createElement(\"img\");trigger.src=`${this.imageResourcesPath}annotation-${/paperclip/i.test(data.name)?\"paperclip\":\"pushpin\"}.svg`;if(data.fillAlpha&&data.fillAlpha<1){trigger.style=`filter: opacity(${Math.round(data.fillAlpha*100)}%);`}}trigger.addEventListener(\"dblclick\",this.#download.bind(this));this.#trigger=trigger;const{isMac:isMac}=util_FeatureTest.platform;container.addEventListener(\"keydown\",(evt=>{if(evt.key===\"Enter\"&&(isMac?evt.metaKey:evt.ctrlKey)){this.#download()}}));if(!data.popupRef&&this.hasPopupData){this._createPopup()}else{trigger.classList.add(\"popupTriggerArea\")}container.append(trigger);return container}getElementsToTriggerPopup(){return this.#trigger}addHighlightArea(){this.container.classList.add(\"highlightArea\")}#download(){this.downloadManager?.openOrDownloadData(this.content,this.filename)}}class AnnotationLayer{#accessibilityManager=null;#annotationCanvasMap=null;#editableAnnotations=new Map;#structTreeLayer=null;constructor({div:div,accessibilityManager:accessibilityManager,annotationCanvasMap:annotationCanvasMap,annotationEditorUIManager:annotationEditorUIManager,page:page,viewport:viewport,structTreeLayer:structTreeLayer}){this.div=div;this.#accessibilityManager=accessibilityManager;this.#annotationCanvasMap=annotationCanvasMap;this.#structTreeLayer=structTreeLayer||null;this.page=page;this.viewport=viewport;this.zIndex=0;this._annotationEditorUIManager=annotationEditorUIManager}hasEditableAnnotations(){return this.#editableAnnotations.size>0}async#appendElement(element,id){const contentElement=element.firstChild||element;const annotationId=contentElement.id=`${AnnotationPrefix}${id}`;const ariaAttributes=await(this.#structTreeLayer?.getAriaAttributes(annotationId));if(ariaAttributes){for(const[key,value]of ariaAttributes){contentElement.setAttribute(key,value)}}this.div.append(element);this.#accessibilityManager?.moveElementInDOM(this.div,element,contentElement,false)}async render(params){const{annotations:annotations}=params;const layer=this.div;setLayerDimensions(layer,this.viewport);const popupToElements=new Map;const elementParams={data:null,layer:layer,linkService:params.linkService,downloadManager:params.downloadManager,imageResourcesPath:params.imageResourcesPath||\"\",renderForms:params.renderForms!==false,svgFactory:new DOMSVGFactory,annotationStorage:params.annotationStorage||new AnnotationStorage,enableScripting:params.enableScripting===true,hasJSActions:params.hasJSActions,fieldObjects:params.fieldObjects,parent:this,elements:null};for(const data of annotations){if(data.noHTML){continue}const isPopupAnnotation=data.annotationType===AnnotationType.POPUP;if(!isPopupAnnotation){if(data.rect[2]===data.rect[0]||data.rect[3]===data.rect[1]){continue}}else{const elements=popupToElements.get(data.id);if(!elements){continue}elementParams.elements=elements}elementParams.data=data;const element=AnnotationElementFactory.create(elementParams);if(!element.isRenderable){continue}if(!isPopupAnnotation&&data.popupRef){const elements=popupToElements.get(data.popupRef);if(!elements){popupToElements.set(data.popupRef,[element])}else{elements.push(element)}}const rendered=element.render();if(data.hidden){rendered.style.visibility=\"hidden\"}await this.#appendElement(rendered,data.id);if(element._isEditable){this.#editableAnnotations.set(element.data.id,element);this._annotationEditorUIManager?.renderAnnotationElement(element)}}this.#setAnnotationCanvasMap()}async addLinkAnnotations(annotations,linkService){const elementParams={data:null,layer:this.div,linkService:linkService,svgFactory:new DOMSVGFactory,parent:this};for(const data of annotations){data.borderStyle||=AnnotationLayer._defaultBorderStyle;elementParams.data=data;const element=AnnotationElementFactory.create(elementParams);if(!element.isRenderable){continue}const rendered=element.render();await this.#appendElement(rendered,data.id)}}update({viewport:viewport}){const layer=this.div;this.viewport=viewport;setLayerDimensions(layer,{rotation:viewport.rotation});this.#setAnnotationCanvasMap();layer.hidden=false}#setAnnotationCanvasMap(){if(!this.#annotationCanvasMap){return}const layer=this.div;for(const[id,canvas]of this.#annotationCanvasMap){const element=layer.querySelector(`[data-annotation-id=\"${id}\"]`);if(!element){continue}canvas.className=\"annotationContent\";const{firstChild:firstChild}=element;if(!firstChild){element.append(canvas)}else if(firstChild.nodeName===\"CANVAS\"){firstChild.replaceWith(canvas)}else if(!firstChild.classList.contains(\"annotationContent\")){firstChild.before(canvas)}else{firstChild.after(canvas)}const editableAnnotation=this.#editableAnnotations.get(id);if(!editableAnnotation){continue}if(editableAnnotation._hasNoCanvas){this._annotationEditorUIManager?.setMissingCanvas(id,element.id,canvas);editableAnnotation._hasNoCanvas=false}else{editableAnnotation.canvas=canvas}}this.#annotationCanvasMap.clear()}getEditableAnnotations(){return Array.from(this.#editableAnnotations.values())}getEditableAnnotation(id){return this.#editableAnnotations.get(id)}static get _defaultBorderStyle(){return shadow(this,\"_defaultBorderStyle\",Object.freeze({width:1,rawWidth:1,style:AnnotationBorderStyleType.SOLID,dashArray:[3],horizontalCornerRadius:0,verticalCornerRadius:0}))}}const EOL_PATTERN=/\\r\\n?|\\n/g;class FreeTextEditor extends AnnotationEditor{#color;#content=\"\";#editorDivId=`${this.id}-editor`;#editModeAC=null;#fontSize;static _freeTextDefaultContent=\"\";static _internalPadding=0;static _defaultColor=null;static _defaultFontSize=10;static get _keyboardManager(){const proto=FreeTextEditor.prototype;const arrowChecker=self=>self.isEmpty();const small=AnnotationEditorUIManager.TRANSLATE_SMALL;const big=AnnotationEditorUIManager.TRANSLATE_BIG;return shadow(this,\"_keyboardManager\",new KeyboardManager([[[\"ctrl+s\",\"mac+meta+s\",\"ctrl+p\",\"mac+meta+p\"],proto.commitOrRemove,{bubbles:true}],[[\"ctrl+Enter\",\"mac+meta+Enter\",\"Escape\",\"mac+Escape\"],proto.commitOrRemove],[[\"ArrowLeft\",\"mac+ArrowLeft\"],proto._translateEmpty,{args:[-small,0],checker:arrowChecker}],[[\"ctrl+ArrowLeft\",\"mac+shift+ArrowLeft\"],proto._translateEmpty,{args:[-big,0],checker:arrowChecker}],[[\"ArrowRight\",\"mac+ArrowRight\"],proto._translateEmpty,{args:[small,0],checker:arrowChecker}],[[\"ctrl+ArrowRight\",\"mac+shift+ArrowRight\"],proto._translateEmpty,{args:[big,0],checker:arrowChecker}],[[\"ArrowUp\",\"mac+ArrowUp\"],proto._translateEmpty,{args:[0,-small],checker:arrowChecker}],[[\"ctrl+ArrowUp\",\"mac+shift+ArrowUp\"],proto._translateEmpty,{args:[0,-big],checker:arrowChecker}],[[\"ArrowDown\",\"mac+ArrowDown\"],proto._translateEmpty,{args:[0,small],checker:arrowChecker}],[[\"ctrl+ArrowDown\",\"mac+shift+ArrowDown\"],proto._translateEmpty,{args:[0,big],checker:arrowChecker}]]))}static _type=\"freetext\";static _editorType=AnnotationEditorType.FREETEXT;constructor(params){super({...params,name:\"freeTextEditor\"});this.#color=params.color||FreeTextEditor._defaultColor||AnnotationEditor._defaultLineColor;this.#fontSize=params.fontSize||FreeTextEditor._defaultFontSize}static initialize(l10n,uiManager){AnnotationEditor.initialize(l10n,uiManager);const style=getComputedStyle(document.documentElement);this._internalPadding=parseFloat(style.getPropertyValue(\"--freetext-padding\"))}static updateDefaultParams(type,value){switch(type){case AnnotationEditorParamsType.FREETEXT_SIZE:FreeTextEditor._defaultFontSize=value;break;case AnnotationEditorParamsType.FREETEXT_COLOR:FreeTextEditor._defaultColor=value;break}}updateParams(type,value){switch(type){case AnnotationEditorParamsType.FREETEXT_SIZE:this.#updateFontSize(value);break;case AnnotationEditorParamsType.FREETEXT_COLOR:this.#updateColor(value);break}}static get defaultPropertiesToUpdate(){return[[AnnotationEditorParamsType.FREETEXT_SIZE,FreeTextEditor._defaultFontSize],[AnnotationEditorParamsType.FREETEXT_COLOR,FreeTextEditor._defaultColor||AnnotationEditor._defaultLineColor]]}get propertiesToUpdate(){return[[AnnotationEditorParamsType.FREETEXT_SIZE,this.#fontSize],[AnnotationEditorParamsType.FREETEXT_COLOR,this.#color]]}#updateFontSize(fontSize){const setFontsize=size=>{this.editorDiv.style.fontSize=`calc(${size}px * var(--total-scale-factor))`;this.translate(0,-(size-this.#fontSize)*this.parentScale);this.#fontSize=size;this.#setEditorDimensions()};const savedFontsize=this.#fontSize;this.addCommands({cmd:setFontsize.bind(this,fontSize),undo:setFontsize.bind(this,savedFontsize),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:true,type:AnnotationEditorParamsType.FREETEXT_SIZE,overwriteIfSameType:true,keepUndo:true})}#updateColor(color){const setColor=col=>{this.#color=this.editorDiv.style.color=col};const savedColor=this.#color;this.addCommands({cmd:setColor.bind(this,color),undo:setColor.bind(this,savedColor),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:true,type:AnnotationEditorParamsType.FREETEXT_COLOR,overwriteIfSameType:true,keepUndo:true})}_translateEmpty(x,y){this._uiManager.translateSelectedEditors(x,y,true)}getInitialTranslation(){const scale=this.parentScale;return[-FreeTextEditor._internalPadding*scale,-(FreeTextEditor._internalPadding+this.#fontSize)*scale]}rebuild(){if(!this.parent){return}super.rebuild();if(this.div===null){return}if(!this.isAttachedToDOM){this.parent.add(this)}}enableEditMode(){if(this.isInEditMode()){return}this.parent.setEditingState(false);this.parent.updateToolbar(AnnotationEditorType.FREETEXT);super.enableEditMode();this.overlayDiv.classList.remove(\"enabled\");this.editorDiv.contentEditable=true;this._isDraggable=false;this.div.removeAttribute(\"aria-activedescendant\");this.#editModeAC=new AbortController;const signal=this._uiManager.combinedSignal(this.#editModeAC);this.editorDiv.addEventListener(\"keydown\",this.editorDivKeydown.bind(this),{signal:signal});this.editorDiv.addEventListener(\"focus\",this.editorDivFocus.bind(this),{signal:signal});this.editorDiv.addEventListener(\"blur\",this.editorDivBlur.bind(this),{signal:signal});this.editorDiv.addEventListener(\"input\",this.editorDivInput.bind(this),{signal:signal});this.editorDiv.addEventListener(\"paste\",this.editorDivPaste.bind(this),{signal:signal})}disableEditMode(){if(!this.isInEditMode()){return}this.parent.setEditingState(true);super.disableEditMode();this.overlayDiv.classList.add(\"enabled\");this.editorDiv.contentEditable=false;this.div.setAttribute(\"aria-activedescendant\",this.#editorDivId);this._isDraggable=true;this.#editModeAC?.abort();this.#editModeAC=null;this.div.focus({preventScroll:true});this.isEditing=false;this.parent.div.classList.add(\"freetextEditing\")}focusin(event){if(!this._focusEventsAllowed){return}super.focusin(event);if(event.target!==this.editorDiv){this.editorDiv.focus()}}onceAdded(focus){if(this.width){return}this.enableEditMode();if(focus){this.editorDiv.focus()}if(this._initialOptions?.isCentered){this.center()}this._initialOptions=null}isEmpty(){return!this.editorDiv||this.editorDiv.innerText.trim()===\"\"}remove(){this.isEditing=false;if(this.parent){this.parent.setEditingState(true);this.parent.div.classList.add(\"freetextEditing\")}super.remove()}#extractText(){const buffer=[];this.editorDiv.normalize();let prevChild=null;for(const child of this.editorDiv.childNodes){if(prevChild?.nodeType===Node.TEXT_NODE&&child.nodeName===\"BR\"){continue}buffer.push(FreeTextEditor.#getNodeContent(child));prevChild=child}return buffer.join(\"\\n\")}#setEditorDimensions(){const[parentWidth,parentHeight]=this.parentDimensions;let rect;if(this.isAttachedToDOM){rect=this.div.getBoundingClientRect()}else{const{currentLayer:currentLayer,div:div}=this;const savedDisplay=div.style.display;const savedVisibility=div.classList.contains(\"hidden\");div.classList.remove(\"hidden\");div.style.display=\"hidden\";currentLayer.div.append(this.div);rect=div.getBoundingClientRect();div.remove();div.style.display=savedDisplay;div.classList.toggle(\"hidden\",savedVisibility)}if(this.rotation%180===this.parentRotation%180){this.width=rect.width/parentWidth;this.height=rect.height/parentHeight}else{this.width=rect.height/parentWidth;this.height=rect.width/parentHeight}this.fixAndSetPosition()}commit(){if(!this.isInEditMode()){return}super.commit();this.disableEditMode();const savedText=this.#content;const newText=this.#content=this.#extractText().trimEnd();if(savedText===newText){return}const setText=text=>{this.#content=text;if(!text){this.remove();return}this.#setContent();this._uiManager.rebuild(this);this.#setEditorDimensions()};this.addCommands({cmd:()=>{setText(newText)},undo:()=>{setText(savedText)},mustExec:false});this.#setEditorDimensions()}shouldGetKeyboardEvents(){return this.isInEditMode()}enterInEditMode(){this.enableEditMode();this.editorDiv.focus()}dblclick(event){this.enterInEditMode()}keydown(event){if(event.target===this.div&&event.key===\"Enter\"){this.enterInEditMode();event.preventDefault()}}editorDivKeydown(event){FreeTextEditor._keyboardManager.exec(this,event)}editorDivFocus(event){this.isEditing=true}editorDivBlur(event){this.isEditing=false}editorDivInput(event){this.parent.div.classList.toggle(\"freetextEditing\",this.isEmpty())}disableEditing(){this.editorDiv.setAttribute(\"role\",\"comment\");this.editorDiv.removeAttribute(\"aria-multiline\")}enableEditing(){this.editorDiv.setAttribute(\"role\",\"textbox\");this.editorDiv.setAttribute(\"aria-multiline\",true)}render(){if(this.div){return this.div}let baseX,baseY;if(this._isCopy||this.annotationElementId){baseX=this.x;baseY=this.y}super.render();this.editorDiv=document.createElement(\"div\");this.editorDiv.className=\"internal\";this.editorDiv.setAttribute(\"id\",this.#editorDivId);this.editorDiv.setAttribute(\"data-l10n-id\",\"pdfjs-free-text2\");this.editorDiv.setAttribute(\"data-l10n-attrs\",\"default-content\");this.enableEditing();this.editorDiv.contentEditable=true;const{style:style}=this.editorDiv;style.fontSize=`calc(${this.#fontSize}px * var(--total-scale-factor))`;style.color=this.#color;this.div.append(this.editorDiv);this.overlayDiv=document.createElement(\"div\");this.overlayDiv.classList.add(\"overlay\",\"enabled\");this.div.append(this.overlayDiv);bindEvents(this,this.div,[\"dblclick\",\"keydown\"]);if(this._isCopy||this.annotationElementId){const[parentWidth,parentHeight]=this.parentDimensions;if(this.annotationElementId){const{position:position}=this._initialData;let[tx,ty]=this.getInitialTranslation();[tx,ty]=this.pageTranslationToScreen(tx,ty);const[pageWidth,pageHeight]=this.pageDimensions;const[pageX,pageY]=this.pageTranslation;let posX,posY;switch(this.rotation){case 0:posX=baseX+(position[0]-pageX)/pageWidth;posY=baseY+this.height-(position[1]-pageY)/pageHeight;break;case 90:posX=baseX+(position[0]-pageX)/pageWidth;posY=baseY-(position[1]-pageY)/pageHeight;[tx,ty]=[ty,-tx];break;case 180:posX=baseX-this.width+(position[0]-pageX)/pageWidth;posY=baseY-(position[1]-pageY)/pageHeight;[tx,ty]=[-tx,-ty];break;case 270:posX=baseX+(position[0]-pageX-this.height*pageHeight)/pageWidth;posY=baseY+(position[1]-pageY-this.width*pageWidth)/pageHeight;[tx,ty]=[-ty,tx];break}this.setAt(posX*parentWidth,posY*parentHeight,tx,ty)}else{this._moveAfterPaste(baseX,baseY)}this.#setContent();this._isDraggable=true;this.editorDiv.contentEditable=false}else{this._isDraggable=false;this.editorDiv.contentEditable=true}return this.div}static#getNodeContent(node){return(node.nodeType===Node.TEXT_NODE?node.nodeValue:node.innerText).replaceAll(EOL_PATTERN,\"\")}editorDivPaste(event){const clipboardData=event.clipboardData||window.clipboardData;const{types:types}=clipboardData;if(types.length===1&&types[0]===\"text/plain\"){return}event.preventDefault();const paste=FreeTextEditor.#deserializeContent(clipboardData.getData(\"text\")||\"\").replaceAll(EOL_PATTERN,\"\\n\");if(!paste){return}const selection=window.getSelection();if(!selection.rangeCount){return}this.editorDiv.normalize();selection.deleteFromDocument();const range=selection.getRangeAt(0);if(!paste.includes(\"\\n\")){range.insertNode(document.createTextNode(paste));this.editorDiv.normalize();selection.collapseToStart();return}const{startContainer:startContainer,startOffset:startOffset}=range;const bufferBefore=[];const bufferAfter=[];if(startContainer.nodeType===Node.TEXT_NODE){const parent=startContainer.parentElement;bufferAfter.push(startContainer.nodeValue.slice(startOffset).replaceAll(EOL_PATTERN,\"\"));if(parent!==this.editorDiv){let buffer=bufferBefore;for(const child of this.editorDiv.childNodes){if(child===parent){buffer=bufferAfter;continue}buffer.push(FreeTextEditor.#getNodeContent(child))}}bufferBefore.push(startContainer.nodeValue.slice(0,startOffset).replaceAll(EOL_PATTERN,\"\"))}else if(startContainer===this.editorDiv){let buffer=bufferBefore;let i=0;for(const child of this.editorDiv.childNodes){if(i++===startOffset){buffer=bufferAfter}buffer.push(FreeTextEditor.#getNodeContent(child))}}this.#content=`${bufferBefore.join(\"\\n\")}${paste}${bufferAfter.join(\"\\n\")}`;this.#setContent();const newRange=new Range;let beforeLength=Math.sumPrecise(bufferBefore.map((line=>line.length)));for(const{firstChild:firstChild}of this.editorDiv.childNodes){if(firstChild.nodeType===Node.TEXT_NODE){const length=firstChild.nodeValue.length;if(beforeLength<=length){newRange.setStart(firstChild,beforeLength);newRange.setEnd(firstChild,beforeLength);break}beforeLength-=length}}selection.removeAllRanges();selection.addRange(newRange)}#setContent(){this.editorDiv.replaceChildren();if(!this.#content){return}for(const line of this.#content.split(\"\\n\")){const div=document.createElement(\"div\");div.append(line?document.createTextNode(line):document.createElement(\"br\"));this.editorDiv.append(div)}}#serializeContent(){return this.#content.replaceAll(\" \",\" \")}static#deserializeContent(content){return content.replaceAll(\" \",\" \")}get contentDiv(){return this.editorDiv}static async deserialize(data,parent,uiManager){let initialData=null;if(data instanceof FreeTextAnnotationElement){const{data:{defaultAppearanceData:{fontSize:fontSize,fontColor:fontColor},rect:rect,rotation:rotation,id:id,popupRef:popupRef},textContent:textContent,textPosition:textPosition,parent:{page:{pageNumber:pageNumber}}}=data;if(!textContent||textContent.length===0){return null}initialData=data={annotationType:AnnotationEditorType.FREETEXT,color:Array.from(fontColor),fontSize:fontSize,value:textContent.join(\"\\n\"),position:textPosition,pageIndex:pageNumber-1,rect:rect.slice(0),rotation:rotation,id:id,deleted:false,popupRef:popupRef}}const editor=await super.deserialize(data,parent,uiManager);editor.#fontSize=data.fontSize;editor.#color=Util.makeHexColor(...data.color);editor.#content=FreeTextEditor.#deserializeContent(data.value);editor.annotationElementId=data.id||null;editor._initialData=initialData;return editor}serialize(isForCopying=false){if(this.isEmpty()){return null}if(this.deleted){return this.serializeDeleted()}const padding=FreeTextEditor._internalPadding*this.parentScale;const rect=this.getRect(padding,padding);const color=AnnotationEditor._colorManager.convert(this.isAttachedToDOM?getComputedStyle(this.editorDiv).color:this.#color);const serialized={annotationType:AnnotationEditorType.FREETEXT,color:color,fontSize:this.#fontSize,value:this.#serializeContent(),pageIndex:this.pageIndex,rect:rect,rotation:this.rotation,structTreeParentId:this._structTreeParentId};if(isForCopying){serialized.isCopy=true;return serialized}if(this.annotationElementId&&!this.#hasElementChanged(serialized)){return null}serialized.id=this.annotationElementId;return serialized}#hasElementChanged(serialized){const{value:value,fontSize:fontSize,color:color,pageIndex:pageIndex}=this._initialData;return this._hasBeenMoved||serialized.value!==value||serialized.fontSize!==fontSize||serialized.color.some(((c,i)=>c!==color[i]))||serialized.pageIndex!==pageIndex}renderAnnotationElement(annotation){const content=super.renderAnnotationElement(annotation);if(this.deleted){return content}const{style:style}=content;style.fontSize=`calc(${this.#fontSize}px * var(--total-scale-factor))`;style.color=this.#color;content.replaceChildren();for(const line of this.#content.split(\"\\n\")){const div=document.createElement(\"div\");div.append(line?document.createTextNode(line):document.createElement(\"br\"));content.append(div)}const padding=FreeTextEditor._internalPadding*this.parentScale;annotation.updateEdited({rect:this.getRect(padding,padding),popupContent:this.#content});return content}resetAnnotationElement(annotation){super.resetAnnotationElement(annotation);annotation.resetEdited()}}class Outline{static PRECISION=1e-4;toSVGPath(){unreachable(\"Abstract method `toSVGPath` must be implemented.\")}get box(){unreachable(\"Abstract getter `box` must be implemented.\")}serialize(_bbox,_rotation){unreachable(\"Abstract method `serialize` must be implemented.\")}static _rescale(src,tx,ty,sx,sy,dest){dest||=new Float32Array(src.length);for(let i=0,ii=src.length;i<ii;i+=2){dest[i]=tx+src[i]*sx;dest[i+1]=ty+src[i+1]*sy}return dest}static _rescaleAndSwap(src,tx,ty,sx,sy,dest){dest||=new Float32Array(src.length);for(let i=0,ii=src.length;i<ii;i+=2){dest[i]=tx+src[i+1]*sx;dest[i+1]=ty+src[i]*sy}return dest}static _translate(src,tx,ty,dest){dest||=new Float32Array(src.length);for(let i=0,ii=src.length;i<ii;i+=2){dest[i]=tx+src[i];dest[i+1]=ty+src[i+1]}return dest}static svgRound(x){return Math.round(x*1e4)}static _normalizePoint(x,y,parentWidth,parentHeight,rotation){switch(rotation){case 90:return[1-y/parentWidth,x/parentHeight];case 180:return[1-x/parentWidth,1-y/parentHeight];case 270:return[y/parentWidth,1-x/parentHeight];default:return[x/parentWidth,y/parentHeight]}}static _normalizePagePoint(x,y,rotation){switch(rotation){case 90:return[1-y,x];case 180:return[1-x,1-y];case 270:return[y,1-x];default:return[x,y]}}static createBezierPoints(x1,y1,x2,y2,x3,y3){return[(x1+5*x2)/6,(y1+5*y2)/6,(5*x2+x3)/6,(5*y2+y3)/6,(x2+x3)/2,(y2+y3)/2]}}class FreeDrawOutliner{#box;#bottom=[];#innerMargin;#isLTR;#top=[];#last=new Float32Array(18);#lastX;#lastY;#min;#min_dist;#scaleFactor;#thickness;#points=[];static#MIN_DIST=8;static#MIN_DIFF=2;static#MIN=FreeDrawOutliner.#MIN_DIST+FreeDrawOutliner.#MIN_DIFF;constructor({x:x,y:y},box,scaleFactor,thickness,isLTR,innerMargin=0){this.#box=box;this.#thickness=thickness*scaleFactor;this.#isLTR=isLTR;this.#last.set([NaN,NaN,NaN,NaN,x,y],6);this.#innerMargin=innerMargin;this.#min_dist=FreeDrawOutliner.#MIN_DIST*scaleFactor;this.#min=FreeDrawOutliner.#MIN*scaleFactor;this.#scaleFactor=scaleFactor;this.#points.push(x,y)}isEmpty(){return isNaN(this.#last[8])}#getLastCoords(){const lastTop=this.#last.subarray(4,6);const lastBottom=this.#last.subarray(16,18);const[x,y,width,height]=this.#box;return[(this.#lastX+(lastTop[0]-lastBottom[0])/2-x)/width,(this.#lastY+(lastTop[1]-lastBottom[1])/2-y)/height,(this.#lastX+(lastBottom[0]-lastTop[0])/2-x)/width,(this.#lastY+(lastBottom[1]-lastTop[1])/2-y)/height]}add({x:x,y:y}){this.#lastX=x;this.#lastY=y;const[layerX,layerY,layerWidth,layerHeight]=this.#box;let[x1,y1,x2,y2]=this.#last.subarray(8,12);const diffX=x-x2;const diffY=y-y2;const d=Math.hypot(diffX,diffY);if(d<this.#min){return false}const diffD=d-this.#min_dist;const K=diffD/d;const shiftX=K*diffX;const shiftY=K*diffY;let x0=x1;let y0=y1;x1=x2;y1=y2;x2+=shiftX;y2+=shiftY;this.#points?.push(x,y);const nX=-shiftY/diffD;const nY=shiftX/diffD;const thX=nX*this.#thickness;const thY=nY*this.#thickness;this.#last.set(this.#last.subarray(2,8),0);this.#last.set([x2+thX,y2+thY],4);this.#last.set(this.#last.subarray(14,18),12);this.#last.set([x2-thX,y2-thY],16);if(isNaN(this.#last[6])){if(this.#top.length===0){this.#last.set([x1+thX,y1+thY],2);this.#top.push(NaN,NaN,NaN,NaN,(x1+thX-layerX)/layerWidth,(y1+thY-layerY)/layerHeight);this.#last.set([x1-thX,y1-thY],14);this.#bottom.push(NaN,NaN,NaN,NaN,(x1-thX-layerX)/layerWidth,(y1-thY-layerY)/layerHeight)}this.#last.set([x0,y0,x1,y1,x2,y2],6);return!this.isEmpty()}this.#last.set([x0,y0,x1,y1,x2,y2],6);const angle=Math.abs(Math.atan2(y0-y1,x0-x1)-Math.atan2(shiftY,shiftX));if(angle<Math.PI/2){[x1,y1,x2,y2]=this.#last.subarray(2,6);this.#top.push(NaN,NaN,NaN,NaN,((x1+x2)/2-layerX)/layerWidth,((y1+y2)/2-layerY)/layerHeight);[x1,y1,x0,y0]=this.#last.subarray(14,18);this.#bottom.push(NaN,NaN,NaN,NaN,((x0+x1)/2-layerX)/layerWidth,((y0+y1)/2-layerY)/layerHeight);return true}[x0,y0,x1,y1,x2,y2]=this.#last.subarray(0,6);this.#top.push(((x0+5*x1)/6-layerX)/layerWidth,((y0+5*y1)/6-layerY)/layerHeight,((5*x1+x2)/6-layerX)/layerWidth,((5*y1+y2)/6-layerY)/layerHeight,((x1+x2)/2-layerX)/layerWidth,((y1+y2)/2-layerY)/layerHeight);[x2,y2,x1,y1,x0,y0]=this.#last.subarray(12,18);this.#bottom.push(((x0+5*x1)/6-layerX)/layerWidth,((y0+5*y1)/6-layerY)/layerHeight,((5*x1+x2)/6-layerX)/layerWidth,((5*y1+y2)/6-layerY)/layerHeight,((x1+x2)/2-layerX)/layerWidth,((y1+y2)/2-layerY)/layerHeight);return true}toSVGPath(){if(this.isEmpty()){return\"\"}const top=this.#top;const bottom=this.#bottom;if(isNaN(this.#last[6])&&!this.isEmpty()){return this.#toSVGPathTwoPoints()}const buffer=[];buffer.push(`M${top[4]} ${top[5]}`);for(let i=6;i<top.length;i+=6){if(isNaN(top[i])){buffer.push(`L${top[i+4]} ${top[i+5]}`)}else{buffer.push(`C${top[i]} ${top[i+1]} ${top[i+2]} ${top[i+3]} ${top[i+4]} ${top[i+5]}`)}}this.#toSVGPathEnd(buffer);for(let i=bottom.length-6;i>=6;i-=6){if(isNaN(bottom[i])){buffer.push(`L${bottom[i+4]} ${bottom[i+5]}`)}else{buffer.push(`C${bottom[i]} ${bottom[i+1]} ${bottom[i+2]} ${bottom[i+3]} ${bottom[i+4]} ${bottom[i+5]}`)}}this.#toSVGPathStart(buffer);return buffer.join(\" \")}#toSVGPathTwoPoints(){const[x,y,width,height]=this.#box;const[lastTopX,lastTopY,lastBottomX,lastBottomY]=this.#getLastCoords();return`M${(this.#last[2]-x)/width} ${(this.#last[3]-y)/height} L${(this.#last[4]-x)/width} ${(this.#last[5]-y)/height} L${lastTopX} ${lastTopY} L${lastBottomX} ${lastBottomY} L${(this.#last[16]-x)/width} ${(this.#last[17]-y)/height} L${(this.#last[14]-x)/width} ${(this.#last[15]-y)/height} Z`}#toSVGPathStart(buffer){const bottom=this.#bottom;buffer.push(`L${bottom[4]} ${bottom[5]} Z`)}#toSVGPathEnd(buffer){const[x,y,width,height]=this.#box;const lastTop=this.#last.subarray(4,6);const lastBottom=this.#last.subarray(16,18);const[lastTopX,lastTopY,lastBottomX,lastBottomY]=this.#getLastCoords();buffer.push(`L${(lastTop[0]-x)/width} ${(lastTop[1]-y)/height} L${lastTopX} ${lastTopY} L${lastBottomX} ${lastBottomY} L${(lastBottom[0]-x)/width} ${(lastBottom[1]-y)/height}`)}newFreeDrawOutline(outline,points,box,scaleFactor,innerMargin,isLTR){return new FreeDrawOutline(outline,points,box,scaleFactor,innerMargin,isLTR)}getOutlines(){const top=this.#top;const bottom=this.#bottom;const last=this.#last;const[layerX,layerY,layerWidth,layerHeight]=this.#box;const points=new Float32Array((this.#points?.length??0)+2);for(let i=0,ii=points.length-2;i<ii;i+=2){points[i]=(this.#points[i]-layerX)/layerWidth;points[i+1]=(this.#points[i+1]-layerY)/layerHeight}points[points.length-2]=(this.#lastX-layerX)/layerWidth;points[points.length-1]=(this.#lastY-layerY)/layerHeight;if(isNaN(last[6])&&!this.isEmpty()){return this.#getOutlineTwoPoints(points)}const outline=new Float32Array(this.#top.length+24+this.#bottom.length);let N=top.length;for(let i=0;i<N;i+=2){if(isNaN(top[i])){outline[i]=outline[i+1]=NaN;continue}outline[i]=top[i];outline[i+1]=top[i+1]}N=this.#getOutlineEnd(outline,N);for(let i=bottom.length-6;i>=6;i-=6){for(let j=0;j<6;j+=2){if(isNaN(bottom[i+j])){outline[N]=outline[N+1]=NaN;N+=2;continue}outline[N]=bottom[i+j];outline[N+1]=bottom[i+j+1];N+=2}}this.#getOutlineStart(outline,N);return this.newFreeDrawOutline(outline,points,this.#box,this.#scaleFactor,this.#innerMargin,this.#isLTR)}#getOutlineTwoPoints(points){const last=this.#last;const[layerX,layerY,layerWidth,layerHeight]=this.#box;const[lastTopX,lastTopY,lastBottomX,lastBottomY]=this.#getLastCoords();const outline=new Float32Array(36);outline.set([NaN,NaN,NaN,NaN,(last[2]-layerX)/layerWidth,(last[3]-layerY)/layerHeight,NaN,NaN,NaN,NaN,(last[4]-layerX)/layerWidth,(last[5]-layerY)/layerHeight,NaN,NaN,NaN,NaN,lastTopX,lastTopY,NaN,NaN,NaN,NaN,lastBottomX,lastBottomY,NaN,NaN,NaN,NaN,(last[16]-layerX)/layerWidth,(last[17]-layerY)/layerHeight,NaN,NaN,NaN,NaN,(last[14]-layerX)/layerWidth,(last[15]-layerY)/layerHeight],0);return this.newFreeDrawOutline(outline,points,this.#box,this.#scaleFactor,this.#innerMargin,this.#isLTR)}#getOutlineStart(outline,pos){const bottom=this.#bottom;outline.set([NaN,NaN,NaN,NaN,bottom[4],bottom[5]],pos);return pos+=6}#getOutlineEnd(outline,pos){const lastTop=this.#last.subarray(4,6);const lastBottom=this.#last.subarray(16,18);const[layerX,layerY,layerWidth,layerHeight]=this.#box;const[lastTopX,lastTopY,lastBottomX,lastBottomY]=this.#getLastCoords();outline.set([NaN,NaN,NaN,NaN,(lastTop[0]-layerX)/layerWidth,(lastTop[1]-layerY)/layerHeight,NaN,NaN,NaN,NaN,lastTopX,lastTopY,NaN,NaN,NaN,NaN,lastBottomX,lastBottomY,NaN,NaN,NaN,NaN,(lastBottom[0]-layerX)/layerWidth,(lastBottom[1]-layerY)/layerHeight],pos);return pos+=24}}class FreeDrawOutline extends Outline{#box;#bbox=new Float32Array(4);#innerMargin;#isLTR;#points;#scaleFactor;#outline;constructor(outline,points,box,scaleFactor,innerMargin,isLTR){super();this.#outline=outline;this.#points=points;this.#box=box;this.#scaleFactor=scaleFactor;this.#innerMargin=innerMargin;this.#isLTR=isLTR;this.lastPoint=[NaN,NaN];this.#computeMinMax(isLTR);const[x,y,width,height]=this.#bbox;for(let i=0,ii=outline.length;i<ii;i+=2){outline[i]=(outline[i]-x)/width;outline[i+1]=(outline[i+1]-y)/height}for(let i=0,ii=points.length;i<ii;i+=2){points[i]=(points[i]-x)/width;points[i+1]=(points[i+1]-y)/height}}toSVGPath(){const buffer=[`M${this.#outline[4]} ${this.#outline[5]}`];for(let i=6,ii=this.#outline.length;i<ii;i+=6){if(isNaN(this.#outline[i])){buffer.push(`L${this.#outline[i+4]} ${this.#outline[i+5]}`);continue}buffer.push(`C${this.#outline[i]} ${this.#outline[i+1]} ${this.#outline[i+2]} ${this.#outline[i+3]} ${this.#outline[i+4]} ${this.#outline[i+5]}`)}buffer.push(\"Z\");return buffer.join(\" \")}serialize([blX,blY,trX,trY],rotation){const width=trX-blX;const height=trY-blY;let outline;let points;switch(rotation){case 0:outline=Outline._rescale(this.#outline,blX,trY,width,-height);points=Outline._rescale(this.#points,blX,trY,width,-height);break;case 90:outline=Outline._rescaleAndSwap(this.#outline,blX,blY,width,height);points=Outline._rescaleAndSwap(this.#points,blX,blY,width,height);break;case 180:outline=Outline._rescale(this.#outline,trX,blY,-width,height);points=Outline._rescale(this.#points,trX,blY,-width,height);break;case 270:outline=Outline._rescaleAndSwap(this.#outline,trX,trY,-width,-height);points=Outline._rescaleAndSwap(this.#points,trX,trY,-width,-height);break}return{outline:Array.from(outline),points:[Array.from(points)]}}#computeMinMax(isLTR){const outline=this.#outline;let lastX=outline[4];let lastY=outline[5];const minMax=[lastX,lastY,lastX,lastY];let lastPointX=lastX;let lastPointY=lastY;const ltrCallback=isLTR?Math.max:Math.min;for(let i=6,ii=outline.length;i<ii;i+=6){const x=outline[i+4],y=outline[i+5];if(isNaN(outline[i])){Util.pointBoundingBox(x,y,minMax);if(lastPointY<y){lastPointX=x;lastPointY=y}else if(lastPointY===y){lastPointX=ltrCallback(lastPointX,x)}}else{const bbox=[Infinity,Infinity,-Infinity,-Infinity];Util.bezierBoundingBox(lastX,lastY,...outline.slice(i,i+6),bbox);Util.rectBoundingBox(...bbox,minMax);if(lastPointY<bbox[3]){lastPointX=bbox[2];lastPointY=bbox[3]}else if(lastPointY===bbox[3]){lastPointX=ltrCallback(lastPointX,bbox[2])}}lastX=x;lastY=y}const bbox=this.#bbox;bbox[0]=minMax[0]-this.#innerMargin;bbox[1]=minMax[1]-this.#innerMargin;bbox[2]=minMax[2]-minMax[0]+2*this.#innerMargin;bbox[3]=minMax[3]-minMax[1]+2*this.#innerMargin;this.lastPoint=[lastPointX,lastPointY]}get box(){return this.#bbox}newOutliner(point,box,scaleFactor,thickness,isLTR,innerMargin=0){return new FreeDrawOutliner(point,box,scaleFactor,thickness,isLTR,innerMargin)}getNewOutline(thickness,innerMargin){const[x,y,width,height]=this.#bbox;const[layerX,layerY,layerWidth,layerHeight]=this.#box;const sx=width*layerWidth;const sy=height*layerHeight;const tx=x*layerWidth+layerX;const ty=y*layerHeight+layerY;const outliner=this.newOutliner({x:this.#points[0]*sx+tx,y:this.#points[1]*sy+ty},this.#box,this.#scaleFactor,thickness,this.#isLTR,innerMargin??this.#innerMargin);for(let i=2;i<this.#points.length;i+=2){outliner.add({x:this.#points[i]*sx+tx,y:this.#points[i+1]*sy+ty})}return outliner.getOutlines()}}class HighlightOutliner{#box;#lastPoint;#verticalEdges=[];#intervals=[];constructor(boxes,borderWidth=0,innerMargin=0,isLTR=true){const minMax=[Infinity,Infinity,-Infinity,-Infinity];const NUMBER_OF_DIGITS=4;const EPSILON=10**-NUMBER_OF_DIGITS;for(const{x:x,y:y,width:width,height:height}of boxes){const x1=Math.floor((x-borderWidth)/EPSILON)*EPSILON;const x2=Math.ceil((x+width+borderWidth)/EPSILON)*EPSILON;const y1=Math.floor((y-borderWidth)/EPSILON)*EPSILON;const y2=Math.ceil((y+height+borderWidth)/EPSILON)*EPSILON;const left=[x1,y1,y2,true];const right=[x2,y1,y2,false];this.#verticalEdges.push(left,right);Util.rectBoundingBox(x1,y1,x2,y2,minMax)}const bboxWidth=minMax[2]-minMax[0]+2*innerMargin;const bboxHeight=minMax[3]-minMax[1]+2*innerMargin;const shiftedMinX=minMax[0]-innerMargin;const shiftedMinY=minMax[1]-innerMargin;const lastEdge=this.#verticalEdges.at(isLTR?-1:-2);const lastPoint=[lastEdge[0],lastEdge[2]];for(const edge of this.#verticalEdges){const[x,y1,y2]=edge;edge[0]=(x-shiftedMinX)/bboxWidth;edge[1]=(y1-shiftedMinY)/bboxHeight;edge[2]=(y2-shiftedMinY)/bboxHeight}this.#box=new Float32Array([shiftedMinX,shiftedMinY,bboxWidth,bboxHeight]);this.#lastPoint=lastPoint}getOutlines(){this.#verticalEdges.sort(((a,b)=>a[0]-b[0]||a[1]-b[1]||a[2]-b[2]));const outlineVerticalEdges=[];for(const edge of this.#verticalEdges){if(edge[3]){outlineVerticalEdges.push(...this.#breakEdge(edge));this.#insert(edge)}else{this.#remove(edge);outlineVerticalEdges.push(...this.#breakEdge(edge))}}return this.#getOutlines(outlineVerticalEdges)}#getOutlines(outlineVerticalEdges){const edges=[];const allEdges=new Set;for(const edge of outlineVerticalEdges){const[x,y1,y2]=edge;edges.push([x,y1,edge],[x,y2,edge])}edges.sort(((a,b)=>a[1]-b[1]||a[0]-b[0]));for(let i=0,ii=edges.length;i<ii;i+=2){const edge1=edges[i][2];const edge2=edges[i+1][2];edge1.push(edge2);edge2.push(edge1);allEdges.add(edge1);allEdges.add(edge2)}const outlines=[];let outline;while(allEdges.size>0){const edge=allEdges.values().next().value;let[x,y1,y2,edge1,edge2]=edge;allEdges.delete(edge);let lastPointX=x;let lastPointY=y1;outline=[x,y2];outlines.push(outline);while(true){let e;if(allEdges.has(edge1)){e=edge1}else if(allEdges.has(edge2)){e=edge2}else{break}allEdges.delete(e);[x,y1,y2,edge1,edge2]=e;if(lastPointX!==x){outline.push(lastPointX,lastPointY,x,lastPointY===y1?y1:y2);lastPointX=x}lastPointY=lastPointY===y1?y2:y1}outline.push(lastPointX,lastPointY)}return new HighlightOutline(outlines,this.#box,this.#lastPoint)}#binarySearch(y){const array=this.#intervals;let start=0;let end=array.length-1;while(start<=end){const middle=start+end>>1;const y1=array[middle][0];if(y1===y){return middle}if(y1<y){start=middle+1}else{end=middle-1}}return end+1}#insert([,y1,y2]){const index=this.#binarySearch(y1);this.#intervals.splice(index,0,[y1,y2])}#remove([,y1,y2]){const index=this.#binarySearch(y1);for(let i=index;i<this.#intervals.length;i++){const[start,end]=this.#intervals[i];if(start!==y1){break}if(start===y1&&end===y2){this.#intervals.splice(i,1);return}}for(let i=index-1;i>=0;i--){const[start,end]=this.#intervals[i];if(start!==y1){break}if(start===y1&&end===y2){this.#intervals.splice(i,1);return}}}#breakEdge(edge){const[x,y1,y2]=edge;const results=[[x,y1,y2]];const index=this.#binarySearch(y2);for(let i=0;i<index;i++){const[start,end]=this.#intervals[i];for(let j=0,jj=results.length;j<jj;j++){const[,y3,y4]=results[j];if(end<=y3||y4<=start){continue}if(y3>=start){if(y4>end){results[j][1]=end}else{if(jj===1){return[]}results.splice(j,1);j--;jj--}continue}results[j][2]=start;if(y4>end){results.push([x,end,y4])}}}return results}}class HighlightOutline extends Outline{#box;#outlines;constructor(outlines,box,lastPoint){super();this.#outlines=outlines;this.#box=box;this.lastPoint=lastPoint}toSVGPath(){const buffer=[];for(const polygon of this.#outlines){let[prevX,prevY]=polygon;buffer.push(`M${prevX} ${prevY}`);for(let i=2;i<polygon.length;i+=2){const x=polygon[i];const y=polygon[i+1];if(x===prevX){buffer.push(`V${y}`);prevY=y}else if(y===prevY){buffer.push(`H${x}`);prevX=x}}buffer.push(\"Z\")}return buffer.join(\" \")}serialize([blX,blY,trX,trY],_rotation){const outlines=[];const width=trX-blX;const height=trY-blY;for(const outline of this.#outlines){const points=new Array(outline.length);for(let i=0;i<outline.length;i+=2){points[i]=blX+outline[i]*width;points[i+1]=trY-outline[i+1]*height}outlines.push(points)}return outlines}get box(){return this.#box}get classNamesForOutlining(){return[\"highlightOutline\"]}}class FreeHighlightOutliner extends FreeDrawOutliner{newFreeDrawOutline(outline,points,box,scaleFactor,innerMargin,isLTR){return new FreeHighlightOutline(outline,points,box,scaleFactor,innerMargin,isLTR)}}class FreeHighlightOutline extends FreeDrawOutline{newOutliner(point,box,scaleFactor,thickness,isLTR,innerMargin=0){return new FreeHighlightOutliner(point,box,scaleFactor,thickness,isLTR,innerMargin)}}class ColorPicker{#button=null;#buttonSwatch=null;#defaultColor;#dropdown=null;#dropdownWasFromKeyboard=false;#isMainColorPicker=false;#editor=null;#eventBus;#openDropdownAC=null;#uiManager=null;#type;static#l10nColor=null;static get _keyboardManager(){return shadow(this,\"_keyboardManager\",new KeyboardManager([[[\"Escape\",\"mac+Escape\"],ColorPicker.prototype._hideDropdownFromKeyboard],[[\" \",\"mac+ \"],ColorPicker.prototype._colorSelectFromKeyboard],[[\"ArrowDown\",\"ArrowRight\",\"mac+ArrowDown\",\"mac+ArrowRight\"],ColorPicker.prototype._moveToNext],[[\"ArrowUp\",\"ArrowLeft\",\"mac+ArrowUp\",\"mac+ArrowLeft\"],ColorPicker.prototype._moveToPrevious],[[\"Home\",\"mac+Home\"],ColorPicker.prototype._moveToBeginning],[[\"End\",\"mac+End\"],ColorPicker.prototype._moveToEnd]]))}constructor({editor:editor=null,uiManager:uiManager=null}){if(editor){this.#isMainColorPicker=false;this.#type=AnnotationEditorParamsType.HIGHLIGHT_COLOR;this.#editor=editor}else{this.#isMainColorPicker=true;this.#type=AnnotationEditorParamsType.HIGHLIGHT_DEFAULT_COLOR}this.#uiManager=editor?._uiManager||uiManager;this.#eventBus=this.#uiManager._eventBus;this.#defaultColor=editor?.color||this.#uiManager?.highlightColors.values().next().value||\"#FFFF98\";ColorPicker.#l10nColor||=Object.freeze({blue:\"pdfjs-editor-colorpicker-blue\",green:\"pdfjs-editor-colorpicker-green\",pink:\"pdfjs-editor-colorpicker-pink\",red:\"pdfjs-editor-colorpicker-red\",yellow:\"pdfjs-editor-colorpicker-yellow\"})}renderButton(){const button=this.#button=document.createElement(\"button\");button.className=\"colorPicker\";button.tabIndex=\"0\";button.setAttribute(\"data-l10n-id\",\"pdfjs-editor-colorpicker-button\");button.setAttribute(\"aria-haspopup\",true);const signal=this.#uiManager._signal;button.addEventListener(\"click\",this.#openDropdown.bind(this),{signal:signal});button.addEventListener(\"keydown\",this.#keyDown.bind(this),{signal:signal});const swatch=this.#buttonSwatch=document.createElement(\"span\");swatch.className=\"swatch\";swatch.setAttribute(\"aria-hidden\",true);swatch.style.backgroundColor=this.#defaultColor;button.append(swatch);return button}renderMainDropdown(){const dropdown=this.#dropdown=this.#getDropdownRoot();dropdown.setAttribute(\"aria-orientation\",\"horizontal\");dropdown.setAttribute(\"aria-labelledby\",\"highlightColorPickerLabel\");return dropdown}#getDropdownRoot(){const div=document.createElement(\"div\");const signal=this.#uiManager._signal;div.addEventListener(\"contextmenu\",noContextMenu,{signal:signal});div.className=\"dropdown\";div.role=\"listbox\";div.setAttribute(\"aria-multiselectable\",false);div.setAttribute(\"aria-orientation\",\"vertical\");div.setAttribute(\"data-l10n-id\",\"pdfjs-editor-colorpicker-dropdown\");for(const[name,color]of this.#uiManager.highlightColors){const button=document.createElement(\"button\");button.tabIndex=\"0\";button.role=\"option\";button.setAttribute(\"data-color\",color);button.title=name;button.setAttribute(\"data-l10n-id\",ColorPicker.#l10nColor[name]);const swatch=document.createElement(\"span\");button.append(swatch);swatch.className=\"swatch\";swatch.style.backgroundColor=color;button.setAttribute(\"aria-selected\",color===this.#defaultColor);button.addEventListener(\"click\",this.#colorSelect.bind(this,color),{signal:signal});div.append(button)}div.addEventListener(\"keydown\",this.#keyDown.bind(this),{signal:signal});return div}#colorSelect(color,event){event.stopPropagation();this.#eventBus.dispatch(\"switchannotationeditorparams\",{source:this,type:this.#type,value:color})}_colorSelectFromKeyboard(event){if(event.target===this.#button){this.#openDropdown(event);return}const color=event.target.getAttribute(\"data-color\");if(!color){return}this.#colorSelect(color,event)}_moveToNext(event){if(!this.#isDropdownVisible){this.#openDropdown(event);return}if(event.target===this.#button){this.#dropdown.firstChild?.focus();return}event.target.nextSibling?.focus()}_moveToPrevious(event){if(event.target===this.#dropdown?.firstChild||event.target===this.#button){if(this.#isDropdownVisible){this._hideDropdownFromKeyboard()}return}if(!this.#isDropdownVisible){this.#openDropdown(event)}event.target.previousSibling?.focus()}_moveToBeginning(event){if(!this.#isDropdownVisible){this.#openDropdown(event);return}this.#dropdown.firstChild?.focus()}_moveToEnd(event){if(!this.#isDropdownVisible){this.#openDropdown(event);return}this.#dropdown.lastChild?.focus()}#keyDown(event){ColorPicker._keyboardManager.exec(this,event)}#openDropdown(event){if(this.#isDropdownVisible){this.hideDropdown();return}this.#dropdownWasFromKeyboard=event.detail===0;if(!this.#openDropdownAC){this.#openDropdownAC=new AbortController;window.addEventListener(\"pointerdown\",this.#pointerDown.bind(this),{signal:this.#uiManager.combinedSignal(this.#openDropdownAC)})}if(this.#dropdown){this.#dropdown.classList.remove(\"hidden\");return}const root=this.#dropdown=this.#getDropdownRoot();this.#button.append(root)}#pointerDown(event){if(this.#dropdown?.contains(event.target)){return}this.hideDropdown()}hideDropdown(){this.#dropdown?.classList.add(\"hidden\");this.#openDropdownAC?.abort();this.#openDropdownAC=null}get#isDropdownVisible(){return this.#dropdown&&!this.#dropdown.classList.contains(\"hidden\")}_hideDropdownFromKeyboard(){if(this.#isMainColorPicker){return}if(!this.#isDropdownVisible){this.#editor?.unselect();return}this.hideDropdown();this.#button.focus({preventScroll:true,focusVisible:this.#dropdownWasFromKeyboard})}updateColor(color){if(this.#buttonSwatch){this.#buttonSwatch.style.backgroundColor=color}if(!this.#dropdown){return}const i=this.#uiManager.highlightColors.values();for(const child of this.#dropdown.children){child.setAttribute(\"aria-selected\",i.next().value===color)}}destroy(){this.#button?.remove();this.#button=null;this.#buttonSwatch=null;this.#dropdown?.remove();this.#dropdown=null}}class HighlightEditor extends AnnotationEditor{#anchorNode=null;#anchorOffset=0;#boxes;#clipPathId=null;#colorPicker=null;#focusOutlines=null;#focusNode=null;#focusOffset=0;#highlightDiv=null;#highlightOutlines=null;#id=null;#isFreeHighlight=false;#lastPoint=null;#opacity;#outlineId=null;#text=\"\";#thickness;#methodOfCreation=\"\";static _defaultColor=null;static _defaultOpacity=1;static _defaultThickness=12;static _type=\"highlight\";static _editorType=AnnotationEditorType.HIGHLIGHT;static _freeHighlightId=-1;static _freeHighlight=null;static _freeHighlightClipId=\"\";static get _keyboardManager(){const proto=HighlightEditor.prototype;return shadow(this,\"_keyboardManager\",new KeyboardManager([[[\"ArrowLeft\",\"mac+ArrowLeft\"],proto._moveCaret,{args:[0]}],[[\"ArrowRight\",\"mac+ArrowRight\"],proto._moveCaret,{args:[1]}],[[\"ArrowUp\",\"mac+ArrowUp\"],proto._moveCaret,{args:[2]}],[[\"ArrowDown\",\"mac+ArrowDown\"],proto._moveCaret,{args:[3]}]]))}constructor(params){super({...params,name:\"highlightEditor\"});this.color=params.color||HighlightEditor._defaultColor;this.#thickness=params.thickness||HighlightEditor._defaultThickness;this.#opacity=params.opacity||HighlightEditor._defaultOpacity;this.#boxes=params.boxes||null;this.#methodOfCreation=params.methodOfCreation||\"\";this.#text=params.text||\"\";this._isDraggable=false;this.defaultL10nId=\"pdfjs-editor-highlight-editor\";if(params.highlightId>-1){this.#isFreeHighlight=true;this.#createFreeOutlines(params);this.#addToDrawLayer()}else if(this.#boxes){this.#anchorNode=params.anchorNode;this.#anchorOffset=params.anchorOffset;this.#focusNode=params.focusNode;this.#focusOffset=params.focusOffset;this.#createOutlines();this.#addToDrawLayer();this.rotate(this.rotation)}}get telemetryInitialData(){return{action:\"added\",type:this.#isFreeHighlight?\"free_highlight\":\"highlight\",color:this._uiManager.highlightColorNames.get(this.color),thickness:this.#thickness,methodOfCreation:this.#methodOfCreation}}get telemetryFinalData(){return{type:\"highlight\",color:this._uiManager.highlightColorNames.get(this.color)}}static computeTelemetryFinalData(data){return{numberOfColors:data.get(\"color\").size}}#createOutlines(){const outliner=new HighlightOutliner(this.#boxes,.001);this.#highlightOutlines=outliner.getOutlines();[this.x,this.y,this.width,this.height]=this.#highlightOutlines.box;const outlinerForOutline=new HighlightOutliner(this.#boxes,.0025,.001,this._uiManager.direction===\"ltr\");this.#focusOutlines=outlinerForOutline.getOutlines();const{lastPoint:lastPoint}=this.#focusOutlines;this.#lastPoint=[(lastPoint[0]-this.x)/this.width,(lastPoint[1]-this.y)/this.height]}#createFreeOutlines({highlightOutlines:highlightOutlines,highlightId:highlightId,clipPathId:clipPathId}){this.#highlightOutlines=highlightOutlines;const extraThickness=1.5;this.#focusOutlines=highlightOutlines.getNewOutline(this.#thickness/2+extraThickness,.0025);if(highlightId>=0){this.#id=highlightId;this.#clipPathId=clipPathId;this.parent.drawLayer.finalizeDraw(highlightId,{bbox:highlightOutlines.box,path:{d:highlightOutlines.toSVGPath()}});this.#outlineId=this.parent.drawLayer.drawOutline({rootClass:{highlightOutline:true,free:true},bbox:this.#focusOutlines.box,path:{d:this.#focusOutlines.toSVGPath()}},true)}else if(this.parent){const angle=this.parent.viewport.rotation;this.parent.drawLayer.updateProperties(this.#id,{bbox:HighlightEditor.#rotateBbox(this.#highlightOutlines.box,(angle-this.rotation+360)%360),path:{d:highlightOutlines.toSVGPath()}});this.parent.drawLayer.updateProperties(this.#outlineId,{bbox:HighlightEditor.#rotateBbox(this.#focusOutlines.box,angle),path:{d:this.#focusOutlines.toSVGPath()}})}const[x,y,width,height]=highlightOutlines.box;switch(this.rotation){case 0:this.x=x;this.y=y;this.width=width;this.height=height;break;case 90:{const[pageWidth,pageHeight]=this.parentDimensions;this.x=y;this.y=1-x;this.width=width*pageHeight/pageWidth;this.height=height*pageWidth/pageHeight;break}case 180:this.x=1-x;this.y=1-y;this.width=width;this.height=height;break;case 270:{const[pageWidth,pageHeight]=this.parentDimensions;this.x=1-y;this.y=x;this.width=width*pageHeight/pageWidth;this.height=height*pageWidth/pageHeight;break}}const{lastPoint:lastPoint}=this.#focusOutlines;this.#lastPoint=[(lastPoint[0]-x)/width,(lastPoint[1]-y)/height]}static initialize(l10n,uiManager){AnnotationEditor.initialize(l10n,uiManager);HighlightEditor._defaultColor||=uiManager.highlightColors?.values().next().value||\"#fff066\"}static updateDefaultParams(type,value){switch(type){case AnnotationEditorParamsType.HIGHLIGHT_DEFAULT_COLOR:HighlightEditor._defaultColor=value;break;case AnnotationEditorParamsType.HIGHLIGHT_THICKNESS:HighlightEditor._defaultThickness=value;break}}translateInPage(x,y){}get toolbarPosition(){return this.#lastPoint}updateParams(type,value){switch(type){case AnnotationEditorParamsType.HIGHLIGHT_COLOR:this.#updateColor(value);break;case AnnotationEditorParamsType.HIGHLIGHT_THICKNESS:this.#updateThickness(value);break}}static get defaultPropertiesToUpdate(){return[[AnnotationEditorParamsType.HIGHLIGHT_DEFAULT_COLOR,HighlightEditor._defaultColor],[AnnotationEditorParamsType.HIGHLIGHT_THICKNESS,HighlightEditor._defaultThickness]]}get propertiesToUpdate(){return[[AnnotationEditorParamsType.HIGHLIGHT_COLOR,this.color||HighlightEditor._defaultColor],[AnnotationEditorParamsType.HIGHLIGHT_THICKNESS,this.#thickness||HighlightEditor._defaultThickness],[AnnotationEditorParamsType.HIGHLIGHT_FREE,this.#isFreeHighlight]]}#updateColor(color){const setColorAndOpacity=(col,opa)=>{this.color=col;this.#opacity=opa;this.parent?.drawLayer.updateProperties(this.#id,{root:{fill:col,\"fill-opacity\":opa}});this.#colorPicker?.updateColor(col)};const savedColor=this.color;const savedOpacity=this.#opacity;this.addCommands({cmd:setColorAndOpacity.bind(this,color,HighlightEditor._defaultOpacity),undo:setColorAndOpacity.bind(this,savedColor,savedOpacity),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:true,type:AnnotationEditorParamsType.HIGHLIGHT_COLOR,overwriteIfSameType:true,keepUndo:true});this._reportTelemetry({action:\"color_changed\",color:this._uiManager.highlightColorNames.get(color)},true)}#updateThickness(thickness){const savedThickness=this.#thickness;const setThickness=th=>{this.#thickness=th;this.#changeThickness(th)};this.addCommands({cmd:setThickness.bind(this,thickness),undo:setThickness.bind(this,savedThickness),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:true,type:AnnotationEditorParamsType.INK_THICKNESS,overwriteIfSameType:true,keepUndo:true});this._reportTelemetry({action:\"thickness_changed\",thickness:thickness},true)}async addEditToolbar(){const toolbar=await super.addEditToolbar();if(!toolbar){return null}if(this._uiManager.highlightColors){this.#colorPicker=new ColorPicker({editor:this});toolbar.addColorPicker(this.#colorPicker)}return toolbar}disableEditing(){super.disableEditing();this.div.classList.toggle(\"disabled\",true)}enableEditing(){super.enableEditing();this.div.classList.toggle(\"disabled\",false)}fixAndSetPosition(){return super.fixAndSetPosition(this.#getRotation())}getBaseTranslation(){return[0,0]}getRect(tx,ty){return super.getRect(tx,ty,this.#getRotation())}onceAdded(focus){if(!this.annotationElementId){this.parent.addUndoableEditor(this)}if(focus){this.div.focus()}}remove(){this.#cleanDrawLayer();this._reportTelemetry({action:\"deleted\"});super.remove()}rebuild(){if(!this.parent){return}super.rebuild();if(this.div===null){return}this.#addToDrawLayer();if(!this.isAttachedToDOM){this.parent.add(this)}}setParent(parent){let mustBeSelected=false;if(this.parent&&!parent){this.#cleanDrawLayer()}else if(parent){this.#addToDrawLayer(parent);mustBeSelected=!this.parent&&this.div?.classList.contains(\"selectedEditor\")}super.setParent(parent);this.show(this._isVisible);if(mustBeSelected){this.select()}}#changeThickness(thickness){if(!this.#isFreeHighlight){return}this.#createFreeOutlines({highlightOutlines:this.#highlightOutlines.getNewOutline(thickness/2)});this.fixAndSetPosition();const[parentWidth,parentHeight]=this.parentDimensions;this.setDims(this.width*parentWidth,this.height*parentHeight)}#cleanDrawLayer(){if(this.#id===null||!this.parent){return}this.parent.drawLayer.remove(this.#id);this.#id=null;this.parent.drawLayer.remove(this.#outlineId);this.#outlineId=null}#addToDrawLayer(parent=this.parent){if(this.#id!==null){return}({id:this.#id,clipPathId:this.#clipPathId}=parent.drawLayer.draw({bbox:this.#highlightOutlines.box,root:{viewBox:\"0 0 1 1\",fill:this.color,\"fill-opacity\":this.#opacity},rootClass:{highlight:true,free:this.#isFreeHighlight},path:{d:this.#highlightOutlines.toSVGPath()}},false,true));this.#outlineId=parent.drawLayer.drawOutline({rootClass:{highlightOutline:true,free:this.#isFreeHighlight},bbox:this.#focusOutlines.box,path:{d:this.#focusOutlines.toSVGPath()}},this.#isFreeHighlight);if(this.#highlightDiv){this.#highlightDiv.style.clipPath=this.#clipPathId}}static#rotateBbox([x,y,width,height],angle){switch(angle){case 90:return[1-y-height,x,height,width];case 180:return[1-x-width,1-y-height,width,height];case 270:return[y,1-x-width,height,width]}return[x,y,width,height]}rotate(angle){const{drawLayer:drawLayer}=this.parent;let box;if(this.#isFreeHighlight){angle=(angle-this.rotation+360)%360;box=HighlightEditor.#rotateBbox(this.#highlightOutlines.box,angle)}else{box=HighlightEditor.#rotateBbox([this.x,this.y,this.width,this.height],angle)}drawLayer.updateProperties(this.#id,{bbox:box,root:{\"data-main-rotation\":angle}});drawLayer.updateProperties(this.#outlineId,{bbox:HighlightEditor.#rotateBbox(this.#focusOutlines.box,angle),root:{\"data-main-rotation\":angle}})}render(){if(this.div){return this.div}const div=super.render();if(this.#text){div.setAttribute(\"aria-label\",this.#text);div.setAttribute(\"role\",\"mark\")}if(this.#isFreeHighlight){div.classList.add(\"free\")}else{this.div.addEventListener(\"keydown\",this.#keydown.bind(this),{signal:this._uiManager._signal})}const highlightDiv=this.#highlightDiv=document.createElement(\"div\");div.append(highlightDiv);highlightDiv.setAttribute(\"aria-hidden\",\"true\");highlightDiv.className=\"internal\";highlightDiv.style.clipPath=this.#clipPathId;const[parentWidth,parentHeight]=this.parentDimensions;this.setDims(this.width*parentWidth,this.height*parentHeight);bindEvents(this,this.#highlightDiv,[\"pointerover\",\"pointerleave\"]);this.enableEditing();return div}pointerover(){if(!this.isSelected){this.parent?.drawLayer.updateProperties(this.#outlineId,{rootClass:{hovered:true}})}}pointerleave(){if(!this.isSelected){this.parent?.drawLayer.updateProperties(this.#outlineId,{rootClass:{hovered:false}})}}#keydown(event){HighlightEditor._keyboardManager.exec(this,event)}_moveCaret(direction){this.parent.unselect(this);switch(direction){case 0:case 2:this.#setCaret(true);break;case 1:case 3:this.#setCaret(false);break}}#setCaret(start){if(!this.#anchorNode){return}const selection=window.getSelection();if(start){selection.setPosition(this.#anchorNode,this.#anchorOffset)}else{selection.setPosition(this.#focusNode,this.#focusOffset)}}select(){super.select();if(!this.#outlineId){return}this.parent?.drawLayer.updateProperties(this.#outlineId,{rootClass:{hovered:false,selected:true}})}unselect(){super.unselect();if(!this.#outlineId){return}this.parent?.drawLayer.updateProperties(this.#outlineId,{rootClass:{selected:false}});if(!this.#isFreeHighlight){this.#setCaret(false)}}get _mustFixPosition(){return!this.#isFreeHighlight}show(visible=this._isVisible){super.show(visible);if(this.parent){this.parent.drawLayer.updateProperties(this.#id,{rootClass:{hidden:!visible}});this.parent.drawLayer.updateProperties(this.#outlineId,{rootClass:{hidden:!visible}})}}#getRotation(){return this.#isFreeHighlight?this.rotation:0}#serializeBoxes(){if(this.#isFreeHighlight){return null}const[pageWidth,pageHeight]=this.pageDimensions;const[pageX,pageY]=this.pageTranslation;const boxes=this.#boxes;const quadPoints=new Float32Array(boxes.length*8);let i=0;for(const{x:x,y:y,width:width,height:height}of boxes){const sx=x*pageWidth+pageX;const sy=(1-y)*pageHeight+pageY;quadPoints[i]=quadPoints[i+4]=sx;quadPoints[i+1]=quadPoints[i+3]=sy;quadPoints[i+2]=quadPoints[i+6]=sx+width*pageWidth;quadPoints[i+5]=quadPoints[i+7]=sy-height*pageHeight;i+=8}return quadPoints}#serializeOutlines(rect){return this.#highlightOutlines.serialize(rect,this.#getRotation())}static startHighlighting(parent,isLTR,{target:textLayer,x:x,y:y}){const{x:layerX,y:layerY,width:parentWidth,height:parentHeight}=textLayer.getBoundingClientRect();const ac=new AbortController;const signal=parent.combinedSignal(ac);const pointerUpCallback=e=>{ac.abort();this.#endHighlight(parent,e)};window.addEventListener(\"blur\",pointerUpCallback,{signal:signal});window.addEventListener(\"pointerup\",pointerUpCallback,{signal:signal});window.addEventListener(\"pointerdown\",stopEvent,{capture:true,passive:false,signal:signal});window.addEventListener(\"contextmenu\",noContextMenu,{signal:signal});textLayer.addEventListener(\"pointermove\",this.#highlightMove.bind(this,parent),{signal:signal});this._freeHighlight=new FreeHighlightOutliner({x:x,y:y},[layerX,layerY,parentWidth,parentHeight],parent.scale,this._defaultThickness/2,isLTR,.001);({id:this._freeHighlightId,clipPathId:this._freeHighlightClipId}=parent.drawLayer.draw({bbox:[0,0,1,1],root:{viewBox:\"0 0 1 1\",fill:this._defaultColor,\"fill-opacity\":this._defaultOpacity},rootClass:{highlight:true,free:true},path:{d:this._freeHighlight.toSVGPath()}},true,true))}static#highlightMove(parent,event){if(this._freeHighlight.add(event)){parent.drawLayer.updateProperties(this._freeHighlightId,{path:{d:this._freeHighlight.toSVGPath()}})}}static#endHighlight(parent,event){if(!this._freeHighlight.isEmpty()){parent.createAndAddNewEditor(event,false,{highlightId:this._freeHighlightId,highlightOutlines:this._freeHighlight.getOutlines(),clipPathId:this._freeHighlightClipId,methodOfCreation:\"main_toolbar\"})}else{parent.drawLayer.remove(this._freeHighlightId)}this._freeHighlightId=-1;this._freeHighlight=null;this._freeHighlightClipId=\"\"}static async deserialize(data,parent,uiManager){let initialData=null;if(data instanceof HighlightAnnotationElement){const{data:{quadPoints:quadPoints,rect:rect,rotation:rotation,id:id,color:color,opacity:opacity,popupRef:popupRef},parent:{page:{pageNumber:pageNumber}}}=data;initialData=data={annotationType:AnnotationEditorType.HIGHLIGHT,color:Array.from(color),opacity:opacity,quadPoints:quadPoints,boxes:null,pageIndex:pageNumber-1,rect:rect.slice(0),rotation:rotation,id:id,deleted:false,popupRef:popupRef}}else if(data instanceof InkAnnotationElement){const{data:{inkLists:inkLists,rect:rect,rotation:rotation,id:id,color:color,borderStyle:{rawWidth:thickness},popupRef:popupRef},parent:{page:{pageNumber:pageNumber}}}=data;initialData=data={annotationType:AnnotationEditorType.HIGHLIGHT,color:Array.from(color),thickness:thickness,inkLists:inkLists,boxes:null,pageIndex:pageNumber-1,rect:rect.slice(0),rotation:rotation,id:id,deleted:false,popupRef:popupRef}}const{color:color,quadPoints:quadPoints,inkLists:inkLists,opacity:opacity}=data;const editor=await super.deserialize(data,parent,uiManager);editor.color=Util.makeHexColor(...color);editor.#opacity=opacity||1;if(inkLists){editor.#thickness=data.thickness}editor.annotationElementId=data.id||null;editor._initialData=initialData;const[pageWidth,pageHeight]=editor.pageDimensions;const[pageX,pageY]=editor.pageTranslation;if(quadPoints){const boxes=editor.#boxes=[];for(let i=0;i<quadPoints.length;i+=8){boxes.push({x:(quadPoints[i]-pageX)/pageWidth,y:1-(quadPoints[i+1]-pageY)/pageHeight,width:(quadPoints[i+2]-quadPoints[i])/pageWidth,height:(quadPoints[i+1]-quadPoints[i+5])/pageHeight})}editor.#createOutlines();editor.#addToDrawLayer();editor.rotate(editor.rotation)}else if(inkLists){editor.#isFreeHighlight=true;const points=inkLists[0];const point={x:points[0]-pageX,y:pageHeight-(points[1]-pageY)};const outliner=new FreeHighlightOutliner(point,[0,0,pageWidth,pageHeight],1,editor.#thickness/2,true,.001);for(let i=0,ii=points.length;i<ii;i+=2){point.x=points[i]-pageX;point.y=pageHeight-(points[i+1]-pageY);outliner.add(point)}const{id:id,clipPathId:clipPathId}=parent.drawLayer.draw({bbox:[0,0,1,1],root:{viewBox:\"0 0 1 1\",fill:editor.color,\"fill-opacity\":editor._defaultOpacity},rootClass:{highlight:true,free:true},path:{d:outliner.toSVGPath()}},true,true);editor.#createFreeOutlines({highlightOutlines:outliner.getOutlines(),highlightId:id,clipPathId:clipPathId});editor.#addToDrawLayer();editor.rotate(editor.parentRotation)}return editor}serialize(isForCopying=false){if(this.isEmpty()||isForCopying){return null}if(this.deleted){return this.serializeDeleted()}const rect=this.getRect(0,0);const color=AnnotationEditor._colorManager.convert(this.color);const serialized={annotationType:AnnotationEditorType.HIGHLIGHT,color:color,opacity:this.#opacity,thickness:this.#thickness,quadPoints:this.#serializeBoxes(),outlines:this.#serializeOutlines(rect),pageIndex:this.pageIndex,rect:rect,rotation:this.#getRotation(),structTreeParentId:this._structTreeParentId};if(this.annotationElementId&&!this.#hasElementChanged(serialized)){return null}serialized.id=this.annotationElementId;return serialized}#hasElementChanged(serialized){const{color:color}=this._initialData;return serialized.color.some(((c,i)=>c!==color[i]))}renderAnnotationElement(annotation){annotation.updateEdited({rect:this.getRect(0,0)});return null}static canCreateNewEmptyEditor(){return false}}class DrawingOptions{#svgProperties=Object.create(null);updateProperty(name,value){this[name]=value;this.updateSVGProperty(name,value)}updateProperties(properties){if(!properties){return}for(const[name,value]of Object.entries(properties)){if(!name.startsWith(\"_\")){this.updateProperty(name,value)}}}updateSVGProperty(name,value){this.#svgProperties[name]=value}toSVGProperties(){const root=this.#svgProperties;this.#svgProperties=Object.create(null);return{root:root}}reset(){this.#svgProperties=Object.create(null)}updateAll(options=this){this.updateProperties(options)}clone(){unreachable(\"Not implemented\")}}class DrawingEditor extends AnnotationEditor{#drawOutlines=null;#mustBeCommitted;_drawId=null;static _currentDrawId=-1;static _currentParent=null;static#currentDraw=null;static#currentDrawingAC=null;static#currentDrawingOptions=null;static#currentPointerId=NaN;static#currentPointerType=null;static#currentPointerIds=null;static#currentMoveTimestamp=NaN;static _INNER_MARGIN=3;constructor(params){super(params);this.#mustBeCommitted=params.mustBeCommitted||false;this._addOutlines(params)}_addOutlines(params){if(params.drawOutlines){this.#createDrawOutlines(params);this.#addToDrawLayer()}}#createDrawOutlines({drawOutlines:drawOutlines,drawId:drawId,drawingOptions:drawingOptions}){this.#drawOutlines=drawOutlines;this._drawingOptions||=drawingOptions;if(drawId>=0){this._drawId=drawId;this.parent.drawLayer.finalizeDraw(drawId,drawOutlines.defaultProperties)}else{this._drawId=this.#createDrawing(drawOutlines,this.parent)}this.#updateBbox(drawOutlines.box)}#createDrawing(drawOutlines,parent){const{id:id}=parent.drawLayer.draw(DrawingEditor._mergeSVGProperties(this._drawingOptions.toSVGProperties(),drawOutlines.defaultSVGProperties),false,false);return id}static _mergeSVGProperties(p1,p2){const p1Keys=new Set(Object.keys(p1));for(const[key,value]of Object.entries(p2)){if(p1Keys.has(key)){Object.assign(p1[key],value)}else{p1[key]=value}}return p1}static getDefaultDrawingOptions(_options){unreachable(\"Not implemented\")}static get typesMap(){unreachable(\"Not implemented\")}static get isDrawer(){return true}static get supportMultipleDrawings(){return false}static updateDefaultParams(type,value){const propertyName=this.typesMap.get(type);if(propertyName){this._defaultDrawingOptions.updateProperty(propertyName,value)}if(this._currentParent){DrawingEditor.#currentDraw.updateProperty(propertyName,value);this._currentParent.drawLayer.updateProperties(this._currentDrawId,this._defaultDrawingOptions.toSVGProperties())}}updateParams(type,value){const propertyName=this.constructor.typesMap.get(type);if(propertyName){this._updateProperty(type,propertyName,value)}}static get defaultPropertiesToUpdate(){const properties=[];const options=this._defaultDrawingOptions;for(const[type,name]of this.typesMap){properties.push([type,options[name]])}return properties}get propertiesToUpdate(){const properties=[];const{_drawingOptions:_drawingOptions}=this;for(const[type,name]of this.constructor.typesMap){properties.push([type,_drawingOptions[name]])}return properties}_updateProperty(type,name,value){const options=this._drawingOptions;const savedValue=options[name];const setter=val=>{options.updateProperty(name,val);const bbox=this.#drawOutlines.updateProperty(name,val);if(bbox){this.#updateBbox(bbox)}this.parent?.drawLayer.updateProperties(this._drawId,options.toSVGProperties())};this.addCommands({cmd:setter.bind(this,value),undo:setter.bind(this,savedValue),post:this._uiManager.updateUI.bind(this._uiManager,this),mustExec:true,type:type,overwriteIfSameType:true,keepUndo:true})}_onResizing(){this.parent?.drawLayer.updateProperties(this._drawId,DrawingEditor._mergeSVGProperties(this.#drawOutlines.getPathResizingSVGProperties(this.#convertToDrawSpace()),{bbox:this.#rotateBox()}))}_onResized(){this.parent?.drawLayer.updateProperties(this._drawId,DrawingEditor._mergeSVGProperties(this.#drawOutlines.getPathResizedSVGProperties(this.#convertToDrawSpace()),{bbox:this.#rotateBox()}))}_onTranslating(_x,_y){this.parent?.drawLayer.updateProperties(this._drawId,{bbox:this.#rotateBox()})}_onTranslated(){this.parent?.drawLayer.updateProperties(this._drawId,DrawingEditor._mergeSVGProperties(this.#drawOutlines.getPathTranslatedSVGProperties(this.#convertToDrawSpace(),this.parentDimensions),{bbox:this.#rotateBox()}))}_onStartDragging(){this.parent?.drawLayer.updateProperties(this._drawId,{rootClass:{moving:true}})}_onStopDragging(){this.parent?.drawLayer.updateProperties(this._drawId,{rootClass:{moving:false}})}commit(){super.commit();this.disableEditMode();this.disableEditing()}disableEditing(){super.disableEditing();this.div.classList.toggle(\"disabled\",true)}enableEditing(){super.enableEditing();this.div.classList.toggle(\"disabled\",false)}getBaseTranslation(){return[0,0]}get isResizable(){return true}onceAdded(focus){if(!this.annotationElementId){this.parent.addUndoableEditor(this)}this._isDraggable=true;if(this.#mustBeCommitted){this.#mustBeCommitted=false;this.commit();this.parent.setSelected(this);if(focus&&this.isOnScreen){this.div.focus()}}}remove(){this.#cleanDrawLayer();super.remove()}rebuild(){if(!this.parent){return}super.rebuild();if(this.div===null){return}this.#addToDrawLayer();this.#updateBbox(this.#drawOutlines.box);if(!this.isAttachedToDOM){this.parent.add(this)}}setParent(parent){let mustBeSelected=false;if(this.parent&&!parent){this._uiManager.removeShouldRescale(this);this.#cleanDrawLayer()}else if(parent){this._uiManager.addShouldRescale(this);this.#addToDrawLayer(parent);mustBeSelected=!this.parent&&this.div?.classList.contains(\"selectedEditor\")}super.setParent(parent);if(mustBeSelected){this.select()}}#cleanDrawLayer(){if(this._drawId===null||!this.parent){return}this.parent.drawLayer.remove(this._drawId);this._drawId=null;this._drawingOptions.reset()}#addToDrawLayer(parent=this.parent){if(this._drawId!==null&&this.parent===parent){return}if(this._drawId!==null){this.parent.drawLayer.updateParent(this._drawId,parent.drawLayer);return}this._drawingOptions.updateAll();this._drawId=this.#createDrawing(this.#drawOutlines,parent)}#convertToParentSpace([x,y,width,height]){const{parentDimensions:[pW,pH],rotation:rotation}=this;switch(rotation){case 90:return[y,1-x,width*(pH/pW),height*(pW/pH)];case 180:return[1-x,1-y,width,height];case 270:return[1-y,x,width*(pH/pW),height*(pW/pH)];default:return[x,y,width,height]}}#convertToDrawSpace(){const{x:x,y:y,width:width,height:height,parentDimensions:[pW,pH],rotation:rotation}=this;switch(rotation){case 90:return[1-y,x,width*(pW/pH),height*(pH/pW)];case 180:return[1-x,1-y,width,height];case 270:return[y,1-x,width*(pW/pH),height*(pH/pW)];default:return[x,y,width,height]}}#updateBbox(bbox){[this.x,this.y,this.width,this.height]=this.#convertToParentSpace(bbox);if(this.div){this.fixAndSetPosition();const[parentWidth,parentHeight]=this.parentDimensions;this.setDims(this.width*parentWidth,this.height*parentHeight)}this._onResized()}#rotateBox(){const{x:x,y:y,width:width,height:height,rotation:rotation,parentRotation:parentRotation,parentDimensions:[pW,pH]}=this;switch((rotation*4+parentRotation)/90){case 1:return[1-y-height,x,height,width];case 2:return[1-x-width,1-y-height,width,height];case 3:return[y,1-x-width,height,width];case 4:return[x,y-width*(pW/pH),height*(pH/pW),width*(pW/pH)];case 5:return[1-y,x,width*(pW/pH),height*(pH/pW)];case 6:return[1-x-height*(pH/pW),1-y,height*(pH/pW),width*(pW/pH)];case 7:return[y-width*(pW/pH),1-x-height*(pH/pW),width*(pW/pH),height*(pH/pW)];case 8:return[x-width,y-height,width,height];case 9:return[1-y,x-width,height,width];case 10:return[1-x,1-y,width,height];case 11:return[y-height,1-x,height,width];case 12:return[x-height*(pH/pW),y,height*(pH/pW),width*(pW/pH)];case 13:return[1-y-width*(pW/pH),x-height*(pH/pW),width*(pW/pH),height*(pH/pW)];case 14:return[1-x,1-y-width*(pW/pH),height*(pH/pW),width*(pW/pH)];case 15:return[y,1-x,width*(pW/pH),height*(pH/pW)];default:return[x,y,width,height]}}rotate(){if(!this.parent){return}this.parent.drawLayer.updateProperties(this._drawId,DrawingEditor._mergeSVGProperties({bbox:this.#rotateBox()},this.#drawOutlines.updateRotation((this.parentRotation-this.rotation+360)%360)))}onScaleChanging(){if(!this.parent){return}this.#updateBbox(this.#drawOutlines.updateParentDimensions(this.parentDimensions,this.parent.scale))}static onScaleChangingWhenDrawing(){}render(){if(this.div){return this.div}let baseX,baseY;if(this._isCopy){baseX=this.x;baseY=this.y}const div=super.render();div.classList.add(\"draw\");const drawDiv=document.createElement(\"div\");div.append(drawDiv);drawDiv.setAttribute(\"aria-hidden\",\"true\");drawDiv.className=\"internal\";const[parentWidth,parentHeight]=this.parentDimensions;this.setDims(this.width*parentWidth,this.height*parentHeight);this._uiManager.addShouldRescale(this);this.disableEditing();if(this._isCopy){this._moveAfterPaste(baseX,baseY)}return div}static createDrawerInstance(_x,_y,_parentWidth,_parentHeight,_rotation){unreachable(\"Not implemented\")}static startDrawing(parent,uiManager,_isLTR,event){const{target:target,offsetX:x,offsetY:y,pointerId:pointerId,pointerType:pointerType}=event;if(DrawingEditor.#currentPointerType&&DrawingEditor.#currentPointerType!==pointerType){return}const{viewport:{rotation:rotation}}=parent;const{width:parentWidth,height:parentHeight}=target.getBoundingClientRect();const ac=DrawingEditor.#currentDrawingAC=new AbortController;const signal=parent.combinedSignal(ac);DrawingEditor.#currentPointerId||=pointerId;DrawingEditor.#currentPointerType??=pointerType;window.addEventListener(\"pointerup\",(e=>{if(DrawingEditor.#currentPointerId===e.pointerId){this._endDraw(e)}else{DrawingEditor.#currentPointerIds?.delete(e.pointerId)}}),{signal:signal});window.addEventListener(\"pointercancel\",(e=>{if(DrawingEditor.#currentPointerId===e.pointerId){this._currentParent.endDrawingSession()}else{DrawingEditor.#currentPointerIds?.delete(e.pointerId)}}),{signal:signal});window.addEventListener(\"pointerdown\",(e=>{if(DrawingEditor.#currentPointerType!==e.pointerType){return}(DrawingEditor.#currentPointerIds||=new Set).add(e.pointerId);if(DrawingEditor.#currentDraw.isCancellable()){DrawingEditor.#currentDraw.removeLastElement();if(DrawingEditor.#currentDraw.isEmpty()){this._currentParent.endDrawingSession(true)}else{this._endDraw(null)}}}),{capture:true,passive:false,signal:signal});window.addEventListener(\"contextmenu\",noContextMenu,{signal:signal});target.addEventListener(\"pointermove\",this._drawMove.bind(this),{signal:signal});target.addEventListener(\"touchmove\",(e=>{if(e.timeStamp===DrawingEditor.#currentMoveTimestamp){stopEvent(e)}}),{signal:signal});parent.toggleDrawing();uiManager._editorUndoBar?.hide();if(DrawingEditor.#currentDraw){parent.drawLayer.updateProperties(this._currentDrawId,DrawingEditor.#currentDraw.startNew(x,y,parentWidth,parentHeight,rotation));return}uiManager.updateUIForDefaultProperties(this);DrawingEditor.#currentDraw=this.createDrawerInstance(x,y,parentWidth,parentHeight,rotation);DrawingEditor.#currentDrawingOptions=this.getDefaultDrawingOptions();this._currentParent=parent;({id:this._currentDrawId}=parent.drawLayer.draw(this._mergeSVGProperties(DrawingEditor.#currentDrawingOptions.toSVGProperties(),DrawingEditor.#currentDraw.defaultSVGProperties),true,false))}static _drawMove(event){DrawingEditor.#currentMoveTimestamp=-1;if(!DrawingEditor.#currentDraw){return}const{offsetX:offsetX,offsetY:offsetY,pointerId:pointerId}=event;if(DrawingEditor.#currentPointerId!==pointerId){return}if(DrawingEditor.#currentPointerIds?.size>=1){this._endDraw(event);return}this._currentParent.drawLayer.updateProperties(this._currentDrawId,DrawingEditor.#currentDraw.add(offsetX,offsetY));DrawingEditor.#currentMoveTimestamp=event.timeStamp;stopEvent(event)}static _cleanup(all){if(all){this._currentDrawId=-1;this._currentParent=null;DrawingEditor.#currentDraw=null;DrawingEditor.#currentDrawingOptions=null;DrawingEditor.#currentPointerType=null;DrawingEditor.#currentMoveTimestamp=NaN}if(DrawingEditor.#currentDrawingAC){DrawingEditor.#currentDrawingAC.abort();DrawingEditor.#currentDrawingAC=null;DrawingEditor.#currentPointerId=NaN;DrawingEditor.#currentPointerIds=null}}static _endDraw(event){const parent=this._currentParent;if(!parent){return}parent.toggleDrawing(true);this._cleanup(false);if(event?.target===parent.div){parent.drawLayer.updateProperties(this._currentDrawId,DrawingEditor.#currentDraw.end(event.offsetX,event.offsetY))}if(this.supportMultipleDrawings){const draw=DrawingEditor.#currentDraw;const drawId=this._currentDrawId;const lastElement=draw.getLastElement();parent.addCommands({cmd:()=>{parent.drawLayer.updateProperties(drawId,draw.setLastElement(lastElement))},undo:()=>{parent.drawLayer.updateProperties(drawId,draw.removeLastElement())},mustExec:false,type:AnnotationEditorParamsType.DRAW_STEP});return}this.endDrawing(false)}static endDrawing(isAborted){const parent=this._currentParent;if(!parent){return null}parent.toggleDrawing(true);parent.cleanUndoStack(AnnotationEditorParamsType.DRAW_STEP);if(!DrawingEditor.#currentDraw.isEmpty()){const{pageDimensions:[pageWidth,pageHeight],scale:scale}=parent;const editor=parent.createAndAddNewEditor({offsetX:0,offsetY:0},false,{drawId:this._currentDrawId,drawOutlines:DrawingEditor.#currentDraw.getOutlines(pageWidth*scale,pageHeight*scale,scale,this._INNER_MARGIN),drawingOptions:DrawingEditor.#currentDrawingOptions,mustBeCommitted:!isAborted});this._cleanup(true);return editor}parent.drawLayer.remove(this._currentDrawId);this._cleanup(true);return null}createDrawingOptions(_data){}static deserializeDraw(_pageX,_pageY,_pageWidth,_pageHeight,_innerWidth,_data){unreachable(\"Not implemented\")}static async deserialize(data,parent,uiManager){const{rawDims:{pageWidth:pageWidth,pageHeight:pageHeight,pageX:pageX,pageY:pageY}}=parent.viewport;const drawOutlines=this.deserializeDraw(pageX,pageY,pageWidth,pageHeight,this._INNER_MARGIN,data);const editor=await super.deserialize(data,parent,uiManager);editor.createDrawingOptions(data);editor.#createDrawOutlines({drawOutlines:drawOutlines});editor.#addToDrawLayer();editor.onScaleChanging();editor.rotate();return editor}serializeDraw(isForCopying){const[pageX,pageY]=this.pageTranslation;const[pageWidth,pageHeight]=this.pageDimensions;return this.#drawOutlines.serialize([pageX,pageY,pageWidth,pageHeight],isForCopying)}renderAnnotationElement(annotation){annotation.updateEdited({rect:this.getRect(0,0)});return null}static canCreateNewEmptyEditor(){return false}}class InkDrawOutliner{#last=new Float64Array(6);#line;#lines;#rotation;#thickness;#points;#lastSVGPath=\"\";#lastIndex=0;#outlines=new InkDrawOutline;#parentWidth;#parentHeight;constructor(x,y,parentWidth,parentHeight,rotation,thickness){this.#parentWidth=parentWidth;this.#parentHeight=parentHeight;this.#rotation=rotation;this.#thickness=thickness;[x,y]=this.#normalizePoint(x,y);const line=this.#line=[NaN,NaN,NaN,NaN,x,y];this.#points=[x,y];this.#lines=[{line:line,points:this.#points}];this.#last.set(line,0)}updateProperty(name,value){if(name===\"stroke-width\"){this.#thickness=value}}#normalizePoint(x,y){return Outline._normalizePoint(x,y,this.#parentWidth,this.#parentHeight,this.#rotation)}isEmpty(){return!this.#lines||this.#lines.length===0}isCancellable(){return this.#points.length<=10}add(x,y){[x,y]=this.#normalizePoint(x,y);const[x1,y1,x2,y2]=this.#last.subarray(2,6);const diffX=x-x2;const diffY=y-y2;const d=Math.hypot(this.#parentWidth*diffX,this.#parentHeight*diffY);if(d<=2){return null}this.#points.push(x,y);if(isNaN(x1)){this.#last.set([x2,y2,x,y],2);this.#line.push(NaN,NaN,NaN,NaN,x,y);return{path:{d:this.toSVGPath()}}}if(isNaN(this.#last[0])){this.#line.splice(6,6)}this.#last.set([x1,y1,x2,y2,x,y],0);this.#line.push(...Outline.createBezierPoints(x1,y1,x2,y2,x,y));return{path:{d:this.toSVGPath()}}}end(x,y){const change=this.add(x,y);if(change){return change}if(this.#points.length===2){return{path:{d:this.toSVGPath()}}}return null}startNew(x,y,parentWidth,parentHeight,rotation){this.#parentWidth=parentWidth;this.#parentHeight=parentHeight;this.#rotation=rotation;[x,y]=this.#normalizePoint(x,y);const line=this.#line=[NaN,NaN,NaN,NaN,x,y];this.#points=[x,y];const last=this.#lines.at(-1);if(last){last.line=new Float32Array(last.line);last.points=new Float32Array(last.points)}this.#lines.push({line:line,points:this.#points});this.#last.set(line,0);this.#lastIndex=0;this.toSVGPath();return null}getLastElement(){return this.#lines.at(-1)}setLastElement(element){if(!this.#lines){return this.#outlines.setLastElement(element)}this.#lines.push(element);this.#line=element.line;this.#points=element.points;this.#lastIndex=0;return{path:{d:this.toSVGPath()}}}removeLastElement(){if(!this.#lines){return this.#outlines.removeLastElement()}this.#lines.pop();this.#lastSVGPath=\"\";for(let i=0,ii=this.#lines.length;i<ii;i++){const{line:line,points:points}=this.#lines[i];this.#line=line;this.#points=points;this.#lastIndex=0;this.toSVGPath()}return{path:{d:this.#lastSVGPath}}}toSVGPath(){const firstX=Outline.svgRound(this.#line[4]);const firstY=Outline.svgRound(this.#line[5]);if(this.#points.length===2){this.#lastSVGPath=`${this.#lastSVGPath} M ${firstX} ${firstY} Z`;return this.#lastSVGPath}if(this.#points.length<=6){const i=this.#lastSVGPath.lastIndexOf(\"M\");this.#lastSVGPath=`${this.#lastSVGPath.slice(0,i)} M ${firstX} ${firstY}`;this.#lastIndex=6}if(this.#points.length===4){const secondX=Outline.svgRound(this.#line[10]);const secondY=Outline.svgRound(this.#line[11]);this.#lastSVGPath=`${this.#lastSVGPath} L ${secondX} ${secondY}`;this.#lastIndex=12;return this.#lastSVGPath}const buffer=[];if(this.#lastIndex===0){buffer.push(`M ${firstX} ${firstY}`);this.#lastIndex=6}for(let i=this.#lastIndex,ii=this.#line.length;i<ii;i+=6){const[c1x,c1y,c2x,c2y,x,y]=this.#line.slice(i,i+6).map(Outline.svgRound);buffer.push(`C${c1x} ${c1y} ${c2x} ${c2y} ${x} ${y}`)}this.#lastSVGPath+=buffer.join(\" \");this.#lastIndex=this.#line.length;return this.#lastSVGPath}getOutlines(parentWidth,parentHeight,scale,innerMargin){const last=this.#lines.at(-1);last.line=new Float32Array(last.line);last.points=new Float32Array(last.points);this.#outlines.build(this.#lines,parentWidth,parentHeight,scale,this.#rotation,this.#thickness,innerMargin);this.#last=null;this.#line=null;this.#lines=null;this.#lastSVGPath=null;return this.#outlines}get defaultSVGProperties(){return{root:{viewBox:\"0 0 10000 10000\"},rootClass:{draw:true},bbox:[0,0,1,1]}}}class InkDrawOutline extends Outline{#bbox;#currentRotation=0;#innerMargin;#lines;#parentWidth;#parentHeight;#parentScale;#rotation;#thickness;build(lines,parentWidth,parentHeight,parentScale,rotation,thickness,innerMargin){this.#parentWidth=parentWidth;this.#parentHeight=parentHeight;this.#parentScale=parentScale;this.#rotation=rotation;this.#thickness=thickness;this.#innerMargin=innerMargin??0;this.#lines=lines;this.#computeBbox()}get thickness(){return this.#thickness}setLastElement(element){this.#lines.push(element);return{path:{d:this.toSVGPath()}}}removeLastElement(){this.#lines.pop();return{path:{d:this.toSVGPath()}}}toSVGPath(){const buffer=[];for(const{line:line}of this.#lines){buffer.push(`M${Outline.svgRound(line[4])} ${Outline.svgRound(line[5])}`);if(line.length===6){buffer.push(\"Z\");continue}if(line.length===12&&isNaN(line[6])){buffer.push(`L${Outline.svgRound(line[10])} ${Outline.svgRound(line[11])}`);continue}for(let i=6,ii=line.length;i<ii;i+=6){const[c1x,c1y,c2x,c2y,x,y]=line.subarray(i,i+6).map(Outline.svgRound);buffer.push(`C${c1x} ${c1y} ${c2x} ${c2y} ${x} ${y}`)}}return buffer.join(\"\")}serialize([pageX,pageY,pageWidth,pageHeight],isForCopying){const serializedLines=[];const serializedPoints=[];const[x,y,width,height]=this.#getBBoxWithNoMargin();let tx,ty,sx,sy,x1,y1,x2,y2,rescaleFn;switch(this.#rotation){case 0:rescaleFn=Outline._rescale;tx=pageX;ty=pageY+pageHeight;sx=pageWidth;sy=-pageHeight;x1=pageX+x*pageWidth;y1=pageY+(1-y-height)*pageHeight;x2=pageX+(x+width)*pageWidth;y2=pageY+(1-y)*pageHeight;break;case 90:rescaleFn=Outline._rescaleAndSwap;tx=pageX;ty=pageY;sx=pageWidth;sy=pageHeight;x1=pageX+y*pageWidth;y1=pageY+x*pageHeight;x2=pageX+(y+height)*pageWidth;y2=pageY+(x+width)*pageHeight;break;case 180:rescaleFn=Outline._rescale;tx=pageX+pageWidth;ty=pageY;sx=-pageWidth;sy=pageHeight;x1=pageX+(1-x-width)*pageWidth;y1=pageY+y*pageHeight;x2=pageX+(1-x)*pageWidth;y2=pageY+(y+height)*pageHeight;break;case 270:rescaleFn=Outline._rescaleAndSwap;tx=pageX+pageWidth;ty=pageY+pageHeight;sx=-pageWidth;sy=-pageHeight;x1=pageX+(1-y-height)*pageWidth;y1=pageY+(1-x-width)*pageHeight;x2=pageX+(1-y)*pageWidth;y2=pageY+(1-x)*pageHeight;break}for(const{line:line,points:points}of this.#lines){serializedLines.push(rescaleFn(line,tx,ty,sx,sy,isForCopying?new Array(line.length):null));serializedPoints.push(rescaleFn(points,tx,ty,sx,sy,isForCopying?new Array(points.length):null))}return{lines:serializedLines,points:serializedPoints,rect:[x1,y1,x2,y2]}}static deserialize(pageX,pageY,pageWidth,pageHeight,innerMargin,{paths:{lines:lines,points:points},rotation:rotation,thickness:thickness}){const newLines=[];let tx,ty,sx,sy,rescaleFn;switch(rotation){case 0:rescaleFn=Outline._rescale;tx=-pageX/pageWidth;ty=pageY/pageHeight+1;sx=1/pageWidth;sy=-1/pageHeight;break;case 90:rescaleFn=Outline._rescaleAndSwap;tx=-pageY/pageHeight;ty=-pageX/pageWidth;sx=1/pageHeight;sy=1/pageWidth;break;case 180:rescaleFn=Outline._rescale;tx=pageX/pageWidth+1;ty=-pageY/pageHeight;sx=-1/pageWidth;sy=1/pageHeight;break;case 270:rescaleFn=Outline._rescaleAndSwap;tx=pageY/pageHeight+1;ty=pageX/pageWidth+1;sx=-1/pageHeight;sy=-1/pageWidth;break}if(!lines){lines=[];for(const point of points){const len=point.length;if(len===2){lines.push(new Float32Array([NaN,NaN,NaN,NaN,point[0],point[1]]));continue}if(len===4){lines.push(new Float32Array([NaN,NaN,NaN,NaN,point[0],point[1],NaN,NaN,NaN,NaN,point[2],point[3]]));continue}const line=new Float32Array(3*(len-2));lines.push(line);let[x1,y1,x2,y2]=point.subarray(0,4);line.set([NaN,NaN,NaN,NaN,x1,y1],0);for(let i=4;i<len;i+=2){const x=point[i];const y=point[i+1];line.set(Outline.createBezierPoints(x1,y1,x2,y2,x,y),(i-2)*3);[x1,y1,x2,y2]=[x2,y2,x,y]}}}for(let i=0,ii=lines.length;i<ii;i++){newLines.push({line:rescaleFn(lines[i].map((x=>x??NaN)),tx,ty,sx,sy),points:rescaleFn(points[i].map((x=>x??NaN)),tx,ty,sx,sy)})}const outlines=new this.prototype.constructor;outlines.build(newLines,pageWidth,pageHeight,1,rotation,thickness,innerMargin);return outlines}#getMarginComponents(thickness=this.#thickness){const margin=this.#innerMargin+thickness/2*this.#parentScale;return this.#rotation%180===0?[margin/this.#parentWidth,margin/this.#parentHeight]:[margin/this.#parentHeight,margin/this.#parentWidth]}#getBBoxWithNoMargin(){const[x,y,width,height]=this.#bbox;const[marginX,marginY]=this.#getMarginComponents(0);return[x+marginX,y+marginY,width-2*marginX,height-2*marginY]}#computeBbox(){const bbox=this.#bbox=new Float32Array([Infinity,Infinity,-Infinity,-Infinity]);for(const{line:line}of this.#lines){if(line.length<=12){for(let i=4,ii=line.length;i<ii;i+=6){Util.pointBoundingBox(line[i],line[i+1],bbox)}continue}let lastX=line[4],lastY=line[5];for(let i=6,ii=line.length;i<ii;i+=6){const[c1x,c1y,c2x,c2y,x,y]=line.subarray(i,i+6);Util.bezierBoundingBox(lastX,lastY,c1x,c1y,c2x,c2y,x,y,bbox);lastX=x;lastY=y}}const[marginX,marginY]=this.#getMarginComponents();bbox[0]=MathClamp(bbox[0]-marginX,0,1);bbox[1]=MathClamp(bbox[1]-marginY,0,1);bbox[2]=MathClamp(bbox[2]+marginX,0,1);bbox[3]=MathClamp(bbox[3]+marginY,0,1);bbox[2]-=bbox[0];bbox[3]-=bbox[1]}get box(){return this.#bbox}updateProperty(name,value){if(name===\"stroke-width\"){return this.#updateThickness(value)}return null}#updateThickness(thickness){const[oldMarginX,oldMarginY]=this.#getMarginComponents();this.#thickness=thickness;const[newMarginX,newMarginY]=this.#getMarginComponents();const[diffMarginX,diffMarginY]=[newMarginX-oldMarginX,newMarginY-oldMarginY];const bbox=this.#bbox;bbox[0]-=diffMarginX;bbox[1]-=diffMarginY;bbox[2]+=2*diffMarginX;bbox[3]+=2*diffMarginY;return bbox}updateParentDimensions([width,height],scale){const[oldMarginX,oldMarginY]=this.#getMarginComponents();this.#parentWidth=width;this.#parentHeight=height;this.#parentScale=scale;const[newMarginX,newMarginY]=this.#getMarginComponents();const diffMarginX=newMarginX-oldMarginX;const diffMarginY=newMarginY-oldMarginY;const bbox=this.#bbox;bbox[0]-=diffMarginX;bbox[1]-=diffMarginY;bbox[2]+=2*diffMarginX;bbox[3]+=2*diffMarginY;return bbox}updateRotation(rotation){this.#currentRotation=rotation;return{path:{transform:this.rotationTransform}}}get viewBox(){return this.#bbox.map(Outline.svgRound).join(\" \")}get defaultProperties(){const[x,y]=this.#bbox;return{root:{viewBox:this.viewBox},path:{\"transform-origin\":`${Outline.svgRound(x)} ${Outline.svgRound(y)}`}}}get rotationTransform(){const[,,width,height]=this.#bbox;let a=0,b=0,c=0,d=0,e=0,f=0;switch(this.#currentRotation){case 90:b=height/width;c=-width/height;e=width;break;case 180:a=-1;d=-1;e=width;f=height;break;case 270:b=-height/width;c=width/height;f=height;break;default:return\"\"}return`matrix(${a} ${b} ${c} ${d} ${Outline.svgRound(e)} ${Outline.svgRound(f)})`}getPathResizingSVGProperties([newX,newY,newWidth,newHeight]){const[marginX,marginY]=this.#getMarginComponents();const[x,y,width,height]=this.#bbox;if(Math.abs(width-marginX)<=Outline.PRECISION||Math.abs(height-marginY)<=Outline.PRECISION){const tx=newX+newWidth/2-(x+width/2);const ty=newY+newHeight/2-(y+height/2);return{path:{\"transform-origin\":`${Outline.svgRound(newX)} ${Outline.svgRound(newY)}`,transform:`${this.rotationTransform} translate(${tx} ${ty})`}}}const s1x=(newWidth-2*marginX)/(width-2*marginX);const s1y=(newHeight-2*marginY)/(height-2*marginY);const s2x=width/newWidth;const s2y=height/newHeight;return{path:{\"transform-origin\":`${Outline.svgRound(x)} ${Outline.svgRound(y)}`,transform:`${this.rotationTransform} scale(${s2x} ${s2y}) `+`translate(${Outline.svgRound(marginX)} ${Outline.svgRound(marginY)}) scale(${s1x} ${s1y}) `+`translate(${Outline.svgRound(-marginX)} ${Outline.svgRound(-marginY)})`}}}getPathResizedSVGProperties([newX,newY,newWidth,newHeight]){const[marginX,marginY]=this.#getMarginComponents();const bbox=this.#bbox;const[x,y,width,height]=bbox;bbox[0]=newX;bbox[1]=newY;bbox[2]=newWidth;bbox[3]=newHeight;if(Math.abs(width-marginX)<=Outline.PRECISION||Math.abs(height-marginY)<=Outline.PRECISION){const tx=newX+newWidth/2-(x+width/2);const ty=newY+newHeight/2-(y+height/2);for(const{line:line,points:points}of this.#lines){Outline._translate(line,tx,ty,line);Outline._translate(points,tx,ty,points)}return{root:{viewBox:this.viewBox},path:{\"transform-origin\":`${Outline.svgRound(newX)} ${Outline.svgRound(newY)}`,transform:this.rotationTransform||null,d:this.toSVGPath()}}}const s1x=(newWidth-2*marginX)/(width-2*marginX);const s1y=(newHeight-2*marginY)/(height-2*marginY);const tx=-s1x*(x+marginX)+newX+marginX;const ty=-s1y*(y+marginY)+newY+marginY;if(s1x!==1||s1y!==1||tx!==0||ty!==0){for(const{line:line,points:points}of this.#lines){Outline._rescale(line,tx,ty,s1x,s1y,line);Outline._rescale(points,tx,ty,s1x,s1y,points)}}return{root:{viewBox:this.viewBox},path:{\"transform-origin\":`${Outline.svgRound(newX)} ${Outline.svgRound(newY)}`,transform:this.rotationTransform||null,d:this.toSVGPath()}}}getPathTranslatedSVGProperties([newX,newY],parentDimensions){const[newParentWidth,newParentHeight]=parentDimensions;const bbox=this.#bbox;const tx=newX-bbox[0];const ty=newY-bbox[1];if(this.#parentWidth===newParentWidth&&this.#parentHeight===newParentHeight){for(const{line:line,points:points}of this.#lines){Outline._translate(line,tx,ty,line);Outline._translate(points,tx,ty,points)}}else{const sx=this.#parentWidth/newParentWidth;const sy=this.#parentHeight/newParentHeight;this.#parentWidth=newParentWidth;this.#parentHeight=newParentHeight;for(const{line:line,points:points}of this.#lines){Outline._rescale(line,tx,ty,sx,sy,line);Outline._rescale(points,tx,ty,sx,sy,points)}bbox[2]*=sx;bbox[3]*=sy}bbox[0]=newX;bbox[1]=newY;return{root:{viewBox:this.viewBox},path:{d:this.toSVGPath(),\"transform-origin\":`${Outline.svgRound(newX)} ${Outline.svgRound(newY)}`}}}get defaultSVGProperties(){const bbox=this.#bbox;return{root:{viewBox:this.viewBox},rootClass:{draw:true},path:{d:this.toSVGPath(),\"transform-origin\":`${Outline.svgRound(bbox[0])} ${Outline.svgRound(bbox[1])}`,transform:this.rotationTransform||null},bbox:bbox}}}class InkDrawingOptions extends DrawingOptions{constructor(viewerParameters){super();this._viewParameters=viewerParameters;super.updateProperties({fill:\"none\",stroke:AnnotationEditor._defaultLineColor,\"stroke-opacity\":1,\"stroke-width\":1,\"stroke-linecap\":\"round\",\"stroke-linejoin\":\"round\",\"stroke-miterlimit\":10})}updateSVGProperty(name,value){if(name===\"stroke-width\"){value??=this[\"stroke-width\"];value*=this._viewParameters.realScale}super.updateSVGProperty(name,value)}clone(){const clone=new InkDrawingOptions(this._viewParameters);clone.updateAll(this);return clone}}class InkEditor extends DrawingEditor{static _type=\"ink\";static _editorType=AnnotationEditorType.INK;static _defaultDrawingOptions=null;constructor(params){super({...params,name:\"inkEditor\"});this._willKeepAspectRatio=true;this.defaultL10nId=\"pdfjs-editor-ink-editor\"}static initialize(l10n,uiManager){AnnotationEditor.initialize(l10n,uiManager);this._defaultDrawingOptions=new InkDrawingOptions(uiManager.viewParameters)}static getDefaultDrawingOptions(options){const clone=this._defaultDrawingOptions.clone();clone.updateProperties(options);return clone}static get supportMultipleDrawings(){return true}static get typesMap(){return shadow(this,\"typesMap\",new Map([[AnnotationEditorParamsType.INK_THICKNESS,\"stroke-width\"],[AnnotationEditorParamsType.INK_COLOR,\"stroke\"],[AnnotationEditorParamsType.INK_OPACITY,\"stroke-opacity\"]]))}static createDrawerInstance(x,y,parentWidth,parentHeight,rotation){return new InkDrawOutliner(x,y,parentWidth,parentHeight,rotation,this._defaultDrawingOptions[\"stroke-width\"])}static deserializeDraw(pageX,pageY,pageWidth,pageHeight,innerMargin,data){return InkDrawOutline.deserialize(pageX,pageY,pageWidth,pageHeight,innerMargin,data)}static async deserialize(data,parent,uiManager){let initialData=null;if(data instanceof InkAnnotationElement){const{data:{inkLists:inkLists,rect:rect,rotation:rotation,id:id,color:color,opacity:opacity,borderStyle:{rawWidth:thickness},popupRef:popupRef},parent:{page:{pageNumber:pageNumber}}}=data;initialData=data={annotationType:AnnotationEditorType.INK,color:Array.from(color),thickness:thickness,opacity:opacity,paths:{points:inkLists},boxes:null,pageIndex:pageNumber-1,rect:rect.slice(0),rotation:rotation,id:id,deleted:false,popupRef:popupRef}}const editor=await super.deserialize(data,parent,uiManager);editor.annotationElementId=data.id||null;editor._initialData=initialData;return editor}onScaleChanging(){if(!this.parent){return}super.onScaleChanging();const{_drawId:_drawId,_drawingOptions:_drawingOptions,parent:parent}=this;_drawingOptions.updateSVGProperty(\"stroke-width\");parent.drawLayer.updateProperties(_drawId,_drawingOptions.toSVGProperties())}static onScaleChangingWhenDrawing(){const parent=this._currentParent;if(!parent){return}super.onScaleChangingWhenDrawing();this._defaultDrawingOptions.updateSVGProperty(\"stroke-width\");parent.drawLayer.updateProperties(this._currentDrawId,this._defaultDrawingOptions.toSVGProperties())}createDrawingOptions({color:color,thickness:thickness,opacity:opacity}){this._drawingOptions=InkEditor.getDefaultDrawingOptions({stroke:Util.makeHexColor(...color),\"stroke-width\":thickness,\"stroke-opacity\":opacity})}serialize(isForCopying=false){if(this.isEmpty()){return null}if(this.deleted){return this.serializeDeleted()}const{lines:lines,points:points,rect:rect}=this.serializeDraw(isForCopying);const{_drawingOptions:{stroke:stroke,\"stroke-opacity\":opacity,\"stroke-width\":thickness}}=this;const serialized={annotationType:AnnotationEditorType.INK,color:AnnotationEditor._colorManager.convert(stroke),opacity:opacity,thickness:thickness,paths:{lines:lines,points:points},pageIndex:this.pageIndex,rect:rect,rotation:this.rotation,structTreeParentId:this._structTreeParentId};if(isForCopying){serialized.isCopy=true;return serialized}if(this.annotationElementId&&!this.#hasElementChanged(serialized)){return null}serialized.id=this.annotationElementId;return serialized}#hasElementChanged(serialized){const{color:color,thickness:thickness,opacity:opacity,pageIndex:pageIndex}=this._initialData;return this._hasBeenMoved||this._hasBeenResized||serialized.color.some(((c,i)=>c!==color[i]))||serialized.thickness!==thickness||serialized.opacity!==opacity||serialized.pageIndex!==pageIndex}renderAnnotationElement(annotation){const{points:points,rect:rect}=this.serializeDraw(false);annotation.updateEdited({rect:rect,thickness:this._drawingOptions[\"stroke-width\"],points:points});return null}}class ContourDrawOutline extends InkDrawOutline{toSVGPath(){let path=super.toSVGPath();if(!path.endsWith(\"Z\")){path+=\"Z\"}return path}}const BASE_HEADER_LENGTH=8;const POINTS_PROPERTIES_NUMBER=3;class SignatureExtractor{static#PARAMETERS={maxDim:512,sigmaSFactor:.02,sigmaR:25,kernelSize:16};static#neighborIndexToId(i0,j0,i,j){i-=i0;j-=j0;if(i===0){return j>0?0:4}if(i===1){return j+6}return 2-j}static#neighborIdToIndex=new Int32Array([0,1,-1,1,-1,0,-1,-1,0,-1,1,-1,1,0,1,1]);static#clockwiseNonZero(buf,width,i0,j0,i,j,offset){const id=this.#neighborIndexToId(i0,j0,i,j);for(let k=0;k<8;k++){const kk=(-k+id-offset+16)%8;const shiftI=this.#neighborIdToIndex[2*kk];const shiftJ=this.#neighborIdToIndex[2*kk+1];if(buf[(i0+shiftI)*width+(j0+shiftJ)]!==0){return kk}}return-1}static#counterClockwiseNonZero(buf,width,i0,j0,i,j,offset){const id=this.#neighborIndexToId(i0,j0,i,j);for(let k=0;k<8;k++){const kk=(k+id+offset+16)%8;const shiftI=this.#neighborIdToIndex[2*kk];const shiftJ=this.#neighborIdToIndex[2*kk+1];if(buf[(i0+shiftI)*width+(j0+shiftJ)]!==0){return kk}}return-1}static#findContours(buf,width,height,threshold){const N=buf.length;const types=new Int32Array(N);for(let i=0;i<N;i++){types[i]=buf[i]<=threshold?1:0}for(let i=1;i<height-1;i++){types[i*width]=types[i*width+width-1]=0}for(let i=0;i<width;i++){types[i]=types[width*height-1-i]=0}let nbd=1;let lnbd;const contours=[];for(let i=1;i<height-1;i++){lnbd=1;for(let j=1;j<width-1;j++){const ij=i*width+j;const pix=types[ij];if(pix===0){continue}let i2=i;let j2=j;if(pix===1&&types[ij-1]===0){nbd+=1;j2-=1}else if(pix>=1&&types[ij+1]===0){nbd+=1;j2+=1;if(pix>1){lnbd=pix}}else{if(pix!==1){lnbd=Math.abs(pix)}continue}const points=[j,i];const isHole=j2===j+1;const contour={isHole:isHole,points:points,id:nbd,parent:0};contours.push(contour);let contour0;for(const c of contours){if(c.id===lnbd){contour0=c;break}}if(!contour0){contour.parent=isHole?lnbd:0}else if(contour0.isHole){contour.parent=isHole?contour0.parent:lnbd}else{contour.parent=isHole?lnbd:contour0.parent}const k=this.#clockwiseNonZero(types,width,i,j,i2,j2,0);if(k===-1){types[ij]=-nbd;if(types[ij]!==1){lnbd=Math.abs(types[ij])}continue}let shiftI=this.#neighborIdToIndex[2*k];let shiftJ=this.#neighborIdToIndex[2*k+1];const i1=i+shiftI;const j1=j+shiftJ;i2=i1;j2=j1;let i3=i;let j3=j;while(true){const kk=this.#counterClockwiseNonZero(types,width,i3,j3,i2,j2,1);shiftI=this.#neighborIdToIndex[2*kk];shiftJ=this.#neighborIdToIndex[2*kk+1];const i4=i3+shiftI;const j4=j3+shiftJ;points.push(j4,i4);const ij3=i3*width+j3;if(types[ij3+1]===0){types[ij3]=-nbd}else if(types[ij3]===1){types[ij3]=nbd}if(i4===i&&j4===j&&i3===i1&&j3===j1){if(types[ij]!==1){lnbd=Math.abs(types[ij])}break}else{i2=i3;j2=j3;i3=i4;j3=j4}}}}return contours}static#douglasPeuckerHelper(points,start,end,output){if(end-start<=4){for(let i=start;i<end-2;i+=2){output.push(points[i],points[i+1])}return}const ax=points[start];const ay=points[start+1];const abx=points[end-4]-ax;const aby=points[end-3]-ay;const dist=Math.hypot(abx,aby);const nabx=abx/dist;const naby=aby/dist;const aa=nabx*ay-naby*ax;const m=aby/abx;const invS=1/dist;const phi=Math.atan(m);const cosPhi=Math.cos(phi);const sinPhi=Math.sin(phi);const tmax=invS*(Math.abs(cosPhi)+Math.abs(sinPhi));const poly=invS*(1-tmax+tmax**2);const partialPhi=Math.max(Math.atan(Math.abs(sinPhi+cosPhi)*poly),Math.atan(Math.abs(sinPhi-cosPhi)*poly));let dmax=0;let index=start;for(let i=start+2;i<end-2;i+=2){const d=Math.abs(aa-nabx*points[i+1]+naby*points[i]);if(d>dmax){index=i;dmax=d}}if(dmax>(dist*partialPhi)**2){this.#douglasPeuckerHelper(points,start,index+2,output);this.#douglasPeuckerHelper(points,index,end,output)}else{output.push(ax,ay)}}static#douglasPeucker(points){const output=[];const len=points.length;this.#douglasPeuckerHelper(points,0,len,output);output.push(points[len-2],points[len-1]);return output.length<=4?null:output}static#bilateralFilter(buf,width,height,sigmaS,sigmaR,kernelSize){const kernel=new Float32Array(kernelSize**2);const sigmaS2=-2*sigmaS**2;const halfSize=kernelSize>>1;for(let i=0;i<kernelSize;i++){const x=(i-halfSize)**2;for(let j=0;j<kernelSize;j++){kernel[i*kernelSize+j]=Math.exp((x+(j-halfSize)**2)/sigmaS2)}}const rangeValues=new Float32Array(256);const sigmaR2=-2*sigmaR**2;for(let i=0;i<256;i++){rangeValues[i]=Math.exp(i**2/sigmaR2)}const N=buf.length;const out=new Uint8Array(N);const histogram=new Uint32Array(256);for(let i=0;i<height;i++){for(let j=0;j<width;j++){const ij=i*width+j;const center=buf[ij];let sum=0;let norm=0;for(let k=0;k<kernelSize;k++){const y=i+k-halfSize;if(y<0||y>=height){continue}for(let l=0;l<kernelSize;l++){const x=j+l-halfSize;if(x<0||x>=width){continue}const neighbour=buf[y*width+x];const w=kernel[k*kernelSize+l]*rangeValues[Math.abs(neighbour-center)];sum+=neighbour*w;norm+=w}}const pix=out[ij]=Math.round(sum/norm);histogram[pix]++}}return[out,histogram]}static#getHistogram(buf){const histogram=new Uint32Array(256);for(const g of buf){histogram[g]++}return histogram}static#toUint8(buf){const N=buf.length;const out=new Uint8ClampedArray(N>>2);let max=-Infinity;let min=Infinity;for(let i=0,ii=out.length;i<ii;i++){const A=buf[(i<<2)+3];if(A===0){max=out[i]=255;continue}const pix=out[i]=buf[i<<2];if(pix>max){max=pix}if(pix<min){min=pix}}const ratio=255/(max-min);for(let i=0;i<N;i++){out[i]=(out[i]-min)*ratio}return out}static#guessThreshold(histogram){let i;let M=-Infinity;let L=-Infinity;const min=histogram.findIndex((v=>v!==0));let pos=min;let spos=min;for(i=min;i<256;i++){const v=histogram[i];if(v>M){if(i-pos>L){L=i-pos;spos=i-1}M=v;pos=i}}for(i=spos-1;i>=0;i--){if(histogram[i]>histogram[i+1]){break}}return i}static#getGrayPixels(bitmap){const originalBitmap=bitmap;const{width:width,height:height}=bitmap;const{maxDim:maxDim}=this.#PARAMETERS;let newWidth=width;let newHeight=height;if(width>maxDim||height>maxDim){let prevWidth=width;let prevHeight=height;let steps=Math.log2(Math.max(width,height)/maxDim);const isteps=Math.floor(steps);steps=steps===isteps?isteps-1:isteps;for(let i=0;i<steps;i++){newWidth=prevWidth;newHeight=prevHeight;if(newWidth>maxDim){newWidth=Math.ceil(newWidth/2)}if(newHeight>maxDim){newHeight=Math.ceil(newHeight/2)}const offscreen=new OffscreenCanvas(newWidth,newHeight);const ctx=offscreen.getContext(\"2d\");ctx.drawImage(bitmap,0,0,prevWidth,prevHeight,0,0,newWidth,newHeight);prevWidth=newWidth;prevHeight=newHeight;if(bitmap!==originalBitmap){bitmap.close()}bitmap=offscreen.transferToImageBitmap()}const ratio=Math.min(maxDim/newWidth,maxDim/newHeight);newWidth=Math.round(newWidth*ratio);newHeight=Math.round(newHeight*ratio)}const offscreen=new OffscreenCanvas(newWidth,newHeight);const ctx=offscreen.getContext(\"2d\",{willReadFrequently:true});ctx.filter=\"grayscale(1)\";ctx.drawImage(bitmap,0,0,bitmap.width,bitmap.height,0,0,newWidth,newHeight);const grayImage=ctx.getImageData(0,0,newWidth,newHeight).data;const uint8Buf=this.#toUint8(grayImage);return[uint8Buf,newWidth,newHeight]}static extractContoursFromText(text,{fontFamily:fontFamily,fontStyle:fontStyle,fontWeight:fontWeight},pageWidth,pageHeight,rotation,innerMargin){let canvas=new OffscreenCanvas(1,1);let ctx=canvas.getContext(\"2d\",{alpha:false});const fontSize=200;const font=ctx.font=`${fontStyle} ${fontWeight} ${fontSize}px ${fontFamily}`;const{actualBoundingBoxLeft:actualBoundingBoxLeft,actualBoundingBoxRight:actualBoundingBoxRight,actualBoundingBoxAscent:actualBoundingBoxAscent,actualBoundingBoxDescent:actualBoundingBoxDescent,fontBoundingBoxAscent:fontBoundingBoxAscent,fontBoundingBoxDescent:fontBoundingBoxDescent,width:width}=ctx.measureText(text);const SCALE=1.5;const canvasWidth=Math.ceil(Math.max(Math.abs(actualBoundingBoxLeft)+Math.abs(actualBoundingBoxRight)||0,width)*SCALE);const canvasHeight=Math.ceil(Math.max(Math.abs(actualBoundingBoxAscent)+Math.abs(actualBoundingBoxDescent)||fontSize,Math.abs(fontBoundingBoxAscent)+Math.abs(fontBoundingBoxDescent)||fontSize)*SCALE);canvas=new OffscreenCanvas(canvasWidth,canvasHeight);ctx=canvas.getContext(\"2d\",{alpha:true,willReadFrequently:true});ctx.font=font;ctx.filter=\"grayscale(1)\";ctx.fillStyle=\"white\";ctx.fillRect(0,0,canvasWidth,canvasHeight);ctx.fillStyle=\"black\";ctx.fillText(text,canvasWidth*(SCALE-1)/2,canvasHeight*(3-SCALE)/2);const uint8Buf=this.#toUint8(ctx.getImageData(0,0,canvasWidth,canvasHeight).data);const histogram=this.#getHistogram(uint8Buf);const threshold=this.#guessThreshold(histogram);const contourList=this.#findContours(uint8Buf,canvasWidth,canvasHeight,threshold);return this.processDrawnLines({lines:{curves:contourList,width:canvasWidth,height:canvasHeight},pageWidth:pageWidth,pageHeight:pageHeight,rotation:rotation,innerMargin:innerMargin,mustSmooth:true,areContours:true})}static process(bitmap,pageWidth,pageHeight,rotation,innerMargin){const[uint8Buf,width,height]=this.#getGrayPixels(bitmap);const[buffer,histogram]=this.#bilateralFilter(uint8Buf,width,height,Math.hypot(width,height)*this.#PARAMETERS.sigmaSFactor,this.#PARAMETERS.sigmaR,this.#PARAMETERS.kernelSize);const threshold=this.#guessThreshold(histogram);const contourList=this.#findContours(buffer,width,height,threshold);return this.processDrawnLines({lines:{curves:contourList,width:width,height:height},pageWidth:pageWidth,pageHeight:pageHeight,rotation:rotation,innerMargin:innerMargin,mustSmooth:true,areContours:true})}static processDrawnLines({lines:lines,pageWidth:pageWidth,pageHeight:pageHeight,rotation:rotation,innerMargin:innerMargin,mustSmooth:mustSmooth,areContours:areContours}){if(rotation%180!==0){[pageWidth,pageHeight]=[pageHeight,pageWidth]}const{curves:curves,width:width,height:height}=lines;const thickness=lines.thickness??0;const linesAndPoints=[];const ratio=Math.min(pageWidth/width,pageHeight/height);const xScale=ratio/pageWidth;const yScale=ratio/pageHeight;const newCurves=[];for(const{points:points}of curves){const reducedPoints=mustSmooth?this.#douglasPeucker(points):points;if(!reducedPoints){continue}newCurves.push(reducedPoints);const len=reducedPoints.length;const newPoints=new Float32Array(len);const line=new Float32Array(3*(len===2?2:len-2));linesAndPoints.push({line:line,points:newPoints});if(len===2){newPoints[0]=reducedPoints[0]*xScale;newPoints[1]=reducedPoints[1]*yScale;line.set([NaN,NaN,NaN,NaN,newPoints[0],newPoints[1]],0);continue}let[x1,y1,x2,y2]=reducedPoints;x1*=xScale;y1*=yScale;x2*=xScale;y2*=yScale;newPoints.set([x1,y1,x2,y2],0);line.set([NaN,NaN,NaN,NaN,x1,y1],0);for(let i=4;i<len;i+=2){const x=newPoints[i]=reducedPoints[i]*xScale;const y=newPoints[i+1]=reducedPoints[i+1]*yScale;line.set(Outline.createBezierPoints(x1,y1,x2,y2,x,y),(i-2)*3);[x1,y1,x2,y2]=[x2,y2,x,y]}}if(linesAndPoints.length===0){return null}const outline=areContours?new ContourDrawOutline:new InkDrawOutline;outline.build(linesAndPoints,pageWidth,pageHeight,1,rotation,areContours?0:thickness,innerMargin);return{outline:outline,newCurves:newCurves,areContours:areContours,thickness:thickness,width:width,height:height}}static async compressSignature({outlines:outlines,areContours:areContours,thickness:thickness,width:width,height:height}){let minDiff=Infinity;let maxDiff=-Infinity;let outlinesLength=0;for(const points of outlines){outlinesLength+=points.length;for(let i=2,ii=points.length;i<ii;i++){const dx=points[i]-points[i-2];minDiff=Math.min(minDiff,dx);maxDiff=Math.max(maxDiff,dx)}}let bufferType;if(minDiff>=-128&&maxDiff<=127){bufferType=Int8Array}else if(minDiff>=-32768&&maxDiff<=32767){bufferType=Int16Array}else{bufferType=Int32Array}const len=outlines.length;const headerLength=BASE_HEADER_LENGTH+POINTS_PROPERTIES_NUMBER*len;const header=new Uint32Array(headerLength);let offset=0;header[offset++]=headerLength*Uint32Array.BYTES_PER_ELEMENT+(outlinesLength-2*len)*bufferType.BYTES_PER_ELEMENT;header[offset++]=0;header[offset++]=width;header[offset++]=height;header[offset++]=areContours?0:1;header[offset++]=Math.max(0,Math.floor(thickness??0));header[offset++]=len;header[offset++]=bufferType.BYTES_PER_ELEMENT;for(const points of outlines){header[offset++]=points.length-2;header[offset++]=points[0];header[offset++]=points[1]}const cs=new CompressionStream(\"deflate-raw\");const writer=cs.writable.getWriter();await writer.ready;writer.write(header);const BufferCtor=bufferType.prototype.constructor;for(const points of outlines){const diffs=new BufferCtor(points.length-2);for(let i=2,ii=points.length;i<ii;i++){diffs[i-2]=points[i]-points[i-2]}writer.write(diffs)}writer.close();const buf=await new Response(cs.readable).arrayBuffer();const bytes=new Uint8Array(buf);return toBase64Util(bytes)}static async decompressSignature(signatureData){try{const bytes=fromBase64Util(signatureData);const{readable:readable,writable:writable}=new DecompressionStream(\"deflate-raw\");const writer=writable.getWriter();await writer.ready;writer.write(bytes).then((async()=>{await writer.ready;await writer.close()})).catch((()=>{}));let data=null;let offset=0;for await(const chunk of readable){data||=new Uint8Array(new Uint32Array(chunk.buffer,0,4)[0]);data.set(chunk,offset);offset+=chunk.length}const header=new Uint32Array(data.buffer,0,data.length>>2);const version=header[1];if(version!==0){throw new Error(`Invalid version: ${version}`)}const width=header[2];const height=header[3];const areContours=header[4]===0;const thickness=header[5];const numberOfDrawings=header[6];const bufferType=header[7];const outlines=[];const diffsOffset=(BASE_HEADER_LENGTH+POINTS_PROPERTIES_NUMBER*numberOfDrawings)*Uint32Array.BYTES_PER_ELEMENT;let diffs;switch(bufferType){case Int8Array.BYTES_PER_ELEMENT:diffs=new Int8Array(data.buffer,diffsOffset);break;case Int16Array.BYTES_PER_ELEMENT:diffs=new Int16Array(data.buffer,diffsOffset);break;case Int32Array.BYTES_PER_ELEMENT:diffs=new Int32Array(data.buffer,diffsOffset);break}offset=0;for(let i=0;i<numberOfDrawings;i++){const len=header[POINTS_PROPERTIES_NUMBER*i+BASE_HEADER_LENGTH];const points=new Float32Array(len+2);outlines.push(points);for(let j=0;j<POINTS_PROPERTIES_NUMBER-1;j++){points[j]=header[POINTS_PROPERTIES_NUMBER*i+BASE_HEADER_LENGTH+j+1]}for(let j=0;j<len;j++){points[j+2]=points[j]+diffs[offset++]}}return{areContours:areContours,thickness:thickness,outlines:outlines,width:width,height:height}}catch(e){warn(`decompressSignature: ${e}`);return null}}}class SignatureOptions extends DrawingOptions{constructor(){super();super.updateProperties({fill:AnnotationEditor._defaultLineColor,\"stroke-width\":0})}clone(){const clone=new SignatureOptions;clone.updateAll(this);return clone}}class DrawnSignatureOptions extends InkDrawingOptions{constructor(viewerParameters){super(viewerParameters);super.updateProperties({stroke:AnnotationEditor._defaultLineColor,\"stroke-width\":1})}clone(){const clone=new DrawnSignatureOptions(this._viewParameters);clone.updateAll(this);return clone}}class SignatureEditor extends DrawingEditor{#isExtracted=false;#description=null;#signatureData=null;#signatureUUID=null;static _type=\"signature\";static _editorType=AnnotationEditorType.SIGNATURE;static _defaultDrawingOptions=null;constructor(params){super({...params,mustBeCommitted:true,name:\"signatureEditor\"});this._willKeepAspectRatio=true;this.#signatureData=params.signatureData||null;this.#description=null;this.defaultL10nId=\"pdfjs-editor-signature-editor1\"}static initialize(l10n,uiManager){AnnotationEditor.initialize(l10n,uiManager);this._defaultDrawingOptions=new SignatureOptions;this._defaultDrawnSignatureOptions=new DrawnSignatureOptions(uiManager.viewParameters)}static getDefaultDrawingOptions(options){const clone=this._defaultDrawingOptions.clone();clone.updateProperties(options);return clone}static get supportMultipleDrawings(){return false}static get typesMap(){return shadow(this,\"typesMap\",new Map)}static get isDrawer(){return false}get telemetryFinalData(){return{type:\"signature\",hasDescription:!!this.#description}}static computeTelemetryFinalData(data){const hasDescriptionStats=data.get(\"hasDescription\");return{hasAltText:hasDescriptionStats.get(true)??0,hasNoAltText:hasDescriptionStats.get(false)??0}}get isResizable(){return true}onScaleChanging(){if(this._drawId===null){return}super.onScaleChanging()}render(){if(this.div){return this.div}let baseX,baseY;const{_isCopy:_isCopy}=this;if(_isCopy){this._isCopy=false;baseX=this.x;baseY=this.y}super.render();if(this._drawId===null){if(this.#signatureData){const{lines:lines,mustSmooth:mustSmooth,areContours:areContours,description:description,uuid:uuid,heightInPage:heightInPage}=this.#signatureData;const{rawDims:{pageWidth:pageWidth,pageHeight:pageHeight},rotation:rotation}=this.parent.viewport;const outline=SignatureExtractor.processDrawnLines({lines:lines,pageWidth:pageWidth,pageHeight:pageHeight,rotation:rotation,innerMargin:SignatureEditor._INNER_MARGIN,mustSmooth:mustSmooth,areContours:areContours});this.addSignature(outline,heightInPage,description,uuid)}else{this.div.setAttribute(\"data-l10n-args\",JSON.stringify({description:\"\"}));this.div.hidden=true;this._uiManager.getSignature(this)}}if(_isCopy){this._isCopy=true;this._moveAfterPaste(baseX,baseY)}return this.div}setUuid(uuid){this.#signatureUUID=uuid;this.addEditToolbar()}getUuid(){return this.#signatureUUID}get description(){return this.#description}set description(description){this.#description=description;super.addEditToolbar().then((toolbar=>{toolbar?.updateEditSignatureButton(description)}))}getSignaturePreview(){const{newCurves:newCurves,areContours:areContours,thickness:thickness,width:width,height:height}=this.#signatureData;const maxDim=Math.max(width,height);const outlineData=SignatureExtractor.processDrawnLines({lines:{curves:newCurves.map((points=>({points:points}))),thickness:thickness,width:width,height:height},pageWidth:maxDim,pageHeight:maxDim,rotation:0,innerMargin:0,mustSmooth:false,areContours:areContours});return{areContours:areContours,outline:outlineData.outline}}async addEditToolbar(){const toolbar=await super.addEditToolbar();if(!toolbar){return null}if(this._uiManager.signatureManager&&this.#description!==null){await toolbar.addEditSignatureButton(this._uiManager.signatureManager,this.#signatureUUID,this.#description);toolbar.show()}return toolbar}addSignature(data,heightInPage,description,uuid){const{x:savedX,y:savedY}=this;const{outline:outline}=this.#signatureData=data;this.#isExtracted=outline instanceof ContourDrawOutline;this.#description=description;this.div.setAttribute(\"data-l10n-args\",JSON.stringify({description:description}));let drawingOptions;if(this.#isExtracted){drawingOptions=SignatureEditor.getDefaultDrawingOptions()}else{drawingOptions=SignatureEditor._defaultDrawnSignatureOptions.clone();drawingOptions.updateProperties({\"stroke-width\":outline.thickness})}this._addOutlines({drawOutlines:outline,drawingOptions:drawingOptions});const[parentWidth,parentHeight]=this.parentDimensions;const[,pageHeight]=this.pageDimensions;let newHeight=heightInPage/pageHeight;newHeight=newHeight>=1?.5:newHeight;this.width*=newHeight/this.height;if(this.width>=1){newHeight*=.9/this.width;this.width=.9}this.height=newHeight;this.setDims(parentWidth*this.width,parentHeight*this.height);this.x=savedX;this.y=savedY;this.center();this._onResized();this.onScaleChanging();this.rotate();this._uiManager.addToAnnotationStorage(this);this.setUuid(uuid);this._reportTelemetry({action:\"pdfjs.signature.inserted\",data:{hasBeenSaved:!!uuid,hasDescription:!!description}});this.div.hidden=false}getFromImage(bitmap){const{rawDims:{pageWidth:pageWidth,pageHeight:pageHeight},rotation:rotation}=this.parent.viewport;return SignatureExtractor.process(bitmap,pageWidth,pageHeight,rotation,SignatureEditor._INNER_MARGIN)}getFromText(text,fontInfo){const{rawDims:{pageWidth:pageWidth,pageHeight:pageHeight},rotation:rotation}=this.parent.viewport;return SignatureExtractor.extractContoursFromText(text,fontInfo,pageWidth,pageHeight,rotation,SignatureEditor._INNER_MARGIN)}getDrawnSignature(curves){const{rawDims:{pageWidth:pageWidth,pageHeight:pageHeight},rotation:rotation}=this.parent.viewport;return SignatureExtractor.processDrawnLines({lines:curves,pageWidth:pageWidth,pageHeight:pageHeight,rotation:rotation,innerMargin:SignatureEditor._INNER_MARGIN,mustSmooth:false,areContours:false})}createDrawingOptions({areContours:areContours,thickness:thickness}){if(areContours){this._drawingOptions=SignatureEditor.getDefaultDrawingOptions()}else{this._drawingOptions=SignatureEditor._defaultDrawnSignatureOptions.clone();this._drawingOptions.updateProperties({\"stroke-width\":thickness})}}serialize(isForCopying=false){if(this.isEmpty()){return null}const{lines:lines,points:points,rect:rect}=this.serializeDraw(isForCopying);const{_drawingOptions:{\"stroke-width\":thickness}}=this;const serialized={annotationType:AnnotationEditorType.SIGNATURE,isSignature:true,areContours:this.#isExtracted,color:[0,0,0],thickness:this.#isExtracted?0:thickness,pageIndex:this.pageIndex,rect:rect,rotation:this.rotation,structTreeParentId:this._structTreeParentId};if(isForCopying){serialized.paths={lines:lines,points:points};serialized.uuid=this.#signatureUUID;serialized.isCopy=true}else{serialized.lines=lines}if(this.#description){serialized.accessibilityData={type:\"Figure\",alt:this.#description}}return serialized}static deserializeDraw(pageX,pageY,pageWidth,pageHeight,innerMargin,data){if(data.areContours){return ContourDrawOutline.deserialize(pageX,pageY,pageWidth,pageHeight,innerMargin,data)}return InkDrawOutline.deserialize(pageX,pageY,pageWidth,pageHeight,innerMargin,data)}static async deserialize(data,parent,uiManager){const editor=await super.deserialize(data,parent,uiManager);editor.#isExtracted=data.areContours;editor.#description=data.accessibilityData?.alt||\"\";editor.#signatureUUID=data.uuid;return editor}}class StampEditor extends AnnotationEditor{#bitmap=null;#bitmapId=null;#bitmapPromise=null;#bitmapUrl=null;#bitmapFile=null;#bitmapFileName=\"\";#canvas=null;#missingCanvas=false;#resizeTimeoutId=null;#isSvg=false;#hasBeenAddedInUndoStack=false;static _type=\"stamp\";static _editorType=AnnotationEditorType.STAMP;constructor(params){super({...params,name:\"stampEditor\"});this.#bitmapUrl=params.bitmapUrl;this.#bitmapFile=params.bitmapFile;this.defaultL10nId=\"pdfjs-editor-stamp-editor\"}static initialize(l10n,uiManager){AnnotationEditor.initialize(l10n,uiManager)}static isHandlingMimeForPasting(mime){return SupportedImageMimeTypes.includes(mime)}static paste(item,parent){parent.pasteEditor(AnnotationEditorType.STAMP,{bitmapFile:item.getAsFile()})}altTextFinish(){if(this._uiManager.useNewAltTextFlow){this.div.hidden=false}super.altTextFinish()}get telemetryFinalData(){return{type:\"stamp\",hasAltText:!!this.altTextData?.altText}}static computeTelemetryFinalData(data){const hasAltTextStats=data.get(\"hasAltText\");return{hasAltText:hasAltTextStats.get(true)??0,hasNoAltText:hasAltTextStats.get(false)??0}}#getBitmapFetched(data,fromId=false){if(!data){this.remove();return}this.#bitmap=data.bitmap;if(!fromId){this.#bitmapId=data.id;this.#isSvg=data.isSvg}if(data.file){this.#bitmapFileName=data.file.name}this.#createCanvas()}#getBitmapDone(){this.#bitmapPromise=null;this._uiManager.enableWaiting(false);if(!this.#canvas){return}if(this._uiManager.useNewAltTextWhenAddingImage&&this._uiManager.useNewAltTextFlow&&this.#bitmap){this._editToolbar.hide();this._uiManager.editAltText(this,true);return}if(!this._uiManager.useNewAltTextWhenAddingImage&&this._uiManager.useNewAltTextFlow&&this.#bitmap){this._reportTelemetry({action:\"pdfjs.image.image_added\",data:{alt_text_modal:false,alt_text_type:\"empty\"}});try{this.mlGuessAltText()}catch{}}this.div.focus()}async mlGuessAltText(imageData=null,updateAltTextData=true){if(this.hasAltTextData()){return null}const{mlManager:mlManager}=this._uiManager;if(!mlManager){throw new Error(\"No ML.\")}if(!await mlManager.isEnabledFor(\"altText\")){throw new Error(\"ML isn't enabled for alt text.\")}const{data:data,width:width,height:height}=imageData||this.copyCanvas(null,null,true).imageData;const response=await mlManager.guess({name:\"altText\",request:{data:data,width:width,height:height,channels:data.length/(width*height)}});if(!response){throw new Error(\"No response from the AI service.\")}if(response.error){throw new Error(\"Error from the AI service.\")}if(response.cancel){return null}if(!response.output){throw new Error(\"No valid response from the AI service.\")}const altText=response.output;await this.setGuessedAltText(altText);if(updateAltTextData&&!this.hasAltTextData()){this.altTextData={alt:altText,decorative:false}}return altText}#getBitmap(){if(this.#bitmapId){this._uiManager.enableWaiting(true);this._uiManager.imageManager.getFromId(this.#bitmapId).then((data=>this.#getBitmapFetched(data,true))).finally((()=>this.#getBitmapDone()));return}if(this.#bitmapUrl){const url=this.#bitmapUrl;this.#bitmapUrl=null;this._uiManager.enableWaiting(true);this.#bitmapPromise=this._uiManager.imageManager.getFromUrl(url).then((data=>this.#getBitmapFetched(data))).finally((()=>this.#getBitmapDone()));return}if(this.#bitmapFile){const file=this.#bitmapFile;this.#bitmapFile=null;this._uiManager.enableWaiting(true);this.#bitmapPromise=this._uiManager.imageManager.getFromFile(file).then((data=>this.#getBitmapFetched(data))).finally((()=>this.#getBitmapDone()));return}const input=document.createElement(\"input\");input.type=\"file\";input.accept=SupportedImageMimeTypes.join(\",\");const signal=this._uiManager._signal;this.#bitmapPromise=new Promise((resolve=>{input.addEventListener(\"change\",(async()=>{if(!input.files||input.files.length===0){this.remove()}else{this._uiManager.enableWaiting(true);const data=await this._uiManager.imageManager.getFromFile(input.files[0]);this._reportTelemetry({action:\"pdfjs.image.image_selected\",data:{alt_text_modal:this._uiManager.useNewAltTextFlow}});this.#getBitmapFetched(data)}resolve()}),{signal:signal});input.addEventListener(\"cancel\",(()=>{this.remove();resolve()}),{signal:signal})})).finally((()=>this.#getBitmapDone()));input.click()}remove(){if(this.#bitmapId){this.#bitmap=null;this._uiManager.imageManager.deleteId(this.#bitmapId);this.#canvas?.remove();this.#canvas=null;if(this.#resizeTimeoutId){clearTimeout(this.#resizeTimeoutId);this.#resizeTimeoutId=null}}super.remove()}rebuild(){if(!this.parent){if(this.#bitmapId){this.#getBitmap()}return}super.rebuild();if(this.div===null){return}if(this.#bitmapId&&this.#canvas===null){this.#getBitmap()}if(!this.isAttachedToDOM){this.parent.add(this)}}onceAdded(focus){this._isDraggable=true;if(focus){this.div.focus()}}isEmpty(){return!(this.#bitmapPromise||this.#bitmap||this.#bitmapUrl||this.#bitmapFile||this.#bitmapId||this.#missingCanvas)}get isResizable(){return true}render(){if(this.div){return this.div}let baseX,baseY;if(this._isCopy){baseX=this.x;baseY=this.y}super.render();this.div.hidden=true;this.addAltTextButton();if(!this.#missingCanvas){if(this.#bitmap){this.#createCanvas()}else{this.#getBitmap()}}if(this._isCopy){this._moveAfterPaste(baseX,baseY)}this._uiManager.addShouldRescale(this);return this.div}setCanvas(annotationElementId,canvas){const{id:bitmapId,bitmap:bitmap}=this._uiManager.imageManager.getFromCanvas(annotationElementId,canvas);canvas.remove();if(bitmapId&&this._uiManager.imageManager.isValidId(bitmapId)){this.#bitmapId=bitmapId;if(bitmap){this.#bitmap=bitmap}this.#missingCanvas=false;this.#createCanvas()}}_onResized(){this.onScaleChanging()}onScaleChanging(){if(!this.parent){return}if(this.#resizeTimeoutId!==null){clearTimeout(this.#resizeTimeoutId)}const TIME_TO_WAIT=200;this.#resizeTimeoutId=setTimeout((()=>{this.#resizeTimeoutId=null;this.#drawBitmap()}),TIME_TO_WAIT)}#createCanvas(){const{div:div}=this;let{width:width,height:height}=this.#bitmap;const[pageWidth,pageHeight]=this.pageDimensions;const MAX_RATIO=.75;if(this.width){width=this.width*pageWidth;height=this.height*pageHeight}else if(width>MAX_RATIO*pageWidth||height>MAX_RATIO*pageHeight){const factor=Math.min(MAX_RATIO*pageWidth/width,MAX_RATIO*pageHeight/height);width*=factor;height*=factor}const[parentWidth,parentHeight]=this.parentDimensions;this.setDims(width*parentWidth/pageWidth,height*parentHeight/pageHeight);this._uiManager.enableWaiting(false);const canvas=this.#canvas=document.createElement(\"canvas\");canvas.setAttribute(\"role\",\"img\");this.addContainer(canvas);this.width=width/pageWidth;this.height=height/pageHeight;if(this._initialOptions?.isCentered){this.center()}else{this.fixAndSetPosition()}this._initialOptions=null;if(!this._uiManager.useNewAltTextWhenAddingImage||!this._uiManager.useNewAltTextFlow||this.annotationElementId){div.hidden=false}this.#drawBitmap();if(!this.#hasBeenAddedInUndoStack){this.parent.addUndoableEditor(this);this.#hasBeenAddedInUndoStack=true}this._reportTelemetry({action:\"inserted_image\"});if(this.#bitmapFileName){this.div.setAttribute(\"aria-description\",this.#bitmapFileName)}}copyCanvas(maxDataDimension,maxPreviewDimension,createImageData=false){if(!maxDataDimension){maxDataDimension=224}const{width:bitmapWidth,height:bitmapHeight}=this.#bitmap;const outputScale=new OutputScale;let bitmap=this.#bitmap;let width=bitmapWidth,height=bitmapHeight;let canvas=null;if(maxPreviewDimension){if(bitmapWidth>maxPreviewDimension||bitmapHeight>maxPreviewDimension){const ratio=Math.min(maxPreviewDimension/bitmapWidth,maxPreviewDimension/bitmapHeight);width=Math.floor(bitmapWidth*ratio);height=Math.floor(bitmapHeight*ratio)}canvas=document.createElement(\"canvas\");const scaledWidth=canvas.width=Math.ceil(width*outputScale.sx);const scaledHeight=canvas.height=Math.ceil(height*outputScale.sy);if(!this.#isSvg){bitmap=this.#scaleBitmap(scaledWidth,scaledHeight)}const ctx=canvas.getContext(\"2d\");ctx.filter=this._uiManager.hcmFilter;let white=\"white\",black=\"#cfcfd8\";if(this._uiManager.hcmFilter!==\"none\"){black=\"black\"}else if(window.matchMedia?.(\"(prefers-color-scheme: dark)\").matches){white=\"#8f8f9d\";black=\"#42414d\"}const boxDim=15;const boxDimWidth=boxDim*outputScale.sx;const boxDimHeight=boxDim*outputScale.sy;const pattern=new OffscreenCanvas(boxDimWidth*2,boxDimHeight*2);const patternCtx=pattern.getContext(\"2d\");patternCtx.fillStyle=white;patternCtx.fillRect(0,0,boxDimWidth*2,boxDimHeight*2);patternCtx.fillStyle=black;patternCtx.fillRect(0,0,boxDimWidth,boxDimHeight);patternCtx.fillRect(boxDimWidth,boxDimHeight,boxDimWidth,boxDimHeight);ctx.fillStyle=ctx.createPattern(pattern,\"repeat\");ctx.fillRect(0,0,scaledWidth,scaledHeight);ctx.drawImage(bitmap,0,0,bitmap.width,bitmap.height,0,0,scaledWidth,scaledHeight)}let imageData=null;if(createImageData){let dataWidth,dataHeight;if(outputScale.symmetric&&bitmap.width<maxDataDimension&&bitmap.height<maxDataDimension){dataWidth=bitmap.width;dataHeight=bitmap.height}else{bitmap=this.#bitmap;if(bitmapWidth>maxDataDimension||bitmapHeight>maxDataDimension){const ratio=Math.min(maxDataDimension/bitmapWidth,maxDataDimension/bitmapHeight);dataWidth=Math.floor(bitmapWidth*ratio);dataHeight=Math.floor(bitmapHeight*ratio);if(!this.#isSvg){bitmap=this.#scaleBitmap(dataWidth,dataHeight)}}}const offscreen=new OffscreenCanvas(dataWidth,dataHeight);const offscreenCtx=offscreen.getContext(\"2d\",{willReadFrequently:true});offscreenCtx.drawImage(bitmap,0,0,bitmap.width,bitmap.height,0,0,dataWidth,dataHeight);imageData={width:dataWidth,height:dataHeight,data:offscreenCtx.getImageData(0,0,dataWidth,dataHeight).data}}return{canvas:canvas,width:width,height:height,imageData:imageData}}#scaleBitmap(width,height){const{width:bitmapWidth,height:bitmapHeight}=this.#bitmap;let newWidth=bitmapWidth;let newHeight=bitmapHeight;let bitmap=this.#bitmap;while(newWidth>2*width||newHeight>2*height){const prevWidth=newWidth;const prevHeight=newHeight;if(newWidth>2*width){newWidth=newWidth>=16384?Math.floor(newWidth/2)-1:Math.ceil(newWidth/2)}if(newHeight>2*height){newHeight=newHeight>=16384?Math.floor(newHeight/2)-1:Math.ceil(newHeight/2)}const offscreen=new OffscreenCanvas(newWidth,newHeight);const ctx=offscreen.getContext(\"2d\");ctx.drawImage(bitmap,0,0,prevWidth,prevHeight,0,0,newWidth,newHeight);bitmap=offscreen.transferToImageBitmap()}return bitmap}#drawBitmap(){const[parentWidth,parentHeight]=this.parentDimensions;const{width:width,height:height}=this;const outputScale=new OutputScale;const scaledWidth=Math.ceil(width*parentWidth*outputScale.sx);const scaledHeight=Math.ceil(height*parentHeight*outputScale.sy);const canvas=this.#canvas;if(!canvas||canvas.width===scaledWidth&&canvas.height===scaledHeight){return}canvas.width=scaledWidth;canvas.height=scaledHeight;const bitmap=this.#isSvg?this.#bitmap:this.#scaleBitmap(scaledWidth,scaledHeight);const ctx=canvas.getContext(\"2d\");ctx.filter=this._uiManager.hcmFilter;ctx.drawImage(bitmap,0,0,bitmap.width,bitmap.height,0,0,scaledWidth,scaledHeight)}#serializeBitmap(toUrl){if(toUrl){if(this.#isSvg){const url=this._uiManager.imageManager.getSvgUrl(this.#bitmapId);if(url){return url}}const canvas=document.createElement(\"canvas\");({width:canvas.width,height:canvas.height}=this.#bitmap);const ctx=canvas.getContext(\"2d\");ctx.drawImage(this.#bitmap,0,0);return canvas.toDataURL()}if(this.#isSvg){const[pageWidth,pageHeight]=this.pageDimensions;const width=Math.round(this.width*pageWidth*PixelsPerInch.PDF_TO_CSS_UNITS);const height=Math.round(this.height*pageHeight*PixelsPerInch.PDF_TO_CSS_UNITS);const offscreen=new OffscreenCanvas(width,height);const ctx=offscreen.getContext(\"2d\");ctx.drawImage(this.#bitmap,0,0,this.#bitmap.width,this.#bitmap.height,0,0,width,height);return offscreen.transferToImageBitmap()}return structuredClone(this.#bitmap)}static async deserialize(data,parent,uiManager){let initialData=null;let missingCanvas=false;if(data instanceof StampAnnotationElement){const{data:{rect:rect,rotation:rotation,id:id,structParent:structParent,popupRef:popupRef},container:container,parent:{page:{pageNumber:pageNumber}},canvas:canvas}=data;let bitmapId,bitmap;if(canvas){delete data.canvas;({id:bitmapId,bitmap:bitmap}=uiManager.imageManager.getFromCanvas(container.id,canvas));canvas.remove()}else{missingCanvas=true;data._hasNoCanvas=true}const altText=(await parent._structTree.getAriaAttributes(`${AnnotationPrefix}${id}`))?.get(\"aria-label\")||\"\";initialData=data={annotationType:AnnotationEditorType.STAMP,bitmapId:bitmapId,bitmap:bitmap,pageIndex:pageNumber-1,rect:rect.slice(0),rotation:rotation,id:id,deleted:false,accessibilityData:{decorative:false,altText:altText},isSvg:false,structParent:structParent,popupRef:popupRef}}const editor=await super.deserialize(data,parent,uiManager);const{rect:rect,bitmap:bitmap,bitmapUrl:bitmapUrl,bitmapId:bitmapId,isSvg:isSvg,accessibilityData:accessibilityData}=data;if(missingCanvas){uiManager.addMissingCanvas(data.id,editor);editor.#missingCanvas=true}else if(bitmapId&&uiManager.imageManager.isValidId(bitmapId)){editor.#bitmapId=bitmapId;if(bitmap){editor.#bitmap=bitmap}}else{editor.#bitmapUrl=bitmapUrl}editor.#isSvg=isSvg;const[parentWidth,parentHeight]=editor.pageDimensions;editor.width=(rect[2]-rect[0])/parentWidth;editor.height=(rect[3]-rect[1])/parentHeight;editor.annotationElementId=data.id||null;if(accessibilityData){editor.altTextData=accessibilityData}editor._initialData=initialData;editor.#hasBeenAddedInUndoStack=!!initialData;return editor}serialize(isForCopying=false,context=null){if(this.isEmpty()){return null}if(this.deleted){return this.serializeDeleted()}const serialized={annotationType:AnnotationEditorType.STAMP,bitmapId:this.#bitmapId,pageIndex:this.pageIndex,rect:this.getRect(0,0),rotation:this.rotation,isSvg:this.#isSvg,structTreeParentId:this._structTreeParentId};if(isForCopying){serialized.bitmapUrl=this.#serializeBitmap(true);serialized.accessibilityData=this.serializeAltText(true);serialized.isCopy=true;return serialized}const{decorative:decorative,altText:altText}=this.serializeAltText(false);if(!decorative&&altText){serialized.accessibilityData={type:\"Figure\",alt:altText}}if(this.annotationElementId){const changes=this.#hasElementChanged(serialized);if(changes.isSame){return null}if(changes.isSameAltText){delete serialized.accessibilityData}else{serialized.accessibilityData.structParent=this._initialData.structParent??-1}}serialized.id=this.annotationElementId;if(context===null){return serialized}context.stamps||=new Map;const area=this.#isSvg?(serialized.rect[2]-serialized.rect[0])*(serialized.rect[3]-serialized.rect[1]):null;if(!context.stamps.has(this.#bitmapId)){context.stamps.set(this.#bitmapId,{area:area,serialized:serialized});serialized.bitmap=this.#serializeBitmap(false)}else if(this.#isSvg){const prevData=context.stamps.get(this.#bitmapId);if(area>prevData.area){prevData.area=area;prevData.serialized.bitmap.close();prevData.serialized.bitmap=this.#serializeBitmap(false)}}return serialized}#hasElementChanged(serialized){const{pageIndex:pageIndex,accessibilityData:{altText:altText}}=this._initialData;const isSamePageIndex=serialized.pageIndex===pageIndex;const isSameAltText=(serialized.accessibilityData?.alt||\"\")===altText;return{isSame:!this._hasBeenMoved&&!this._hasBeenResized&&isSamePageIndex&&isSameAltText,isSameAltText:isSameAltText}}renderAnnotationElement(annotation){annotation.updateEdited({rect:this.getRect(0,0)});return null}}class AnnotationEditorLayer{#accessibilityManager;#allowClick=false;#annotationLayer=null;#clickAC=null;#editorFocusTimeoutId=null;#editors=new Map;#hadPointerDown=false;#isDisabling=false;#isEnabling=false;#drawingAC=null;#focusedElement=null;#textLayer=null;#textSelectionAC=null;#uiManager;static _initialized=false;static#editorTypes=new Map([FreeTextEditor,InkEditor,StampEditor,HighlightEditor,SignatureEditor].map((type=>[type._editorType,type])));constructor({uiManager:uiManager,pageIndex:pageIndex,div:div,structTreeLayer:structTreeLayer,accessibilityManager:accessibilityManager,annotationLayer:annotationLayer,drawLayer:drawLayer,textLayer:textLayer,viewport:viewport,l10n:l10n}){const editorTypes=[...AnnotationEditorLayer.#editorTypes.values()];if(!AnnotationEditorLayer._initialized){AnnotationEditorLayer._initialized=true;for(const editorType of editorTypes){editorType.initialize(l10n,uiManager)}}uiManager.registerEditorTypes(editorTypes);this.#uiManager=uiManager;this.pageIndex=pageIndex;this.div=div;this.#accessibilityManager=accessibilityManager;this.#annotationLayer=annotationLayer;this.viewport=viewport;this.#textLayer=textLayer;this.drawLayer=drawLayer;this._structTree=structTreeLayer;this.#uiManager.addLayer(this)}get isEmpty(){return this.#editors.size===0}get isInvisible(){return this.isEmpty&&this.#uiManager.getMode()===AnnotationEditorType.NONE}updateToolbar(mode){this.#uiManager.updateToolbar(mode)}updateMode(mode=this.#uiManager.getMode()){this.#cleanup();switch(mode){case AnnotationEditorType.NONE:this.disableTextSelection();this.togglePointerEvents(false);this.toggleAnnotationLayerPointerEvents(true);this.disableClick();return;case AnnotationEditorType.INK:this.disableTextSelection();this.togglePointerEvents(true);this.enableClick();break;case AnnotationEditorType.HIGHLIGHT:this.enableTextSelection();this.togglePointerEvents(false);this.disableClick();break;default:this.disableTextSelection();this.togglePointerEvents(true);this.enableClick()}this.toggleAnnotationLayerPointerEvents(false);const{classList:classList}=this.div;for(const editorType of AnnotationEditorLayer.#editorTypes.values()){classList.toggle(`${editorType._type}Editing`,mode===editorType._editorType)}this.div.hidden=false}hasTextLayer(textLayer){return textLayer===this.#textLayer?.div}setEditingState(isEditing){this.#uiManager.setEditingState(isEditing)}addCommands(params){this.#uiManager.addCommands(params)}cleanUndoStack(type){this.#uiManager.cleanUndoStack(type)}toggleDrawing(enabled=false){this.div.classList.toggle(\"drawing\",!enabled)}togglePointerEvents(enabled=false){this.div.classList.toggle(\"disabled\",!enabled)}toggleAnnotationLayerPointerEvents(enabled=false){this.#annotationLayer?.div.classList.toggle(\"disabled\",!enabled)}async enable(){this.#isEnabling=true;this.div.tabIndex=0;this.togglePointerEvents(true);const annotationElementIds=new Set;for(const editor of this.#editors.values()){editor.enableEditing();editor.show(true);if(editor.annotationElementId){this.#uiManager.removeChangedExistingAnnotation(editor);annotationElementIds.add(editor.annotationElementId)}}if(!this.#annotationLayer){this.#isEnabling=false;return}const editables=this.#annotationLayer.getEditableAnnotations();for(const editable of editables){editable.hide();if(this.#uiManager.isDeletedAnnotationElement(editable.data.id)){continue}if(annotationElementIds.has(editable.data.id)){continue}const editor=await this.deserialize(editable);if(!editor){continue}this.addOrRebuild(editor);editor.enableEditing()}this.#isEnabling=false}disable(){this.#isDisabling=true;this.div.tabIndex=-1;this.togglePointerEvents(false);const changedAnnotations=new Map;const resetAnnotations=new Map;for(const editor of this.#editors.values()){editor.disableEditing();if(!editor.annotationElementId){continue}if(editor.serialize()!==null){changedAnnotations.set(editor.annotationElementId,editor);continue}else{resetAnnotations.set(editor.annotationElementId,editor)}this.getEditableAnnotation(editor.annotationElementId)?.show();editor.remove()}if(this.#annotationLayer){const editables=this.#annotationLayer.getEditableAnnotations();for(const editable of editables){const{id:id}=editable.data;if(this.#uiManager.isDeletedAnnotationElement(id)){continue}let editor=resetAnnotations.get(id);if(editor){editor.resetAnnotationElement(editable);editor.show(false);editable.show();continue}editor=changedAnnotations.get(id);if(editor){this.#uiManager.addChangedExistingAnnotation(editor);if(editor.renderAnnotationElement(editable)){editor.show(false)}}editable.show()}}this.#cleanup();if(this.isEmpty){this.div.hidden=true}const{classList:classList}=this.div;for(const editorType of AnnotationEditorLayer.#editorTypes.values()){classList.remove(`${editorType._type}Editing`)}this.disableTextSelection();this.toggleAnnotationLayerPointerEvents(true);this.#isDisabling=false}getEditableAnnotation(id){return this.#annotationLayer?.getEditableAnnotation(id)||null}setActiveEditor(editor){const currentActive=this.#uiManager.getActive();if(currentActive===editor){return}this.#uiManager.setActiveEditor(editor)}enableTextSelection(){this.div.tabIndex=-1;if(this.#textLayer?.div&&!this.#textSelectionAC){this.#textSelectionAC=new AbortController;const signal=this.#uiManager.combinedSignal(this.#textSelectionAC);this.#textLayer.div.addEventListener(\"pointerdown\",this.#textLayerPointerDown.bind(this),{signal:signal});this.#textLayer.div.classList.add(\"highlighting\")}}disableTextSelection(){this.div.tabIndex=0;if(this.#textLayer?.div&&this.#textSelectionAC){this.#textSelectionAC.abort();this.#textSelectionAC=null;this.#textLayer.div.classList.remove(\"highlighting\")}}#textLayerPointerDown(event){this.#uiManager.unselectAll();const{target:target}=event;if(target===this.#textLayer.div||(target.getAttribute(\"role\")===\"img\"||target.classList.contains(\"endOfContent\"))&&this.#textLayer.div.contains(target)){const{isMac:isMac}=util_FeatureTest.platform;if(event.button!==0||event.ctrlKey&&isMac){return}this.#uiManager.showAllEditors(\"highlight\",true,true);this.#textLayer.div.classList.add(\"free\");this.toggleDrawing();HighlightEditor.startHighlighting(this,this.#uiManager.direction===\"ltr\",{target:this.#textLayer.div,x:event.x,y:event.y});this.#textLayer.div.addEventListener(\"pointerup\",(()=>{this.#textLayer.div.classList.remove(\"free\");this.toggleDrawing(true)}),{once:true,signal:this.#uiManager._signal});event.preventDefault()}}enableClick(){if(this.#clickAC){return}this.#clickAC=new AbortController;const signal=this.#uiManager.combinedSignal(this.#clickAC);this.div.addEventListener(\"pointerdown\",this.pointerdown.bind(this),{signal:signal});const pointerup=this.pointerup.bind(this);this.div.addEventListener(\"pointerup\",pointerup,{signal:signal});this.div.addEventListener(\"pointercancel\",pointerup,{signal:signal})}disableClick(){this.#clickAC?.abort();this.#clickAC=null}attach(editor){this.#editors.set(editor.id,editor);const{annotationElementId:annotationElementId}=editor;if(annotationElementId&&this.#uiManager.isDeletedAnnotationElement(annotationElementId)){this.#uiManager.removeDeletedAnnotationElement(editor)}}detach(editor){this.#editors.delete(editor.id);this.#accessibilityManager?.removePointerInTextLayer(editor.contentDiv);if(!this.#isDisabling&&editor.annotationElementId){this.#uiManager.addDeletedAnnotationElement(editor)}}remove(editor){this.detach(editor);this.#uiManager.removeEditor(editor);editor.div.remove();editor.isAttachedToDOM=false}changeParent(editor){if(editor.parent===this){return}if(editor.parent&&editor.annotationElementId){this.#uiManager.addDeletedAnnotationElement(editor.annotationElementId);AnnotationEditor.deleteAnnotationElement(editor);editor.annotationElementId=null}this.attach(editor);editor.parent?.detach(editor);editor.setParent(this);if(editor.div&&editor.isAttachedToDOM){editor.div.remove();this.div.append(editor.div)}}add(editor){if(editor.parent===this&&editor.isAttachedToDOM){return}this.changeParent(editor);this.#uiManager.addEditor(editor);this.attach(editor);if(!editor.isAttachedToDOM){const div=editor.render();this.div.append(div);editor.isAttachedToDOM=true}editor.fixAndSetPosition();editor.onceAdded(!this.#isEnabling);this.#uiManager.addToAnnotationStorage(editor);editor._reportTelemetry(editor.telemetryInitialData)}moveEditorInDOM(editor){if(!editor.isAttachedToDOM){return}const{activeElement:activeElement}=document;if(editor.div.contains(activeElement)&&!this.#editorFocusTimeoutId){editor._focusEventsAllowed=false;this.#editorFocusTimeoutId=setTimeout((()=>{this.#editorFocusTimeoutId=null;if(!editor.div.contains(document.activeElement)){editor.div.addEventListener(\"focusin\",(()=>{editor._focusEventsAllowed=true}),{once:true,signal:this.#uiManager._signal});activeElement.focus()}else{editor._focusEventsAllowed=true}}),0)}editor._structTreeParentId=this.#accessibilityManager?.moveElementInDOM(this.div,editor.div,editor.contentDiv,true)}addOrRebuild(editor){if(editor.needsToBeRebuilt()){editor.parent||=this;editor.rebuild();editor.show()}else{this.add(editor)}}addUndoableEditor(editor){const cmd=()=>editor._uiManager.rebuild(editor);const undo=()=>{editor.remove()};this.addCommands({cmd:cmd,undo:undo,mustExec:false})}getNextId(){return this.#uiManager.getId()}get#currentEditorType(){return AnnotationEditorLayer.#editorTypes.get(this.#uiManager.getMode())}combinedSignal(ac){return this.#uiManager.combinedSignal(ac)}#createNewEditor(params){const editorType=this.#currentEditorType;return editorType?new editorType.prototype.constructor(params):null}canCreateNewEmptyEditor(){return this.#currentEditorType?.canCreateNewEmptyEditor()}async pasteEditor(mode,params){this.#uiManager.updateToolbar(mode);await this.#uiManager.updateMode(mode);const{offsetX:offsetX,offsetY:offsetY}=this.#getCenterPoint();const id=this.getNextId();const editor=this.#createNewEditor({parent:this,id:id,x:offsetX,y:offsetY,uiManager:this.#uiManager,isCentered:true,...params});if(editor){this.add(editor)}}async deserialize(data){return await(AnnotationEditorLayer.#editorTypes.get(data.annotationType??data.annotationEditorType)?.deserialize(data,this,this.#uiManager))||null}createAndAddNewEditor(event,isCentered,data={}){const id=this.getNextId();const editor=this.#createNewEditor({parent:this,id:id,x:event.offsetX,y:event.offsetY,uiManager:this.#uiManager,isCentered:isCentered,...data});if(editor){this.add(editor)}return editor}#getCenterPoint(){const{x:x,y:y,width:width,height:height}=this.div.getBoundingClientRect();const tlX=Math.max(0,x);const tlY=Math.max(0,y);const brX=Math.min(window.innerWidth,x+width);const brY=Math.min(window.innerHeight,y+height);const centerX=(tlX+brX)/2-x;const centerY=(tlY+brY)/2-y;const[offsetX,offsetY]=this.viewport.rotation%180===0?[centerX,centerY]:[centerY,centerX];return{offsetX:offsetX,offsetY:offsetY}}addNewEditor(data={}){this.createAndAddNewEditor(this.#getCenterPoint(),true,data)}setSelected(editor){this.#uiManager.setSelected(editor)}toggleSelected(editor){this.#uiManager.toggleSelected(editor)}unselect(editor){this.#uiManager.unselect(editor)}pointerup(event){const{isMac:isMac}=util_FeatureTest.platform;if(event.button!==0||event.ctrlKey&&isMac){return}if(event.target!==this.div){return}if(!this.#hadPointerDown){return}this.#hadPointerDown=false;if(this.#currentEditorType?.isDrawer&&this.#currentEditorType.supportMultipleDrawings){return}if(!this.#allowClick){this.#allowClick=true;return}const currentMode=this.#uiManager.getMode();if(currentMode===AnnotationEditorType.STAMP||currentMode===AnnotationEditorType.SIGNATURE){this.#uiManager.unselectAll();return}this.createAndAddNewEditor(event,false)}pointerdown(event){if(this.#uiManager.getMode()===AnnotationEditorType.HIGHLIGHT){this.enableTextSelection()}if(this.#hadPointerDown){this.#hadPointerDown=false;return}const{isMac:isMac}=util_FeatureTest.platform;if(event.button!==0||event.ctrlKey&&isMac){return}if(event.target!==this.div){return}this.#hadPointerDown=true;if(this.#currentEditorType?.isDrawer){this.startDrawingSession(event);return}const editor=this.#uiManager.getActive();this.#allowClick=!editor||editor.isEmpty()}startDrawingSession(event){this.div.focus({preventScroll:true});if(this.#drawingAC){this.#currentEditorType.startDrawing(this,this.#uiManager,false,event);return}this.#uiManager.setCurrentDrawingSession(this);this.#drawingAC=new AbortController;const signal=this.#uiManager.combinedSignal(this.#drawingAC);this.div.addEventListener(\"blur\",(({relatedTarget:relatedTarget})=>{if(relatedTarget&&!this.div.contains(relatedTarget)){this.#focusedElement=null;this.commitOrRemove()}}),{signal:signal});this.#currentEditorType.startDrawing(this,this.#uiManager,false,event)}pause(on){if(on){const{activeElement:activeElement}=document;if(this.div.contains(activeElement)){this.#focusedElement=activeElement}return}if(this.#focusedElement){setTimeout((()=>{this.#focusedElement?.focus();this.#focusedElement=null}),0)}}endDrawingSession(isAborted=false){if(!this.#drawingAC){return null}this.#uiManager.setCurrentDrawingSession(null);this.#drawingAC.abort();this.#drawingAC=null;this.#focusedElement=null;return this.#currentEditorType.endDrawing(isAborted)}findNewParent(editor,x,y){const layer=this.#uiManager.findParent(x,y);if(layer===null||layer===this){return false}layer.changeParent(editor);return true}commitOrRemove(){if(this.#drawingAC){this.endDrawingSession();return true}return false}onScaleChanging(){if(!this.#drawingAC){return}this.#currentEditorType.onScaleChangingWhenDrawing(this)}destroy(){this.commitOrRemove();if(this.#uiManager.getActive()?.parent===this){this.#uiManager.commitOrRemove();this.#uiManager.setActiveEditor(null)}if(this.#editorFocusTimeoutId){clearTimeout(this.#editorFocusTimeoutId);this.#editorFocusTimeoutId=null}for(const editor of this.#editors.values()){this.#accessibilityManager?.removePointerInTextLayer(editor.contentDiv);editor.setParent(null);editor.isAttachedToDOM=false;editor.div.remove()}this.div=null;this.#editors.clear();this.#uiManager.removeLayer(this)}#cleanup(){for(const editor of this.#editors.values()){if(editor.isEmpty()){editor.remove()}}}render({viewport:viewport}){this.viewport=viewport;setLayerDimensions(this.div,viewport);for(const editor of this.#uiManager.getEditors(this.pageIndex)){this.add(editor);editor.rebuild()}this.updateMode()}update({viewport:viewport}){this.#uiManager.commitOrRemove();this.#cleanup();const oldRotation=this.viewport.rotation;const rotation=viewport.rotation;this.viewport=viewport;setLayerDimensions(this.div,{rotation:rotation});if(oldRotation!==rotation){for(const editor of this.#editors.values()){editor.rotate(rotation)}}}get pageDimensions(){const{pageWidth:pageWidth,pageHeight:pageHeight}=this.viewport.rawDims;return[pageWidth,pageHeight]}get scale(){return this.#uiManager.viewParameters.realScale}}class DrawLayer{#parent=null;#mapping=new Map;#toUpdate=new Map;static#id=0;constructor({pageIndex:pageIndex}){this.pageIndex=pageIndex}setParent(parent){if(!this.#parent){this.#parent=parent;return}if(this.#parent!==parent){if(this.#mapping.size>0){for(const root of this.#mapping.values()){root.remove();parent.append(root)}}this.#parent=parent}}static get _svgFactory(){return shadow(this,\"_svgFactory\",new DOMSVGFactory)}static#setBox(element,[x,y,width,height]){const{style:style}=element;style.top=`${100*y}%`;style.left=`${100*x}%`;style.width=`${100*width}%`;style.height=`${100*height}%`}#createSVG(){const svg=DrawLayer._svgFactory.create(1,1,true);this.#parent.append(svg);svg.setAttribute(\"aria-hidden\",true);return svg}#createClipPath(defs,pathId){const clipPath=DrawLayer._svgFactory.createElement(\"clipPath\");defs.append(clipPath);const clipPathId=`clip_${pathId}`;clipPath.setAttribute(\"id\",clipPathId);clipPath.setAttribute(\"clipPathUnits\",\"objectBoundingBox\");const clipPathUse=DrawLayer._svgFactory.createElement(\"use\");clipPath.append(clipPathUse);clipPathUse.setAttribute(\"href\",`#${pathId}`);clipPathUse.classList.add(\"clip\");return clipPathId}#updateProperties(element,properties){for(const[key,value]of Object.entries(properties)){if(value===null){element.removeAttribute(key)}else{element.setAttribute(key,value)}}}draw(properties,isPathUpdatable=false,hasClip=false){const id=DrawLayer.#id++;const root=this.#createSVG();const defs=DrawLayer._svgFactory.createElement(\"defs\");root.append(defs);const path=DrawLayer._svgFactory.createElement(\"path\");defs.append(path);const pathId=`path_p${this.pageIndex}_${id}`;path.setAttribute(\"id\",pathId);path.setAttribute(\"vector-effect\",\"non-scaling-stroke\");if(isPathUpdatable){this.#toUpdate.set(id,path)}const clipPathId=hasClip?this.#createClipPath(defs,pathId):null;const use=DrawLayer._svgFactory.createElement(\"use\");root.append(use);use.setAttribute(\"href\",`#${pathId}`);this.updateProperties(root,properties);this.#mapping.set(id,root);return{id:id,clipPathId:`url(#${clipPathId})`}}drawOutline(properties,mustRemoveSelfIntersections){const id=DrawLayer.#id++;const root=this.#createSVG();const defs=DrawLayer._svgFactory.createElement(\"defs\");root.append(defs);const path=DrawLayer._svgFactory.createElement(\"path\");defs.append(path);const pathId=`path_p${this.pageIndex}_${id}`;path.setAttribute(\"id\",pathId);path.setAttribute(\"vector-effect\",\"non-scaling-stroke\");let maskId;if(mustRemoveSelfIntersections){const mask=DrawLayer._svgFactory.createElement(\"mask\");defs.append(mask);maskId=`mask_p${this.pageIndex}_${id}`;mask.setAttribute(\"id\",maskId);mask.setAttribute(\"maskUnits\",\"objectBoundingBox\");const rect=DrawLayer._svgFactory.createElement(\"rect\");mask.append(rect);rect.setAttribute(\"width\",\"1\");rect.setAttribute(\"height\",\"1\");rect.setAttribute(\"fill\",\"white\");const use=DrawLayer._svgFactory.createElement(\"use\");mask.append(use);use.setAttribute(\"href\",`#${pathId}`);use.setAttribute(\"stroke\",\"none\");use.setAttribute(\"fill\",\"black\");use.setAttribute(\"fill-rule\",\"nonzero\");use.classList.add(\"mask\")}const use1=DrawLayer._svgFactory.createElement(\"use\");root.append(use1);use1.setAttribute(\"href\",`#${pathId}`);if(maskId){use1.setAttribute(\"mask\",`url(#${maskId})`)}const use2=use1.cloneNode();root.append(use2);use1.classList.add(\"mainOutline\");use2.classList.add(\"secondaryOutline\");this.updateProperties(root,properties);this.#mapping.set(id,root);return id}finalizeDraw(id,properties){this.#toUpdate.delete(id);this.updateProperties(id,properties)}updateProperties(elementOrId,properties){if(!properties){return}const{root:root,bbox:bbox,rootClass:rootClass,path:path}=properties;const element=typeof elementOrId===\"number\"?this.#mapping.get(elementOrId):elementOrId;if(!element){return}if(root){this.#updateProperties(element,root)}if(bbox){DrawLayer.#setBox(element,bbox)}if(rootClass){const{classList:classList}=element;for(const[className,value]of Object.entries(rootClass)){classList.toggle(className,value)}}if(path){const defs=element.firstChild;const pathElement=defs.firstChild;this.#updateProperties(pathElement,path)}}updateParent(id,layer){if(layer===this){return}const root=this.#mapping.get(id);if(!root){return}layer.#parent.append(root);this.#mapping.delete(id);layer.#mapping.set(id,root)}remove(id){this.#toUpdate.delete(id);if(this.#parent===null){return}this.#mapping.get(id).remove();this.#mapping.delete(id)}destroy(){this.#parent=null;for(const root of this.#mapping.values()){root.remove()}this.#mapping.clear();this.#toUpdate.clear()}}const pdfjsVersion=\"5.2.177\";const pdfjsBuild=\"293506ada\";{globalThis.pdfjsTestingUtils={HighlightOutliner:HighlightOutliner}}globalThis.pdfjsLib={AbortException:AbortException,AnnotationEditorLayer:AnnotationEditorLayer,AnnotationEditorParamsType:AnnotationEditorParamsType,AnnotationEditorType:AnnotationEditorType,AnnotationEditorUIManager:AnnotationEditorUIManager,AnnotationLayer:AnnotationLayer,AnnotationMode:AnnotationMode,AnnotationType:AnnotationType,build:build,ColorPicker:ColorPicker,createValidAbsoluteUrl:createValidAbsoluteUrl,DOMSVGFactory:DOMSVGFactory,DrawLayer:DrawLayer,FeatureTest:util_FeatureTest,fetchData:fetchData,getDocument:getDocument,getFilenameFromUrl:getFilenameFromUrl,getPdfFilenameFromUrl:getPdfFilenameFromUrl,getUuid:getUuid,getXfaPageViewport:getXfaPageViewport,GlobalWorkerOptions:GlobalWorkerOptions,ImageKind:util_ImageKind,InvalidPDFException:InvalidPDFException,isDataScheme:isDataScheme,isPdfFile:isPdfFile,isValidExplicitDest:isValidExplicitDest,MathClamp:MathClamp,noContextMenu:noContextMenu,normalizeUnicode:normalizeUnicode,OPS:OPS,OutputScale:OutputScale,PasswordResponses:PasswordResponses,PDFDataRangeTransport:PDFDataRangeTransport,PDFDateString:PDFDateString,PDFWorker:PDFWorker,PermissionFlag:PermissionFlag,PixelsPerInch:PixelsPerInch,RenderingCancelledException:RenderingCancelledException,ResponseException:ResponseException,setLayerDimensions:setLayerDimensions,shadow:shadow,SignatureExtractor:SignatureExtractor,stopEvent:stopEvent,SupportedImageMimeTypes:SupportedImageMimeTypes,TextLayer:TextLayer,TouchManager:TouchManager,updateUrlHash:updateUrlHash,Util:Util,VerbosityLevel:VerbosityLevel,version:version,XfaLayer:XfaLayer};export{AbortException,AnnotationEditorLayer,AnnotationEditorParamsType,AnnotationEditorType,AnnotationEditorUIManager,AnnotationLayer,AnnotationMode,AnnotationType,ColorPicker,DOMSVGFactory,DrawLayer,util_FeatureTest as FeatureTest,GlobalWorkerOptions,util_ImageKind as ImageKind,InvalidPDFException,MathClamp,OPS,OutputScale,PDFDataRangeTransport,PDFDateString,PDFWorker,PasswordResponses,PermissionFlag,PixelsPerInch,RenderingCancelledException,ResponseException,SignatureExtractor,SupportedImageMimeTypes,TextLayer,TouchManager,Util,VerbosityLevel,XfaLayer,build,createValidAbsoluteUrl,fetchData,getDocument,getFilenameFromUrl,getPdfFilenameFromUrl,getUuid,getXfaPageViewport,isDataScheme,isPdfFile,isValidExplicitDest,noContextMenu,normalizeUnicode,setLayerDimensions,shadow,stopEvent,updateUrlHash,version};\n/Users/luke/code/psci/chatbot-ui-2/nifi/flow_def/resource-and-folder-migration.json:1:{\"flowContents\":{\"identifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"instanceIdentifier\":\"a2f73c62-018e-1000-3910-6836dda7b722\",\"name\":\"resource-and-folder-migration\",\"comments\":\"\",\"position\":{\"x\":936.0,\"y\":248.0},\"processGroups\":[],\"remoteProcessGroups\":[],\"processors\":[{\"identifier\":\"8abd0623-8e39-3ab8-af9b-84836fea1893\",\"instanceIdentifier\":\"91b4ea16-483d-31ce-058e-caccd0e33155\",\"name\":\"LogAttribute\",\"comments\":\"\",\"position\":{\"x\":1091.2129516601562,\"y\":1264.0},\"type\":\"org.apache.nifi.processors.standard.LogAttribute\",\"bundle\":{\"group\":\"org.apache.nifi\",\"artifact\":\"nifi-standard-nar\",\"version\":\"2.0.0-M2\"},\"properties\":{\"Log prefix\":null,\"character-set\":\"UTF-8\",\"Log FlowFile Properties\":\"true\",\"Log Level\":\"error\",\"attributes-to-ignore-regex\":null,\"Attributes to Ignore\":null,\"Attributes to Log\":null,\"attributes-to-log-regex\":\".*\",\"Output Format\":\"Line per Attribute\",\"Log Payload\":\"false\"},\"propertyDescriptors\":{\"Log prefix\":{\"name\":\"Log prefix\",\"displayName\":\"Log prefix\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"character-set\":{\"name\":\"character-set\",\"displayName\":\"Character Set\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Log FlowFile Properties\":{\"name\":\"Log FlowFile Properties\",\"displayName\":\"Log FlowFile Properties\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Log Level\":{\"name\":\"Log Level\",\"displayName\":\"Log Level\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"attributes-to-ignore-regex\":{\"name\":\"attributes-to-ignore-regex\",\"displayName\":\"Attributes to Ignore by Regular Expression\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Attributes to Ignore\":{\"name\":\"Attributes to Ignore\",\"displayName\":\"Attributes to Ignore\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Attributes to Log\":{\"name\":\"Attributes to Log\",\"displayName\":\"Attributes to Log\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"attributes-to-log-regex\":{\"name\":\"attributes-to-log-regex\",\"displayName\":\"Attributes to Log by Regular Expression\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Output Format\":{\"name\":\"Output Format\",\"displayName\":\"Output Format\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Log Payload\":{\"name\":\"Log Payload\",\"displayName\":\"Log Payload\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false}},\"style\":{},\"schedulingPeriod\":\"0 sec\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"executionNode\":\"ALL\",\"penaltyDuration\":\"30 sec\",\"yieldDuration\":\"1 sec\",\"bulletinLevel\":\"WARN\",\"runDurationMillis\":25,\"concurrentlySchedulableTaskCount\":1,\"autoTerminatedRelationships\":[\"success\"],\"scheduledState\":\"ENABLED\",\"retryCount\":10,\"retriedRelationships\":[],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"maxBackoffPeriod\":\"10 mins\",\"componentType\":\"PROCESSOR\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"d44f74cd-dbbc-3269-bc31-878d24047525\",\"instanceIdentifier\":\"6e9fdf75-5bb5-31c2-464c-d7d91450bfaa\",\"name\":\"RouteOnAttribute\",\"comments\":\"\",\"position\":{\"x\":968.0,\"y\":88.0},\"type\":\"org.apache.nifi.processors.standard.RouteOnAttribute\",\"bundle\":{\"group\":\"org.apache.nifi\",\"artifact\":\"nifi-standard-nar\",\"version\":\"2.0.0-M2\"},\"properties\":{\"isNextPage\":\"${record.count:ge(${resource_batch_size})}\",\"Routing Strategy\":\"Route to Property name\"},\"propertyDescriptors\":{\"isNextPage\":{\"name\":\"isNextPage\",\"displayName\":\"isNextPage\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":true},\"Routing Strategy\":{\"name\":\"Routing Strategy\",\"displayName\":\"Routing Strategy\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false}},\"style\":{},\"schedulingPeriod\":\"0 sec\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"executionNode\":\"ALL\",\"penaltyDuration\":\"30 sec\",\"yieldDuration\":\"1 sec\",\"bulletinLevel\":\"WARN\",\"runDurationMillis\":25,\"concurrentlySchedulableTaskCount\":1,\"autoTerminatedRelationships\":[\"unmatched\"],\"scheduledState\":\"ENABLED\",\"retryCount\":10,\"retriedRelationships\":[],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"maxBackoffPeriod\":\"10 mins\",\"componentType\":\"PROCESSOR\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"c3630baa-a594-36f8-aeaa-13f4a03e15af\",\"instanceIdentifier\":\"23385d1b-009f-33d0-4aea-9c04054746a2\",\"name\":\"SplitJson\",\"comments\":\"\",\"position\":{\"x\":408.0,\"y\":272.0},\"type\":\"org.apache.nifi.processors.standard.SplitJson\",\"bundle\":{\"group\":\"org.apache.nifi\",\"artifact\":\"nifi-standard-nar\",\"version\":\"2.0.0-M2\"},\"properties\":{\"Max String Length\":\"20 MB\",\"Null Value Representation\":\"empty string\",\"JsonPath Expression\":\"$\"},\"propertyDescriptors\":{\"Max String Length\":{\"name\":\"Max String Length\",\"displayName\":\"Max String Length\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Null Value Representation\":{\"name\":\"Null Value Representation\",\"displayName\":\"Null Value Representation\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"JsonPath Expression\":{\"name\":\"JsonPath Expression\",\"displayName\":\"JsonPath Expression\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false}},\"style\":{},\"schedulingPeriod\":\"0 sec\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"executionNode\":\"ALL\",\"penaltyDuration\":\"30 sec\",\"yieldDuration\":\"1 sec\",\"bulletinLevel\":\"WARN\",\"runDurationMillis\":0,\"concurrentlySchedulableTaskCount\":1,\"autoTerminatedRelationships\":[\"original\",\"failure\"],\"scheduledState\":\"ENABLED\",\"retryCount\":10,\"retriedRelationships\":[],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"maxBackoffPeriod\":\"10 mins\",\"componentType\":\"PROCESSOR\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"18b4bbe3-ac28-3b40-b3cf-62a471b2cfbe\",\"instanceIdentifier\":\"a3dd67ac-018e-1000-5877-06f26550b646\",\"name\":\"JoltTransformJSON\",\"comments\":\"\",\"position\":{\"x\":408.0,\"y\":1472.9037475585938},\"type\":\"org.apache.nifi.processors.jolt.JoltTransformJSON\",\"bundle\":{\"group\":\"org.apache.nifi\",\"artifact\":\"nifi-jolt-nar\",\"version\":\"2.0.0-M2\"},\"properties\":{\"Jolt Transform\":\"jolt-transform-chain\",\"Max String Length\":\"20 MB\",\"Transform Cache Size\":\"1\",\"Custom Transformation Class Name\":null,\"Custom Module Directory\":null,\"Pretty Print\":\"false\",\"Jolt Specification\":\"[ { \\\"operation\\\": \\\"shift\\\", \\\"spec\\\": { \\\"Id\\\": \\\"storage_object_id\\\" } }, { \\\"operation\\\": \\\"default\\\", \\\"spec\\\": { \\\"resource_data\\\": \\\"${resource_object:escapeJson()}\\\" } } ]\"},\"propertyDescriptors\":{\"Jolt Transform\":{\"name\":\"Jolt Transform\",\"displayName\":\"Jolt Transform\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Max String Length\":{\"name\":\"Max String Length\",\"displayName\":\"Max String Length\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Transform Cache Size\":{\"name\":\"Transform Cache Size\",\"displayName\":\"Transform Cache Size\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Custom Transformation Class Name\":{\"name\":\"Custom Transformation Class Name\",\"displayName\":\"Custom Transformation Class Name\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Custom Module Directory\":{\"name\":\"Custom Module Directory\",\"displayName\":\"Custom Module Directory\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false,\"resourceDefinition\":{\"cardinality\":\"MULTIPLE\",\"resourceTypes\":[\"FILE\",\"DIRECTORY\"]}},\"Pretty Print\":{\"name\":\"Pretty Print\",\"displayName\":\"Pretty Print\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Jolt Specification\":{\"name\":\"Jolt Specification\",\"displayName\":\"Jolt Specification\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false,\"resourceDefinition\":{\"cardinality\":\"SINGLE\",\"resourceTypes\":[\"FILE\",\"TEXT\"]}}},\"style\":{},\"schedulingPeriod\":\"0 sec\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"executionNode\":\"ALL\",\"penaltyDuration\":\"30 sec\",\"yieldDuration\":\"1 sec\",\"bulletinLevel\":\"WARN\",\"runDurationMillis\":0,\"concurrentlySchedulableTaskCount\":1,\"autoTerminatedRelationships\":[\"failure\"],\"scheduledState\":\"ENABLED\",\"retryCount\":10,\"retriedRelationships\":[],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"maxBackoffPeriod\":\"10 mins\",\"componentType\":\"PROCESSOR\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"65e51e90-979a-3af0-870e-b92a7e9ac50b\",\"instanceIdentifier\":\"296b910d-018f-1000-04f0-768ddb6f0847\",\"name\":\"LogAttribute\",\"comments\":\"\",\"position\":{\"x\":-152.0,\"y\":72.0},\"type\":\"org.apache.nifi.processors.standard.LogAttribute\",\"bundle\":{\"group\":\"org.apache.nifi\",\"artifact\":\"nifi-standard-nar\",\"version\":\"2.0.0-M2\"},\"properties\":{\"Log prefix\":null,\"character-set\":\"UTF-8\",\"Log FlowFile Properties\":\"true\",\"Log Level\":\"warn\",\"attributes-to-ignore-regex\":null,\"Attributes to Ignore\":null,\"Attributes to Log\":null,\"attributes-to-log-regex\":\".*\",\"Output Format\":\"Line per Attribute\",\"Log Payload\":\"false\"},\"propertyDescriptors\":{\"Log prefix\":{\"name\":\"Log prefix\",\"displayName\":\"Log prefix\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"character-set\":{\"name\":\"character-set\",\"displayName\":\"Character Set\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Log FlowFile Properties\":{\"name\":\"Log FlowFile Properties\",\"displayName\":\"Log FlowFile Properties\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Log Level\":{\"name\":\"Log Level\",\"displayName\":\"Log Level\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"attributes-to-ignore-regex\":{\"name\":\"attributes-to-ignore-regex\",\"displayName\":\"Attributes to Ignore by Regular Expression\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Attributes to Ignore\":{\"name\":\"Attributes to Ignore\",\"displayName\":\"Attributes to Ignore\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Attributes to Log\":{\"name\":\"Attributes to Log\",\"displayName\":\"Attributes to Log\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"attributes-to-log-regex\":{\"name\":\"attributes-to-log-regex\",\"displayName\":\"Attributes to Log by Regular Expression\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Output Format\":{\"name\":\"Output Format\",\"displayName\":\"Output Format\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Log Payload\":{\"name\":\"Log Payload\",\"displayName\":\"Log Payload\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false}},\"style\":{},\"schedulingPeriod\":\"0 sec\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"executionNode\":\"ALL\",\"penaltyDuration\":\"30 sec\",\"yieldDuration\":\"1 sec\",\"bulletinLevel\":\"WARN\",\"runDurationMillis\":25,\"concurrentlySchedulableTaskCount\":1,\"autoTerminatedRelationships\":[\"success\"],\"scheduledState\":\"ENABLED\",\"retryCount\":10,\"retriedRelationships\":[],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"maxBackoffPeriod\":\"10 mins\",\"componentType\":\"PROCESSOR\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"5f1ef863-3276-3b65-9beb-d239a4ee2282\",\"instanceIdentifier\":\"9273fbd7-367f-376d-d0ab-1ab2737818e5\",\"name\":\"EvaluateJsonPath\",\"comments\":\"\",\"position\":{\"x\":408.0,\"y\":680.9037475585938},\"type\":\"org.apache.nifi.processors.standard.EvaluateJsonPath\",\"bundle\":{\"group\":\"org.apache.nifi\",\"artifact\":\"nifi-standard-nar\",\"version\":\"2.0.0-M2\"},\"properties\":{\"resource_object\":\"$[0]\",\"Destination\":\"flowfile-attribute\",\"Max String Length\":\"20 MB\",\"parent_id\":\"$[0].parent_id\",\"Return Type\":\"json\",\"bucket_name\":\"$[0].data_asset.bucket_name\",\"resource_id\":\"$[0].id\",\"Null Value Representation\":\"empty string\",\"bucket_file_name\":\"$[0].data_asset.bucket_file_name\",\"Path Not Found Behavior\":\"ignore\"},\"propertyDescriptors\":{\"resource_object\":{\"name\":\"resource_object\",\"displayName\":\"resource_object\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":true},\"Destination\":{\"name\":\"Destination\",\"displayName\":\"Destination\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Max String Length\":{\"name\":\"Max String Length\",\"displayName\":\"Max String Length\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"parent_id\":{\"name\":\"parent_id\",\"displayName\":\"parent_id\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":true},\"Return Type\":{\"name\":\"Return Type\",\"displayName\":\"Return Type\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"bucket_name\":{\"name\":\"bucket_name\",\"displayName\":\"bucket_name\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":true},\"resource_id\":{\"name\":\"resource_id\",\"displayName\":\"resource_id\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":true},\"Null Value Representation\":{\"name\":\"Null Value Representation\",\"displayName\":\"Null Value Representation\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"bucket_file_name\":{\"name\":\"bucket_file_name\",\"displayName\":\"bucket_file_name\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":true},\"Path Not Found Behavior\":{\"name\":\"Path Not Found Behavior\",\"displayName\":\"Path Not Found Behavior\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false}},\"style\":{},\"schedulingPeriod\":\"0 sec\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"executionNode\":\"ALL\",\"penaltyDuration\":\"30 sec\",\"yieldDuration\":\"1 sec\",\"bulletinLevel\":\"WARN\",\"runDurationMillis\":0,\"concurrentlySchedulableTaskCount\":1,\"autoTerminatedRelationships\":[\"failure\",\"unmatched\"],\"scheduledState\":\"ENABLED\",\"retryCount\":10,\"retriedRelationships\":[],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"maxBackoffPeriod\":\"10 mins\",\"componentType\":\"PROCESSOR\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"ea275653-a426-3e22-901a-7a3f546b9f67\",\"instanceIdentifier\":\"0ff8e004-0ced-38c0-d0d0-8ccb5249bfe5\",\"name\":\"Upload_resource\",\"comments\":\"\",\"position\":{\"x\":408.0,\"y\":1248.9037475585938},\"type\":\"org.apache.nifi.processors.standard.InvokeHTTP\",\"bundle\":{\"group\":\"org.apache.nifi\",\"artifact\":\"nifi-standard-nar\",\"version\":\"2.0.0-M2\"},\"properties\":{\"Request Content-Encoding\":\"DISABLED\",\"proxy-configuration-service\":null,\"Request Multipart Form-Data Filename Enabled\":\"true\",\"Request Chunked Transfer-Encoding Enabled\":\"true\",\"HTTP/2 Disabled\":\"False\",\"Connection Timeout\":\"5 secs\",\"Response Cookie Strategy\":\"DISABLED\",\"Authorization\":\"#{supabase_service_role_key}\",\"Socket Read Timeout\":\"30 secs\",\"Socket Idle Connections\":\"5\",\"Request Body Enabled\":\"true\",\"HTTP URL\":\"#{supabase_storage_object_url}/#{supabase_folder_resource_bucket_name}/${bucket_file_name}\",\"Request OAuth2 Access Token Provider\":null,\"Socket Idle Timeout\":\"5 mins\",\"Response Redirects Enabled\":\"True\",\"apikey\":\"#{supabase_api_key}\",\"Socket Write Timeout\":\"30 secs\",\"Request Header Attributes Pattern\":null,\"Response FlowFile Naming Strategy\":\"RANDOM\",\"Response Cache Enabled\":\"false\",\"Request Date Header Enabled\":\"True\",\"Request Failure Penalization Enabled\":\"false\",\"Response Body Attribute Size\":\"256\",\"SSL Context Service\":null,\"Response Generation Required\":\"false\",\"Request User-Agent\":null,\"Response Header Request Attributes Enabled\":\"false\",\"HTTP Method\":\"POST\",\"Request Username\":null,\"Request Content-Type\":\"application/pdf\",\"Response Body Attribute Name\":null,\"Request Digest Authentication Enabled\":\"false\",\"Request Multipart Form-Data Name\":null,\"Response Cache Size\":\"10MB\",\"Response Body Ignored\":\"false\"},\"propertyDescriptors\":{\"Request Content-Encoding\":{\"name\":\"Request Content-Encoding\",\"displayName\":\"Request Content-Encoding\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"proxy-configuration-service\":{\"name\":\"proxy-configuration-service\",\"displayName\":\"Proxy Configuration Service\",\"identifiesControllerService\":true,\"sensitive\":false,\"dynamic\":false},\"Request Multipart Form-Data Filename Enabled\":{\"name\":\"Request Multipart Form-Data Filename Enabled\",\"displayName\":\"Request Multipart Form-Data Filename Enabled\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Request Chunked Transfer-Encoding Enabled\":{\"name\":\"Request Chunked Transfer-Encoding Enabled\",\"displayName\":\"Request Chunked Transfer-Encoding Enabled\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"HTTP/2 Disabled\":{\"name\":\"HTTP/2 Disabled\",\"displayName\":\"HTTP/2 Disabled\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Connection Timeout\":{\"name\":\"Connection Timeout\",\"displayName\":\"Connection Timeout\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Response Cookie Strategy\":{\"name\":\"Response Cookie Strategy\",\"displayName\":\"Response Cookie Strategy\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Authorization\":{\"name\":\"Authorization\",\"displayName\":\"Authorization\",\"identifiesControllerService\":false,\"sensitive\":true,\"dynamic\":true},\"Request Password\":{\"name\":\"Request Password\",\"displayName\":\"Request Password\",\"identifiesControllerService\":false,\"sensitive\":true,\"dynamic\":false},\"Socket Read Timeout\":{\"name\":\"Socket Read Timeout\",\"displayName\":\"Socket Read Timeout\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Socket Idle Connections\":{\"name\":\"Socket Idle Connections\",\"displayName\":\"Socket Idle Connections\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Request Body Enabled\":{\"name\":\"Request Body Enabled\",\"displayName\":\"Request Body Enabled\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"HTTP URL\":{\"name\":\"HTTP URL\",\"displayName\":\"HTTP URL\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Request OAuth2 Access Token Provider\":{\"name\":\"Request OAuth2 Access Token Provider\",\"displayName\":\"Request OAuth2 Access Token Provider\",\"identifiesControllerService\":true,\"sensitive\":false,\"dynamic\":false},\"Socket Idle Timeout\":{\"name\":\"Socket Idle Timeout\",\"displayName\":\"Socket Idle Timeout\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Response Redirects Enabled\":{\"name\":\"Response Redirects Enabled\",\"displayName\":\"Response Redirects Enabled\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"apikey\":{\"name\":\"apikey\",\"displayName\":\"apikey\",\"identifiesControllerService\":false,\"sensitive\":true,\"dynamic\":true},\"Socket Write Timeout\":{\"name\":\"Socket Write Timeout\",\"displayName\":\"Socket Write Timeout\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Request Header Attributes Pattern\":{\"name\":\"Request Header Attributes Pattern\",\"displayName\":\"Request Header Attributes Pattern\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Response FlowFile Naming Strategy\":{\"name\":\"Response FlowFile Naming Strategy\",\"displayName\":\"Response FlowFile Naming Strategy\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Response Cache Enabled\":{\"name\":\"Response Cache Enabled\",\"displayName\":\"Response Cache Enabled\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Request Date Header Enabled\":{\"name\":\"Request Date Header Enabled\",\"displayName\":\"Request Date Header Enabled\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Request Failure Penalization Enabled\":{\"name\":\"Request Failure Penalization Enabled\",\"displayName\":\"Request Failure Penalization Enabled\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Response Body Attribute Size\":{\"name\":\"Response Body Attribute Size\",\"displayName\":\"Response Body Attribute Size\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"SSL Context Service\":{\"name\":\"SSL Context Service\",\"displayName\":\"SSL Context Service\",\"identifiesControllerService\":true,\"sensitive\":false,\"dynamic\":false},\"Response Generation Required\":{\"name\":\"Response Generation Required\",\"displayName\":\"Response Generation Required\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Request User-Agent\":{\"name\":\"Request User-Agent\",\"displayName\":\"Request User-Agent\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Response Header Request Attributes Enabled\":{\"name\":\"Response Header Request Attributes Enabled\",\"displayName\":\"Response Header Request Attributes Enabled\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"HTTP Method\":{\"name\":\"HTTP Method\",\"displayName\":\"HTTP Method\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Request Username\":{\"name\":\"Request Username\",\"displayName\":\"Request Username\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Request Content-Type\":{\"name\":\"Request Content-Type\",\"displayName\":\"Request Content-Type\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Response Body Attribute Name\":{\"name\":\"Response Body Attribute Name\",\"displayName\":\"Response Body Attribute Name\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Request Digest Authentication Enabled\":{\"name\":\"Request Digest Authentication Enabled\",\"displayName\":\"Request Digest Authentication Enabled\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Request Multipart Form-Data Name\":{\"name\":\"Request Multipart Form-Data Name\",\"displayName\":\"Request Multipart Form-Data Name\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Response Cache Size\":{\"name\":\"Response Cache Size\",\"displayName\":\"Response Cache Size\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Response Body Ignored\":{\"name\":\"Response Body Ignored\",\"displayName\":\"Response Body Ignored\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false}},\"style\":{},\"schedulingPeriod\":\"0 sec\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"executionNode\":\"ALL\",\"penaltyDuration\":\"30 sec\",\"yieldDuration\":\"1 sec\",\"bulletinLevel\":\"WARN\",\"runDurationMillis\":0,\"concurrentlySchedulableTaskCount\":1,\"autoTerminatedRelationships\":[\"No Retry\",\"Retry\",\"Original\"],\"scheduledState\":\"ENABLED\",\"retryCount\":10,\"retriedRelationships\":[],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"maxBackoffPeriod\":\"10 mins\",\"componentType\":\"PROCESSOR\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"5c8d86ff-f0e4-316e-b444-f08100f84850\",\"instanceIdentifier\":\"85e1a58d-04fd-3851-1cd0-43261c45acf1\",\"name\":\"ScriptedTransformRecord\",\"comments\":\"\",\"position\":{\"x\":408.0,\"y\":480.90374755859375},\"type\":\"org.apache.nifi.processors.script.ScriptedTransformRecord\",\"bundle\":{\"group\":\"org.apache.nifi\",\"artifact\":\"nifi-scripting-nar\",\"version\":\"2.0.0-M2\"},\"properties\":{\"Script File\":null,\"Script Engine\":\"Groovy\",\"Script Body\":\"import org.apache.nifi.serialization.record.*\\nimport org.apache.nifi.serialization.record.util.*\\nimport java.nio.charset.*\\nimport groovy.json.*\\ndef recordMap = record.toMap()\\ndef derivedValues = new HashMap(recordMap)\\nif (recordMap.containsKey('data_asset')) {\\n    def dataAssetValue = recordMap['data_asset']\\n    if (dataAssetValue!=null) { // Check for null and empty values\\n\\t\\tif(dataAssetValue){\\n\\t\\t//log.info(\\\"-\\\"+dataAssetValue.isEmpty())\\n\\t    def slurper = new JsonSlurper()\\n        derivedValues.put('data_asset', slurper.parseText(dataAssetValue))\\n\\t\\t}\\n    } \\n}\\n\\ndef inferredSchema = DataTypeUtils.inferSchema(derivedValues, null, StandardCharsets.UTF_8)\\nreturn new MapRecord(inferredSchema, derivedValues)\",\"Record Writer\":\"9c593afe-ca40-3350-b57a-15455667fb3e\",\"Record Reader\":\"b82929d9-2e01-39b8-b8d1-1882a65235e5\",\"Module Directory\":null},\"propertyDescriptors\":{\"Script File\":{\"name\":\"Script File\",\"displayName\":\"Script File\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false,\"resourceDefinition\":{\"cardinality\":\"SINGLE\",\"resourceTypes\":[\"FILE\"]}},\"Script Engine\":{\"name\":\"Script Engine\",\"displayName\":\"Script Language\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Script Body\":{\"name\":\"Script Body\",\"displayName\":\"Script Body\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Record Writer\":{\"name\":\"Record Writer\",\"displayName\":\"Record Writer\",\"identifiesControllerService\":true,\"sensitive\":false,\"dynamic\":false},\"Record Reader\":{\"name\":\"Record Reader\",\"displayName\":\"Record Reader\",\"identifiesControllerService\":true,\"sensitive\":false,\"dynamic\":false},\"Module Directory\":{\"name\":\"Module Directory\",\"displayName\":\"Module Directory\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false,\"resourceDefinition\":{\"cardinality\":\"MULTIPLE\",\"resourceTypes\":[\"FILE\",\"DIRECTORY\"]}}},\"style\":{},\"schedulingPeriod\":\"0 sec\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"executionNode\":\"ALL\",\"penaltyDuration\":\"30 sec\",\"yieldDuration\":\"1 sec\",\"bulletinLevel\":\"INFO\",\"runDurationMillis\":0,\"concurrentlySchedulableTaskCount\":1,\"autoTerminatedRelationships\":[\"failure\"],\"scheduledState\":\"ENABLED\",\"retryCount\":10,\"retriedRelationships\":[],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"maxBackoffPeriod\":\"10 mins\",\"componentType\":\"PROCESSOR\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"cd8d68b0-0b00-32b7-a5dd-7f4a4a1691f0\",\"instanceIdentifier\":\"4591b404-52db-3d2e-cff9-43aa883b68b8\",\"name\":\"LogAttribute\",\"comments\":\"\",\"position\":{\"x\":1091.2129516601562,\"y\":1073.5740966796875},\"type\":\"org.apache.nifi.processors.standard.LogAttribute\",\"bundle\":{\"group\":\"org.apache.nifi\",\"artifact\":\"nifi-standard-nar\",\"version\":\"2.0.0-M2\"},\"properties\":{\"Log prefix\":null,\"character-set\":\"UTF-8\",\"Log FlowFile Properties\":\"true\",\"Log Level\":\"info\",\"attributes-to-ignore-regex\":null,\"Attributes to Ignore\":null,\"Attributes to Log\":null,\"attributes-to-log-regex\":\".*\",\"Output Format\":\"Line per Attribute\",\"Log Payload\":\"false\"},\"propertyDescriptors\":{\"Log prefix\":{\"name\":\"Log prefix\",\"displayName\":\"Log prefix\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"character-set\":{\"name\":\"character-set\",\"displayName\":\"Character Set\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Log FlowFile Properties\":{\"name\":\"Log FlowFile Properties\",\"displayName\":\"Log FlowFile Properties\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Log Level\":{\"name\":\"Log Level\",\"displayName\":\"Log Level\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"attributes-to-ignore-regex\":{\"name\":\"attributes-to-ignore-regex\",\"displayName\":\"Attributes to Ignore by Regular Expression\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Attributes to Ignore\":{\"name\":\"Attributes to Ignore\",\"displayName\":\"Attributes to Ignore\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Attributes to Log\":{\"name\":\"Attributes to Log\",\"displayName\":\"Attributes to Log\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"attributes-to-log-regex\":{\"name\":\"attributes-to-log-regex\",\"displayName\":\"Attributes to Log by Regular Expression\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Output Format\":{\"name\":\"Output Format\",\"displayName\":\"Output Format\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Log Payload\":{\"name\":\"Log Payload\",\"displayName\":\"Log Payload\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false}},\"style\":{},\"schedulingPeriod\":\"0 sec\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"executionNode\":\"ALL\",\"penaltyDuration\":\"30 sec\",\"yieldDuration\":\"1 sec\",\"bulletinLevel\":\"WARN\",\"runDurationMillis\":25,\"concurrentlySchedulableTaskCount\":1,\"autoTerminatedRelationships\":[\"success\"],\"scheduledState\":\"ENABLED\",\"retryCount\":10,\"retriedRelationships\":[],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"maxBackoffPeriod\":\"10 mins\",\"componentType\":\"PROCESSOR\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"67e6c469-d4f8-39f0-9892-54a97eee43cc\",\"instanceIdentifier\":\"fd9b6721-98e6-33f9-9932-5df18dfbb35b\",\"name\":\"LogAttribute\",\"comments\":\"\",\"position\":{\"x\":416.0,\"y\":1904.0},\"type\":\"org.apache.nifi.processors.standard.LogAttribute\",\"bundle\":{\"group\":\"org.apache.nifi\",\"artifact\":\"nifi-standard-nar\",\"version\":\"2.0.0-M2\"},\"properties\":{\"Log prefix\":null,\"character-set\":\"UTF-8\",\"Log FlowFile Properties\":\"true\",\"Log Level\":\"error\",\"attributes-to-ignore-regex\":null,\"Attributes to Ignore\":null,\"Attributes to Log\":null,\"attributes-to-log-regex\":\".*\",\"Output Format\":\"Line per Attribute\",\"Log Payload\":\"false\"},\"propertyDescriptors\":{\"Log prefix\":{\"name\":\"Log prefix\",\"displayName\":\"Log prefix\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"character-set\":{\"name\":\"character-set\",\"displayName\":\"Character Set\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Log FlowFile Properties\":{\"name\":\"Log FlowFile Properties\",\"displayName\":\"Log FlowFile Properties\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Log Level\":{\"name\":\"Log Level\",\"displayName\":\"Log Level\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"attributes-to-ignore-regex\":{\"name\":\"attributes-to-ignore-regex\",\"displayName\":\"Attributes to Ignore by Regular Expression\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Attributes to Ignore\":{\"name\":\"Attributes to Ignore\",\"displayName\":\"Attributes to Ignore\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Attributes to Log\":{\"name\":\"Attributes to Log\",\"displayName\":\"Attributes to Log\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"attributes-to-log-regex\":{\"name\":\"attributes-to-log-regex\",\"displayName\":\"Attributes to Log by Regular Expression\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Output Format\":{\"name\":\"Output Format\",\"displayName\":\"Output Format\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Log Payload\":{\"name\":\"Log Payload\",\"displayName\":\"Log Payload\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false}},\"style\":{},\"schedulingPeriod\":\"0 sec\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"executionNode\":\"ALL\",\"penaltyDuration\":\"30 sec\",\"yieldDuration\":\"1 sec\",\"bulletinLevel\":\"WARN\",\"runDurationMillis\":25,\"concurrentlySchedulableTaskCount\":1,\"autoTerminatedRelationships\":[\"success\"],\"scheduledState\":\"ENABLED\",\"retryCount\":10,\"retriedRelationships\":[],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"maxBackoffPeriod\":\"10 mins\",\"componentType\":\"PROCESSOR\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"fc4628c0-8a51-3385-9b0c-bfbb4dbebd8e\",\"instanceIdentifier\":\"b4713614-7973-3797-1b7d-0da775de6565\",\"name\":\"PutDatabaseRecord\",\"comments\":\"\",\"position\":{\"x\":408.0,\"y\":1688.9037475585938},\"type\":\"org.apache.nifi.processors.standard.PutDatabaseRecord\",\"bundle\":{\"group\":\"org.apache.nifi\",\"artifact\":\"nifi-standard-nar\",\"version\":\"2.0.0-M2\"},\"properties\":{\"put-db-record-allow-multiple-statements\":\"false\",\"table-schema-cache-size\":\"100\",\"put-db-record-schema-name\":\"public\",\"put-db-record-field-containing-sql\":null,\"put-db-record-quoted-table-identifiers\":\"false\",\"Statement Type Record Path\":null,\"put-db-record-unmatched-column-behavior\":\"Fail on Unmatched Columns\",\"put-db-record-catalog-name\":null,\"put-db-record-translate-field-names\":\"true\",\"put-db-record-dcbp-service\":\"e55be60a-98e8-32e6-8467-38c6497f6798\",\"put-db-record-query-timeout\":\"0 seconds\",\"rollback-on-failure\":\"false\",\"put-db-record-statement-type\":\"INSERT\",\"db-type\":\"PostgreSQL\",\"put-db-record-update-keys\":\"id\",\"put-db-record-quoted-identifiers\":\"false\",\"put-db-record-table-name\":\"resources\",\"put-db-record-unmatched-field-behavior\":\"Ignore Unmatched Fields\",\"put-db-record-max-batch-size\":\"1000\",\"put-db-record-record-reader\":\"b82929d9-2e01-39b8-b8d1-1882a65235e5\",\"Data Record Path\":null},\"propertyDescriptors\":{\"put-db-record-allow-multiple-statements\":{\"name\":\"put-db-record-allow-multiple-statements\",\"displayName\":\"Allow Multiple SQL Statements\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"table-schema-cache-size\":{\"name\":\"table-schema-cache-size\",\"displayName\":\"Table Schema Cache Size\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"put-db-record-schema-name\":{\"name\":\"put-db-record-schema-name\",\"displayName\":\"Schema Name\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"put-db-record-field-containing-sql\":{\"name\":\"put-db-record-field-containing-sql\",\"displayName\":\"Field Containing SQL\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"put-db-record-quoted-table-identifiers\":{\"name\":\"put-db-record-quoted-table-identifiers\",\"displayName\":\"Quote Table Identifiers\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Statement Type Record Path\":{\"name\":\"Statement Type Record Path\",\"displayName\":\"Statement Type Record Path\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"put-db-record-unmatched-column-behavior\":{\"name\":\"put-db-record-unmatched-column-behavior\",\"displayName\":\"Unmatched Column Behavior\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"put-db-record-catalog-name\":{\"name\":\"put-db-record-catalog-name\",\"displayName\":\"Catalog Name\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"put-db-record-translate-field-names\":{\"name\":\"put-db-record-translate-field-names\",\"displayName\":\"Translate Field Names\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"put-db-record-dcbp-service\":{\"name\":\"put-db-record-dcbp-service\",\"displayName\":\"Database Connection Pooling Service\",\"identifiesControllerService\":true,\"sensitive\":false,\"dynamic\":false},\"put-db-record-query-timeout\":{\"name\":\"put-db-record-query-timeout\",\"displayName\":\"Max Wait Time\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"rollback-on-failure\":{\"name\":\"rollback-on-failure\",\"displayName\":\"Rollback On Failure\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"put-db-record-statement-type\":{\"name\":\"put-db-record-statement-type\",\"displayName\":\"Statement Type\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"db-type\":{\"name\":\"db-type\",\"displayName\":\"Database Type\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"put-db-record-update-keys\":{\"name\":\"put-db-record-update-keys\",\"displayName\":\"Update Keys\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"put-db-record-quoted-identifiers\":{\"name\":\"put-db-record-quoted-identifiers\",\"displayName\":\"Quote Column Identifiers\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"put-db-record-table-name\":{\"name\":\"put-db-record-table-name\",\"displayName\":\"Table Name\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"put-db-record-unmatched-field-behavior\":{\"name\":\"put-db-record-unmatched-field-behavior\",\"displayName\":\"Unmatched Field Behavior\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"put-db-record-max-batch-size\":{\"name\":\"put-db-record-max-batch-size\",\"displayName\":\"Maximum Batch Size\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"put-db-record-record-reader\":{\"name\":\"put-db-record-record-reader\",\"displayName\":\"Record Reader\",\"identifiesControllerService\":true,\"sensitive\":false,\"dynamic\":false},\"Data Record Path\":{\"name\":\"Data Record Path\",\"displayName\":\"Data Record Path\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false}},\"style\":{},\"schedulingPeriod\":\"0 sec\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"executionNode\":\"ALL\",\"penaltyDuration\":\"30 sec\",\"yieldDuration\":\"1 sec\",\"bulletinLevel\":\"WARN\",\"runDurationMillis\":0,\"concurrentlySchedulableTaskCount\":1,\"autoTerminatedRelationships\":[\"success\"],\"scheduledState\":\"ENABLED\",\"retryCount\":10,\"retriedRelationships\":[],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"maxBackoffPeriod\":\"10 mins\",\"componentType\":\"PROCESSOR\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"3147a800-8f3e-3530-82a3-12f3be7f207d\",\"instanceIdentifier\":\"1b20bd0d-e55c-3776-e56c-3dca66e8b54d\",\"name\":\"UpdateAttribute\",\"comments\":\"\",\"position\":{\"x\":968.0,\"y\":-112.0},\"type\":\"org.apache.nifi.processors.attributes.UpdateAttribute\",\"bundle\":{\"group\":\"org.apache.nifi\",\"artifact\":\"nifi-update-attribute-nar\",\"version\":\"2.0.0-M2\"},\"properties\":{\"Delete Attributes Expression\":null,\"offset\":\"${offset:plus(${record.count})}\",\"Store State\":\"Do not store state\",\"canonical-value-lookup-cache-size\":\"100\",\"Stateful Variables Initial Value\":null},\"propertyDescriptors\":{\"Delete Attributes Expression\":{\"name\":\"Delete Attributes Expression\",\"displayName\":\"Delete Attributes Expression\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"offset\":{\"name\":\"offset\",\"displayName\":\"offset\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":true},\"Store State\":{\"name\":\"Store State\",\"displayName\":\"Store State\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"canonical-value-lookup-cache-size\":{\"name\":\"canonical-value-lookup-cache-size\",\"displayName\":\"Cache Value Lookup Cache Size\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Stateful Variables Initial Value\":{\"name\":\"Stateful Variables Initial Value\",\"displayName\":\"Stateful Variables Initial Value\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false}},\"style\":{},\"schedulingPeriod\":\"0 sec\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"executionNode\":\"ALL\",\"penaltyDuration\":\"30 sec\",\"yieldDuration\":\"1 sec\",\"bulletinLevel\":\"WARN\",\"runDurationMillis\":25,\"concurrentlySchedulableTaskCount\":1,\"autoTerminatedRelationships\":[],\"scheduledState\":\"ENABLED\",\"retryCount\":10,\"retriedRelationships\":[],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"maxBackoffPeriod\":\"10 mins\",\"componentType\":\"PROCESSOR\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"18f7ca0d-efa0-3717-bc62-182ff3372685\",\"instanceIdentifier\":\"7fcf0421-415f-320a-f564-1a79dd29b7c6\",\"name\":\"RouteOnAttribute\",\"comments\":\"\",\"position\":{\"x\":408.0,\"y\":864.9037475585938},\"type\":\"org.apache.nifi.processors.standard.RouteOnAttribute\",\"bundle\":{\"group\":\"org.apache.nifi\",\"artifact\":\"nifi-standard-nar\",\"version\":\"2.0.0-M2\"},\"properties\":{\"Routing Strategy\":\"Route to Property name\",\"isValidPath\":\"${bucket_name:notNull():and(${bucket_name:isEmpty():not()}):and(${bucket_file_name:notNull()}):and(${bucket_file_name:isEmpty():not()})}\"},\"propertyDescriptors\":{\"Routing Strategy\":{\"name\":\"Routing Strategy\",\"displayName\":\"Routing Strategy\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"isValidPath\":{\"name\":\"isValidPath\",\"displayName\":\"isValidPath\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":true}},\"style\":{},\"schedulingPeriod\":\"0 sec\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"executionNode\":\"ALL\",\"penaltyDuration\":\"30 sec\",\"yieldDuration\":\"1 sec\",\"bulletinLevel\":\"WARN\",\"runDurationMillis\":25,\"concurrentlySchedulableTaskCount\":1,\"autoTerminatedRelationships\":[],\"scheduledState\":\"ENABLED\",\"retryCount\":10,\"retriedRelationships\":[],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"maxBackoffPeriod\":\"10 mins\",\"componentType\":\"PROCESSOR\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"e02cc50f-a7ec-374b-9c88-8f8f4c902184\",\"instanceIdentifier\":\"7576e7a8-47b0-3447-57d5-1a503ca62983\",\"name\":\"LogAttribute\",\"comments\":\"\",\"position\":{\"x\":1091.2129516601562,\"y\":881.5740966796875},\"type\":\"org.apache.nifi.processors.standard.LogAttribute\",\"bundle\":{\"group\":\"org.apache.nifi\",\"artifact\":\"nifi-standard-nar\",\"version\":\"2.0.0-M2\"},\"properties\":{\"Log prefix\":null,\"character-set\":\"UTF-8\",\"Log FlowFile Properties\":\"true\",\"Log Level\":\"warn\",\"attributes-to-ignore-regex\":null,\"Attributes to Ignore\":null,\"Attributes to Log\":null,\"attributes-to-log-regex\":\".*\",\"Output Format\":\"Line per Attribute\",\"Log Payload\":\"false\"},\"propertyDescriptors\":{\"Log prefix\":{\"name\":\"Log prefix\",\"displayName\":\"Log prefix\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"character-set\":{\"name\":\"character-set\",\"displayName\":\"Character Set\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Log FlowFile Properties\":{\"name\":\"Log FlowFile Properties\",\"displayName\":\"Log FlowFile Properties\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Log Level\":{\"name\":\"Log Level\",\"displayName\":\"Log Level\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"attributes-to-ignore-regex\":{\"name\":\"attributes-to-ignore-regex\",\"displayName\":\"Attributes to Ignore by Regular Expression\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Attributes to Ignore\":{\"name\":\"Attributes to Ignore\",\"displayName\":\"Attributes to Ignore\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Attributes to Log\":{\"name\":\"Attributes to Log\",\"displayName\":\"Attributes to Log\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"attributes-to-log-regex\":{\"name\":\"attributes-to-log-regex\",\"displayName\":\"Attributes to Log by Regular Expression\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Output Format\":{\"name\":\"Output Format\",\"displayName\":\"Output Format\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Log Payload\":{\"name\":\"Log Payload\",\"displayName\":\"Log Payload\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false}},\"style\":{},\"schedulingPeriod\":\"0 sec\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"executionNode\":\"ALL\",\"penaltyDuration\":\"30 sec\",\"yieldDuration\":\"1 sec\",\"bulletinLevel\":\"WARN\",\"runDurationMillis\":25,\"concurrentlySchedulableTaskCount\":1,\"autoTerminatedRelationships\":[\"success\"],\"scheduledState\":\"ENABLED\",\"retryCount\":10,\"retriedRelationships\":[],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"maxBackoffPeriod\":\"10 mins\",\"componentType\":\"PROCESSOR\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"5cba0329-554c-3ec2-a72a-9bd9a13525b0\",\"instanceIdentifier\":\"70de59ae-cd11-3285-0545-6a7f7e8713d7\",\"name\":\"GenerateFlowFile\",\"comments\":\"\",\"position\":{\"x\":408.0,\"y\":-112.0},\"type\":\"org.apache.nifi.processors.standard.GenerateFlowFile\",\"bundle\":{\"group\":\"org.apache.nifi\",\"artifact\":\"nifi-standard-nar\",\"version\":\"2.0.0-M2\"},\"properties\":{\"character-set\":\"UTF-8\",\"File Size\":\"0B\",\"mime-type\":null,\"generate-ff-custom-text\":null,\"offset\":\"0\",\"org_id\":\"4\",\"Batch Size\":\"1\",\"Unique FlowFiles\":\"false\",\"resource_batch_size\":\"100\",\"Data Format\":\"Text\"},\"propertyDescriptors\":{\"character-set\":{\"name\":\"character-set\",\"displayName\":\"Character Set\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"File Size\":{\"name\":\"File Size\",\"displayName\":\"File Size\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"mime-type\":{\"name\":\"mime-type\",\"displayName\":\"Mime Type\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"generate-ff-custom-text\":{\"name\":\"generate-ff-custom-text\",\"displayName\":\"Custom Text\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"offset\":{\"name\":\"offset\",\"displayName\":\"offset\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":true},\"org_id\":{\"name\":\"org_id\",\"displayName\":\"org_id\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":true},\"Batch Size\":{\"name\":\"Batch Size\",\"displayName\":\"Batch Size\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Unique FlowFiles\":{\"name\":\"Unique FlowFiles\",\"displayName\":\"Unique FlowFiles\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"resource_batch_size\":{\"name\":\"resource_batch_size\",\"displayName\":\"resource_batch_size\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":true},\"Data Format\":{\"name\":\"Data Format\",\"displayName\":\"Data Format\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false}},\"style\":{},\"schedulingPeriod\":\"1 min\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"executionNode\":\"ALL\",\"penaltyDuration\":\"30 sec\",\"yieldDuration\":\"1 sec\",\"bulletinLevel\":\"WARN\",\"runDurationMillis\":0,\"concurrentlySchedulableTaskCount\":1,\"autoTerminatedRelationships\":[],\"scheduledState\":\"ENABLED\",\"retryCount\":10,\"retriedRelationships\":[],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"maxBackoffPeriod\":\"10 mins\",\"componentType\":\"PROCESSOR\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"657344b2-ed4c-37e4-8142-98f9bf894d8d\",\"instanceIdentifier\":\"aef3c4e6-3e36-31b8-ba55-32c3fcf9b0dc\",\"name\":\"ExecuteSQLRecord\",\"comments\":\"\",\"position\":{\"x\":408.0,\"y\":72.0},\"type\":\"org.apache.nifi.processors.standard.ExecuteSQLRecord\",\"bundle\":{\"group\":\"org.apache.nifi\",\"artifact\":\"nifi-standard-nar\",\"version\":\"2.0.0-M2\"},\"properties\":{\"esql-max-rows\":\"0\",\"esqlrecord-record-writer\":\"9c593afe-ca40-3350-b57a-15455667fb3e\",\"dbf-default-precision\":\"10\",\"Max Wait Time\":\"0 seconds\",\"Database Connection Pooling Service\":\"cc5497b7-3842-373d-a3d5-f0e54d6adac3\",\"sql-post-query\":null,\"esql-auto-commit\":\"true\",\"dbf-user-logical-types\":\"false\",\"dbf-default-scale\":\"0\",\"sql-pre-query\":null,\"esql-output-batch-size\":\"0\",\"esql-fetch-size\":\"0\",\"SQL select query\":\"select id,\\norg_id,\\nuser_id,\\nstate,\\nname,\\ndescription,\\nobjective,\\npid,\\ncreated_at,\\nupdated_at,\\nsource_url,\\nsha256_file,\\ngcs_file,\\ndata_asset,\\nraw_text,\\nembedding,\\nscope,\\nparent_id,\\nlft,\\nrgt,\\ndocument_type,\\nold_id,\\nlast_synced_ts,\\napideck_service_id,\\napideck_id,\\ngroup_id,\\ncurrent_generation  from resources \\nwhere org_id =${org_id} \\nand data_asset is not null\\nand length(data_asset::text)>2\\nlimit ${resource_batch_size} offset ${offset};\",\"esqlrecord-normalize\":\"false\"},\"propertyDescriptors\":{\"esql-max-rows\":{\"name\":\"esql-max-rows\",\"displayName\":\"Max Rows Per Flow File\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"esqlrecord-record-writer\":{\"name\":\"esqlrecord-record-writer\",\"displayName\":\"Record Writer\",\"identifiesControllerService\":true,\"sensitive\":false,\"dynamic\":false},\"dbf-default-precision\":{\"name\":\"dbf-default-precision\",\"displayName\":\"Default Decimal Precision\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Max Wait Time\":{\"name\":\"Max Wait Time\",\"displayName\":\"Max Wait Time\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Database Connection Pooling Service\":{\"name\":\"Database Connection Pooling Service\",\"displayName\":\"Database Connection Pooling Service\",\"identifiesControllerService\":true,\"sensitive\":false,\"dynamic\":false},\"sql-post-query\":{\"name\":\"sql-post-query\",\"displayName\":\"SQL Post-Query\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"esql-auto-commit\":{\"name\":\"esql-auto-commit\",\"displayName\":\"Set Auto Commit\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"dbf-user-logical-types\":{\"name\":\"dbf-user-logical-types\",\"displayName\":\"Use Avro Logical Types\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"dbf-default-scale\":{\"name\":\"dbf-default-scale\",\"displayName\":\"Default Decimal Scale\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"sql-pre-query\":{\"name\":\"sql-pre-query\",\"displayName\":\"SQL Pre-Query\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"esql-output-batch-size\":{\"name\":\"esql-output-batch-size\",\"displayName\":\"Output Batch Size\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"esql-fetch-size\":{\"name\":\"esql-fetch-size\",\"displayName\":\"Fetch Size\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"SQL select query\":{\"name\":\"SQL select query\",\"displayName\":\"SQL select query\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"esqlrecord-normalize\":{\"name\":\"esqlrecord-normalize\",\"displayName\":\"Normalize Table/Column Names\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false}},\"style\":{},\"schedulingPeriod\":\"0 sec\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"executionNode\":\"ALL\",\"penaltyDuration\":\"30 sec\",\"yieldDuration\":\"1 sec\",\"bulletinLevel\":\"WARN\",\"runDurationMillis\":0,\"concurrentlySchedulableTaskCount\":1,\"autoTerminatedRelationships\":[],\"scheduledState\":\"ENABLED\",\"retryCount\":10,\"retriedRelationships\":[],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"maxBackoffPeriod\":\"10 mins\",\"componentType\":\"PROCESSOR\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"c1656b4a-2ef5-3735-87e8-5902e52726f9\",\"instanceIdentifier\":\"25d2c649-8374-3049-e457-e1b7315ebdab\",\"name\":\"FetchGCSObject\",\"comments\":\"\",\"position\":{\"x\":408.0,\"y\":1064.0},\"type\":\"org.apache.nifi.processors.gcp.storage.FetchGCSObject\",\"bundle\":{\"group\":\"org.apache.nifi\",\"artifact\":\"nifi-gcp-nar\",\"version\":\"2.0.0-M2\"},\"properties\":{\"gcp-proxy-host\":null,\"gcp-retry-count\":\"6\",\"proxy-configuration-service\":null,\"gcs-object-range-length\":null,\"gcp-proxy-user-name\":null,\"gcp-project-id\":null,\"gcs-generation\":null,\"GCP Credentials Provider Service\":\"5c442a5d-ff5c-36a3-abb1-dd08a0fa2087\",\"gcs-object-range-start\":null,\"gcs-key\":\"${bucket_file_name}\",\"storage-api-url\":null,\"gcp-proxy-port\":null,\"gcs-bucket\":\"${bucket_name}\"},\"propertyDescriptors\":{\"gcp-proxy-host\":{\"name\":\"gcp-proxy-host\",\"displayName\":\"Proxy host\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"gcp-retry-count\":{\"name\":\"gcp-retry-count\",\"displayName\":\"Number of retries\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"proxy-configuration-service\":{\"name\":\"proxy-configuration-service\",\"displayName\":\"Proxy Configuration Service\",\"identifiesControllerService\":true,\"sensitive\":false,\"dynamic\":false},\"gcs-server-side-encryption-key\":{\"name\":\"gcs-server-side-encryption-key\",\"displayName\":\"Server Side Encryption Key\",\"identifiesControllerService\":false,\"sensitive\":true,\"dynamic\":false},\"gcs-object-range-length\":{\"name\":\"gcs-object-range-length\",\"displayName\":\"Range Length\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"gcp-proxy-user-name\":{\"name\":\"gcp-proxy-user-name\",\"displayName\":\"HTTP Proxy Username\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"gcp-project-id\":{\"name\":\"gcp-project-id\",\"displayName\":\"Project ID\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"gcs-generation\":{\"name\":\"gcs-generation\",\"displayName\":\"Object Generation\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"GCP Credentials Provider Service\":{\"name\":\"GCP Credentials Provider Service\",\"displayName\":\"GCP Credentials Provider Service\",\"identifiesControllerService\":true,\"sensitive\":false,\"dynamic\":false},\"gcs-object-range-start\":{\"name\":\"gcs-object-range-start\",\"displayName\":\"Range Start\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"gcs-key\":{\"name\":\"gcs-key\",\"displayName\":\"Name\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"gcp-proxy-user-password\":{\"name\":\"gcp-proxy-user-password\",\"displayName\":\"HTTP Proxy Password\",\"identifiesControllerService\":false,\"sensitive\":true,\"dynamic\":false},\"storage-api-url\":{\"name\":\"storage-api-url\",\"displayName\":\"Storage API URL\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"gcp-proxy-port\":{\"name\":\"gcp-proxy-port\",\"displayName\":\"Proxy port\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"gcs-bucket\":{\"name\":\"gcs-bucket\",\"displayName\":\"Bucket\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false}},\"style\":{},\"schedulingPeriod\":\"0 sec\",\"schedulingStrategy\":\"TIMER_DRIVEN\",\"executionNode\":\"ALL\",\"penaltyDuration\":\"30 sec\",\"yieldDuration\":\"1 sec\",\"bulletinLevel\":\"WARN\",\"runDurationMillis\":0,\"concurrentlySchedulableTaskCount\":1,\"autoTerminatedRelationships\":[],\"scheduledState\":\"ENABLED\",\"retryCount\":10,\"retriedRelationships\":[],\"backoffMechanism\":\"PENALIZE_FLOWFILE\",\"maxBackoffPeriod\":\"10 mins\",\"componentType\":\"PROCESSOR\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"}],\"inputPorts\":[],\"outputPorts\":[],\"connections\":[{\"identifier\":\"d9314d4b-996b-3fd0-a56d-06aaeba44052\",\"instanceIdentifier\":\"108ae694-816f-3875-88de-6d2548597a20\",\"name\":\"\",\"source\":{\"id\":\"c3630baa-a594-36f8-aeaa-13f4a03e15af\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"SplitJson\",\"comments\":\"\",\"instanceIdentifier\":\"23385d1b-009f-33d0-4aea-9c04054746a2\"},\"destination\":{\"id\":\"5c8d86ff-f0e4-316e-b444-f08100f84850\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"ScriptedTransformRecord\",\"comments\":\"\",\"instanceIdentifier\":\"85e1a58d-04fd-3851-1cd0-43261c45acf1\"},\"labelIndex\":1,\"zIndex\":0,\"selectedRelationships\":[\"split\"],\"backPressureObjectThreshold\":10000,\"backPressureDataSizeThreshold\":\"1 GB\",\"flowFileExpiration\":\"0 sec\",\"prioritizers\":[],\"bends\":[],\"loadBalanceStrategy\":\"DO_NOT_LOAD_BALANCE\",\"partitioningAttribute\":\"\",\"loadBalanceCompression\":\"DO_NOT_COMPRESS\",\"componentType\":\"CONNECTION\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"ef5978c0-fd59-3e96-b4b0-9e56db81bd06\",\"instanceIdentifier\":\"fe19165b-15ae-3ee9-b93f-348bf276109e\",\"name\":\"\",\"source\":{\"id\":\"18f7ca0d-efa0-3717-bc62-182ff3372685\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"RouteOnAttribute\",\"comments\":\"\",\"instanceIdentifier\":\"7fcf0421-415f-320a-f564-1a79dd29b7c6\"},\"destination\":{\"id\":\"c1656b4a-2ef5-3735-87e8-5902e52726f9\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"FetchGCSObject\",\"comments\":\"\",\"instanceIdentifier\":\"25d2c649-8374-3049-e457-e1b7315ebdab\"},\"labelIndex\":1,\"zIndex\":0,\"selectedRelationships\":[\"isValidPath\"],\"backPressureObjectThreshold\":10000,\"backPressureDataSizeThreshold\":\"1 GB\",\"flowFileExpiration\":\"0 sec\",\"prioritizers\":[],\"bends\":[],\"loadBalanceStrategy\":\"DO_NOT_LOAD_BALANCE\",\"partitioningAttribute\":\"\",\"loadBalanceCompression\":\"DO_NOT_COMPRESS\",\"componentType\":\"CONNECTION\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"2704bbaa-342d-3ca5-8c37-c57959417d4c\",\"instanceIdentifier\":\"0a03be98-6684-3b04-5b90-0e60c24fb799\",\"name\":\"\",\"source\":{\"id\":\"c1656b4a-2ef5-3735-87e8-5902e52726f9\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"FetchGCSObject\",\"comments\":\"\",\"instanceIdentifier\":\"25d2c649-8374-3049-e457-e1b7315ebdab\"},\"destination\":{\"id\":\"ea275653-a426-3e22-901a-7a3f546b9f67\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"Upload_resource\",\"comments\":\"\",\"instanceIdentifier\":\"0ff8e004-0ced-38c0-d0d0-8ccb5249bfe5\"},\"labelIndex\":1,\"zIndex\":0,\"selectedRelationships\":[\"success\"],\"backPressureObjectThreshold\":10000,\"backPressureDataSizeThreshold\":\"1 GB\",\"flowFileExpiration\":\"0 sec\",\"prioritizers\":[],\"bends\":[],\"loadBalanceStrategy\":\"DO_NOT_LOAD_BALANCE\",\"partitioningAttribute\":\"\",\"loadBalanceCompression\":\"DO_NOT_COMPRESS\",\"componentType\":\"CONNECTION\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"7e1002ea-c39d-3d43-a888-98d392db859f\",\"instanceIdentifier\":\"5d31bba5-9335-342d-2b3e-0185cdbd8cce\",\"name\":\"\",\"source\":{\"id\":\"657344b2-ed4c-37e4-8142-98f9bf894d8d\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"ExecuteSQLRecord\",\"comments\":\"\",\"instanceIdentifier\":\"aef3c4e6-3e36-31b8-ba55-32c3fcf9b0dc\"},\"destination\":{\"id\":\"d44f74cd-dbbc-3269-bc31-878d24047525\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"RouteOnAttribute\",\"comments\":\"\",\"instanceIdentifier\":\"6e9fdf75-5bb5-31c2-464c-d7d91450bfaa\"},\"labelIndex\":1,\"zIndex\":0,\"selectedRelationships\":[\"success\"],\"backPressureObjectThreshold\":10000,\"backPressureDataSizeThreshold\":\"1 GB\",\"flowFileExpiration\":\"0 sec\",\"prioritizers\":[],\"bends\":[],\"loadBalanceStrategy\":\"DO_NOT_LOAD_BALANCE\",\"partitioningAttribute\":\"\",\"loadBalanceCompression\":\"DO_NOT_COMPRESS\",\"componentType\":\"CONNECTION\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"986c1d44-1f35-3ad6-94f7-d6cceb86b4ee\",\"instanceIdentifier\":\"9f6bddce-f667-3e41-ac96-491b1e23632c\",\"name\":\"\",\"source\":{\"id\":\"657344b2-ed4c-37e4-8142-98f9bf894d8d\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"ExecuteSQLRecord\",\"comments\":\"\",\"instanceIdentifier\":\"aef3c4e6-3e36-31b8-ba55-32c3fcf9b0dc\"},\"destination\":{\"id\":\"c3630baa-a594-36f8-aeaa-13f4a03e15af\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"SplitJson\",\"comments\":\"\",\"instanceIdentifier\":\"23385d1b-009f-33d0-4aea-9c04054746a2\"},\"labelIndex\":1,\"zIndex\":0,\"selectedRelationships\":[\"success\"],\"backPressureObjectThreshold\":10000,\"backPressureDataSizeThreshold\":\"1 GB\",\"flowFileExpiration\":\"0 sec\",\"prioritizers\":[],\"bends\":[],\"loadBalanceStrategy\":\"DO_NOT_LOAD_BALANCE\",\"partitioningAttribute\":\"\",\"loadBalanceCompression\":\"DO_NOT_COMPRESS\",\"componentType\":\"CONNECTION\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"184b48ec-a5c7-3ad0-b46f-63dd8ae409f3\",\"instanceIdentifier\":\"c1d9839a-5e98-39da-a5b0-705b04875364\",\"name\":\"\",\"source\":{\"id\":\"5c8d86ff-f0e4-316e-b444-f08100f84850\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"ScriptedTransformRecord\",\"comments\":\"\",\"instanceIdentifier\":\"85e1a58d-04fd-3851-1cd0-43261c45acf1\"},\"destination\":{\"id\":\"5f1ef863-3276-3b65-9beb-d239a4ee2282\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"EvaluateJsonPath\",\"comments\":\"\",\"instanceIdentifier\":\"9273fbd7-367f-376d-d0ab-1ab2737818e5\"},\"labelIndex\":1,\"zIndex\":0,\"selectedRelationships\":[\"success\"],\"backPressureObjectThreshold\":10000,\"backPressureDataSizeThreshold\":\"1 GB\",\"flowFileExpiration\":\"0 sec\",\"prioritizers\":[],\"bends\":[],\"loadBalanceStrategy\":\"DO_NOT_LOAD_BALANCE\",\"partitioningAttribute\":\"\",\"loadBalanceCompression\":\"DO_NOT_COMPRESS\",\"componentType\":\"CONNECTION\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"e4949612-ab5d-3fbe-970f-17d120eac61a\",\"instanceIdentifier\":\"de072d80-3ffe-36a6-cac9-e4d91728ad42\",\"name\":\"\",\"source\":{\"id\":\"c1656b4a-2ef5-3735-87e8-5902e52726f9\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"FetchGCSObject\",\"comments\":\"\",\"instanceIdentifier\":\"25d2c649-8374-3049-e457-e1b7315ebdab\"},\"destination\":{\"id\":\"cd8d68b0-0b00-32b7-a5dd-7f4a4a1691f0\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"LogAttribute\",\"comments\":\"\",\"instanceIdentifier\":\"4591b404-52db-3d2e-cff9-43aa883b68b8\"},\"labelIndex\":1,\"zIndex\":0,\"selectedRelationships\":[\"failure\"],\"backPressureObjectThreshold\":10000,\"backPressureDataSizeThreshold\":\"1 GB\",\"flowFileExpiration\":\"0 sec\",\"prioritizers\":[],\"bends\":[],\"loadBalanceStrategy\":\"DO_NOT_LOAD_BALANCE\",\"partitioningAttribute\":\"\",\"loadBalanceCompression\":\"DO_NOT_COMPRESS\",\"componentType\":\"CONNECTION\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"239da02c-ea39-322f-b57b-7f7844700265\",\"instanceIdentifier\":\"2f7a4e2f-318b-371a-1a19-c70681ead8b1\",\"name\":\"\",\"source\":{\"id\":\"ea275653-a426-3e22-901a-7a3f546b9f67\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"Upload_resource\",\"comments\":\"\",\"instanceIdentifier\":\"0ff8e004-0ced-38c0-d0d0-8ccb5249bfe5\"},\"destination\":{\"id\":\"8abd0623-8e39-3ab8-af9b-84836fea1893\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"LogAttribute\",\"comments\":\"\",\"instanceIdentifier\":\"91b4ea16-483d-31ce-058e-caccd0e33155\"},\"labelIndex\":1,\"zIndex\":0,\"selectedRelationships\":[\"Failure\"],\"backPressureObjectThreshold\":10000,\"backPressureDataSizeThreshold\":\"1 GB\",\"flowFileExpiration\":\"0 sec\",\"prioritizers\":[],\"bends\":[],\"loadBalanceStrategy\":\"DO_NOT_LOAD_BALANCE\",\"partitioningAttribute\":\"\",\"loadBalanceCompression\":\"DO_NOT_COMPRESS\",\"componentType\":\"CONNECTION\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"f4bedca6-299f-31c3-9e08-c381aa1d7e9e\",\"instanceIdentifier\":\"3f16aa42-8388-3c3b-ac95-01eb6719a9fb\",\"name\":\"\",\"source\":{\"id\":\"5f1ef863-3276-3b65-9beb-d239a4ee2282\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"EvaluateJsonPath\",\"comments\":\"\",\"instanceIdentifier\":\"9273fbd7-367f-376d-d0ab-1ab2737818e5\"},\"destination\":{\"id\":\"18f7ca0d-efa0-3717-bc62-182ff3372685\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"RouteOnAttribute\",\"comments\":\"\",\"instanceIdentifier\":\"7fcf0421-415f-320a-f564-1a79dd29b7c6\"},\"labelIndex\":1,\"zIndex\":0,\"selectedRelationships\":[\"matched\"],\"backPressureObjectThreshold\":10000,\"backPressureDataSizeThreshold\":\"1 GB\",\"flowFileExpiration\":\"0 sec\",\"prioritizers\":[],\"bends\":[],\"loadBalanceStrategy\":\"DO_NOT_LOAD_BALANCE\",\"partitioningAttribute\":\"\",\"loadBalanceCompression\":\"DO_NOT_COMPRESS\",\"componentType\":\"CONNECTION\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"54a6aeb5-ac3e-3a8e-aa19-9b91b51c7417\",\"instanceIdentifier\":\"4f98bdce-7151-3c3e-a74f-11e25089487f\",\"name\":\"\",\"source\":{\"id\":\"d44f74cd-dbbc-3269-bc31-878d24047525\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"RouteOnAttribute\",\"comments\":\"\",\"instanceIdentifier\":\"6e9fdf75-5bb5-31c2-464c-d7d91450bfaa\"},\"destination\":{\"id\":\"3147a800-8f3e-3530-82a3-12f3be7f207d\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"UpdateAttribute\",\"comments\":\"\",\"instanceIdentifier\":\"1b20bd0d-e55c-3776-e56c-3dca66e8b54d\"},\"labelIndex\":1,\"zIndex\":0,\"selectedRelationships\":[\"isNextPage\"],\"backPressureObjectThreshold\":10000,\"backPressureDataSizeThreshold\":\"1 GB\",\"flowFileExpiration\":\"0 sec\",\"prioritizers\":[],\"bends\":[],\"loadBalanceStrategy\":\"DO_NOT_LOAD_BALANCE\",\"partitioningAttribute\":\"\",\"loadBalanceCompression\":\"DO_NOT_COMPRESS\",\"componentType\":\"CONNECTION\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"c95c1349-efe8-38ed-9dba-b066134ab8bf\",\"instanceIdentifier\":\"4d9498a9-e5d4-32eb-341c-d44ae9fd498e\",\"name\":\"\",\"source\":{\"id\":\"18f7ca0d-efa0-3717-bc62-182ff3372685\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"RouteOnAttribute\",\"comments\":\"\",\"instanceIdentifier\":\"7fcf0421-415f-320a-f564-1a79dd29b7c6\"},\"destination\":{\"id\":\"e02cc50f-a7ec-374b-9c88-8f8f4c902184\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"LogAttribute\",\"comments\":\"\",\"instanceIdentifier\":\"7576e7a8-47b0-3447-57d5-1a503ca62983\"},\"labelIndex\":1,\"zIndex\":0,\"selectedRelationships\":[\"unmatched\"],\"backPressureObjectThreshold\":10000,\"backPressureDataSizeThreshold\":\"1 GB\",\"flowFileExpiration\":\"0 sec\",\"prioritizers\":[],\"bends\":[],\"loadBalanceStrategy\":\"DO_NOT_LOAD_BALANCE\",\"partitioningAttribute\":\"\",\"loadBalanceCompression\":\"DO_NOT_COMPRESS\",\"componentType\":\"CONNECTION\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"ac8a0031-79c0-3a81-80a4-757aeaf4ceb0\",\"instanceIdentifier\":\"5277a416-69d1-3fc1-0645-068984a15ee9\",\"name\":\"\",\"source\":{\"id\":\"3147a800-8f3e-3530-82a3-12f3be7f207d\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"UpdateAttribute\",\"comments\":\"\",\"instanceIdentifier\":\"1b20bd0d-e55c-3776-e56c-3dca66e8b54d\"},\"destination\":{\"id\":\"657344b2-ed4c-37e4-8142-98f9bf894d8d\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"ExecuteSQLRecord\",\"comments\":\"\",\"instanceIdentifier\":\"aef3c4e6-3e36-31b8-ba55-32c3fcf9b0dc\"},\"labelIndex\":1,\"zIndex\":0,\"selectedRelationships\":[\"success\"],\"backPressureObjectThreshold\":10000,\"backPressureDataSizeThreshold\":\"1 GB\",\"flowFileExpiration\":\"0 sec\",\"prioritizers\":[],\"bends\":[],\"loadBalanceStrategy\":\"DO_NOT_LOAD_BALANCE\",\"partitioningAttribute\":\"\",\"loadBalanceCompression\":\"DO_NOT_COMPRESS\",\"componentType\":\"CONNECTION\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"afe7901b-f5f1-3bec-8dea-8a41c98335bd\",\"instanceIdentifier\":\"8c87bab5-1a1a-3dbe-de21-9d512a633766\",\"name\":\"\",\"source\":{\"id\":\"5cba0329-554c-3ec2-a72a-9bd9a13525b0\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"GenerateFlowFile\",\"comments\":\"\",\"instanceIdentifier\":\"70de59ae-cd11-3285-0545-6a7f7e8713d7\"},\"destination\":{\"id\":\"657344b2-ed4c-37e4-8142-98f9bf894d8d\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"ExecuteSQLRecord\",\"comments\":\"\",\"instanceIdentifier\":\"aef3c4e6-3e36-31b8-ba55-32c3fcf9b0dc\"},\"labelIndex\":1,\"zIndex\":0,\"selectedRelationships\":[\"success\"],\"backPressureObjectThreshold\":10000,\"backPressureDataSizeThreshold\":\"1 GB\",\"flowFileExpiration\":\"0 sec\",\"prioritizers\":[],\"bends\":[],\"loadBalanceStrategy\":\"DO_NOT_LOAD_BALANCE\",\"partitioningAttribute\":\"\",\"loadBalanceCompression\":\"DO_NOT_COMPRESS\",\"componentType\":\"CONNECTION\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"5876fb05-0219-39d5-95b8-647740c25f37\",\"instanceIdentifier\":\"81468a99-bdee-3d05-a607-c5f87a84118c\",\"name\":\"\",\"source\":{\"id\":\"ea275653-a426-3e22-901a-7a3f546b9f67\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"Upload_resource\",\"comments\":\"\",\"instanceIdentifier\":\"0ff8e004-0ced-38c0-d0d0-8ccb5249bfe5\"},\"destination\":{\"id\":\"18b4bbe3-ac28-3b40-b3cf-62a471b2cfbe\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"JoltTransformJSON\",\"comments\":\"\",\"instanceIdentifier\":\"a3dd67ac-018e-1000-5877-06f26550b646\"},\"labelIndex\":1,\"zIndex\":0,\"selectedRelationships\":[\"Response\"],\"backPressureObjectThreshold\":10000,\"backPressureDataSizeThreshold\":\"1 GB\",\"flowFileExpiration\":\"0 sec\",\"prioritizers\":[],\"bends\":[],\"loadBalanceStrategy\":\"DO_NOT_LOAD_BALANCE\",\"partitioningAttribute\":\"\",\"loadBalanceCompression\":\"DO_NOT_COMPRESS\",\"componentType\":\"CONNECTION\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"4660df26-afd7-39c2-8a42-69a1761bb238\",\"instanceIdentifier\":\"a3e47834-018e-1000-e913-d33c8b0ce209\",\"name\":\"\",\"source\":{\"id\":\"18b4bbe3-ac28-3b40-b3cf-62a471b2cfbe\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"JoltTransformJSON\",\"comments\":\"\",\"instanceIdentifier\":\"a3dd67ac-018e-1000-5877-06f26550b646\"},\"destination\":{\"id\":\"fc4628c0-8a51-3385-9b0c-bfbb4dbebd8e\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"PutDatabaseRecord\",\"comments\":\"\",\"instanceIdentifier\":\"b4713614-7973-3797-1b7d-0da775de6565\"},\"labelIndex\":1,\"zIndex\":0,\"selectedRelationships\":[\"success\"],\"backPressureObjectThreshold\":10000,\"backPressureDataSizeThreshold\":\"1 GB\",\"flowFileExpiration\":\"0 sec\",\"prioritizers\":[],\"bends\":[],\"loadBalanceStrategy\":\"DO_NOT_LOAD_BALANCE\",\"partitioningAttribute\":\"\",\"loadBalanceCompression\":\"DO_NOT_COMPRESS\",\"componentType\":\"CONNECTION\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"10fc0f2c-08c9-312e-97b4-b88fb0d0ea51\",\"instanceIdentifier\":\"296bb1f0-018f-1000-dd06-504743bd104e\",\"name\":\"\",\"source\":{\"id\":\"657344b2-ed4c-37e4-8142-98f9bf894d8d\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"ExecuteSQLRecord\",\"comments\":\"\",\"instanceIdentifier\":\"aef3c4e6-3e36-31b8-ba55-32c3fcf9b0dc\"},\"destination\":{\"id\":\"65e51e90-979a-3af0-870e-b92a7e9ac50b\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"LogAttribute\",\"comments\":\"\",\"instanceIdentifier\":\"296b910d-018f-1000-04f0-768ddb6f0847\"},\"labelIndex\":1,\"zIndex\":0,\"selectedRelationships\":[\"failure\"],\"backPressureObjectThreshold\":10000,\"backPressureDataSizeThreshold\":\"1 GB\",\"flowFileExpiration\":\"0 sec\",\"prioritizers\":[],\"bends\":[],\"loadBalanceStrategy\":\"DO_NOT_LOAD_BALANCE\",\"partitioningAttribute\":\"\",\"loadBalanceCompression\":\"DO_NOT_COMPRESS\",\"componentType\":\"CONNECTION\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"a3d62e78-9c53-3a51-a0b2-e3783e4b8595\",\"instanceIdentifier\":\"0f84770d-d50f-39d5-93bd-57a65efa111a\",\"name\":\"\",\"source\":{\"id\":\"fc4628c0-8a51-3385-9b0c-bfbb4dbebd8e\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"PutDatabaseRecord\",\"comments\":\"\",\"instanceIdentifier\":\"b4713614-7973-3797-1b7d-0da775de6565\"},\"destination\":{\"id\":\"67e6c469-d4f8-39f0-9892-54a97eee43cc\",\"type\":\"PROCESSOR\",\"groupId\":\"c56ff54e-5a6a-331c-8923-22615778b71c\",\"name\":\"LogAttribute\",\"comments\":\"\",\"instanceIdentifier\":\"fd9b6721-98e6-33f9-9932-5df18dfbb35b\"},\"labelIndex\":1,\"zIndex\":0,\"selectedRelationships\":[\"failure\",\"retry\"],\"backPressureObjectThreshold\":10000,\"backPressureDataSizeThreshold\":\"1 GB\",\"flowFileExpiration\":\"0 sec\",\"prioritizers\":[],\"bends\":[],\"loadBalanceStrategy\":\"DO_NOT_LOAD_BALANCE\",\"partitioningAttribute\":\"\",\"loadBalanceCompression\":\"DO_NOT_COMPRESS\",\"componentType\":\"CONNECTION\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"}],\"labels\":[],\"funnels\":[],\"controllerServices\":[{\"identifier\":\"cc5497b7-3842-373d-a3d5-f0e54d6adac3\",\"instanceIdentifier\":\"6508aab1-4ace-3066-08a9-8981869a1d24\",\"name\":\"db-postgres-old-app\",\"comments\":\"\",\"type\":\"org.apache.nifi.dbcp.DBCPConnectionPool\",\"bundle\":{\"group\":\"org.apache.nifi\",\"artifact\":\"nifi-dbcp-service-nar\",\"version\":\"2.0.0-M2\"},\"properties\":{\"dbcp-min-idle-conns\":\"0\",\"Max Wait Time\":\"500 millis\",\"Database Driver Class Name\":\"#{db_driver_class}\",\"dbcp-min-evictable-idle-time\":\"30 mins\",\"kerberos-principal\":null,\"Max Total Connections\":\"8\",\"kerberos-credentials-service\":null,\"dbcp-max-conn-lifetime\":\"-1\",\"Validation-query\":null,\"Database Connection URL\":\"#{db_postgres_old_app_connection_url}\",\"dbcp-time-between-eviction-runs\":\"-1\",\"Database User\":\"#{db_postgres_old_app_user}\",\"kerberos-user-service\":null,\"dbcp-soft-min-evictable-idle-time\":\"-1\",\"database-driver-locations\":null,\"dbcp-max-idle-conns\":\"8\",\"Password\":\"#{db_postgres_old_app_password}\"},\"propertyDescriptors\":{\"kerberos-password\":{\"name\":\"kerberos-password\",\"displayName\":\"Kerberos Password\",\"identifiesControllerService\":false,\"sensitive\":true,\"dynamic\":false},\"dbcp-min-idle-conns\":{\"name\":\"dbcp-min-idle-conns\",\"displayName\":\"Minimum Idle Connections\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Max Wait Time\":{\"name\":\"Max Wait Time\",\"displayName\":\"Max Wait Time\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Database Driver Class Name\":{\"name\":\"Database Driver Class Name\",\"displayName\":\"Database Driver Class Name\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"dbcp-min-evictable-idle-time\":{\"name\":\"dbcp-min-evictable-idle-time\",\"displayName\":\"Minimum Evictable Idle Time\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"kerberos-principal\":{\"name\":\"kerberos-principal\",\"displayName\":\"Kerberos Principal\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Max Total Connections\":{\"name\":\"Max Total Connections\",\"displayName\":\"Max Total Connections\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"kerberos-credentials-service\":{\"name\":\"kerberos-credentials-service\",\"displayName\":\"Kerberos Credentials Service\",\"identifiesControllerService\":true,\"sensitive\":false,\"dynamic\":false},\"dbcp-max-conn-lifetime\":{\"name\":\"dbcp-max-conn-lifetime\",\"displayName\":\"Max Connection Lifetime\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Validation-query\":{\"name\":\"Validation-query\",\"displayName\":\"Validation query\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Database Connection URL\":{\"name\":\"Database Connection URL\",\"displayName\":\"Database Connection URL\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"dbcp-time-between-eviction-runs\":{\"name\":\"dbcp-time-between-eviction-runs\",\"displayName\":\"Time Between Eviction Runs\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Database User\":{\"name\":\"Database User\",\"displayName\":\"Database User\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"kerberos-user-service\":{\"name\":\"kerberos-user-service\",\"displayName\":\"Kerberos User Service\",\"identifiesControllerService\":true,\"sensitive\":false,\"dynamic\":false},\"dbcp-soft-min-evictable-idle-time\":{\"name\":\"dbcp-soft-min-evictable-idle-time\",\"displayName\":\"Soft Minimum Evictable Idle Time\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"database-driver-locations\":{\"name\":\"database-driver-locations\",\"displayName\":\"Database Driver Location(s)\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false,\"resourceDefinition\":{\"cardinality\":\"MULTIPLE\",\"resourceTypes\":[\"FILE\",\"DIRECTORY\",\"URL\"]}},\"dbcp-max-idle-conns\":{\"name\":\"dbcp-max-idle-conns\",\"displayName\":\"Max Idle Connections\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Password\":{\"name\":\"Password\",\"displayName\":\"Password\",\"identifiesControllerService\":false,\"sensitive\":true,\"dynamic\":false}},\"controllerServiceApis\":[{\"type\":\"org.apache.nifi.dbcp.DBCPService\",\"bundle\":{\"group\":\"org.apache.nifi\",\"artifact\":\"nifi-standard-services-api-nar\",\"version\":\"2.0.0-M2\"}}],\"scheduledState\":\"DISABLED\",\"bulletinLevel\":\"WARN\",\"componentType\":\"CONTROLLER_SERVICE\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"b82929d9-2e01-39b8-b8d1-1882a65235e5\",\"instanceIdentifier\":\"dabace1a-f383-38cf-a9b3-35e90c5577ed\",\"name\":\"JsonTreeReader\",\"comments\":\"\",\"type\":\"org.apache.nifi.json.JsonTreeReader\",\"bundle\":{\"group\":\"org.apache.nifi\",\"artifact\":\"nifi-record-serialization-services-nar\",\"version\":\"2.0.0-M2\"},\"properties\":{\"schema-reference-reader\":null,\"schema-branch\":null,\"Max String Length\":\"20 MB\",\"schema-application-strategy\":\"SELECTED_PART\",\"Timestamp Format\":null,\"schema-inference-cache\":null,\"Date Format\":null,\"schema-name\":\"${schema.name}\",\"starting-field-strategy\":\"ROOT_NODE\",\"schema-registry\":null,\"starting-field-name\":null,\"Time Format\":null,\"schema-access-strategy\":\"infer-schema\",\"schema-version\":null,\"schema-text\":\"${avro.schema}\",\"Allow Comments\":\"false\"},\"propertyDescriptors\":{\"schema-reference-reader\":{\"name\":\"schema-reference-reader\",\"displayName\":\"Schema Reference Reader\",\"identifiesControllerService\":true,\"sensitive\":false,\"dynamic\":false},\"schema-branch\":{\"name\":\"schema-branch\",\"displayName\":\"Schema Branch\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Max String Length\":{\"name\":\"Max String Length\",\"displayName\":\"Max String Length\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"schema-application-strategy\":{\"name\":\"schema-application-strategy\",\"displayName\":\"Schema Application Strategy\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Timestamp Format\":{\"name\":\"Timestamp Format\",\"displayName\":\"Timestamp Format\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"schema-inference-cache\":{\"name\":\"schema-inference-cache\",\"displayName\":\"Schema Inference Cache\",\"identifiesControllerService\":true,\"sensitive\":false,\"dynamic\":false},\"Date Format\":{\"name\":\"Date Format\",\"displayName\":\"Date Format\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"schema-name\":{\"name\":\"schema-name\",\"displayName\":\"Schema Name\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"starting-field-strategy\":{\"name\":\"starting-field-strategy\",\"displayName\":\"Starting Field Strategy\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"schema-registry\":{\"name\":\"schema-registry\",\"displayName\":\"Schema Registry\",\"identifiesControllerService\":true,\"sensitive\":false,\"dynamic\":false},\"starting-field-name\":{\"name\":\"starting-field-name\",\"displayName\":\"Starting Field Name\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Time Format\":{\"name\":\"Time Format\",\"displayName\":\"Time Format\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"schema-access-strategy\":{\"name\":\"schema-access-strategy\",\"displayName\":\"Schema Access Strategy\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"schema-version\":{\"name\":\"schema-version\",\"displayName\":\"Schema Version\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"schema-text\":{\"name\":\"schema-text\",\"displayName\":\"Schema Text\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Allow Comments\":{\"name\":\"Allow Comments\",\"displayName\":\"Allow Comments\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false}},\"controllerServiceApis\":[{\"type\":\"org.apache.nifi.serialization.RecordReaderFactory\",\"bundle\":{\"group\":\"org.apache.nifi\",\"artifact\":\"nifi-standard-services-api-nar\",\"version\":\"2.0.0-M2\"}}],\"scheduledState\":\"DISABLED\",\"bulletinLevel\":\"WARN\",\"componentType\":\"CONTROLLER_SERVICE\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"9c593afe-ca40-3350-b57a-15455667fb3e\",\"instanceIdentifier\":\"b6aee3d5-c812-3163-d7b6-1b6afba28866\",\"name\":\"JsonRecordSetWriter\",\"comments\":\"\",\"type\":\"org.apache.nifi.json.JsonRecordSetWriter\",\"bundle\":{\"group\":\"org.apache.nifi\",\"artifact\":\"nifi-record-serialization-services-nar\",\"version\":\"2.0.0-M2\"},\"properties\":{\"schema-reference-reader\":null,\"schema-branch\":null,\"compression-level\":\"1\",\"schema-cache\":null,\"Timestamp Format\":null,\"Date Format\":null,\"Pretty Print JSON\":\"false\",\"compression-format\":\"none\",\"Schema Write Strategy\":\"no-schema\",\"suppress-nulls\":\"never-suppress\",\"output-grouping\":\"output-array\",\"schema-name\":\"${schema.name}\",\"schema-registry\":null,\"Time Format\":null,\"schema-access-strategy\":\"inherit-record-schema\",\"schema-version\":null,\"schema-text\":\"${avro.schema}\",\"Schema Reference Writer\":null},\"propertyDescriptors\":{\"schema-reference-reader\":{\"name\":\"schema-reference-reader\",\"displayName\":\"Schema Reference Reader\",\"identifiesControllerService\":true,\"sensitive\":false,\"dynamic\":false},\"schema-branch\":{\"name\":\"schema-branch\",\"displayName\":\"Schema Branch\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"compression-level\":{\"name\":\"compression-level\",\"displayName\":\"Compression Level\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"schema-cache\":{\"name\":\"schema-cache\",\"displayName\":\"Schema Cache\",\"identifiesControllerService\":true,\"sensitive\":false,\"dynamic\":false},\"Timestamp Format\":{\"name\":\"Timestamp Format\",\"displayName\":\"Timestamp Format\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Date Format\":{\"name\":\"Date Format\",\"displayName\":\"Date Format\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Pretty Print JSON\":{\"name\":\"Pretty Print JSON\",\"displayName\":\"Pretty Print JSON\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"compression-format\":{\"name\":\"compression-format\",\"displayName\":\"Compression Format\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Schema Write Strategy\":{\"name\":\"Schema Write Strategy\",\"displayName\":\"Schema Write Strategy\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"suppress-nulls\":{\"name\":\"suppress-nulls\",\"displayName\":\"Suppress Null Values\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"output-grouping\":{\"name\":\"output-grouping\",\"displayName\":\"Output Grouping\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"schema-name\":{\"name\":\"schema-name\",\"displayName\":\"Schema Name\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"schema-registry\":{\"name\":\"schema-registry\",\"displayName\":\"Schema Registry\",\"identifiesControllerService\":true,\"sensitive\":false,\"dynamic\":false},\"Time Format\":{\"name\":\"Time Format\",\"displayName\":\"Time Format\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"schema-access-strategy\":{\"name\":\"schema-access-strategy\",\"displayName\":\"Schema Access Strategy\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"schema-version\":{\"name\":\"schema-version\",\"displayName\":\"Schema Version\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"schema-text\":{\"name\":\"schema-text\",\"displayName\":\"Schema Text\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Schema Reference Writer\":{\"name\":\"Schema Reference Writer\",\"displayName\":\"Schema Reference Writer\",\"identifiesControllerService\":true,\"sensitive\":false,\"dynamic\":false}},\"controllerServiceApis\":[{\"type\":\"org.apache.nifi.serialization.RecordSetWriterFactory\",\"bundle\":{\"group\":\"org.apache.nifi\",\"artifact\":\"nifi-standard-services-api-nar\",\"version\":\"2.0.0-M2\"}}],\"scheduledState\":\"DISABLED\",\"bulletinLevel\":\"WARN\",\"componentType\":\"CONTROLLER_SERVICE\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"e55be60a-98e8-32e6-8467-38c6497f6798\",\"instanceIdentifier\":\"d31c45dc-8d9e-34be-cafb-da642dc6751a\",\"name\":\"db-postgres-new-app\",\"comments\":\"\",\"type\":\"org.apache.nifi.dbcp.DBCPConnectionPool\",\"bundle\":{\"group\":\"org.apache.nifi\",\"artifact\":\"nifi-dbcp-service-nar\",\"version\":\"2.0.0-M2\"},\"properties\":{\"dbcp-min-idle-conns\":\"0\",\"Max Wait Time\":\"500 millis\",\"Database Driver Class Name\":\"#{db_driver_class}\",\"dbcp-min-evictable-idle-time\":\"30 mins\",\"kerberos-principal\":null,\"Max Total Connections\":\"8\",\"kerberos-credentials-service\":null,\"dbcp-max-conn-lifetime\":\"-1\",\"Validation-query\":null,\"Database Connection URL\":\"#{db_postgres_new_app_connection_url}\",\"dbcp-time-between-eviction-runs\":\"-1\",\"Database User\":\"#{db_postgres_new_app_user}\",\"kerberos-user-service\":null,\"dbcp-soft-min-evictable-idle-time\":\"-1\",\"database-driver-locations\":null,\"dbcp-max-idle-conns\":\"8\",\"Password\":\"#{db_postgres_new_app_password}\"},\"propertyDescriptors\":{\"kerberos-password\":{\"name\":\"kerberos-password\",\"displayName\":\"Kerberos Password\",\"identifiesControllerService\":false,\"sensitive\":true,\"dynamic\":false},\"dbcp-min-idle-conns\":{\"name\":\"dbcp-min-idle-conns\",\"displayName\":\"Minimum Idle Connections\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Max Wait Time\":{\"name\":\"Max Wait Time\",\"displayName\":\"Max Wait Time\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Database Driver Class Name\":{\"name\":\"Database Driver Class Name\",\"displayName\":\"Database Driver Class Name\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"dbcp-min-evictable-idle-time\":{\"name\":\"dbcp-min-evictable-idle-time\",\"displayName\":\"Minimum Evictable Idle Time\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"kerberos-principal\":{\"name\":\"kerberos-principal\",\"displayName\":\"Kerberos Principal\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Max Total Connections\":{\"name\":\"Max Total Connections\",\"displayName\":\"Max Total Connections\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"kerberos-credentials-service\":{\"name\":\"kerberos-credentials-service\",\"displayName\":\"Kerberos Credentials Service\",\"identifiesControllerService\":true,\"sensitive\":false,\"dynamic\":false},\"dbcp-max-conn-lifetime\":{\"name\":\"dbcp-max-conn-lifetime\",\"displayName\":\"Max Connection Lifetime\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Validation-query\":{\"name\":\"Validation-query\",\"displayName\":\"Validation query\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Database Connection URL\":{\"name\":\"Database Connection URL\",\"displayName\":\"Database Connection URL\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"dbcp-time-between-eviction-runs\":{\"name\":\"dbcp-time-between-eviction-runs\",\"displayName\":\"Time Between Eviction Runs\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Database User\":{\"name\":\"Database User\",\"displayName\":\"Database User\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"kerberos-user-service\":{\"name\":\"kerberos-user-service\",\"displayName\":\"Kerberos User Service\",\"identifiesControllerService\":true,\"sensitive\":false,\"dynamic\":false},\"dbcp-soft-min-evictable-idle-time\":{\"name\":\"dbcp-soft-min-evictable-idle-time\",\"displayName\":\"Soft Minimum Evictable Idle Time\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"database-driver-locations\":{\"name\":\"database-driver-locations\",\"displayName\":\"Database Driver Location(s)\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false,\"resourceDefinition\":{\"cardinality\":\"MULTIPLE\",\"resourceTypes\":[\"FILE\",\"DIRECTORY\",\"URL\"]}},\"dbcp-max-idle-conns\":{\"name\":\"dbcp-max-idle-conns\",\"displayName\":\"Max Idle Connections\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"Password\":{\"name\":\"Password\",\"displayName\":\"Password\",\"identifiesControllerService\":false,\"sensitive\":true,\"dynamic\":false}},\"controllerServiceApis\":[{\"type\":\"org.apache.nifi.dbcp.DBCPService\",\"bundle\":{\"group\":\"org.apache.nifi\",\"artifact\":\"nifi-standard-services-api-nar\",\"version\":\"2.0.0-M2\"}}],\"scheduledState\":\"DISABLED\",\"bulletinLevel\":\"WARN\",\"componentType\":\"CONTROLLER_SERVICE\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"},{\"identifier\":\"5c442a5d-ff5c-36a3-abb1-dd08a0fa2087\",\"instanceIdentifier\":\"fd7b5d8b-20c0-3d57-ccbe-1ae2bf511104\",\"name\":\"GCPCredentialsControllerService\",\"comments\":\"\",\"type\":\"org.apache.nifi.processors.gcp.credentials.service.GCPCredentialsControllerService\",\"bundle\":{\"group\":\"org.apache.nifi\",\"artifact\":\"nifi-gcp-nar\",\"version\":\"2.0.0-M2\"},\"properties\":{\"proxy-configuration-service\":null,\"compute-engine-credentials\":\"false\",\"application-default-credentials\":\"false\",\"service-account-json-file\":null},\"propertyDescriptors\":{\"proxy-configuration-service\":{\"name\":\"proxy-configuration-service\",\"displayName\":\"Proxy Configuration Service\",\"identifiesControllerService\":true,\"sensitive\":false,\"dynamic\":false},\"compute-engine-credentials\":{\"name\":\"compute-engine-credentials\",\"displayName\":\"Use Compute Engine Credentials\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"application-default-credentials\":{\"name\":\"application-default-credentials\",\"displayName\":\"Use Application Default Credentials\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false},\"service-account-json-file\":{\"name\":\"service-account-json-file\",\"displayName\":\"Service Account JSON File\",\"identifiesControllerService\":false,\"sensitive\":false,\"dynamic\":false,\"resourceDefinition\":{\"cardinality\":\"SINGLE\",\"resourceTypes\":[\"FILE\"]}},\"service-account-json\":{\"name\":\"service-account-json\",\"displayName\":\"Service Account JSON\",\"identifiesControllerService\":false,\"sensitive\":true,\"dynamic\":false}},\"controllerServiceApis\":[{\"type\":\"org.apache.nifi.gcp.credentials.service.GCPCredentialsService\",\"bundle\":{\"group\":\"org.apache.nifi\",\"artifact\":\"nifi-gcp-services-api-nar\",\"version\":\"2.0.0-M2\"}}],\"scheduledState\":\"DISABLED\",\"bulletinLevel\":\"WARN\",\"componentType\":\"CONTROLLER_SERVICE\",\"groupIdentifier\":\"c56ff54e-5a6a-331c-8923-22615778b71c\"}],\"parameterContextName\":\"psci-dev\",\"defaultFlowFileExpiration\":\"0 sec\",\"defaultBackPressureObjectThreshold\":10000,\"defaultBackPressureDataSizeThreshold\":\"1 GB\",\"scheduledState\":\"ENABLED\",\"executionEngine\":\"INHERITED\",\"maxConcurrentTasks\":1,\"statelessFlowTimeout\":\"1 min\",\"logFileSuffix\":\"\",\"flowFileConcurrency\":\"UNBOUNDED\",\"flowFileOutboundPolicy\":\"STREAM_WHEN_AVAILABLE\",\"componentType\":\"PROCESS_GROUP\"},\"externalControllerServices\":{},\"parameterContexts\":{\"psci-dev\":{\"name\":\"psci-dev\",\"parameters\":[{\"name\":\"fpds_blob_path\",\"description\":\"\",\"sensitive\":false,\"provided\":false,\"value\":\"fpds/\"},{\"name\":\"sam_local_path\",\"description\":\"\",\"sensitive\":false,\"provided\":false,\"value\":\"/home/gwl/deepakd/Learnings/nifi/project/alpha/sam/\"},{\"name\":\"azure_storage_account_name\",\"description\":\"\",\"sensitive\":true,\"provided\":false},{\"name\":\"db_postgres_new_app_user\",\"description\":\"\",\"sensitive\":false,\"provided\":false,\"value\":\"postgres\"},{\"name\":\"sam_api_base_url\",\"description\":\"\",\"sensitive\":false,\"provided\":false,\"value\":\"https://api.sam.gov/opportunities/v2/search\"},{\"name\":\"fpds_base_url\",\"description\":\"\",\"sensitive\":false,\"provided\":false,\"value\":\"https://www.fpds.gov/ezsearch/FEEDS/ATOM\"},{\"name\":\"db_postgres_new_app_password\",\"description\":\"\",\"sensitive\":true,\"provided\":false},{\"name\":\"db_postgres_new_app_connection_url\",\"description\":\"\",\"sensitive\":false,\"provided\":false,\"value\":\"jdbc:postgresql://localhost:54322/postgres?stringtype=unspecified\"},{\"name\":\"openstreetmap_api_base_url\",\"description\":\"\",\"sensitive\":false,\"provided\":false,\"value\":\"https://nominatim.openstreetmap.org\"},{\"name\":\"db_postgres_old_app_password\",\"description\":\"\",\"sensitive\":true,\"provided\":false},{\"name\":\"db_postgres_old_app_user\",\"description\":\"\",\"sensitive\":false,\"provided\":false,\"value\":\"psci-stag-api-pg-user\"},{\"name\":\"db_driver_class\",\"description\":\"\",\"sensitive\":false,\"provided\":false,\"value\":\"org.postgresql.Driver\"},{\"name\":\"db_postgres_old_app_connection_url\",\"description\":\"\",\"sensitive\":false,\"provided\":false,\"value\":\"jdbc:postgresql://35.184.210.241:5432/psci_stag_api_pg?stringtype=unspecified\"},{\"name\":\"supabase_sam_resource_bucket_name\",\"description\":\"\",\"sensitive\":false,\"provided\":false,\"value\":\"sam-resources\"},{\"name\":\"gcp_storage_acc_json\",\"description\":\"\",\"sensitive\":true,\"provided\":false},{\"name\":\"sam_api_key\",\"description\":\"\",\"sensitive\":false,\"provided\":false,\"value\":\"nmceMcmm96k3KErbXIa8myfq4AkorbTRhMNxCjAm\"},{\"name\":\"supabase_service_role_key\",\"description\":\"\",\"sensitive\":true,\"provided\":false},{\"name\":\"azure_storage_container_name\",\"description\":\"\",\"sensitive\":false,\"provided\":false,\"value\":\"nifistore\"},{\"name\":\"azure_storage_account_key\",\"description\":\"\",\"sensitive\":true,\"provided\":false},{\"name\":\"xml_to_json_xslt_file_path\",\"description\":\"\",\"sensitive\":false,\"provided\":false,\"value\":\"/home/gwl/deepakd/Learnings/nifi/project/xslt/xml-to-json.xsl\"},{\"name\":\"supabase_folder_resource_bucket_name\",\"description\":\"\",\"sensitive\":false,\"provided\":false,\"value\":\"folder-resources\"},{\"name\":\"sam_blob_path\",\"description\":\"\",\"sensitive\":false,\"provided\":false,\"value\":\"sam/\"},{\"name\":\"supabase_storage_object_url\",\"description\":\"\",\"sensitive\":false,\"provided\":false,\"value\":\"http://127.0.0.1:54321/storage/v1/object\"},{\"name\":\"supabase_api_key\",\"description\":\"\",\"sensitive\":true,\"provided\":false},{\"name\":\"fpds_local_path\",\"description\":\"\",\"sensitive\":false,\"provided\":false,\"value\":\"/home/gwl/deepakd/Learnings/nifi/project/fpds/output/\"}],\"inheritedParameterContexts\":[],\"componentType\":\"PARAMETER_CONTEXT\"}},\"flowEncodingVersion\":\"1.0\",\"parameterProviders\":{},\"latest\":false}\n/Users/luke/code/psci/chatbot-ui-2/public/pdfjs/local/viewer.html:582:                  <span class=\"title\" data-l10n-id=\"pdfjs-editor-new-alt-text-error-title\"></span>\n/Users/luke/code/psci/chatbot-ui-2/public/pdfjs/local/viewer.html:583:                  <span  class=\"description\" data-l10n-id=\"pdfjs-editor-new-alt-text-error-description\"></span>\n/Users/luke/code/psci/chatbot-ui-2/public/pdfjs/local/viewer.html:585:                <button id=\"newAltTextCloseButton\" class=\"closeButton\" type=\"button\" tabindex=\"0\"><span data-l10n-id=\"pdfjs-editor-new-alt-text-error-close-button\"></span></button>\n/Users/luke/code/psci/chatbot-ui-2/public/pdfjs/local/viewer.html:700:                    <span class=\"title\" data-l10n-id=\"pdfjs-editor-add-signature-image-upload-error-title\"></span>\n/Users/luke/code/psci/chatbot-ui-2/public/pdfjs/local/viewer.html:701:                    <span class=\"description\" data-l10n-id=\"pdfjs-editor-add-signature-image-upload-error-description\"></span>\n/Users/luke/code/psci/chatbot-ui-2/public/pdfjs/local/viewer.html:703:                  <button id=\"addSignatureErrorCloseButton\" class=\"closeButton\" type=\"button\" tabindex=\"0\"><span data-l10n-id=\"pdfjs-editor-add-signature-error-close-button\"></span></button>\n/Users/luke/code/psci/chatbot-ui-2/ai/tests/unit/test_pdf_to_images.py:81:    with patch('pymupdf.Document', side_effect = pymupdf.FileDataError(\"Corrupted PDF\")):\n/Users/luke/code/psci/chatbot-ui-2/ai/tests/unit/test_pdf_to_images.py:88:def test_pdf_binary_to_images_page_conversion_error(mock_pdf_document: MagicMock, caplog: pytest.LogCaptureFixture) -> None:\n/Users/luke/code/psci/chatbot-ui-2/public/pdfjs/local/pdf.worker.min.mjs:22:const isNodeJS=typeof process===\"object\"&&process+\"\"===\"[object process]\"&&!process.versions.nw&&!(process.versions.electron&&process.type&&process.type!==\"browser\");const FONT_IDENTITY_MATRIX=[.001,0,0,.001,0,0];const LINE_FACTOR=1.35;const LINE_DESCENT_FACTOR=.35;const BASELINE_FACTOR=LINE_DESCENT_FACTOR/LINE_FACTOR;const RenderingIntentFlag={ANY:1,DISPLAY:2,PRINT:4,SAVE:8,ANNOTATIONS_FORMS:16,ANNOTATIONS_STORAGE:32,ANNOTATIONS_DISABLE:64,IS_EDITING:128,OPLIST:256};const AnnotationMode={DISABLE:0,ENABLE:1,ENABLE_FORMS:2,ENABLE_STORAGE:3};const AnnotationEditorPrefix=\"pdfjs_internal_editor_\";const AnnotationEditorType={DISABLE:-1,NONE:0,FREETEXT:3,HIGHLIGHT:9,STAMP:13,INK:15,SIGNATURE:101};const AnnotationEditorParamsType={RESIZE:1,CREATE:2,FREETEXT_SIZE:11,FREETEXT_COLOR:12,FREETEXT_OPACITY:13,INK_COLOR:21,INK_THICKNESS:22,INK_OPACITY:23,HIGHLIGHT_COLOR:31,HIGHLIGHT_DEFAULT_COLOR:32,HIGHLIGHT_THICKNESS:33,HIGHLIGHT_FREE:34,HIGHLIGHT_SHOW_ALL:35,DRAW_STEP:41};const PermissionFlag={PRINT:4,MODIFY_CONTENTS:8,COPY:16,MODIFY_ANNOTATIONS:32,FILL_INTERACTIVE_FORMS:256,COPY_FOR_ACCESSIBILITY:512,ASSEMBLE:1024,PRINT_HIGH_QUALITY:2048};const TextRenderingMode={FILL:0,STROKE:1,FILL_STROKE:2,INVISIBLE:3,FILL_ADD_TO_PATH:4,STROKE_ADD_TO_PATH:5,FILL_STROKE_ADD_TO_PATH:6,ADD_TO_PATH:7,FILL_STROKE_MASK:3,ADD_TO_PATH_FLAG:4};const ImageKind={GRAYSCALE_1BPP:1,RGB_24BPP:2,RGBA_32BPP:3};const AnnotationType={TEXT:1,LINK:2,FREETEXT:3,LINE:4,SQUARE:5,CIRCLE:6,POLYGON:7,POLYLINE:8,HIGHLIGHT:9,UNDERLINE:10,SQUIGGLY:11,STRIKEOUT:12,STAMP:13,CARET:14,INK:15,POPUP:16,FILEATTACHMENT:17,SOUND:18,MOVIE:19,WIDGET:20,SCREEN:21,PRINTERMARK:22,TRAPNET:23,WATERMARK:24,THREED:25,REDACT:26};const AnnotationReplyType={GROUP:\"Group\",REPLY:\"R\"};const AnnotationFlag={INVISIBLE:1,HIDDEN:2,PRINT:4,NOZOOM:8,NOROTATE:16,NOVIEW:32,READONLY:64,LOCKED:128,TOGGLENOVIEW:256,LOCKEDCONTENTS:512};const AnnotationFieldFlag={READONLY:1,REQUIRED:2,NOEXPORT:4,MULTILINE:4096,PASSWORD:8192,NOTOGGLETOOFF:16384,RADIO:32768,PUSHBUTTON:65536,COMBO:131072,EDIT:262144,SORT:524288,FILESELECT:1048576,MULTISELECT:2097152,DONOTSPELLCHECK:4194304,DONOTSCROLL:8388608,COMB:16777216,RICHTEXT:33554432,RADIOSINUNISON:33554432,COMMITONSELCHANGE:67108864};const AnnotationBorderStyleType={SOLID:1,DASHED:2,BEVELED:3,INSET:4,UNDERLINE:5};const AnnotationActionEventType={E:\"Mouse Enter\",X:\"Mouse Exit\",D:\"Mouse Down\",U:\"Mouse Up\",Fo:\"Focus\",Bl:\"Blur\",PO:\"PageOpen\",PC:\"PageClose\",PV:\"PageVisible\",PI:\"PageInvisible\",K:\"Keystroke\",F:\"Format\",V:\"Validate\",C:\"Calculate\"};const DocumentActionEventType={WC:\"WillClose\",WS:\"WillSave\",DS:\"DidSave\",WP:\"WillPrint\",DP:\"DidPrint\"};const PageActionEventType={O:\"PageOpen\",C:\"PageClose\"};const VerbosityLevel={ERRORS:0,WARNINGS:1,INFOS:5};const OPS={dependency:1,setLineWidth:2,setLineCap:3,setLineJoin:4,setMiterLimit:5,setDash:6,setRenderingIntent:7,setFlatness:8,setGState:9,save:10,restore:11,transform:12,moveTo:13,lineTo:14,curveTo:15,curveTo2:16,curveTo3:17,closePath:18,rectangle:19,stroke:20,closeStroke:21,fill:22,eoFill:23,fillStroke:24,eoFillStroke:25,closeFillStroke:26,closeEOFillStroke:27,endPath:28,clip:29,eoClip:30,beginText:31,endText:32,setCharSpacing:33,setWordSpacing:34,setHScale:35,setLeading:36,setFont:37,setTextRenderingMode:38,setTextRise:39,moveText:40,setLeadingMoveText:41,setTextMatrix:42,nextLine:43,showText:44,showSpacedText:45,nextLineShowText:46,nextLineSetSpacingShowText:47,setCharWidth:48,setCharWidthAndBounds:49,setStrokeColorSpace:50,setFillColorSpace:51,setStrokeColor:52,setStrokeColorN:53,setFillColor:54,setFillColorN:55,setStrokeGray:56,setFillGray:57,setStrokeRGBColor:58,setFillRGBColor:59,setStrokeCMYKColor:60,setFillCMYKColor:61,shadingFill:62,beginInlineImage:63,beginImageData:64,endInlineImage:65,paintXObject:66,markPoint:67,markPointProps:68,beginMarkedContent:69,beginMarkedContentProps:70,endMarkedContent:71,beginCompat:72,endCompat:73,paintFormXObjectBegin:74,paintFormXObjectEnd:75,beginGroup:76,endGroup:77,beginAnnotation:80,endAnnotation:81,paintImageMaskXObject:83,paintImageMaskXObjectGroup:84,paintImageXObject:85,paintInlineImageXObject:86,paintInlineImageXObjectGroup:87,paintImageXObjectRepeat:88,paintImageMaskXObjectRepeat:89,paintSolidColorImageMask:90,constructPath:91,setStrokeTransparent:92,setFillTransparent:93,rawFillPath:94};const DrawOPS={moveTo:0,lineTo:1,curveTo:2,closePath:3};const PasswordResponses={NEED_PASSWORD:1,INCORRECT_PASSWORD:2};let verbosity=VerbosityLevel.WARNINGS;function setVerbosityLevel(level){if(Number.isInteger(level)){verbosity=level}}function getVerbosityLevel(){return verbosity}function info(msg){if(verbosity>=VerbosityLevel.INFOS){console.log(`Info: ${msg}`)}}function warn(msg){if(verbosity>=VerbosityLevel.WARNINGS){console.log(`Warning: ${msg}`)}}function unreachable(msg){throw new Error(msg)}function assert(cond,msg){if(!cond){unreachable(msg)}}function _isValidProtocol(url){switch(url?.protocol){case\"http:\":case\"https:\":case\"ftp:\":case\"mailto:\":case\"tel:\":return true;default:return false}}function createValidAbsoluteUrl(url,baseUrl=null,options=null){if(!url){return null}if(options&&typeof url===\"string\"){if(options.addDefaultProtocol&&url.startsWith(\"www.\")){const dots=url.match(/\\./g);if(dots?.length>=2){url=`http://${url}`}}if(options.tryConvertEncoding){try{url=stringToUTF8String(url)}catch{}}}const absoluteUrl=baseUrl?URL.parse(url,baseUrl):URL.parse(url);return _isValidProtocol(absoluteUrl)?absoluteUrl:null}function updateUrlHash(url,hash,allowRel=false){const res=URL.parse(url);if(res){res.hash=hash;return res.href}if(allowRel&&createValidAbsoluteUrl(url,\"http://example.com\")){return url.split(\"#\",1)[0]+`${hash?`#${hash}`:\"\"}`}return\"\"}function shadow(obj,prop,value,nonSerializable=false){Object.defineProperty(obj,prop,{value:value,enumerable:!nonSerializable,configurable:true,writable:false});return value}const BaseException=function BaseExceptionClosure(){function BaseException(message,name){this.message=message;this.name=name}BaseException.prototype=new Error;BaseException.constructor=BaseException;return BaseException}();class PasswordException extends BaseException{constructor(msg,code){super(msg,\"PasswordException\");this.code=code}}class UnknownErrorException extends BaseException{constructor(msg,details){super(msg,\"UnknownErrorException\");this.details=details}}class InvalidPDFException extends BaseException{constructor(msg){super(msg,\"InvalidPDFException\")}}class ResponseException extends BaseException{constructor(msg,status,missing){super(msg,\"ResponseException\");this.status=status;this.missing=missing}}class FormatError extends BaseException{constructor(msg){super(msg,\"FormatError\")}}class AbortException extends BaseException{constructor(msg){super(msg,\"AbortException\")}}function bytesToString(bytes){if(typeof bytes!==\"object\"||bytes?.length===undefined){unreachable(\"Invalid argument for bytesToString\")}const length=bytes.length;const MAX_ARGUMENT_COUNT=8192;if(length<MAX_ARGUMENT_COUNT){return String.fromCharCode.apply(null,bytes)}const strBuf=[];for(let i=0;i<length;i+=MAX_ARGUMENT_COUNT){const chunkEnd=Math.min(i+MAX_ARGUMENT_COUNT,length);const chunk=bytes.subarray(i,chunkEnd);strBuf.push(String.fromCharCode.apply(null,chunk))}return strBuf.join(\"\")}function stringToBytes(str){if(typeof str!==\"string\"){unreachable(\"Invalid argument for stringToBytes\")}const length=str.length;const bytes=new Uint8Array(length);for(let i=0;i<length;++i){bytes[i]=str.charCodeAt(i)&255}return bytes}function string32(value){return String.fromCharCode(value>>24&255,value>>16&255,value>>8&255,value&255)}function objectSize(obj){return Object.keys(obj).length}function isLittleEndian(){const buffer8=new Uint8Array(4);buffer8[0]=1;const view32=new Uint32Array(buffer8.buffer,0,1);return view32[0]===1}function isEvalSupported(){try{new Function(\"\");return true}catch{return false}}class FeatureTest{static get isLittleEndian(){return shadow(this,\"isLittleEndian\",isLittleEndian())}static get isEvalSupported(){return shadow(this,\"isEvalSupported\",isEvalSupported())}static get isOffscreenCanvasSupported(){return shadow(this,\"isOffscreenCanvasSupported\",typeof OffscreenCanvas!==\"undefined\")}static get isImageDecoderSupported(){return shadow(this,\"isImageDecoderSupported\",typeof ImageDecoder!==\"undefined\")}static get platform(){const{platform:platform,userAgent:userAgent}=navigator;return shadow(this,\"platform\",{isAndroid:userAgent.includes(\"Android\"),isLinux:platform.includes(\"Linux\"),isMac:platform.includes(\"Mac\"),isWindows:platform.includes(\"Win\"),isFirefox:userAgent.includes(\"Firefox\")})}static get isCSSRoundSupported(){return shadow(this,\"isCSSRoundSupported\",globalThis.CSS?.supports?.(\"width: round(1.5px, 1px)\"))}}const hexNumbers=Array.from(Array(256).keys(),(n=>n.toString(16).padStart(2,\"0\")));class Util{static makeHexColor(r,g,b){return`#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`}static scaleMinMax(transform,minMax){let temp;if(transform[0]){if(transform[0]<0){temp=minMax[0];minMax[0]=minMax[2];minMax[2]=temp}minMax[0]*=transform[0];minMax[2]*=transform[0];if(transform[3]<0){temp=minMax[1];minMax[1]=minMax[3];minMax[3]=temp}minMax[1]*=transform[3];minMax[3]*=transform[3]}else{temp=minMax[0];minMax[0]=minMax[1];minMax[1]=temp;temp=minMax[2];minMax[2]=minMax[3];minMax[3]=temp;if(transform[1]<0){temp=minMax[1];minMax[1]=minMax[3];minMax[3]=temp}minMax[1]*=transform[1];minMax[3]*=transform[1];if(transform[2]<0){temp=minMax[0];minMax[0]=minMax[2];minMax[2]=temp}minMax[0]*=transform[2];minMax[2]*=transform[2]}minMax[0]+=transform[4];minMax[1]+=transform[5];minMax[2]+=transform[4];minMax[3]+=transform[5]}static transform(m1,m2){return[m1[0]*m2[0]+m1[2]*m2[1],m1[1]*m2[0]+m1[3]*m2[1],m1[0]*m2[2]+m1[2]*m2[3],m1[1]*m2[2]+m1[3]*m2[3],m1[0]*m2[4]+m1[2]*m2[5]+m1[4],m1[1]*m2[4]+m1[3]*m2[5]+m1[5]]}static applyTransform(p,m,pos=0){const p0=p[pos];const p1=p[pos+1];p[pos]=p0*m[0]+p1*m[2]+m[4];p[pos+1]=p0*m[1]+p1*m[3]+m[5]}static applyTransformToBezier(p,transform,pos=0){const m0=transform[0];const m1=transform[1];const m2=transform[2];const m3=transform[3];const m4=transform[4];const m5=transform[5];for(let i=0;i<6;i+=2){const pI=p[pos+i];const pI1=p[pos+i+1];p[pos+i]=pI*m0+pI1*m2+m4;p[pos+i+1]=pI*m1+pI1*m3+m5}}static applyInverseTransform(p,m){const p0=p[0];const p1=p[1];const d=m[0]*m[3]-m[1]*m[2];p[0]=(p0*m[3]-p1*m[2]+m[2]*m[5]-m[4]*m[3])/d;p[1]=(-p0*m[1]+p1*m[0]+m[4]*m[1]-m[5]*m[0])/d}static axialAlignedBoundingBox(rect,transform,output){const m0=transform[0];const m1=transform[1];const m2=transform[2];const m3=transform[3];const m4=transform[4];const m5=transform[5];const r0=rect[0];const r1=rect[1];const r2=rect[2];const r3=rect[3];let a0=m0*r0+m4;let a2=a0;let a1=m0*r2+m4;let a3=a1;let b0=m3*r1+m5;let b2=b0;let b1=m3*r3+m5;let b3=b1;if(m1!==0||m2!==0){const m1r0=m1*r0;const m1r2=m1*r2;const m2r1=m2*r1;const m2r3=m2*r3;a0+=m2r1;a3+=m2r1;a1+=m2r3;a2+=m2r3;b0+=m1r0;b3+=m1r0;b1+=m1r2;b2+=m1r2}output[0]=Math.min(output[0],a0,a1,a2,a3);output[1]=Math.min(output[1],b0,b1,b2,b3);output[2]=Math.max(output[2],a0,a1,a2,a3);output[3]=Math.max(output[3],b0,b1,b2,b3)}static inverseTransform(m){const d=m[0]*m[3]-m[1]*m[2];return[m[3]/d,-m[1]/d,-m[2]/d,m[0]/d,(m[2]*m[5]-m[4]*m[3])/d,(m[4]*m[1]-m[5]*m[0])/d]}static singularValueDecompose2dScale(matrix,output){const m0=matrix[0];const m1=matrix[1];const m2=matrix[2];const m3=matrix[3];const a=m0**2+m1**2;const b=m0*m2+m1*m3;const c=m2**2+m3**2;const first=(a+c)/2;const second=Math.sqrt(first**2-(a*c-b**2));output[0]=Math.sqrt(first+second||1);output[1]=Math.sqrt(first-second||1)}static normalizeRect(rect){const r=rect.slice(0);if(rect[0]>rect[2]){r[0]=rect[2];r[2]=rect[0]}if(rect[1]>rect[3]){r[1]=rect[3];r[3]=rect[1]}return r}static intersect(rect1,rect2){const xLow=Math.max(Math.min(rect1[0],rect1[2]),Math.min(rect2[0],rect2[2]));const xHigh=Math.min(Math.max(rect1[0],rect1[2]),Math.max(rect2[0],rect2[2]));if(xLow>xHigh){return null}const yLow=Math.max(Math.min(rect1[1],rect1[3]),Math.min(rect2[1],rect2[3]));const yHigh=Math.min(Math.max(rect1[1],rect1[3]),Math.max(rect2[1],rect2[3]));if(yLow>yHigh){return null}return[xLow,yLow,xHigh,yHigh]}static pointBoundingBox(x,y,minMax){minMax[0]=Math.min(minMax[0],x);minMax[1]=Math.min(minMax[1],y);minMax[2]=Math.max(minMax[2],x);minMax[3]=Math.max(minMax[3],y)}static rectBoundingBox(x0,y0,x1,y1,minMax){minMax[0]=Math.min(minMax[0],x0,x1);minMax[1]=Math.min(minMax[1],y0,y1);minMax[2]=Math.max(minMax[2],x0,x1);minMax[3]=Math.max(minMax[3],y0,y1)}static#getExtremumOnCurve(x0,x1,x2,x3,y0,y1,y2,y3,t,minMax){if(t<=0||t>=1){return}const mt=1-t;const tt=t*t;const ttt=tt*t;const x=mt*(mt*(mt*x0+3*t*x1)+3*tt*x2)+ttt*x3;const y=mt*(mt*(mt*y0+3*t*y1)+3*tt*y2)+ttt*y3;minMax[0]=Math.min(minMax[0],x);minMax[1]=Math.min(minMax[1],y);minMax[2]=Math.max(minMax[2],x);minMax[3]=Math.max(minMax[3],y)}static#getExtremum(x0,x1,x2,x3,y0,y1,y2,y3,a,b,c,minMax){if(Math.abs(a)<1e-12){if(Math.abs(b)>=1e-12){this.#getExtremumOnCurve(x0,x1,x2,x3,y0,y1,y2,y3,-c/b,minMax)}return}const delta=b**2-4*c*a;if(delta<0){return}const sqrtDelta=Math.sqrt(delta);const a2=2*a;this.#getExtremumOnCurve(x0,x1,x2,x3,y0,y1,y2,y3,(-b+sqrtDelta)/a2,minMax);this.#getExtremumOnCurve(x0,x1,x2,x3,y0,y1,y2,y3,(-b-sqrtDelta)/a2,minMax)}static bezierBoundingBox(x0,y0,x1,y1,x2,y2,x3,y3,minMax){minMax[0]=Math.min(minMax[0],x0,x3);minMax[1]=Math.min(minMax[1],y0,y3);minMax[2]=Math.max(minMax[2],x0,x3);minMax[3]=Math.max(minMax[3],y0,y3);this.#getExtremum(x0,x1,x2,x3,y0,y1,y2,y3,3*(-x0+3*(x1-x2)+x3),6*(x0-2*x1+x2),3*(x1-x0),minMax);this.#getExtremum(x0,x1,x2,x3,y0,y1,y2,y3,3*(-y0+3*(y1-y2)+y3),6*(y0-2*y1+y2),3*(y1-y0),minMax)}}const PDFStringTranslateTable=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,728,711,710,729,733,731,730,732,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8226,8224,8225,8230,8212,8211,402,8260,8249,8250,8722,8240,8222,8220,8221,8216,8217,8218,8482,64257,64258,321,338,352,376,381,305,322,339,353,382,0,8364];function stringToPDFString(str,keepEscapeSequence=false){if(str[0]>=\"ï\"){let encoding;if(str[0]===\"þ\"&&str[1]===\"ÿ\"){encoding=\"utf-16be\";if(str.length%2===1){str=str.slice(0,-1)}}else if(str[0]===\"ÿ\"&&str[1]===\"þ\"){encoding=\"utf-16le\";if(str.length%2===1){str=str.slice(0,-1)}}else if(str[0]===\"ï\"&&str[1]===\"»\"&&str[2]===\"¿\"){encoding=\"utf-8\"}if(encoding){try{const decoder=new TextDecoder(encoding,{fatal:true});const buffer=stringToBytes(str);const decoded=decoder.decode(buffer);if(keepEscapeSequence||!decoded.includes(\"\u001b\")){return decoded}return decoded.replaceAll(/\\x1b[^\\x1b]*(?:\\x1b|$)/g,\"\")}catch(ex){warn(`stringToPDFString: \"${ex}\".`)}}}const strBuf=[];for(let i=0,ii=str.length;i<ii;i++){const charCode=str.charCodeAt(i);if(!keepEscapeSequence&&charCode===27){while(++i<ii&&str.charCodeAt(i)!==27){}continue}const code=PDFStringTranslateTable[charCode];strBuf.push(code?String.fromCharCode(code):str.charAt(i))}return strBuf.join(\"\")}function stringToUTF8String(str){return decodeURIComponent(escape(str))}function utf8StringToString(str){return unescape(encodeURIComponent(str))}function isArrayEqual(arr1,arr2){if(arr1.length!==arr2.length){return false}for(let i=0,ii=arr1.length;i<ii;i++){if(arr1[i]!==arr2[i]){return false}}return true}function getModificationDate(date=new Date){const buffer=[date.getUTCFullYear().toString(),(date.getUTCMonth()+1).toString().padStart(2,\"0\"),date.getUTCDate().toString().padStart(2,\"0\"),date.getUTCHours().toString().padStart(2,\"0\"),date.getUTCMinutes().toString().padStart(2,\"0\"),date.getUTCSeconds().toString().padStart(2,\"0\")];return buffer.join(\"\")}let NormalizeRegex=null;let NormalizationMap=null;function normalizeUnicode(str){if(!NormalizeRegex){NormalizeRegex=/([\\u00a0\\u00b5\\u037e\\u0eb3\\u2000-\\u200a\\u202f\\u2126\\ufb00-\\ufb04\\ufb06\\ufb20-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufba1\\ufba4-\\ufba9\\ufbae-\\ufbb1\\ufbd3-\\ufbdc\\ufbde-\\ufbe7\\ufbea-\\ufbf8\\ufbfc-\\ufbfd\\ufc00-\\ufc5d\\ufc64-\\ufcf1\\ufcf5-\\ufd3d\\ufd88\\ufdf4\\ufdfa-\\ufdfb\\ufe71\\ufe77\\ufe79\\ufe7b\\ufe7d]+)|(\\ufb05+)/gu;NormalizationMap=new Map([[\"ﬅ\",\"ſt\"]])}return str.replaceAll(NormalizeRegex,((_,p1,p2)=>p1?p1.normalize(\"NFKC\"):NormalizationMap.get(p2)))}function getUuid(){if(typeof crypto.randomUUID===\"function\"){return crypto.randomUUID()}const buf=new Uint8Array(32);crypto.getRandomValues(buf);return bytesToString(buf)}const AnnotationPrefix=\"pdfjs_internal_id_\";function _isValidExplicitDest(validRef,validName,dest){if(!Array.isArray(dest)||dest.length<2){return false}const[page,zoom,...args]=dest;if(!validRef(page)&&!Number.isInteger(page)){return false}if(!validName(zoom)){return false}const argsLen=args.length;let allowNull=true;switch(zoom.name){case\"XYZ\":if(argsLen<2||argsLen>3){return false}break;case\"Fit\":case\"FitB\":return argsLen===0;case\"FitH\":case\"FitBH\":case\"FitV\":case\"FitBV\":if(argsLen>1){return false}break;case\"FitR\":if(argsLen!==4){return false}allowNull=false;break;default:return false}for(const arg of args){if(typeof arg===\"number\"||allowNull&&arg===null){continue}return false}return true}function MathClamp(v,min,max){return Math.min(Math.max(v,min),max)}function toHexUtil(arr){if(Uint8Array.prototype.toHex){return arr.toHex()}return Array.from(arr,(num=>hexNumbers[num])).join(\"\")}function toBase64Util(arr){if(Uint8Array.prototype.toBase64){return arr.toBase64()}return btoa(bytesToString(arr))}function fromBase64Util(str){if(Uint8Array.fromBase64){return Uint8Array.fromBase64(str)}return stringToBytes(atob(str))}if(typeof Promise.try!==\"function\"){Promise.try=function(fn,...args){return new Promise((resolve=>{resolve(fn(...args))}))}}if(typeof Math.sumPrecise!==\"function\"){Math.sumPrecise=function(numbers){return numbers.reduce(((a,b)=>a+b),0)}}const CIRCULAR_REF=Symbol(\"CIRCULAR_REF\");const EOF=Symbol(\"EOF\");let CmdCache=Object.create(null);let NameCache=Object.create(null);let RefCache=Object.create(null);function clearPrimitiveCaches(){CmdCache=Object.create(null);NameCache=Object.create(null);RefCache=Object.create(null)}class Name{constructor(name){this.name=name}static get(name){return NameCache[name]||=new Name(name)}}class Cmd{constructor(cmd){this.cmd=cmd}static get(cmd){return CmdCache[cmd]||=new Cmd(cmd)}}const nonSerializable=function nonSerializableClosure(){return nonSerializable};class Dict{constructor(xref=null){this._map=new Map;this.xref=xref;this.objId=null;this.suppressEncryption=false;this.__nonSerializable__=nonSerializable}assignXref(newXref){this.xref=newXref}get size(){return this._map.size}get(key1,key2,key3){let value=this._map.get(key1);if(value===undefined&&key2!==undefined){value=this._map.get(key2);if(value===undefined&&key3!==undefined){value=this._map.get(key3)}}if(value instanceof Ref&&this.xref){return this.xref.fetch(value,this.suppressEncryption)}return value}async getAsync(key1,key2,key3){let value=this._map.get(key1);if(value===undefined&&key2!==undefined){value=this._map.get(key2);if(value===undefined&&key3!==undefined){value=this._map.get(key3)}}if(value instanceof Ref&&this.xref){return this.xref.fetchAsync(value,this.suppressEncryption)}return value}getArray(key1,key2,key3){let value=this._map.get(key1);if(value===undefined&&key2!==undefined){value=this._map.get(key2);if(value===undefined&&key3!==undefined){value=this._map.get(key3)}}if(value instanceof Ref&&this.xref){value=this.xref.fetch(value,this.suppressEncryption)}if(Array.isArray(value)){value=value.slice();for(let i=0,ii=value.length;i<ii;i++){if(value[i]instanceof Ref&&this.xref){value[i]=this.xref.fetch(value[i],this.suppressEncryption)}}}return value}getRaw(key){return this._map.get(key)}getKeys(){return[...this._map.keys()]}getRawValues(){return[...this._map.values()]}set(key,value){this._map.set(key,value)}has(key){return this._map.has(key)}*[Symbol.iterator](){for(const[key,value]of this._map){yield[key,value instanceof Ref&&this.xref?this.xref.fetch(value,this.suppressEncryption):value]}}static get empty(){const emptyDict=new Dict(null);emptyDict.set=(key,value)=>{unreachable(\"Should not call `set` on the empty dictionary.\")};return shadow(this,\"empty\",emptyDict)}static merge({xref:xref,dictArray:dictArray,mergeSubDicts:mergeSubDicts=false}){const mergedDict=new Dict(xref),properties=new Map;for(const dict of dictArray){if(!(dict instanceof Dict)){continue}for(const[key,value]of dict._map){let property=properties.get(key);if(property===undefined){property=[];properties.set(key,property)}else if(!mergeSubDicts||!(value instanceof Dict)){continue}property.push(value)}}for(const[name,values]of properties){if(values.length===1||!(values[0]instanceof Dict)){mergedDict._map.set(name,values[0]);continue}const subDict=new Dict(xref);for(const dict of values){for(const[key,value]of dict._map){if(!subDict._map.has(key)){subDict._map.set(key,value)}}}if(subDict.size>0){mergedDict._map.set(name,subDict)}}properties.clear();return mergedDict.size>0?mergedDict:Dict.empty}clone(){const dict=new Dict(this.xref);for(const key of this.getKeys()){dict.set(key,this.getRaw(key))}return dict}delete(key){delete this._map[key]}}class Ref{constructor(num,gen){this.num=num;this.gen=gen}toString(){if(this.gen===0){return`${this.num}R`}return`${this.num}R${this.gen}`}static fromString(str){const ref=RefCache[str];if(ref){return ref}const m=/^(\\d+)R(\\d*)$/.exec(str);if(!m||m[1]===\"0\"){return null}return RefCache[str]=new Ref(parseInt(m[1]),!m[2]?0:parseInt(m[2]))}static get(num,gen){const key=gen===0?`${num}R`:`${num}R${gen}`;return RefCache[key]||=new Ref(num,gen)}}class RefSet{constructor(parent=null){this._set=new Set(parent?._set)}has(ref){return this._set.has(ref.toString())}put(ref){this._set.add(ref.toString())}remove(ref){this._set.delete(ref.toString())}[Symbol.iterator](){return this._set.values()}clear(){this._set.clear()}}class RefSetCache{constructor(){this._map=new Map}get size(){return this._map.size}get(ref){return this._map.get(ref.toString())}has(ref){return this._map.has(ref.toString())}put(ref,obj){this._map.set(ref.toString(),obj)}putAlias(ref,aliasRef){this._map.set(ref.toString(),this.get(aliasRef))}[Symbol.iterator](){return this._map.values()}clear(){this._map.clear()}*values(){yield*this._map.values()}*items(){for(const[ref,value]of this._map){yield[Ref.fromString(ref),value]}}}function isName(v,name){return v instanceof Name&&(name===undefined||v.name===name)}function isCmd(v,cmd){return v instanceof Cmd&&(cmd===undefined||v.cmd===cmd)}function isDict(v,type){return v instanceof Dict&&(type===undefined||isName(v.get(\"Type\"),type))}function isRefsEqual(v1,v2){return v1.num===v2.num&&v1.gen===v2.gen}class BaseStream{get length(){unreachable(\"Abstract getter `length` accessed\")}get isEmpty(){unreachable(\"Abstract getter `isEmpty` accessed\")}get isDataLoaded(){return shadow(this,\"isDataLoaded\",true)}getByte(){unreachable(\"Abstract method `getByte` called\")}getBytes(length){unreachable(\"Abstract method `getBytes` called\")}async getImageData(length,decoderOptions){return this.getBytes(length,decoderOptions)}async asyncGetBytes(){unreachable(\"Abstract method `asyncGetBytes` called\")}get isAsync(){return false}get isAsyncDecoder(){return false}get canAsyncDecodeImageFromBuffer(){return false}async getTransferableImage(){return null}peekByte(){const peekedByte=this.getByte();if(peekedByte!==-1){this.pos--}return peekedByte}peekBytes(length){const bytes=this.getBytes(length);this.pos-=bytes.length;return bytes}getUint16(){const b0=this.getByte();const b1=this.getByte();if(b0===-1||b1===-1){return-1}return(b0<<8)+b1}getInt32(){const b0=this.getByte();const b1=this.getByte();const b2=this.getByte();const b3=this.getByte();return(b0<<24)+(b1<<16)+(b2<<8)+b3}getByteRange(begin,end){unreachable(\"Abstract method `getByteRange` called\")}getString(length){return bytesToString(this.getBytes(length))}skip(n){this.pos+=n||1}reset(){unreachable(\"Abstract method `reset` called\")}moveStart(){unreachable(\"Abstract method `moveStart` called\")}makeSubStream(start,length,dict=null){unreachable(\"Abstract method `makeSubStream` called\")}getBaseStreams(){return null}}const PDF_VERSION_REGEXP=/^[1-9]\\.\\d$/;const MAX_INT_32=2**31-1;const MIN_INT_32=-(2**31);const IDENTITY_MATRIX=[1,0,0,1,0,0];const RESOURCES_KEYS_OPERATOR_LIST=[\"ColorSpace\",\"ExtGState\",\"Font\",\"Pattern\",\"Properties\",\"Shading\",\"XObject\"];const RESOURCES_KEYS_TEXT_CONTENT=[\"ExtGState\",\"Font\",\"Properties\",\"XObject\"];function getLookupTableFactory(initializer){let lookup;return function(){if(initializer){lookup=Object.create(null);initializer(lookup);initializer=null}return lookup}}class MissingDataException extends BaseException{constructor(begin,end){super(`Missing data [${begin}, ${end})`,\"MissingDataException\");this.begin=begin;this.end=end}}class ParserEOFException extends BaseException{constructor(msg){super(msg,\"ParserEOFException\")}}class XRefEntryException extends BaseException{constructor(msg){super(msg,\"XRefEntryException\")}}class XRefParseException extends BaseException{constructor(msg){super(msg,\"XRefParseException\")}}function arrayBuffersToBytes(arr){const length=arr.length;if(length===0){return new Uint8Array(0)}if(length===1){return new Uint8Array(arr[0])}let dataLength=0;for(let i=0;i<length;i++){dataLength+=arr[i].byteLength}const data=new Uint8Array(dataLength);let pos=0;for(let i=0;i<length;i++){const item=new Uint8Array(arr[i]);data.set(item,pos);pos+=item.byteLength}return data}async function fetchBinaryData(url){const response=await fetch(url);if(!response.ok){throw new Error(`Failed to fetch file \"${url}\" with \"${response.statusText}\".`)}return new Uint8Array(await response.arrayBuffer())}function getInheritableProperty({dict:dict,key:key,getArray:getArray=false,stopWhenFound:stopWhenFound=true}){let values;const visited=new RefSet;while(dict instanceof Dict&&!(dict.objId&&visited.has(dict.objId))){if(dict.objId){visited.put(dict.objId)}const value=getArray?dict.getArray(key):dict.get(key);if(value!==undefined){if(stopWhenFound){return value}(values||=[]).push(value)}dict=dict.get(\"Parent\")}return values}function getParentToUpdate(dict,ref,xref){const visited=new RefSet;const firstDict=dict;const result={dict:null,ref:null};while(dict instanceof Dict&&!visited.has(ref)){visited.put(ref);if(dict.has(\"T\")){break}ref=dict.getRaw(\"Parent\");if(!(ref instanceof Ref)){return result}dict=xref.fetch(ref)}if(dict instanceof Dict&&dict!==firstDict){result.dict=dict;result.ref=ref}return result}const ROMAN_NUMBER_MAP=[\"\",\"C\",\"CC\",\"CCC\",\"CD\",\"D\",\"DC\",\"DCC\",\"DCCC\",\"CM\",\"\",\"X\",\"XX\",\"XXX\",\"XL\",\"L\",\"LX\",\"LXX\",\"LXXX\",\"XC\",\"\",\"I\",\"II\",\"III\",\"IV\",\"V\",\"VI\",\"VII\",\"VIII\",\"IX\"];function toRomanNumerals(number,lowerCase=false){assert(Number.isInteger(number)&&number>0,\"The number should be a positive integer.\");const roman=\"M\".repeat(number/1e3|0)+ROMAN_NUMBER_MAP[number%1e3/100|0]+ROMAN_NUMBER_MAP[10+(number%100/10|0)]+ROMAN_NUMBER_MAP[20+number%10];return lowerCase?roman.toLowerCase():roman}function log2(x){return x>0?Math.ceil(Math.log2(x)):0}function readInt8(data,offset){return data[offset]<<24>>24}function readInt16(data,offset){return(data[offset]<<24|data[offset+1]<<16)>>16}function readUint16(data,offset){return data[offset]<<8|data[offset+1]}function readUint32(data,offset){return(data[offset]<<24|data[offset+1]<<16|data[offset+2]<<8|data[offset+3])>>>0}function isWhiteSpace(ch){return ch===32||ch===9||ch===13||ch===10}function isBooleanArray(arr,len){return Array.isArray(arr)&&(len===null||arr.length===len)&&arr.every((x=>typeof x===\"boolean\"))}function isNumberArray(arr,len){if(Array.isArray(arr)){return(len===null||arr.length===len)&&arr.every((x=>typeof x===\"number\"))}return ArrayBuffer.isView(arr)&&!(arr instanceof BigInt64Array||arr instanceof BigUint64Array)&&(len===null||arr.length===len)}function lookupMatrix(arr,fallback){return isNumberArray(arr,6)?arr:fallback}function lookupRect(arr,fallback){return isNumberArray(arr,4)?arr:fallback}function lookupNormalRect(arr,fallback){return isNumberArray(arr,4)?Util.normalizeRect(arr):fallback}function parseXFAPath(path){const positionPattern=/(.+)\\[(\\d+)\\]$/;return path.split(\".\").map((component=>{const m=component.match(positionPattern);if(m){return{name:m[1],pos:parseInt(m[2],10)}}return{name:component,pos:0}}))}function escapePDFName(str){const buffer=[];let start=0;for(let i=0,ii=str.length;i<ii;i++){const char=str.charCodeAt(i);if(char<33||char>126||char===35||char===40||char===41||char===60||char===62||char===91||char===93||char===123||char===125||char===47||char===37){if(start<i){buffer.push(str.substring(start,i))}buffer.push(`#${char.toString(16)}`);start=i+1}}if(buffer.length===0){return str}if(start<str.length){buffer.push(str.substring(start,str.length))}return buffer.join(\"\")}function escapeString(str){return str.replaceAll(/([()\\\\\\n\\r])/g,(match=>{if(match===\"\\n\"){return\"\\\\n\"}else if(match===\"\\r\"){return\"\\\\r\"}return`\\\\${match}`}))}function _collectJS(entry,xref,list,parents){if(!entry){return}let parent=null;if(entry instanceof Ref){if(parents.has(entry)){return}parent=entry;parents.put(parent);entry=xref.fetch(entry)}if(Array.isArray(entry)){for(const element of entry){_collectJS(element,xref,list,parents)}}else if(entry instanceof Dict){if(isName(entry.get(\"S\"),\"JavaScript\")){const js=entry.get(\"JS\");let code;if(js instanceof BaseStream){code=js.getString()}else if(typeof js===\"string\"){code=js}code&&=stringToPDFString(code,true).replaceAll(\"\\0\",\"\");if(code){list.push(code)}}_collectJS(entry.getRaw(\"Next\"),xref,list,parents)}if(parent){parents.remove(parent)}}function collectActions(xref,dict,eventType){const actions=Object.create(null);const additionalActionsDicts=getInheritableProperty({dict:dict,key:\"AA\",stopWhenFound:false});if(additionalActionsDicts){for(let i=additionalActionsDicts.length-1;i>=0;i--){const additionalActions=additionalActionsDicts[i];if(!(additionalActions instanceof Dict)){continue}for(const key of additionalActions.getKeys()){const action=eventType[key];if(!action){continue}const actionDict=additionalActions.getRaw(key);const parents=new RefSet;const list=[];_collectJS(actionDict,xref,list,parents);if(list.length>0){actions[action]=list}}}}if(dict.has(\"A\")){const actionDict=dict.get(\"A\");const parents=new RefSet;const list=[];_collectJS(actionDict,xref,list,parents);if(list.length>0){actions.Action=list}}return objectSize(actions)>0?actions:null}const XMLEntities={60:\"&lt;\",62:\"&gt;\",38:\"&amp;\",34:\"&quot;\",39:\"&apos;\"};function*codePointIter(str){for(let i=0,ii=str.length;i<ii;i++){const char=str.codePointAt(i);if(char>55295&&(char<57344||char>65533)){i++}yield char}}function encodeToXmlString(str){const buffer=[];let start=0;for(let i=0,ii=str.length;i<ii;i++){const char=str.codePointAt(i);if(32<=char&&char<=126){const entity=XMLEntities[char];if(entity){if(start<i){buffer.push(str.substring(start,i))}buffer.push(entity);start=i+1}}else{if(start<i){buffer.push(str.substring(start,i))}buffer.push(`&#x${char.toString(16).toUpperCase()};`);if(char>55295&&(char<57344||char>65533)){i++}start=i+1}}if(buffer.length===0){return str}if(start<str.length){buffer.push(str.substring(start,str.length))}return buffer.join(\"\")}function validateFontName(fontFamily,mustWarn=false){const m=/^(\"|').*(\"|')$/.exec(fontFamily);if(m&&m[1]===m[2]){const re=new RegExp(`[^\\\\\\\\]${m[1]}`);if(re.test(fontFamily.slice(1,-1))){if(mustWarn){warn(`FontFamily contains unescaped ${m[1]}: ${fontFamily}.`)}return false}}else{for(const ident of fontFamily.split(/[ \\t]+/)){if(/^(\\d|(-(\\d|-)))/.test(ident)||!/^[\\w-\\\\]+$/.test(ident)){if(mustWarn){warn(`FontFamily contains invalid <custom-ident>: ${fontFamily}.`)}return false}}}return true}function validateCSSFont(cssFontInfo){const DEFAULT_CSS_FONT_OBLIQUE=\"14\";const DEFAULT_CSS_FONT_WEIGHT=\"400\";const CSS_FONT_WEIGHT_VALUES=new Set([\"100\",\"200\",\"300\",\"400\",\"500\",\"600\",\"700\",\"800\",\"900\",\"1000\",\"normal\",\"bold\",\"bolder\",\"lighter\"]);const{fontFamily:fontFamily,fontWeight:fontWeight,italicAngle:italicAngle}=cssFontInfo;if(!validateFontName(fontFamily,true)){return false}const weight=fontWeight?fontWeight.toString():\"\";cssFontInfo.fontWeight=CSS_FONT_WEIGHT_VALUES.has(weight)?weight:DEFAULT_CSS_FONT_WEIGHT;const angle=parseFloat(italicAngle);cssFontInfo.italicAngle=isNaN(angle)||angle<-90||angle>90?DEFAULT_CSS_FONT_OBLIQUE:italicAngle.toString();return true}function recoverJsURL(str){const URL_OPEN_METHODS=[\"app.launchURL\",\"window.open\",\"xfa.host.gotoURL\"];const regex=new RegExp(\"^\\\\s*(\"+URL_OPEN_METHODS.join(\"|\").replaceAll(\".\",\"\\\\.\")+\")\\\\((?:'|\\\")([^'\\\"]*)(?:'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))\",\"i\");const jsUrl=regex.exec(str);if(jsUrl?.[2]){return{url:jsUrl[2],newWindow:jsUrl[1]===\"app.launchURL\"&&jsUrl[3]===\"true\"}}return null}function numberToString(value){if(Number.isInteger(value)){return value.toString()}const roundedValue=Math.round(value*100);if(roundedValue%100===0){return(roundedValue/100).toString()}if(roundedValue%10===0){return value.toFixed(1)}return value.toFixed(2)}function getNewAnnotationsMap(annotationStorage){if(!annotationStorage){return null}const newAnnotationsByPage=new Map;for(const[key,value]of annotationStorage){if(!key.startsWith(AnnotationEditorPrefix)){continue}let annotations=newAnnotationsByPage.get(value.pageIndex);if(!annotations){annotations=[];newAnnotationsByPage.set(value.pageIndex,annotations)}annotations.push(value)}return newAnnotationsByPage.size>0?newAnnotationsByPage:null}function stringToAsciiOrUTF16BE(str){return isAscii(str)?str:stringToUTF16String(str,true)}function isAscii(str){return/^[\\x00-\\x7F]*$/.test(str)}function stringToUTF16HexString(str){const buf=[];for(let i=0,ii=str.length;i<ii;i++){const char=str.charCodeAt(i);buf.push(hexNumbers[char>>8&255],hexNumbers[char&255])}return buf.join(\"\")}function stringToUTF16String(str,bigEndian=false){const buf=[];if(bigEndian){buf.push(\"þÿ\")}for(let i=0,ii=str.length;i<ii;i++){const char=str.charCodeAt(i);buf.push(String.fromCharCode(char>>8&255),String.fromCharCode(char&255))}return buf.join(\"\")}function getRotationMatrix(rotation,width,height){switch(rotation){case 90:return[0,1,-1,0,width,0];case 180:return[-1,0,0,-1,width,height];case 270:return[0,-1,1,0,0,height];default:throw new Error(\"Invalid rotation\")}}function getSizeInBytes(x){return Math.ceil(Math.ceil(Math.log2(1+x))/8)}class QCMS{static _module=null;static _mustAddAlpha=false;static _destBuffer=null}function copy_result(ptr,len){const{_module:_module,_mustAddAlpha:_mustAddAlpha,_destBuffer:_destBuffer}=QCMS;const result=new Uint8Array(_module.memory.buffer,ptr,len);if(result.length===_destBuffer.length){_destBuffer.set(result);return}if(_mustAddAlpha){for(let i=0,j=0,ii=result.length;i<ii;i+=3,j+=4){_destBuffer[j]=result[i];_destBuffer[j+1]=result[i+1];_destBuffer[j+2]=result[i+2];_destBuffer[j+3]=255}}else{for(let i=0,j=0,ii=result.length;i<ii;i+=3,j+=4){_destBuffer[j]=result[i];_destBuffer[j+1]=result[i+1];_destBuffer[j+2]=result[i+2]}}}function copy_rgb(ptr){QCMS._destBuffer.set(new Uint8Array(QCMS._module.memory.buffer,ptr,3))}let wasm;const cachedTextDecoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-8\",{ignoreBOM:true,fatal:true}):{decode:()=>{throw Error(\"TextDecoder not available\")}};if(typeof TextDecoder!==\"undefined\"){cachedTextDecoder.decode()}let cachedUint8ArrayMemory0=null;function getUint8ArrayMemory0(){if(cachedUint8ArrayMemory0===null||cachedUint8ArrayMemory0.byteLength===0){cachedUint8ArrayMemory0=new Uint8Array(wasm.memory.buffer)}return cachedUint8ArrayMemory0}function getStringFromWasm0(ptr,len){ptr=ptr>>>0;return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr,ptr+len))}let WASM_VECTOR_LEN=0;function passArray8ToWasm0(arg,malloc){const ptr=malloc(arg.length*1,1)>>>0;getUint8ArrayMemory0().set(arg,ptr/1);WASM_VECTOR_LEN=arg.length;return ptr}function qcms_convert_array(transformer,src){const ptr0=passArray8ToWasm0(src,wasm.__wbindgen_malloc);const len0=WASM_VECTOR_LEN;wasm.qcms_convert_array(transformer,ptr0,len0)}function qcms_convert_one(transformer,src){wasm.qcms_convert_one(transformer,src)}function qcms_convert_three(transformer,src1,src2,src3){wasm.qcms_convert_three(transformer,src1,src2,src3)}function qcms_convert_four(transformer,src1,src2,src3,src4){wasm.qcms_convert_four(transformer,src1,src2,src3,src4)}function qcms_transformer_from_memory(mem,in_type,intent){const ptr0=passArray8ToWasm0(mem,wasm.__wbindgen_malloc);const len0=WASM_VECTOR_LEN;const ret=wasm.qcms_transformer_from_memory(ptr0,len0,in_type,intent);return ret>>>0}function qcms_drop_transformer(transformer){wasm.qcms_drop_transformer(transformer)}const DataType=Object.freeze({RGB8:0,0:\"RGB8\",RGBA8:1,1:\"RGBA8\",BGRA8:2,2:\"BGRA8\",Gray8:3,3:\"Gray8\",GrayA8:4,4:\"GrayA8\",CMYK:5,5:\"CMYK\"});const Intent=Object.freeze({Perceptual:0,0:\"Perceptual\",RelativeColorimetric:1,1:\"RelativeColorimetric\",Saturation:2,2:\"Saturation\",AbsoluteColorimetric:3,3:\"AbsoluteColorimetric\"});async function __wbg_load(module,imports){if(typeof Response===\"function\"&&module instanceof Response){if(typeof WebAssembly.instantiateStreaming===\"function\"){try{return await WebAssembly.instantiateStreaming(module,imports)}catch(e){if(module.headers.get(\"Content-Type\")!=\"application/wasm\"){console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\",e)}else{throw e}}}const bytes=await module.arrayBuffer();return await WebAssembly.instantiate(bytes,imports)}else{const instance=await WebAssembly.instantiate(module,imports);if(instance instanceof WebAssembly.Instance){return{instance:instance,module:module}}else{return instance}}}function __wbg_get_imports(){const imports={};imports.wbg={};imports.wbg.__wbg_copyresult_b08ee7d273f295dd=function(arg0,arg1){copy_result(arg0>>>0,arg1>>>0)};imports.wbg.__wbg_copyrgb_d60ce17bb05d9b67=function(arg0){copy_rgb(arg0>>>0)};imports.wbg.__wbindgen_init_externref_table=function(){const table=wasm.__wbindgen_export_0;const offset=table.grow(4);table.set(0,undefined);table.set(offset+0,undefined);table.set(offset+1,null);table.set(offset+2,true);table.set(offset+3,false)};imports.wbg.__wbindgen_throw=function(arg0,arg1){throw new Error(getStringFromWasm0(arg0,arg1))};return imports}function __wbg_init_memory(imports,memory){}function __wbg_finalize_init(instance,module){wasm=instance.exports;__wbg_init.__wbindgen_wasm_module=module;cachedUint8ArrayMemory0=null;wasm.__wbindgen_start();return wasm}function initSync(module){if(wasm!==undefined)return wasm;if(typeof module!==\"undefined\"){if(Object.getPrototypeOf(module)===Object.prototype){({module:module}=module)}else{console.warn(\"using deprecated parameters for `initSync()`; pass a single object instead\")}}const imports=__wbg_get_imports();__wbg_init_memory(imports);if(!(module instanceof WebAssembly.Module)){module=new WebAssembly.Module(module)}const instance=new WebAssembly.Instance(module,imports);return __wbg_finalize_init(instance,module)}async function __wbg_init(module_or_path){if(wasm!==undefined)return wasm;if(typeof module_or_path!==\"undefined\"){if(Object.getPrototypeOf(module_or_path)===Object.prototype){({module_or_path:module_or_path}=module_or_path)}else{console.warn(\"using deprecated parameters for the initialization function; pass a single object instead\")}}if(typeof module_or_path===\"undefined\"){module_or_path=new URL(\"qcms_bg.wasm\",import.meta.url)}const imports=__wbg_get_imports();if(typeof module_or_path===\"string\"||typeof Request===\"function\"&&module_or_path instanceof Request||typeof URL===\"function\"&&module_or_path instanceof URL){module_or_path=fetch(module_or_path)}__wbg_init_memory(imports);const{instance:instance,module:module}=await __wbg_load(await module_or_path,imports);return __wbg_finalize_init(instance,module)}const qcms=null&&__wbg_init;function resizeRgbImage(src,dest,w1,h1,w2,h2,alpha01){const COMPONENTS=3;alpha01=alpha01!==1?0:alpha01;const xRatio=w1/w2;const yRatio=h1/h2;let newIndex=0,oldIndex;const xScaled=new Uint16Array(w2);const w1Scanline=w1*COMPONENTS;for(let i=0;i<w2;i++){xScaled[i]=Math.floor(i*xRatio)*COMPONENTS}for(let i=0;i<h2;i++){const py=Math.floor(i*yRatio)*w1Scanline;for(let j=0;j<w2;j++){oldIndex=py+xScaled[j];dest[newIndex++]=src[oldIndex++];dest[newIndex++]=src[oldIndex++];dest[newIndex++]=src[oldIndex++];newIndex+=alpha01}}}function resizeRgbaImage(src,dest,w1,h1,w2,h2,alpha01){const xRatio=w1/w2;const yRatio=h1/h2;let newIndex=0;const xScaled=new Uint16Array(w2);if(alpha01===1){for(let i=0;i<w2;i++){xScaled[i]=Math.floor(i*xRatio)}const src32=new Uint32Array(src.buffer);const dest32=new Uint32Array(dest.buffer);const rgbMask=FeatureTest.isLittleEndian?16777215:4294967040;for(let i=0;i<h2;i++){const buf=src32.subarray(Math.floor(i*yRatio)*w1);for(let j=0;j<w2;j++){dest32[newIndex++]|=buf[xScaled[j]]&rgbMask}}}else{const COMPONENTS=4;const w1Scanline=w1*COMPONENTS;for(let i=0;i<w2;i++){xScaled[i]=Math.floor(i*xRatio)*COMPONENTS}for(let i=0;i<h2;i++){const buf=src.subarray(Math.floor(i*yRatio)*w1Scanline);for(let j=0;j<w2;j++){const oldIndex=xScaled[j];dest[newIndex++]=buf[oldIndex];dest[newIndex++]=buf[oldIndex+1];dest[newIndex++]=buf[oldIndex+2]}}}}function copyRgbaImage(src,dest,alpha01){if(alpha01===1){const src32=new Uint32Array(src.buffer);const dest32=new Uint32Array(dest.buffer);const rgbMask=FeatureTest.isLittleEndian?16777215:4294967040;for(let i=0,ii=src32.length;i<ii;i++){dest32[i]|=src32[i]&rgbMask}}else{let j=0;for(let i=0,ii=src.length;i<ii;i+=4){dest[j++]=src[i];dest[j++]=src[i+1];dest[j++]=src[i+2]}}}class ColorSpace{constructor(name,numComps){this.name=name;this.numComps=numComps}getRgb(src,srcOffset){const rgb=new Uint8ClampedArray(3);this.getRgbItem(src,srcOffset,rgb,0);return rgb}getRgbItem(src,srcOffset,dest,destOffset){unreachable(\"Should not call ColorSpace.getRgbItem\")}getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){unreachable(\"Should not call ColorSpace.getRgbBuffer\")}getOutputLength(inputLength,alpha01){unreachable(\"Should not call ColorSpace.getOutputLength\")}isPassthrough(bits){return false}isDefaultDecode(decodeMap,bpc){return ColorSpace.isDefaultDecode(decodeMap,this.numComps)}fillRgb(dest,originalWidth,originalHeight,width,height,actualHeight,bpc,comps,alpha01){const count=originalWidth*originalHeight;let rgbBuf=null;const numComponentColors=1<<bpc;const needsResizing=originalHeight!==height||originalWidth!==width;if(this.isPassthrough(bpc)){rgbBuf=comps}else if(this.numComps===1&&count>numComponentColors&&this.name!==\"DeviceGray\"&&this.name!==\"DeviceRGB\"){const allColors=bpc<=8?new Uint8Array(numComponentColors):new Uint16Array(numComponentColors);for(let i=0;i<numComponentColors;i++){allColors[i]=i}const colorMap=new Uint8ClampedArray(numComponentColors*3);this.getRgbBuffer(allColors,0,numComponentColors,colorMap,0,bpc,0);if(!needsResizing){let destPos=0;for(let i=0;i<count;++i){const key=comps[i]*3;dest[destPos++]=colorMap[key];dest[destPos++]=colorMap[key+1];dest[destPos++]=colorMap[key+2];destPos+=alpha01}}else{rgbBuf=new Uint8Array(count*3);let rgbPos=0;for(let i=0;i<count;++i){const key=comps[i]*3;rgbBuf[rgbPos++]=colorMap[key];rgbBuf[rgbPos++]=colorMap[key+1];rgbBuf[rgbPos++]=colorMap[key+2]}}}else if(!needsResizing){this.getRgbBuffer(comps,0,width*actualHeight,dest,0,bpc,alpha01)}else{rgbBuf=new Uint8ClampedArray(count*3);this.getRgbBuffer(comps,0,count,rgbBuf,0,bpc,0)}if(rgbBuf){if(needsResizing){resizeRgbImage(rgbBuf,dest,originalWidth,originalHeight,width,height,alpha01)}else{let destPos=0,rgbPos=0;for(let i=0,ii=width*actualHeight;i<ii;i++){dest[destPos++]=rgbBuf[rgbPos++];dest[destPos++]=rgbBuf[rgbPos++];dest[destPos++]=rgbBuf[rgbPos++];destPos+=alpha01}}}}get usesZeroToOneRange(){return shadow(this,\"usesZeroToOneRange\",true)}static isDefaultDecode(decode,numComps){if(!Array.isArray(decode)){return true}if(numComps*2!==decode.length){warn(\"The decode map is not the correct length\");return true}for(let i=0,ii=decode.length;i<ii;i+=2){if(decode[i]!==0||decode[i+1]!==1){return false}}return true}}class AlternateCS extends ColorSpace{constructor(numComps,base,tintFn){super(\"Alternate\",numComps);this.base=base;this.tintFn=tintFn;this.tmpBuf=new Float32Array(base.numComps)}getRgbItem(src,srcOffset,dest,destOffset){const tmpBuf=this.tmpBuf;this.tintFn(src,srcOffset,tmpBuf,0);this.base.getRgbItem(tmpBuf,0,dest,destOffset)}getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){const tintFn=this.tintFn;const base=this.base;const scale=1/((1<<bits)-1);const baseNumComps=base.numComps;const usesZeroToOneRange=base.usesZeroToOneRange;const isPassthrough=(base.isPassthrough(8)||!usesZeroToOneRange)&&alpha01===0;let pos=isPassthrough?destOffset:0;const baseBuf=isPassthrough?dest:new Uint8ClampedArray(baseNumComps*count);const numComps=this.numComps;const scaled=new Float32Array(numComps);const tinted=new Float32Array(baseNumComps);let i,j;for(i=0;i<count;i++){for(j=0;j<numComps;j++){scaled[j]=src[srcOffset++]*scale}tintFn(scaled,0,tinted,0);if(usesZeroToOneRange){for(j=0;j<baseNumComps;j++){baseBuf[pos++]=tinted[j]*255}}else{base.getRgbItem(tinted,0,baseBuf,pos);pos+=baseNumComps}}if(!isPassthrough){base.getRgbBuffer(baseBuf,0,count,dest,destOffset,8,alpha01)}}getOutputLength(inputLength,alpha01){return this.base.getOutputLength(inputLength*this.base.numComps/this.numComps,alpha01)}}class PatternCS extends ColorSpace{constructor(baseCS){super(\"Pattern\",null);this.base=baseCS}isDefaultDecode(decodeMap,bpc){unreachable(\"Should not call PatternCS.isDefaultDecode\")}}class IndexedCS extends ColorSpace{constructor(base,highVal,lookup){super(\"Indexed\",1);this.base=base;this.highVal=highVal;const length=base.numComps*(highVal+1);this.lookup=new Uint8Array(length);if(lookup instanceof BaseStream){const bytes=lookup.getBytes(length);this.lookup.set(bytes)}else if(typeof lookup===\"string\"){for(let i=0;i<length;++i){this.lookup[i]=lookup.charCodeAt(i)&255}}else{throw new FormatError(`IndexedCS - unrecognized lookup table: ${lookup}`)}}getRgbItem(src,srcOffset,dest,destOffset){const{base:base,highVal:highVal,lookup:lookup}=this;const start=MathClamp(Math.round(src[srcOffset]),0,highVal)*base.numComps;base.getRgbBuffer(lookup,start,1,dest,destOffset,8,0)}getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){const{base:base,highVal:highVal,lookup:lookup}=this;const{numComps:numComps}=base;const outputDelta=base.getOutputLength(numComps,alpha01);for(let i=0;i<count;++i){const lookupPos=MathClamp(Math.round(src[srcOffset++]),0,highVal)*numComps;base.getRgbBuffer(lookup,lookupPos,1,dest,destOffset,8,alpha01);destOffset+=outputDelta}}getOutputLength(inputLength,alpha01){return this.base.getOutputLength(inputLength*this.base.numComps,alpha01)}isDefaultDecode(decodeMap,bpc){if(!Array.isArray(decodeMap)){return true}if(decodeMap.length!==2){warn(\"Decode map length is not correct\");return true}if(!Number.isInteger(bpc)||bpc<1){warn(\"Bits per component is not correct\");return true}return decodeMap[0]===0&&decodeMap[1]===(1<<bpc)-1}}class DeviceGrayCS extends ColorSpace{constructor(){super(\"DeviceGray\",1)}getRgbItem(src,srcOffset,dest,destOffset){const c=src[srcOffset]*255;dest[destOffset]=dest[destOffset+1]=dest[destOffset+2]=c}getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){const scale=255/((1<<bits)-1);let j=srcOffset,q=destOffset;for(let i=0;i<count;++i){const c=scale*src[j++];dest[q++]=c;dest[q++]=c;dest[q++]=c;q+=alpha01}}getOutputLength(inputLength,alpha01){return inputLength*(3+alpha01)}}class DeviceRgbCS extends ColorSpace{constructor(){super(\"DeviceRGB\",3)}getRgbItem(src,srcOffset,dest,destOffset){dest[destOffset]=src[srcOffset]*255;dest[destOffset+1]=src[srcOffset+1]*255;dest[destOffset+2]=src[srcOffset+2]*255}getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){if(bits===8&&alpha01===0){dest.set(src.subarray(srcOffset,srcOffset+count*3),destOffset);return}const scale=255/((1<<bits)-1);let j=srcOffset,q=destOffset;for(let i=0;i<count;++i){dest[q++]=scale*src[j++];dest[q++]=scale*src[j++];dest[q++]=scale*src[j++];q+=alpha01}}getOutputLength(inputLength,alpha01){return inputLength*(3+alpha01)/3|0}isPassthrough(bits){return bits===8}}class DeviceRgbaCS extends ColorSpace{constructor(){super(\"DeviceRGBA\",4)}getOutputLength(inputLength,_alpha01){return inputLength*4}isPassthrough(bits){return bits===8}fillRgb(dest,originalWidth,originalHeight,width,height,actualHeight,bpc,comps,alpha01){if(originalHeight!==height||originalWidth!==width){resizeRgbaImage(comps,dest,originalWidth,originalHeight,width,height,alpha01)}else{copyRgbaImage(comps,dest,alpha01)}}}class DeviceCmykCS extends ColorSpace{constructor(){super(\"DeviceCMYK\",4)}#toRgb(src,srcOffset,srcScale,dest,destOffset){const c=src[srcOffset]*srcScale;const m=src[srcOffset+1]*srcScale;const y=src[srcOffset+2]*srcScale;const k=src[srcOffset+3]*srcScale;dest[destOffset]=255+c*(-4.387332384609988*c+54.48615194189176*m+18.82290502165302*y+212.25662451639585*k+-285.2331026137004)+m*(1.7149763477362134*m-5.6096736904047315*y+-17.873870861415444*k-5.497006427196366)+y*(-2.5217340131683033*y-21.248923337353073*k+17.5119270841813)+k*(-21.86122147463605*k-189.48180835922747);dest[destOffset+1]=255+c*(8.841041422036149*c+60.118027045597366*m+6.871425592049007*y+31.159100130055922*k+-79.2970844816548)+m*(-15.310361306967817*m+17.575251261109482*y+131.35250912493976*k-190.9453302588951)+y*(4.444339102852739*y+9.8632861493405*k-24.86741582555878)+k*(-20.737325471181034*k-187.80453709719578);dest[destOffset+2]=255+c*(.8842522430003296*c+8.078677503112928*m+30.89978309703729*y-.23883238689178934*k+-14.183576799673286)+m*(10.49593273432072*m+63.02378494754052*y+50.606957656360734*k-112.23884253719248)+y*(.03296041114873217*y+115.60384449646641*k+-193.58209356861505)+k*(-22.33816807309886*k-180.12613974708367)}getRgbItem(src,srcOffset,dest,destOffset){this.#toRgb(src,srcOffset,1,dest,destOffset)}getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){const scale=1/((1<<bits)-1);for(let i=0;i<count;i++){this.#toRgb(src,srcOffset,scale,dest,destOffset);srcOffset+=4;destOffset+=3+alpha01}}getOutputLength(inputLength,alpha01){return inputLength/4*(3+alpha01)|0}}class CalGrayCS extends ColorSpace{constructor(whitePoint,blackPoint,gamma){super(\"CalGray\",1);if(!whitePoint){throw new FormatError(\"WhitePoint missing - required for color space CalGray\")}[this.XW,this.YW,this.ZW]=whitePoint;[this.XB,this.YB,this.ZB]=blackPoint||[0,0,0];this.G=gamma||1;if(this.XW<0||this.ZW<0||this.YW!==1){throw new FormatError(`Invalid WhitePoint components for ${this.name}, no fallback available`)}if(this.XB<0||this.YB<0||this.ZB<0){info(`Invalid BlackPoint for ${this.name}, falling back to default.`);this.XB=this.YB=this.ZB=0}if(this.XB!==0||this.YB!==0||this.ZB!==0){warn(`${this.name}, BlackPoint: XB: ${this.XB}, YB: ${this.YB}, `+`ZB: ${this.ZB}, only default values are supported.`)}if(this.G<1){info(`Invalid Gamma: ${this.G} for ${this.name}, falling back to default.`);this.G=1}}#toRgb(src,srcOffset,dest,destOffset,scale){const A=src[srcOffset]*scale;const AG=A**this.G;const L=this.YW*AG;const val=Math.max(295.8*L**.3333333333333333-40.8,0);dest[destOffset]=val;dest[destOffset+1]=val;dest[destOffset+2]=val}getRgbItem(src,srcOffset,dest,destOffset){this.#toRgb(src,srcOffset,dest,destOffset,1)}getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){const scale=1/((1<<bits)-1);for(let i=0;i<count;++i){this.#toRgb(src,srcOffset,dest,destOffset,scale);srcOffset+=1;destOffset+=3+alpha01}}getOutputLength(inputLength,alpha01){return inputLength*(3+alpha01)}}class CalRGBCS extends ColorSpace{static#BRADFORD_SCALE_MATRIX=new Float32Array([.8951,.2664,-.1614,-.7502,1.7135,.0367,.0389,-.0685,1.0296]);static#BRADFORD_SCALE_INVERSE_MATRIX=new Float32Array([.9869929,-.1470543,.1599627,.4323053,.5183603,.0492912,-.0085287,.0400428,.9684867]);static#SRGB_D65_XYZ_TO_RGB_MATRIX=new Float32Array([3.2404542,-1.5371385,-.4985314,-.969266,1.8760108,.041556,.0556434,-.2040259,1.0572252]);static#FLAT_WHITEPOINT_MATRIX=new Float32Array([1,1,1]);static#tempNormalizeMatrix=new Float32Array(3);static#tempConvertMatrix1=new Float32Array(3);static#tempConvertMatrix2=new Float32Array(3);static#DECODE_L_CONSTANT=((8+16)/116)**3/8;constructor(whitePoint,blackPoint,gamma,matrix){super(\"CalRGB\",3);if(!whitePoint){throw new FormatError(\"WhitePoint missing - required for color space CalRGB\")}const[XW,YW,ZW]=this.whitePoint=whitePoint;const[XB,YB,ZB]=this.blackPoint=blackPoint||new Float32Array(3);[this.GR,this.GG,this.GB]=gamma||new Float32Array([1,1,1]);[this.MXA,this.MYA,this.MZA,this.MXB,this.MYB,this.MZB,this.MXC,this.MYC,this.MZC]=matrix||new Float32Array([1,0,0,0,1,0,0,0,1]);if(XW<0||ZW<0||YW!==1){throw new FormatError(`Invalid WhitePoint components for ${this.name}, no fallback available`)}if(XB<0||YB<0||ZB<0){info(`Invalid BlackPoint for ${this.name} [${XB}, ${YB}, ${ZB}], `+\"falling back to default.\");this.blackPoint=new Float32Array(3)}if(this.GR<0||this.GG<0||this.GB<0){info(`Invalid Gamma [${this.GR}, ${this.GG}, ${this.GB}] for `+`${this.name}, falling back to default.`);this.GR=this.GG=this.GB=1}}#matrixProduct(a,b,result){result[0]=a[0]*b[0]+a[1]*b[1]+a[2]*b[2];result[1]=a[3]*b[0]+a[4]*b[1]+a[5]*b[2];result[2]=a[6]*b[0]+a[7]*b[1]+a[8]*b[2]}#toFlat(sourceWhitePoint,LMS,result){result[0]=LMS[0]*1/sourceWhitePoint[0];result[1]=LMS[1]*1/sourceWhitePoint[1];result[2]=LMS[2]*1/sourceWhitePoint[2]}#toD65(sourceWhitePoint,LMS,result){const D65X=.95047;const D65Y=1;const D65Z=1.08883;result[0]=LMS[0]*D65X/sourceWhitePoint[0];result[1]=LMS[1]*D65Y/sourceWhitePoint[1];result[2]=LMS[2]*D65Z/sourceWhitePoint[2]}#sRGBTransferFunction(color){if(color<=.0031308){return MathClamp(12.92*color,0,1)}if(color>=.99554525){return 1}return MathClamp((1+.055)*color**(1/2.4)-.055,0,1)}#decodeL(L){if(L<0){return-this.#decodeL(-L)}if(L>8){return((L+16)/116)**3}return L*CalRGBCS.#DECODE_L_CONSTANT}#compensateBlackPoint(sourceBlackPoint,XYZ_Flat,result){if(sourceBlackPoint[0]===0&&sourceBlackPoint[1]===0&&sourceBlackPoint[2]===0){result[0]=XYZ_Flat[0];result[1]=XYZ_Flat[1];result[2]=XYZ_Flat[2];return}const zeroDecodeL=this.#decodeL(0);const X_DST=zeroDecodeL;const X_SRC=this.#decodeL(sourceBlackPoint[0]);const Y_DST=zeroDecodeL;const Y_SRC=this.#decodeL(sourceBlackPoint[1]);const Z_DST=zeroDecodeL;const Z_SRC=this.#decodeL(sourceBlackPoint[2]);const X_Scale=(1-X_DST)/(1-X_SRC);const X_Offset=1-X_Scale;const Y_Scale=(1-Y_DST)/(1-Y_SRC);const Y_Offset=1-Y_Scale;const Z_Scale=(1-Z_DST)/(1-Z_SRC);const Z_Offset=1-Z_Scale;result[0]=XYZ_Flat[0]*X_Scale+X_Offset;result[1]=XYZ_Flat[1]*Y_Scale+Y_Offset;result[2]=XYZ_Flat[2]*Z_Scale+Z_Offset}#normalizeWhitePointToFlat(sourceWhitePoint,XYZ_In,result){if(sourceWhitePoint[0]===1&&sourceWhitePoint[2]===1){result[0]=XYZ_In[0];result[1]=XYZ_In[1];result[2]=XYZ_In[2];return}const LMS=result;this.#matrixProduct(CalRGBCS.#BRADFORD_SCALE_MATRIX,XYZ_In,LMS);const LMS_Flat=CalRGBCS.#tempNormalizeMatrix;this.#toFlat(sourceWhitePoint,LMS,LMS_Flat);this.#matrixProduct(CalRGBCS.#BRADFORD_SCALE_INVERSE_MATRIX,LMS_Flat,result)}#normalizeWhitePointToD65(sourceWhitePoint,XYZ_In,result){const LMS=result;this.#matrixProduct(CalRGBCS.#BRADFORD_SCALE_MATRIX,XYZ_In,LMS);const LMS_D65=CalRGBCS.#tempNormalizeMatrix;this.#toD65(sourceWhitePoint,LMS,LMS_D65);this.#matrixProduct(CalRGBCS.#BRADFORD_SCALE_INVERSE_MATRIX,LMS_D65,result)}#toRgb(src,srcOffset,dest,destOffset,scale){const A=MathClamp(src[srcOffset]*scale,0,1);const B=MathClamp(src[srcOffset+1]*scale,0,1);const C=MathClamp(src[srcOffset+2]*scale,0,1);const AGR=A===1?1:A**this.GR;const BGG=B===1?1:B**this.GG;const CGB=C===1?1:C**this.GB;const X=this.MXA*AGR+this.MXB*BGG+this.MXC*CGB;const Y=this.MYA*AGR+this.MYB*BGG+this.MYC*CGB;const Z=this.MZA*AGR+this.MZB*BGG+this.MZC*CGB;const XYZ=CalRGBCS.#tempConvertMatrix1;XYZ[0]=X;XYZ[1]=Y;XYZ[2]=Z;const XYZ_Flat=CalRGBCS.#tempConvertMatrix2;this.#normalizeWhitePointToFlat(this.whitePoint,XYZ,XYZ_Flat);const XYZ_Black=CalRGBCS.#tempConvertMatrix1;this.#compensateBlackPoint(this.blackPoint,XYZ_Flat,XYZ_Black);const XYZ_D65=CalRGBCS.#tempConvertMatrix2;this.#normalizeWhitePointToD65(CalRGBCS.#FLAT_WHITEPOINT_MATRIX,XYZ_Black,XYZ_D65);const SRGB=CalRGBCS.#tempConvertMatrix1;this.#matrixProduct(CalRGBCS.#SRGB_D65_XYZ_TO_RGB_MATRIX,XYZ_D65,SRGB);dest[destOffset]=this.#sRGBTransferFunction(SRGB[0])*255;dest[destOffset+1]=this.#sRGBTransferFunction(SRGB[1])*255;dest[destOffset+2]=this.#sRGBTransferFunction(SRGB[2])*255}getRgbItem(src,srcOffset,dest,destOffset){this.#toRgb(src,srcOffset,dest,destOffset,1)}getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){const scale=1/((1<<bits)-1);for(let i=0;i<count;++i){this.#toRgb(src,srcOffset,dest,destOffset,scale);srcOffset+=3;destOffset+=3+alpha01}}getOutputLength(inputLength,alpha01){return inputLength*(3+alpha01)/3|0}}class LabCS extends ColorSpace{constructor(whitePoint,blackPoint,range){super(\"Lab\",3);if(!whitePoint){throw new FormatError(\"WhitePoint missing - required for color space Lab\")}[this.XW,this.YW,this.ZW]=whitePoint;[this.amin,this.amax,this.bmin,this.bmax]=range||[-100,100,-100,100];[this.XB,this.YB,this.ZB]=blackPoint||[0,0,0];if(this.XW<0||this.ZW<0||this.YW!==1){throw new FormatError(\"Invalid WhitePoint components, no fallback available\")}if(this.XB<0||this.YB<0||this.ZB<0){info(\"Invalid BlackPoint, falling back to default\");this.XB=this.YB=this.ZB=0}if(this.amin>this.amax||this.bmin>this.bmax){info(\"Invalid Range, falling back to defaults\");this.amin=-100;this.amax=100;this.bmin=-100;this.bmax=100}}#fn_g(x){return x>=6/29?x**3:108/841*(x-4/29)}#decode(value,high1,low2,high2){return low2+value*(high2-low2)/high1}#toRgb(src,srcOffset,maxVal,dest,destOffset){let Ls=src[srcOffset];let as=src[srcOffset+1];let bs=src[srcOffset+2];if(maxVal!==false){Ls=this.#decode(Ls,maxVal,0,100);as=this.#decode(as,maxVal,this.amin,this.amax);bs=this.#decode(bs,maxVal,this.bmin,this.bmax)}if(as>this.amax){as=this.amax}else if(as<this.amin){as=this.amin}if(bs>this.bmax){bs=this.bmax}else if(bs<this.bmin){bs=this.bmin}const M=(Ls+16)/116;const L=M+as/500;const N=M-bs/200;const X=this.XW*this.#fn_g(L);const Y=this.YW*this.#fn_g(M);const Z=this.ZW*this.#fn_g(N);let r,g,b;if(this.ZW<1){r=X*3.1339+Y*-1.617+Z*-.4906;g=X*-.9785+Y*1.916+Z*.0333;b=X*.072+Y*-.229+Z*1.4057}else{r=X*3.2406+Y*-1.5372+Z*-.4986;g=X*-.9689+Y*1.8758+Z*.0415;b=X*.0557+Y*-.204+Z*1.057}dest[destOffset]=Math.sqrt(r)*255;dest[destOffset+1]=Math.sqrt(g)*255;dest[destOffset+2]=Math.sqrt(b)*255}getRgbItem(src,srcOffset,dest,destOffset){this.#toRgb(src,srcOffset,false,dest,destOffset)}getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){const maxVal=(1<<bits)-1;for(let i=0;i<count;i++){this.#toRgb(src,srcOffset,maxVal,dest,destOffset);srcOffset+=3;destOffset+=3+alpha01}}getOutputLength(inputLength,alpha01){return inputLength*(3+alpha01)/3|0}isDefaultDecode(decodeMap,bpc){return true}get usesZeroToOneRange(){return shadow(this,\"usesZeroToOneRange\",false)}}function fetchSync(url){const xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return xhr.response}class IccColorSpace extends ColorSpace{#transformer;#convertPixel;static#useWasm=true;static#wasmUrl=null;static#finalizer=new FinalizationRegistry((transformer=>{qcms_drop_transformer(transformer)}));constructor(iccProfile,name,numComps){if(!IccColorSpace.isUsable){throw new Error(\"No ICC color space support\")}super(name,numComps);let inType;switch(numComps){case 1:inType=DataType.Gray8;this.#convertPixel=(src,srcOffset)=>qcms_convert_one(this.#transformer,src[srcOffset]*255);break;case 3:inType=DataType.RGB8;this.#convertPixel=(src,srcOffset)=>qcms_convert_three(this.#transformer,src[srcOffset]*255,src[srcOffset+1]*255,src[srcOffset+2]*255);break;case 4:inType=DataType.CMYK;this.#convertPixel=(src,srcOffset)=>qcms_convert_four(this.#transformer,src[srcOffset]*255,src[srcOffset+1]*255,src[srcOffset+2]*255,src[srcOffset+3]*255);break;default:throw new Error(`Unsupported number of components: ${numComps}`)}this.#transformer=qcms_transformer_from_memory(iccProfile,inType,Intent.Perceptual);if(!this.#transformer){throw new Error(\"Failed to create ICC color space\")}IccColorSpace.#finalizer.register(this,this.#transformer)}getRgbItem(src,srcOffset,dest,destOffset){QCMS._destBuffer=dest.subarray(destOffset,destOffset+3);this.#convertPixel(src,srcOffset);QCMS._destBuffer=null}getRgbBuffer(src,srcOffset,count,dest,destOffset,bits,alpha01){src=src.subarray(srcOffset,srcOffset+count*this.numComps);if(bits!==8){const scale=255/((1<<bits)-1);for(let i=0,ii=src.length;i<ii;i++){src[i]*=scale}}QCMS._mustAddAlpha=alpha01&&dest.buffer===src.buffer;QCMS._destBuffer=dest.subarray(destOffset,destOffset+count*(3+alpha01));qcms_convert_array(this.#transformer,src);QCMS._mustAddAlpha=false;QCMS._destBuffer=null}getOutputLength(inputLength,alpha01){return inputLength/this.numComps*(3+alpha01)|0}static setOptions({useWasm:useWasm,useWorkerFetch:useWorkerFetch,wasmUrl:wasmUrl}){if(!useWorkerFetch){this.#useWasm=false;return}this.#useWasm=useWasm;this.#wasmUrl=wasmUrl}static get isUsable(){let isUsable=false;if(this.#useWasm){if(this.#wasmUrl){try{this._module=QCMS._module=initSync({module:fetchSync(`${this.#wasmUrl}qcms_bg.wasm`)});isUsable=!!this._module}catch(e){warn(`ICCBased color space: \"${e}\".`)}}else{warn(\"No ICC color space support due to missing `wasmUrl` API option\")}}return shadow(this,\"isUsable\",isUsable)}}class CmykICCBasedCS extends IccColorSpace{static#iccUrl;constructor(){const iccProfile=new Uint8Array(fetchSync(`${CmykICCBasedCS.#iccUrl}CGATS001Compat-v2-micro.icc`));super(iccProfile,\"DeviceCMYK\",4)}static setOptions({iccUrl:iccUrl}){this.#iccUrl=iccUrl}static get isUsable(){let isUsable=false;if(IccColorSpace.isUsable){if(this.#iccUrl){isUsable=true}else{warn(\"No CMYK ICC profile support due to missing `iccUrl` API option\")}}return shadow(this,\"isUsable\",isUsable)}}class Stream extends BaseStream{constructor(arrayBuffer,start,length,dict){super();this.bytes=arrayBuffer instanceof Uint8Array?arrayBuffer:new Uint8Array(arrayBuffer);this.start=start||0;this.pos=this.start;this.end=start+length||this.bytes.length;this.dict=dict}get length(){return this.end-this.start}get isEmpty(){return this.length===0}getByte(){if(this.pos>=this.end){return-1}return this.bytes[this.pos++]}getBytes(length){const bytes=this.bytes;const pos=this.pos;const strEnd=this.end;if(!length){return bytes.subarray(pos,strEnd)}let end=pos+length;if(end>strEnd){end=strEnd}this.pos=end;return bytes.subarray(pos,end)}getByteRange(begin,end){if(begin<0){begin=0}if(end>this.end){end=this.end}return this.bytes.subarray(begin,end)}reset(){this.pos=this.start}moveStart(){this.start=this.pos}makeSubStream(start,length,dict=null){return new Stream(this.bytes.buffer,start,length,dict)}}class StringStream extends Stream{constructor(str){super(stringToBytes(str))}}class NullStream extends Stream{constructor(){super(new Uint8Array(0))}}class ChunkedStream extends Stream{constructor(length,chunkSize,manager){super(new Uint8Array(length),0,length,null);this.chunkSize=chunkSize;this._loadedChunks=new Set;this.numChunks=Math.ceil(length/chunkSize);this.manager=manager;this.progressiveDataLength=0;this.lastSuccessfulEnsureByteChunk=-1}getMissingChunks(){const chunks=[];for(let chunk=0,n=this.numChunks;chunk<n;++chunk){if(!this._loadedChunks.has(chunk)){chunks.push(chunk)}}return chunks}get numChunksLoaded(){return this._loadedChunks.size}get isDataLoaded(){return this.numChunksLoaded===this.numChunks}onReceiveData(begin,chunk){const chunkSize=this.chunkSize;if(begin%chunkSize!==0){throw new Error(`Bad begin offset: ${begin}`)}const end=begin+chunk.byteLength;if(end%chunkSize!==0&&end!==this.bytes.length){throw new Error(`Bad end offset: ${end}`)}this.bytes.set(new Uint8Array(chunk),begin);const beginChunk=Math.floor(begin/chunkSize);const endChunk=Math.floor((end-1)/chunkSize)+1;for(let curChunk=beginChunk;curChunk<endChunk;++curChunk){this._loadedChunks.add(curChunk)}}onReceiveProgressiveData(data){let position=this.progressiveDataLength;const beginChunk=Math.floor(position/this.chunkSize);this.bytes.set(new Uint8Array(data),position);position+=data.byteLength;this.progressiveDataLength=position;const endChunk=position>=this.end?this.numChunks:Math.floor(position/this.chunkSize);for(let curChunk=beginChunk;curChunk<endChunk;++curChunk){this._loadedChunks.add(curChunk)}}ensureByte(pos){if(pos<this.progressiveDataLength){return}const chunk=Math.floor(pos/this.chunkSize);if(chunk>this.numChunks){return}if(chunk===this.lastSuccessfulEnsureByteChunk){return}if(!this._loadedChunks.has(chunk)){throw new MissingDataException(pos,pos+1)}this.lastSuccessfulEnsureByteChunk=chunk}ensureRange(begin,end){if(begin>=end){return}if(end<=this.progressiveDataLength){return}const beginChunk=Math.floor(begin/this.chunkSize);if(beginChunk>this.numChunks){return}const endChunk=Math.min(Math.floor((end-1)/this.chunkSize)+1,this.numChunks);for(let chunk=beginChunk;chunk<endChunk;++chunk){if(!this._loadedChunks.has(chunk)){throw new MissingDataException(begin,end)}}}nextEmptyChunk(beginChunk){const numChunks=this.numChunks;for(let i=0;i<numChunks;++i){const chunk=(beginChunk+i)%numChunks;if(!this._loadedChunks.has(chunk)){return chunk}}return null}hasChunk(chunk){return this._loadedChunks.has(chunk)}getByte(){const pos=this.pos;if(pos>=this.end){return-1}if(pos>=this.progressiveDataLength){this.ensureByte(pos)}return this.bytes[this.pos++]}getBytes(length){const bytes=this.bytes;const pos=this.pos;const strEnd=this.end;if(!length){if(strEnd>this.progressiveDataLength){this.ensureRange(pos,strEnd)}return bytes.subarray(pos,strEnd)}let end=pos+length;if(end>strEnd){end=strEnd}if(end>this.progressiveDataLength){this.ensureRange(pos,end)}this.pos=end;return bytes.subarray(pos,end)}getByteRange(begin,end){if(begin<0){begin=0}if(end>this.end){end=this.end}if(end>this.progressiveDataLength){this.ensureRange(begin,end)}return this.bytes.subarray(begin,end)}makeSubStream(start,length,dict=null){if(length){if(start+length>this.progressiveDataLength){this.ensureRange(start,start+length)}}else if(start>=this.progressiveDataLength){this.ensureByte(start)}function ChunkedStreamSubstream(){}ChunkedStreamSubstream.prototype=Object.create(this);ChunkedStreamSubstream.prototype.getMissingChunks=function(){const chunkSize=this.chunkSize;const beginChunk=Math.floor(this.start/chunkSize);const endChunk=Math.floor((this.end-1)/chunkSize)+1;const missingChunks=[];for(let chunk=beginChunk;chunk<endChunk;++chunk){if(!this._loadedChunks.has(chunk)){missingChunks.push(chunk)}}return missingChunks};Object.defineProperty(ChunkedStreamSubstream.prototype,\"isDataLoaded\",{get(){if(this.numChunksLoaded===this.numChunks){return true}return this.getMissingChunks().length===0},configurable:true});const subStream=new ChunkedStreamSubstream;subStream.pos=subStream.start=start;subStream.end=start+length||this.end;subStream.dict=dict;return subStream}getBaseStreams(){return[this]}}class ChunkedStreamManager{constructor(pdfNetworkStream,args){this.length=args.length;this.chunkSize=args.rangeChunkSize;this.stream=new ChunkedStream(this.length,this.chunkSize,this);this.pdfNetworkStream=pdfNetworkStream;this.disableAutoFetch=args.disableAutoFetch;this.msgHandler=args.msgHandler;this.currRequestId=0;this._chunksNeededByRequest=new Map;this._requestsByChunk=new Map;this._promisesByRequest=new Map;this.progressiveDataLength=0;this.aborted=false;this._loadedStreamCapability=Promise.withResolvers()}sendRequest(begin,end){const rangeReader=this.pdfNetworkStream.getRangeReader(begin,end);if(!rangeReader.isStreamingSupported){rangeReader.onProgress=this.onProgress.bind(this)}let chunks=[],loaded=0;return new Promise(((resolve,reject)=>{const readChunk=({value:value,done:done})=>{try{if(done){const chunkData=arrayBuffersToBytes(chunks);chunks=null;resolve(chunkData);return}loaded+=value.byteLength;if(rangeReader.isStreamingSupported){this.onProgress({loaded:loaded})}chunks.push(value);rangeReader.read().then(readChunk,reject)}catch(e){reject(e)}};rangeReader.read().then(readChunk,reject)})).then((data=>{if(this.aborted){return}this.onReceiveData({chunk:data,begin:begin})}))}requestAllChunks(noFetch=false){if(!noFetch){const missingChunks=this.stream.getMissingChunks();this._requestChunks(missingChunks)}return this._loadedStreamCapability.promise}_requestChunks(chunks){const requestId=this.currRequestId++;const chunksNeeded=new Set;this._chunksNeededByRequest.set(requestId,chunksNeeded);for(const chunk of chunks){if(!this.stream.hasChunk(chunk)){chunksNeeded.add(chunk)}}if(chunksNeeded.size===0){return Promise.resolve()}const capability=Promise.withResolvers();this._promisesByRequest.set(requestId,capability);const chunksToRequest=[];for(const chunk of chunksNeeded){let requestIds=this._requestsByChunk.get(chunk);if(!requestIds){requestIds=[];this._requestsByChunk.set(chunk,requestIds);chunksToRequest.push(chunk)}requestIds.push(requestId)}if(chunksToRequest.length>0){const groupedChunksToRequest=this.groupChunks(chunksToRequest);for(const groupedChunk of groupedChunksToRequest){const begin=groupedChunk.beginChunk*this.chunkSize;const end=Math.min(groupedChunk.endChunk*this.chunkSize,this.length);this.sendRequest(begin,end).catch(capability.reject)}}return capability.promise.catch((reason=>{if(this.aborted){return}throw reason}))}getStream(){return this.stream}requestRange(begin,end){end=Math.min(end,this.length);const beginChunk=this.getBeginChunk(begin);const endChunk=this.getEndChunk(end);const chunks=[];for(let chunk=beginChunk;chunk<endChunk;++chunk){chunks.push(chunk)}return this._requestChunks(chunks)}requestRanges(ranges=[]){const chunksToRequest=[];for(const range of ranges){const beginChunk=this.getBeginChunk(range.begin);const endChunk=this.getEndChunk(range.end);for(let chunk=beginChunk;chunk<endChunk;++chunk){if(!chunksToRequest.includes(chunk)){chunksToRequest.push(chunk)}}}chunksToRequest.sort(((a,b)=>a-b));return this._requestChunks(chunksToRequest)}groupChunks(chunks){const groupedChunks=[];let beginChunk=-1;let prevChunk=-1;for(let i=0,ii=chunks.length;i<ii;++i){const chunk=chunks[i];if(beginChunk<0){beginChunk=chunk}if(prevChunk>=0&&prevChunk+1!==chunk){groupedChunks.push({beginChunk:beginChunk,endChunk:prevChunk+1});beginChunk=chunk}if(i+1===chunks.length){groupedChunks.push({beginChunk:beginChunk,endChunk:chunk+1})}prevChunk=chunk}return groupedChunks}onProgress(args){this.msgHandler.send(\"DocProgress\",{loaded:this.stream.numChunksLoaded*this.chunkSize+args.loaded,total:this.length})}onReceiveData(args){const chunk=args.chunk;const isProgressive=args.begin===undefined;const begin=isProgressive?this.progressiveDataLength:args.begin;const end=begin+chunk.byteLength;const beginChunk=Math.floor(begin/this.chunkSize);const endChunk=end<this.length?Math.floor(end/this.chunkSize):Math.ceil(end/this.chunkSize);if(isProgressive){this.stream.onReceiveProgressiveData(chunk);this.progressiveDataLength=end}else{this.stream.onReceiveData(begin,chunk)}if(this.stream.isDataLoaded){this._loadedStreamCapability.resolve(this.stream)}const loadedRequests=[];for(let curChunk=beginChunk;curChunk<endChunk;++curChunk){const requestIds=this._requestsByChunk.get(curChunk);if(!requestIds){continue}this._requestsByChunk.delete(curChunk);for(const requestId of requestIds){const chunksNeeded=this._chunksNeededByRequest.get(requestId);if(chunksNeeded.has(curChunk)){chunksNeeded.delete(curChunk)}if(chunksNeeded.size>0){continue}loadedRequests.push(requestId)}}if(!this.disableAutoFetch&&this._requestsByChunk.size===0){let nextEmptyChunk;if(this.stream.numChunksLoaded===1){const lastChunk=this.stream.numChunks-1;if(!this.stream.hasChunk(lastChunk)){nextEmptyChunk=lastChunk}}else{nextEmptyChunk=this.stream.nextEmptyChunk(endChunk)}if(Number.isInteger(nextEmptyChunk)){this._requestChunks([nextEmptyChunk])}}for(const requestId of loadedRequests){const capability=this._promisesByRequest.get(requestId);this._promisesByRequest.delete(requestId);capability.resolve()}this.msgHandler.send(\"DocProgress\",{loaded:this.stream.numChunksLoaded*this.chunkSize,total:this.length})}onError(err){this._loadedStreamCapability.reject(err)}getBeginChunk(begin){return Math.floor(begin/this.chunkSize)}getEndChunk(end){return Math.floor((end-1)/this.chunkSize)+1}abort(reason){this.aborted=true;this.pdfNetworkStream?.cancelAllRequests(reason);for(const capability of this._promisesByRequest.values()){capability.reject(reason)}}}function convertToRGBA(params){switch(params.kind){case ImageKind.GRAYSCALE_1BPP:return convertBlackAndWhiteToRGBA(params);case ImageKind.RGB_24BPP:return convertRGBToRGBA(params)}return null}function convertBlackAndWhiteToRGBA({src:src,srcPos:srcPos=0,dest:dest,width:width,height:height,nonBlackColor:nonBlackColor=4294967295,inverseDecode:inverseDecode=false}){const black=FeatureTest.isLittleEndian?4278190080:255;const[zeroMapping,oneMapping]=inverseDecode?[nonBlackColor,black]:[black,nonBlackColor];const widthInSource=width>>3;const widthRemainder=width&7;const srcLength=src.length;dest=new Uint32Array(dest.buffer);let destPos=0;for(let i=0;i<height;i++){for(const max=srcPos+widthInSource;srcPos<max;srcPos++){const elem=srcPos<srcLength?src[srcPos]:255;dest[destPos++]=elem&128?oneMapping:zeroMapping;dest[destPos++]=elem&64?oneMapping:zeroMapping;dest[destPos++]=elem&32?oneMapping:zeroMapping;dest[destPos++]=elem&16?oneMapping:zeroMapping;dest[destPos++]=elem&8?oneMapping:zeroMapping;dest[destPos++]=elem&4?oneMapping:zeroMapping;dest[destPos++]=elem&2?oneMapping:zeroMapping;dest[destPos++]=elem&1?oneMapping:zeroMapping}if(widthRemainder===0){continue}const elem=srcPos<srcLength?src[srcPos++]:255;for(let j=0;j<widthRemainder;j++){dest[destPos++]=elem&1<<7-j?oneMapping:zeroMapping}}return{srcPos:srcPos,destPos:destPos}}function convertRGBToRGBA({src:src,srcPos:srcPos=0,dest:dest,destPos:destPos=0,width:width,height:height}){let i=0;const len=width*height*3;const len32=len>>2;const src32=new Uint32Array(src.buffer,srcPos,len32);if(FeatureTest.isLittleEndian){for(;i<len32-2;i+=3,destPos+=4){const s1=src32[i];const s2=src32[i+1];const s3=src32[i+2];dest[destPos]=s1|4278190080;dest[destPos+1]=s1>>>24|s2<<8|4278190080;dest[destPos+2]=s2>>>16|s3<<16|4278190080;dest[destPos+3]=s3>>>8|4278190080}for(let j=i*4,jj=srcPos+len;j<jj;j+=3){dest[destPos++]=src[j]|src[j+1]<<8|src[j+2]<<16|4278190080}}else{for(;i<len32-2;i+=3,destPos+=4){const s1=src32[i];const s2=src32[i+1];const s3=src32[i+2];dest[destPos]=s1|255;dest[destPos+1]=s1<<24|s2>>>8|255;dest[destPos+2]=s2<<16|s3>>>16|255;dest[destPos+3]=s3<<8|255}for(let j=i*4,jj=srcPos+len;j<jj;j+=3){dest[destPos++]=src[j]<<24|src[j+1]<<16|src[j+2]<<8|255}}return{srcPos:srcPos+len,destPos:destPos}}function grayToRGBA(src,dest){if(FeatureTest.isLittleEndian){for(let i=0,ii=src.length;i<ii;i++){dest[i]=src[i]*65793|4278190080}}else{for(let i=0,ii=src.length;i<ii;i++){dest[i]=src[i]*16843008|255}}}const MIN_IMAGE_DIM=2048;const MAX_IMAGE_DIM=65537;const MAX_ERROR=128;class ImageResizer{static#goodSquareLength=MIN_IMAGE_DIM;static#isImageDecoderSupported=FeatureTest.isImageDecoderSupported;constructor(imgData,isMask){this._imgData=imgData;this._isMask=isMask}static get canUseImageDecoder(){return shadow(this,\"canUseImageDecoder\",this.#isImageDecoderSupported?ImageDecoder.isTypeSupported(\"image/bmp\"):Promise.resolve(false))}static needsToBeResized(width,height){if(width<=this.#goodSquareLength&&height<=this.#goodSquareLength){return false}const{MAX_DIM:MAX_DIM}=this;if(width>MAX_DIM||height>MAX_DIM){return true}const area=width*height;if(this._hasMaxArea){return area>this.MAX_AREA}if(area<this.#goodSquareLength**2){return false}if(this._areGoodDims(width,height)){this.#goodSquareLength=Math.max(this.#goodSquareLength,Math.floor(Math.sqrt(width*height)));return false}this.#goodSquareLength=this._guessMax(this.#goodSquareLength,MAX_DIM,MAX_ERROR,0);const maxArea=this.MAX_AREA=this.#goodSquareLength**2;return area>maxArea}static getReducePowerForJPX(width,height,componentsCount){const area=width*height;const maxJPXArea=2**30/(componentsCount*4);if(!this.needsToBeResized(width,height)){if(area>maxJPXArea){return Math.ceil(Math.log2(area/maxJPXArea))}return 0}const{MAX_DIM:MAX_DIM,MAX_AREA:MAX_AREA}=this;const minFactor=Math.max(width/MAX_DIM,height/MAX_DIM,Math.sqrt(area/Math.min(maxJPXArea,MAX_AREA)));return Math.ceil(Math.log2(minFactor))}static get MAX_DIM(){return shadow(this,\"MAX_DIM\",this._guessMax(MIN_IMAGE_DIM,MAX_IMAGE_DIM,0,1))}static get MAX_AREA(){this._hasMaxArea=true;return shadow(this,\"MAX_AREA\",this._guessMax(this.#goodSquareLength,this.MAX_DIM,MAX_ERROR,0)**2)}static set MAX_AREA(area){if(area>=0){this._hasMaxArea=true;shadow(this,\"MAX_AREA\",area)}}static setOptions({canvasMaxAreaInBytes:canvasMaxAreaInBytes=-1,isImageDecoderSupported:isImageDecoderSupported=false}){if(!this._hasMaxArea){this.MAX_AREA=canvasMaxAreaInBytes>>2}this.#isImageDecoderSupported=isImageDecoderSupported}static _areGoodDims(width,height){try{const canvas=new OffscreenCanvas(width,height);const ctx=canvas.getContext(\"2d\");ctx.fillRect(0,0,1,1);const opacity=ctx.getImageData(0,0,1,1).data[3];canvas.width=canvas.height=1;return opacity!==0}catch{return false}}static _guessMax(start,end,tolerance,defaultHeight){while(start+tolerance+1<end){const middle=Math.floor((start+end)/2);const height=defaultHeight||middle;if(this._areGoodDims(middle,height)){start=middle}else{end=middle}}return start}static async createImage(imgData,isMask=false){return new ImageResizer(imgData,isMask)._createImage()}async _createImage(){const{_imgData:imgData}=this;const{width:width,height:height}=imgData;if(width*height*4>MAX_INT_32){const result=this.#rescaleImageData();if(result){return result}}const data=this._encodeBMP();let decoder,imagePromise;if(await ImageResizer.canUseImageDecoder){decoder=new ImageDecoder({data:data,type:\"image/bmp\",preferAnimation:false,transfer:[data.buffer]});imagePromise=decoder.decode().catch((reason=>{warn(`BMP image decoding failed: ${reason}`);return createImageBitmap(new Blob([this._encodeBMP().buffer],{type:\"image/bmp\"}))})).finally((()=>{decoder.close()}))}else{imagePromise=createImageBitmap(new Blob([data.buffer],{type:\"image/bmp\"}))}const{MAX_AREA:MAX_AREA,MAX_DIM:MAX_DIM}=ImageResizer;const minFactor=Math.max(width/MAX_DIM,height/MAX_DIM,Math.sqrt(width*height/MAX_AREA));const firstFactor=Math.max(minFactor,2);const factor=Math.round(10*(minFactor+1.25))/10/firstFactor;const N=Math.floor(Math.log2(factor));const steps=new Array(N+2).fill(2);steps[0]=firstFactor;steps.splice(-1,1,factor/(1<<N));let newWidth=width;let newHeight=height;const result=await imagePromise;let bitmap=result.image||result;for(const step of steps){const prevWidth=newWidth;const prevHeight=newHeight;newWidth=Math.floor(newWidth/step)-1;newHeight=Math.floor(newHeight/step)-1;const canvas=new OffscreenCanvas(newWidth,newHeight);const ctx=canvas.getContext(\"2d\");ctx.drawImage(bitmap,0,0,prevWidth,prevHeight,0,0,newWidth,newHeight);bitmap.close();bitmap=canvas.transferToImageBitmap()}imgData.data=null;imgData.bitmap=bitmap;imgData.width=newWidth;imgData.height=newHeight;return imgData}#rescaleImageData(){const{_imgData:imgData}=this;const{data:data,width:width,height:height,kind:kind}=imgData;const rgbaSize=width*height*4;const K=Math.ceil(Math.log2(rgbaSize/MAX_INT_32));const newWidth=width>>K;const newHeight=height>>K;let rgbaData;let maxHeight=height;try{rgbaData=new Uint8Array(rgbaSize)}catch{let n=Math.floor(Math.log2(rgbaSize+1));while(true){try{rgbaData=new Uint8Array(2**n-1);break}catch{n-=1}}maxHeight=Math.floor((2**n-1)/(width*4));const newSize=width*maxHeight*4;if(newSize<rgbaData.length){rgbaData=new Uint8Array(newSize)}}const src32=new Uint32Array(rgbaData.buffer);const dest32=new Uint32Array(newWidth*newHeight);let srcPos=0;let newIndex=0;const step=Math.ceil(height/maxHeight);const remainder=height%maxHeight===0?height:height%maxHeight;for(let k=0;k<step;k++){const h=k<step-1?maxHeight:remainder;({srcPos:srcPos}=convertToRGBA({kind:kind,src:data,dest:src32,width:width,height:h,inverseDecode:this._isMask,srcPos:srcPos}));for(let i=0,ii=h>>K;i<ii;i++){const buf=src32.subarray((i<<K)*width);for(let j=0;j<newWidth;j++){dest32[newIndex++]=buf[j<<K]}}}if(ImageResizer.needsToBeResized(newWidth,newHeight)){imgData.data=dest32;imgData.width=newWidth;imgData.height=newHeight;imgData.kind=ImageKind.RGBA_32BPP;return null}const canvas=new OffscreenCanvas(newWidth,newHeight);const ctx=canvas.getContext(\"2d\",{willReadFrequently:true});ctx.putImageData(new ImageData(new Uint8ClampedArray(dest32.buffer),newWidth,newHeight),0,0);imgData.data=null;imgData.bitmap=canvas.transferToImageBitmap();imgData.width=newWidth;imgData.height=newHeight;return imgData}_encodeBMP(){const{width:width,height:height,kind:kind}=this._imgData;let data=this._imgData.data;let bitPerPixel;let colorTable=new Uint8Array(0);let maskTable=colorTable;let compression=0;switch(kind){case ImageKind.GRAYSCALE_1BPP:{bitPerPixel=1;colorTable=new Uint8Array(this._isMask?[255,255,255,255,0,0,0,0]:[0,0,0,0,255,255,255,255]);const rowLen=width+7>>3;const rowSize=rowLen+3&-4;if(rowLen!==rowSize){const newData=new Uint8Array(rowSize*height);let k=0;for(let i=0,ii=height*rowLen;i<ii;i+=rowLen,k+=rowSize){newData.set(data.subarray(i,i+rowLen),k)}data=newData}break}case ImageKind.RGB_24BPP:{bitPerPixel=24;if(width&3){const rowLen=3*width;const rowSize=rowLen+3&-4;const extraLen=rowSize-rowLen;const newData=new Uint8Array(rowSize*height);let k=0;for(let i=0,ii=height*rowLen;i<ii;i+=rowLen){const row=data.subarray(i,i+rowLen);for(let j=0;j<rowLen;j+=3){newData[k++]=row[j+2];newData[k++]=row[j+1];newData[k++]=row[j]}k+=extraLen}data=newData}else{for(let i=0,ii=data.length;i<ii;i+=3){const tmp=data[i];data[i]=data[i+2];data[i+2]=tmp}}break}case ImageKind.RGBA_32BPP:bitPerPixel=32;compression=3;maskTable=new Uint8Array(4+4+4+4+52);const view=new DataView(maskTable.buffer);if(FeatureTest.isLittleEndian){view.setUint32(0,255,true);view.setUint32(4,65280,true);view.setUint32(8,16711680,true);view.setUint32(12,4278190080,true)}else{view.setUint32(0,4278190080,true);view.setUint32(4,16711680,true);view.setUint32(8,65280,true);view.setUint32(12,255,true)}break;default:throw new Error(\"invalid format\")}let i=0;const headerLength=40+maskTable.length;const fileLength=14+headerLength+colorTable.length+data.length;const bmpData=new Uint8Array(fileLength);const view=new DataView(bmpData.buffer);view.setUint16(i,19778,true);i+=2;view.setUint32(i,fileLength,true);i+=4;view.setUint32(i,0,true);i+=4;view.setUint32(i,14+headerLength+colorTable.length,true);i+=4;view.setUint32(i,headerLength,true);i+=4;view.setInt32(i,width,true);i+=4;view.setInt32(i,-height,true);i+=4;view.setUint16(i,1,true);i+=2;view.setUint16(i,bitPerPixel,true);i+=2;view.setUint32(i,compression,true);i+=4;view.setUint32(i,0,true);i+=4;view.setInt32(i,0,true);i+=4;view.setInt32(i,0,true);i+=4;view.setUint32(i,colorTable.length/4,true);i+=4;view.setUint32(i,0,true);i+=4;bmpData.set(maskTable,i);i+=maskTable.length;bmpData.set(colorTable,i);i+=colorTable.length;bmpData.set(data,i);return bmpData}}const emptyBuffer=new Uint8Array(0);class DecodeStream extends BaseStream{constructor(maybeMinBufferLength){super();this._rawMinBufferLength=maybeMinBufferLength||0;this.pos=0;this.bufferLength=0;this.eof=false;this.buffer=emptyBuffer;this.minBufferLength=512;if(maybeMinBufferLength){while(this.minBufferLength<maybeMinBufferLength){this.minBufferLength*=2}}}get isEmpty(){while(!this.eof&&this.bufferLength===0){this.readBlock()}return this.bufferLength===0}ensureBuffer(requested){const buffer=this.buffer;if(requested<=buffer.byteLength){return buffer}let size=this.minBufferLength;while(size<requested){size*=2}const buffer2=new Uint8Array(size);buffer2.set(buffer);return this.buffer=buffer2}getByte(){const pos=this.pos;while(this.bufferLength<=pos){if(this.eof){return-1}this.readBlock()}return this.buffer[this.pos++]}getBytes(length,decoderOptions=null){const pos=this.pos;let end;if(length){this.ensureBuffer(pos+length);end=pos+length;while(!this.eof&&this.bufferLength<end){this.readBlock(decoderOptions)}const bufEnd=this.bufferLength;if(end>bufEnd){end=bufEnd}}else{while(!this.eof){this.readBlock(decoderOptions)}end=this.bufferLength}this.pos=end;return this.buffer.subarray(pos,end)}async getImageData(length,decoderOptions){if(!this.canAsyncDecodeImageFromBuffer){if(this.isAsyncDecoder){return this.decodeImage(null,decoderOptions)}return this.getBytes(length,decoderOptions)}const data=await this.stream.asyncGetBytes();return this.decodeImage(data,decoderOptions)}reset(){this.pos=0}makeSubStream(start,length,dict=null){if(length===undefined){while(!this.eof){this.readBlock()}}else{const end=start+length;while(this.bufferLength<=end&&!this.eof){this.readBlock()}}return new Stream(this.buffer,start,length,dict)}getBaseStreams(){return this.str?this.str.getBaseStreams():null}}class StreamsSequenceStream extends DecodeStream{constructor(streams,onError=null){streams=streams.filter((s=>s instanceof BaseStream));let maybeLength=0;for(const stream of streams){maybeLength+=stream instanceof DecodeStream?stream._rawMinBufferLength:stream.length}super(maybeLength);this.streams=streams;this._onError=onError}readBlock(){const streams=this.streams;if(streams.length===0){this.eof=true;return}const stream=streams.shift();let chunk;try{chunk=stream.getBytes()}catch(reason){if(this._onError){this._onError(reason,stream.dict?.objId);return}throw reason}const bufferLength=this.bufferLength;const newLength=bufferLength+chunk.length;const buffer=this.ensureBuffer(newLength);buffer.set(chunk,bufferLength);this.bufferLength=newLength}getBaseStreams(){const baseStreamsBuf=[];for(const stream of this.streams){const baseStreams=stream.getBaseStreams();if(baseStreams){baseStreamsBuf.push(...baseStreams)}}return baseStreamsBuf.length>0?baseStreamsBuf:null}}class ColorSpaceUtils{static parse({cs:cs,xref:xref,resources:resources=null,pdfFunctionFactory:pdfFunctionFactory,globalColorSpaceCache:globalColorSpaceCache,localColorSpaceCache:localColorSpaceCache,asyncIfNotCached:asyncIfNotCached=false}){const options={xref:xref,resources:resources,pdfFunctionFactory:pdfFunctionFactory,globalColorSpaceCache:globalColorSpaceCache,localColorSpaceCache:localColorSpaceCache};let csName,csRef,parsedCS;if(cs instanceof Ref){csRef=cs;const cachedCS=globalColorSpaceCache.getByRef(csRef)||localColorSpaceCache.getByRef(csRef);if(cachedCS){return cachedCS}cs=xref.fetch(cs)}if(cs instanceof Name){csName=cs.name;const cachedCS=localColorSpaceCache.getByName(csName);if(cachedCS){return cachedCS}}try{parsedCS=this.#parse(cs,options)}catch(ex){if(asyncIfNotCached&&!(ex instanceof MissingDataException)){return Promise.reject(ex)}throw ex}if(csName||csRef){localColorSpaceCache.set(csName,csRef,parsedCS);if(csRef){globalColorSpaceCache.set(null,csRef,parsedCS)}}return asyncIfNotCached?Promise.resolve(parsedCS):parsedCS}static#subParse(cs,options){const{globalColorSpaceCache:globalColorSpaceCache}=options;let csRef;if(cs instanceof Ref){csRef=cs;const cachedCS=globalColorSpaceCache.getByRef(csRef);if(cachedCS){return cachedCS}}const parsedCS=this.#parse(cs,options);if(csRef){globalColorSpaceCache.set(null,csRef,parsedCS)}return parsedCS}static#parse(cs,options){const{xref:xref,resources:resources,pdfFunctionFactory:pdfFunctionFactory,globalColorSpaceCache:globalColorSpaceCache}=options;cs=xref.fetchIfRef(cs);if(cs instanceof Name){switch(cs.name){case\"G\":case\"DeviceGray\":return this.gray;case\"RGB\":case\"DeviceRGB\":return this.rgb;case\"DeviceRGBA\":return this.rgba;case\"CMYK\":case\"DeviceCMYK\":return this.cmyk;case\"Pattern\":return new PatternCS(null);default:if(resources instanceof Dict){const colorSpaces=resources.get(\"ColorSpace\");if(colorSpaces instanceof Dict){const resourcesCS=colorSpaces.get(cs.name);if(resourcesCS){if(resourcesCS instanceof Name){return this.#parse(resourcesCS,options)}cs=resourcesCS;break}}}warn(`Unrecognized ColorSpace: ${cs.name}`);return this.gray}}if(Array.isArray(cs)){const mode=xref.fetchIfRef(cs[0]).name;let params,numComps,baseCS,whitePoint,blackPoint,gamma;switch(mode){case\"G\":case\"DeviceGray\":return this.gray;case\"RGB\":case\"DeviceRGB\":return this.rgb;case\"CMYK\":case\"DeviceCMYK\":return this.cmyk;case\"CalGray\":params=xref.fetchIfRef(cs[1]);whitePoint=params.getArray(\"WhitePoint\");blackPoint=params.getArray(\"BlackPoint\");gamma=params.get(\"Gamma\");return new CalGrayCS(whitePoint,blackPoint,gamma);case\"CalRGB\":params=xref.fetchIfRef(cs[1]);whitePoint=params.getArray(\"WhitePoint\");blackPoint=params.getArray(\"BlackPoint\");gamma=params.getArray(\"Gamma\");const matrix=params.getArray(\"Matrix\");return new CalRGBCS(whitePoint,blackPoint,gamma,matrix);case\"ICCBased\":const isRef=cs[1]instanceof Ref;if(isRef){const cachedCS=globalColorSpaceCache.getByRef(cs[1]);if(cachedCS){return cachedCS}}const stream=xref.fetchIfRef(cs[1]);const dict=stream.dict;numComps=dict.get(\"N\");if(IccColorSpace.isUsable){try{const iccCS=new IccColorSpace(stream.getBytes(),\"ICCBased\",numComps);if(isRef){globalColorSpaceCache.set(null,cs[1],iccCS)}return iccCS}catch(ex){if(ex instanceof MissingDataException){throw ex}warn(`ICCBased color space (${cs[1]}): \"${ex}\".`)}}const altRaw=dict.getRaw(\"Alternate\");if(altRaw){const altCS=this.#subParse(altRaw,options);if(altCS.numComps===numComps){return altCS}warn(\"ICCBased color space: Ignoring incorrect /Alternate entry.\")}if(numComps===1){return this.gray}else if(numComps===3){return this.rgb}else if(numComps===4){return this.cmyk}break;case\"Pattern\":baseCS=cs[1]||null;if(baseCS){baseCS=this.#subParse(baseCS,options)}return new PatternCS(baseCS);case\"I\":case\"Indexed\":baseCS=this.#subParse(cs[1],options);const hiVal=MathClamp(xref.fetchIfRef(cs[2]),0,255);const lookup=xref.fetchIfRef(cs[3]);return new IndexedCS(baseCS,hiVal,lookup);case\"Separation\":case\"DeviceN\":const name=xref.fetchIfRef(cs[1]);numComps=Array.isArray(name)?name.length:1;baseCS=this.#subParse(cs[2],options);const tintFn=pdfFunctionFactory.create(cs[3]);return new AlternateCS(numComps,baseCS,tintFn);case\"Lab\":params=xref.fetchIfRef(cs[1]);whitePoint=params.getArray(\"WhitePoint\");blackPoint=params.getArray(\"BlackPoint\");const range=params.getArray(\"Range\");return new LabCS(whitePoint,blackPoint,range);default:warn(`Unimplemented ColorSpace object: ${mode}`);return this.gray}}warn(`Unrecognized ColorSpace object: ${cs}`);return this.gray}static get gray(){return shadow(this,\"gray\",new DeviceGrayCS)}static get rgb(){return shadow(this,\"rgb\",new DeviceRgbCS)}static get rgba(){return shadow(this,\"rgba\",new DeviceRgbaCS)}static get cmyk(){if(CmykICCBasedCS.isUsable){try{return shadow(this,\"cmyk\",new CmykICCBasedCS)}catch{warn(\"CMYK fallback: DeviceCMYK\")}}return shadow(this,\"cmyk\",new DeviceCmykCS)}}class JpegError extends BaseException{constructor(msg){super(msg,\"JpegError\")}}class DNLMarkerError extends BaseException{constructor(message,scanLines){super(message,\"DNLMarkerError\");this.scanLines=scanLines}}class EOIMarkerError extends BaseException{constructor(msg){super(msg,\"EOIMarkerError\")}}const dctZigZag=new Uint8Array([0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63]);const dctCos1=4017;const dctSin1=799;const dctCos3=3406;const dctSin3=2276;const dctCos6=1567;const dctSin6=3784;const dctSqrt2=5793;const dctSqrt1d2=2896;function buildHuffmanTable(codeLengths,values){let k=0,i,j,length=16;while(length>0&&!codeLengths[length-1]){length--}const code=[{children:[],index:0}];let p=code[0],q;for(i=0;i<length;i++){for(j=0;j<codeLengths[i];j++){p=code.pop();p.children[p.index]=values[k];while(p.index>0){p=code.pop()}p.index++;code.push(p);while(code.length<=i){code.push(q={children:[],index:0});p.children[p.index]=q.children;p=q}k++}if(i+1<length){code.push(q={children:[],index:0});p.children[p.index]=q.children;p=q}}return code[0].children}function getBlockBufferOffset(component,row,col){return 64*((component.blocksPerLine+1)*row+col)}function decodeScan(data,offset,frame,components,resetInterval,spectralStart,spectralEnd,successivePrev,successive,parseDNLMarker=false){const mcusPerLine=frame.mcusPerLine;const progressive=frame.progressive;const startOffset=offset;let bitsData=0,bitsCount=0;function readBit(){if(bitsCount>0){bitsCount--;return bitsData>>bitsCount&1}bitsData=data[offset++];if(bitsData===255){const nextByte=data[offset++];if(nextByte){if(nextByte===220&&parseDNLMarker){offset+=2;const scanLines=readUint16(data,offset);offset+=2;if(scanLines>0&&scanLines!==frame.scanLines){throw new DNLMarkerError(\"Found DNL marker (0xFFDC) while parsing scan data\",scanLines)}}else if(nextByte===217){if(parseDNLMarker){const maybeScanLines=blockRow*(frame.precision===8?8:0);if(maybeScanLines>0&&Math.round(frame.scanLines/maybeScanLines)>=5){throw new DNLMarkerError(\"Found EOI marker (0xFFD9) while parsing scan data, \"+\"possibly caused by incorrect `scanLines` parameter\",maybeScanLines)}}throw new EOIMarkerError(\"Found EOI marker (0xFFD9) while parsing scan data\")}throw new JpegError(`unexpected marker ${(bitsData<<8|nextByte).toString(16)}`)}}bitsCount=7;return bitsData>>>7}function decodeHuffman(tree){let node=tree;while(true){node=node[readBit()];switch(typeof node){case\"number\":return node;case\"object\":continue}throw new JpegError(\"invalid huffman sequence\")}}function receive(length){let n=0;while(length>0){n=n<<1|readBit();length--}return n}function receiveAndExtend(length){if(length===1){return readBit()===1?1:-1}const n=receive(length);if(n>=1<<length-1){return n}return n+(-1<<length)+1}function decodeBaseline(component,blockOffset){const t=decodeHuffman(component.huffmanTableDC);const diff=t===0?0:receiveAndExtend(t);component.blockData[blockOffset]=component.pred+=diff;let k=1;while(k<64){const rs=decodeHuffman(component.huffmanTableAC);const s=rs&15,r=rs>>4;if(s===0){if(r<15){break}k+=16;continue}k+=r;const z=dctZigZag[k];component.blockData[blockOffset+z]=receiveAndExtend(s);k++}}function decodeDCFirst(component,blockOffset){const t=decodeHuffman(component.huffmanTableDC);const diff=t===0?0:receiveAndExtend(t)<<successive;component.blockData[blockOffset]=component.pred+=diff}function decodeDCSuccessive(component,blockOffset){component.blockData[blockOffset]|=readBit()<<successive}let eobrun=0;function decodeACFirst(component,blockOffset){if(eobrun>0){eobrun--;return}let k=spectralStart;const e=spectralEnd;while(k<=e){const rs=decodeHuffman(component.huffmanTableAC);const s=rs&15,r=rs>>4;if(s===0){if(r<15){eobrun=receive(r)+(1<<r)-1;break}k+=16;continue}k+=r;const z=dctZigZag[k];component.blockData[blockOffset+z]=receiveAndExtend(s)*(1<<successive);k++}}let successiveACState=0,successiveACNextValue;function decodeACSuccessive(component,blockOffset){let k=spectralStart;const e=spectralEnd;let r=0;let s;let rs;while(k<=e){const offsetZ=blockOffset+dctZigZag[k];const sign=component.blockData[offsetZ]<0?-1:1;switch(successiveACState){case 0:rs=decodeHuffman(component.huffmanTableAC);s=rs&15;r=rs>>4;if(s===0){if(r<15){eobrun=receive(r)+(1<<r);successiveACState=4}else{r=16;successiveACState=1}}else{if(s!==1){throw new JpegError(\"invalid ACn encoding\")}successiveACNextValue=receiveAndExtend(s);successiveACState=r?2:3}continue;case 1:case 2:if(component.blockData[offsetZ]){component.blockData[offsetZ]+=sign*(readBit()<<successive)}else{r--;if(r===0){successiveACState=successiveACState===2?3:0}}break;case 3:if(component.blockData[offsetZ]){component.blockData[offsetZ]+=sign*(readBit()<<successive)}else{component.blockData[offsetZ]=successiveACNextValue<<successive;successiveACState=0}break;case 4:if(component.blockData[offsetZ]){component.blockData[offsetZ]+=sign*(readBit()<<successive)}break}k++}if(successiveACState===4){eobrun--;if(eobrun===0){successiveACState=0}}}let blockRow=0;function decodeMcu(component,decode,mcu,row,col){const mcuRow=mcu/mcusPerLine|0;const mcuCol=mcu%mcusPerLine;blockRow=mcuRow*component.v+row;const blockCol=mcuCol*component.h+col;const blockOffset=getBlockBufferOffset(component,blockRow,blockCol);decode(component,blockOffset)}function decodeBlock(component,decode,mcu){blockRow=mcu/component.blocksPerLine|0;const blockCol=mcu%component.blocksPerLine;const blockOffset=getBlockBufferOffset(component,blockRow,blockCol);decode(component,blockOffset)}const componentsLength=components.length;let component,i,j,k,n;let decodeFn;if(progressive){if(spectralStart===0){decodeFn=successivePrev===0?decodeDCFirst:decodeDCSuccessive}else{decodeFn=successivePrev===0?decodeACFirst:decodeACSuccessive}}else{decodeFn=decodeBaseline}let mcu=0,fileMarker;const mcuExpected=componentsLength===1?components[0].blocksPerLine*components[0].blocksPerColumn:mcusPerLine*frame.mcusPerColumn;let h,v;while(mcu<=mcuExpected){const mcuToRead=resetInterval?Math.min(mcuExpected-mcu,resetInterval):mcuExpected;if(mcuToRead>0){for(i=0;i<componentsLength;i++){components[i].pred=0}eobrun=0;if(componentsLength===1){component=components[0];for(n=0;n<mcuToRead;n++){decodeBlock(component,decodeFn,mcu);mcu++}}else{for(n=0;n<mcuToRead;n++){for(i=0;i<componentsLength;i++){component=components[i];h=component.h;v=component.v;for(j=0;j<v;j++){for(k=0;k<h;k++){decodeMcu(component,decodeFn,mcu,j,k)}}}mcu++}}}bitsCount=0;fileMarker=findNextFileMarker(data,offset);if(!fileMarker){break}if(fileMarker.invalid){const partialMsg=mcuToRead>0?\"unexpected\":\"excessive\";warn(`decodeScan - ${partialMsg} MCU data, current marker is: ${fileMarker.invalid}`);offset=fileMarker.offset}if(fileMarker.marker>=65488&&fileMarker.marker<=65495){offset+=2}else{break}}return offset-startOffset}function quantizeAndInverse(component,blockBufferOffset,p){const qt=component.quantizationTable,blockData=component.blockData;let v0,v1,v2,v3,v4,v5,v6,v7;let p0,p1,p2,p3,p4,p5,p6,p7;let t;if(!qt){throw new JpegError(\"missing required Quantization Table.\")}for(let row=0;row<64;row+=8){p0=blockData[blockBufferOffset+row];p1=blockData[blockBufferOffset+row+1];p2=blockData[blockBufferOffset+row+2];p3=blockData[blockBufferOffset+row+3];p4=blockData[blockBufferOffset+row+4];p5=blockData[blockBufferOffset+row+5];p6=blockData[blockBufferOffset+row+6];p7=blockData[blockBufferOffset+row+7];p0*=qt[row];if((p1|p2|p3|p4|p5|p6|p7)===0){t=dctSqrt2*p0+512>>10;p[row]=t;p[row+1]=t;p[row+2]=t;p[row+3]=t;p[row+4]=t;p[row+5]=t;p[row+6]=t;p[row+7]=t;continue}p1*=qt[row+1];p2*=qt[row+2];p3*=qt[row+3];p4*=qt[row+4];p5*=qt[row+5];p6*=qt[row+6];p7*=qt[row+7];v0=dctSqrt2*p0+128>>8;v1=dctSqrt2*p4+128>>8;v2=p2;v3=p6;v4=dctSqrt1d2*(p1-p7)+128>>8;v7=dctSqrt1d2*(p1+p7)+128>>8;v5=p3<<4;v6=p5<<4;v0=v0+v1+1>>1;v1=v0-v1;t=v2*dctSin6+v3*dctCos6+128>>8;v2=v2*dctCos6-v3*dctSin6+128>>8;v3=t;v4=v4+v6+1>>1;v6=v4-v6;v7=v7+v5+1>>1;v5=v7-v5;v0=v0+v3+1>>1;v3=v0-v3;v1=v1+v2+1>>1;v2=v1-v2;t=v4*dctSin3+v7*dctCos3+2048>>12;v4=v4*dctCos3-v7*dctSin3+2048>>12;v7=t;t=v5*dctSin1+v6*dctCos1+2048>>12;v5=v5*dctCos1-v6*dctSin1+2048>>12;v6=t;p[row]=v0+v7;p[row+7]=v0-v7;p[row+1]=v1+v6;p[row+6]=v1-v6;p[row+2]=v2+v5;p[row+5]=v2-v5;p[row+3]=v3+v4;p[row+4]=v3-v4}for(let col=0;col<8;++col){p0=p[col];p1=p[col+8];p2=p[col+16];p3=p[col+24];p4=p[col+32];p5=p[col+40];p6=p[col+48];p7=p[col+56];if((p1|p2|p3|p4|p5|p6|p7)===0){t=dctSqrt2*p0+8192>>14;if(t<-2040){t=0}else if(t>=2024){t=255}else{t=t+2056>>4}blockData[blockBufferOffset+col]=t;blockData[blockBufferOffset+col+8]=t;blockData[blockBufferOffset+col+16]=t;blockData[blockBufferOffset+col+24]=t;blockData[blockBufferOffset+col+32]=t;blockData[blockBufferOffset+col+40]=t;blockData[blockBufferOffset+col+48]=t;blockData[blockBufferOffset+col+56]=t;continue}v0=dctSqrt2*p0+2048>>12;v1=dctSqrt2*p4+2048>>12;v2=p2;v3=p6;v4=dctSqrt1d2*(p1-p7)+2048>>12;v7=dctSqrt1d2*(p1+p7)+2048>>12;v5=p3;v6=p5;v0=(v0+v1+1>>1)+4112;v1=v0-v1;t=v2*dctSin6+v3*dctCos6+2048>>12;v2=v2*dctCos6-v3*dctSin6+2048>>12;v3=t;v4=v4+v6+1>>1;v6=v4-v6;v7=v7+v5+1>>1;v5=v7-v5;v0=v0+v3+1>>1;v3=v0-v3;v1=v1+v2+1>>1;v2=v1-v2;t=v4*dctSin3+v7*dctCos3+2048>>12;v4=v4*dctCos3-v7*dctSin3+2048>>12;v7=t;t=v5*dctSin1+v6*dctCos1+2048>>12;v5=v5*dctCos1-v6*dctSin1+2048>>12;v6=t;p0=v0+v7;p7=v0-v7;p1=v1+v6;p6=v1-v6;p2=v2+v5;p5=v2-v5;p3=v3+v4;p4=v3-v4;if(p0<16){p0=0}else if(p0>=4080){p0=255}else{p0>>=4}if(p1<16){p1=0}else if(p1>=4080){p1=255}else{p1>>=4}if(p2<16){p2=0}else if(p2>=4080){p2=255}else{p2>>=4}if(p3<16){p3=0}else if(p3>=4080){p3=255}else{p3>>=4}if(p4<16){p4=0}else if(p4>=4080){p4=255}else{p4>>=4}if(p5<16){p5=0}else if(p5>=4080){p5=255}else{p5>>=4}if(p6<16){p6=0}else if(p6>=4080){p6=255}else{p6>>=4}if(p7<16){p7=0}else if(p7>=4080){p7=255}else{p7>>=4}blockData[blockBufferOffset+col]=p0;blockData[blockBufferOffset+col+8]=p1;blockData[blockBufferOffset+col+16]=p2;blockData[blockBufferOffset+col+24]=p3;blockData[blockBufferOffset+col+32]=p4;blockData[blockBufferOffset+col+40]=p5;blockData[blockBufferOffset+col+48]=p6;blockData[blockBufferOffset+col+56]=p7}}function buildComponentData(frame,component){const blocksPerLine=component.blocksPerLine;const blocksPerColumn=component.blocksPerColumn;const computationBuffer=new Int16Array(64);for(let blockRow=0;blockRow<blocksPerColumn;blockRow++){for(let blockCol=0;blockCol<blocksPerLine;blockCol++){const offset=getBlockBufferOffset(component,blockRow,blockCol);quantizeAndInverse(component,offset,computationBuffer)}}return component.blockData}function findNextFileMarker(data,currentPos,startPos=currentPos){const maxPos=data.length-1;let newPos=startPos<currentPos?startPos:currentPos;if(currentPos>=maxPos){return null}const currentMarker=readUint16(data,currentPos);if(currentMarker>=65472&&currentMarker<=65534){return{invalid:null,marker:currentMarker,offset:currentPos}}let newMarker=readUint16(data,newPos);while(!(newMarker>=65472&&newMarker<=65534)){if(++newPos>=maxPos){return null}newMarker=readUint16(data,newPos)}return{invalid:currentMarker.toString(16),marker:newMarker,offset:newPos}}function prepareComponents(frame){const mcusPerLine=Math.ceil(frame.samplesPerLine/8/frame.maxH);const mcusPerColumn=Math.ceil(frame.scanLines/8/frame.maxV);for(const component of frame.components){const blocksPerLine=Math.ceil(Math.ceil(frame.samplesPerLine/8)*component.h/frame.maxH);const blocksPerColumn=Math.ceil(Math.ceil(frame.scanLines/8)*component.v/frame.maxV);const blocksPerLineForMcu=mcusPerLine*component.h;const blocksPerColumnForMcu=mcusPerColumn*component.v;const blocksBufferSize=64*blocksPerColumnForMcu*(blocksPerLineForMcu+1);component.blockData=new Int16Array(blocksBufferSize);component.blocksPerLine=blocksPerLine;component.blocksPerColumn=blocksPerColumn}frame.mcusPerLine=mcusPerLine;frame.mcusPerColumn=mcusPerColumn}function readDataBlock(data,offset){const length=readUint16(data,offset);offset+=2;let endOffset=offset+length-2;const fileMarker=findNextFileMarker(data,endOffset,offset);if(fileMarker?.invalid){warn(\"readDataBlock - incorrect length, current marker is: \"+fileMarker.invalid);endOffset=fileMarker.offset}const array=data.subarray(offset,endOffset);return{appData:array,oldOffset:offset,newOffset:offset+array.length}}function skipData(data,offset){const length=readUint16(data,offset);offset+=2;const endOffset=offset+length-2;const fileMarker=findNextFileMarker(data,endOffset,offset);if(fileMarker?.invalid){return fileMarker.offset}return endOffset}class JpegImage{constructor({decodeTransform:decodeTransform=null,colorTransform:colorTransform=-1}={}){this._decodeTransform=decodeTransform;this._colorTransform=colorTransform}static canUseImageDecoder(data,colorTransform=-1){let exifOffsets=null;let offset=0;let numComponents=null;let fileMarker=readUint16(data,offset);offset+=2;if(fileMarker!==65496){throw new JpegError(\"SOI not found\")}fileMarker=readUint16(data,offset);offset+=2;markerLoop:while(fileMarker!==65497){switch(fileMarker){case 65505:const{appData:appData,oldOffset:oldOffset,newOffset:newOffset}=readDataBlock(data,offset);offset=newOffset;if(appData[0]===69&&appData[1]===120&&appData[2]===105&&appData[3]===102&&appData[4]===0&&appData[5]===0){if(exifOffsets){throw new JpegError(\"Duplicate EXIF-blocks found.\")}exifOffsets={exifStart:oldOffset+6,exifEnd:newOffset}}fileMarker=readUint16(data,offset);offset+=2;continue;case 65472:case 65473:case 65474:numComponents=data[offset+(2+1+2+2)];break markerLoop;case 65535:if(data[offset]!==255){offset--}break}offset=skipData(data,offset);fileMarker=readUint16(data,offset);offset+=2}if(numComponents===4){return null}if(numComponents===3&&colorTransform===0){return null}return exifOffsets||{}}parse(data,{dnlScanLines:dnlScanLines=null}={}){let offset=0;let jfif=null;let adobe=null;let frame,resetInterval;let numSOSMarkers=0;const quantizationTables=[];const huffmanTablesAC=[],huffmanTablesDC=[];let fileMarker=readUint16(data,offset);offset+=2;if(fileMarker!==65496){throw new JpegError(\"SOI not found\")}fileMarker=readUint16(data,offset);offset+=2;markerLoop:while(fileMarker!==65497){let i,j,l;switch(fileMarker){case 65504:case 65505:case 65506:case 65507:case 65508:case 65509:case 65510:case 65511:case 65512:case 65513:case 65514:case 65515:case 65516:case 65517:case 65518:case 65519:case 65534:const{appData:appData,newOffset:newOffset}=readDataBlock(data,offset);offset=newOffset;if(fileMarker===65504){if(appData[0]===74&&appData[1]===70&&appData[2]===73&&appData[3]===70&&appData[4]===0){jfif={version:{major:appData[5],minor:appData[6]},densityUnits:appData[7],xDensity:appData[8]<<8|appData[9],yDensity:appData[10]<<8|appData[11],thumbWidth:appData[12],thumbHeight:appData[13],thumbData:appData.subarray(14,14+3*appData[12]*appData[13])}}}if(fileMarker===65518){if(appData[0]===65&&appData[1]===100&&appData[2]===111&&appData[3]===98&&appData[4]===101){adobe={version:appData[5]<<8|appData[6],flags0:appData[7]<<8|appData[8],flags1:appData[9]<<8|appData[10],transformCode:appData[11]}}}break;case 65499:const quantizationTablesLength=readUint16(data,offset);offset+=2;const quantizationTablesEnd=quantizationTablesLength+offset-2;let z;while(offset<quantizationTablesEnd){const quantizationTableSpec=data[offset++];const tableData=new Uint16Array(64);if(quantizationTableSpec>>4===0){for(j=0;j<64;j++){z=dctZigZag[j];tableData[z]=data[offset++]}}else if(quantizationTableSpec>>4===1){for(j=0;j<64;j++){z=dctZigZag[j];tableData[z]=readUint16(data,offset);offset+=2}}else{throw new JpegError(\"DQT - invalid table spec\")}quantizationTables[quantizationTableSpec&15]=tableData}break;case 65472:case 65473:case 65474:if(frame){throw new JpegError(\"Only single frame JPEGs supported\")}offset+=2;frame={};frame.extended=fileMarker===65473;frame.progressive=fileMarker===65474;frame.precision=data[offset++];const sofScanLines=readUint16(data,offset);offset+=2;frame.scanLines=dnlScanLines||sofScanLines;frame.samplesPerLine=readUint16(data,offset);offset+=2;frame.components=[];frame.componentIds={};const componentsCount=data[offset++];let maxH=0,maxV=0;for(i=0;i<componentsCount;i++){const componentId=data[offset];const h=data[offset+1]>>4;const v=data[offset+1]&15;if(maxH<h){maxH=h}if(maxV<v){maxV=v}const qId=data[offset+2];l=frame.components.push({h:h,v:v,quantizationId:qId,quantizationTable:null});frame.componentIds[componentId]=l-1;offset+=3}frame.maxH=maxH;frame.maxV=maxV;prepareComponents(frame);break;case 65476:const huffmanLength=readUint16(data,offset);offset+=2;for(i=2;i<huffmanLength;){const huffmanTableSpec=data[offset++];const codeLengths=new Uint8Array(16);let codeLengthSum=0;for(j=0;j<16;j++,offset++){codeLengthSum+=codeLengths[j]=data[offset]}const huffmanValues=new Uint8Array(codeLengthSum);for(j=0;j<codeLengthSum;j++,offset++){huffmanValues[j]=data[offset]}i+=17+codeLengthSum;(huffmanTableSpec>>4===0?huffmanTablesDC:huffmanTablesAC)[huffmanTableSpec&15]=buildHuffmanTable(codeLengths,huffmanValues)}break;case 65501:offset+=2;resetInterval=readUint16(data,offset);offset+=2;break;case 65498:const parseDNLMarker=++numSOSMarkers===1&&!dnlScanLines;offset+=2;const selectorsCount=data[offset++],components=[];for(i=0;i<selectorsCount;i++){const index=data[offset++];const componentIndex=frame.componentIds[index];const component=frame.components[componentIndex];component.index=index;const tableSpec=data[offset++];component.huffmanTableDC=huffmanTablesDC[tableSpec>>4];component.huffmanTableAC=huffmanTablesAC[tableSpec&15];components.push(component)}const spectralStart=data[offset++],spectralEnd=data[offset++],successiveApproximation=data[offset++];try{const processed=decodeScan(data,offset,frame,components,resetInterval,spectralStart,spectralEnd,successiveApproximation>>4,successiveApproximation&15,parseDNLMarker);offset+=processed}catch(ex){if(ex instanceof DNLMarkerError){warn(`${ex.message} -- attempting to re-parse the JPEG image.`);return this.parse(data,{dnlScanLines:ex.scanLines})}else if(ex instanceof EOIMarkerError){warn(`${ex.message} -- ignoring the rest of the image data.`);break markerLoop}throw ex}break;case 65500:offset+=4;break;case 65535:if(data[offset]!==255){offset--}break;default:const nextFileMarker=findNextFileMarker(data,offset-2,offset-3);if(nextFileMarker?.invalid){warn(\"JpegImage.parse - unexpected data, current marker is: \"+nextFileMarker.invalid);offset=nextFileMarker.offset;break}if(!nextFileMarker||offset>=data.length-1){warn(\"JpegImage.parse - reached the end of the image data \"+\"without finding an EOI marker (0xFFD9).\");break markerLoop}throw new JpegError(\"JpegImage.parse - unknown marker: \"+fileMarker.toString(16))}fileMarker=readUint16(data,offset);offset+=2}if(!frame){throw new JpegError(\"JpegImage.parse - no frame data found.\")}this.width=frame.samplesPerLine;this.height=frame.scanLines;this.jfif=jfif;this.adobe=adobe;this.components=[];for(const component of frame.components){const quantizationTable=quantizationTables[component.quantizationId];if(quantizationTable){component.quantizationTable=quantizationTable}this.components.push({index:component.index,output:buildComponentData(frame,component),scaleX:component.h/frame.maxH,scaleY:component.v/frame.maxV,blocksPerLine:component.blocksPerLine,blocksPerColumn:component.blocksPerColumn})}this.numComponents=this.components.length;return undefined}_getLinearizedBlockData(width,height,isSourcePDF=false){const scaleX=this.width/width,scaleY=this.height/height;let component,componentScaleX,componentScaleY,blocksPerScanline;let x,y,i,j,k;let index;let offset=0;let output;const numComponents=this.components.length;const dataLength=width*height*numComponents;const data=new Uint8ClampedArray(dataLength);const xScaleBlockOffset=new Uint32Array(width);const mask3LSB=4294967288;let lastComponentScaleX;for(i=0;i<numComponents;i++){component=this.components[i];componentScaleX=component.scaleX*scaleX;componentScaleY=component.scaleY*scaleY;offset=i;output=component.output;blocksPerScanline=component.blocksPerLine+1<<3;if(componentScaleX!==lastComponentScaleX){for(x=0;x<width;x++){j=0|x*componentScaleX;xScaleBlockOffset[x]=(j&mask3LSB)<<3|j&7}lastComponentScaleX=componentScaleX}for(y=0;y<height;y++){j=0|y*componentScaleY;index=blocksPerScanline*(j&mask3LSB)|(j&7)<<3;for(x=0;x<width;x++){data[offset]=output[index+xScaleBlockOffset[x]];offset+=numComponents}}}let transform=this._decodeTransform;if(!isSourcePDF&&numComponents===4&&!transform){transform=new Int32Array([-256,255,-256,255,-256,255,-256,255])}if(transform){for(i=0;i<dataLength;){for(j=0,k=0;j<numComponents;j++,i++,k+=2){data[i]=(data[i]*transform[k]>>8)+transform[k+1]}}}return data}get _isColorConversionNeeded(){if(this.adobe){return!!this.adobe.transformCode}if(this.numComponents===3){if(this._colorTransform===0){return false}else if(this.components[0].index===82&&this.components[1].index===71&&this.components[2].index===66){return false}return true}if(this._colorTransform===1){return true}return false}_convertYccToRgb(data){let Y,Cb,Cr;for(let i=0,length=data.length;i<length;i+=3){Y=data[i];Cb=data[i+1];Cr=data[i+2];data[i]=Y-179.456+1.402*Cr;data[i+1]=Y+135.459-.344*Cb-.714*Cr;data[i+2]=Y-226.816+1.772*Cb}return data}_convertYccToRgba(data,out){for(let i=0,j=0,length=data.length;i<length;i+=3,j+=4){const Y=data[i];const Cb=data[i+1];const Cr=data[i+2];out[j]=Y-179.456+1.402*Cr;out[j+1]=Y+135.459-.344*Cb-.714*Cr;out[j+2]=Y-226.816+1.772*Cb;out[j+3]=255}return out}_convertYcckToRgb(data){this._convertYcckToCmyk(data);return this._convertCmykToRgb(data)}_convertYcckToRgba(data){this._convertYcckToCmyk(data);return this._convertCmykToRgba(data)}_convertYcckToCmyk(data){let Y,Cb,Cr;for(let i=0,length=data.length;i<length;i+=4){Y=data[i];Cb=data[i+1];Cr=data[i+2];data[i]=434.456-Y-1.402*Cr;data[i+1]=119.541-Y+.344*Cb+.714*Cr;data[i+2]=481.816-Y-1.772*Cb}return data}_convertCmykToRgb(data){const count=data.length/4;ColorSpaceUtils.cmyk.getRgbBuffer(data,0,count,data,0,8,0);return data.subarray(0,count*3)}_convertCmykToRgba(data){ColorSpaceUtils.cmyk.getRgbBuffer(data,0,data.length/4,data,0,8,1);if(ColorSpaceUtils.cmyk instanceof DeviceCmykCS){for(let i=3,ii=data.length;i<ii;i+=4){data[i]=255}}return data}getData({width:width,height:height,forceRGBA:forceRGBA=false,forceRGB:forceRGB=false,isSourcePDF:isSourcePDF=false}){if(this.numComponents>4){throw new JpegError(\"Unsupported color mode\")}const data=this._getLinearizedBlockData(width,height,isSourcePDF);if(this.numComponents===1&&(forceRGBA||forceRGB)){const len=data.length*(forceRGBA?4:3);const rgbaData=new Uint8ClampedArray(len);let offset=0;if(forceRGBA){grayToRGBA(data,new Uint32Array(rgbaData.buffer))}else{for(const grayColor of data){rgbaData[offset++]=grayColor;rgbaData[offset++]=grayColor;rgbaData[offset++]=grayColor}}return rgbaData}else if(this.numComponents===3&&this._isColorConversionNeeded){if(forceRGBA){const rgbaData=new Uint8ClampedArray(data.length/3*4);return this._convertYccToRgba(data,rgbaData)}return this._convertYccToRgb(data)}else if(this.numComponents===4){if(this._isColorConversionNeeded){if(forceRGBA){return this._convertYcckToRgba(data)}if(forceRGB){return this._convertYcckToRgb(data)}return this._convertYcckToCmyk(data)}else if(forceRGBA){return this._convertCmykToRgba(data)}else if(forceRGB){return this._convertCmykToRgb(data)}}return data}}class JpegStream extends DecodeStream{static#isImageDecoderSupported=FeatureTest.isImageDecoderSupported;constructor(stream,maybeLength,params){super(maybeLength);this.stream=stream;this.dict=stream.dict;this.maybeLength=maybeLength;this.params=params}static get canUseImageDecoder(){return shadow(this,\"canUseImageDecoder\",this.#isImageDecoderSupported?ImageDecoder.isTypeSupported(\"image/jpeg\"):Promise.resolve(false))}static setOptions({isImageDecoderSupported:isImageDecoderSupported=false}){this.#isImageDecoderSupported=isImageDecoderSupported}get bytes(){return shadow(this,\"bytes\",this.stream.getBytes(this.maybeLength))}ensureBuffer(requested){}readBlock(){this.decodeImage()}get jpegOptions(){const jpegOptions={decodeTransform:undefined,colorTransform:undefined};const decodeArr=this.dict.getArray(\"D\",\"Decode\");if((this.forceRGBA||this.forceRGB)&&Array.isArray(decodeArr)){const bitsPerComponent=this.dict.get(\"BPC\",\"BitsPerComponent\")||8;const decodeArrLength=decodeArr.length;const transform=new Int32Array(decodeArrLength);let transformNeeded=false;const maxValue=(1<<bitsPerComponent)-1;for(let i=0;i<decodeArrLength;i+=2){transform[i]=(decodeArr[i+1]-decodeArr[i])*256|0;transform[i+1]=decodeArr[i]*maxValue|0;if(transform[i]!==256||transform[i+1]!==0){transformNeeded=true}}if(transformNeeded){jpegOptions.decodeTransform=transform}}if(this.params instanceof Dict){const colorTransform=this.params.get(\"ColorTransform\");if(Number.isInteger(colorTransform)){jpegOptions.colorTransform=colorTransform}}return shadow(this,\"jpegOptions\",jpegOptions)}#skipUselessBytes(data){for(let i=0,ii=data.length-1;i<ii;i++){if(data[i]===255&&data[i+1]===216){if(i>0){data=data.subarray(i)}break}}return data}decodeImage(bytes){if(this.eof){return this.buffer}bytes=this.#skipUselessBytes(bytes||this.bytes);const jpegImage=new JpegImage(this.jpegOptions);jpegImage.parse(bytes);const data=jpegImage.getData({width:this.drawWidth,height:this.drawHeight,forceRGBA:this.forceRGBA,forceRGB:this.forceRGB,isSourcePDF:true});this.buffer=data;this.bufferLength=data.length;this.eof=true;return this.buffer}get canAsyncDecodeImageFromBuffer(){return this.stream.isAsync}async getTransferableImage(){if(!await JpegStream.canUseImageDecoder){return null}const jpegOptions=this.jpegOptions;if(jpegOptions.decodeTransform){return null}let decoder;try{const bytes=this.canAsyncDecodeImageFromBuffer&&await this.stream.asyncGetBytes()||this.bytes;if(!bytes){return null}let data=this.#skipUselessBytes(bytes);const useImageDecoder=JpegImage.canUseImageDecoder(data,jpegOptions.colorTransform);if(!useImageDecoder){return null}if(useImageDecoder.exifStart){data=data.slice();data.fill(0,useImageDecoder.exifStart,useImageDecoder.exifEnd)}decoder=new ImageDecoder({data:data,type:\"image/jpeg\",preferAnimation:false});return(await decoder.decode()).image}catch(reason){warn(`getTransferableImage - failed: \"${reason}\".`);return null}finally{decoder?.close()}}}var OpenJPEG=(()=>async function(moduleArg={}){var moduleRtn;var Module=moduleArg;var readyPromiseResolve,readyPromiseReject;var readyPromise=new Promise(((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject}));var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var _scriptName=import.meta.url;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var readAsync,readBinary;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){try{scriptDirectory=new URL(\".\",_scriptName).href}catch{}readAsync=async url=>{var response=await fetch(url,{credentials:\"same-origin\"});if(response.ok){return response.arrayBuffer()}throw new Error(response.status+\" : \"+response.url)}}else{}var out=console.log.bind(console);var err=console.error.bind(console);var wasmBinary;var wasmMemory;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAP64,HEAPU64,HEAPF64;var runtimeInitialized=false;function updateMemoryViews(){var b=wasmMemory.buffer;HEAP8=new Int8Array(b);HEAP16=new Int16Array(b);HEAPU8=new Uint8Array(b);HEAPU16=new Uint16Array(b);HEAP32=new Int32Array(b);HEAPU32=new Uint32Array(b);HEAPF32=new Float32Array(b);HEAPF64=new Float64Array(b);HEAP64=new BigInt64Array(b);HEAPU64=new BigUint64Array(b)}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(onPreRuns)}function initRuntime(){runtimeInitialized=true;wasmExports[\"t\"]()}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(onPostRuns)}var runDependencies=0;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;Module[\"monitorRunDependencies\"]?.(runDependencies)}function removeRunDependency(id){runDependencies--;Module[\"monitorRunDependencies\"]?.(runDependencies);if(runDependencies==0){if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){Module[\"onAbort\"]?.(what);what=\"Aborted(\"+what+\")\";err(what);ABORT=true;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var wasmBinaryFile;function findWasmBinary(){if(Module[\"locateFile\"]){return locateFile(\"openjpeg.wasm\")}return new URL(\"openjpeg.wasm\",import.meta.url).href}function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}async function getWasmBinary(binaryFile){if(!wasmBinary){try{var response=await readAsync(binaryFile);return new Uint8Array(response)}catch{}}return getBinarySync(binaryFile)}async function instantiateArrayBuffer(binaryFile,imports){try{var binary=await getWasmBinary(binaryFile);var instance=await WebAssembly.instantiate(binary,imports);return instance}catch(reason){err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)}}async function instantiateAsync(binary,binaryFile,imports){if(!binary&&typeof WebAssembly.instantiateStreaming==\"function\"){try{var response=fetch(binaryFile,{credentials:\"same-origin\"});var instantiationResult=await WebAssembly.instantiateStreaming(response,imports);return instantiationResult}catch(reason){err(`wasm streaming compile failed: ${reason}`);err(\"falling back to ArrayBuffer instantiation\")}}return instantiateArrayBuffer(binaryFile,imports)}function getWasmImports(){return{a:wasmImports}}async function createWasm(){function receiveInstance(instance,module){wasmExports=instance.exports;wasmMemory=wasmExports[\"s\"];updateMemoryViews();removeRunDependency(\"wasm-instantiate\");return wasmExports}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){return receiveInstance(result[\"instance\"])}var info=getWasmImports();if(Module[\"instantiateWasm\"]){return new Promise(((resolve,reject)=>{Module[\"instantiateWasm\"](info,((mod,inst)=>{resolve(receiveInstance(mod,inst))}))}))}wasmBinaryFile??=findWasmBinary();try{var result=await instantiateAsync(wasmBinary,wasmBinaryFile,info);var exports=receiveInstantiationResult(result);return exports}catch(e){readyPromiseReject(e);return Promise.reject(e)}}class ExitStatus{name=\"ExitStatus\";constructor(status){this.message=`Program terminated with exit(${status})`;this.status=status}}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var onPostRuns=[];var addOnPostRun=cb=>onPostRuns.push(cb);var onPreRuns=[];var addOnPreRun=cb=>onPreRuns.push(cb);var noExitRuntime=true;var __abort_js=()=>abort(\"\");var runtimeKeepaliveCounter=0;var __emscripten_runtime_keepalive_clear=()=>{noExitRuntime=false;runtimeKeepaliveCounter=0};var timers={};var handleException=e=>{if(e instanceof ExitStatus||e==\"unwind\"){return EXITSTATUS}quit_(1,e)};var keepRuntimeAlive=()=>noExitRuntime||runtimeKeepaliveCounter>0;var _proc_exit=code=>{EXITSTATUS=code;if(!keepRuntimeAlive()){Module[\"onExit\"]?.(code);ABORT=true}quit_(code,new ExitStatus(code))};var exitJS=(status,implicit)=>{EXITSTATUS=status;_proc_exit(status)};var _exit=exitJS;var maybeExit=()=>{if(!keepRuntimeAlive()){try{_exit(EXITSTATUS)}catch(e){handleException(e)}}};var callUserCallback=func=>{if(ABORT){return}try{func();maybeExit()}catch(e){handleException(e)}};var _emscripten_get_now=()=>performance.now();var __setitimer_js=(which,timeout_ms)=>{if(timers[which]){clearTimeout(timers[which].id);delete timers[which]}if(!timeout_ms)return 0;var id=setTimeout((()=>{delete timers[which];callUserCallback((()=>__emscripten_timeout(which,_emscripten_get_now())))}),timeout_ms);timers[which]={id:id,timeout_ms:timeout_ms};return 0};function _copy_pixels_1(compG_ptr,nb_pixels){compG_ptr>>=2;const imageData=Module.imageData=new Uint8ClampedArray(nb_pixels);const compG=HEAP32.subarray(compG_ptr,compG_ptr+nb_pixels);imageData.set(compG)}function _copy_pixels_3(compR_ptr,compG_ptr,compB_ptr,nb_pixels){compR_ptr>>=2;compG_ptr>>=2;compB_ptr>>=2;const imageData=Module.imageData=new Uint8ClampedArray(nb_pixels*3);const compR=HEAP32.subarray(compR_ptr,compR_ptr+nb_pixels);const compG=HEAP32.subarray(compG_ptr,compG_ptr+nb_pixels);const compB=HEAP32.subarray(compB_ptr,compB_ptr+nb_pixels);for(let i=0;i<nb_pixels;i++){imageData[3*i]=compR[i];imageData[3*i+1]=compG[i];imageData[3*i+2]=compB[i]}}function _copy_pixels_4(compR_ptr,compG_ptr,compB_ptr,compA_ptr,nb_pixels){compR_ptr>>=2;compG_ptr>>=2;compB_ptr>>=2;compA_ptr>>=2;const imageData=Module.imageData=new Uint8ClampedArray(nb_pixels*4);const compR=HEAP32.subarray(compR_ptr,compR_ptr+nb_pixels);const compG=HEAP32.subarray(compG_ptr,compG_ptr+nb_pixels);const compB=HEAP32.subarray(compB_ptr,compB_ptr+nb_pixels);const compA=HEAP32.subarray(compA_ptr,compA_ptr+nb_pixels);for(let i=0;i<nb_pixels;i++){imageData[4*i]=compR[i];imageData[4*i+1]=compG[i];imageData[4*i+2]=compB[i];imageData[4*i+3]=compA[i]}}var getHeapMax=()=>2147483648;var alignMemory=(size,alignment)=>Math.ceil(size/alignment)*alignment;var growMemory=size=>{var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536|0;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignMemory(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false};var ENV={};var getExecutableName=()=>thisProgram||\"./this.program\";var getEnvStrings=()=>{if(!getEnvStrings.strings){var lang=(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\";var env={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:lang,_:getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(`${x}=${env[x]}`)}getEnvStrings.strings=strings}return getEnvStrings.strings};var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var _environ_get=(__environ,environ_buf)=>{var bufSize=0;var envp=0;for(var string of getEnvStrings()){var ptr=environ_buf+bufSize;HEAPU32[__environ+envp>>2]=ptr;bufSize+=stringToUTF8(string,ptr,Infinity)+1;envp+=4}return 0};var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var _environ_sizes_get=(penviron_count,penviron_buf_size)=>{var strings=getEnvStrings();HEAPU32[penviron_count>>2]=strings.length;var bufSize=0;for(var string of strings){bufSize+=lengthBytesUTF8(string)+1}HEAPU32[penviron_buf_size>>2]=bufSize;return 0};var _fd_close=fd=>52;var INT53_MAX=9007199254740992;var INT53_MIN=-9007199254740992;var bigintToI53Checked=num=>num<INT53_MIN||num>INT53_MAX?NaN:Number(num);function _fd_seek(fd,offset,whence,newOffset){offset=bigintToI53Checked(offset);return 70}var printCharBuffers=[null,[],[]];var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder:undefined;var UTF8ArrayToString=(heapOrArray,idx=0,maxBytesToRead=NaN)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var printChar=(stream,curr)=>{var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer));buffer.length=0}else{buffer.push(curr)}};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\";var _fd_write=(fd,iov,iovcnt,pnum)=>{var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,HEAPU8[ptr+j])}num+=len}HEAPU32[pnum>>2]=num;return 0};function _gray_to_rgba(compG_ptr,nb_pixels){compG_ptr>>=2;const imageData=Module.imageData=new Uint8ClampedArray(nb_pixels*4);const compG=HEAP32.subarray(compG_ptr,compG_ptr+nb_pixels);for(let i=0;i<nb_pixels;i++){imageData[4*i]=imageData[4*i+1]=imageData[4*i+2]=compG[i];imageData[4*i+3]=255}}function _graya_to_rgba(compG_ptr,compA_ptr,nb_pixels){compG_ptr>>=2;compA_ptr>>=2;const imageData=Module.imageData=new Uint8ClampedArray(nb_pixels*4);const compG=HEAP32.subarray(compG_ptr,compG_ptr+nb_pixels);const compA=HEAP32.subarray(compA_ptr,compA_ptr+nb_pixels);for(let i=0;i<nb_pixels;i++){imageData[4*i]=imageData[4*i+1]=imageData[4*i+2]=compG[i];imageData[4*i+3]=compA[i]}}function _jsPrintWarning(message_ptr){const message=UTF8ToString(message_ptr);(Module.warn||console.warn)(`OpenJPEG: ${message}`)}function _rgb_to_rgba(compR_ptr,compG_ptr,compB_ptr,nb_pixels){compR_ptr>>=2;compG_ptr>>=2;compB_ptr>>=2;const imageData=Module.imageData=new Uint8ClampedArray(nb_pixels*4);const compR=HEAP32.subarray(compR_ptr,compR_ptr+nb_pixels);const compG=HEAP32.subarray(compG_ptr,compG_ptr+nb_pixels);const compB=HEAP32.subarray(compB_ptr,compB_ptr+nb_pixels);for(let i=0;i<nb_pixels;i++){imageData[4*i]=compR[i];imageData[4*i+1]=compG[i];imageData[4*i+2]=compB[i];imageData[4*i+3]=255}}function _storeErrorMessage(message_ptr){const message=UTF8ToString(message_ptr);if(!Module.errorMessages){Module.errorMessages=message}else{Module.errorMessages+=\"\\n\"+message}}var writeArrayToMemory=(array,buffer)=>{HEAP8.set(array,buffer)};if(Module[\"noExitRuntime\"])noExitRuntime=Module[\"noExitRuntime\"];if(Module[\"print\"])out=Module[\"print\"];if(Module[\"printErr\"])err=Module[\"printErr\"];if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];Module[\"writeArrayToMemory\"]=writeArrayToMemory;var wasmImports={l:__abort_js,k:__emscripten_runtime_keepalive_clear,m:__setitimer_js,g:_copy_pixels_1,f:_copy_pixels_3,e:_copy_pixels_4,n:_emscripten_resize_heap,p:_environ_get,q:_environ_sizes_get,b:_fd_close,o:_fd_seek,c:_fd_write,r:_gray_to_rgba,i:_graya_to_rgba,d:_jsPrintWarning,j:_proc_exit,h:_rgb_to_rgba,a:_storeErrorMessage};var wasmExports=await createWasm();var ___wasm_call_ctors=wasmExports[\"t\"];var _malloc=Module[\"_malloc\"]=wasmExports[\"u\"];var _free=Module[\"_free\"]=wasmExports[\"v\"];var _jp2_decode=Module[\"_jp2_decode\"]=wasmExports[\"w\"];var __emscripten_timeout=wasmExports[\"x\"];function run(){if(runDependencies>0){dependenciesFulfilled=run;return}preRun();if(runDependencies>0){dependenciesFulfilled=run;return}function doRun(){Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);Module[\"onRuntimeInitialized\"]?.();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout((()=>{setTimeout((()=>Module[\"setStatus\"](\"\")),1);doRun()}),1)}else{doRun()}}function preInit(){if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].shift()()}}}preInit();run();moduleRtn=readyPromise;return moduleRtn})();const openjpeg=OpenJPEG;class JpxError extends BaseException{constructor(msg){super(msg,\"JpxError\")}}class JpxImage{static#buffer=null;static#handler=null;static#modulePromise=null;static#useWasm=true;static#useWorkerFetch=true;static#wasmUrl=null;static setOptions({handler:handler,useWasm:useWasm,useWorkerFetch:useWorkerFetch,wasmUrl:wasmUrl}){this.#useWasm=useWasm;this.#useWorkerFetch=useWorkerFetch;this.#wasmUrl=wasmUrl;if(!useWorkerFetch){this.#handler=handler}}static async#getJsModule(fallbackCallback){const path=`${this.#wasmUrl}openjpeg_nowasm_fallback.js`;let instance=null;try{const mod=await import(path);instance=mod.default()}catch(e){warn(`JpxImage#getJsModule: ${e}`)}fallbackCallback(instance)}static async#instantiateWasm(fallbackCallback,imports,successCallback){const filename=\"openjpeg.wasm\";try{if(!this.#buffer){if(this.#useWorkerFetch){this.#buffer=await fetchBinaryData(`${this.#wasmUrl}${filename}`)}else{this.#buffer=await this.#handler.sendWithPromise(\"FetchBinaryData\",{type:\"wasmFactory\",filename:filename})}}const results=await WebAssembly.instantiate(this.#buffer,imports);return successCallback(results.instance)}catch(reason){warn(`JpxImage#instantiateWasm: ${reason}`);this.#getJsModule(fallbackCallback);return null}finally{this.#handler=null}}static async decode(bytes,{numComponents:numComponents=4,isIndexedColormap:isIndexedColormap=false,smaskInData:smaskInData=false,reducePower:reducePower=0}={}){if(!this.#modulePromise){const{promise:promise,resolve:resolve}=Promise.withResolvers();const promises=[promise];if(!this.#useWasm){this.#getJsModule(resolve)}else{promises.push(openjpeg({warn:warn,instantiateWasm:this.#instantiateWasm.bind(this,resolve)}))}this.#modulePromise=Promise.race(promises)}const module=await this.#modulePromise;if(!module){throw new JpxError(\"OpenJPEG failed to initialize\")}let ptr;try{const size=bytes.length;ptr=module._malloc(size);module.writeArrayToMemory(bytes,ptr);const ret=module._jp2_decode(ptr,size,numComponents>0?numComponents:0,!!isIndexedColormap,!!smaskInData,reducePower);if(ret){const{errorMessages:errorMessages}=module;if(errorMessages){delete module.errorMessages;throw new JpxError(errorMessages)}throw new JpxError(\"Unknown error\")}const{imageData:imageData}=module;module.imageData=null;return imageData}finally{if(ptr){module._free(ptr)}}}static cleanup(){this.#modulePromise=null}static parseImageProperties(stream){let newByte=stream.getByte();while(newByte>=0){const oldByte=newByte;newByte=stream.getByte();const code=oldByte<<8|newByte;if(code===65361){stream.skip(4);const Xsiz=stream.getInt32()>>>0;const Ysiz=stream.getInt32()>>>0;const XOsiz=stream.getInt32()>>>0;const YOsiz=stream.getInt32()>>>0;stream.skip(16);const Csiz=stream.getUint16();return{width:Xsiz-XOsiz,height:Ysiz-YOsiz,bitsPerComponent:8,componentsCount:Csiz}}}throw new JpxError(\"No size marker found in JPX stream\")}}function addState(parentState,pattern,checkFn,iterateFn,processFn){let state=parentState;for(let i=0,ii=pattern.length-1;i<ii;i++){const item=pattern[i];state=state[item]||=[]}state[pattern.at(-1)]={checkFn:checkFn,iterateFn:iterateFn,processFn:processFn}}const InitialState=[];addState(InitialState,[OPS.save,OPS.transform,OPS.paintInlineImageXObject,OPS.restore],null,(function iterateInlineImageGroup(context,i){const fnArray=context.fnArray;const iFirstSave=context.iCurr-3;const pos=(i-iFirstSave)%4;switch(pos){case 0:return fnArray[i]===OPS.save;case 1:return fnArray[i]===OPS.transform;case 2:return fnArray[i]===OPS.paintInlineImageXObject;case 3:return fnArray[i]===OPS.restore}throw new Error(`iterateInlineImageGroup - invalid pos: ${pos}`)}),(function foundInlineImageGroup(context,i){const MIN_IMAGES_IN_INLINE_IMAGES_BLOCK=10;const MAX_IMAGES_IN_INLINE_IMAGES_BLOCK=200;const MAX_WIDTH=1e3;const IMAGE_PADDING=1;const fnArray=context.fnArray,argsArray=context.argsArray;const curr=context.iCurr;const iFirstSave=curr-3;const iFirstTransform=curr-2;const iFirstPIIXO=curr-1;const count=Math.min(Math.floor((i-iFirstSave)/4),MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);if(count<MIN_IMAGES_IN_INLINE_IMAGES_BLOCK){return i-(i-iFirstSave)%4}let maxX=0;const map=[];let maxLineHeight=0;let currentX=IMAGE_PADDING,currentY=IMAGE_PADDING;for(let q=0;q<count;q++){const transform=argsArray[iFirstTransform+(q<<2)];const img=argsArray[iFirstPIIXO+(q<<2)][0];if(currentX+img.width>MAX_WIDTH){maxX=Math.max(maxX,currentX);currentY+=maxLineHeight+2*IMAGE_PADDING;currentX=0;maxLineHeight=0}map.push({transform:transform,x:currentX,y:currentY,w:img.width,h:img.height});currentX+=img.width+2*IMAGE_PADDING;maxLineHeight=Math.max(maxLineHeight,img.height)}const imgWidth=Math.max(maxX,currentX)+IMAGE_PADDING;const imgHeight=currentY+maxLineHeight+IMAGE_PADDING;const imgData=new Uint8Array(imgWidth*imgHeight*4);const imgRowSize=imgWidth<<2;for(let q=0;q<count;q++){const data=argsArray[iFirstPIIXO+(q<<2)][0].data;const rowSize=map[q].w<<2;let dataOffset=0;let offset=map[q].x+map[q].y*imgWidth<<2;imgData.set(data.subarray(0,rowSize),offset-imgRowSize);for(let k=0,kk=map[q].h;k<kk;k++){imgData.set(data.subarray(dataOffset,dataOffset+rowSize),offset);dataOffset+=rowSize;offset+=imgRowSize}imgData.set(data.subarray(dataOffset-rowSize,dataOffset),offset);while(offset>=0){data[offset-4]=data[offset];data[offset-3]=data[offset+1];data[offset-2]=data[offset+2];data[offset-1]=data[offset+3];data[offset+rowSize]=data[offset+rowSize-4];data[offset+rowSize+1]=data[offset+rowSize-3];data[offset+rowSize+2]=data[offset+rowSize-2];data[offset+rowSize+3]=data[offset+rowSize-1];offset-=imgRowSize}}const img={width:imgWidth,height:imgHeight};if(context.isOffscreenCanvasSupported){const canvas=new OffscreenCanvas(imgWidth,imgHeight);const ctx=canvas.getContext(\"2d\");ctx.putImageData(new ImageData(new Uint8ClampedArray(imgData.buffer),imgWidth,imgHeight),0,0);img.bitmap=canvas.transferToImageBitmap();img.data=null}else{img.kind=ImageKind.RGBA_32BPP;img.data=imgData}fnArray.splice(iFirstSave,count*4,OPS.paintInlineImageXObjectGroup);argsArray.splice(iFirstSave,count*4,[img,map]);return iFirstSave+1}));addState(InitialState,[OPS.save,OPS.transform,OPS.paintImageMaskXObject,OPS.restore],null,(function iterateImageMaskGroup(context,i){const fnArray=context.fnArray;const iFirstSave=context.iCurr-3;const pos=(i-iFirstSave)%4;switch(pos){case 0:return fnArray[i]===OPS.save;case 1:return fnArray[i]===OPS.transform;case 2:return fnArray[i]===OPS.paintImageMaskXObject;case 3:return fnArray[i]===OPS.restore}throw new Error(`iterateImageMaskGroup - invalid pos: ${pos}`)}),(function foundImageMaskGroup(context,i){const MIN_IMAGES_IN_MASKS_BLOCK=10;const MAX_IMAGES_IN_MASKS_BLOCK=100;const MAX_SAME_IMAGES_IN_MASKS_BLOCK=1e3;const fnArray=context.fnArray,argsArray=context.argsArray;const curr=context.iCurr;const iFirstSave=curr-3;const iFirstTransform=curr-2;const iFirstPIMXO=curr-1;let count=Math.floor((i-iFirstSave)/4);if(count<MIN_IMAGES_IN_MASKS_BLOCK){return i-(i-iFirstSave)%4}let isSameImage=false;let iTransform,transformArgs;const firstPIMXOArg0=argsArray[iFirstPIMXO][0];const firstTransformArg0=argsArray[iFirstTransform][0],firstTransformArg1=argsArray[iFirstTransform][1],firstTransformArg2=argsArray[iFirstTransform][2],firstTransformArg3=argsArray[iFirstTransform][3];if(firstTransformArg1===firstTransformArg2){isSameImage=true;iTransform=iFirstTransform+4;let iPIMXO=iFirstPIMXO+4;for(let q=1;q<count;q++,iTransform+=4,iPIMXO+=4){transformArgs=argsArray[iTransform];if(argsArray[iPIMXO][0]!==firstPIMXOArg0||transformArgs[0]!==firstTransformArg0||transformArgs[1]!==firstTransformArg1||transformArgs[2]!==firstTransformArg2||transformArgs[3]!==firstTransformArg3){if(q<MIN_IMAGES_IN_MASKS_BLOCK){isSameImage=false}else{count=q}break}}}if(isSameImage){count=Math.min(count,MAX_SAME_IMAGES_IN_MASKS_BLOCK);const positions=new Float32Array(count*2);iTransform=iFirstTransform;for(let q=0;q<count;q++,iTransform+=4){transformArgs=argsArray[iTransform];positions[q<<1]=transformArgs[4];positions[(q<<1)+1]=transformArgs[5]}fnArray.splice(iFirstSave,count*4,OPS.paintImageMaskXObjectRepeat);argsArray.splice(iFirstSave,count*4,[firstPIMXOArg0,firstTransformArg0,firstTransformArg1,firstTransformArg2,firstTransformArg3,positions])}else{count=Math.min(count,MAX_IMAGES_IN_MASKS_BLOCK);const images=[];for(let q=0;q<count;q++){transformArgs=argsArray[iFirstTransform+(q<<2)];const maskParams=argsArray[iFirstPIMXO+(q<<2)][0];images.push({data:maskParams.data,width:maskParams.width,height:maskParams.height,interpolate:maskParams.interpolate,count:maskParams.count,transform:transformArgs})}fnArray.splice(iFirstSave,count*4,OPS.paintImageMaskXObjectGroup);argsArray.splice(iFirstSave,count*4,[images])}return iFirstSave+1}));addState(InitialState,[OPS.save,OPS.transform,OPS.paintImageXObject,OPS.restore],(function(context){const argsArray=context.argsArray;const iFirstTransform=context.iCurr-2;return argsArray[iFirstTransform][1]===0&&argsArray[iFirstTransform][2]===0}),(function iterateImageGroup(context,i){const fnArray=context.fnArray,argsArray=context.argsArray;const iFirstSave=context.iCurr-3;const pos=(i-iFirstSave)%4;switch(pos){case 0:return fnArray[i]===OPS.save;case 1:if(fnArray[i]!==OPS.transform){return false}const iFirstTransform=context.iCurr-2;const firstTransformArg0=argsArray[iFirstTransform][0];const firstTransformArg3=argsArray[iFirstTransform][3];if(argsArray[i][0]!==firstTransformArg0||argsArray[i][1]!==0||argsArray[i][2]!==0||argsArray[i][3]!==firstTransformArg3){return false}return true;case 2:if(fnArray[i]!==OPS.paintImageXObject){return false}const iFirstPIXO=context.iCurr-1;const firstPIXOArg0=argsArray[iFirstPIXO][0];if(argsArray[i][0]!==firstPIXOArg0){return false}return true;case 3:return fnArray[i]===OPS.restore}throw new Error(`iterateImageGroup - invalid pos: ${pos}`)}),(function(context,i){const MIN_IMAGES_IN_BLOCK=3;const MAX_IMAGES_IN_BLOCK=1e3;const fnArray=context.fnArray,argsArray=context.argsArray;const curr=context.iCurr;const iFirstSave=curr-3;const iFirstTransform=curr-2;const iFirstPIXO=curr-1;const firstPIXOArg0=argsArray[iFirstPIXO][0];const firstTransformArg0=argsArray[iFirstTransform][0];const firstTransformArg3=argsArray[iFirstTransform][3];const count=Math.min(Math.floor((i-iFirstSave)/4),MAX_IMAGES_IN_BLOCK);if(count<MIN_IMAGES_IN_BLOCK){return i-(i-iFirstSave)%4}const positions=new Float32Array(count*2);let iTransform=iFirstTransform;for(let q=0;q<count;q++,iTransform+=4){const transformArgs=argsArray[iTransform];positions[q<<1]=transformArgs[4];positions[(q<<1)+1]=transformArgs[5]}const args=[firstPIXOArg0,firstTransformArg0,firstTransformArg3,positions];fnArray.splice(iFirstSave,count*4,OPS.paintImageXObjectRepeat);argsArray.splice(iFirstSave,count*4,args);return iFirstSave+1}));addState(InitialState,[OPS.beginText,OPS.setFont,OPS.setTextMatrix,OPS.showText,OPS.endText],null,(function iterateShowTextGroup(context,i){const fnArray=context.fnArray,argsArray=context.argsArray;const iFirstSave=context.iCurr-4;const pos=(i-iFirstSave)%5;switch(pos){case 0:return fnArray[i]===OPS.beginText;case 1:return fnArray[i]===OPS.setFont;case 2:return fnArray[i]===OPS.setTextMatrix;case 3:if(fnArray[i]!==OPS.showText){return false}const iFirstSetFont=context.iCurr-3;const firstSetFontArg0=argsArray[iFirstSetFont][0];const firstSetFontArg1=argsArray[iFirstSetFont][1];if(argsArray[i][0]!==firstSetFontArg0||argsArray[i][1]!==firstSetFontArg1){return false}return true;case 4:return fnArray[i]===OPS.endText}throw new Error(`iterateShowTextGroup - invalid pos: ${pos}`)}),(function(context,i){const MIN_CHARS_IN_BLOCK=3;const MAX_CHARS_IN_BLOCK=1e3;const fnArray=context.fnArray,argsArray=context.argsArray;const curr=context.iCurr;const iFirstBeginText=curr-4;const iFirstSetFont=curr-3;const iFirstSetTextMatrix=curr-2;const iFirstShowText=curr-1;const iFirstEndText=curr;const firstSetFontArg0=argsArray[iFirstSetFont][0];const firstSetFontArg1=argsArray[iFirstSetFont][1];let count=Math.min(Math.floor((i-iFirstBeginText)/5),MAX_CHARS_IN_BLOCK);if(count<MIN_CHARS_IN_BLOCK){return i-(i-iFirstBeginText)%5}let iFirst=iFirstBeginText;if(iFirstBeginText>=4&&fnArray[iFirstBeginText-4]===fnArray[iFirstSetFont]&&fnArray[iFirstBeginText-3]===fnArray[iFirstSetTextMatrix]&&fnArray[iFirstBeginText-2]===fnArray[iFirstShowText]&&fnArray[iFirstBeginText-1]===fnArray[iFirstEndText]&&argsArray[iFirstBeginText-4][0]===firstSetFontArg0&&argsArray[iFirstBeginText-4][1]===firstSetFontArg1){count++;iFirst-=5}let iEndText=iFirst+4;for(let q=1;q<count;q++){fnArray.splice(iEndText,3);argsArray.splice(iEndText,3);iEndText+=2}return iEndText+1}));addState(InitialState,[OPS.save,OPS.transform,OPS.constructPath,OPS.restore],(context=>{const argsArray=context.argsArray;const iFirstConstructPath=context.iCurr-1;const op=argsArray[iFirstConstructPath][0];if(op!==OPS.stroke&&op!==OPS.closeStroke&&op!==OPS.fillStroke&&op!==OPS.eoFillStroke&&op!==OPS.closeFillStroke&&op!==OPS.closeEOFillStroke){return true}const iFirstTransform=context.iCurr-2;const transform=argsArray[iFirstTransform];return transform[0]===1&&transform[1]===0&&transform[2]===0&&transform[3]===1}),(()=>false),((context,i)=>{const{fnArray:fnArray,argsArray:argsArray}=context;const curr=context.iCurr;const iFirstSave=curr-3;const iFirstTransform=curr-2;const iFirstConstructPath=curr-1;const args=argsArray[iFirstConstructPath];const transform=argsArray[iFirstTransform];const[,[buffer],minMax]=args;Util.scaleMinMax(transform,minMax);for(let k=0,kk=buffer.length;k<kk;){switch(buffer[k++]){case DrawOPS.moveTo:case DrawOPS.lineTo:Util.applyTransform(buffer,transform,k);k+=2;break;case DrawOPS.curveTo:Util.applyTransformToBezier(buffer,transform,k);k+=6;break}}fnArray.splice(iFirstSave,4,OPS.constructPath);argsArray.splice(iFirstSave,4,args);return iFirstSave+1}));class NullOptimizer{constructor(queue){this.queue=queue}_optimize(){}push(fn,args){this.queue.fnArray.push(fn);this.queue.argsArray.push(args);this._optimize()}flush(){}reset(){}}class QueueOptimizer extends NullOptimizer{constructor(queue){super(queue);this.state=null;this.context={iCurr:0,fnArray:queue.fnArray,argsArray:queue.argsArray,isOffscreenCanvasSupported:OperatorList.isOffscreenCanvasSupported};this.match=null;this.lastProcessed=0}_optimize(){const fnArray=this.queue.fnArray;let i=this.lastProcessed,ii=fnArray.length;let state=this.state;let match=this.match;if(!state&&!match&&i+1===ii&&!InitialState[fnArray[i]]){this.lastProcessed=ii;return}const context=this.context;while(i<ii){if(match){const iterate=(0,match.iterateFn)(context,i);if(iterate){i++;continue}i=(0,match.processFn)(context,i+1);ii=fnArray.length;match=null;state=null;if(i>=ii){break}}state=(state||InitialState)[fnArray[i]];if(!state||Array.isArray(state)){i++;continue}context.iCurr=i;i++;if(state.checkFn&&!(0,state.checkFn)(context)){state=null;continue}match=state;state=null}this.state=state;this.match=match;this.lastProcessed=i}flush(){while(this.match){const length=this.queue.fnArray.length;this.lastProcessed=(0,this.match.processFn)(this.context,length);this.match=null;this.state=null;this._optimize()}}reset(){this.state=null;this.match=null;this.lastProcessed=0}}class OperatorList{static CHUNK_SIZE=1e3;static CHUNK_SIZE_ABOUT=this.CHUNK_SIZE-5;static isOffscreenCanvasSupported=false;constructor(intent=0,streamSink){this._streamSink=streamSink;this.fnArray=[];this.argsArray=[];this.optimizer=streamSink&&!(intent&RenderingIntentFlag.OPLIST)?new QueueOptimizer(this):new NullOptimizer(this);this.dependencies=new Set;this._totalLength=0;this.weight=0;this._resolved=streamSink?null:Promise.resolve()}static setOptions({isOffscreenCanvasSupported:isOffscreenCanvasSupported}){this.isOffscreenCanvasSupported=isOffscreenCanvasSupported}get length(){return this.argsArray.length}get ready(){return this._resolved||this._streamSink.ready}get totalLength(){return this._totalLength+this.length}addOp(fn,args){this.optimizer.push(fn,args);this.weight++;if(this._streamSink){if(this.weight>=OperatorList.CHUNK_SIZE){this.flush()}else if(this.weight>=OperatorList.CHUNK_SIZE_ABOUT&&(fn===OPS.restore||fn===OPS.endText)){this.flush()}}}addImageOps(fn,args,optionalContent,hasMask=false){if(hasMask){this.addOp(OPS.save);this.addOp(OPS.setGState,[[[\"SMask\",false]]])}if(optionalContent!==undefined){this.addOp(OPS.beginMarkedContentProps,[\"OC\",optionalContent])}this.addOp(fn,args);if(optionalContent!==undefined){this.addOp(OPS.endMarkedContent,[])}if(hasMask){this.addOp(OPS.restore)}}addDependency(dependency){if(this.dependencies.has(dependency)){return}this.dependencies.add(dependency);this.addOp(OPS.dependency,[dependency])}addDependencies(dependencies){for(const dependency of dependencies){this.addDependency(dependency)}}addOpList(opList){if(!(opList instanceof OperatorList)){warn('addOpList - ignoring invalid \"opList\" parameter.');return}for(const dependency of opList.dependencies){this.dependencies.add(dependency)}for(let i=0,ii=opList.length;i<ii;i++){this.addOp(opList.fnArray[i],opList.argsArray[i])}}getIR(){return{fnArray:this.fnArray,argsArray:this.argsArray,length:this.length}}get _transfers(){const transfers=[];const{fnArray:fnArray,argsArray:argsArray,length:length}=this;for(let i=0;i<length;i++){switch(fnArray[i]){case OPS.paintInlineImageXObject:case OPS.paintInlineImageXObjectGroup:case OPS.paintImageMaskXObject:{const{bitmap:bitmap,data:data}=argsArray[i][0];if(bitmap||data?.buffer){transfers.push(bitmap||data.buffer)}break}case OPS.constructPath:{const[,[data],minMax]=argsArray[i];if(data){transfers.push(data.buffer,minMax.buffer)}break}case OPS.paintFormXObjectBegin:const[matrix,bbox]=argsArray[i];if(matrix){transfers.push(matrix.buffer)}if(bbox){transfers.push(bbox.buffer)}break;case OPS.setTextMatrix:transfers.push(argsArray[i][0].buffer);break}}return transfers}flush(lastChunk=false,separateAnnots=null){this.optimizer.flush();const length=this.length;this._totalLength+=length;this._streamSink.enqueue({fnArray:this.fnArray,argsArray:this.argsArray,lastChunk:lastChunk,separateAnnots:separateAnnots,length:length},1,this._transfers);this.dependencies.clear();this.fnArray.length=0;this.argsArray.length=0;this.weight=0;this.optimizer.reset()}}function hexToInt(a,size){let n=0;for(let i=0;i<=size;i++){n=n<<8|a[i]}return n>>>0}function hexToStr(a,size){if(size===1){return String.fromCharCode(a[0],a[1])}if(size===3){return String.fromCharCode(a[0],a[1],a[2],a[3])}return String.fromCharCode(...a.subarray(0,size+1))}function addHex(a,b,size){let c=0;for(let i=size;i>=0;i--){c+=a[i]+b[i];a[i]=c&255;c>>=8}}function incHex(a,size){let c=1;for(let i=size;i>=0&&c>0;i--){c+=a[i];a[i]=c&255;c>>=8}}const MAX_NUM_SIZE=16;const MAX_ENCODED_NUM_SIZE=19;class BinaryCMapStream{constructor(data){this.buffer=data;this.pos=0;this.end=data.length;this.tmpBuf=new Uint8Array(MAX_ENCODED_NUM_SIZE)}readByte(){if(this.pos>=this.end){return-1}return this.buffer[this.pos++]}readNumber(){let n=0;let last;do{const b=this.readByte();if(b<0){throw new FormatError(\"unexpected EOF in bcmap\")}last=!(b&128);n=n<<7|b&127}while(!last);return n}readSigned(){const n=this.readNumber();return n&1?~(n>>>1):n>>>1}readHex(num,size){num.set(this.buffer.subarray(this.pos,this.pos+size+1));this.pos+=size+1}readHexNumber(num,size){let last;const stack=this.tmpBuf;let sp=0;do{const b=this.readByte();if(b<0){throw new FormatError(\"unexpected EOF in bcmap\")}last=!(b&128);stack[sp++]=b&127}while(!last);let i=size,buffer=0,bufferSize=0;while(i>=0){while(bufferSize<8&&stack.length>0){buffer|=stack[--sp]<<bufferSize;bufferSize+=7}num[i]=buffer&255;i--;buffer>>=8;bufferSize-=8}}readHexSigned(num,size){this.readHexNumber(num,size);const sign=num[size]&1?255:0;let c=0;for(let i=0;i<=size;i++){c=(c&1)<<8|num[i];num[i]=c>>1^sign}}readString(){const len=this.readNumber(),buf=new Array(len);for(let i=0;i<len;i++){buf[i]=this.readNumber()}return String.fromCharCode(...buf)}}class BinaryCMapReader{async process(data,cMap,extend){const stream=new BinaryCMapStream(data);const header=stream.readByte();cMap.vertical=!!(header&1);let useCMap=null;const start=new Uint8Array(MAX_NUM_SIZE);const end=new Uint8Array(MAX_NUM_SIZE);const char=new Uint8Array(MAX_NUM_SIZE);const charCode=new Uint8Array(MAX_NUM_SIZE);const tmp=new Uint8Array(MAX_NUM_SIZE);let code;let b;while((b=stream.readByte())>=0){const type=b>>5;if(type===7){switch(b&31){case 0:stream.readString();break;case 1:useCMap=stream.readString();break}continue}const sequence=!!(b&16);const dataSize=b&15;if(dataSize+1>MAX_NUM_SIZE){throw new Error(\"BinaryCMapReader.process: Invalid dataSize.\")}const ucs2DataSize=1;const subitemsCount=stream.readNumber();switch(type){case 0:stream.readHex(start,dataSize);stream.readHexNumber(end,dataSize);addHex(end,start,dataSize);cMap.addCodespaceRange(dataSize+1,hexToInt(start,dataSize),hexToInt(end,dataSize));for(let i=1;i<subitemsCount;i++){incHex(end,dataSize);stream.readHexNumber(start,dataSize);addHex(start,end,dataSize);stream.readHexNumber(end,dataSize);addHex(end,start,dataSize);cMap.addCodespaceRange(dataSize+1,hexToInt(start,dataSize),hexToInt(end,dataSize))}break;case 1:stream.readHex(start,dataSize);stream.readHexNumber(end,dataSize);addHex(end,start,dataSize);stream.readNumber();for(let i=1;i<subitemsCount;i++){incHex(end,dataSize);stream.readHexNumber(start,dataSize);addHex(start,end,dataSize);stream.readHexNumber(end,dataSize);addHex(end,start,dataSize);stream.readNumber()}break;case 2:stream.readHex(char,dataSize);code=stream.readNumber();cMap.mapOne(hexToInt(char,dataSize),code);for(let i=1;i<subitemsCount;i++){incHex(char,dataSize);if(!sequence){stream.readHexNumber(tmp,dataSize);addHex(char,tmp,dataSize)}code=stream.readSigned()+(code+1);cMap.mapOne(hexToInt(char,dataSize),code)}break;case 3:stream.readHex(start,dataSize);stream.readHexNumber(end,dataSize);addHex(end,start,dataSize);code=stream.readNumber();cMap.mapCidRange(hexToInt(start,dataSize),hexToInt(end,dataSize),code);for(let i=1;i<subitemsCount;i++){incHex(end,dataSize);if(!sequence){stream.readHexNumber(start,dataSize);addHex(start,end,dataSize)}else{start.set(end)}stream.readHexNumber(end,dataSize);addHex(end,start,dataSize);code=stream.readNumber();cMap.mapCidRange(hexToInt(start,dataSize),hexToInt(end,dataSize),code)}break;case 4:stream.readHex(char,ucs2DataSize);stream.readHex(charCode,dataSize);cMap.mapOne(hexToInt(char,ucs2DataSize),hexToStr(charCode,dataSize));for(let i=1;i<subitemsCount;i++){incHex(char,ucs2DataSize);if(!sequence){stream.readHexNumber(tmp,ucs2DataSize);addHex(char,tmp,ucs2DataSize)}incHex(charCode,dataSize);stream.readHexSigned(tmp,dataSize);addHex(charCode,tmp,dataSize);cMap.mapOne(hexToInt(char,ucs2DataSize),hexToStr(charCode,dataSize))}break;case 5:stream.readHex(start,ucs2DataSize);stream.readHexNumber(end,ucs2DataSize);addHex(end,start,ucs2DataSize);stream.readHex(charCode,dataSize);cMap.mapBfRange(hexToInt(start,ucs2DataSize),hexToInt(end,ucs2DataSize),hexToStr(charCode,dataSize));for(let i=1;i<subitemsCount;i++){incHex(end,ucs2DataSize);if(!sequence){stream.readHexNumber(start,ucs2DataSize);addHex(start,end,ucs2DataSize)}else{start.set(end)}stream.readHexNumber(end,ucs2DataSize);addHex(end,start,ucs2DataSize);stream.readHex(charCode,dataSize);cMap.mapBfRange(hexToInt(start,ucs2DataSize),hexToInt(end,ucs2DataSize),hexToStr(charCode,dataSize))}break;default:throw new Error(`BinaryCMapReader.process - unknown type: ${type}`)}}if(useCMap){return extend(useCMap)}return cMap}}class Ascii85Stream extends DecodeStream{constructor(str,maybeLength){if(maybeLength){maybeLength*=.8}super(maybeLength);this.str=str;this.dict=str.dict;this.input=new Uint8Array(5)}readBlock(){const TILDA_CHAR=126;const Z_LOWER_CHAR=122;const EOF=-1;const str=this.str;let c=str.getByte();while(isWhiteSpace(c)){c=str.getByte()}if(c===EOF||c===TILDA_CHAR){this.eof=true;return}const bufferLength=this.bufferLength;let buffer,i;if(c===Z_LOWER_CHAR){buffer=this.ensureBuffer(bufferLength+4);for(i=0;i<4;++i){buffer[bufferLength+i]=0}this.bufferLength+=4}else{const input=this.input;input[0]=c;for(i=1;i<5;++i){c=str.getByte();while(isWhiteSpace(c)){c=str.getByte()}input[i]=c;if(c===EOF||c===TILDA_CHAR){break}}buffer=this.ensureBuffer(bufferLength+i-1);this.bufferLength+=i-1;if(i<5){for(;i<5;++i){input[i]=33+84}this.eof=true}let t=0;for(i=0;i<5;++i){t=t*85+(input[i]-33)}for(i=3;i>=0;--i){buffer[bufferLength+i]=t&255;t>>=8}}}}class AsciiHexStream extends DecodeStream{constructor(str,maybeLength){if(maybeLength){maybeLength*=.5}super(maybeLength);this.str=str;this.dict=str.dict;this.firstDigit=-1}readBlock(){const UPSTREAM_BLOCK_SIZE=8e3;const bytes=this.str.getBytes(UPSTREAM_BLOCK_SIZE);if(!bytes.length){this.eof=true;return}const maxDecodeLength=bytes.length+1>>1;const buffer=this.ensureBuffer(this.bufferLength+maxDecodeLength);let bufferLength=this.bufferLength;let firstDigit=this.firstDigit;for(const ch of bytes){let digit;if(ch>=48&&ch<=57){digit=ch&15}else if(ch>=65&&ch<=70||ch>=97&&ch<=102){digit=(ch&15)+9}else if(ch===62){this.eof=true;break}else{continue}if(firstDigit<0){firstDigit=digit}else{buffer[bufferLength++]=firstDigit<<4|digit;firstDigit=-1}}if(firstDigit>=0&&this.eof){buffer[bufferLength++]=firstDigit<<4;firstDigit=-1}this.firstDigit=firstDigit;this.bufferLength=bufferLength}}const ccittEOL=-2;const ccittEOF=-1;const twoDimPass=0;const twoDimHoriz=1;const twoDimVert0=2;const twoDimVertR1=3;const twoDimVertL1=4;const twoDimVertR2=5;const twoDimVertL2=6;const twoDimVertR3=7;const twoDimVertL3=8;const twoDimTable=[[-1,-1],[-1,-1],[7,twoDimVertL3],[7,twoDimVertR3],[6,twoDimVertL2],[6,twoDimVertL2],[6,twoDimVertR2],[6,twoDimVertR2],[4,twoDimPass],[4,twoDimPass],[4,twoDimPass],[4,twoDimPass],[4,twoDimPass],[4,twoDimPass],[4,twoDimPass],[4,twoDimPass],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimHoriz],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertL1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[3,twoDimVertR1],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0],[1,twoDimVert0]];const whiteTable1=[[-1,-1],[12,ccittEOL],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[11,1792],[11,1792],[12,1984],[12,2048],[12,2112],[12,2176],[12,2240],[12,2304],[11,1856],[11,1856],[11,1920],[11,1920],[12,2368],[12,2432],[12,2496],[12,2560]];const whiteTable2=[[-1,-1],[-1,-1],[-1,-1],[-1,-1],[8,29],[8,29],[8,30],[8,30],[8,45],[8,45],[8,46],[8,46],[7,22],[7,22],[7,22],[7,22],[7,23],[7,23],[7,23],[7,23],[8,47],[8,47],[8,48],[8,48],[6,13],[6,13],[6,13],[6,13],[6,13],[6,13],[6,13],[6,13],[7,20],[7,20],[7,20],[7,20],[8,33],[8,33],[8,34],[8,34],[8,35],[8,35],[8,36],[8,36],[8,37],[8,37],[8,38],[8,38],[7,19],[7,19],[7,19],[7,19],[8,31],[8,31],[8,32],[8,32],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,12],[6,12],[6,12],[6,12],[6,12],[6,12],[6,12],[6,12],[8,53],[8,53],[8,54],[8,54],[7,26],[7,26],[7,26],[7,26],[8,39],[8,39],[8,40],[8,40],[8,41],[8,41],[8,42],[8,42],[8,43],[8,43],[8,44],[8,44],[7,21],[7,21],[7,21],[7,21],[7,28],[7,28],[7,28],[7,28],[8,61],[8,61],[8,62],[8,62],[8,63],[8,63],[8,0],[8,0],[8,320],[8,320],[8,384],[8,384],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,10],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[5,11],[7,27],[7,27],[7,27],[7,27],[8,59],[8,59],[8,60],[8,60],[9,1472],[9,1536],[9,1600],[9,1728],[7,18],[7,18],[7,18],[7,18],[7,24],[7,24],[7,24],[7,24],[8,49],[8,49],[8,50],[8,50],[8,51],[8,51],[8,52],[8,52],[7,25],[7,25],[7,25],[7,25],[8,55],[8,55],[8,56],[8,56],[8,57],[8,57],[8,58],[8,58],[6,192],[6,192],[6,192],[6,192],[6,192],[6,192],[6,192],[6,192],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[6,1664],[8,448],[8,448],[8,512],[8,512],[9,704],[9,768],[8,640],[8,640],[8,576],[8,576],[9,832],[9,896],[9,960],[9,1024],[9,1088],[9,1152],[9,1216],[9,1280],[9,1344],[9,1408],[7,256],[7,256],[7,256],[7,256],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,2],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[4,3],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,128],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,8],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[5,9],[6,16],[6,16],[6,16],[6,16],[6,16],[6,16],[6,16],[6,16],[6,17],[6,17],[6,17],[6,17],[6,17],[6,17],[6,17],[6,17],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,4],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[4,5],[6,14],[6,14],[6,14],[6,14],[6,14],[6,14],[6,14],[6,14],[6,15],[6,15],[6,15],[6,15],[6,15],[6,15],[6,15],[6,15],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[5,64],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,6],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7],[4,7]];const blackTable1=[[-1,-1],[-1,-1],[12,ccittEOL],[12,ccittEOL],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[-1,-1],[11,1792],[11,1792],[11,1792],[11,1792],[12,1984],[12,1984],[12,2048],[12,2048],[12,2112],[12,2112],[12,2176],[12,2176],[12,2240],[12,2240],[12,2304],[12,2304],[11,1856],[11,1856],[11,1856],[11,1856],[11,1920],[11,1920],[11,1920],[11,1920],[12,2368],[12,2368],[12,2432],[12,2432],[12,2496],[12,2496],[12,2560],[12,2560],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[10,18],[12,52],[12,52],[13,640],[13,704],[13,768],[13,832],[12,55],[12,55],[12,56],[12,56],[13,1280],[13,1344],[13,1408],[13,1472],[12,59],[12,59],[12,60],[12,60],[13,1536],[13,1600],[11,24],[11,24],[11,24],[11,24],[11,25],[11,25],[11,25],[11,25],[13,1664],[13,1728],[12,320],[12,320],[12,384],[12,384],[12,448],[12,448],[13,512],[13,576],[12,53],[12,53],[12,54],[12,54],[13,896],[13,960],[13,1024],[13,1088],[13,1152],[13,1216],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64],[10,64]];const blackTable2=[[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[8,13],[11,23],[11,23],[12,50],[12,51],[12,44],[12,45],[12,46],[12,47],[12,57],[12,58],[12,61],[12,256],[10,16],[10,16],[10,16],[10,16],[10,17],[10,17],[10,17],[10,17],[12,48],[12,49],[12,62],[12,63],[12,30],[12,31],[12,32],[12,33],[12,40],[12,41],[11,22],[11,22],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[8,14],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,10],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[7,11],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[9,15],[12,128],[12,192],[12,26],[12,27],[12,28],[12,29],[11,19],[11,19],[11,20],[11,20],[12,34],[12,35],[12,36],[12,37],[12,38],[12,39],[11,21],[11,21],[12,42],[12,43],[10,0],[10,0],[10,0],[10,0],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12],[7,12]];const blackTable3=[[-1,-1],[-1,-1],[-1,-1],[-1,-1],[6,9],[6,8],[5,7],[5,7],[4,6],[4,6],[4,6],[4,6],[4,5],[4,5],[4,5],[4,5],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,1],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[3,4],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,3],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,2]];class CCITTFaxDecoder{constructor(source,options={}){if(typeof source?.next!==\"function\"){throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.')}this.source=source;this.eof=false;this.encoding=options.K||0;this.eoline=options.EndOfLine||false;this.byteAlign=options.EncodedByteAlign||false;this.columns=options.Columns||1728;this.rows=options.Rows||0;this.eoblock=options.EndOfBlock??true;this.black=options.BlackIs1||false;this.codingLine=new Uint32Array(this.columns+1);this.refLine=new Uint32Array(this.columns+2);this.codingLine[0]=this.columns;this.codingPos=0;this.row=0;this.nextLine2D=this.encoding<0;this.inputBits=0;this.inputBuf=0;this.outputBits=0;this.rowsDone=false;let code1;while((code1=this._lookBits(12))===0){this._eatBits(1)}if(code1===1){this._eatBits(12)}if(this.encoding>0){this.nextLine2D=!this._lookBits(1);this._eatBits(1)}}readNextChar(){if(this.eof){return-1}const refLine=this.refLine;const codingLine=this.codingLine;const columns=this.columns;let refPos,blackPixels,bits,i;if(this.outputBits===0){if(this.rowsDone){this.eof=true}if(this.eof){return-1}this.err=false;let code1,code2,code3;if(this.nextLine2D){for(i=0;codingLine[i]<columns;++i){refLine[i]=codingLine[i]}refLine[i++]=columns;refLine[i]=columns;codingLine[0]=0;this.codingPos=0;refPos=0;blackPixels=0;while(codingLine[this.codingPos]<columns){code1=this._getTwoDimCode();switch(code1){case twoDimPass:this._addPixels(refLine[refPos+1],blackPixels);if(refLine[refPos+1]<columns){refPos+=2}break;case twoDimHoriz:code1=code2=0;if(blackPixels){do{code1+=code3=this._getBlackCode()}while(code3>=64);do{code2+=code3=this._getWhiteCode()}while(code3>=64)}else{do{code1+=code3=this._getWhiteCode()}while(code3>=64);do{code2+=code3=this._getBlackCode()}while(code3>=64)}this._addPixels(codingLine[this.codingPos]+code1,blackPixels);if(codingLine[this.codingPos]<columns){this._addPixels(codingLine[this.codingPos]+code2,blackPixels^1)}while(refLine[refPos]<=codingLine[this.codingPos]&&refLine[refPos]<columns){refPos+=2}break;case twoDimVertR3:this._addPixels(refLine[refPos]+3,blackPixels);blackPixels^=1;if(codingLine[this.codingPos]<columns){++refPos;while(refLine[refPos]<=codingLine[this.codingPos]&&refLine[refPos]<columns){refPos+=2}}break;case twoDimVertR2:this._addPixels(refLine[refPos]+2,blackPixels);blackPixels^=1;if(codingLine[this.codingPos]<columns){++refPos;while(refLine[refPos]<=codingLine[this.codingPos]&&refLine[refPos]<columns){refPos+=2}}break;case twoDimVertR1:this._addPixels(refLine[refPos]+1,blackPixels);blackPixels^=1;if(codingLine[this.codingPos]<columns){++refPos;while(refLine[refPos]<=codingLine[this.codingPos]&&refLine[refPos]<columns){refPos+=2}}break;case twoDimVert0:this._addPixels(refLine[refPos],blackPixels);blackPixels^=1;if(codingLine[this.codingPos]<columns){++refPos;while(refLine[refPos]<=codingLine[this.codingPos]&&refLine[refPos]<columns){refPos+=2}}break;case twoDimVertL3:this._addPixelsNeg(refLine[refPos]-3,blackPixels);blackPixels^=1;if(codingLine[this.codingPos]<columns){if(refPos>0){--refPos}else{++refPos}while(refLine[refPos]<=codingLine[this.codingPos]&&refLine[refPos]<columns){refPos+=2}}break;case twoDimVertL2:this._addPixelsNeg(refLine[refPos]-2,blackPixels);blackPixels^=1;if(codingLine[this.codingPos]<columns){if(refPos>0){--refPos}else{++refPos}while(refLine[refPos]<=codingLine[this.codingPos]&&refLine[refPos]<columns){refPos+=2}}break;case twoDimVertL1:this._addPixelsNeg(refLine[refPos]-1,blackPixels);blackPixels^=1;if(codingLine[this.codingPos]<columns){if(refPos>0){--refPos}else{++refPos}while(refLine[refPos]<=codingLine[this.codingPos]&&refLine[refPos]<columns){refPos+=2}}break;case ccittEOF:this._addPixels(columns,0);this.eof=true;break;default:info(\"bad 2d code\");this._addPixels(columns,0);this.err=true}}}else{codingLine[0]=0;this.codingPos=0;blackPixels=0;while(codingLine[this.codingPos]<columns){code1=0;if(blackPixels){do{code1+=code3=this._getBlackCode()}while(code3>=64)}else{do{code1+=code3=this._getWhiteCode()}while(code3>=64)}this._addPixels(codingLine[this.codingPos]+code1,blackPixels);blackPixels^=1}}let gotEOL=false;if(this.byteAlign){this.inputBits&=~7}if(!this.eoblock&&this.row===this.rows-1){this.rowsDone=true}else{code1=this._lookBits(12);if(this.eoline){while(code1!==ccittEOF&&code1!==1){this._eatBits(1);code1=this._lookBits(12)}}else{while(code1===0){this._eatBits(1);code1=this._lookBits(12)}}if(code1===1){this._eatBits(12);gotEOL=true}else if(code1===ccittEOF){this.eof=true}}if(!this.eof&&this.encoding>0&&!this.rowsDone){this.nextLine2D=!this._lookBits(1);this._eatBits(1)}if(this.eoblock&&gotEOL&&this.byteAlign){code1=this._lookBits(12);if(code1===1){this._eatBits(12);if(this.encoding>0){this._lookBits(1);this._eatBits(1)}if(this.encoding>=0){for(i=0;i<4;++i){code1=this._lookBits(12);if(code1!==1){info(\"bad rtc code: \"+code1)}this._eatBits(12);if(this.encoding>0){this._lookBits(1);this._eatBits(1)}}}this.eof=true}}else if(this.err&&this.eoline){while(true){code1=this._lookBits(13);if(code1===ccittEOF){this.eof=true;return-1}if(code1>>1===1){break}this._eatBits(1)}this._eatBits(12);if(this.encoding>0){this._eatBits(1);this.nextLine2D=!(code1&1)}}this.outputBits=codingLine[0]>0?codingLine[this.codingPos=0]:codingLine[this.codingPos=1];this.row++}let c;if(this.outputBits>=8){c=this.codingPos&1?0:255;this.outputBits-=8;if(this.outputBits===0&&codingLine[this.codingPos]<columns){this.codingPos++;this.outputBits=codingLine[this.codingPos]-codingLine[this.codingPos-1]}}else{bits=8;c=0;do{if(typeof this.outputBits!==\"number\"){throw new FormatError('Invalid /CCITTFaxDecode data, \"outputBits\" must be a number.')}if(this.outputBits>bits){c<<=bits;if(!(this.codingPos&1)){c|=255>>8-bits}this.outputBits-=bits;bits=0}else{c<<=this.outputBits;if(!(this.codingPos&1)){c|=255>>8-this.outputBits}bits-=this.outputBits;this.outputBits=0;if(codingLine[this.codingPos]<columns){this.codingPos++;this.outputBits=codingLine[this.codingPos]-codingLine[this.codingPos-1]}else if(bits>0){c<<=bits;bits=0}}}while(bits)}if(this.black){c^=255}return c}_addPixels(a1,blackPixels){const codingLine=this.codingLine;let codingPos=this.codingPos;if(a1>codingLine[codingPos]){if(a1>this.columns){info(\"row is wrong length\");this.err=true;a1=this.columns}if(codingPos&1^blackPixels){++codingPos}codingLine[codingPos]=a1}this.codingPos=codingPos}_addPixelsNeg(a1,blackPixels){const codingLine=this.codingLine;let codingPos=this.codingPos;if(a1>codingLine[codingPos]){if(a1>this.columns){info(\"row is wrong length\");this.err=true;a1=this.columns}if(codingPos&1^blackPixels){++codingPos}codingLine[codingPos]=a1}else if(a1<codingLine[codingPos]){if(a1<0){info(\"invalid code\");this.err=true;a1=0}while(codingPos>0&&a1<codingLine[codingPos-1]){--codingPos}codingLine[codingPos]=a1}this.codingPos=codingPos}_findTableCode(start,end,table,limit){const limitValue=limit||0;for(let i=start;i<=end;++i){let code=this._lookBits(i);if(code===ccittEOF){return[true,1,false]}if(i<end){code<<=end-i}if(!limitValue||code>=limitValue){const p=table[code-limitValue];if(p[0]===i){this._eatBits(i);return[true,p[1],true]}}}return[false,0,false]}_getTwoDimCode(){let code=0;let p;if(this.eoblock){code=this._lookBits(7);p=twoDimTable[code];if(p?.[0]>0){this._eatBits(p[0]);return p[1]}}else{const result=this._findTableCode(1,7,twoDimTable);if(result[0]&&result[2]){return result[1]}}info(\"Bad two dim code\");return ccittEOF}_getWhiteCode(){let code=0;let p;if(this.eoblock){code=this._lookBits(12);if(code===ccittEOF){return 1}p=code>>5===0?whiteTable1[code]:whiteTable2[code>>3];if(p[0]>0){this._eatBits(p[0]);return p[1]}}else{let result=this._findTableCode(1,9,whiteTable2);if(result[0]){return result[1]}result=this._findTableCode(11,12,whiteTable1);if(result[0]){return result[1]}}info(\"bad white code\");this._eatBits(1);return 1}_getBlackCode(){let code,p;if(this.eoblock){code=this._lookBits(13);if(code===ccittEOF){return 1}if(code>>7===0){p=blackTable1[code]}else if(code>>9===0&&code>>7!==0){p=blackTable2[(code>>1)-64]}else{p=blackTable3[code>>7]}if(p[0]>0){this._eatBits(p[0]);return p[1]}}else{let result=this._findTableCode(2,6,blackTable3);if(result[0]){return result[1]}result=this._findTableCode(7,12,blackTable2,64);if(result[0]){return result[1]}result=this._findTableCode(10,13,blackTable1);if(result[0]){return result[1]}}info(\"bad black code\");this._eatBits(1);return 1}_lookBits(n){let c;while(this.inputBits<n){if((c=this.source.next())===-1){if(this.inputBits===0){return ccittEOF}return this.inputBuf<<n-this.inputBits&65535>>16-n}this.inputBuf=this.inputBuf<<8|c;this.inputBits+=8}return this.inputBuf>>this.inputBits-n&65535>>16-n}_eatBits(n){if((this.inputBits-=n)<0){this.inputBits=0}}}class CCITTFaxStream extends DecodeStream{constructor(str,maybeLength,params){super(maybeLength);this.str=str;this.dict=str.dict;if(!(params instanceof Dict)){params=Dict.empty}const source={next(){return str.getByte()}};this.ccittFaxDecoder=new CCITTFaxDecoder(source,{K:params.get(\"K\"),EndOfLine:params.get(\"EndOfLine\"),EncodedByteAlign:params.get(\"EncodedByteAlign\"),Columns:params.get(\"Columns\"),Rows:params.get(\"Rows\"),EndOfBlock:params.get(\"EndOfBlock\"),BlackIs1:params.get(\"BlackIs1\")})}readBlock(){while(!this.eof){const c=this.ccittFaxDecoder.readNextChar();if(c===-1){this.eof=true;return}this.ensureBuffer(this.bufferLength+1);this.buffer[this.bufferLength++]=c}}}const codeLenCodeMap=new Int32Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);const lengthDecode=new Int32Array([3,4,5,6,7,8,9,10,65547,65549,65551,65553,131091,131095,131099,131103,196643,196651,196659,196667,262211,262227,262243,262259,327811,327843,327875,327907,258,258,258]);const distDecode=new Int32Array([1,2,3,4,65541,65543,131081,131085,196625,196633,262177,262193,327745,327777,393345,393409,459009,459137,524801,525057,590849,591361,657409,658433,724993,727041,794625,798721,868353,876545]);const fixedLitCodeTab=[new Int32Array([459008,524368,524304,524568,459024,524400,524336,590016,459016,524384,524320,589984,524288,524416,524352,590048,459012,524376,524312,589968,459028,524408,524344,590032,459020,524392,524328,59e4,524296,524424,524360,590064,459010,524372,524308,524572,459026,524404,524340,590024,459018,524388,524324,589992,524292,524420,524356,590056,459014,524380,524316,589976,459030,524412,524348,590040,459022,524396,524332,590008,524300,524428,524364,590072,459009,524370,524306,524570,459025,524402,524338,590020,459017,524386,524322,589988,524290,524418,524354,590052,459013,524378,524314,589972,459029,524410,524346,590036,459021,524394,524330,590004,524298,524426,524362,590068,459011,524374,524310,524574,459027,524406,524342,590028,459019,524390,524326,589996,524294,524422,524358,590060,459015,524382,524318,589980,459031,524414,524350,590044,459023,524398,524334,590012,524302,524430,524366,590076,459008,524369,524305,524569,459024,524401,524337,590018,459016,524385,524321,589986,524289,524417,524353,590050,459012,524377,524313,589970,459028,524409,524345,590034,459020,524393,524329,590002,524297,524425,524361,590066,459010,524373,524309,524573,459026,524405,524341,590026,459018,524389,524325,589994,524293,524421,524357,590058,459014,524381,524317,589978,459030,524413,524349,590042,459022,524397,524333,590010,524301,524429,524365,590074,459009,524371,524307,524571,459025,524403,524339,590022,459017,524387,524323,589990,524291,524419,524355,590054,459013,524379,524315,589974,459029,524411,524347,590038,459021,524395,524331,590006,524299,524427,524363,590070,459011,524375,524311,524575,459027,524407,524343,590030,459019,524391,524327,589998,524295,524423,524359,590062,459015,524383,524319,589982,459031,524415,524351,590046,459023,524399,524335,590014,524303,524431,524367,590078,459008,524368,524304,524568,459024,524400,524336,590017,459016,524384,524320,589985,524288,524416,524352,590049,459012,524376,524312,589969,459028,524408,524344,590033,459020,524392,524328,590001,524296,524424,524360,590065,459010,524372,524308,524572,459026,524404,524340,590025,459018,524388,524324,589993,524292,524420,524356,590057,459014,524380,524316,589977,459030,524412,524348,590041,459022,524396,524332,590009,524300,524428,524364,590073,459009,524370,524306,524570,459025,524402,524338,590021,459017,524386,524322,589989,524290,524418,524354,590053,459013,524378,524314,589973,459029,524410,524346,590037,459021,524394,524330,590005,524298,524426,524362,590069,459011,524374,524310,524574,459027,524406,524342,590029,459019,524390,524326,589997,524294,524422,524358,590061,459015,524382,524318,589981,459031,524414,524350,590045,459023,524398,524334,590013,524302,524430,524366,590077,459008,524369,524305,524569,459024,524401,524337,590019,459016,524385,524321,589987,524289,524417,524353,590051,459012,524377,524313,589971,459028,524409,524345,590035,459020,524393,524329,590003,524297,524425,524361,590067,459010,524373,524309,524573,459026,524405,524341,590027,459018,524389,524325,589995,524293,524421,524357,590059,459014,524381,524317,589979,459030,524413,524349,590043,459022,524397,524333,590011,524301,524429,524365,590075,459009,524371,524307,524571,459025,524403,524339,590023,459017,524387,524323,589991,524291,524419,524355,590055,459013,524379,524315,589975,459029,524411,524347,590039,459021,524395,524331,590007,524299,524427,524363,590071,459011,524375,524311,524575,459027,524407,524343,590031,459019,524391,524327,589999,524295,524423,524359,590063,459015,524383,524319,589983,459031,524415,524351,590047,459023,524399,524335,590015,524303,524431,524367,590079]),9];const fixedDistCodeTab=[new Int32Array([327680,327696,327688,327704,327684,327700,327692,327708,327682,327698,327690,327706,327686,327702,327694,0,327681,327697,327689,327705,327685,327701,327693,327709,327683,327699,327691,327707,327687,327703,327695,0]),5];class FlateStream extends DecodeStream{constructor(str,maybeLength){super(maybeLength);this.str=str;this.dict=str.dict;const cmf=str.getByte();const flg=str.getByte();if(cmf===-1||flg===-1){throw new FormatError(`Invalid header in flate stream: ${cmf}, ${flg}`)}if((cmf&15)!==8){throw new FormatError(`Unknown compression method in flate stream: ${cmf}, ${flg}`)}if(((cmf<<8)+flg)%31!==0){throw new FormatError(`Bad FCHECK in flate stream: ${cmf}, ${flg}`)}if(flg&32){throw new FormatError(`FDICT bit set in flate stream: ${cmf}, ${flg}`)}this.codeSize=0;this.codeBuf=0}async getImageData(length,_decoderOptions){const data=await this.asyncGetBytes();return data?.subarray(0,length)||this.getBytes(length)}async asyncGetBytes(){this.str.reset();const bytes=this.str.getBytes();try{const{readable:readable,writable:writable}=new DecompressionStream(\"deflate\");const writer=writable.getWriter();await writer.ready;writer.write(bytes).then((async()=>{await writer.ready;await writer.close()})).catch((()=>{}));const chunks=[];let totalLength=0;for await(const chunk of readable){chunks.push(chunk);totalLength+=chunk.byteLength}const data=new Uint8Array(totalLength);let offset=0;for(const chunk of chunks){data.set(chunk,offset);offset+=chunk.byteLength}return data}catch{this.str=new Stream(bytes,2,bytes.length,this.str.dict);this.reset();return null}}get isAsync(){return true}getBits(bits){const str=this.str;let codeSize=this.codeSize;let codeBuf=this.codeBuf;let b;while(codeSize<bits){if((b=str.getByte())===-1){throw new FormatError(\"Bad encoding in flate stream\")}codeBuf|=b<<codeSize;codeSize+=8}b=codeBuf&(1<<bits)-1;this.codeBuf=codeBuf>>bits;this.codeSize=codeSize-=bits;return b}getCode(table){const str=this.str;const codes=table[0];const maxLen=table[1];let codeSize=this.codeSize;let codeBuf=this.codeBuf;let b;while(codeSize<maxLen){if((b=str.getByte())===-1){break}codeBuf|=b<<codeSize;codeSize+=8}const code=codes[codeBuf&(1<<maxLen)-1];const codeLen=code>>16;const codeVal=code&65535;if(codeLen<1||codeSize<codeLen){throw new FormatError(\"Bad encoding in flate stream\")}this.codeBuf=codeBuf>>codeLen;this.codeSize=codeSize-codeLen;return codeVal}generateHuffmanTable(lengths){const n=lengths.length;let maxLen=0;let i;for(i=0;i<n;++i){if(lengths[i]>maxLen){maxLen=lengths[i]}}const size=1<<maxLen;const codes=new Int32Array(size);for(let len=1,code=0,skip=2;len<=maxLen;++len,code<<=1,skip<<=1){for(let val=0;val<n;++val){if(lengths[val]===len){let code2=0;let t=code;for(i=0;i<len;++i){code2=code2<<1|t&1;t>>=1}for(i=code2;i<size;i+=skip){codes[i]=len<<16|val}++code}}}return[codes,maxLen]}#endsStreamOnError(err){info(err);this.eof=true}readBlock(){let buffer,hdr,len;const str=this.str;try{hdr=this.getBits(3)}catch(ex){this.#endsStreamOnError(ex.message);return}if(hdr&1){this.eof=true}hdr>>=1;if(hdr===0){let b;if((b=str.getByte())===-1){this.#endsStreamOnError(\"Bad block header in flate stream\");return}let blockLen=b;if((b=str.getByte())===-1){this.#endsStreamOnError(\"Bad block header in flate stream\");return}blockLen|=b<<8;if((b=str.getByte())===-1){this.#endsStreamOnError(\"Bad block header in flate stream\");return}let check=b;if((b=str.getByte())===-1){this.#endsStreamOnError(\"Bad block header in flate stream\");return}check|=b<<8;if(check!==(~blockLen&65535)&&(blockLen!==0||check!==0)){throw new FormatError(\"Bad uncompressed block length in flate stream\")}this.codeBuf=0;this.codeSize=0;const bufferLength=this.bufferLength,end=bufferLength+blockLen;buffer=this.ensureBuffer(end);this.bufferLength=end;if(blockLen===0){if(str.peekByte()===-1){this.eof=true}}else{const block=str.getBytes(blockLen);buffer.set(block,bufferLength);if(block.length<blockLen){this.eof=true}}return}let litCodeTable;let distCodeTable;if(hdr===1){litCodeTable=fixedLitCodeTab;distCodeTable=fixedDistCodeTab}else if(hdr===2){const numLitCodes=this.getBits(5)+257;const numDistCodes=this.getBits(5)+1;const numCodeLenCodes=this.getBits(4)+4;const codeLenCodeLengths=new Uint8Array(codeLenCodeMap.length);let i;for(i=0;i<numCodeLenCodes;++i){codeLenCodeLengths[codeLenCodeMap[i]]=this.getBits(3)}const codeLenCodeTab=this.generateHuffmanTable(codeLenCodeLengths);len=0;i=0;const codes=numLitCodes+numDistCodes;const codeLengths=new Uint8Array(codes);let bitsLength,bitsOffset,what;while(i<codes){const code=this.getCode(codeLenCodeTab);if(code===16){bitsLength=2;bitsOffset=3;what=len}else if(code===17){bitsLength=3;bitsOffset=3;what=len=0}else if(code===18){bitsLength=7;bitsOffset=11;what=len=0}else{codeLengths[i++]=len=code;continue}let repeatLength=this.getBits(bitsLength)+bitsOffset;while(repeatLength-- >0){codeLengths[i++]=what}}litCodeTable=this.generateHuffmanTable(codeLengths.subarray(0,numLitCodes));distCodeTable=this.generateHuffmanTable(codeLengths.subarray(numLitCodes,codes))}else{throw new FormatError(\"Unknown block type in flate stream\")}buffer=this.buffer;let limit=buffer?buffer.length:0;let pos=this.bufferLength;while(true){let code1=this.getCode(litCodeTable);if(code1<256){if(pos+1>=limit){buffer=this.ensureBuffer(pos+1);limit=buffer.length}buffer[pos++]=code1;continue}if(code1===256){this.bufferLength=pos;return}code1-=257;code1=lengthDecode[code1];let code2=code1>>16;if(code2>0){code2=this.getBits(code2)}len=(code1&65535)+code2;code1=this.getCode(distCodeTable);code1=distDecode[code1];code2=code1>>16;if(code2>0){code2=this.getBits(code2)}const dist=(code1&65535)+code2;if(pos+len>=limit){buffer=this.ensureBuffer(pos+len);limit=buffer.length}for(let k=0;k<len;++k,++pos){buffer[pos]=buffer[pos-dist]}}}}const QeTable=[{qe:22017,nmps:1,nlps:1,switchFlag:1},{qe:13313,nmps:2,nlps:6,switchFlag:0},{qe:6145,nmps:3,nlps:9,switchFlag:0},{qe:2753,nmps:4,nlps:12,switchFlag:0},{qe:1313,nmps:5,nlps:29,switchFlag:0},{qe:545,nmps:38,nlps:33,switchFlag:0},{qe:22017,nmps:7,nlps:6,switchFlag:1},{qe:21505,nmps:8,nlps:14,switchFlag:0},{qe:18433,nmps:9,nlps:14,switchFlag:0},{qe:14337,nmps:10,nlps:14,switchFlag:0},{qe:12289,nmps:11,nlps:17,switchFlag:0},{qe:9217,nmps:12,nlps:18,switchFlag:0},{qe:7169,nmps:13,nlps:20,switchFlag:0},{qe:5633,nmps:29,nlps:21,switchFlag:0},{qe:22017,nmps:15,nlps:14,switchFlag:1},{qe:21505,nmps:16,nlps:14,switchFlag:0},{qe:20737,nmps:17,nlps:15,switchFlag:0},{qe:18433,nmps:18,nlps:16,switchFlag:0},{qe:14337,nmps:19,nlps:17,switchFlag:0},{qe:13313,nmps:20,nlps:18,switchFlag:0},{qe:12289,nmps:21,nlps:19,switchFlag:0},{qe:10241,nmps:22,nlps:19,switchFlag:0},{qe:9217,nmps:23,nlps:20,switchFlag:0},{qe:8705,nmps:24,nlps:21,switchFlag:0},{qe:7169,nmps:25,nlps:22,switchFlag:0},{qe:6145,nmps:26,nlps:23,switchFlag:0},{qe:5633,nmps:27,nlps:24,switchFlag:0},{qe:5121,nmps:28,nlps:25,switchFlag:0},{qe:4609,nmps:29,nlps:26,switchFlag:0},{qe:4353,nmps:30,nlps:27,switchFlag:0},{qe:2753,nmps:31,nlps:28,switchFlag:0},{qe:2497,nmps:32,nlps:29,switchFlag:0},{qe:2209,nmps:33,nlps:30,switchFlag:0},{qe:1313,nmps:34,nlps:31,switchFlag:0},{qe:1089,nmps:35,nlps:32,switchFlag:0},{qe:673,nmps:36,nlps:33,switchFlag:0},{qe:545,nmps:37,nlps:34,switchFlag:0},{qe:321,nmps:38,nlps:35,switchFlag:0},{qe:273,nmps:39,nlps:36,switchFlag:0},{qe:133,nmps:40,nlps:37,switchFlag:0},{qe:73,nmps:41,nlps:38,switchFlag:0},{qe:37,nmps:42,nlps:39,switchFlag:0},{qe:21,nmps:43,nlps:40,switchFlag:0},{qe:9,nmps:44,nlps:41,switchFlag:0},{qe:5,nmps:45,nlps:42,switchFlag:0},{qe:1,nmps:45,nlps:43,switchFlag:0},{qe:22017,nmps:46,nlps:46,switchFlag:0}];class ArithmeticDecoder{constructor(data,start,end){this.data=data;this.bp=start;this.dataEnd=end;this.chigh=data[start];this.clow=0;this.byteIn();this.chigh=this.chigh<<7&65535|this.clow>>9&127;this.clow=this.clow<<7&65535;this.ct-=7;this.a=32768}byteIn(){const data=this.data;let bp=this.bp;if(data[bp]===255){if(data[bp+1]>143){this.clow+=65280;this.ct=8}else{bp++;this.clow+=data[bp]<<9;this.ct=7;this.bp=bp}}else{bp++;this.clow+=bp<this.dataEnd?data[bp]<<8:65280;this.ct=8;this.bp=bp}if(this.clow>65535){this.chigh+=this.clow>>16;this.clow&=65535}}readBit(contexts,pos){let cx_index=contexts[pos]>>1,cx_mps=contexts[pos]&1;const qeTableIcx=QeTable[cx_index];const qeIcx=qeTableIcx.qe;let d;let a=this.a-qeIcx;if(this.chigh<qeIcx){if(a<qeIcx){a=qeIcx;d=cx_mps;cx_index=qeTableIcx.nmps}else{a=qeIcx;d=1^cx_mps;if(qeTableIcx.switchFlag===1){cx_mps=d}cx_index=qeTableIcx.nlps}}else{this.chigh-=qeIcx;if((a&32768)!==0){this.a=a;return cx_mps}if(a<qeIcx){d=1^cx_mps;if(qeTableIcx.switchFlag===1){cx_mps=d}cx_index=qeTableIcx.nlps}else{d=cx_mps;cx_index=qeTableIcx.nmps}}do{if(this.ct===0){this.byteIn()}a<<=1;this.chigh=this.chigh<<1&65535|this.clow>>15&1;this.clow=this.clow<<1&65535;this.ct--}while((a&32768)===0);this.a=a;contexts[pos]=cx_index<<1|cx_mps;return d}}class Jbig2Error extends BaseException{constructor(msg){super(msg,\"Jbig2Error\")}}class ContextCache{getContexts(id){if(id in this){return this[id]}return this[id]=new Int8Array(1<<16)}}class DecodingContext{constructor(data,start,end){this.data=data;this.start=start;this.end=end}get decoder(){const decoder=new ArithmeticDecoder(this.data,this.start,this.end);return shadow(this,\"decoder\",decoder)}get contextCache(){const cache=new ContextCache;return shadow(this,\"contextCache\",cache)}}function decodeInteger(contextCache,procedure,decoder){const contexts=contextCache.getContexts(procedure);let prev=1;function readBits(length){let v=0;for(let i=0;i<length;i++){const bit=decoder.readBit(contexts,prev);prev=prev<256?prev<<1|bit:(prev<<1|bit)&511|256;v=v<<1|bit}return v>>>0}const sign=readBits(1);const value=readBits(1)?readBits(1)?readBits(1)?readBits(1)?readBits(1)?readBits(32)+4436:readBits(12)+340:readBits(8)+84:readBits(6)+20:readBits(4)+4:readBits(2);let signedValue;if(sign===0){signedValue=value}else if(value>0){signedValue=-value}if(signedValue>=MIN_INT_32&&signedValue<=MAX_INT_32){return signedValue}return null}function decodeIAID(contextCache,decoder,codeLength){const contexts=contextCache.getContexts(\"IAID\");let prev=1;for(let i=0;i<codeLength;i++){const bit=decoder.readBit(contexts,prev);prev=prev<<1|bit}if(codeLength<31){return prev&(1<<codeLength)-1}return prev&2147483647}const SegmentTypes=[\"SymbolDictionary\",null,null,null,\"IntermediateTextRegion\",null,\"ImmediateTextRegion\",\"ImmediateLosslessTextRegion\",null,null,null,null,null,null,null,null,\"PatternDictionary\",null,null,null,\"IntermediateHalftoneRegion\",null,\"ImmediateHalftoneRegion\",\"ImmediateLosslessHalftoneRegion\",null,null,null,null,null,null,null,null,null,null,null,null,\"IntermediateGenericRegion\",null,\"ImmediateGenericRegion\",\"ImmediateLosslessGenericRegion\",\"IntermediateGenericRefinementRegion\",null,\"ImmediateGenericRefinementRegion\",\"ImmediateLosslessGenericRefinementRegion\",null,null,null,null,\"PageInformation\",\"EndOfPage\",\"EndOfStripe\",\"EndOfFile\",\"Profiles\",\"Tables\",null,null,null,null,null,null,null,null,\"Extension\"];const CodingTemplates=[[{x:-1,y:-2},{x:0,y:-2},{x:1,y:-2},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:2,y:-1},{x:-4,y:0},{x:-3,y:0},{x:-2,y:0},{x:-1,y:0}],[{x:-1,y:-2},{x:0,y:-2},{x:1,y:-2},{x:2,y:-2},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:2,y:-1},{x:-3,y:0},{x:-2,y:0},{x:-1,y:0}],[{x:-1,y:-2},{x:0,y:-2},{x:1,y:-2},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:-2,y:0},{x:-1,y:0}],[{x:-3,y:-1},{x:-2,y:-1},{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:-4,y:0},{x:-3,y:0},{x:-2,y:0},{x:-1,y:0}]];const RefinementTemplates=[{coding:[{x:0,y:-1},{x:1,y:-1},{x:-1,y:0}],reference:[{x:0,y:-1},{x:1,y:-1},{x:-1,y:0},{x:0,y:0},{x:1,y:0},{x:-1,y:1},{x:0,y:1},{x:1,y:1}]},{coding:[{x:-1,y:-1},{x:0,y:-1},{x:1,y:-1},{x:-1,y:0}],reference:[{x:0,y:-1},{x:-1,y:0},{x:0,y:0},{x:1,y:0},{x:0,y:1},{x:1,y:1}]}];const ReusedContexts=[39717,1941,229,405];const RefinementReusedContexts=[32,8];function decodeBitmapTemplate0(width,height,decodingContext){const decoder=decodingContext.decoder;const contexts=decodingContext.contextCache.getContexts(\"GB\");const bitmap=[];let contextLabel,i,j,pixel,row,row1,row2;const OLD_PIXEL_MASK=31735;for(i=0;i<height;i++){row=bitmap[i]=new Uint8Array(width);row1=i<1?row:bitmap[i-1];row2=i<2?row:bitmap[i-2];contextLabel=row2[0]<<13|row2[1]<<12|row2[2]<<11|row1[0]<<7|row1[1]<<6|row1[2]<<5|row1[3]<<4;for(j=0;j<width;j++){row[j]=pixel=decoder.readBit(contexts,contextLabel);contextLabel=(contextLabel&OLD_PIXEL_MASK)<<1|(j+3<width?row2[j+3]<<11:0)|(j+4<width?row1[j+4]<<4:0)|pixel}}return bitmap}function decodeBitmap(mmr,width,height,templateIndex,prediction,skip,at,decodingContext){if(mmr){const input=new Reader(decodingContext.data,decodingContext.start,decodingContext.end);return decodeMMRBitmap(input,width,height,false)}if(templateIndex===0&&!skip&&!prediction&&at.length===4&&at[0].x===3&&at[0].y===-1&&at[1].x===-3&&at[1].y===-1&&at[2].x===2&&at[2].y===-2&&at[3].x===-2&&at[3].y===-2){return decodeBitmapTemplate0(width,height,decodingContext)}const useskip=!!skip;const template=CodingTemplates[templateIndex].concat(at);template.sort(((a,b)=>a.y-b.y||a.x-b.x));const templateLength=template.length;const templateX=new Int8Array(templateLength);const templateY=new Int8Array(templateLength);const changingTemplateEntries=[];let reuseMask=0,minX=0,maxX=0,minY=0;let c,k;for(k=0;k<templateLength;k++){templateX[k]=template[k].x;templateY[k]=template[k].y;minX=Math.min(minX,template[k].x);maxX=Math.max(maxX,template[k].x);minY=Math.min(minY,template[k].y);if(k<templateLength-1&&template[k].y===template[k+1].y&&template[k].x===template[k+1].x-1){reuseMask|=1<<templateLength-1-k}else{changingTemplateEntries.push(k)}}const changingEntriesLength=changingTemplateEntries.length;const changingTemplateX=new Int8Array(changingEntriesLength);const changingTemplateY=new Int8Array(changingEntriesLength);const changingTemplateBit=new Uint16Array(changingEntriesLength);for(c=0;c<changingEntriesLength;c++){k=changingTemplateEntries[c];changingTemplateX[c]=template[k].x;changingTemplateY[c]=template[k].y;changingTemplateBit[c]=1<<templateLength-1-k}const sbb_left=-minX;const sbb_top=-minY;const sbb_right=width-maxX;const pseudoPixelContext=ReusedContexts[templateIndex];let row=new Uint8Array(width);const bitmap=[];const decoder=decodingContext.decoder;const contexts=decodingContext.contextCache.getContexts(\"GB\");let ltp=0,j,i0,j0,contextLabel=0,bit,shift;for(let i=0;i<height;i++){if(prediction){const sltp=decoder.readBit(contexts,pseudoPixelContext);ltp^=sltp;if(ltp){bitmap.push(row);continue}}row=new Uint8Array(row);bitmap.push(row);for(j=0;j<width;j++){if(useskip&&skip[i][j]){row[j]=0;continue}if(j>=sbb_left&&j<sbb_right&&i>=sbb_top){contextLabel=contextLabel<<1&reuseMask;for(k=0;k<changingEntriesLength;k++){i0=i+changingTemplateY[k];j0=j+changingTemplateX[k];bit=bitmap[i0][j0];if(bit){bit=changingTemplateBit[k];contextLabel|=bit}}}else{contextLabel=0;shift=templateLength-1;for(k=0;k<templateLength;k++,shift--){j0=j+templateX[k];if(j0>=0&&j0<width){i0=i+templateY[k];if(i0>=0){bit=bitmap[i0][j0];if(bit){contextLabel|=bit<<shift}}}}}const pixel=decoder.readBit(contexts,contextLabel);row[j]=pixel}}return bitmap}function decodeRefinement(width,height,templateIndex,referenceBitmap,offsetX,offsetY,prediction,at,decodingContext){let codingTemplate=RefinementTemplates[templateIndex].coding;if(templateIndex===0){codingTemplate=codingTemplate.concat([at[0]])}const codingTemplateLength=codingTemplate.length;const codingTemplateX=new Int32Array(codingTemplateLength);const codingTemplateY=new Int32Array(codingTemplateLength);let k;for(k=0;k<codingTemplateLength;k++){codingTemplateX[k]=codingTemplate[k].x;codingTemplateY[k]=codingTemplate[k].y}let referenceTemplate=RefinementTemplates[templateIndex].reference;if(templateIndex===0){referenceTemplate=referenceTemplate.concat([at[1]])}const referenceTemplateLength=referenceTemplate.length;const referenceTemplateX=new Int32Array(referenceTemplateLength);const referenceTemplateY=new Int32Array(referenceTemplateLength);for(k=0;k<referenceTemplateLength;k++){referenceTemplateX[k]=referenceTemplate[k].x;referenceTemplateY[k]=referenceTemplate[k].y}const referenceWidth=referenceBitmap[0].length;const referenceHeight=referenceBitmap.length;const pseudoPixelContext=RefinementReusedContexts[templateIndex];const bitmap=[];const decoder=decodingContext.decoder;const contexts=decodingContext.contextCache.getContexts(\"GR\");let ltp=0;for(let i=0;i<height;i++){if(prediction){const sltp=decoder.readBit(contexts,pseudoPixelContext);ltp^=sltp;if(ltp){throw new Jbig2Error(\"prediction is not supported\")}}const row=new Uint8Array(width);bitmap.push(row);for(let j=0;j<width;j++){let i0,j0;let contextLabel=0;for(k=0;k<codingTemplateLength;k++){i0=i+codingTemplateY[k];j0=j+codingTemplateX[k];if(i0<0||j0<0||j0>=width){contextLabel<<=1}else{contextLabel=contextLabel<<1|bitmap[i0][j0]}}for(k=0;k<referenceTemplateLength;k++){i0=i+referenceTemplateY[k]-offsetY;j0=j+referenceTemplateX[k]-offsetX;if(i0<0||i0>=referenceHeight||j0<0||j0>=referenceWidth){contextLabel<<=1}else{contextLabel=contextLabel<<1|referenceBitmap[i0][j0]}}const pixel=decoder.readBit(contexts,contextLabel);row[j]=pixel}}return bitmap}function decodeSymbolDictionary(huffman,refinement,symbols,numberOfNewSymbols,numberOfExportedSymbols,huffmanTables,templateIndex,at,refinementTemplateIndex,refinementAt,decodingContext,huffmanInput){if(huffman&&refinement){throw new Jbig2Error(\"symbol refinement with Huffman is not supported\")}const newSymbols=[];let currentHeight=0;let symbolCodeLength=log2(symbols.length+numberOfNewSymbols);const decoder=decodingContext.decoder;const contextCache=decodingContext.contextCache;let tableB1,symbolWidths;if(huffman){tableB1=getStandardTable(1);symbolWidths=[];symbolCodeLength=Math.max(symbolCodeLength,1)}while(newSymbols.length<numberOfNewSymbols){const deltaHeight=huffman?huffmanTables.tableDeltaHeight.decode(huffmanInput):decodeInteger(contextCache,\"IADH\",decoder);currentHeight+=deltaHeight;let currentWidth=0,totalWidth=0;const firstSymbol=huffman?symbolWidths.length:0;while(true){const deltaWidth=huffman?huffmanTables.tableDeltaWidth.decode(huffmanInput):decodeInteger(contextCache,\"IADW\",decoder);if(deltaWidth===null){break}currentWidth+=deltaWidth;totalWidth+=currentWidth;let bitmap;if(refinement){const numberOfInstances=decodeInteger(contextCache,\"IAAI\",decoder);if(numberOfInstances>1){bitmap=decodeTextRegion(huffman,refinement,currentWidth,currentHeight,0,numberOfInstances,1,symbols.concat(newSymbols),symbolCodeLength,0,0,1,0,huffmanTables,refinementTemplateIndex,refinementAt,decodingContext,0,huffmanInput)}else{const symbolId=decodeIAID(contextCache,decoder,symbolCodeLength);const rdx=decodeInteger(contextCache,\"IARDX\",decoder);const rdy=decodeInteger(contextCache,\"IARDY\",decoder);const symbol=symbolId<symbols.length?symbols[symbolId]:newSymbols[symbolId-symbols.length];bitmap=decodeRefinement(currentWidth,currentHeight,refinementTemplateIndex,symbol,rdx,rdy,false,refinementAt,decodingContext)}newSymbols.push(bitmap)}else if(huffman){symbolWidths.push(currentWidth)}else{bitmap=decodeBitmap(false,currentWidth,currentHeight,templateIndex,false,null,at,decodingContext);newSymbols.push(bitmap)}}if(huffman&&!refinement){const bitmapSize=huffmanTables.tableBitmapSize.decode(huffmanInput);huffmanInput.byteAlign();let collectiveBitmap;if(bitmapSize===0){collectiveBitmap=readUncompressedBitmap(huffmanInput,totalWidth,currentHeight)}else{const originalEnd=huffmanInput.end;const bitmapEnd=huffmanInput.position+bitmapSize;huffmanInput.end=bitmapEnd;collectiveBitmap=decodeMMRBitmap(huffmanInput,totalWidth,currentHeight,false);huffmanInput.end=originalEnd;huffmanInput.position=bitmapEnd}const numberOfSymbolsDecoded=symbolWidths.length;if(firstSymbol===numberOfSymbolsDecoded-1){newSymbols.push(collectiveBitmap)}else{let i,y,xMin=0,xMax,bitmapWidth,symbolBitmap;for(i=firstSymbol;i<numberOfSymbolsDecoded;i++){bitmapWidth=symbolWidths[i];xMax=xMin+bitmapWidth;symbolBitmap=[];for(y=0;y<currentHeight;y++){symbolBitmap.push(collectiveBitmap[y].subarray(xMin,xMax))}newSymbols.push(symbolBitmap);xMin=xMax}}}}const exportedSymbols=[],flags=[];let currentFlag=false,i,ii;const totalSymbolsLength=symbols.length+numberOfNewSymbols;while(flags.length<totalSymbolsLength){let runLength=huffman?tableB1.decode(huffmanInput):decodeInteger(contextCache,\"IAEX\",decoder);while(runLength--){flags.push(currentFlag)}currentFlag=!currentFlag}for(i=0,ii=symbols.length;i<ii;i++){if(flags[i]){exportedSymbols.push(symbols[i])}}for(let j=0;j<numberOfNewSymbols;i++,j++){if(flags[i]){exportedSymbols.push(newSymbols[j])}}return exportedSymbols}function decodeTextRegion(huffman,refinement,width,height,defaultPixelValue,numberOfSymbolInstances,stripSize,inputSymbols,symbolCodeLength,transposed,dsOffset,referenceCorner,combinationOperator,huffmanTables,refinementTemplateIndex,refinementAt,decodingContext,logStripSize,huffmanInput){if(huffman&&refinement){throw new Jbig2Error(\"refinement with Huffman is not supported\")}const bitmap=[];let i,row;for(i=0;i<height;i++){row=new Uint8Array(width);if(defaultPixelValue){row.fill(defaultPixelValue)}bitmap.push(row)}const decoder=decodingContext.decoder;const contextCache=decodingContext.contextCache;let stripT=huffman?-huffmanTables.tableDeltaT.decode(huffmanInput):-decodeInteger(contextCache,\"IADT\",decoder);let firstS=0;i=0;while(i<numberOfSymbolInstances){const deltaT=huffman?huffmanTables.tableDeltaT.decode(huffmanInput):decodeInteger(contextCache,\"IADT\",decoder);stripT+=deltaT;const deltaFirstS=huffman?huffmanTables.tableFirstS.decode(huffmanInput):decodeInteger(contextCache,\"IAFS\",decoder);firstS+=deltaFirstS;let currentS=firstS;do{let currentT=0;if(stripSize>1){currentT=huffman?huffmanInput.readBits(logStripSize):decodeInteger(contextCache,\"IAIT\",decoder)}const t=stripSize*stripT+currentT;const symbolId=huffman?huffmanTables.symbolIDTable.decode(huffmanInput):decodeIAID(contextCache,decoder,symbolCodeLength);const applyRefinement=refinement&&(huffman?huffmanInput.readBit():decodeInteger(contextCache,\"IARI\",decoder));let symbolBitmap=inputSymbols[symbolId];let symbolWidth=symbolBitmap[0].length;let symbolHeight=symbolBitmap.length;if(applyRefinement){const rdw=decodeInteger(contextCache,\"IARDW\",decoder);const rdh=decodeInteger(contextCache,\"IARDH\",decoder);const rdx=decodeInteger(contextCache,\"IARDX\",decoder);const rdy=decodeInteger(contextCache,\"IARDY\",decoder);symbolWidth+=rdw;symbolHeight+=rdh;symbolBitmap=decodeRefinement(symbolWidth,symbolHeight,refinementTemplateIndex,symbolBitmap,(rdw>>1)+rdx,(rdh>>1)+rdy,false,refinementAt,decodingContext)}let increment=0;if(!transposed){if(referenceCorner>1){currentS+=symbolWidth-1}else{increment=symbolWidth-1}}else if(!(referenceCorner&1)){currentS+=symbolHeight-1}else{increment=symbolHeight-1}const offsetT=t-(referenceCorner&1?0:symbolHeight-1);const offsetS=currentS-(referenceCorner&2?symbolWidth-1:0);let s2,t2,symbolRow;if(transposed){for(s2=0;s2<symbolHeight;s2++){row=bitmap[offsetS+s2];if(!row){continue}symbolRow=symbolBitmap[s2];const maxWidth=Math.min(width-offsetT,symbolWidth);switch(combinationOperator){case 0:for(t2=0;t2<maxWidth;t2++){row[offsetT+t2]|=symbolRow[t2]}break;case 2:for(t2=0;t2<maxWidth;t2++){row[offsetT+t2]^=symbolRow[t2]}break;default:throw new Jbig2Error(`operator ${combinationOperator} is not supported`)}}}else{for(t2=0;t2<symbolHeight;t2++){row=bitmap[offsetT+t2];if(!row){continue}symbolRow=symbolBitmap[t2];switch(combinationOperator){case 0:for(s2=0;s2<symbolWidth;s2++){row[offsetS+s2]|=symbolRow[s2]}break;case 2:for(s2=0;s2<symbolWidth;s2++){row[offsetS+s2]^=symbolRow[s2]}break;default:throw new Jbig2Error(`operator ${combinationOperator} is not supported`)}}}i++;const deltaS=huffman?huffmanTables.tableDeltaS.decode(huffmanInput):decodeInteger(contextCache,\"IADS\",decoder);if(deltaS===null){break}currentS+=increment+deltaS+dsOffset}while(true)}return bitmap}function decodePatternDictionary(mmr,patternWidth,patternHeight,maxPatternIndex,template,decodingContext){const at=[];if(!mmr){at.push({x:-patternWidth,y:0});if(template===0){at.push({x:-3,y:-1},{x:2,y:-2},{x:-2,y:-2})}}const collectiveWidth=(maxPatternIndex+1)*patternWidth;const collectiveBitmap=decodeBitmap(mmr,collectiveWidth,patternHeight,template,false,null,at,decodingContext);const patterns=[];for(let i=0;i<=maxPatternIndex;i++){const patternBitmap=[];const xMin=patternWidth*i;const xMax=xMin+patternWidth;for(let y=0;y<patternHeight;y++){patternBitmap.push(collectiveBitmap[y].subarray(xMin,xMax))}patterns.push(patternBitmap)}return patterns}function decodeHalftoneRegion(mmr,patterns,template,regionWidth,regionHeight,defaultPixelValue,enableSkip,combinationOperator,gridWidth,gridHeight,gridOffsetX,gridOffsetY,gridVectorX,gridVectorY,decodingContext){const skip=null;if(enableSkip){throw new Jbig2Error(\"skip is not supported\")}if(combinationOperator!==0){throw new Jbig2Error(`operator \"${combinationOperator}\" is not supported in halftone region`)}const regionBitmap=[];let i,j,row;for(i=0;i<regionHeight;i++){row=new Uint8Array(regionWidth);if(defaultPixelValue){row.fill(defaultPixelValue)}regionBitmap.push(row)}const numberOfPatterns=patterns.length;const pattern0=patterns[0];const patternWidth=pattern0[0].length,patternHeight=pattern0.length;const bitsPerValue=log2(numberOfPatterns);const at=[];if(!mmr){at.push({x:template<=1?3:2,y:-1});if(template===0){at.push({x:-3,y:-1},{x:2,y:-2},{x:-2,y:-2})}}const grayScaleBitPlanes=[];let mmrInput,bitmap;if(mmr){mmrInput=new Reader(decodingContext.data,decodingContext.start,decodingContext.end)}for(i=bitsPerValue-1;i>=0;i--){if(mmr){bitmap=decodeMMRBitmap(mmrInput,gridWidth,gridHeight,true)}else{bitmap=decodeBitmap(false,gridWidth,gridHeight,template,false,skip,at,decodingContext)}grayScaleBitPlanes[i]=bitmap}let mg,ng,bit,patternIndex,patternBitmap,x,y,patternRow,regionRow;for(mg=0;mg<gridHeight;mg++){for(ng=0;ng<gridWidth;ng++){bit=0;patternIndex=0;for(j=bitsPerValue-1;j>=0;j--){bit^=grayScaleBitPlanes[j][mg][ng];patternIndex|=bit<<j}patternBitmap=patterns[patternIndex];x=gridOffsetX+mg*gridVectorY+ng*gridVectorX>>8;y=gridOffsetY+mg*gridVectorX-ng*gridVectorY>>8;if(x>=0&&x+patternWidth<=regionWidth&&y>=0&&y+patternHeight<=regionHeight){for(i=0;i<patternHeight;i++){regionRow=regionBitmap[y+i];patternRow=patternBitmap[i];for(j=0;j<patternWidth;j++){regionRow[x+j]|=patternRow[j]}}}else{let regionX,regionY;for(i=0;i<patternHeight;i++){regionY=y+i;if(regionY<0||regionY>=regionHeight){continue}regionRow=regionBitmap[regionY];patternRow=patternBitmap[i];for(j=0;j<patternWidth;j++){regionX=x+j;if(regionX>=0&&regionX<regionWidth){regionRow[regionX]|=patternRow[j]}}}}}}return regionBitmap}function readSegmentHeader(data,start){const segmentHeader={};segmentHeader.number=readUint32(data,start);const flags=data[start+4];const segmentType=flags&63;if(!SegmentTypes[segmentType]){throw new Jbig2Error(\"invalid segment type: \"+segmentType)}segmentHeader.type=segmentType;segmentHeader.typeName=SegmentTypes[segmentType];segmentHeader.deferredNonRetain=!!(flags&128);const pageAssociationFieldSize=!!(flags&64);const referredFlags=data[start+5];let referredToCount=referredFlags>>5&7;const retainBits=[referredFlags&31];let position=start+6;if(referredFlags===7){referredToCount=readUint32(data,position-1)&536870911;position+=3;let bytes=referredToCount+7>>3;retainBits[0]=data[position++];while(--bytes>0){retainBits.push(data[position++])}}else if(referredFlags===5||referredFlags===6){throw new Jbig2Error(\"invalid referred-to flags\")}segmentHeader.retainBits=retainBits;let referredToSegmentNumberSize=4;if(segmentHeader.number<=256){referredToSegmentNumberSize=1}else if(segmentHeader.number<=65536){referredToSegmentNumberSize=2}const referredTo=[];let i,ii;for(i=0;i<referredToCount;i++){let number;if(referredToSegmentNumberSize===1){number=data[position]}else if(referredToSegmentNumberSize===2){number=readUint16(data,position)}else{number=readUint32(data,position)}referredTo.push(number);position+=referredToSegmentNumberSize}segmentHeader.referredTo=referredTo;if(!pageAssociationFieldSize){segmentHeader.pageAssociation=data[position++]}else{segmentHeader.pageAssociation=readUint32(data,position);position+=4}segmentHeader.length=readUint32(data,position);position+=4;if(segmentHeader.length===4294967295){if(segmentType===38){const genericRegionInfo=readRegionSegmentInformation(data,position);const genericRegionSegmentFlags=data[position+RegionSegmentInformationFieldLength];const genericRegionMmr=!!(genericRegionSegmentFlags&1);const searchPatternLength=6;const searchPattern=new Uint8Array(searchPatternLength);if(!genericRegionMmr){searchPattern[0]=255;searchPattern[1]=172}searchPattern[2]=genericRegionInfo.height>>>24&255;searchPattern[3]=genericRegionInfo.height>>16&255;searchPattern[4]=genericRegionInfo.height>>8&255;searchPattern[5]=genericRegionInfo.height&255;for(i=position,ii=data.length;i<ii;i++){let j=0;while(j<searchPatternLength&&searchPattern[j]===data[i+j]){j++}if(j===searchPatternLength){segmentHeader.length=i+searchPatternLength;break}}if(segmentHeader.length===4294967295){throw new Jbig2Error(\"segment end was not found\")}}else{throw new Jbig2Error(\"invalid unknown segment length\")}}segmentHeader.headerEnd=position;return segmentHeader}function readSegments(header,data,start,end){const segments=[];let position=start;while(position<end){const segmentHeader=readSegmentHeader(data,position);position=segmentHeader.headerEnd;const segment={header:segmentHeader,data:data};if(!header.randomAccess){segment.start=position;position+=segmentHeader.length;segment.end=position}segments.push(segment);if(segmentHeader.type===51){break}}if(header.randomAccess){for(let i=0,ii=segments.length;i<ii;i++){segments[i].start=position;position+=segments[i].header.length;segments[i].end=position}}return segments}function readRegionSegmentInformation(data,start){return{width:readUint32(data,start),height:readUint32(data,start+4),x:readUint32(data,start+8),y:readUint32(data,start+12),combinationOperator:data[start+16]&7}}const RegionSegmentInformationFieldLength=17;function processSegment(segment,visitor){const header=segment.header;const data=segment.data,end=segment.end;let position=segment.start;let args,at,i,atLength;switch(header.type){case 0:const dictionary={};const dictionaryFlags=readUint16(data,position);dictionary.huffman=!!(dictionaryFlags&1);dictionary.refinement=!!(dictionaryFlags&2);dictionary.huffmanDHSelector=dictionaryFlags>>2&3;dictionary.huffmanDWSelector=dictionaryFlags>>4&3;dictionary.bitmapSizeSelector=dictionaryFlags>>6&1;dictionary.aggregationInstancesSelector=dictionaryFlags>>7&1;dictionary.bitmapCodingContextUsed=!!(dictionaryFlags&256);dictionary.bitmapCodingContextRetained=!!(dictionaryFlags&512);dictionary.template=dictionaryFlags>>10&3;dictionary.refinementTemplate=dictionaryFlags>>12&1;position+=2;if(!dictionary.huffman){atLength=dictionary.template===0?4:1;at=[];for(i=0;i<atLength;i++){at.push({x:readInt8(data,position),y:readInt8(data,position+1)});position+=2}dictionary.at=at}if(dictionary.refinement&&!dictionary.refinementTemplate){at=[];for(i=0;i<2;i++){at.push({x:readInt8(data,position),y:readInt8(data,position+1)});position+=2}dictionary.refinementAt=at}dictionary.numberOfExportedSymbols=readUint32(data,position);position+=4;dictionary.numberOfNewSymbols=readUint32(data,position);position+=4;args=[dictionary,header.number,header.referredTo,data,position,end];break;case 6:case 7:const textRegion={};textRegion.info=readRegionSegmentInformation(data,position);position+=RegionSegmentInformationFieldLength;const textRegionSegmentFlags=readUint16(data,position);position+=2;textRegion.huffman=!!(textRegionSegmentFlags&1);textRegion.refinement=!!(textRegionSegmentFlags&2);textRegion.logStripSize=textRegionSegmentFlags>>2&3;textRegion.stripSize=1<<textRegion.logStripSize;textRegion.referenceCorner=textRegionSegmentFlags>>4&3;textRegion.transposed=!!(textRegionSegmentFlags&64);textRegion.combinationOperator=textRegionSegmentFlags>>7&3;textRegion.defaultPixelValue=textRegionSegmentFlags>>9&1;textRegion.dsOffset=textRegionSegmentFlags<<17>>27;textRegion.refinementTemplate=textRegionSegmentFlags>>15&1;if(textRegion.huffman){const textRegionHuffmanFlags=readUint16(data,position);position+=2;textRegion.huffmanFS=textRegionHuffmanFlags&3;textRegion.huffmanDS=textRegionHuffmanFlags>>2&3;textRegion.huffmanDT=textRegionHuffmanFlags>>4&3;textRegion.huffmanRefinementDW=textRegionHuffmanFlags>>6&3;textRegion.huffmanRefinementDH=textRegionHuffmanFlags>>8&3;textRegion.huffmanRefinementDX=textRegionHuffmanFlags>>10&3;textRegion.huffmanRefinementDY=textRegionHuffmanFlags>>12&3;textRegion.huffmanRefinementSizeSelector=!!(textRegionHuffmanFlags&16384)}if(textRegion.refinement&&!textRegion.refinementTemplate){at=[];for(i=0;i<2;i++){at.push({x:readInt8(data,position),y:readInt8(data,position+1)});position+=2}textRegion.refinementAt=at}textRegion.numberOfSymbolInstances=readUint32(data,position);position+=4;args=[textRegion,header.referredTo,data,position,end];break;case 16:const patternDictionary={};const patternDictionaryFlags=data[position++];patternDictionary.mmr=!!(patternDictionaryFlags&1);patternDictionary.template=patternDictionaryFlags>>1&3;patternDictionary.patternWidth=data[position++];patternDictionary.patternHeight=data[position++];patternDictionary.maxPatternIndex=readUint32(data,position);position+=4;args=[patternDictionary,header.number,data,position,end];break;case 22:case 23:const halftoneRegion={};halftoneRegion.info=readRegionSegmentInformation(data,position);position+=RegionSegmentInformationFieldLength;const halftoneRegionFlags=data[position++];halftoneRegion.mmr=!!(halftoneRegionFlags&1);halftoneRegion.template=halftoneRegionFlags>>1&3;halftoneRegion.enableSkip=!!(halftoneRegionFlags&8);halftoneRegion.combinationOperator=halftoneRegionFlags>>4&7;halftoneRegion.defaultPixelValue=halftoneRegionFlags>>7&1;halftoneRegion.gridWidth=readUint32(data,position);position+=4;halftoneRegion.gridHeight=readUint32(data,position);position+=4;halftoneRegion.gridOffsetX=readUint32(data,position)&4294967295;position+=4;halftoneRegion.gridOffsetY=readUint32(data,position)&4294967295;position+=4;halftoneRegion.gridVectorX=readUint16(data,position);position+=2;halftoneRegion.gridVectorY=readUint16(data,position);position+=2;args=[halftoneRegion,header.referredTo,data,position,end];break;case 38:case 39:const genericRegion={};genericRegion.info=readRegionSegmentInformation(data,position);position+=RegionSegmentInformationFieldLength;const genericRegionSegmentFlags=data[position++];genericRegion.mmr=!!(genericRegionSegmentFlags&1);genericRegion.template=genericRegionSegmentFlags>>1&3;genericRegion.prediction=!!(genericRegionSegmentFlags&8);if(!genericRegion.mmr){atLength=genericRegion.template===0?4:1;at=[];for(i=0;i<atLength;i++){at.push({x:readInt8(data,position),y:readInt8(data,position+1)});position+=2}genericRegion.at=at}args=[genericRegion,data,position,end];break;case 48:const pageInfo={width:readUint32(data,position),height:readUint32(data,position+4),resolutionX:readUint32(data,position+8),resolutionY:readUint32(data,position+12)};if(pageInfo.height===4294967295){delete pageInfo.height}const pageSegmentFlags=data[position+16];readUint16(data,position+17);pageInfo.lossless=!!(pageSegmentFlags&1);pageInfo.refinement=!!(pageSegmentFlags&2);pageInfo.defaultPixelValue=pageSegmentFlags>>2&1;pageInfo.combinationOperator=pageSegmentFlags>>3&3;pageInfo.requiresBuffer=!!(pageSegmentFlags&32);pageInfo.combinationOperatorOverride=!!(pageSegmentFlags&64);args=[pageInfo];break;case 49:break;case 50:break;case 51:break;case 53:args=[header.number,data,position,end];break;case 62:break;default:throw new Jbig2Error(`segment type ${header.typeName}(${header.type}) is not implemented`)}const callbackName=\"on\"+header.typeName;if(callbackName in visitor){visitor[callbackName].apply(visitor,args)}}function processSegments(segments,visitor){for(let i=0,ii=segments.length;i<ii;i++){processSegment(segments[i],visitor)}}function parseJbig2Chunks(chunks){const visitor=new SimpleSegmentVisitor;for(let i=0,ii=chunks.length;i<ii;i++){const chunk=chunks[i];const segments=readSegments({},chunk.data,chunk.start,chunk.end);processSegments(segments,visitor)}return visitor.buffer}function parseJbig2(data){throw new Error(\"Not implemented: parseJbig2\")}class SimpleSegmentVisitor{onPageInformation(info){this.currentPageInfo=info;const rowSize=info.width+7>>3;const buffer=new Uint8ClampedArray(rowSize*info.height);if(info.defaultPixelValue){buffer.fill(255)}this.buffer=buffer}drawBitmap(regionInfo,bitmap){const pageInfo=this.currentPageInfo;const width=regionInfo.width,height=regionInfo.height;const rowSize=pageInfo.width+7>>3;const combinationOperator=pageInfo.combinationOperatorOverride?regionInfo.combinationOperator:pageInfo.combinationOperator;const buffer=this.buffer;const mask0=128>>(regionInfo.x&7);let offset0=regionInfo.y*rowSize+(regionInfo.x>>3);let i,j,mask,offset;switch(combinationOperator){case 0:for(i=0;i<height;i++){mask=mask0;offset=offset0;for(j=0;j<width;j++){if(bitmap[i][j]){buffer[offset]|=mask}mask>>=1;if(!mask){mask=128;offset++}}offset0+=rowSize}break;case 2:for(i=0;i<height;i++){mask=mask0;offset=offset0;for(j=0;j<width;j++){if(bitmap[i][j]){buffer[offset]^=mask}mask>>=1;if(!mask){mask=128;offset++}}offset0+=rowSize}break;default:throw new Jbig2Error(`operator ${combinationOperator} is not supported`)}}onImmediateGenericRegion(region,data,start,end){const regionInfo=region.info;const decodingContext=new DecodingContext(data,start,end);const bitmap=decodeBitmap(region.mmr,regionInfo.width,regionInfo.height,region.template,region.prediction,null,region.at,decodingContext);this.drawBitmap(regionInfo,bitmap)}onImmediateLosslessGenericRegion(){this.onImmediateGenericRegion(...arguments)}onSymbolDictionary(dictionary,currentSegment,referredSegments,data,start,end){let huffmanTables,huffmanInput;if(dictionary.huffman){huffmanTables=getSymbolDictionaryHuffmanTables(dictionary,referredSegments,this.customTables);huffmanInput=new Reader(data,start,end)}let symbols=this.symbols;if(!symbols){this.symbols=symbols={}}const inputSymbols=[];for(const referredSegment of referredSegments){const referredSymbols=symbols[referredSegment];if(referredSymbols){inputSymbols.push(...referredSymbols)}}const decodingContext=new DecodingContext(data,start,end);symbols[currentSegment]=decodeSymbolDictionary(dictionary.huffman,dictionary.refinement,inputSymbols,dictionary.numberOfNewSymbols,dictionary.numberOfExportedSymbols,huffmanTables,dictionary.template,dictionary.at,dictionary.refinementTemplate,dictionary.refinementAt,decodingContext,huffmanInput)}onImmediateTextRegion(region,referredSegments,data,start,end){const regionInfo=region.info;let huffmanTables,huffmanInput;const symbols=this.symbols;const inputSymbols=[];for(const referredSegment of referredSegments){const referredSymbols=symbols[referredSegment];if(referredSymbols){inputSymbols.push(...referredSymbols)}}const symbolCodeLength=log2(inputSymbols.length);if(region.huffman){huffmanInput=new Reader(data,start,end);huffmanTables=getTextRegionHuffmanTables(region,referredSegments,this.customTables,inputSymbols.length,huffmanInput)}const decodingContext=new DecodingContext(data,start,end);const bitmap=decodeTextRegion(region.huffman,region.refinement,regionInfo.width,regionInfo.height,region.defaultPixelValue,region.numberOfSymbolInstances,region.stripSize,inputSymbols,symbolCodeLength,region.transposed,region.dsOffset,region.referenceCorner,region.combinationOperator,huffmanTables,region.refinementTemplate,region.refinementAt,decodingContext,region.logStripSize,huffmanInput);this.drawBitmap(regionInfo,bitmap)}onImmediateLosslessTextRegion(){this.onImmediateTextRegion(...arguments)}onPatternDictionary(dictionary,currentSegment,data,start,end){let patterns=this.patterns;if(!patterns){this.patterns=patterns={}}const decodingContext=new DecodingContext(data,start,end);patterns[currentSegment]=decodePatternDictionary(dictionary.mmr,dictionary.patternWidth,dictionary.patternHeight,dictionary.maxPatternIndex,dictionary.template,decodingContext)}onImmediateHalftoneRegion(region,referredSegments,data,start,end){const patterns=this.patterns[referredSegments[0]];const regionInfo=region.info;const decodingContext=new DecodingContext(data,start,end);const bitmap=decodeHalftoneRegion(region.mmr,patterns,region.template,regionInfo.width,regionInfo.height,region.defaultPixelValue,region.enableSkip,region.combinationOperator,region.gridWidth,region.gridHeight,region.gridOffsetX,region.gridOffsetY,region.gridVectorX,region.gridVectorY,decodingContext);this.drawBitmap(regionInfo,bitmap)}onImmediateLosslessHalftoneRegion(){this.onImmediateHalftoneRegion(...arguments)}onTables(currentSegment,data,start,end){let customTables=this.customTables;if(!customTables){this.customTables=customTables={}}customTables[currentSegment]=decodeTablesSegment(data,start,end)}}class HuffmanLine{constructor(lineData){if(lineData.length===2){this.isOOB=true;this.rangeLow=0;this.prefixLength=lineData[0];this.rangeLength=0;this.prefixCode=lineData[1];this.isLowerRange=false}else{this.isOOB=false;this.rangeLow=lineData[0];this.prefixLength=lineData[1];this.rangeLength=lineData[2];this.prefixCode=lineData[3];this.isLowerRange=lineData[4]===\"lower\"}}}class HuffmanTreeNode{constructor(line){this.children=[];if(line){this.isLeaf=true;this.rangeLength=line.rangeLength;this.rangeLow=line.rangeLow;this.isLowerRange=line.isLowerRange;this.isOOB=line.isOOB}else{this.isLeaf=false}}buildTree(line,shift){const bit=line.prefixCode>>shift&1;if(shift<=0){this.children[bit]=new HuffmanTreeNode(line)}else{let node=this.children[bit];if(!node){this.children[bit]=node=new HuffmanTreeNode(null)}node.buildTree(line,shift-1)}}decodeNode(reader){if(this.isLeaf){if(this.isOOB){return null}const htOffset=reader.readBits(this.rangeLength);return this.rangeLow+(this.isLowerRange?-htOffset:htOffset)}const node=this.children[reader.readBit()];if(!node){throw new Jbig2Error(\"invalid Huffman data\")}return node.decodeNode(reader)}}class HuffmanTable{constructor(lines,prefixCodesDone){if(!prefixCodesDone){this.assignPrefixCodes(lines)}this.rootNode=new HuffmanTreeNode(null);for(let i=0,ii=lines.length;i<ii;i++){const line=lines[i];if(line.prefixLength>0){this.rootNode.buildTree(line,line.prefixLength-1)}}}decode(reader){return this.rootNode.decodeNode(reader)}assignPrefixCodes(lines){const linesLength=lines.length;let prefixLengthMax=0;for(let i=0;i<linesLength;i++){prefixLengthMax=Math.max(prefixLengthMax,lines[i].prefixLength)}const histogram=new Uint32Array(prefixLengthMax+1);for(let i=0;i<linesLength;i++){histogram[lines[i].prefixLength]++}let currentLength=1,firstCode=0,currentCode,currentTemp,line;histogram[0]=0;while(currentLength<=prefixLengthMax){firstCode=firstCode+histogram[currentLength-1]<<1;currentCode=firstCode;currentTemp=0;while(currentTemp<linesLength){line=lines[currentTemp];if(line.prefixLength===currentLength){line.prefixCode=currentCode;currentCode++}currentTemp++}currentLength++}}}function decodeTablesSegment(data,start,end){const flags=data[start];const lowestValue=readUint32(data,start+1)&4294967295;const highestValue=readUint32(data,start+5)&4294967295;const reader=new Reader(data,start+9,end);const prefixSizeBits=(flags>>1&7)+1;const rangeSizeBits=(flags>>4&7)+1;const lines=[];let prefixLength,rangeLength,currentRangeLow=lowestValue;do{prefixLength=reader.readBits(prefixSizeBits);rangeLength=reader.readBits(rangeSizeBits);lines.push(new HuffmanLine([currentRangeLow,prefixLength,rangeLength,0]));currentRangeLow+=1<<rangeLength}while(currentRangeLow<highestValue);prefixLength=reader.readBits(prefixSizeBits);lines.push(new HuffmanLine([lowestValue-1,prefixLength,32,0,\"lower\"]));prefixLength=reader.readBits(prefixSizeBits);lines.push(new HuffmanLine([highestValue,prefixLength,32,0]));if(flags&1){prefixLength=reader.readBits(prefixSizeBits);lines.push(new HuffmanLine([prefixLength,0]))}return new HuffmanTable(lines,false)}const standardTablesCache={};function getStandardTable(number){let table=standardTablesCache[number];if(table){return table}let lines;switch(number){case 1:lines=[[0,1,4,0],[16,2,8,2],[272,3,16,6],[65808,3,32,7]];break;case 2:lines=[[0,1,0,0],[1,2,0,2],[2,3,0,6],[3,4,3,14],[11,5,6,30],[75,6,32,62],[6,63]];break;case 3:lines=[[-256,8,8,254],[0,1,0,0],[1,2,0,2],[2,3,0,6],[3,4,3,14],[11,5,6,30],[-257,8,32,255,\"lower\"],[75,7,32,126],[6,62]];break;case 4:lines=[[1,1,0,0],[2,2,0,2],[3,3,0,6],[4,4,3,14],[12,5,6,30],[76,5,32,31]];break;case 5:lines=[[-255,7,8,126],[1,1,0,0],[2,2,0,2],[3,3,0,6],[4,4,3,14],[12,5,6,30],[-256,7,32,127,\"lower\"],[76,6,32,62]];break;case 6:lines=[[-2048,5,10,28],[-1024,4,9,8],[-512,4,8,9],[-256,4,7,10],[-128,5,6,29],[-64,5,5,30],[-32,4,5,11],[0,2,7,0],[128,3,7,2],[256,3,8,3],[512,4,9,12],[1024,4,10,13],[-2049,6,32,62,\"lower\"],[2048,6,32,63]];break;case 7:lines=[[-1024,4,9,8],[-512,3,8,0],[-256,4,7,9],[-128,5,6,26],[-64,5,5,27],[-32,4,5,10],[0,4,5,11],[32,5,5,28],[64,5,6,29],[128,4,7,12],[256,3,8,1],[512,3,9,2],[1024,3,10,3],[-1025,5,32,30,\"lower\"],[2048,5,32,31]];break;case 8:lines=[[-15,8,3,252],[-7,9,1,508],[-5,8,1,253],[-3,9,0,509],[-2,7,0,124],[-1,4,0,10],[0,2,1,0],[2,5,0,26],[3,6,0,58],[4,3,4,4],[20,6,1,59],[22,4,4,11],[38,4,5,12],[70,5,6,27],[134,5,7,28],[262,6,7,60],[390,7,8,125],[646,6,10,61],[-16,9,32,510,\"lower\"],[1670,9,32,511],[2,1]];break;case 9:lines=[[-31,8,4,252],[-15,9,2,508],[-11,8,2,253],[-7,9,1,509],[-5,7,1,124],[-3,4,1,10],[-1,3,1,2],[1,3,1,3],[3,5,1,26],[5,6,1,58],[7,3,5,4],[39,6,2,59],[43,4,5,11],[75,4,6,12],[139,5,7,27],[267,5,8,28],[523,6,8,60],[779,7,9,125],[1291,6,11,61],[-32,9,32,510,\"lower\"],[3339,9,32,511],[2,0]];break;case 10:lines=[[-21,7,4,122],[-5,8,0,252],[-4,7,0,123],[-3,5,0,24],[-2,2,2,0],[2,5,0,25],[3,6,0,54],[4,7,0,124],[5,8,0,253],[6,2,6,1],[70,5,5,26],[102,6,5,55],[134,6,6,56],[198,6,7,57],[326,6,8,58],[582,6,9,59],[1094,6,10,60],[2118,7,11,125],[-22,8,32,254,\"lower\"],[4166,8,32,255],[2,2]];break;case 11:lines=[[1,1,0,0],[2,2,1,2],[4,4,0,12],[5,4,1,13],[7,5,1,28],[9,5,2,29],[13,6,2,60],[17,7,2,122],[21,7,3,123],[29,7,4,124],[45,7,5,125],[77,7,6,126],[141,7,32,127]];break;case 12:lines=[[1,1,0,0],[2,2,0,2],[3,3,1,6],[5,5,0,28],[6,5,1,29],[8,6,1,60],[10,7,0,122],[11,7,1,123],[13,7,2,124],[17,7,3,125],[25,7,4,126],[41,8,5,254],[73,8,32,255]];break;case 13:lines=[[1,1,0,0],[2,3,0,4],[3,4,0,12],[4,5,0,28],[5,4,1,13],[7,3,3,5],[15,6,1,58],[17,6,2,59],[21,6,3,60],[29,6,4,61],[45,6,5,62],[77,7,6,126],[141,7,32,127]];break;case 14:lines=[[-2,3,0,4],[-1,3,0,5],[0,1,0,0],[1,3,0,6],[2,3,0,7]];break;case 15:lines=[[-24,7,4,124],[-8,6,2,60],[-4,5,1,28],[-2,4,0,12],[-1,3,0,4],[0,1,0,0],[1,3,0,5],[2,4,0,13],[3,5,1,29],[5,6,2,61],[9,7,4,125],[-25,7,32,126,\"lower\"],[25,7,32,127]];break;default:throw new Jbig2Error(`standard table B.${number} does not exist`)}for(let i=0,ii=lines.length;i<ii;i++){lines[i]=new HuffmanLine(lines[i])}table=new HuffmanTable(lines,true);standardTablesCache[number]=table;return table}class Reader{constructor(data,start,end){this.data=data;this.start=start;this.end=end;this.position=start;this.shift=-1;this.currentByte=0}readBit(){if(this.shift<0){if(this.position>=this.end){throw new Jbig2Error(\"end of data while reading bit\")}this.currentByte=this.data[this.position++];this.shift=7}const bit=this.currentByte>>this.shift&1;this.shift--;return bit}readBits(numBits){let result=0,i;for(i=numBits-1;i>=0;i--){result|=this.readBit()<<i}return result}byteAlign(){this.shift=-1}next(){if(this.position>=this.end){return-1}return this.data[this.position++]}}function getCustomHuffmanTable(index,referredTo,customTables){let currentIndex=0;for(let i=0,ii=referredTo.length;i<ii;i++){const table=customTables[referredTo[i]];if(table){if(index===currentIndex){return table}currentIndex++}}throw new Jbig2Error(\"can't find custom Huffman table\")}function getTextRegionHuffmanTables(textRegion,referredTo,customTables,numberOfSymbols,reader){const codes=[];for(let i=0;i<=34;i++){const codeLength=reader.readBits(4);codes.push(new HuffmanLine([i,codeLength,0,0]))}const runCodesTable=new HuffmanTable(codes,false);codes.length=0;for(let i=0;i<numberOfSymbols;){const codeLength=runCodesTable.decode(reader);if(codeLength>=32){let repeatedLength,numberOfRepeats,j;switch(codeLength){case 32:if(i===0){throw new Jbig2Error(\"no previous value in symbol ID table\")}numberOfRepeats=reader.readBits(2)+3;repeatedLength=codes[i-1].prefixLength;break;case 33:numberOfRepeats=reader.readBits(3)+3;repeatedLength=0;break;case 34:numberOfRepeats=reader.readBits(7)+11;repeatedLength=0;break;default:throw new Jbig2Error(\"invalid code length in symbol ID table\")}for(j=0;j<numberOfRepeats;j++){codes.push(new HuffmanLine([i,repeatedLength,0,0]));i++}}else{codes.push(new HuffmanLine([i,codeLength,0,0]));i++}}reader.byteAlign();const symbolIDTable=new HuffmanTable(codes,false);let customIndex=0,tableFirstS,tableDeltaS,tableDeltaT;switch(textRegion.huffmanFS){case 0:case 1:tableFirstS=getStandardTable(textRegion.huffmanFS+6);break;case 3:tableFirstS=getCustomHuffmanTable(customIndex,referredTo,customTables);customIndex++;break;default:throw new Jbig2Error(\"invalid Huffman FS selector\")}switch(textRegion.huffmanDS){case 0:case 1:case 2:tableDeltaS=getStandardTable(textRegion.huffmanDS+8);break;case 3:tableDeltaS=getCustomHuffmanTable(customIndex,referredTo,customTables);customIndex++;break;default:throw new Jbig2Error(\"invalid Huffman DS selector\")}switch(textRegion.huffmanDT){case 0:case 1:case 2:tableDeltaT=getStandardTable(textRegion.huffmanDT+11);break;case 3:tableDeltaT=getCustomHuffmanTable(customIndex,referredTo,customTables);customIndex++;break;default:throw new Jbig2Error(\"invalid Huffman DT selector\")}if(textRegion.refinement){throw new Jbig2Error(\"refinement with Huffman is not supported\")}return{symbolIDTable:symbolIDTable,tableFirstS:tableFirstS,tableDeltaS:tableDeltaS,tableDeltaT:tableDeltaT}}function getSymbolDictionaryHuffmanTables(dictionary,referredTo,customTables){let customIndex=0,tableDeltaHeight,tableDeltaWidth;switch(dictionary.huffmanDHSelector){case 0:case 1:tableDeltaHeight=getStandardTable(dictionary.huffmanDHSelector+4);break;case 3:tableDeltaHeight=getCustomHuffmanTable(customIndex,referredTo,customTables);customIndex++;break;default:throw new Jbig2Error(\"invalid Huffman DH selector\")}switch(dictionary.huffmanDWSelector){case 0:case 1:tableDeltaWidth=getStandardTable(dictionary.huffmanDWSelector+2);break;case 3:tableDeltaWidth=getCustomHuffmanTable(customIndex,referredTo,customTables);customIndex++;break;default:throw new Jbig2Error(\"invalid Huffman DW selector\")}let tableBitmapSize,tableAggregateInstances;if(dictionary.bitmapSizeSelector){tableBitmapSize=getCustomHuffmanTable(customIndex,referredTo,customTables);customIndex++}else{tableBitmapSize=getStandardTable(1)}if(dictionary.aggregationInstancesSelector){tableAggregateInstances=getCustomHuffmanTable(customIndex,referredTo,customTables)}else{tableAggregateInstances=getStandardTable(1)}return{tableDeltaHeight:tableDeltaHeight,tableDeltaWidth:tableDeltaWidth,tableBitmapSize:tableBitmapSize,tableAggregateInstances:tableAggregateInstances}}function readUncompressedBitmap(reader,width,height){const bitmap=[];for(let y=0;y<height;y++){const row=new Uint8Array(width);bitmap.push(row);for(let x=0;x<width;x++){row[x]=reader.readBit()}reader.byteAlign()}return bitmap}function decodeMMRBitmap(input,width,height,endOfBlock){const params={K:-1,Columns:width,Rows:height,BlackIs1:true,EndOfBlock:endOfBlock};const decoder=new CCITTFaxDecoder(input,params);const bitmap=[];let currentByte,eof=false;for(let y=0;y<height;y++){const row=new Uint8Array(width);bitmap.push(row);let shift=-1;for(let x=0;x<width;x++){if(shift<0){currentByte=decoder.readNextChar();if(currentByte===-1){currentByte=0;eof=true}shift=7}row[x]=currentByte>>shift&1;shift--}}if(endOfBlock&&!eof){const lookForEOFLimit=5;for(let i=0;i<lookForEOFLimit;i++){if(decoder.readNextChar()===-1){break}}}return bitmap}class Jbig2Image{parseChunks(chunks){return parseJbig2Chunks(chunks)}parse(data){throw new Error(\"Not implemented: Jbig2Image.parse\")}}class Jbig2Stream extends DecodeStream{constructor(stream,maybeLength,params){super(maybeLength);this.stream=stream;this.dict=stream.dict;this.maybeLength=maybeLength;this.params=params}get bytes(){return shadow(this,\"bytes\",this.stream.getBytes(this.maybeLength))}ensureBuffer(requested){}readBlock(){this.decodeImage()}decodeImage(bytes){if(this.eof){return this.buffer}bytes||=this.bytes;const jbig2Image=new Jbig2Image;const chunks=[];if(this.params instanceof Dict){const globalsStream=this.params.get(\"JBIG2Globals\");if(globalsStream instanceof BaseStream){const globals=globalsStream.getBytes();chunks.push({data:globals,start:0,end:globals.length})}}chunks.push({data:bytes,start:0,end:bytes.length});const data=jbig2Image.parseChunks(chunks);const dataLength=data.length;for(let i=0;i<dataLength;i++){data[i]^=255}this.buffer=data;this.bufferLength=dataLength;this.eof=true;return this.buffer}get canAsyncDecodeImageFromBuffer(){return this.stream.isAsync}}class JpxStream extends DecodeStream{constructor(stream,maybeLength,params){super(maybeLength);this.stream=stream;this.dict=stream.dict;this.maybeLength=maybeLength;this.params=params}get bytes(){return shadow(this,\"bytes\",this.stream.getBytes(this.maybeLength))}ensureBuffer(requested){}readBlock(decoderOptions){unreachable(\"JpxStream.readBlock\")}get isAsyncDecoder(){return true}async decodeImage(bytes,decoderOptions){if(this.eof){return this.buffer}bytes||=this.bytes;this.buffer=await JpxImage.decode(bytes,decoderOptions);this.bufferLength=this.buffer.length;this.eof=true;return this.buffer}get canAsyncDecodeImageFromBuffer(){return this.stream.isAsync}}class LZWStream extends DecodeStream{constructor(str,maybeLength,earlyChange){super(maybeLength);this.str=str;this.dict=str.dict;this.cachedData=0;this.bitsCached=0;const maxLzwDictionarySize=4096;const lzwState={earlyChange:earlyChange,codeLength:9,nextCode:258,dictionaryValues:new Uint8Array(maxLzwDictionarySize),dictionaryLengths:new Uint16Array(maxLzwDictionarySize),dictionaryPrevCodes:new Uint16Array(maxLzwDictionarySize),currentSequence:new Uint8Array(maxLzwDictionarySize),currentSequenceLength:0};for(let i=0;i<256;++i){lzwState.dictionaryValues[i]=i;lzwState.dictionaryLengths[i]=1}this.lzwState=lzwState}readBits(n){let bitsCached=this.bitsCached;let cachedData=this.cachedData;while(bitsCached<n){const c=this.str.getByte();if(c===-1){this.eof=true;return null}cachedData=cachedData<<8|c;bitsCached+=8}this.bitsCached=bitsCached-=n;this.cachedData=cachedData;this.lastCode=null;return cachedData>>>bitsCached&(1<<n)-1}readBlock(){const blockSize=512,decodedSizeDelta=blockSize;let estimatedDecodedSize=blockSize*2;let i,j,q;const lzwState=this.lzwState;if(!lzwState){return}const earlyChange=lzwState.earlyChange;let nextCode=lzwState.nextCode;const dictionaryValues=lzwState.dictionaryValues;const dictionaryLengths=lzwState.dictionaryLengths;const dictionaryPrevCodes=lzwState.dictionaryPrevCodes;let codeLength=lzwState.codeLength;let prevCode=lzwState.prevCode;const currentSequence=lzwState.currentSequence;let currentSequenceLength=lzwState.currentSequenceLength;let decodedLength=0;let currentBufferLength=this.bufferLength;let buffer=this.ensureBuffer(this.bufferLength+estimatedDecodedSize);for(i=0;i<blockSize;i++){const code=this.readBits(codeLength);const hasPrev=currentSequenceLength>0;if(code<256){currentSequence[0]=code;currentSequenceLength=1}else if(code>=258){if(code<nextCode){currentSequenceLength=dictionaryLengths[code];for(j=currentSequenceLength-1,q=code;j>=0;j--){currentSequence[j]=dictionaryValues[q];q=dictionaryPrevCodes[q]}}else{currentSequence[currentSequenceLength++]=currentSequence[0]}}else if(code===256){codeLength=9;nextCode=258;currentSequenceLength=0;continue}else{this.eof=true;delete this.lzwState;break}if(hasPrev){dictionaryPrevCodes[nextCode]=prevCode;dictionaryLengths[nextCode]=dictionaryLengths[prevCode]+1;dictionaryValues[nextCode]=currentSequence[0];nextCode++;codeLength=nextCode+earlyChange&nextCode+earlyChange-1?codeLength:Math.min(Math.log(nextCode+earlyChange)/.6931471805599453+1,12)|0}prevCode=code;decodedLength+=currentSequenceLength;if(estimatedDecodedSize<decodedLength){do{estimatedDecodedSize+=decodedSizeDelta}while(estimatedDecodedSize<decodedLength);buffer=this.ensureBuffer(this.bufferLength+estimatedDecodedSize)}for(j=0;j<currentSequenceLength;j++){buffer[currentBufferLength++]=currentSequence[j]}}lzwState.nextCode=nextCode;lzwState.codeLength=codeLength;lzwState.prevCode=prevCode;lzwState.currentSequenceLength=currentSequenceLength;this.bufferLength=currentBufferLength}}class PredictorStream extends DecodeStream{constructor(str,maybeLength,params){super(maybeLength);if(!(params instanceof Dict)){return str}const predictor=this.predictor=params.get(\"Predictor\")||1;if(predictor<=1){return str}if(predictor!==2&&(predictor<10||predictor>15)){throw new FormatError(`Unsupported predictor: ${predictor}`)}this.readBlock=predictor===2?this.readBlockTiff:this.readBlockPng;this.str=str;this.dict=str.dict;const colors=this.colors=params.get(\"Colors\")||1;const bits=this.bits=params.get(\"BPC\",\"BitsPerComponent\")||8;const columns=this.columns=params.get(\"Columns\")||1;this.pixBytes=colors*bits+7>>3;this.rowBytes=columns*colors*bits+7>>3;return this}readBlockTiff(){const rowBytes=this.rowBytes;const bufferLength=this.bufferLength;const buffer=this.ensureBuffer(bufferLength+rowBytes);const bits=this.bits;const colors=this.colors;const rawBytes=this.str.getBytes(rowBytes);this.eof=!rawBytes.length;if(this.eof){return}let inbuf=0,outbuf=0;let inbits=0,outbits=0;let pos=bufferLength;let i;if(bits===1&&colors===1){for(i=0;i<rowBytes;++i){let c=rawBytes[i]^inbuf;c^=c>>1;c^=c>>2;c^=c>>4;inbuf=(c&1)<<7;buffer[pos++]=c}}else if(bits===8){for(i=0;i<colors;++i){buffer[pos++]=rawBytes[i]}for(;i<rowBytes;++i){buffer[pos]=buffer[pos-colors]+rawBytes[i];pos++}}else if(bits===16){const bytesPerPixel=colors*2;for(i=0;i<bytesPerPixel;++i){buffer[pos++]=rawBytes[i]}for(;i<rowBytes;i+=2){const sum=((rawBytes[i]&255)<<8)+(rawBytes[i+1]&255)+((buffer[pos-bytesPerPixel]&255)<<8)+(buffer[pos-bytesPerPixel+1]&255);buffer[pos++]=sum>>8&255;buffer[pos++]=sum&255}}else{const compArray=new Uint8Array(colors+1);const bitMask=(1<<bits)-1;let j=0,k=bufferLength;const columns=this.columns;for(i=0;i<columns;++i){for(let kk=0;kk<colors;++kk){if(inbits<bits){inbuf=inbuf<<8|rawBytes[j++]&255;inbits+=8}compArray[kk]=compArray[kk]+(inbuf>>inbits-bits)&bitMask;inbits-=bits;outbuf=outbuf<<bits|compArray[kk];outbits+=bits;if(outbits>=8){buffer[k++]=outbuf>>outbits-8&255;outbits-=8}}}if(outbits>0){buffer[k++]=(outbuf<<8-outbits)+(inbuf&(1<<8-outbits)-1)}}this.bufferLength+=rowBytes}readBlockPng(){const rowBytes=this.rowBytes;const pixBytes=this.pixBytes;const predictor=this.str.getByte();const rawBytes=this.str.getBytes(rowBytes);this.eof=!rawBytes.length;if(this.eof){return}const bufferLength=this.bufferLength;const buffer=this.ensureBuffer(bufferLength+rowBytes);let prevRow=buffer.subarray(bufferLength-rowBytes,bufferLength);if(prevRow.length===0){prevRow=new Uint8Array(rowBytes)}let i,j=bufferLength,up,c;switch(predictor){case 0:for(i=0;i<rowBytes;++i){buffer[j++]=rawBytes[i]}break;case 1:for(i=0;i<pixBytes;++i){buffer[j++]=rawBytes[i]}for(;i<rowBytes;++i){buffer[j]=buffer[j-pixBytes]+rawBytes[i]&255;j++}break;case 2:for(i=0;i<rowBytes;++i){buffer[j++]=prevRow[i]+rawBytes[i]&255}break;case 3:for(i=0;i<pixBytes;++i){buffer[j++]=(prevRow[i]>>1)+rawBytes[i]}for(;i<rowBytes;++i){buffer[j]=(prevRow[i]+buffer[j-pixBytes]>>1)+rawBytes[i]&255;j++}break;case 4:for(i=0;i<pixBytes;++i){up=prevRow[i];c=rawBytes[i];buffer[j++]=up+c}for(;i<rowBytes;++i){up=prevRow[i];const upLeft=prevRow[i-pixBytes];const left=buffer[j-pixBytes];const p=left+up-upLeft;let pa=p-left;if(pa<0){pa=-pa}let pb=p-up;if(pb<0){pb=-pb}let pc=p-upLeft;if(pc<0){pc=-pc}c=rawBytes[i];if(pa<=pb&&pa<=pc){buffer[j++]=left+c}else if(pb<=pc){buffer[j++]=up+c}else{buffer[j++]=upLeft+c}}break;default:throw new FormatError(`Unsupported predictor: ${predictor}`)}this.bufferLength+=rowBytes}}class RunLengthStream extends DecodeStream{constructor(str,maybeLength){super(maybeLength);this.str=str;this.dict=str.dict}readBlock(){const repeatHeader=this.str.getBytes(2);if(!repeatHeader||repeatHeader.length<2||repeatHeader[0]===128){this.eof=true;return}let buffer;let bufferLength=this.bufferLength;let n=repeatHeader[0];if(n<128){buffer=this.ensureBuffer(bufferLength+n+1);buffer[bufferLength++]=repeatHeader[1];if(n>0){const source=this.str.getBytes(n);buffer.set(source,bufferLength);bufferLength+=n}}else{n=257-n;buffer=this.ensureBuffer(bufferLength+n+1);buffer.fill(repeatHeader[1],bufferLength,bufferLength+n);bufferLength+=n}this.bufferLength=bufferLength}}const MAX_LENGTH_TO_CACHE=1e3;function getInlineImageCacheKey(bytes){const strBuf=[],ii=bytes.length;let i=0;while(i<ii-1){strBuf.push(bytes[i++]<<8|bytes[i++])}if(i<ii){strBuf.push(bytes[i])}return ii+\"_\"+String.fromCharCode.apply(null,strBuf)}class Parser{constructor({lexer:lexer,xref:xref,allowStreams:allowStreams=false,recoveryMode:recoveryMode=false}){this.lexer=lexer;this.xref=xref;this.allowStreams=allowStreams;this.recoveryMode=recoveryMode;this.imageCache=Object.create(null);this._imageId=0;this.refill()}refill(){this.buf1=this.lexer.getObj();this.buf2=this.lexer.getObj()}shift(){if(this.buf2 instanceof Cmd&&this.buf2.cmd===\"ID\"){this.buf1=this.buf2;this.buf2=null}else{this.buf1=this.buf2;this.buf2=this.lexer.getObj()}}tryShift(){try{this.shift();return true}catch(e){if(e instanceof MissingDataException){throw e}return false}}getObj(cipherTransform=null){const buf1=this.buf1;this.shift();if(buf1 instanceof Cmd){switch(buf1.cmd){case\"BI\":return this.makeInlineImage(cipherTransform);case\"[\":const array=[];while(!isCmd(this.buf1,\"]\")&&this.buf1!==EOF){array.push(this.getObj(cipherTransform))}if(this.buf1===EOF){if(this.recoveryMode){return array}throw new ParserEOFException(\"End of file inside array.\")}this.shift();return array;case\"<<\":const dict=new Dict(this.xref);while(!isCmd(this.buf1,\">>\")&&this.buf1!==EOF){if(!(this.buf1 instanceof Name)){info(\"Malformed dictionary: key must be a name object\");this.shift();continue}const key=this.buf1.name;this.shift();if(this.buf1===EOF){break}dict.set(key,this.getObj(cipherTransform))}if(this.buf1===EOF){if(this.recoveryMode){return dict}throw new ParserEOFException(\"End of file inside dictionary.\")}if(isCmd(this.buf2,\"stream\")){return this.allowStreams?this.makeStream(dict,cipherTransform):dict}this.shift();return dict;default:return buf1}}if(Number.isInteger(buf1)){if(Number.isInteger(this.buf1)&&isCmd(this.buf2,\"R\")){const ref=Ref.get(buf1,this.buf1);this.shift();this.shift();return ref}return buf1}if(typeof buf1===\"string\"){if(cipherTransform){return cipherTransform.decryptString(buf1)}return buf1}return buf1}findDefaultInlineStreamEnd(stream){const E=69,I=73,SPACE=32,LF=10,CR=13,NUL=0;const{knownCommands:knownCommands}=this.lexer,startPos=stream.pos,n=15;let state=0,ch,maybeEIPos;while((ch=stream.getByte())!==-1){if(state===0){state=ch===E?1:0}else if(state===1){state=ch===I?2:0}else{if(ch===SPACE||ch===LF||ch===CR){maybeEIPos=stream.pos;const followingBytes=stream.peekBytes(n);const ii=followingBytes.length;if(ii===0){break}for(let i=0;i<ii;i++){ch=followingBytes[i];if(ch===NUL&&followingBytes[i+1]!==NUL){continue}if(ch!==LF&&ch!==CR&&(ch<SPACE||ch>127)){state=0;break}}if(state!==2){continue}if(!knownCommands){warn(\"findDefaultInlineStreamEnd - `lexer.knownCommands` is undefined.\");continue}const tmpLexer=new Lexer(new Stream(stream.peekBytes(5*n)),knownCommands);tmpLexer._hexStringWarn=()=>{};let numArgs=0;while(true){const nextObj=tmpLexer.getObj();if(nextObj===EOF){state=0;break}if(nextObj instanceof Cmd){const knownCommand=knownCommands[nextObj.cmd];if(!knownCommand){state=0;break}else if(knownCommand.variableArgs?numArgs<=knownCommand.numArgs:numArgs===knownCommand.numArgs){break}numArgs=0;continue}numArgs++}if(state===2){break}}else{state=0}}}if(ch===-1){warn(\"findDefaultInlineStreamEnd: \"+\"Reached the end of the stream without finding a valid EI marker\");if(maybeEIPos){warn('... trying to recover by using the last \"EI\" occurrence.');stream.skip(-(stream.pos-maybeEIPos))}}let endOffset=4;stream.skip(-endOffset);ch=stream.peekByte();stream.skip(endOffset);if(!isWhiteSpace(ch)){endOffset--}return stream.pos-endOffset-startPos}findDCTDecodeInlineStreamEnd(stream){const startPos=stream.pos;let foundEOI=false,b,markerLength;while((b=stream.getByte())!==-1){if(b!==255){continue}switch(stream.getByte()){case 0:break;case 255:stream.skip(-1);break;case 217:foundEOI=true;break;case 192:case 193:case 194:case 195:case 197:case 198:case 199:case 201:case 202:case 203:case 205:case 206:case 207:case 196:case 204:case 218:case 219:case 220:case 221:case 222:case 223:case 224:case 225:case 226:case 227:case 228:case 229:case 230:case 231:case 232:case 233:case 234:case 235:case 236:case 237:case 238:case 239:case 254:markerLength=stream.getUint16();if(markerLength>2){stream.skip(markerLength-2)}else{stream.skip(-2)}break}if(foundEOI){break}}const length=stream.pos-startPos;if(b===-1){warn(\"Inline DCTDecode image stream: \"+\"EOI marker not found, searching for /EI/ instead.\");stream.skip(-length);return this.findDefaultInlineStreamEnd(stream)}this.inlineStreamSkipEI(stream);return length}findASCII85DecodeInlineStreamEnd(stream){const TILDE=126,GT=62;const startPos=stream.pos;let ch;while((ch=stream.getByte())!==-1){if(ch===TILDE){const tildePos=stream.pos;ch=stream.peekByte();while(isWhiteSpace(ch)){stream.skip();ch=stream.peekByte()}if(ch===GT){stream.skip();break}if(stream.pos>tildePos){const maybeEI=stream.peekBytes(2);if(maybeEI[0]===69&&maybeEI[1]===73){break}}}}const length=stream.pos-startPos;if(ch===-1){warn(\"Inline ASCII85Decode image stream: \"+\"EOD marker not found, searching for /EI/ instead.\");stream.skip(-length);return this.findDefaultInlineStreamEnd(stream)}this.inlineStreamSkipEI(stream);return length}findASCIIHexDecodeInlineStreamEnd(stream){const GT=62;const startPos=stream.pos;let ch;while((ch=stream.getByte())!==-1){if(ch===GT){break}}const length=stream.pos-startPos;if(ch===-1){warn(\"Inline ASCIIHexDecode image stream: \"+\"EOD marker not found, searching for /EI/ instead.\");stream.skip(-length);return this.findDefaultInlineStreamEnd(stream)}this.inlineStreamSkipEI(stream);return length}inlineStreamSkipEI(stream){const E=69,I=73;let state=0,ch;while((ch=stream.getByte())!==-1){if(state===0){state=ch===E?1:0}else if(state===1){state=ch===I?2:0}else if(state===2){break}}}makeInlineImage(cipherTransform){const lexer=this.lexer;const stream=lexer.stream;const dictMap=Object.create(null);let dictLength;while(!isCmd(this.buf1,\"ID\")&&this.buf1!==EOF){if(!(this.buf1 instanceof Name)){throw new FormatError(\"Dictionary key must be a name object\")}const key=this.buf1.name;this.shift();if(this.buf1===EOF){break}dictMap[key]=this.getObj(cipherTransform)}if(lexer.beginInlineImagePos!==-1){dictLength=stream.pos-lexer.beginInlineImagePos}const filter=this.xref.fetchIfRef(dictMap.F||dictMap.Filter);let filterName;if(filter instanceof Name){filterName=filter.name}else if(Array.isArray(filter)){const filterZero=this.xref.fetchIfRef(filter[0]);if(filterZero instanceof Name){filterName=filterZero.name}}const startPos=stream.pos;let length;switch(filterName){case\"DCT\":case\"DCTDecode\":length=this.findDCTDecodeInlineStreamEnd(stream);break;case\"A85\":case\"ASCII85Decode\":length=this.findASCII85DecodeInlineStreamEnd(stream);break;case\"AHx\":case\"ASCIIHexDecode\":length=this.findASCIIHexDecodeInlineStreamEnd(stream);break;default:length=this.findDefaultInlineStreamEnd(stream)}let cacheKey;if(length<MAX_LENGTH_TO_CACHE&&dictLength>0){const initialStreamPos=stream.pos;stream.pos=lexer.beginInlineImagePos;cacheKey=getInlineImageCacheKey(stream.getBytes(dictLength+length));stream.pos=initialStreamPos;const cacheEntry=this.imageCache[cacheKey];if(cacheEntry!==undefined){this.buf2=Cmd.get(\"EI\");this.shift();cacheEntry.reset();return cacheEntry}}const dict=new Dict(this.xref);for(const key in dictMap){dict.set(key,dictMap[key])}let imageStream=stream.makeSubStream(startPos,length,dict);if(cipherTransform){imageStream=cipherTransform.createStream(imageStream,length)}imageStream=this.filter(imageStream,dict,length);imageStream.dict=dict;if(cacheKey!==undefined){imageStream.cacheKey=`inline_img_${++this._imageId}`;this.imageCache[cacheKey]=imageStream}this.buf2=Cmd.get(\"EI\");this.shift();return imageStream}#findStreamLength(startPos){const{stream:stream}=this.lexer;stream.pos=startPos;const SCAN_BLOCK_LENGTH=2048;const signatureLength=\"endstream\".length;const END_SIGNATURE=new Uint8Array([101,110,100]);const endLength=END_SIGNATURE.length;const PARTIAL_SIGNATURE=[new Uint8Array([115,116,114,101,97,109]),new Uint8Array([115,116,101,97,109]),new Uint8Array([115,116,114,101,97])];const normalLength=signatureLength-endLength;while(stream.pos<stream.end){const scanBytes=stream.peekBytes(SCAN_BLOCK_LENGTH);const scanLength=scanBytes.length-signatureLength;if(scanLength<=0){break}let pos=0;while(pos<scanLength){let j=0;while(j<endLength&&scanBytes[pos+j]===END_SIGNATURE[j]){j++}if(j>=endLength){let found=false;for(const part of PARTIAL_SIGNATURE){const partLen=part.length;let k=0;while(k<partLen&&scanBytes[pos+j+k]===part[k]){k++}if(k>=normalLength){found=true;break}if(k>=partLen){const lastByte=scanBytes[pos+j+k];if(isWhiteSpace(lastByte)){info(`Found \"${bytesToString([...END_SIGNATURE,...part])}\" when `+\"searching for endstream command.\");found=true}break}}if(found){stream.pos+=pos;return stream.pos-startPos}}pos++}stream.pos+=scanLength}return-1}makeStream(dict,cipherTransform){const lexer=this.lexer;let stream=lexer.stream;lexer.skipToNextLine();const startPos=stream.pos-1;let length=dict.get(\"Length\");if(!Number.isInteger(length)){info(`Bad length \"${length&&length.toString()}\" in stream.`);length=0}stream.pos=startPos+length;lexer.nextChar();if(this.tryShift()&&isCmd(this.buf2,\"endstream\")){this.shift()}else{length=this.#findStreamLength(startPos);if(length<0){throw new FormatError(\"Missing endstream command.\")}lexer.nextChar();this.shift();this.shift()}this.shift();stream=stream.makeSubStream(startPos,length,dict);if(cipherTransform){stream=cipherTransform.createStream(stream,length)}stream=this.filter(stream,dict,length);stream.dict=dict;return stream}filter(stream,dict,length){let filter=dict.get(\"F\",\"Filter\");let params=dict.get(\"DP\",\"DecodeParms\");if(filter instanceof Name){if(Array.isArray(params)){warn(\"/DecodeParms should not be an Array, when /Filter is a Name.\")}return this.makeFilter(stream,filter.name,length,params)}let maybeLength=length;if(Array.isArray(filter)){const filterArray=filter;const paramsArray=params;for(let i=0,ii=filterArray.length;i<ii;++i){filter=this.xref.fetchIfRef(filterArray[i]);if(!(filter instanceof Name)){throw new FormatError(`Bad filter name \"${filter}\"`)}params=null;if(Array.isArray(paramsArray)&&i in paramsArray){params=this.xref.fetchIfRef(paramsArray[i])}stream=this.makeFilter(stream,filter.name,maybeLength,params);maybeLength=null}}return stream}makeFilter(stream,name,maybeLength,params){if(maybeLength===0){warn(`Empty \"${name}\" stream.`);return new NullStream}try{switch(name){case\"Fl\":case\"FlateDecode\":if(params){return new PredictorStream(new FlateStream(stream,maybeLength),maybeLength,params)}return new FlateStream(stream,maybeLength);case\"LZW\":case\"LZWDecode\":let earlyChange=1;if(params){if(params.has(\"EarlyChange\")){earlyChange=params.get(\"EarlyChange\")}return new PredictorStream(new LZWStream(stream,maybeLength,earlyChange),maybeLength,params)}return new LZWStream(stream,maybeLength,earlyChange);case\"DCT\":case\"DCTDecode\":return new JpegStream(stream,maybeLength,params);case\"JPX\":case\"JPXDecode\":return new JpxStream(stream,maybeLength,params);case\"A85\":case\"ASCII85Decode\":return new Ascii85Stream(stream,maybeLength);case\"AHx\":case\"ASCIIHexDecode\":return new AsciiHexStream(stream,maybeLength);case\"CCF\":case\"CCITTFaxDecode\":return new CCITTFaxStream(stream,maybeLength,params);case\"RL\":case\"RunLengthDecode\":return new RunLengthStream(stream,maybeLength);case\"JBIG2Decode\":return new Jbig2Stream(stream,maybeLength,params)}warn(`Filter \"${name}\" is not supported.`);return stream}catch(ex){if(ex instanceof MissingDataException){throw ex}warn(`Invalid stream: \"${ex}\"`);return new NullStream}}}const specialChars=[1,0,0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2,0,0,2,2,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];function toHexDigit(ch){if(ch>=48&&ch<=57){return ch&15}if(ch>=65&&ch<=70||ch>=97&&ch<=102){return(ch&15)+9}return-1}class Lexer{constructor(stream,knownCommands=null){this.stream=stream;this.nextChar();this.strBuf=[];this.knownCommands=knownCommands;this._hexStringNumWarn=0;this.beginInlineImagePos=-1}nextChar(){return this.currentChar=this.stream.getByte()}peekChar(){return this.stream.peekByte()}getNumber(){let ch=this.currentChar;let eNotation=false;let divideBy=0;let sign=1;if(ch===45){sign=-1;ch=this.nextChar();if(ch===45){ch=this.nextChar()}}else if(ch===43){ch=this.nextChar()}if(ch===10||ch===13){do{ch=this.nextChar()}while(ch===10||ch===13)}if(ch===46){divideBy=10;ch=this.nextChar()}if(ch<48||ch>57){const msg=`Invalid number: ${String.fromCharCode(ch)} (charCode ${ch})`;if(isWhiteSpace(ch)||ch===40||ch===60||ch===-1){info(`Lexer.getNumber - \"${msg}\".`);return 0}throw new FormatError(msg)}let baseValue=ch-48;let powerValue=0;let powerValueSign=1;while((ch=this.nextChar())>=0){if(ch>=48&&ch<=57){const currentDigit=ch-48;if(eNotation){powerValue=powerValue*10+currentDigit}else{if(divideBy!==0){divideBy*=10}baseValue=baseValue*10+currentDigit}}else if(ch===46){if(divideBy===0){divideBy=1}else{break}}else if(ch===45){warn(\"Badly formatted number: minus sign in the middle\")}else if(ch===69||ch===101){ch=this.peekChar();if(ch===43||ch===45){powerValueSign=ch===45?-1:1;this.nextChar()}else if(ch<48||ch>57){break}eNotation=true}else{break}}if(divideBy!==0){baseValue/=divideBy}if(eNotation){baseValue*=10**(powerValueSign*powerValue)}return sign*baseValue}getString(){let numParen=1;let done=false;const strBuf=this.strBuf;strBuf.length=0;let ch=this.nextChar();while(true){let charBuffered=false;switch(ch|0){case-1:warn(\"Unterminated string\");done=true;break;case 40:++numParen;strBuf.push(\"(\");break;case 41:if(--numParen===0){this.nextChar();done=true}else{strBuf.push(\")\")}break;case 92:ch=this.nextChar();switch(ch){case-1:warn(\"Unterminated string\");done=true;break;case 110:strBuf.push(\"\\n\");break;case 114:strBuf.push(\"\\r\");break;case 116:strBuf.push(\"\\t\");break;case 98:strBuf.push(\"\\b\");break;case 102:strBuf.push(\"\\f\");break;case 92:case 40:case 41:strBuf.push(String.fromCharCode(ch));break;case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:let x=ch&15;ch=this.nextChar();charBuffered=true;if(ch>=48&&ch<=55){x=(x<<3)+(ch&15);ch=this.nextChar();if(ch>=48&&ch<=55){charBuffered=false;x=(x<<3)+(ch&15)}}strBuf.push(String.fromCharCode(x));break;case 13:if(this.peekChar()===10){this.nextChar()}break;case 10:break;default:strBuf.push(String.fromCharCode(ch));break}break;default:strBuf.push(String.fromCharCode(ch));break}if(done){break}if(!charBuffered){ch=this.nextChar()}}return strBuf.join(\"\")}getName(){let ch,previousCh;const strBuf=this.strBuf;strBuf.length=0;while((ch=this.nextChar())>=0&&!specialChars[ch]){if(ch===35){ch=this.nextChar();if(specialChars[ch]){warn(\"Lexer_getName: \"+\"NUMBER SIGN (#) should be followed by a hexadecimal number.\");strBuf.push(\"#\");break}const x=toHexDigit(ch);if(x!==-1){previousCh=ch;ch=this.nextChar();const x2=toHexDigit(ch);if(x2===-1){warn(`Lexer_getName: Illegal digit (${String.fromCharCode(ch)}) `+\"in hexadecimal number.\");strBuf.push(\"#\",String.fromCharCode(previousCh));if(specialChars[ch]){break}strBuf.push(String.fromCharCode(ch));continue}strBuf.push(String.fromCharCode(x<<4|x2))}else{strBuf.push(\"#\",String.fromCharCode(ch))}}else{strBuf.push(String.fromCharCode(ch))}}if(strBuf.length>127){warn(`Name token is longer than allowed by the spec: ${strBuf.length}`)}return Name.get(strBuf.join(\"\"))}_hexStringWarn(ch){const MAX_HEX_STRING_NUM_WARN=5;if(this._hexStringNumWarn++===MAX_HEX_STRING_NUM_WARN){warn(\"getHexString - ignoring additional invalid characters.\");return}if(this._hexStringNumWarn>MAX_HEX_STRING_NUM_WARN){return}warn(`getHexString - ignoring invalid character: ${ch}`)}getHexString(){const strBuf=this.strBuf;strBuf.length=0;let ch=this.currentChar;let firstDigit=-1,digit=-1;this._hexStringNumWarn=0;while(true){if(ch<0){warn(\"Unterminated hex string\");break}else if(ch===62){this.nextChar();break}else if(specialChars[ch]===1){ch=this.nextChar();continue}else{digit=toHexDigit(ch);if(digit===-1){this._hexStringWarn(ch)}else if(firstDigit===-1){firstDigit=digit}else{strBuf.push(String.fromCharCode(firstDigit<<4|digit));firstDigit=-1}ch=this.nextChar()}}if(firstDigit!==-1){strBuf.push(String.fromCharCode(firstDigit<<4))}return strBuf.join(\"\")}getObj(){let comment=false;let ch=this.currentChar;while(true){if(ch<0){return EOF}if(comment){if(ch===10||ch===13){comment=false}}else if(ch===37){comment=true}else if(specialChars[ch]!==1){break}ch=this.nextChar()}switch(ch|0){case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:case 43:case 45:case 46:return this.getNumber();case 40:return this.getString();case 47:return this.getName();case 91:this.nextChar();return Cmd.get(\"[\");case 93:this.nextChar();return Cmd.get(\"]\");case 60:ch=this.nextChar();if(ch===60){this.nextChar();return Cmd.get(\"<<\")}return this.getHexString();case 62:ch=this.nextChar();if(ch===62){this.nextChar();return Cmd.get(\">>\")}return Cmd.get(\">\");case 123:this.nextChar();return Cmd.get(\"{\");case 125:this.nextChar();return Cmd.get(\"}\");case 41:this.nextChar();throw new FormatError(`Illegal character: ${ch}`)}let str=String.fromCharCode(ch);if(ch<32||ch>127){const nextCh=this.peekChar();if(nextCh>=32&&nextCh<=127){this.nextChar();return Cmd.get(str)}}const knownCommands=this.knownCommands;let knownCommandFound=knownCommands?.[str]!==undefined;while((ch=this.nextChar())>=0&&!specialChars[ch]){const possibleCommand=str+String.fromCharCode(ch);if(knownCommandFound&&knownCommands[possibleCommand]===undefined){break}if(str.length===128){throw new FormatError(`Command token too long: ${str.length}`)}str=possibleCommand;knownCommandFound=knownCommands?.[str]!==undefined}if(str===\"true\"){return true}if(str===\"false\"){return false}if(str===\"null\"){return null}if(str===\"BI\"){this.beginInlineImagePos=this.stream.pos}return Cmd.get(str)}skipToNextLine(){let ch=this.currentChar;while(ch>=0){if(ch===13){ch=this.nextChar();if(ch===10){this.nextChar()}break}else if(ch===10){this.nextChar();break}ch=this.nextChar()}}}class Linearization{static create(stream){function getInt(linDict,name,allowZeroValue=false){const obj=linDict.get(name);if(Number.isInteger(obj)&&(allowZeroValue?obj>=0:obj>0)){return obj}throw new Error(`The \"${name}\" parameter in the linearization `+\"dictionary is invalid.\")}function getHints(linDict){const hints=linDict.get(\"H\");let hintsLength;if(Array.isArray(hints)&&((hintsLength=hints.length)===2||hintsLength===4)){for(let index=0;index<hintsLength;index++){const hint=hints[index];if(!(Number.isInteger(hint)&&hint>0)){throw new Error(`Hint (${index}) in the linearization dictionary is invalid.`)}}return hints}throw new Error(\"Hint array in the linearization dictionary is invalid.\")}const parser=new Parser({lexer:new Lexer(stream),xref:null});const obj1=parser.getObj();const obj2=parser.getObj();const obj3=parser.getObj();const linDict=parser.getObj();let obj,length;if(!(Number.isInteger(obj1)&&Number.isInteger(obj2)&&isCmd(obj3,\"obj\")&&linDict instanceof Dict&&typeof(obj=linDict.get(\"Linearized\"))===\"number\"&&obj>0)){return null}else if((length=getInt(linDict,\"L\"))!==stream.length){throw new Error('The \"L\" parameter in the linearization dictionary '+\"does not equal the stream length.\")}return{length:length,hints:getHints(linDict),objectNumberFirst:getInt(linDict,\"O\"),endFirst:getInt(linDict,\"E\"),numPages:getInt(linDict,\"N\"),mainXRefEntriesOffset:getInt(linDict,\"T\"),pageFirst:linDict.has(\"P\")?getInt(linDict,\"P\",true):0}}}const BUILT_IN_CMAPS=[\"Adobe-GB1-UCS2\",\"Adobe-CNS1-UCS2\",\"Adobe-Japan1-UCS2\",\"Adobe-Korea1-UCS2\",\"78-EUC-H\",\"78-EUC-V\",\"78-H\",\"78-RKSJ-H\",\"78-RKSJ-V\",\"78-V\",\"78ms-RKSJ-H\",\"78ms-RKSJ-V\",\"83pv-RKSJ-H\",\"90ms-RKSJ-H\",\"90ms-RKSJ-V\",\"90msp-RKSJ-H\",\"90msp-RKSJ-V\",\"90pv-RKSJ-H\",\"90pv-RKSJ-V\",\"Add-H\",\"Add-RKSJ-H\",\"Add-RKSJ-V\",\"Add-V\",\"Adobe-CNS1-0\",\"Adobe-CNS1-1\",\"Adobe-CNS1-2\",\"Adobe-CNS1-3\",\"Adobe-CNS1-4\",\"Adobe-CNS1-5\",\"Adobe-CNS1-6\",\"Adobe-GB1-0\",\"Adobe-GB1-1\",\"Adobe-GB1-2\",\"Adobe-GB1-3\",\"Adobe-GB1-4\",\"Adobe-GB1-5\",\"Adobe-Japan1-0\",\"Adobe-Japan1-1\",\"Adobe-Japan1-2\",\"Adobe-Japan1-3\",\"Adobe-Japan1-4\",\"Adobe-Japan1-5\",\"Adobe-Japan1-6\",\"Adobe-Korea1-0\",\"Adobe-Korea1-1\",\"Adobe-Korea1-2\",\"B5-H\",\"B5-V\",\"B5pc-H\",\"B5pc-V\",\"CNS-EUC-H\",\"CNS-EUC-V\",\"CNS1-H\",\"CNS1-V\",\"CNS2-H\",\"CNS2-V\",\"ETHK-B5-H\",\"ETHK-B5-V\",\"ETen-B5-H\",\"ETen-B5-V\",\"ETenms-B5-H\",\"ETenms-B5-V\",\"EUC-H\",\"EUC-V\",\"Ext-H\",\"Ext-RKSJ-H\",\"Ext-RKSJ-V\",\"Ext-V\",\"GB-EUC-H\",\"GB-EUC-V\",\"GB-H\",\"GB-V\",\"GBK-EUC-H\",\"GBK-EUC-V\",\"GBK2K-H\",\"GBK2K-V\",\"GBKp-EUC-H\",\"GBKp-EUC-V\",\"GBT-EUC-H\",\"GBT-EUC-V\",\"GBT-H\",\"GBT-V\",\"GBTpc-EUC-H\",\"GBTpc-EUC-V\",\"GBpc-EUC-H\",\"GBpc-EUC-V\",\"H\",\"HKdla-B5-H\",\"HKdla-B5-V\",\"HKdlb-B5-H\",\"HKdlb-B5-V\",\"HKgccs-B5-H\",\"HKgccs-B5-V\",\"HKm314-B5-H\",\"HKm314-B5-V\",\"HKm471-B5-H\",\"HKm471-B5-V\",\"HKscs-B5-H\",\"HKscs-B5-V\",\"Hankaku\",\"Hiragana\",\"KSC-EUC-H\",\"KSC-EUC-V\",\"KSC-H\",\"KSC-Johab-H\",\"KSC-Johab-V\",\"KSC-V\",\"KSCms-UHC-H\",\"KSCms-UHC-HW-H\",\"KSCms-UHC-HW-V\",\"KSCms-UHC-V\",\"KSCpc-EUC-H\",\"KSCpc-EUC-V\",\"Katakana\",\"NWP-H\",\"NWP-V\",\"RKSJ-H\",\"RKSJ-V\",\"Roman\",\"UniCNS-UCS2-H\",\"UniCNS-UCS2-V\",\"UniCNS-UTF16-H\",\"UniCNS-UTF16-V\",\"UniCNS-UTF32-H\",\"UniCNS-UTF32-V\",\"UniCNS-UTF8-H\",\"UniCNS-UTF8-V\",\"UniGB-UCS2-H\",\"UniGB-UCS2-V\",\"UniGB-UTF16-H\",\"UniGB-UTF16-V\",\"UniGB-UTF32-H\",\"UniGB-UTF32-V\",\"UniGB-UTF8-H\",\"UniGB-UTF8-V\",\"UniJIS-UCS2-H\",\"UniJIS-UCS2-HW-H\",\"UniJIS-UCS2-HW-V\",\"UniJIS-UCS2-V\",\"UniJIS-UTF16-H\",\"UniJIS-UTF16-V\",\"UniJIS-UTF32-H\",\"UniJIS-UTF32-V\",\"UniJIS-UTF8-H\",\"UniJIS-UTF8-V\",\"UniJIS2004-UTF16-H\",\"UniJIS2004-UTF16-V\",\"UniJIS2004-UTF32-H\",\"UniJIS2004-UTF32-V\",\"UniJIS2004-UTF8-H\",\"UniJIS2004-UTF8-V\",\"UniJISPro-UCS2-HW-V\",\"UniJISPro-UCS2-V\",\"UniJISPro-UTF8-V\",\"UniJISX0213-UTF32-H\",\"UniJISX0213-UTF32-V\",\"UniJISX02132004-UTF32-H\",\"UniJISX02132004-UTF32-V\",\"UniKS-UCS2-H\",\"UniKS-UCS2-V\",\"UniKS-UTF16-H\",\"UniKS-UTF16-V\",\"UniKS-UTF32-H\",\"UniKS-UTF32-V\",\"UniKS-UTF8-H\",\"UniKS-UTF8-V\",\"V\",\"WP-Symbol\"];const MAX_MAP_RANGE=2**24-1;class CMap{constructor(builtInCMap=false){this.codespaceRanges=[[],[],[],[]];this.numCodespaceRanges=0;this._map=[];this.name=\"\";this.vertical=false;this.useCMap=null;this.builtInCMap=builtInCMap}addCodespaceRange(n,low,high){this.codespaceRanges[n-1].push(low,high);this.numCodespaceRanges++}mapCidRange(low,high,dstLow){if(high-low>MAX_MAP_RANGE){throw new Error(\"mapCidRange - ignoring data above MAX_MAP_RANGE.\")}while(low<=high){this._map[low++]=dstLow++}}mapBfRange(low,high,dstLow){if(high-low>MAX_MAP_RANGE){throw new Error(\"mapBfRange - ignoring data above MAX_MAP_RANGE.\")}const lastByte=dstLow.length-1;while(low<=high){this._map[low++]=dstLow;const nextCharCode=dstLow.charCodeAt(lastByte)+1;if(nextCharCode>255){dstLow=dstLow.substring(0,lastByte-1)+String.fromCharCode(dstLow.charCodeAt(lastByte-1)+1)+\"\\0\";continue}dstLow=dstLow.substring(0,lastByte)+String.fromCharCode(nextCharCode)}}mapBfRangeToArray(low,high,array){if(high-low>MAX_MAP_RANGE){throw new Error(\"mapBfRangeToArray - ignoring data above MAX_MAP_RANGE.\")}const ii=array.length;let i=0;while(low<=high&&i<ii){this._map[low]=array[i++];++low}}mapOne(src,dst){this._map[src]=dst}lookup(code){return this._map[code]}contains(code){return this._map[code]!==undefined}forEach(callback){const map=this._map;const length=map.length;if(length<=65536){for(let i=0;i<length;i++){if(map[i]!==undefined){callback(i,map[i])}}}else{for(const i in map){callback(i,map[i])}}}charCodeOf(value){const map=this._map;if(map.length<=65536){return map.indexOf(value)}for(const charCode in map){if(map[charCode]===value){return charCode|0}}return-1}getMap(){return this._map}readCharCode(str,offset,out){let c=0;const codespaceRanges=this.codespaceRanges;for(let n=0,nn=codespaceRanges.length;n<nn;n++){c=(c<<8|str.charCodeAt(offset+n))>>>0;const codespaceRange=codespaceRanges[n];for(let k=0,kk=codespaceRange.length;k<kk;){const low=codespaceRange[k++];const high=codespaceRange[k++];if(c>=low&&c<=high){out.charcode=c;out.length=n+1;return}}}out.charcode=0;out.length=1}getCharCodeLength(charCode){const codespaceRanges=this.codespaceRanges;for(let n=0,nn=codespaceRanges.length;n<nn;n++){const codespaceRange=codespaceRanges[n];for(let k=0,kk=codespaceRange.length;k<kk;){const low=codespaceRange[k++];const high=codespaceRange[k++];if(charCode>=low&&charCode<=high){return n+1}}}return 1}get length(){return this._map.length}get isIdentityCMap(){if(!(this.name===\"Identity-H\"||this.name===\"Identity-V\")){return false}if(this._map.length!==65536){return false}for(let i=0;i<65536;i++){if(this._map[i]!==i){return false}}return true}}class IdentityCMap extends CMap{constructor(vertical,n){super();this.vertical=vertical;this.addCodespaceRange(n,0,65535)}mapCidRange(low,high,dstLow){unreachable(\"should not call mapCidRange\")}mapBfRange(low,high,dstLow){unreachable(\"should not call mapBfRange\")}mapBfRangeToArray(low,high,array){unreachable(\"should not call mapBfRangeToArray\")}mapOne(src,dst){unreachable(\"should not call mapCidOne\")}lookup(code){return Number.isInteger(code)&&code<=65535?code:undefined}contains(code){return Number.isInteger(code)&&code<=65535}forEach(callback){for(let i=0;i<=65535;i++){callback(i,i)}}charCodeOf(value){return Number.isInteger(value)&&value<=65535?value:-1}getMap(){const map=new Array(65536);for(let i=0;i<=65535;i++){map[i]=i}return map}get length(){return 65536}get isIdentityCMap(){unreachable(\"should not access .isIdentityCMap\")}}function strToInt(str){let a=0;for(let i=0;i<str.length;i++){a=a<<8|str.charCodeAt(i)}return a>>>0}function expectString(obj){if(typeof obj!==\"string\"){throw new FormatError(\"Malformed CMap: expected string.\")}}function expectInt(obj){if(!Number.isInteger(obj)){throw new FormatError(\"Malformed CMap: expected int.\")}}function parseBfChar(cMap,lexer){while(true){let obj=lexer.getObj();if(obj===EOF){break}if(isCmd(obj,\"endbfchar\")){return}expectString(obj);const src=strToInt(obj);obj=lexer.getObj();expectString(obj);const dst=obj;cMap.mapOne(src,dst)}}function parseBfRange(cMap,lexer){while(true){let obj=lexer.getObj();if(obj===EOF){break}if(isCmd(obj,\"endbfrange\")){return}expectString(obj);const low=strToInt(obj);obj=lexer.getObj();expectString(obj);const high=strToInt(obj);obj=lexer.getObj();if(Number.isInteger(obj)||typeof obj===\"string\"){const dstLow=Number.isInteger(obj)?String.fromCharCode(obj):obj;cMap.mapBfRange(low,high,dstLow)}else if(isCmd(obj,\"[\")){obj=lexer.getObj();const array=[];while(!isCmd(obj,\"]\")&&obj!==EOF){array.push(obj);obj=lexer.getObj()}cMap.mapBfRangeToArray(low,high,array)}else{break}}throw new FormatError(\"Invalid bf range.\")}function parseCidChar(cMap,lexer){while(true){let obj=lexer.getObj();if(obj===EOF){break}if(isCmd(obj,\"endcidchar\")){return}expectString(obj);const src=strToInt(obj);obj=lexer.getObj();expectInt(obj);const dst=obj;cMap.mapOne(src,dst)}}function parseCidRange(cMap,lexer){while(true){let obj=lexer.getObj();if(obj===EOF){break}if(isCmd(obj,\"endcidrange\")){return}expectString(obj);const low=strToInt(obj);obj=lexer.getObj();expectString(obj);const high=strToInt(obj);obj=lexer.getObj();expectInt(obj);const dstLow=obj;cMap.mapCidRange(low,high,dstLow)}}function parseCodespaceRange(cMap,lexer){while(true){let obj=lexer.getObj();if(obj===EOF){break}if(isCmd(obj,\"endcodespacerange\")){return}if(typeof obj!==\"string\"){break}const low=strToInt(obj);obj=lexer.getObj();if(typeof obj!==\"string\"){break}const high=strToInt(obj);cMap.addCodespaceRange(obj.length,low,high)}throw new FormatError(\"Invalid codespace range.\")}function parseWMode(cMap,lexer){const obj=lexer.getObj();if(Number.isInteger(obj)){cMap.vertical=!!obj}}function parseCMapName(cMap,lexer){const obj=lexer.getObj();if(obj instanceof Name){cMap.name=obj.name}}async function parseCMap(cMap,lexer,fetchBuiltInCMap,useCMap){let previous,embeddedUseCMap;objLoop:while(true){try{const obj=lexer.getObj();if(obj===EOF){break}else if(obj instanceof Name){if(obj.name===\"WMode\"){parseWMode(cMap,lexer)}else if(obj.name===\"CMapName\"){parseCMapName(cMap,lexer)}previous=obj}else if(obj instanceof Cmd){switch(obj.cmd){case\"endcmap\":break objLoop;case\"usecmap\":if(previous instanceof Name){embeddedUseCMap=previous.name}break;case\"begincodespacerange\":parseCodespaceRange(cMap,lexer);break;case\"beginbfchar\":parseBfChar(cMap,lexer);break;case\"begincidchar\":parseCidChar(cMap,lexer);break;case\"beginbfrange\":parseBfRange(cMap,lexer);break;case\"begincidrange\":parseCidRange(cMap,lexer);break}}}catch(ex){if(ex instanceof MissingDataException){throw ex}warn(\"Invalid cMap data: \"+ex);continue}}if(!useCMap&&embeddedUseCMap){useCMap=embeddedUseCMap}if(useCMap){return extendCMap(cMap,fetchBuiltInCMap,useCMap)}return cMap}async function extendCMap(cMap,fetchBuiltInCMap,useCMap){cMap.useCMap=await createBuiltInCMap(useCMap,fetchBuiltInCMap);if(cMap.numCodespaceRanges===0){const useCodespaceRanges=cMap.useCMap.codespaceRanges;for(let i=0;i<useCodespaceRanges.length;i++){cMap.codespaceRanges[i]=useCodespaceRanges[i].slice()}cMap.numCodespaceRanges=cMap.useCMap.numCodespaceRanges}cMap.useCMap.forEach((function(key,value){if(!cMap.contains(key)){cMap.mapOne(key,value)}}));return cMap}async function createBuiltInCMap(name,fetchBuiltInCMap){if(name===\"Identity-H\"){return new IdentityCMap(false,2)}else if(name===\"Identity-V\"){return new IdentityCMap(true,2)}if(!BUILT_IN_CMAPS.includes(name)){throw new Error(\"Unknown CMap name: \"+name)}if(!fetchBuiltInCMap){throw new Error(\"Built-in CMap parameters are not provided.\")}const{cMapData:cMapData,isCompressed:isCompressed}=await fetchBuiltInCMap(name);const cMap=new CMap(true);if(isCompressed){return(new BinaryCMapReader).process(cMapData,cMap,(useCMap=>extendCMap(cMap,fetchBuiltInCMap,useCMap)))}const lexer=new Lexer(new Stream(cMapData));return parseCMap(cMap,lexer,fetchBuiltInCMap,null)}class CMapFactory{static async create({encoding:encoding,fetchBuiltInCMap:fetchBuiltInCMap,useCMap:useCMap}){if(encoding instanceof Name){return createBuiltInCMap(encoding.name,fetchBuiltInCMap)}else if(encoding instanceof BaseStream){const parsedCMap=await parseCMap(new CMap,new Lexer(encoding),fetchBuiltInCMap,useCMap);if(parsedCMap.isIdentityCMap){return createBuiltInCMap(parsedCMap.name,fetchBuiltInCMap)}return parsedCMap}throw new Error(\"Encoding required.\")}}const ExpertEncoding=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclamsmall\",\"Hungarumlautsmall\",\"\",\"dollaroldstyle\",\"dollarsuperior\",\"ampersandsmall\",\"Acutesmall\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"comma\",\"hyphen\",\"period\",\"fraction\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"colon\",\"semicolon\",\"commasuperior\",\"threequartersemdash\",\"periodsuperior\",\"questionsmall\",\"\",\"asuperior\",\"bsuperior\",\"centsuperior\",\"dsuperior\",\"esuperior\",\"\",\"\",\"\",\"isuperior\",\"\",\"\",\"lsuperior\",\"msuperior\",\"nsuperior\",\"osuperior\",\"\",\"\",\"rsuperior\",\"ssuperior\",\"tsuperior\",\"\",\"ff\",\"fi\",\"fl\",\"ffi\",\"ffl\",\"parenleftinferior\",\"\",\"parenrightinferior\",\"Circumflexsmall\",\"hyphensuperior\",\"Gravesmall\",\"Asmall\",\"Bsmall\",\"Csmall\",\"Dsmall\",\"Esmall\",\"Fsmall\",\"Gsmall\",\"Hsmall\",\"Ismall\",\"Jsmall\",\"Ksmall\",\"Lsmall\",\"Msmall\",\"Nsmall\",\"Osmall\",\"Psmall\",\"Qsmall\",\"Rsmall\",\"Ssmall\",\"Tsmall\",\"Usmall\",\"Vsmall\",\"Wsmall\",\"Xsmall\",\"Ysmall\",\"Zsmall\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"Tildesmall\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"exclamdownsmall\",\"centoldstyle\",\"Lslashsmall\",\"\",\"\",\"Scaronsmall\",\"Zcaronsmall\",\"Dieresissmall\",\"Brevesmall\",\"Caronsmall\",\"\",\"Dotaccentsmall\",\"\",\"\",\"Macronsmall\",\"\",\"\",\"figuredash\",\"hypheninferior\",\"\",\"\",\"Ogoneksmall\",\"Ringsmall\",\"Cedillasmall\",\"\",\"\",\"\",\"onequarter\",\"onehalf\",\"threequarters\",\"questiondownsmall\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"\",\"\",\"zerosuperior\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"eightsuperior\",\"ninesuperior\",\"zeroinferior\",\"oneinferior\",\"twoinferior\",\"threeinferior\",\"fourinferior\",\"fiveinferior\",\"sixinferior\",\"seveninferior\",\"eightinferior\",\"nineinferior\",\"centinferior\",\"dollarinferior\",\"periodinferior\",\"commainferior\",\"Agravesmall\",\"Aacutesmall\",\"Acircumflexsmall\",\"Atildesmall\",\"Adieresissmall\",\"Aringsmall\",\"AEsmall\",\"Ccedillasmall\",\"Egravesmall\",\"Eacutesmall\",\"Ecircumflexsmall\",\"Edieresissmall\",\"Igravesmall\",\"Iacutesmall\",\"Icircumflexsmall\",\"Idieresissmall\",\"Ethsmall\",\"Ntildesmall\",\"Ogravesmall\",\"Oacutesmall\",\"Ocircumflexsmall\",\"Otildesmall\",\"Odieresissmall\",\"OEsmall\",\"Oslashsmall\",\"Ugravesmall\",\"Uacutesmall\",\"Ucircumflexsmall\",\"Udieresissmall\",\"Yacutesmall\",\"Thornsmall\",\"Ydieresissmall\"];const MacExpertEncoding=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclamsmall\",\"Hungarumlautsmall\",\"centoldstyle\",\"dollaroldstyle\",\"dollarsuperior\",\"ampersandsmall\",\"Acutesmall\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"comma\",\"hyphen\",\"period\",\"fraction\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"colon\",\"semicolon\",\"\",\"threequartersemdash\",\"\",\"questionsmall\",\"\",\"\",\"\",\"\",\"Ethsmall\",\"\",\"\",\"onequarter\",\"onehalf\",\"threequarters\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"\",\"\",\"\",\"\",\"\",\"\",\"ff\",\"fi\",\"fl\",\"ffi\",\"ffl\",\"parenleftinferior\",\"\",\"parenrightinferior\",\"Circumflexsmall\",\"hypheninferior\",\"Gravesmall\",\"Asmall\",\"Bsmall\",\"Csmall\",\"Dsmall\",\"Esmall\",\"Fsmall\",\"Gsmall\",\"Hsmall\",\"Ismall\",\"Jsmall\",\"Ksmall\",\"Lsmall\",\"Msmall\",\"Nsmall\",\"Osmall\",\"Psmall\",\"Qsmall\",\"Rsmall\",\"Ssmall\",\"Tsmall\",\"Usmall\",\"Vsmall\",\"Wsmall\",\"Xsmall\",\"Ysmall\",\"Zsmall\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"Tildesmall\",\"\",\"\",\"asuperior\",\"centsuperior\",\"\",\"\",\"\",\"\",\"Aacutesmall\",\"Agravesmall\",\"Acircumflexsmall\",\"Adieresissmall\",\"Atildesmall\",\"Aringsmall\",\"Ccedillasmall\",\"Eacutesmall\",\"Egravesmall\",\"Ecircumflexsmall\",\"Edieresissmall\",\"Iacutesmall\",\"Igravesmall\",\"Icircumflexsmall\",\"Idieresissmall\",\"Ntildesmall\",\"Oacutesmall\",\"Ogravesmall\",\"Ocircumflexsmall\",\"Odieresissmall\",\"Otildesmall\",\"Uacutesmall\",\"Ugravesmall\",\"Ucircumflexsmall\",\"Udieresissmall\",\"\",\"eightsuperior\",\"fourinferior\",\"threeinferior\",\"sixinferior\",\"eightinferior\",\"seveninferior\",\"Scaronsmall\",\"\",\"centinferior\",\"twoinferior\",\"\",\"Dieresissmall\",\"\",\"Caronsmall\",\"osuperior\",\"fiveinferior\",\"\",\"commainferior\",\"periodinferior\",\"Yacutesmall\",\"\",\"dollarinferior\",\"\",\"\",\"Thornsmall\",\"\",\"nineinferior\",\"zeroinferior\",\"Zcaronsmall\",\"AEsmall\",\"Oslashsmall\",\"questiondownsmall\",\"oneinferior\",\"Lslashsmall\",\"\",\"\",\"\",\"\",\"\",\"\",\"Cedillasmall\",\"\",\"\",\"\",\"\",\"\",\"OEsmall\",\"figuredash\",\"hyphensuperior\",\"\",\"\",\"\",\"\",\"exclamdownsmall\",\"\",\"Ydieresissmall\",\"\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"ninesuperior\",\"zerosuperior\",\"\",\"esuperior\",\"rsuperior\",\"tsuperior\",\"\",\"\",\"isuperior\",\"ssuperior\",\"dsuperior\",\"\",\"\",\"\",\"\",\"\",\"lsuperior\",\"Ogoneksmall\",\"Brevesmall\",\"Macronsmall\",\"bsuperior\",\"nsuperior\",\"msuperior\",\"commasuperior\",\"periodsuperior\",\"Dotaccentsmall\",\"Ringsmall\",\"\",\"\",\"\",\"\"];const MacRomanEncoding=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quotesingle\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"grave\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"\",\"Adieresis\",\"Aring\",\"Ccedilla\",\"Eacute\",\"Ntilde\",\"Odieresis\",\"Udieresis\",\"aacute\",\"agrave\",\"acircumflex\",\"adieresis\",\"atilde\",\"aring\",\"ccedilla\",\"eacute\",\"egrave\",\"ecircumflex\",\"edieresis\",\"iacute\",\"igrave\",\"icircumflex\",\"idieresis\",\"ntilde\",\"oacute\",\"ograve\",\"ocircumflex\",\"odieresis\",\"otilde\",\"uacute\",\"ugrave\",\"ucircumflex\",\"udieresis\",\"dagger\",\"degree\",\"cent\",\"sterling\",\"section\",\"bullet\",\"paragraph\",\"germandbls\",\"registered\",\"copyright\",\"trademark\",\"acute\",\"dieresis\",\"notequal\",\"AE\",\"Oslash\",\"infinity\",\"plusminus\",\"lessequal\",\"greaterequal\",\"yen\",\"mu\",\"partialdiff\",\"summation\",\"product\",\"pi\",\"integral\",\"ordfeminine\",\"ordmasculine\",\"Omega\",\"ae\",\"oslash\",\"questiondown\",\"exclamdown\",\"logicalnot\",\"radical\",\"florin\",\"approxequal\",\"Delta\",\"guillemotleft\",\"guillemotright\",\"ellipsis\",\"space\",\"Agrave\",\"Atilde\",\"Otilde\",\"OE\",\"oe\",\"endash\",\"emdash\",\"quotedblleft\",\"quotedblright\",\"quoteleft\",\"quoteright\",\"divide\",\"lozenge\",\"ydieresis\",\"Ydieresis\",\"fraction\",\"currency\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"daggerdbl\",\"periodcentered\",\"quotesinglbase\",\"quotedblbase\",\"perthousand\",\"Acircumflex\",\"Ecircumflex\",\"Aacute\",\"Edieresis\",\"Egrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Igrave\",\"Oacute\",\"Ocircumflex\",\"apple\",\"Ograve\",\"Uacute\",\"Ucircumflex\",\"Ugrave\",\"dotlessi\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"ring\",\"cedilla\",\"hungarumlaut\",\"ogonek\",\"caron\"];const StandardEncoding=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quoteright\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"quoteleft\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"exclamdown\",\"cent\",\"sterling\",\"fraction\",\"yen\",\"florin\",\"section\",\"currency\",\"quotesingle\",\"quotedblleft\",\"guillemotleft\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"\",\"endash\",\"dagger\",\"daggerdbl\",\"periodcentered\",\"\",\"paragraph\",\"bullet\",\"quotesinglbase\",\"quotedblbase\",\"quotedblright\",\"guillemotright\",\"ellipsis\",\"perthousand\",\"\",\"questiondown\",\"\",\"grave\",\"acute\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"dieresis\",\"\",\"ring\",\"cedilla\",\"\",\"hungarumlaut\",\"ogonek\",\"caron\",\"emdash\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"AE\",\"\",\"ordfeminine\",\"\",\"\",\"\",\"\",\"Lslash\",\"Oslash\",\"OE\",\"ordmasculine\",\"\",\"\",\"\",\"\",\"\",\"ae\",\"\",\"\",\"\",\"dotlessi\",\"\",\"\",\"lslash\",\"oslash\",\"oe\",\"germandbls\",\"\",\"\",\"\",\"\"];const WinAnsiEncoding=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quotesingle\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"grave\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"bullet\",\"Euro\",\"bullet\",\"quotesinglbase\",\"florin\",\"quotedblbase\",\"ellipsis\",\"dagger\",\"daggerdbl\",\"circumflex\",\"perthousand\",\"Scaron\",\"guilsinglleft\",\"OE\",\"bullet\",\"Zcaron\",\"bullet\",\"bullet\",\"quoteleft\",\"quoteright\",\"quotedblleft\",\"quotedblright\",\"bullet\",\"endash\",\"emdash\",\"tilde\",\"trademark\",\"scaron\",\"guilsinglright\",\"oe\",\"bullet\",\"zcaron\",\"Ydieresis\",\"space\",\"exclamdown\",\"cent\",\"sterling\",\"currency\",\"yen\",\"brokenbar\",\"section\",\"dieresis\",\"copyright\",\"ordfeminine\",\"guillemotleft\",\"logicalnot\",\"hyphen\",\"registered\",\"macron\",\"degree\",\"plusminus\",\"twosuperior\",\"threesuperior\",\"acute\",\"mu\",\"paragraph\",\"periodcentered\",\"cedilla\",\"onesuperior\",\"ordmasculine\",\"guillemotright\",\"onequarter\",\"onehalf\",\"threequarters\",\"questiondown\",\"Agrave\",\"Aacute\",\"Acircumflex\",\"Atilde\",\"Adieresis\",\"Aring\",\"AE\",\"Ccedilla\",\"Egrave\",\"Eacute\",\"Ecircumflex\",\"Edieresis\",\"Igrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Eth\",\"Ntilde\",\"Ograve\",\"Oacute\",\"Ocircumflex\",\"Otilde\",\"Odieresis\",\"multiply\",\"Oslash\",\"Ugrave\",\"Uacute\",\"Ucircumflex\",\"Udieresis\",\"Yacute\",\"Thorn\",\"germandbls\",\"agrave\",\"aacute\",\"acircumflex\",\"atilde\",\"adieresis\",\"aring\",\"ae\",\"ccedilla\",\"egrave\",\"eacute\",\"ecircumflex\",\"edieresis\",\"igrave\",\"iacute\",\"icircumflex\",\"idieresis\",\"eth\",\"ntilde\",\"ograve\",\"oacute\",\"ocircumflex\",\"otilde\",\"odieresis\",\"divide\",\"oslash\",\"ugrave\",\"uacute\",\"ucircumflex\",\"udieresis\",\"yacute\",\"thorn\",\"ydieresis\"];const SymbolSetEncoding=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"exclam\",\"universal\",\"numbersign\",\"existential\",\"percent\",\"ampersand\",\"suchthat\",\"parenleft\",\"parenright\",\"asteriskmath\",\"plus\",\"comma\",\"minus\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"congruent\",\"Alpha\",\"Beta\",\"Chi\",\"Delta\",\"Epsilon\",\"Phi\",\"Gamma\",\"Eta\",\"Iota\",\"theta1\",\"Kappa\",\"Lambda\",\"Mu\",\"Nu\",\"Omicron\",\"Pi\",\"Theta\",\"Rho\",\"Sigma\",\"Tau\",\"Upsilon\",\"sigma1\",\"Omega\",\"Xi\",\"Psi\",\"Zeta\",\"bracketleft\",\"therefore\",\"bracketright\",\"perpendicular\",\"underscore\",\"radicalex\",\"alpha\",\"beta\",\"chi\",\"delta\",\"epsilon\",\"phi\",\"gamma\",\"eta\",\"iota\",\"phi1\",\"kappa\",\"lambda\",\"mu\",\"nu\",\"omicron\",\"pi\",\"theta\",\"rho\",\"sigma\",\"tau\",\"upsilon\",\"omega1\",\"omega\",\"xi\",\"psi\",\"zeta\",\"braceleft\",\"bar\",\"braceright\",\"similar\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"Euro\",\"Upsilon1\",\"minute\",\"lessequal\",\"fraction\",\"infinity\",\"florin\",\"club\",\"diamond\",\"heart\",\"spade\",\"arrowboth\",\"arrowleft\",\"arrowup\",\"arrowright\",\"arrowdown\",\"degree\",\"plusminus\",\"second\",\"greaterequal\",\"multiply\",\"proportional\",\"partialdiff\",\"bullet\",\"divide\",\"notequal\",\"equivalence\",\"approxequal\",\"ellipsis\",\"arrowvertex\",\"arrowhorizex\",\"carriagereturn\",\"aleph\",\"Ifraktur\",\"Rfraktur\",\"weierstrass\",\"circlemultiply\",\"circleplus\",\"emptyset\",\"intersection\",\"union\",\"propersuperset\",\"reflexsuperset\",\"notsubset\",\"propersubset\",\"reflexsubset\",\"element\",\"notelement\",\"angle\",\"gradient\",\"registerserif\",\"copyrightserif\",\"trademarkserif\",\"product\",\"radical\",\"dotmath\",\"logicalnot\",\"logicaland\",\"logicalor\",\"arrowdblboth\",\"arrowdblleft\",\"arrowdblup\",\"arrowdblright\",\"arrowdbldown\",\"lozenge\",\"angleleft\",\"registersans\",\"copyrightsans\",\"trademarksans\",\"summation\",\"parenlefttp\",\"parenleftex\",\"parenleftbt\",\"bracketlefttp\",\"bracketleftex\",\"bracketleftbt\",\"bracelefttp\",\"braceleftmid\",\"braceleftbt\",\"braceex\",\"\",\"angleright\",\"integral\",\"integraltp\",\"integralex\",\"integralbt\",\"parenrighttp\",\"parenrightex\",\"parenrightbt\",\"bracketrighttp\",\"bracketrightex\",\"bracketrightbt\",\"bracerighttp\",\"bracerightmid\",\"bracerightbt\",\"\"];const ZapfDingbatsEncoding=[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"space\",\"a1\",\"a2\",\"a202\",\"a3\",\"a4\",\"a5\",\"a119\",\"a118\",\"a117\",\"a11\",\"a12\",\"a13\",\"a14\",\"a15\",\"a16\",\"a105\",\"a17\",\"a18\",\"a19\",\"a20\",\"a21\",\"a22\",\"a23\",\"a24\",\"a25\",\"a26\",\"a27\",\"a28\",\"a6\",\"a7\",\"a8\",\"a9\",\"a10\",\"a29\",\"a30\",\"a31\",\"a32\",\"a33\",\"a34\",\"a35\",\"a36\",\"a37\",\"a38\",\"a39\",\"a40\",\"a41\",\"a42\",\"a43\",\"a44\",\"a45\",\"a46\",\"a47\",\"a48\",\"a49\",\"a50\",\"a51\",\"a52\",\"a53\",\"a54\",\"a55\",\"a56\",\"a57\",\"a58\",\"a59\",\"a60\",\"a61\",\"a62\",\"a63\",\"a64\",\"a65\",\"a66\",\"a67\",\"a68\",\"a69\",\"a70\",\"a71\",\"a72\",\"a73\",\"a74\",\"a203\",\"a75\",\"a204\",\"a76\",\"a77\",\"a78\",\"a79\",\"a81\",\"a82\",\"a83\",\"a84\",\"a97\",\"a98\",\"a99\",\"a100\",\"\",\"a89\",\"a90\",\"a93\",\"a94\",\"a91\",\"a92\",\"a205\",\"a85\",\"a206\",\"a86\",\"a87\",\"a88\",\"a95\",\"a96\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"a101\",\"a102\",\"a103\",\"a104\",\"a106\",\"a107\",\"a108\",\"a112\",\"a111\",\"a110\",\"a109\",\"a120\",\"a121\",\"a122\",\"a123\",\"a124\",\"a125\",\"a126\",\"a127\",\"a128\",\"a129\",\"a130\",\"a131\",\"a132\",\"a133\",\"a134\",\"a135\",\"a136\",\"a137\",\"a138\",\"a139\",\"a140\",\"a141\",\"a142\",\"a143\",\"a144\",\"a145\",\"a146\",\"a147\",\"a148\",\"a149\",\"a150\",\"a151\",\"a152\",\"a153\",\"a154\",\"a155\",\"a156\",\"a157\",\"a158\",\"a159\",\"a160\",\"a161\",\"a163\",\"a164\",\"a196\",\"a165\",\"a192\",\"a166\",\"a167\",\"a168\",\"a169\",\"a170\",\"a171\",\"a172\",\"a173\",\"a162\",\"a174\",\"a175\",\"a176\",\"a177\",\"a178\",\"a179\",\"a193\",\"a180\",\"a199\",\"a181\",\"a200\",\"a182\",\"\",\"a201\",\"a183\",\"a184\",\"a197\",\"a185\",\"a194\",\"a198\",\"a186\",\"a195\",\"a187\",\"a188\",\"a189\",\"a190\",\"a191\",\"\"];function getEncoding(encodingName){switch(encodingName){case\"WinAnsiEncoding\":return WinAnsiEncoding;case\"StandardEncoding\":return StandardEncoding;case\"MacRomanEncoding\":return MacRomanEncoding;case\"SymbolSetEncoding\":return SymbolSetEncoding;case\"ZapfDingbatsEncoding\":return ZapfDingbatsEncoding;case\"ExpertEncoding\":return ExpertEncoding;case\"MacExpertEncoding\":return MacExpertEncoding;default:return null}}const getGlyphsUnicode=getLookupTableFactory((function(t){t.A=65;t.AE=198;t.AEacute=508;t.AEmacron=482;t.AEsmall=63462;t.Aacute=193;t.Aacutesmall=63457;t.Abreve=258;t.Abreveacute=7854;t.Abrevecyrillic=1232;t.Abrevedotbelow=7862;t.Abrevegrave=7856;t.Abrevehookabove=7858;t.Abrevetilde=7860;t.Acaron=461;t.Acircle=9398;t.Acircumflex=194;t.Acircumflexacute=7844;t.Acircumflexdotbelow=7852;t.Acircumflexgrave=7846;t.Acircumflexhookabove=7848;t.Acircumflexsmall=63458;t.Acircumflextilde=7850;t.Acute=63177;t.Acutesmall=63412;t.Acyrillic=1040;t.Adblgrave=512;t.Adieresis=196;t.Adieresiscyrillic=1234;t.Adieresismacron=478;t.Adieresissmall=63460;t.Adotbelow=7840;t.Adotmacron=480;t.Agrave=192;t.Agravesmall=63456;t.Ahookabove=7842;t.Aiecyrillic=1236;t.Ainvertedbreve=514;t.Alpha=913;t.Alphatonos=902;t.Amacron=256;t.Amonospace=65313;t.Aogonek=260;t.Aring=197;t.Aringacute=506;t.Aringbelow=7680;t.Aringsmall=63461;t.Asmall=63329;t.Atilde=195;t.Atildesmall=63459;t.Aybarmenian=1329;t.B=66;t.Bcircle=9399;t.Bdotaccent=7682;t.Bdotbelow=7684;t.Becyrillic=1041;t.Benarmenian=1330;t.Beta=914;t.Bhook=385;t.Blinebelow=7686;t.Bmonospace=65314;t.Brevesmall=63220;t.Bsmall=63330;t.Btopbar=386;t.C=67;t.Caarmenian=1342;t.Cacute=262;t.Caron=63178;t.Caronsmall=63221;t.Ccaron=268;t.Ccedilla=199;t.Ccedillaacute=7688;t.Ccedillasmall=63463;t.Ccircle=9400;t.Ccircumflex=264;t.Cdot=266;t.Cdotaccent=266;t.Cedillasmall=63416;t.Chaarmenian=1353;t.Cheabkhasiancyrillic=1212;t.Checyrillic=1063;t.Chedescenderabkhasiancyrillic=1214;t.Chedescendercyrillic=1206;t.Chedieresiscyrillic=1268;t.Cheharmenian=1347;t.Chekhakassiancyrillic=1227;t.Cheverticalstrokecyrillic=1208;t.Chi=935;t.Chook=391;t.Circumflexsmall=63222;t.Cmonospace=65315;t.Coarmenian=1361;t.Csmall=63331;t.D=68;t.DZ=497;t.DZcaron=452;t.Daarmenian=1332;t.Dafrican=393;t.Dcaron=270;t.Dcedilla=7696;t.Dcircle=9401;t.Dcircumflexbelow=7698;t.Dcroat=272;t.Ddotaccent=7690;t.Ddotbelow=7692;t.Decyrillic=1044;t.Deicoptic=1006;t.Delta=8710;t.Deltagreek=916;t.Dhook=394;t.Dieresis=63179;t.DieresisAcute=63180;t.DieresisGrave=63181;t.Dieresissmall=63400;t.Digammagreek=988;t.Djecyrillic=1026;t.Dlinebelow=7694;t.Dmonospace=65316;t.Dotaccentsmall=63223;t.Dslash=272;t.Dsmall=63332;t.Dtopbar=395;t.Dz=498;t.Dzcaron=453;t.Dzeabkhasiancyrillic=1248;t.Dzecyrillic=1029;t.Dzhecyrillic=1039;t.E=69;t.Eacute=201;t.Eacutesmall=63465;t.Ebreve=276;t.Ecaron=282;t.Ecedillabreve=7708;t.Echarmenian=1333;t.Ecircle=9402;t.Ecircumflex=202;t.Ecircumflexacute=7870;t.Ecircumflexbelow=7704;t.Ecircumflexdotbelow=7878;t.Ecircumflexgrave=7872;t.Ecircumflexhookabove=7874;t.Ecircumflexsmall=63466;t.Ecircumflextilde=7876;t.Ecyrillic=1028;t.Edblgrave=516;t.Edieresis=203;t.Edieresissmall=63467;t.Edot=278;t.Edotaccent=278;t.Edotbelow=7864;t.Efcyrillic=1060;t.Egrave=200;t.Egravesmall=63464;t.Eharmenian=1335;t.Ehookabove=7866;t.Eightroman=8551;t.Einvertedbreve=518;t.Eiotifiedcyrillic=1124;t.Elcyrillic=1051;t.Elevenroman=8554;t.Emacron=274;t.Emacronacute=7702;t.Emacrongrave=7700;t.Emcyrillic=1052;t.Emonospace=65317;t.Encyrillic=1053;t.Endescendercyrillic=1186;t.Eng=330;t.Enghecyrillic=1188;t.Enhookcyrillic=1223;t.Eogonek=280;t.Eopen=400;t.Epsilon=917;t.Epsilontonos=904;t.Ercyrillic=1056;t.Ereversed=398;t.Ereversedcyrillic=1069;t.Escyrillic=1057;t.Esdescendercyrillic=1194;t.Esh=425;t.Esmall=63333;t.Eta=919;t.Etarmenian=1336;t.Etatonos=905;t.Eth=208;t.Ethsmall=63472;t.Etilde=7868;t.Etildebelow=7706;t.Euro=8364;t.Ezh=439;t.Ezhcaron=494;t.Ezhreversed=440;t.F=70;t.Fcircle=9403;t.Fdotaccent=7710;t.Feharmenian=1366;t.Feicoptic=996;t.Fhook=401;t.Fitacyrillic=1138;t.Fiveroman=8548;t.Fmonospace=65318;t.Fourroman=8547;t.Fsmall=63334;t.G=71;t.GBsquare=13191;t.Gacute=500;t.Gamma=915;t.Gammaafrican=404;t.Gangiacoptic=1002;t.Gbreve=286;t.Gcaron=486;t.Gcedilla=290;t.Gcircle=9404;t.Gcircumflex=284;t.Gcommaaccent=290;t.Gdot=288;t.Gdotaccent=288;t.Gecyrillic=1043;t.Ghadarmenian=1346;t.Ghemiddlehookcyrillic=1172;t.Ghestrokecyrillic=1170;t.Gheupturncyrillic=1168;t.Ghook=403;t.Gimarmenian=1331;t.Gjecyrillic=1027;t.Gmacron=7712;t.Gmonospace=65319;t.Grave=63182;t.Gravesmall=63328;t.Gsmall=63335;t.Gsmallhook=667;t.Gstroke=484;t.H=72;t.H18533=9679;t.H18543=9642;t.H18551=9643;t.H22073=9633;t.HPsquare=13259;t.Haabkhasiancyrillic=1192;t.Hadescendercyrillic=1202;t.Hardsigncyrillic=1066;t.Hbar=294;t.Hbrevebelow=7722;t.Hcedilla=7720;t.Hcircle=9405;t.Hcircumflex=292;t.Hdieresis=7718;t.Hdotaccent=7714;t.Hdotbelow=7716;t.Hmonospace=65320;t.Hoarmenian=1344;t.Horicoptic=1e3;t.Hsmall=63336;t.Hungarumlaut=63183;t.Hungarumlautsmall=63224;t.Hzsquare=13200;t.I=73;t.IAcyrillic=1071;t.IJ=306;t.IUcyrillic=1070;t.Iacute=205;t.Iacutesmall=63469;t.Ibreve=300;t.Icaron=463;t.Icircle=9406;t.Icircumflex=206;t.Icircumflexsmall=63470;t.Icyrillic=1030;t.Idblgrave=520;t.Idieresis=207;t.Idieresisacute=7726;t.Idieresiscyrillic=1252;t.Idieresissmall=63471;t.Idot=304;t.Idotaccent=304;t.Idotbelow=7882;t.Iebrevecyrillic=1238;t.Iecyrillic=1045;t.Ifraktur=8465;t.Igrave=204;t.Igravesmall=63468;t.Ihookabove=7880;t.Iicyrillic=1048;t.Iinvertedbreve=522;t.Iishortcyrillic=1049;t.Imacron=298;t.Imacroncyrillic=1250;t.Imonospace=65321;t.Iniarmenian=1339;t.Iocyrillic=1025;t.Iogonek=302;t.Iota=921;t.Iotaafrican=406;t.Iotadieresis=938;t.Iotatonos=906;t.Ismall=63337;t.Istroke=407;t.Itilde=296;t.Itildebelow=7724;t.Izhitsacyrillic=1140;t.Izhitsadblgravecyrillic=1142;t.J=74;t.Jaarmenian=1345;t.Jcircle=9407;t.Jcircumflex=308;t.Jecyrillic=1032;t.Jheharmenian=1355;t.Jmonospace=65322;t.Jsmall=63338;t.K=75;t.KBsquare=13189;t.KKsquare=13261;t.Kabashkircyrillic=1184;t.Kacute=7728;t.Kacyrillic=1050;t.Kadescendercyrillic=1178;t.Kahookcyrillic=1219;t.Kappa=922;t.Kastrokecyrillic=1182;t.Kaverticalstrokecyrillic=1180;t.Kcaron=488;t.Kcedilla=310;t.Kcircle=9408;t.Kcommaaccent=310;t.Kdotbelow=7730;t.Keharmenian=1364;t.Kenarmenian=1343;t.Khacyrillic=1061;t.Kheicoptic=998;t.Khook=408;t.Kjecyrillic=1036;t.Klinebelow=7732;t.Kmonospace=65323;t.Koppacyrillic=1152;t.Koppagreek=990;t.Ksicyrillic=1134;t.Ksmall=63339;t.L=76;t.LJ=455;t.LL=63167;t.Lacute=313;t.Lambda=923;t.Lcaron=317;t.Lcedilla=315;t.Lcircle=9409;t.Lcircumflexbelow=7740;t.Lcommaaccent=315;t.Ldot=319;t.Ldotaccent=319;t.Ldotbelow=7734;t.Ldotbelowmacron=7736;t.Liwnarmenian=1340;t.Lj=456;t.Ljecyrillic=1033;t.Llinebelow=7738;t.Lmonospace=65324;t.Lslash=321;t.Lslashsmall=63225;t.Lsmall=63340;t.M=77;t.MBsquare=13190;t.Macron=63184;t.Macronsmall=63407;t.Macute=7742;t.Mcircle=9410;t.Mdotaccent=7744;t.Mdotbelow=7746;t.Menarmenian=1348;t.Mmonospace=65325;t.Msmall=63341;t.Mturned=412;t.Mu=924;t.N=78;t.NJ=458;t.Nacute=323;t.Ncaron=327;t.Ncedilla=325;t.Ncircle=9411;t.Ncircumflexbelow=7754;t.Ncommaaccent=325;t.Ndotaccent=7748;t.Ndotbelow=7750;t.Nhookleft=413;t.Nineroman=8552;t.Nj=459;t.Njecyrillic=1034;t.Nlinebelow=7752;t.Nmonospace=65326;t.Nowarmenian=1350;t.Nsmall=63342;t.Ntilde=209;t.Ntildesmall=63473;t.Nu=925;t.O=79;t.OE=338;t.OEsmall=63226;t.Oacute=211;t.Oacutesmall=63475;t.Obarredcyrillic=1256;t.Obarreddieresiscyrillic=1258;t.Obreve=334;t.Ocaron=465;t.Ocenteredtilde=415;t.Ocircle=9412;t.Ocircumflex=212;t.Ocircumflexacute=7888;t.Ocircumflexdotbelow=7896;t.Ocircumflexgrave=7890;t.Ocircumflexhookabove=7892;t.Ocircumflexsmall=63476;t.Ocircumflextilde=7894;t.Ocyrillic=1054;t.Odblacute=336;t.Odblgrave=524;t.Odieresis=214;t.Odieresiscyrillic=1254;t.Odieresissmall=63478;t.Odotbelow=7884;t.Ogoneksmall=63227;t.Ograve=210;t.Ogravesmall=63474;t.Oharmenian=1365;t.Ohm=8486;t.Ohookabove=7886;t.Ohorn=416;t.Ohornacute=7898;t.Ohorndotbelow=7906;t.Ohorngrave=7900;t.Ohornhookabove=7902;t.Ohorntilde=7904;t.Ohungarumlaut=336;t.Oi=418;t.Oinvertedbreve=526;t.Omacron=332;t.Omacronacute=7762;t.Omacrongrave=7760;t.Omega=8486;t.Omegacyrillic=1120;t.Omegagreek=937;t.Omegaroundcyrillic=1146;t.Omegatitlocyrillic=1148;t.Omegatonos=911;t.Omicron=927;t.Omicrontonos=908;t.Omonospace=65327;t.Oneroman=8544;t.Oogonek=490;t.Oogonekmacron=492;t.Oopen=390;t.Oslash=216;t.Oslashacute=510;t.Oslashsmall=63480;t.Osmall=63343;t.Ostrokeacute=510;t.Otcyrillic=1150;t.Otilde=213;t.Otildeacute=7756;t.Otildedieresis=7758;t.Otildesmall=63477;t.P=80;t.Pacute=7764;t.Pcircle=9413;t.Pdotaccent=7766;t.Pecyrillic=1055;t.Peharmenian=1354;t.Pemiddlehookcyrillic=1190;t.Phi=934;t.Phook=420;t.Pi=928;t.Piwrarmenian=1363;t.Pmonospace=65328;t.Psi=936;t.Psicyrillic=1136;t.Psmall=63344;t.Q=81;t.Qcircle=9414;t.Qmonospace=65329;t.Qsmall=63345;t.R=82;t.Raarmenian=1356;t.Racute=340;t.Rcaron=344;t.Rcedilla=342;t.Rcircle=9415;t.Rcommaaccent=342;t.Rdblgrave=528;t.Rdotaccent=7768;t.Rdotbelow=7770;t.Rdotbelowmacron=7772;t.Reharmenian=1360;t.Rfraktur=8476;t.Rho=929;t.Ringsmall=63228;t.Rinvertedbreve=530;t.Rlinebelow=7774;t.Rmonospace=65330;t.Rsmall=63346;t.Rsmallinverted=641;t.Rsmallinvertedsuperior=694;t.S=83;t.SF010000=9484;t.SF020000=9492;t.SF030000=9488;t.SF040000=9496;t.SF050000=9532;t.SF060000=9516;t.SF070000=9524;t.SF080000=9500;t.SF090000=9508;t.SF100000=9472;t.SF110000=9474;t.SF190000=9569;t.SF200000=9570;t.SF210000=9558;t.SF220000=9557;t.SF230000=9571;t.SF240000=9553;t.SF250000=9559;t.SF260000=9565;t.SF270000=9564;t.SF280000=9563;t.SF360000=9566;t.SF370000=9567;t.SF380000=9562;t.SF390000=9556;t.SF400000=9577;t.SF410000=9574;t.SF420000=9568;t.SF430000=9552;t.SF440000=9580;t.SF450000=9575;t.SF460000=9576;t.SF470000=9572;t.SF480000=9573;t.SF490000=9561;t.SF500000=9560;t.SF510000=9554;t.SF520000=9555;t.SF530000=9579;t.SF540000=9578;t.Sacute=346;t.Sacutedotaccent=7780;t.Sampigreek=992;t.Scaron=352;t.Scarondotaccent=7782;t.Scaronsmall=63229;t.Scedilla=350;t.Schwa=399;t.Schwacyrillic=1240;t.Schwadieresiscyrillic=1242;t.Scircle=9416;t.Scircumflex=348;t.Scommaaccent=536;t.Sdotaccent=7776;t.Sdotbelow=7778;t.Sdotbelowdotaccent=7784;t.Seharmenian=1357;t.Sevenroman=8550;t.Shaarmenian=1351;t.Shacyrillic=1064;t.Shchacyrillic=1065;t.Sheicoptic=994;t.Shhacyrillic=1210;t.Shimacoptic=1004;t.Sigma=931;t.Sixroman=8549;t.Smonospace=65331;t.Softsigncyrillic=1068;t.Ssmall=63347;t.Stigmagreek=986;t.T=84;t.Tau=932;t.Tbar=358;t.Tcaron=356;t.Tcedilla=354;t.Tcircle=9417;t.Tcircumflexbelow=7792;t.Tcommaaccent=354;t.Tdotaccent=7786;t.Tdotbelow=7788;t.Tecyrillic=1058;t.Tedescendercyrillic=1196;t.Tenroman=8553;t.Tetsecyrillic=1204;t.Theta=920;t.Thook=428;t.Thorn=222;t.Thornsmall=63486;t.Threeroman=8546;t.Tildesmall=63230;t.Tiwnarmenian=1359;t.Tlinebelow=7790;t.Tmonospace=65332;t.Toarmenian=1337;t.Tonefive=444;t.Tonesix=388;t.Tonetwo=423;t.Tretroflexhook=430;t.Tsecyrillic=1062;t.Tshecyrillic=1035;t.Tsmall=63348;t.Twelveroman=8555;t.Tworoman=8545;t.U=85;t.Uacute=218;t.Uacutesmall=63482;t.Ubreve=364;t.Ucaron=467;t.Ucircle=9418;t.Ucircumflex=219;t.Ucircumflexbelow=7798;t.Ucircumflexsmall=63483;t.Ucyrillic=1059;t.Udblacute=368;t.Udblgrave=532;t.Udieresis=220;t.Udieresisacute=471;t.Udieresisbelow=7794;t.Udieresiscaron=473;t.Udieresiscyrillic=1264;t.Udieresisgrave=475;t.Udieresismacron=469;t.Udieresissmall=63484;t.Udotbelow=7908;t.Ugrave=217;t.Ugravesmall=63481;t.Uhookabove=7910;t.Uhorn=431;t.Uhornacute=7912;t.Uhorndotbelow=7920;t.Uhorngrave=7914;t.Uhornhookabove=7916;t.Uhorntilde=7918;t.Uhungarumlaut=368;t.Uhungarumlautcyrillic=1266;t.Uinvertedbreve=534;t.Ukcyrillic=1144;t.Umacron=362;t.Umacroncyrillic=1262;t.Umacrondieresis=7802;t.Umonospace=65333;t.Uogonek=370;t.Upsilon=933;t.Upsilon1=978;t.Upsilonacutehooksymbolgreek=979;t.Upsilonafrican=433;t.Upsilondieresis=939;t.Upsilondieresishooksymbolgreek=980;t.Upsilonhooksymbol=978;t.Upsilontonos=910;t.Uring=366;t.Ushortcyrillic=1038;t.Usmall=63349;t.Ustraightcyrillic=1198;t.Ustraightstrokecyrillic=1200;t.Utilde=360;t.Utildeacute=7800;t.Utildebelow=7796;t.V=86;t.Vcircle=9419;t.Vdotbelow=7806;t.Vecyrillic=1042;t.Vewarmenian=1358;t.Vhook=434;t.Vmonospace=65334;t.Voarmenian=1352;t.Vsmall=63350;t.Vtilde=7804;t.W=87;t.Wacute=7810;t.Wcircle=9420;t.Wcircumflex=372;t.Wdieresis=7812;t.Wdotaccent=7814;t.Wdotbelow=7816;t.Wgrave=7808;t.Wmonospace=65335;t.Wsmall=63351;t.X=88;t.Xcircle=9421;t.Xdieresis=7820;t.Xdotaccent=7818;t.Xeharmenian=1341;t.Xi=926;t.Xmonospace=65336;t.Xsmall=63352;t.Y=89;t.Yacute=221;t.Yacutesmall=63485;t.Yatcyrillic=1122;t.Ycircle=9422;t.Ycircumflex=374;t.Ydieresis=376;t.Ydieresissmall=63487;t.Ydotaccent=7822;t.Ydotbelow=7924;t.Yericyrillic=1067;t.Yerudieresiscyrillic=1272;t.Ygrave=7922;t.Yhook=435;t.Yhookabove=7926;t.Yiarmenian=1349;t.Yicyrillic=1031;t.Yiwnarmenian=1362;t.Ymonospace=65337;t.Ysmall=63353;t.Ytilde=7928;t.Yusbigcyrillic=1130;t.Yusbigiotifiedcyrillic=1132;t.Yuslittlecyrillic=1126;t.Yuslittleiotifiedcyrillic=1128;t.Z=90;t.Zaarmenian=1334;t.Zacute=377;t.Zcaron=381;t.Zcaronsmall=63231;t.Zcircle=9423;t.Zcircumflex=7824;t.Zdot=379;t.Zdotaccent=379;t.Zdotbelow=7826;t.Zecyrillic=1047;t.Zedescendercyrillic=1176;t.Zedieresiscyrillic=1246;t.Zeta=918;t.Zhearmenian=1338;t.Zhebrevecyrillic=1217;t.Zhecyrillic=1046;t.Zhedescendercyrillic=1174;t.Zhedieresiscyrillic=1244;t.Zlinebelow=7828;t.Zmonospace=65338;t.Zsmall=63354;t.Zstroke=437;t.a=97;t.aabengali=2438;t.aacute=225;t.aadeva=2310;t.aagujarati=2694;t.aagurmukhi=2566;t.aamatragurmukhi=2622;t.aarusquare=13059;t.aavowelsignbengali=2494;t.aavowelsigndeva=2366;t.aavowelsigngujarati=2750;t.abbreviationmarkarmenian=1375;t.abbreviationsigndeva=2416;t.abengali=2437;t.abopomofo=12570;t.abreve=259;t.abreveacute=7855;t.abrevecyrillic=1233;t.abrevedotbelow=7863;t.abrevegrave=7857;t.abrevehookabove=7859;t.abrevetilde=7861;t.acaron=462;t.acircle=9424;t.acircumflex=226;t.acircumflexacute=7845;t.acircumflexdotbelow=7853;t.acircumflexgrave=7847;t.acircumflexhookabove=7849;t.acircumflextilde=7851;t.acute=180;t.acutebelowcmb=791;t.acutecmb=769;t.acutecomb=769;t.acutedeva=2388;t.acutelowmod=719;t.acutetonecmb=833;t.acyrillic=1072;t.adblgrave=513;t.addakgurmukhi=2673;t.adeva=2309;t.adieresis=228;t.adieresiscyrillic=1235;t.adieresismacron=479;t.adotbelow=7841;t.adotmacron=481;t.ae=230;t.aeacute=509;t.aekorean=12624;t.aemacron=483;t.afii00208=8213;t.afii08941=8356;t.afii10017=1040;t.afii10018=1041;t.afii10019=1042;t.afii10020=1043;t.afii10021=1044;t.afii10022=1045;t.afii10023=1025;t.afii10024=1046;t.afii10025=1047;t.afii10026=1048;t.afii10027=1049;t.afii10028=1050;t.afii10029=1051;t.afii10030=1052;t.afii10031=1053;t.afii10032=1054;t.afii10033=1055;t.afii10034=1056;t.afii10035=1057;t.afii10036=1058;t.afii10037=1059;t.afii10038=1060;t.afii10039=1061;t.afii10040=1062;t.afii10041=1063;t.afii10042=1064;t.afii10043=1065;t.afii10044=1066;t.afii10045=1067;t.afii10046=1068;t.afii10047=1069;t.afii10048=1070;t.afii10049=1071;t.afii10050=1168;t.afii10051=1026;t.afii10052=1027;t.afii10053=1028;t.afii10054=1029;t.afii10055=1030;t.afii10056=1031;t.afii10057=1032;t.afii10058=1033;t.afii10059=1034;t.afii10060=1035;t.afii10061=1036;t.afii10062=1038;t.afii10063=63172;t.afii10064=63173;t.afii10065=1072;t.afii10066=1073;t.afii10067=1074;t.afii10068=1075;t.afii10069=1076;t.afii10070=1077;t.afii10071=1105;t.afii10072=1078;t.afii10073=1079;t.afii10074=1080;t.afii10075=1081;t.afii10076=1082;t.afii10077=1083;t.afii10078=1084;t.afii10079=1085;t.afii10080=1086;t.afii10081=1087;t.afii10082=1088;t.afii10083=1089;t.afii10084=1090;t.afii10085=1091;t.afii10086=1092;t.afii10087=1093;t.afii10088=1094;t.afii10089=1095;t.afii10090=1096;t.afii10091=1097;t.afii10092=1098;t.afii10093=1099;t.afii10094=1100;t.afii10095=1101;t.afii10096=1102;t.afii10097=1103;t.afii10098=1169;t.afii10099=1106;t.afii10100=1107;t.afii10101=1108;t.afii10102=1109;t.afii10103=1110;t.afii10104=1111;t.afii10105=1112;t.afii10106=1113;t.afii10107=1114;t.afii10108=1115;t.afii10109=1116;t.afii10110=1118;t.afii10145=1039;t.afii10146=1122;t.afii10147=1138;t.afii10148=1140;t.afii10192=63174;t.afii10193=1119;t.afii10194=1123;t.afii10195=1139;t.afii10196=1141;t.afii10831=63175;t.afii10832=63176;t.afii10846=1241;t.afii299=8206;t.afii300=8207;t.afii301=8205;t.afii57381=1642;t.afii57388=1548;t.afii57392=1632;t.afii57393=1633;t.afii57394=1634;t.afii57395=1635;t.afii57396=1636;t.afii57397=1637;t.afii57398=1638;t.afii57399=1639;t.afii57400=1640;t.afii57401=1641;t.afii57403=1563;t.afii57407=1567;t.afii57409=1569;t.afii57410=1570;t.afii57411=1571;t.afii57412=1572;t.afii57413=1573;t.afii57414=1574;t.afii57415=1575;t.afii57416=1576;t.afii57417=1577;t.afii57418=1578;t.afii57419=1579;t.afii57420=1580;t.afii57421=1581;t.afii57422=1582;t.afii57423=1583;t.afii57424=1584;t.afii57425=1585;t.afii57426=1586;t.afii57427=1587;t.afii57428=1588;t.afii57429=1589;t.afii57430=1590;t.afii57431=1591;t.afii57432=1592;t.afii57433=1593;t.afii57434=1594;t.afii57440=1600;t.afii57441=1601;t.afii57442=1602;t.afii57443=1603;t.afii57444=1604;t.afii57445=1605;t.afii57446=1606;t.afii57448=1608;t.afii57449=1609;t.afii57450=1610;t.afii57451=1611;t.afii57452=1612;t.afii57453=1613;t.afii57454=1614;t.afii57455=1615;t.afii57456=1616;t.afii57457=1617;t.afii57458=1618;t.afii57470=1607;t.afii57505=1700;t.afii57506=1662;t.afii57507=1670;t.afii57508=1688;t.afii57509=1711;t.afii57511=1657;t.afii57512=1672;t.afii57513=1681;t.afii57514=1722;t.afii57519=1746;t.afii57534=1749;t.afii57636=8362;t.afii57645=1470;t.afii57658=1475;t.afii57664=1488;t.afii57665=1489;t.afii57666=1490;t.afii57667=1491;t.afii57668=1492;t.afii57669=1493;t.afii57670=1494;t.afii57671=1495;t.afii57672=1496;t.afii57673=1497;t.afii57674=1498;t.afii57675=1499;t.afii57676=1500;t.afii57677=1501;t.afii57678=1502;t.afii57679=1503;t.afii57680=1504;t.afii57681=1505;t.afii57682=1506;t.afii57683=1507;t.afii57684=1508;t.afii57685=1509;t.afii57686=1510;t.afii57687=1511;t.afii57688=1512;t.afii57689=1513;t.afii57690=1514;t.afii57694=64298;t.afii57695=64299;t.afii57700=64331;t.afii57705=64287;t.afii57716=1520;t.afii57717=1521;t.afii57718=1522;t.afii57723=64309;t.afii57793=1460;t.afii57794=1461;t.afii57795=1462;t.afii57796=1467;t.afii57797=1464;t.afii57798=1463;t.afii57799=1456;t.afii57800=1458;t.afii57801=1457;t.afii57802=1459;t.afii57803=1474;t.afii57804=1473;t.afii57806=1465;t.afii57807=1468;t.afii57839=1469;t.afii57841=1471;t.afii57842=1472;t.afii57929=700;t.afii61248=8453;t.afii61289=8467;t.afii61352=8470;t.afii61573=8236;t.afii61574=8237;t.afii61575=8238;t.afii61664=8204;t.afii63167=1645;t.afii64937=701;t.agrave=224;t.agujarati=2693;t.agurmukhi=2565;t.ahiragana=12354;t.ahookabove=7843;t.aibengali=2448;t.aibopomofo=12574;t.aideva=2320;t.aiecyrillic=1237;t.aigujarati=2704;t.aigurmukhi=2576;t.aimatragurmukhi=2632;t.ainarabic=1593;t.ainfinalarabic=65226;t.aininitialarabic=65227;t.ainmedialarabic=65228;t.ainvertedbreve=515;t.aivowelsignbengali=2504;t.aivowelsigndeva=2376;t.aivowelsigngujarati=2760;t.akatakana=12450;t.akatakanahalfwidth=65393;t.akorean=12623;t.alef=1488;t.alefarabic=1575;t.alefdageshhebrew=64304;t.aleffinalarabic=65166;t.alefhamzaabovearabic=1571;t.alefhamzaabovefinalarabic=65156;t.alefhamzabelowarabic=1573;t.alefhamzabelowfinalarabic=65160;t.alefhebrew=1488;t.aleflamedhebrew=64335;t.alefmaddaabovearabic=1570;t.alefmaddaabovefinalarabic=65154;t.alefmaksuraarabic=1609;t.alefmaksurafinalarabic=65264;t.alefmaksurainitialarabic=65267;t.alefmaksuramedialarabic=65268;t.alefpatahhebrew=64302;t.alefqamatshebrew=64303;t.aleph=8501;t.allequal=8780;t.alpha=945;t.alphatonos=940;t.amacron=257;t.amonospace=65345;t.ampersand=38;t.ampersandmonospace=65286;t.ampersandsmall=63270;t.amsquare=13250;t.anbopomofo=12578;t.angbopomofo=12580;t.angbracketleft=12296;t.angbracketright=12297;t.angkhankhuthai=3674;t.angle=8736;t.anglebracketleft=12296;t.anglebracketleftvertical=65087;t.anglebracketright=12297;t.anglebracketrightvertical=65088;t.angleleft=9001;t.angleright=9002;t.angstrom=8491;t.anoteleia=903;t.anudattadeva=2386;t.anusvarabengali=2434;t.anusvaradeva=2306;t.anusvaragujarati=2690;t.aogonek=261;t.apaatosquare=13056;t.aparen=9372;t.apostrophearmenian=1370;t.apostrophemod=700;t.apple=63743;t.approaches=8784;t.approxequal=8776;t.approxequalorimage=8786;t.approximatelyequal=8773;t.araeaekorean=12686;t.araeakorean=12685;t.arc=8978;t.arighthalfring=7834;t.aring=229;t.aringacute=507;t.aringbelow=7681;t.arrowboth=8596;t.arrowdashdown=8675;t.arrowdashleft=8672;t.arrowdashright=8674;t.arrowdashup=8673;t.arrowdblboth=8660;t.arrowdbldown=8659;t.arrowdblleft=8656;t.arrowdblright=8658;t.arrowdblup=8657;t.arrowdown=8595;t.arrowdownleft=8601;t.arrowdownright=8600;t.arrowdownwhite=8681;t.arrowheaddownmod=709;t.arrowheadleftmod=706;t.arrowheadrightmod=707;t.arrowheadupmod=708;t.arrowhorizex=63719;t.arrowleft=8592;t.arrowleftdbl=8656;t.arrowleftdblstroke=8653;t.arrowleftoverright=8646;t.arrowleftwhite=8678;t.arrowright=8594;t.arrowrightdblstroke=8655;t.arrowrightheavy=10142;t.arrowrightoverleft=8644;t.arrowrightwhite=8680;t.arrowtableft=8676;t.arrowtabright=8677;t.arrowup=8593;t.arrowupdn=8597;t.arrowupdnbse=8616;t.arrowupdownbase=8616;t.arrowupleft=8598;t.arrowupleftofdown=8645;t.arrowupright=8599;t.arrowupwhite=8679;t.arrowvertex=63718;t.asciicircum=94;t.asciicircummonospace=65342;t.asciitilde=126;t.asciitildemonospace=65374;t.ascript=593;t.ascriptturned=594;t.asmallhiragana=12353;t.asmallkatakana=12449;t.asmallkatakanahalfwidth=65383;t.asterisk=42;t.asteriskaltonearabic=1645;t.asteriskarabic=1645;t.asteriskmath=8727;t.asteriskmonospace=65290;t.asterisksmall=65121;t.asterism=8258;t.asuperior=63209;t.asymptoticallyequal=8771;t.at=64;t.atilde=227;t.atmonospace=65312;t.atsmall=65131;t.aturned=592;t.aubengali=2452;t.aubopomofo=12576;t.audeva=2324;t.augujarati=2708;t.augurmukhi=2580;t.aulengthmarkbengali=2519;t.aumatragurmukhi=2636;t.auvowelsignbengali=2508;t.auvowelsigndeva=2380;t.auvowelsigngujarati=2764;t.avagrahadeva=2365;t.aybarmenian=1377;t.ayin=1506;t.ayinaltonehebrew=64288;t.ayinhebrew=1506;t.b=98;t.babengali=2476;t.backslash=92;t.backslashmonospace=65340;t.badeva=2348;t.bagujarati=2732;t.bagurmukhi=2604;t.bahiragana=12400;t.bahtthai=3647;t.bakatakana=12496;t.bar=124;t.barmonospace=65372;t.bbopomofo=12549;t.bcircle=9425;t.bdotaccent=7683;t.bdotbelow=7685;t.beamedsixteenthnotes=9836;t.because=8757;t.becyrillic=1073;t.beharabic=1576;t.behfinalarabic=65168;t.behinitialarabic=65169;t.behiragana=12409;t.behmedialarabic=65170;t.behmeeminitialarabic=64671;t.behmeemisolatedarabic=64520;t.behnoonfinalarabic=64621;t.bekatakana=12505;t.benarmenian=1378;t.bet=1489;t.beta=946;t.betasymbolgreek=976;t.betdagesh=64305;t.betdageshhebrew=64305;t.bethebrew=1489;t.betrafehebrew=64332;t.bhabengali=2477;t.bhadeva=2349;t.bhagujarati=2733;t.bhagurmukhi=2605;t.bhook=595;t.bihiragana=12403;t.bikatakana=12499;t.bilabialclick=664;t.bindigurmukhi=2562;t.birusquare=13105;t.blackcircle=9679;t.blackdiamond=9670;t.blackdownpointingtriangle=9660;t.blackleftpointingpointer=9668;t.blackleftpointingtriangle=9664;t.blacklenticularbracketleft=12304;t.blacklenticularbracketleftvertical=65083;t.blacklenticularbracketright=12305;t.blacklenticularbracketrightvertical=65084;t.blacklowerlefttriangle=9699;t.blacklowerrighttriangle=9698;t.blackrectangle=9644;t.blackrightpointingpointer=9658;t.blackrightpointingtriangle=9654;t.blacksmallsquare=9642;t.blacksmilingface=9787;t.blacksquare=9632;t.blackstar=9733;t.blackupperlefttriangle=9700;t.blackupperrighttriangle=9701;t.blackuppointingsmalltriangle=9652;t.blackuppointingtriangle=9650;t.blank=9251;t.blinebelow=7687;t.block=9608;t.bmonospace=65346;t.bobaimaithai=3610;t.bohiragana=12412;t.bokatakana=12508;t.bparen=9373;t.bqsquare=13251;t.braceex=63732;t.braceleft=123;t.braceleftbt=63731;t.braceleftmid=63730;t.braceleftmonospace=65371;t.braceleftsmall=65115;t.bracelefttp=63729;t.braceleftvertical=65079;t.braceright=125;t.bracerightbt=63742;t.bracerightmid=63741;t.bracerightmonospace=65373;t.bracerightsmall=65116;t.bracerighttp=63740;t.bracerightvertical=65080;t.bracketleft=91;t.bracketleftbt=63728;t.bracketleftex=63727;t.bracketleftmonospace=65339;t.bracketlefttp=63726;t.bracketright=93;t.bracketrightbt=63739;t.bracketrightex=63738;t.bracketrightmonospace=65341;t.bracketrighttp=63737;t.breve=728;t.brevebelowcmb=814;t.brevecmb=774;t.breveinvertedbelowcmb=815;t.breveinvertedcmb=785;t.breveinverteddoublecmb=865;t.bridgebelowcmb=810;t.bridgeinvertedbelowcmb=826;t.brokenbar=166;t.bstroke=384;t.bsuperior=63210;t.btopbar=387;t.buhiragana=12406;t.bukatakana=12502;t.bullet=8226;t.bulletinverse=9688;t.bulletoperator=8729;t.bullseye=9678;t.c=99;t.caarmenian=1390;t.cabengali=2458;t.cacute=263;t.cadeva=2330;t.cagujarati=2714;t.cagurmukhi=2586;t.calsquare=13192;t.candrabindubengali=2433;t.candrabinducmb=784;t.candrabindudeva=2305;t.candrabindugujarati=2689;t.capslock=8682;t.careof=8453;t.caron=711;t.caronbelowcmb=812;t.caroncmb=780;t.carriagereturn=8629;t.cbopomofo=12568;t.ccaron=269;t.ccedilla=231;t.ccedillaacute=7689;t.ccircle=9426;t.ccircumflex=265;t.ccurl=597;t.cdot=267;t.cdotaccent=267;t.cdsquare=13253;t.cedilla=184;t.cedillacmb=807;t.cent=162;t.centigrade=8451;t.centinferior=63199;t.centmonospace=65504;t.centoldstyle=63394;t.centsuperior=63200;t.chaarmenian=1401;t.chabengali=2459;t.chadeva=2331;t.chagujarati=2715;t.chagurmukhi=2587;t.chbopomofo=12564;t.cheabkhasiancyrillic=1213;t.checkmark=10003;t.checyrillic=1095;t.chedescenderabkhasiancyrillic=1215;t.chedescendercyrillic=1207;t.chedieresiscyrillic=1269;t.cheharmenian=1395;t.chekhakassiancyrillic=1228;t.cheverticalstrokecyrillic=1209;t.chi=967;t.chieuchacirclekorean=12919;t.chieuchaparenkorean=12823;t.chieuchcirclekorean=12905;t.chieuchkorean=12618;t.chieuchparenkorean=12809;t.chochangthai=3594;t.chochanthai=3592;t.chochingthai=3593;t.chochoethai=3596;t.chook=392;t.cieucacirclekorean=12918;t.cieucaparenkorean=12822;t.cieuccirclekorean=12904;t.cieuckorean=12616;t.cieucparenkorean=12808;t.cieucuparenkorean=12828;t.circle=9675;t.circlecopyrt=169;t.circlemultiply=8855;t.circleot=8857;t.circleplus=8853;t.circlepostalmark=12342;t.circlewithlefthalfblack=9680;t.circlewithrighthalfblack=9681;t.circumflex=710;t.circumflexbelowcmb=813;t.circumflexcmb=770;t.clear=8999;t.clickalveolar=450;t.clickdental=448;t.clicklateral=449;t.clickretroflex=451;t.club=9827;t.clubsuitblack=9827;t.clubsuitwhite=9831;t.cmcubedsquare=13220;t.cmonospace=65347;t.cmsquaredsquare=13216;t.coarmenian=1409;t.colon=58;t.colonmonetary=8353;t.colonmonospace=65306;t.colonsign=8353;t.colonsmall=65109;t.colontriangularhalfmod=721;t.colontriangularmod=720;t.comma=44;t.commaabovecmb=787;t.commaaboverightcmb=789;t.commaaccent=63171;t.commaarabic=1548;t.commaarmenian=1373;t.commainferior=63201;t.commamonospace=65292;t.commareversedabovecmb=788;t.commareversedmod=701;t.commasmall=65104;t.commasuperior=63202;t.commaturnedabovecmb=786;t.commaturnedmod=699;t.compass=9788;t.congruent=8773;t.contourintegral=8750;t.control=8963;t.controlACK=6;t.controlBEL=7;t.controlBS=8;t.controlCAN=24;t.controlCR=13;t.controlDC1=17;t.controlDC2=18;t.controlDC3=19;t.controlDC4=20;t.controlDEL=127;t.controlDLE=16;t.controlEM=25;t.controlENQ=5;t.controlEOT=4;t.controlESC=27;t.controlETB=23;t.controlETX=3;t.controlFF=12;t.controlFS=28;t.controlGS=29;t.controlHT=9;t.controlLF=10;t.controlNAK=21;t.controlNULL=0;t.controlRS=30;t.controlSI=15;t.controlSO=14;t.controlSOT=2;t.controlSTX=1;t.controlSUB=26;t.controlSYN=22;t.controlUS=31;t.controlVT=11;t.copyright=169;t.copyrightsans=63721;t.copyrightserif=63193;t.cornerbracketleft=12300;t.cornerbracketlefthalfwidth=65378;t.cornerbracketleftvertical=65089;t.cornerbracketright=12301;t.cornerbracketrighthalfwidth=65379;t.cornerbracketrightvertical=65090;t.corporationsquare=13183;t.cosquare=13255;t.coverkgsquare=13254;t.cparen=9374;t.cruzeiro=8354;t.cstretched=663;t.curlyand=8911;t.curlyor=8910;t.currency=164;t.cyrBreve=63185;t.cyrFlex=63186;t.cyrbreve=63188;t.cyrflex=63189;t.d=100;t.daarmenian=1380;t.dabengali=2470;t.dadarabic=1590;t.dadeva=2342;t.dadfinalarabic=65214;t.dadinitialarabic=65215;t.dadmedialarabic=65216;t.dagesh=1468;t.dageshhebrew=1468;t.dagger=8224;t.daggerdbl=8225;t.dagujarati=2726;t.dagurmukhi=2598;t.dahiragana=12384;t.dakatakana=12480;t.dalarabic=1583;t.dalet=1491;t.daletdagesh=64307;t.daletdageshhebrew=64307;t.dalethebrew=1491;t.dalfinalarabic=65194;t.dammaarabic=1615;t.dammalowarabic=1615;t.dammatanaltonearabic=1612;t.dammatanarabic=1612;t.danda=2404;t.dargahebrew=1447;t.dargalefthebrew=1447;t.dasiapneumatacyrilliccmb=1157;t.dblGrave=63187;t.dblanglebracketleft=12298;t.dblanglebracketleftvertical=65085;t.dblanglebracketright=12299;t.dblanglebracketrightvertical=65086;t.dblarchinvertedbelowcmb=811;t.dblarrowleft=8660;t.dblarrowright=8658;t.dbldanda=2405;t.dblgrave=63190;t.dblgravecmb=783;t.dblintegral=8748;t.dbllowline=8215;t.dbllowlinecmb=819;t.dbloverlinecmb=831;t.dblprimemod=698;t.dblverticalbar=8214;t.dblverticallineabovecmb=782;t.dbopomofo=12553;t.dbsquare=13256;t.dcaron=271;t.dcedilla=7697;t.dcircle=9427;t.dcircumflexbelow=7699;t.dcroat=273;t.ddabengali=2465;t.ddadeva=2337;t.ddagujarati=2721;t.ddagurmukhi=2593;t.ddalarabic=1672;t.ddalfinalarabic=64393;t.dddhadeva=2396;t.ddhabengali=2466;t.ddhadeva=2338;t.ddhagujarati=2722;t.ddhagurmukhi=2594;t.ddotaccent=7691;t.ddotbelow=7693;t.decimalseparatorarabic=1643;t.decimalseparatorpersian=1643;t.decyrillic=1076;t.degree=176;t.dehihebrew=1453;t.dehiragana=12391;t.deicoptic=1007;t.dekatakana=12487;t.deleteleft=9003;t.deleteright=8998;t.delta=948;t.deltaturned=397;t.denominatorminusonenumeratorbengali=2552;t.dezh=676;t.dhabengali=2471;t.dhadeva=2343;t.dhagujarati=2727;t.dhagurmukhi=2599;t.dhook=599;t.dialytikatonos=901;t.dialytikatonoscmb=836;t.diamond=9830;t.diamondsuitwhite=9826;t.dieresis=168;t.dieresisacute=63191;t.dieresisbelowcmb=804;t.dieresiscmb=776;t.dieresisgrave=63192;t.dieresistonos=901;t.dihiragana=12386;t.dikatakana=12482;t.dittomark=12291;t.divide=247;t.divides=8739;t.divisionslash=8725;t.djecyrillic=1106;t.dkshade=9619;t.dlinebelow=7695;t.dlsquare=13207;t.dmacron=273;t.dmonospace=65348;t.dnblock=9604;t.dochadathai=3598;t.dodekthai=3604;t.dohiragana=12393;t.dokatakana=12489;t.dollar=36;t.dollarinferior=63203;t.dollarmonospace=65284;t.dollaroldstyle=63268;t.dollarsmall=65129;t.dollarsuperior=63204;t.dong=8363;t.dorusquare=13094;t.dotaccent=729;t.dotaccentcmb=775;t.dotbelowcmb=803;t.dotbelowcomb=803;t.dotkatakana=12539;t.dotlessi=305;t.dotlessj=63166;t.dotlessjstrokehook=644;t.dotmath=8901;t.dottedcircle=9676;t.doubleyodpatah=64287;t.doubleyodpatahhebrew=64287;t.downtackbelowcmb=798;t.downtackmod=725;t.dparen=9375;t.dsuperior=63211;t.dtail=598;t.dtopbar=396;t.duhiragana=12389;t.dukatakana=12485;t.dz=499;t.dzaltone=675;t.dzcaron=454;t.dzcurl=677;t.dzeabkhasiancyrillic=1249;t.dzecyrillic=1109;t.dzhecyrillic=1119;t.e=101;t.eacute=233;t.earth=9793;t.ebengali=2447;t.ebopomofo=12572;t.ebreve=277;t.ecandradeva=2317;t.ecandragujarati=2701;t.ecandravowelsigndeva=2373;t.ecandravowelsigngujarati=2757;t.ecaron=283;t.ecedillabreve=7709;t.echarmenian=1381;t.echyiwnarmenian=1415;t.ecircle=9428;t.ecircumflex=234;t.ecircumflexacute=7871;t.ecircumflexbelow=7705;t.ecircumflexdotbelow=7879;t.ecircumflexgrave=7873;t.ecircumflexhookabove=7875;t.ecircumflextilde=7877;t.ecyrillic=1108;t.edblgrave=517;t.edeva=2319;t.edieresis=235;t.edot=279;t.edotaccent=279;t.edotbelow=7865;t.eegurmukhi=2575;t.eematragurmukhi=2631;t.efcyrillic=1092;t.egrave=232;t.egujarati=2703;t.eharmenian=1383;t.ehbopomofo=12573;t.ehiragana=12360;t.ehookabove=7867;t.eibopomofo=12575;t.eight=56;t.eightarabic=1640;t.eightbengali=2542;t.eightcircle=9319;t.eightcircleinversesansserif=10129;t.eightdeva=2414;t.eighteencircle=9329;t.eighteenparen=9349;t.eighteenperiod=9369;t.eightgujarati=2798;t.eightgurmukhi=2670;t.eighthackarabic=1640;t.eighthangzhou=12328;t.eighthnotebeamed=9835;t.eightideographicparen=12839;t.eightinferior=8328;t.eightmonospace=65304;t.eightoldstyle=63288;t.eightparen=9339;t.eightperiod=9359;t.eightpersian=1784;t.eightroman=8567;t.eightsuperior=8312;t.eightthai=3672;t.einvertedbreve=519;t.eiotifiedcyrillic=1125;t.ekatakana=12456;t.ekatakanahalfwidth=65396;t.ekonkargurmukhi=2676;t.ekorean=12628;t.elcyrillic=1083;t.element=8712;t.elevencircle=9322;t.elevenparen=9342;t.elevenperiod=9362;t.elevenroman=8570;t.ellipsis=8230;t.ellipsisvertical=8942;t.emacron=275;t.emacronacute=7703;t.emacrongrave=7701;t.emcyrillic=1084;t.emdash=8212;t.emdashvertical=65073;t.emonospace=65349;t.emphasismarkarmenian=1371;t.emptyset=8709;t.enbopomofo=12579;t.encyrillic=1085;t.endash=8211;t.endashvertical=65074;t.endescendercyrillic=1187;t.eng=331;t.engbopomofo=12581;t.enghecyrillic=1189;t.enhookcyrillic=1224;t.enspace=8194;t.eogonek=281;t.eokorean=12627;t.eopen=603;t.eopenclosed=666;t.eopenreversed=604;t.eopenreversedclosed=606;t.eopenreversedhook=605;t.eparen=9376;t.epsilon=949;t.epsilontonos=941;t.equal=61;t.equalmonospace=65309;t.equalsmall=65126;t.equalsuperior=8316;t.equivalence=8801;t.erbopomofo=12582;t.ercyrillic=1088;t.ereversed=600;t.ereversedcyrillic=1101;t.escyrillic=1089;t.esdescendercyrillic=1195;t.esh=643;t.eshcurl=646;t.eshortdeva=2318;t.eshortvowelsigndeva=2374;t.eshreversedloop=426;t.eshsquatreversed=645;t.esmallhiragana=12359;t.esmallkatakana=12455;t.esmallkatakanahalfwidth=65386;t.estimated=8494;t.esuperior=63212;t.eta=951;t.etarmenian=1384;t.etatonos=942;t.eth=240;t.etilde=7869;t.etildebelow=7707;t.etnahtafoukhhebrew=1425;t.etnahtafoukhlefthebrew=1425;t.etnahtahebrew=1425;t.etnahtalefthebrew=1425;t.eturned=477;t.eukorean=12641;t.euro=8364;t.evowelsignbengali=2503;t.evowelsigndeva=2375;t.evowelsigngujarati=2759;t.exclam=33;t.exclamarmenian=1372;t.exclamdbl=8252;t.exclamdown=161;t.exclamdownsmall=63393;t.exclammonospace=65281;t.exclamsmall=63265;t.existential=8707;t.ezh=658;t.ezhcaron=495;t.ezhcurl=659;t.ezhreversed=441;t.ezhtail=442;t.f=102;t.fadeva=2398;t.fagurmukhi=2654;t.fahrenheit=8457;t.fathaarabic=1614;t.fathalowarabic=1614;t.fathatanarabic=1611;t.fbopomofo=12552;t.fcircle=9429;t.fdotaccent=7711;t.feharabic=1601;t.feharmenian=1414;t.fehfinalarabic=65234;t.fehinitialarabic=65235;t.fehmedialarabic=65236;t.feicoptic=997;t.female=9792;t.ff=64256;t.f_f=64256;t.ffi=64259;t.f_f_i=64259;t.ffl=64260;t.f_f_l=64260;t.fi=64257;t.f_i=64257;t.fifteencircle=9326;t.fifteenparen=9346;t.fifteenperiod=9366;t.figuredash=8210;t.filledbox=9632;t.filledrect=9644;t.finalkaf=1498;t.finalkafdagesh=64314;t.finalkafdageshhebrew=64314;t.finalkafhebrew=1498;t.finalmem=1501;t.finalmemhebrew=1501;t.finalnun=1503;t.finalnunhebrew=1503;t.finalpe=1507;t.finalpehebrew=1507;t.finaltsadi=1509;t.finaltsadihebrew=1509;t.firsttonechinese=713;t.fisheye=9673;t.fitacyrillic=1139;t.five=53;t.fivearabic=1637;t.fivebengali=2539;t.fivecircle=9316;t.fivecircleinversesansserif=10126;t.fivedeva=2411;t.fiveeighths=8541;t.fivegujarati=2795;t.fivegurmukhi=2667;t.fivehackarabic=1637;t.fivehangzhou=12325;t.fiveideographicparen=12836;t.fiveinferior=8325;t.fivemonospace=65301;t.fiveoldstyle=63285;t.fiveparen=9336;t.fiveperiod=9356;t.fivepersian=1781;t.fiveroman=8564;t.fivesuperior=8309;t.fivethai=3669;t.fl=64258;t.f_l=64258;t.florin=402;t.fmonospace=65350;t.fmsquare=13209;t.fofanthai=3615;t.fofathai=3613;t.fongmanthai=3663;t.forall=8704;t.four=52;t.fourarabic=1636;t.fourbengali=2538;t.fourcircle=9315;t.fourcircleinversesansserif=10125;t.fourdeva=2410;t.fourgujarati=2794;t.fourgurmukhi=2666;t.fourhackarabic=1636;t.fourhangzhou=12324;t.fourideographicparen=12835;t.fourinferior=8324;t.fourmonospace=65300;t.fournumeratorbengali=2551;t.fouroldstyle=63284;t.fourparen=9335;t.fourperiod=9355;t.fourpersian=1780;t.fourroman=8563;t.foursuperior=8308;t.fourteencircle=9325;t.fourteenparen=9345;t.fourteenperiod=9365;t.fourthai=3668;t.fourthtonechinese=715;t.fparen=9377;t.fraction=8260;t.franc=8355;t.g=103;t.gabengali=2455;t.gacute=501;t.gadeva=2327;t.gafarabic=1711;t.gaffinalarabic=64403;t.gafinitialarabic=64404;t.gafmedialarabic=64405;t.gagujarati=2711;t.gagurmukhi=2583;t.gahiragana=12364;t.gakatakana=12460;t.gamma=947;t.gammalatinsmall=611;t.gammasuperior=736;t.gangiacoptic=1003;t.gbopomofo=12557;t.gbreve=287;t.gcaron=487;t.gcedilla=291;t.gcircle=9430;t.gcircumflex=285;t.gcommaaccent=291;t.gdot=289;t.gdotaccent=289;t.gecyrillic=1075;t.gehiragana=12370;t.gekatakana=12466;t.geometricallyequal=8785;t.gereshaccenthebrew=1436;t.gereshhebrew=1523;t.gereshmuqdamhebrew=1437;t.germandbls=223;t.gershayimaccenthebrew=1438;t.gershayimhebrew=1524;t.getamark=12307;t.ghabengali=2456;t.ghadarmenian=1394;t.ghadeva=2328;t.ghagujarati=2712;t.ghagurmukhi=2584;t.ghainarabic=1594;t.ghainfinalarabic=65230;t.ghaininitialarabic=65231;t.ghainmedialarabic=65232;t.ghemiddlehookcyrillic=1173;t.ghestrokecyrillic=1171;t.gheupturncyrillic=1169;t.ghhadeva=2394;t.ghhagurmukhi=2650;t.ghook=608;t.ghzsquare=13203;t.gihiragana=12366;t.gikatakana=12462;t.gimarmenian=1379;t.gimel=1490;t.gimeldagesh=64306;t.gimeldageshhebrew=64306;t.gimelhebrew=1490;t.gjecyrillic=1107;t.glottalinvertedstroke=446;t.glottalstop=660;t.glottalstopinverted=662;t.glottalstopmod=704;t.glottalstopreversed=661;t.glottalstopreversedmod=705;t.glottalstopreversedsuperior=740;t.glottalstopstroke=673;t.glottalstopstrokereversed=674;t.gmacron=7713;t.gmonospace=65351;t.gohiragana=12372;t.gokatakana=12468;t.gparen=9378;t.gpasquare=13228;t.gradient=8711;t.grave=96;t.gravebelowcmb=790;t.gravecmb=768;t.gravecomb=768;t.gravedeva=2387;t.gravelowmod=718;t.gravemonospace=65344;t.gravetonecmb=832;t.greater=62;t.greaterequal=8805;t.greaterequalorless=8923;t.greatermonospace=65310;t.greaterorequivalent=8819;t.greaterorless=8823;t.greateroverequal=8807;t.greatersmall=65125;t.gscript=609;t.gstroke=485;t.guhiragana=12368;t.guillemotleft=171;t.guillemotright=187;t.guilsinglleft=8249;t.guilsinglright=8250;t.gukatakana=12464;t.guramusquare=13080;t.gysquare=13257;t.h=104;t.haabkhasiancyrillic=1193;t.haaltonearabic=1729;t.habengali=2489;t.hadescendercyrillic=1203;t.hadeva=2361;t.hagujarati=2745;t.hagurmukhi=2617;t.haharabic=1581;t.hahfinalarabic=65186;t.hahinitialarabic=65187;t.hahiragana=12399;t.hahmedialarabic=65188;t.haitusquare=13098;t.hakatakana=12495;t.hakatakanahalfwidth=65418;t.halantgurmukhi=2637;t.hamzaarabic=1569;t.hamzalowarabic=1569;t.hangulfiller=12644;t.hardsigncyrillic=1098;t.harpoonleftbarbup=8636;t.harpoonrightbarbup=8640;t.hasquare=13258;t.hatafpatah=1458;t.hatafpatah16=1458;t.hatafpatah23=1458;t.hatafpatah2f=1458;t.hatafpatahhebrew=1458;t.hatafpatahnarrowhebrew=1458;t.hatafpatahquarterhebrew=1458;t.hatafpatahwidehebrew=1458;t.hatafqamats=1459;t.hatafqamats1b=1459;t.hatafqamats28=1459;t.hatafqamats34=1459;t.hatafqamatshebrew=1459;t.hatafqamatsnarrowhebrew=1459;t.hatafqamatsquarterhebrew=1459;t.hatafqamatswidehebrew=1459;t.hatafsegol=1457;t.hatafsegol17=1457;t.hatafsegol24=1457;t.hatafsegol30=1457;t.hatafsegolhebrew=1457;t.hatafsegolnarrowhebrew=1457;t.hatafsegolquarterhebrew=1457;t.hatafsegolwidehebrew=1457;t.hbar=295;t.hbopomofo=12559;t.hbrevebelow=7723;t.hcedilla=7721;t.hcircle=9431;t.hcircumflex=293;t.hdieresis=7719;t.hdotaccent=7715;t.hdotbelow=7717;t.he=1492;t.heart=9829;t.heartsuitblack=9829;t.heartsuitwhite=9825;t.hedagesh=64308;t.hedageshhebrew=64308;t.hehaltonearabic=1729;t.heharabic=1607;t.hehebrew=1492;t.hehfinalaltonearabic=64423;t.hehfinalalttwoarabic=65258;t.hehfinalarabic=65258;t.hehhamzaabovefinalarabic=64421;t.hehhamzaaboveisolatedarabic=64420;t.hehinitialaltonearabic=64424;t.hehinitialarabic=65259;t.hehiragana=12408;t.hehmedialaltonearabic=64425;t.hehmedialarabic=65260;t.heiseierasquare=13179;t.hekatakana=12504;t.hekatakanahalfwidth=65421;t.hekutaarusquare=13110;t.henghook=615;t.herutusquare=13113;t.het=1495;t.hethebrew=1495;t.hhook=614;t.hhooksuperior=689;t.hieuhacirclekorean=12923;t.hieuhaparenkorean=12827;t.hieuhcirclekorean=12909;t.hieuhkorean=12622;t.hieuhparenkorean=12813;t.hihiragana=12402;t.hikatakana=12498;t.hikatakanahalfwidth=65419;t.hiriq=1460;t.hiriq14=1460;t.hiriq21=1460;t.hiriq2d=1460;t.hiriqhebrew=1460;t.hiriqnarrowhebrew=1460;t.hiriqquarterhebrew=1460;t.hiriqwidehebrew=1460;t.hlinebelow=7830;t.hmonospace=65352;t.hoarmenian=1392;t.hohipthai=3627;t.hohiragana=12411;t.hokatakana=12507;t.hokatakanahalfwidth=65422;t.holam=1465;t.holam19=1465;t.holam26=1465;t.holam32=1465;t.holamhebrew=1465;t.holamnarrowhebrew=1465;t.holamquarterhebrew=1465;t.holamwidehebrew=1465;t.honokhukthai=3630;t.hookabovecomb=777;t.hookcmb=777;t.hookpalatalizedbelowcmb=801;t.hookretroflexbelowcmb=802;t.hoonsquare=13122;t.horicoptic=1001;t.horizontalbar=8213;t.horncmb=795;t.hotsprings=9832;t.house=8962;t.hparen=9379;t.hsuperior=688;t.hturned=613;t.huhiragana=12405;t.huiitosquare=13107;t.hukatakana=12501;t.hukatakanahalfwidth=65420;t.hungarumlaut=733;t.hungarumlautcmb=779;t.hv=405;t.hyphen=45;t.hypheninferior=63205;t.hyphenmonospace=65293;t.hyphensmall=65123;t.hyphensuperior=63206;t.hyphentwo=8208;t.i=105;t.iacute=237;t.iacyrillic=1103;t.ibengali=2439;t.ibopomofo=12583;t.ibreve=301;t.icaron=464;t.icircle=9432;t.icircumflex=238;t.icyrillic=1110;t.idblgrave=521;t.ideographearthcircle=12943;t.ideographfirecircle=12939;t.ideographicallianceparen=12863;t.ideographiccallparen=12858;t.ideographiccentrecircle=12965;t.ideographicclose=12294;t.ideographiccomma=12289;t.ideographiccommaleft=65380;t.ideographiccongratulationparen=12855;t.ideographiccorrectcircle=12963;t.ideographicearthparen=12847;t.ideographicenterpriseparen=12861;t.ideographicexcellentcircle=12957;t.ideographicfestivalparen=12864;t.ideographicfinancialcircle=12950;t.ideographicfinancialparen=12854;t.ideographicfireparen=12843;t.ideographichaveparen=12850;t.ideographichighcircle=12964;t.ideographiciterationmark=12293;t.ideographiclaborcircle=12952;t.ideographiclaborparen=12856;t.ideographicleftcircle=12967;t.ideographiclowcircle=12966;t.ideographicmedicinecircle=12969;t.ideographicmetalparen=12846;t.ideographicmoonparen=12842;t.ideographicnameparen=12852;t.ideographicperiod=12290;t.ideographicprintcircle=12958;t.ideographicreachparen=12867;t.ideographicrepresentparen=12857;t.ideographicresourceparen=12862;t.ideographicrightcircle=12968;t.ideographicsecretcircle=12953;t.ideographicselfparen=12866;t.ideographicsocietyparen=12851;t.ideographicspace=12288;t.ideographicspecialparen=12853;t.ideographicstockparen=12849;t.ideographicstudyparen=12859;t.ideographicsunparen=12848;t.ideographicsuperviseparen=12860;t.ideographicwaterparen=12844;t.ideographicwoodparen=12845;t.ideographiczero=12295;t.ideographmetalcircle=12942;t.ideographmooncircle=12938;t.ideographnamecircle=12948;t.ideographsuncircle=12944;t.ideographwatercircle=12940;t.ideographwoodcircle=12941;t.ideva=2311;t.idieresis=239;t.idieresisacute=7727;t.idieresiscyrillic=1253;t.idotbelow=7883;t.iebrevecyrillic=1239;t.iecyrillic=1077;t.ieungacirclekorean=12917;t.ieungaparenkorean=12821;t.ieungcirclekorean=12903;t.ieungkorean=12615;t.ieungparenkorean=12807;t.igrave=236;t.igujarati=2695;t.igurmukhi=2567;t.ihiragana=12356;t.ihookabove=7881;t.iibengali=2440;t.iicyrillic=1080;t.iideva=2312;t.iigujarati=2696;t.iigurmukhi=2568;t.iimatragurmukhi=2624;t.iinvertedbreve=523;t.iishortcyrillic=1081;t.iivowelsignbengali=2496;t.iivowelsigndeva=2368;t.iivowelsigngujarati=2752;t.ij=307;t.ikatakana=12452;t.ikatakanahalfwidth=65394;t.ikorean=12643;t.ilde=732;t.iluyhebrew=1452;t.imacron=299;t.imacroncyrillic=1251;t.imageorapproximatelyequal=8787;t.imatragurmukhi=2623;t.imonospace=65353;t.increment=8710;t.infinity=8734;t.iniarmenian=1387;t.integral=8747;t.integralbottom=8993;t.integralbt=8993;t.integralex=63733;t.integraltop=8992;t.integraltp=8992;t.intersection=8745;t.intisquare=13061;t.invbullet=9688;t.invcircle=9689;t.invsmileface=9787;t.iocyrillic=1105;t.iogonek=303;t.iota=953;t.iotadieresis=970;t.iotadieresistonos=912;t.iotalatin=617;t.iotatonos=943;t.iparen=9380;t.irigurmukhi=2674;t.ismallhiragana=12355;t.ismallkatakana=12451;t.ismallkatakanahalfwidth=65384;t.issharbengali=2554;t.istroke=616;t.isuperior=63213;t.iterationhiragana=12445;t.iterationkatakana=12541;t.itilde=297;t.itildebelow=7725;t.iubopomofo=12585;t.iucyrillic=1102;t.ivowelsignbengali=2495;t.ivowelsigndeva=2367;t.ivowelsigngujarati=2751;t.izhitsacyrillic=1141;t.izhitsadblgravecyrillic=1143;t.j=106;t.jaarmenian=1393;t.jabengali=2460;t.jadeva=2332;t.jagujarati=2716;t.jagurmukhi=2588;t.jbopomofo=12560;t.jcaron=496;t.jcircle=9433;t.jcircumflex=309;t.jcrossedtail=669;t.jdotlessstroke=607;t.jecyrillic=1112;t.jeemarabic=1580;t.jeemfinalarabic=65182;t.jeeminitialarabic=65183;t.jeemmedialarabic=65184;t.jeharabic=1688;t.jehfinalarabic=64395;t.jhabengali=2461;t.jhadeva=2333;t.jhagujarati=2717;t.jhagurmukhi=2589;t.jheharmenian=1403;t.jis=12292;t.jmonospace=65354;t.jparen=9381;t.jsuperior=690;t.k=107;t.kabashkircyrillic=1185;t.kabengali=2453;t.kacute=7729;t.kacyrillic=1082;t.kadescendercyrillic=1179;t.kadeva=2325;t.kaf=1499;t.kafarabic=1603;t.kafdagesh=64315;t.kafdageshhebrew=64315;t.kaffinalarabic=65242;t.kafhebrew=1499;t.kafinitialarabic=65243;t.kafmedialarabic=65244;t.kafrafehebrew=64333;t.kagujarati=2709;t.kagurmukhi=2581;t.kahiragana=12363;t.kahookcyrillic=1220;t.kakatakana=12459;t.kakatakanahalfwidth=65398;t.kappa=954;t.kappasymbolgreek=1008;t.kapyeounmieumkorean=12657;t.kapyeounphieuphkorean=12676;t.kapyeounpieupkorean=12664;t.kapyeounssangpieupkorean=12665;t.karoriisquare=13069;t.kashidaautoarabic=1600;t.kashidaautonosidebearingarabic=1600;t.kasmallkatakana=12533;t.kasquare=13188;t.kasraarabic=1616;t.kasratanarabic=1613;t.kastrokecyrillic=1183;t.katahiraprolongmarkhalfwidth=65392;t.kaverticalstrokecyrillic=1181;t.kbopomofo=12558;t.kcalsquare=13193;t.kcaron=489;t.kcedilla=311;t.kcircle=9434;t.kcommaaccent=311;t.kdotbelow=7731;t.keharmenian=1412;t.kehiragana=12369;t.kekatakana=12465;t.kekatakanahalfwidth=65401;t.kenarmenian=1391;t.kesmallkatakana=12534;t.kgreenlandic=312;t.khabengali=2454;t.khacyrillic=1093;t.khadeva=2326;t.khagujarati=2710;t.khagurmukhi=2582;t.khaharabic=1582;t.khahfinalarabic=65190;t.khahinitialarabic=65191;t.khahmedialarabic=65192;t.kheicoptic=999;t.khhadeva=2393;t.khhagurmukhi=2649;t.khieukhacirclekorean=12920;t.khieukhaparenkorean=12824;t.khieukhcirclekorean=12906;t.khieukhkorean=12619;t.khieukhparenkorean=12810;t.khokhaithai=3586;t.khokhonthai=3589;t.khokhuatthai=3587;t.khokhwaithai=3588;t.khomutthai=3675;t.khook=409;t.khorakhangthai=3590;t.khzsquare=13201;t.kihiragana=12365;t.kikatakana=12461;t.kikatakanahalfwidth=65399;t.kiroguramusquare=13077;t.kiromeetorusquare=13078;t.kirosquare=13076;t.kiyeokacirclekorean=12910;t.kiyeokaparenkorean=12814;t.kiyeokcirclekorean=12896;t.kiyeokkorean=12593;t.kiyeokparenkorean=12800;t.kiyeoksioskorean=12595;t.kjecyrillic=1116;t.klinebelow=7733;t.klsquare=13208;t.kmcubedsquare=13222;t.kmonospace=65355;t.kmsquaredsquare=13218;t.kohiragana=12371;t.kohmsquare=13248;t.kokaithai=3585;t.kokatakana=12467;t.kokatakanahalfwidth=65402;t.kooposquare=13086;t.koppacyrillic=1153;t.koreanstandardsymbol=12927;t.koroniscmb=835;t.kparen=9382;t.kpasquare=13226;t.ksicyrillic=1135;t.ktsquare=13263;t.kturned=670;t.kuhiragana=12367;t.kukatakana=12463;t.kukatakanahalfwidth=65400;t.kvsquare=13240;t.kwsquare=13246;t.l=108;t.labengali=2482;t.lacute=314;t.ladeva=2354;t.lagujarati=2738;t.lagurmukhi=2610;t.lakkhangyaothai=3653;t.lamaleffinalarabic=65276;t.lamalefhamzaabovefinalarabic=65272;t.lamalefhamzaaboveisolatedarabic=65271;t.lamalefhamzabelowfinalarabic=65274;t.lamalefhamzabelowisolatedarabic=65273;t.lamalefisolatedarabic=65275;t.lamalefmaddaabovefinalarabic=65270;t.lamalefmaddaaboveisolatedarabic=65269;t.lamarabic=1604;t.lambda=955;t.lambdastroke=411;t.lamed=1500;t.lameddagesh=64316;t.lameddageshhebrew=64316;t.lamedhebrew=1500;t.lamfinalarabic=65246;t.lamhahinitialarabic=64714;t.laminitialarabic=65247;t.lamjeeminitialarabic=64713;t.lamkhahinitialarabic=64715;t.lamlamhehisolatedarabic=65010;t.lammedialarabic=65248;t.lammeemhahinitialarabic=64904;t.lammeeminitialarabic=64716;t.largecircle=9711;t.lbar=410;t.lbelt=620;t.lbopomofo=12556;t.lcaron=318;t.lcedilla=316;t.lcircle=9435;t.lcircumflexbelow=7741;t.lcommaaccent=316;t.ldot=320;t.ldotaccent=320;t.ldotbelow=7735;t.ldotbelowmacron=7737;t.leftangleabovecmb=794;t.lefttackbelowcmb=792;t.less=60;t.lessequal=8804;t.lessequalorgreater=8922;t.lessmonospace=65308;t.lessorequivalent=8818;t.lessorgreater=8822;t.lessoverequal=8806;t.lesssmall=65124;t.lezh=622;t.lfblock=9612;t.lhookretroflex=621;t.lira=8356;t.liwnarmenian=1388;t.lj=457;t.ljecyrillic=1113;t.ll=63168;t.lladeva=2355;t.llagujarati=2739;t.llinebelow=7739;t.llladeva=2356;t.llvocalicbengali=2529;t.llvocalicdeva=2401;t.llvocalicvowelsignbengali=2531;t.llvocalicvowelsigndeva=2403;t.lmiddletilde=619;t.lmonospace=65356;t.lmsquare=13264;t.lochulathai=3628;t.logicaland=8743;t.logicalnot=172;t.logicalnotreversed=8976;t.logicalor=8744;t.lolingthai=3621;t.longs=383;t.lowlinecenterline=65102;t.lowlinecmb=818;t.lowlinedashed=65101;t.lozenge=9674;t.lparen=9383;t.lslash=322;t.lsquare=8467;t.lsuperior=63214;t.ltshade=9617;t.luthai=3622;t.lvocalicbengali=2444;t.lvocalicdeva=2316;t.lvocalicvowelsignbengali=2530;t.lvocalicvowelsigndeva=2402;t.lxsquare=13267;t.m=109;t.mabengali=2478;t.macron=175;t.macronbelowcmb=817;t.macroncmb=772;t.macronlowmod=717;t.macronmonospace=65507;t.macute=7743;t.madeva=2350;t.magujarati=2734;t.magurmukhi=2606;t.mahapakhhebrew=1444;t.mahapakhlefthebrew=1444;t.mahiragana=12414;t.maichattawalowleftthai=63637;t.maichattawalowrightthai=63636;t.maichattawathai=3659;t.maichattawaupperleftthai=63635;t.maieklowleftthai=63628;t.maieklowrightthai=63627;t.maiekthai=3656;t.maiekupperleftthai=63626;t.maihanakatleftthai=63620;t.maihanakatthai=3633;t.maitaikhuleftthai=63625;t.maitaikhuthai=3655;t.maitholowleftthai=63631;t.maitholowrightthai=63630;t.maithothai=3657;t.maithoupperleftthai=63629;t.maitrilowleftthai=63634;t.maitrilowrightthai=63633;t.maitrithai=3658;t.maitriupperleftthai=63632;t.maiyamokthai=3654;t.makatakana=12510;t.makatakanahalfwidth=65423;t.male=9794;t.mansyonsquare=13127;t.maqafhebrew=1470;t.mars=9794;t.masoracirclehebrew=1455;t.masquare=13187;t.mbopomofo=12551;t.mbsquare=13268;t.mcircle=9436;t.mcubedsquare=13221;t.mdotaccent=7745;t.mdotbelow=7747;t.meemarabic=1605;t.meemfinalarabic=65250;t.meeminitialarabic=65251;t.meemmedialarabic=65252;t.meemmeeminitialarabic=64721;t.meemmeemisolatedarabic=64584;t.meetorusquare=13133;t.mehiragana=12417;t.meizierasquare=13182;t.mekatakana=12513;t.mekatakanahalfwidth=65426;t.mem=1502;t.memdagesh=64318;t.memdageshhebrew=64318;t.memhebrew=1502;t.menarmenian=1396;t.merkhahebrew=1445;t.merkhakefulahebrew=1446;t.merkhakefulalefthebrew=1446;t.merkhalefthebrew=1445;t.mhook=625;t.mhzsquare=13202;t.middledotkatakanahalfwidth=65381;t.middot=183;t.mieumacirclekorean=12914;t.mieumaparenkorean=12818;t.mieumcirclekorean=12900;t.mieumkorean=12609;t.mieumpansioskorean=12656;t.mieumparenkorean=12804;t.mieumpieupkorean=12654;t.mieumsioskorean=12655;t.mihiragana=12415;t.mikatakana=12511;t.mikatakanahalfwidth=65424;t.minus=8722;t.minusbelowcmb=800;t.minuscircle=8854;t.minusmod=727;t.minusplus=8723;t.minute=8242;t.miribaarusquare=13130;t.mirisquare=13129;t.mlonglegturned=624;t.mlsquare=13206;t.mmcubedsquare=13219;t.mmonospace=65357;t.mmsquaredsquare=13215;t.mohiragana=12418;t.mohmsquare=13249;t.mokatakana=12514;t.mokatakanahalfwidth=65427;t.molsquare=13270;t.momathai=3617;t.moverssquare=13223;t.moverssquaredsquare=13224;t.mparen=9384;t.mpasquare=13227;t.mssquare=13235;t.msuperior=63215;t.mturned=623;t.mu=181;t.mu1=181;t.muasquare=13186;t.muchgreater=8811;t.muchless=8810;t.mufsquare=13196;t.mugreek=956;t.mugsquare=13197;t.muhiragana=12416;t.mukatakana=12512;t.mukatakanahalfwidth=65425;t.mulsquare=13205;t.multiply=215;t.mumsquare=13211;t.munahhebrew=1443;t.munahlefthebrew=1443;t.musicalnote=9834;t.musicalnotedbl=9835;t.musicflatsign=9837;t.musicsharpsign=9839;t.mussquare=13234;t.muvsquare=13238;t.muwsquare=13244;t.mvmegasquare=13241;t.mvsquare=13239;t.mwmegasquare=13247;t.mwsquare=13245;t.n=110;t.nabengali=2472;t.nabla=8711;t.nacute=324;t.nadeva=2344;t.nagujarati=2728;t.nagurmukhi=2600;t.nahiragana=12394;t.nakatakana=12490;t.nakatakanahalfwidth=65413;t.napostrophe=329;t.nasquare=13185;t.nbopomofo=12555;t.nbspace=160;t.ncaron=328;t.ncedilla=326;t.ncircle=9437;t.ncircumflexbelow=7755;t.ncommaaccent=326;t.ndotaccent=7749;t.ndotbelow=7751;t.nehiragana=12397;t.nekatakana=12493;t.nekatakanahalfwidth=65416;t.newsheqelsign=8362;t.nfsquare=13195;t.ngabengali=2457;t.ngadeva=2329;t.ngagujarati=2713;t.ngagurmukhi=2585;t.ngonguthai=3591;t.nhiragana=12435;t.nhookleft=626;t.nhookretroflex=627;t.nieunacirclekorean=12911;t.nieunaparenkorean=12815;t.nieuncieuckorean=12597;t.nieuncirclekorean=12897;t.nieunhieuhkorean=12598;t.nieunkorean=12596;t.nieunpansioskorean=12648;t.nieunparenkorean=12801;t.nieunsioskorean=12647;t.nieuntikeutkorean=12646;t.nihiragana=12395;t.nikatakana=12491;t.nikatakanahalfwidth=65414;t.nikhahitleftthai=63641;t.nikhahitthai=3661;t.nine=57;t.ninearabic=1641;t.ninebengali=2543;t.ninecircle=9320;t.ninecircleinversesansserif=10130;t.ninedeva=2415;t.ninegujarati=2799;t.ninegurmukhi=2671;t.ninehackarabic=1641;t.ninehangzhou=12329;t.nineideographicparen=12840;t.nineinferior=8329;t.ninemonospace=65305;t.nineoldstyle=63289;t.nineparen=9340;t.nineperiod=9360;t.ninepersian=1785;t.nineroman=8568;t.ninesuperior=8313;t.nineteencircle=9330;t.nineteenparen=9350;t.nineteenperiod=9370;t.ninethai=3673;t.nj=460;t.njecyrillic=1114;t.nkatakana=12531;t.nkatakanahalfwidth=65437;t.nlegrightlong=414;t.nlinebelow=7753;t.nmonospace=65358;t.nmsquare=13210;t.nnabengali=2467;t.nnadeva=2339;t.nnagujarati=2723;t.nnagurmukhi=2595;t.nnnadeva=2345;t.nohiragana=12398;t.nokatakana=12494;t.nokatakanahalfwidth=65417;t.nonbreakingspace=160;t.nonenthai=3603;t.nonuthai=3609;t.noonarabic=1606;t.noonfinalarabic=65254;t.noonghunnaarabic=1722;t.noonghunnafinalarabic=64415;t.nooninitialarabic=65255;t.noonjeeminitialarabic=64722;t.noonjeemisolatedarabic=64587;t.noonmedialarabic=65256;t.noonmeeminitialarabic=64725;t.noonmeemisolatedarabic=64590;t.noonnoonfinalarabic=64653;t.notcontains=8716;t.notelement=8713;t.notelementof=8713;t.notequal=8800;t.notgreater=8815;t.notgreaternorequal=8817;t.notgreaternorless=8825;t.notidentical=8802;t.notless=8814;t.notlessnorequal=8816;t.notparallel=8742;t.notprecedes=8832;t.notsubset=8836;t.notsucceeds=8833;t.notsuperset=8837;t.nowarmenian=1398;t.nparen=9385;t.nssquare=13233;t.nsuperior=8319;t.ntilde=241;t.nu=957;t.nuhiragana=12396;t.nukatakana=12492;t.nukatakanahalfwidth=65415;t.nuktabengali=2492;t.nuktadeva=2364;t.nuktagujarati=2748;t.nuktagurmukhi=2620;t.numbersign=35;t.numbersignmonospace=65283;t.numbersignsmall=65119;t.numeralsigngreek=884;t.numeralsignlowergreek=885;t.numero=8470;t.nun=1504;t.nundagesh=64320;t.nundageshhebrew=64320;t.nunhebrew=1504;t.nvsquare=13237;t.nwsquare=13243;t.nyabengali=2462;t.nyadeva=2334;t.nyagujarati=2718;t.nyagurmukhi=2590;t.o=111;t.oacute=243;t.oangthai=3629;t.obarred=629;t.obarredcyrillic=1257;t.obarreddieresiscyrillic=1259;t.obengali=2451;t.obopomofo=12571;t.obreve=335;t.ocandradeva=2321;t.ocandragujarati=2705;t.ocandravowelsigndeva=2377;t.ocandravowelsigngujarati=2761;t.ocaron=466;t.ocircle=9438;t.ocircumflex=244;t.ocircumflexacute=7889;t.ocircumflexdotbelow=7897;t.ocircumflexgrave=7891;t.ocircumflexhookabove=7893;t.ocircumflextilde=7895;t.ocyrillic=1086;t.odblacute=337;t.odblgrave=525;t.odeva=2323;t.odieresis=246;t.odieresiscyrillic=1255;t.odotbelow=7885;t.oe=339;t.oekorean=12634;t.ogonek=731;t.ogonekcmb=808;t.ograve=242;t.ogujarati=2707;t.oharmenian=1413;t.ohiragana=12362;t.ohookabove=7887;t.ohorn=417;t.ohornacute=7899;t.ohorndotbelow=7907;t.ohorngrave=7901;t.ohornhookabove=7903;t.ohorntilde=7905;t.ohungarumlaut=337;t.oi=419;t.oinvertedbreve=527;t.okatakana=12458;t.okatakanahalfwidth=65397;t.okorean=12631;t.olehebrew=1451;t.omacron=333;t.omacronacute=7763;t.omacrongrave=7761;t.omdeva=2384;t.omega=969;t.omega1=982;t.omegacyrillic=1121;t.omegalatinclosed=631;t.omegaroundcyrillic=1147;t.omegatitlocyrillic=1149;t.omegatonos=974;t.omgujarati=2768;t.omicron=959;t.omicrontonos=972;t.omonospace=65359;t.one=49;t.onearabic=1633;t.onebengali=2535;t.onecircle=9312;t.onecircleinversesansserif=10122;t.onedeva=2407;t.onedotenleader=8228;t.oneeighth=8539;t.onefitted=63196;t.onegujarati=2791;t.onegurmukhi=2663;t.onehackarabic=1633;t.onehalf=189;t.onehangzhou=12321;t.oneideographicparen=12832;t.oneinferior=8321;t.onemonospace=65297;t.onenumeratorbengali=2548;t.oneoldstyle=63281;t.oneparen=9332;t.oneperiod=9352;t.onepersian=1777;t.onequarter=188;t.oneroman=8560;t.onesuperior=185;t.onethai=3665;t.onethird=8531;t.oogonek=491;t.oogonekmacron=493;t.oogurmukhi=2579;t.oomatragurmukhi=2635;t.oopen=596;t.oparen=9386;t.openbullet=9702;t.option=8997;t.ordfeminine=170;t.ordmasculine=186;t.orthogonal=8735;t.oshortdeva=2322;t.oshortvowelsigndeva=2378;t.oslash=248;t.oslashacute=511;t.osmallhiragana=12361;t.osmallkatakana=12457;t.osmallkatakanahalfwidth=65387;t.ostrokeacute=511;t.osuperior=63216;t.otcyrillic=1151;t.otilde=245;t.otildeacute=7757;t.otildedieresis=7759;t.oubopomofo=12577;t.overline=8254;t.overlinecenterline=65098;t.overlinecmb=773;t.overlinedashed=65097;t.overlinedblwavy=65100;t.overlinewavy=65099;t.overscore=175;t.ovowelsignbengali=2507;t.ovowelsigndeva=2379;t.ovowelsigngujarati=2763;t.p=112;t.paampssquare=13184;t.paasentosquare=13099;t.pabengali=2474;t.pacute=7765;t.padeva=2346;t.pagedown=8671;t.pageup=8670;t.pagujarati=2730;t.pagurmukhi=2602;t.pahiragana=12401;t.paiyannoithai=3631;t.pakatakana=12497;t.palatalizationcyrilliccmb=1156;t.palochkacyrillic=1216;t.pansioskorean=12671;t.paragraph=182;t.parallel=8741;t.parenleft=40;t.parenleftaltonearabic=64830;t.parenleftbt=63725;t.parenleftex=63724;t.parenleftinferior=8333;t.parenleftmonospace=65288;t.parenleftsmall=65113;t.parenleftsuperior=8317;t.parenlefttp=63723;t.parenleftvertical=65077;t.parenright=41;t.parenrightaltonearabic=64831;t.parenrightbt=63736;t.parenrightex=63735;t.parenrightinferior=8334;t.parenrightmonospace=65289;t.parenrightsmall=65114;t.parenrightsuperior=8318;t.parenrighttp=63734;t.parenrightvertical=65078;t.partialdiff=8706;t.paseqhebrew=1472;t.pashtahebrew=1433;t.pasquare=13225;t.patah=1463;t.patah11=1463;t.patah1d=1463;t.patah2a=1463;t.patahhebrew=1463;t.patahnarrowhebrew=1463;t.patahquarterhebrew=1463;t.patahwidehebrew=1463;t.pazerhebrew=1441;t.pbopomofo=12550;t.pcircle=9439;t.pdotaccent=7767;t.pe=1508;t.pecyrillic=1087;t.pedagesh=64324;t.pedageshhebrew=64324;t.peezisquare=13115;t.pefinaldageshhebrew=64323;t.peharabic=1662;t.peharmenian=1402;t.pehebrew=1508;t.pehfinalarabic=64343;t.pehinitialarabic=64344;t.pehiragana=12410;t.pehmedialarabic=64345;t.pekatakana=12506;t.pemiddlehookcyrillic=1191;t.perafehebrew=64334;t.percent=37;t.percentarabic=1642;t.percentmonospace=65285;t.percentsmall=65130;t.period=46;t.periodarmenian=1417;t.periodcentered=183;t.periodhalfwidth=65377;t.periodinferior=63207;t.periodmonospace=65294;t.periodsmall=65106;t.periodsuperior=63208;t.perispomenigreekcmb=834;t.perpendicular=8869;t.perthousand=8240;t.peseta=8359;t.pfsquare=13194;t.phabengali=2475;t.phadeva=2347;t.phagujarati=2731;t.phagurmukhi=2603;t.phi=966;t.phi1=981;t.phieuphacirclekorean=12922;t.phieuphaparenkorean=12826;t.phieuphcirclekorean=12908;t.phieuphkorean=12621;t.phieuphparenkorean=12812;t.philatin=632;t.phinthuthai=3642;t.phisymbolgreek=981;t.phook=421;t.phophanthai=3614;t.phophungthai=3612;t.phosamphaothai=3616;t.pi=960;t.pieupacirclekorean=12915;t.pieupaparenkorean=12819;t.pieupcieuckorean=12662;t.pieupcirclekorean=12901;t.pieupkiyeokkorean=12658;t.pieupkorean=12610;t.pieupparenkorean=12805;t.pieupsioskiyeokkorean=12660;t.pieupsioskorean=12612;t.pieupsiostikeutkorean=12661;t.pieupthieuthkorean=12663;t.pieuptikeutkorean=12659;t.pihiragana=12404;t.pikatakana=12500;t.pisymbolgreek=982;t.piwrarmenian=1411;t.planckover2pi=8463;t.planckover2pi1=8463;t.plus=43;t.plusbelowcmb=799;t.pluscircle=8853;t.plusminus=177;t.plusmod=726;t.plusmonospace=65291;t.plussmall=65122;t.plussuperior=8314;t.pmonospace=65360;t.pmsquare=13272;t.pohiragana=12413;t.pointingindexdownwhite=9759;t.pointingindexleftwhite=9756;t.pointingindexrightwhite=9758;t.pointingindexupwhite=9757;t.pokatakana=12509;t.poplathai=3611;t.postalmark=12306;t.postalmarkface=12320;t.pparen=9387;t.precedes=8826;t.prescription=8478;t.primemod=697;t.primereversed=8245;t.product=8719;t.projective=8965;t.prolongedkana=12540;t.propellor=8984;t.propersubset=8834;t.propersuperset=8835;t.proportion=8759;t.proportional=8733;t.psi=968;t.psicyrillic=1137;t.psilipneumatacyrilliccmb=1158;t.pssquare=13232;t.puhiragana=12407;t.pukatakana=12503;t.pvsquare=13236;t.pwsquare=13242;t.q=113;t.qadeva=2392;t.qadmahebrew=1448;t.qafarabic=1602;t.qaffinalarabic=65238;t.qafinitialarabic=65239;t.qafmedialarabic=65240;t.qamats=1464;t.qamats10=1464;t.qamats1a=1464;t.qamats1c=1464;t.qamats27=1464;t.qamats29=1464;t.qamats33=1464;t.qamatsde=1464;t.qamatshebrew=1464;t.qamatsnarrowhebrew=1464;t.qamatsqatanhebrew=1464;t.qamatsqatannarrowhebrew=1464;t.qamatsqatanquarterhebrew=1464;t.qamatsqatanwidehebrew=1464;t.qamatsquarterhebrew=1464;t.qamatswidehebrew=1464;t.qarneyparahebrew=1439;t.qbopomofo=12561;t.qcircle=9440;t.qhook=672;t.qmonospace=65361;t.qof=1511;t.qofdagesh=64327;t.qofdageshhebrew=64327;t.qofhebrew=1511;t.qparen=9388;t.quarternote=9833;t.qubuts=1467;t.qubuts18=1467;t.qubuts25=1467;t.qubuts31=1467;t.qubutshebrew=1467;t.qubutsnarrowhebrew=1467;t.qubutsquarterhebrew=1467;t.qubutswidehebrew=1467;t.question=63;t.questionarabic=1567;t.questionarmenian=1374;t.questiondown=191;t.questiondownsmall=63423;t.questiongreek=894;t.questionmonospace=65311;t.questionsmall=63295;t.quotedbl=34;t.quotedblbase=8222;t.quotedblleft=8220;t.quotedblmonospace=65282;t.quotedblprime=12318;t.quotedblprimereversed=12317;t.quotedblright=8221;t.quoteleft=8216;t.quoteleftreversed=8219;t.quotereversed=8219;t.quoteright=8217;t.quoterightn=329;t.quotesinglbase=8218;t.quotesingle=39;t.quotesinglemonospace=65287;t.r=114;t.raarmenian=1404;t.rabengali=2480;t.racute=341;t.radeva=2352;t.radical=8730;t.radicalex=63717;t.radoverssquare=13230;t.radoverssquaredsquare=13231;t.radsquare=13229;t.rafe=1471;t.rafehebrew=1471;t.ragujarati=2736;t.ragurmukhi=2608;t.rahiragana=12425;t.rakatakana=12521;t.rakatakanahalfwidth=65431;t.ralowerdiagonalbengali=2545;t.ramiddlediagonalbengali=2544;t.ramshorn=612;t.ratio=8758;t.rbopomofo=12566;t.rcaron=345;t.rcedilla=343;t.rcircle=9441;t.rcommaaccent=343;t.rdblgrave=529;t.rdotaccent=7769;t.rdotbelow=7771;t.rdotbelowmacron=7773;t.referencemark=8251;t.reflexsubset=8838;t.reflexsuperset=8839;t.registered=174;t.registersans=63720;t.registerserif=63194;t.reharabic=1585;t.reharmenian=1408;t.rehfinalarabic=65198;t.rehiragana=12428;t.rekatakana=12524;t.rekatakanahalfwidth=65434;t.resh=1512;t.reshdageshhebrew=64328;t.reshhebrew=1512;t.reversedtilde=8765;t.reviahebrew=1431;t.reviamugrashhebrew=1431;t.revlogicalnot=8976;t.rfishhook=638;t.rfishhookreversed=639;t.rhabengali=2525;t.rhadeva=2397;t.rho=961;t.rhook=637;t.rhookturned=635;t.rhookturnedsuperior=693;t.rhosymbolgreek=1009;t.rhotichookmod=734;t.rieulacirclekorean=12913;t.rieulaparenkorean=12817;t.rieulcirclekorean=12899;t.rieulhieuhkorean=12608;t.rieulkiyeokkorean=12602;t.rieulkiyeoksioskorean=12649;t.rieulkorean=12601;t.rieulmieumkorean=12603;t.rieulpansioskorean=12652;t.rieulparenkorean=12803;t.rieulphieuphkorean=12607;t.rieulpieupkorean=12604;t.rieulpieupsioskorean=12651;t.rieulsioskorean=12605;t.rieulthieuthkorean=12606;t.rieultikeutkorean=12650;t.rieulyeorinhieuhkorean=12653;t.rightangle=8735;t.righttackbelowcmb=793;t.righttriangle=8895;t.rihiragana=12426;t.rikatakana=12522;t.rikatakanahalfwidth=65432;t.ring=730;t.ringbelowcmb=805;t.ringcmb=778;t.ringhalfleft=703;t.ringhalfleftarmenian=1369;t.ringhalfleftbelowcmb=796;t.ringhalfleftcentered=723;t.ringhalfright=702;t.ringhalfrightbelowcmb=825;t.ringhalfrightcentered=722;t.rinvertedbreve=531;t.rittorusquare=13137;t.rlinebelow=7775;t.rlongleg=636;t.rlonglegturned=634;t.rmonospace=65362;t.rohiragana=12429;t.rokatakana=12525;t.rokatakanahalfwidth=65435;t.roruathai=3619;t.rparen=9389;t.rrabengali=2524;t.rradeva=2353;t.rragurmukhi=2652;t.rreharabic=1681;t.rrehfinalarabic=64397;t.rrvocalicbengali=2528;t.rrvocalicdeva=2400;t.rrvocalicgujarati=2784;t.rrvocalicvowelsignbengali=2500;t.rrvocalicvowelsigndeva=2372;t.rrvocalicvowelsigngujarati=2756;t.rsuperior=63217;t.rtblock=9616;t.rturned=633;t.rturnedsuperior=692;t.ruhiragana=12427;t.rukatakana=12523;t.rukatakanahalfwidth=65433;t.rupeemarkbengali=2546;t.rupeesignbengali=2547;t.rupiah=63197;t.ruthai=3620;t.rvocalicbengali=2443;t.rvocalicdeva=2315;t.rvocalicgujarati=2699;t.rvocalicvowelsignbengali=2499;t.rvocalicvowelsigndeva=2371;t.rvocalicvowelsigngujarati=2755;t.s=115;t.sabengali=2488;t.sacute=347;t.sacutedotaccent=7781;t.sadarabic=1589;t.sadeva=2360;t.sadfinalarabic=65210;t.sadinitialarabic=65211;t.sadmedialarabic=65212;t.sagujarati=2744;t.sagurmukhi=2616;t.sahiragana=12373;t.sakatakana=12469;t.sakatakanahalfwidth=65403;t.sallallahoualayhewasallamarabic=65018;t.samekh=1505;t.samekhdagesh=64321;t.samekhdageshhebrew=64321;t.samekhhebrew=1505;t.saraaathai=3634;t.saraaethai=3649;t.saraaimaimalaithai=3652;t.saraaimaimuanthai=3651;t.saraamthai=3635;t.saraathai=3632;t.saraethai=3648;t.saraiileftthai=63622;t.saraiithai=3637;t.saraileftthai=63621;t.saraithai=3636;t.saraothai=3650;t.saraueeleftthai=63624;t.saraueethai=3639;t.saraueleftthai=63623;t.sarauethai=3638;t.sarauthai=3640;t.sarauuthai=3641;t.sbopomofo=12569;t.scaron=353;t.scarondotaccent=7783;t.scedilla=351;t.schwa=601;t.schwacyrillic=1241;t.schwadieresiscyrillic=1243;t.schwahook=602;t.scircle=9442;t.scircumflex=349;t.scommaaccent=537;t.sdotaccent=7777;t.sdotbelow=7779;t.sdotbelowdotaccent=7785;t.seagullbelowcmb=828;t.second=8243;t.secondtonechinese=714;t.section=167;t.seenarabic=1587;t.seenfinalarabic=65202;t.seeninitialarabic=65203;t.seenmedialarabic=65204;t.segol=1462;t.segol13=1462;t.segol1f=1462;t.segol2c=1462;t.segolhebrew=1462;t.segolnarrowhebrew=1462;t.segolquarterhebrew=1462;t.segoltahebrew=1426;t.segolwidehebrew=1462;t.seharmenian=1405;t.sehiragana=12379;t.sekatakana=12475;t.sekatakanahalfwidth=65406;t.semicolon=59;t.semicolonarabic=1563;t.semicolonmonospace=65307;t.semicolonsmall=65108;t.semivoicedmarkkana=12444;t.semivoicedmarkkanahalfwidth=65439;t.sentisquare=13090;t.sentosquare=13091;t.seven=55;t.sevenarabic=1639;t.sevenbengali=2541;t.sevencircle=9318;t.sevencircleinversesansserif=10128;t.sevendeva=2413;t.seveneighths=8542;t.sevengujarati=2797;t.sevengurmukhi=2669;t.sevenhackarabic=1639;t.sevenhangzhou=12327;t.sevenideographicparen=12838;t.seveninferior=8327;t.sevenmonospace=65303;t.sevenoldstyle=63287;t.sevenparen=9338;t.sevenperiod=9358;t.sevenpersian=1783;t.sevenroman=8566;t.sevensuperior=8311;t.seventeencircle=9328;t.seventeenparen=9348;t.seventeenperiod=9368;t.seventhai=3671;t.sfthyphen=173;t.shaarmenian=1399;t.shabengali=2486;t.shacyrillic=1096;t.shaddaarabic=1617;t.shaddadammaarabic=64609;t.shaddadammatanarabic=64606;t.shaddafathaarabic=64608;t.shaddakasraarabic=64610;t.shaddakasratanarabic=64607;t.shade=9618;t.shadedark=9619;t.shadelight=9617;t.shademedium=9618;t.shadeva=2358;t.shagujarati=2742;t.shagurmukhi=2614;t.shalshelethebrew=1427;t.shbopomofo=12565;t.shchacyrillic=1097;t.sheenarabic=1588;t.sheenfinalarabic=65206;t.sheeninitialarabic=65207;t.sheenmedialarabic=65208;t.sheicoptic=995;t.sheqel=8362;t.sheqelhebrew=8362;t.sheva=1456;t.sheva115=1456;t.sheva15=1456;t.sheva22=1456;t.sheva2e=1456;t.shevahebrew=1456;t.shevanarrowhebrew=1456;t.shevaquarterhebrew=1456;t.shevawidehebrew=1456;t.shhacyrillic=1211;t.shimacoptic=1005;t.shin=1513;t.shindagesh=64329;t.shindageshhebrew=64329;t.shindageshshindot=64300;t.shindageshshindothebrew=64300;t.shindageshsindot=64301;t.shindageshsindothebrew=64301;t.shindothebrew=1473;t.shinhebrew=1513;t.shinshindot=64298;t.shinshindothebrew=64298;t.shinsindot=64299;t.shinsindothebrew=64299;t.shook=642;t.sigma=963;t.sigma1=962;t.sigmafinal=962;t.sigmalunatesymbolgreek=1010;t.sihiragana=12375;t.sikatakana=12471;t.sikatakanahalfwidth=65404;t.siluqhebrew=1469;t.siluqlefthebrew=1469;t.similar=8764;t.sindothebrew=1474;t.siosacirclekorean=12916;t.siosaparenkorean=12820;t.sioscieuckorean=12670;t.sioscirclekorean=12902;t.sioskiyeokkorean=12666;t.sioskorean=12613;t.siosnieunkorean=12667;t.siosparenkorean=12806;t.siospieupkorean=12669;t.siostikeutkorean=12668;t.six=54;t.sixarabic=1638;t.sixbengali=2540;t.sixcircle=9317;t.sixcircleinversesansserif=10127;t.sixdeva=2412;t.sixgujarati=2796;t.sixgurmukhi=2668;t.sixhackarabic=1638;t.sixhangzhou=12326;t.sixideographicparen=12837;t.sixinferior=8326;t.sixmonospace=65302;t.sixoldstyle=63286;t.sixparen=9337;t.sixperiod=9357;t.sixpersian=1782;t.sixroman=8565;t.sixsuperior=8310;t.sixteencircle=9327;t.sixteencurrencydenominatorbengali=2553;t.sixteenparen=9347;t.sixteenperiod=9367;t.sixthai=3670;t.slash=47;t.slashmonospace=65295;t.slong=383;t.slongdotaccent=7835;t.smileface=9786;t.smonospace=65363;t.sofpasuqhebrew=1475;t.softhyphen=173;t.softsigncyrillic=1100;t.sohiragana=12381;t.sokatakana=12477;t.sokatakanahalfwidth=65407;t.soliduslongoverlaycmb=824;t.solidusshortoverlaycmb=823;t.sorusithai=3625;t.sosalathai=3624;t.sosothai=3595;t.sosuathai=3626;t.space=32;t.spacehackarabic=32;t.spade=9824;t.spadesuitblack=9824;t.spadesuitwhite=9828;t.sparen=9390;t.squarebelowcmb=827;t.squarecc=13252;t.squarecm=13213;t.squarediagonalcrosshatchfill=9641;t.squarehorizontalfill=9636;t.squarekg=13199;t.squarekm=13214;t.squarekmcapital=13262;t.squareln=13265;t.squarelog=13266;t.squaremg=13198;t.squaremil=13269;t.squaremm=13212;t.squaremsquared=13217;t.squareorthogonalcrosshatchfill=9638;t.squareupperlefttolowerrightfill=9639;t.squareupperrighttolowerleftfill=9640;t.squareverticalfill=9637;t.squarewhitewithsmallblack=9635;t.srsquare=13275;t.ssabengali=2487;t.ssadeva=2359;t.ssagujarati=2743;t.ssangcieuckorean=12617;t.ssanghieuhkorean=12677;t.ssangieungkorean=12672;t.ssangkiyeokkorean=12594;t.ssangnieunkorean=12645;t.ssangpieupkorean=12611;t.ssangsioskorean=12614;t.ssangtikeutkorean=12600;t.ssuperior=63218;t.sterling=163;t.sterlingmonospace=65505;t.strokelongoverlaycmb=822;t.strokeshortoverlaycmb=821;t.subset=8834;t.subsetnotequal=8842;t.subsetorequal=8838;t.succeeds=8827;t.suchthat=8715;t.suhiragana=12377;t.sukatakana=12473;t.sukatakanahalfwidth=65405;t.sukunarabic=1618;t.summation=8721;t.sun=9788;t.superset=8835;t.supersetnotequal=8843;t.supersetorequal=8839;t.svsquare=13276;t.syouwaerasquare=13180;t.t=116;t.tabengali=2468;t.tackdown=8868;t.tackleft=8867;t.tadeva=2340;t.tagujarati=2724;t.tagurmukhi=2596;t.taharabic=1591;t.tahfinalarabic=65218;t.tahinitialarabic=65219;t.tahiragana=12383;t.tahmedialarabic=65220;t.taisyouerasquare=13181;t.takatakana=12479;t.takatakanahalfwidth=65408;t.tatweelarabic=1600;t.tau=964;t.tav=1514;t.tavdages=64330;t.tavdagesh=64330;t.tavdageshhebrew=64330;t.tavhebrew=1514;t.tbar=359;t.tbopomofo=12554;t.tcaron=357;t.tccurl=680;t.tcedilla=355;t.tcheharabic=1670;t.tchehfinalarabic=64379;t.tchehinitialarabic=64380;t.tchehmedialarabic=64381;t.tcircle=9443;t.tcircumflexbelow=7793;t.tcommaaccent=355;t.tdieresis=7831;t.tdotaccent=7787;t.tdotbelow=7789;t.tecyrillic=1090;t.tedescendercyrillic=1197;t.teharabic=1578;t.tehfinalarabic=65174;t.tehhahinitialarabic=64674;t.tehhahisolatedarabic=64524;t.tehinitialarabic=65175;t.tehiragana=12390;t.tehjeeminitialarabic=64673;t.tehjeemisolatedarabic=64523;t.tehmarbutaarabic=1577;t.tehmarbutafinalarabic=65172;t.tehmedialarabic=65176;t.tehmeeminitialarabic=64676;t.tehmeemisolatedarabic=64526;t.tehnoonfinalarabic=64627;t.tekatakana=12486;t.tekatakanahalfwidth=65411;t.telephone=8481;t.telephoneblack=9742;t.telishagedolahebrew=1440;t.telishaqetanahebrew=1449;t.tencircle=9321;t.tenideographicparen=12841;t.tenparen=9341;t.tenperiod=9361;t.tenroman=8569;t.tesh=679;t.tet=1496;t.tetdagesh=64312;t.tetdageshhebrew=64312;t.tethebrew=1496;t.tetsecyrillic=1205;t.tevirhebrew=1435;t.tevirlefthebrew=1435;t.thabengali=2469;t.thadeva=2341;t.thagujarati=2725;t.thagurmukhi=2597;t.thalarabic=1584;t.thalfinalarabic=65196;t.thanthakhatlowleftthai=63640;t.thanthakhatlowrightthai=63639;t.thanthakhatthai=3660;t.thanthakhatupperleftthai=63638;t.theharabic=1579;t.thehfinalarabic=65178;t.thehinitialarabic=65179;t.thehmedialarabic=65180;t.thereexists=8707;t.therefore=8756;t.theta=952;t.theta1=977;t.thetasymbolgreek=977;t.thieuthacirclekorean=12921;t.thieuthaparenkorean=12825;t.thieuthcirclekorean=12907;t.thieuthkorean=12620;t.thieuthparenkorean=12811;t.thirteencircle=9324;t.thirteenparen=9344;t.thirteenperiod=9364;t.thonangmonthothai=3601;t.thook=429;t.thophuthaothai=3602;t.thorn=254;t.thothahanthai=3607;t.thothanthai=3600;t.thothongthai=3608;t.thothungthai=3606;t.thousandcyrillic=1154;t.thousandsseparatorarabic=1644;t.thousandsseparatorpersian=1644;t.three=51;t.threearabic=1635;t.threebengali=2537;t.threecircle=9314;t.threecircleinversesansserif=10124;t.threedeva=2409;t.threeeighths=8540;t.threegujarati=2793;t.threegurmukhi=2665;t.threehackarabic=1635;t.threehangzhou=12323;t.threeideographicparen=12834;t.threeinferior=8323;t.threemonospace=65299;t.threenumeratorbengali=2550;t.threeoldstyle=63283;t.threeparen=9334;t.threeperiod=9354;t.threepersian=1779;t.threequarters=190;t.threequartersemdash=63198;t.threeroman=8562;t.threesuperior=179;t.threethai=3667;t.thzsquare=13204;t.tihiragana=12385;t.tikatakana=12481;t.tikatakanahalfwidth=65409;t.tikeutacirclekorean=12912;t.tikeutaparenkorean=12816;t.tikeutcirclekorean=12898;t.tikeutkorean=12599;t.tikeutparenkorean=12802;t.tilde=732;t.tildebelowcmb=816;t.tildecmb=771;t.tildecomb=771;t.tildedoublecmb=864;t.tildeoperator=8764;t.tildeoverlaycmb=820;t.tildeverticalcmb=830;t.timescircle=8855;t.tipehahebrew=1430;t.tipehalefthebrew=1430;t.tippigurmukhi=2672;t.titlocyrilliccmb=1155;t.tiwnarmenian=1407;t.tlinebelow=7791;t.tmonospace=65364;t.toarmenian=1385;t.tohiragana=12392;t.tokatakana=12488;t.tokatakanahalfwidth=65412;t.tonebarextrahighmod=741;t.tonebarextralowmod=745;t.tonebarhighmod=742;t.tonebarlowmod=744;t.tonebarmidmod=743;t.tonefive=445;t.tonesix=389;t.tonetwo=424;t.tonos=900;t.tonsquare=13095;t.topatakthai=3599;t.tortoiseshellbracketleft=12308;t.tortoiseshellbracketleftsmall=65117;t.tortoiseshellbracketleftvertical=65081;t.tortoiseshellbracketright=12309;t.tortoiseshellbracketrightsmall=65118;t.tortoiseshellbracketrightvertical=65082;t.totaothai=3605;t.tpalatalhook=427;t.tparen=9391;t.trademark=8482;t.trademarksans=63722;t.trademarkserif=63195;t.tretroflexhook=648;t.triagdn=9660;t.triaglf=9668;t.triagrt=9658;t.triagup=9650;t.ts=678;t.tsadi=1510;t.tsadidagesh=64326;t.tsadidageshhebrew=64326;t.tsadihebrew=1510;t.tsecyrillic=1094;t.tsere=1461;t.tsere12=1461;t.tsere1e=1461;t.tsere2b=1461;t.tserehebrew=1461;t.tserenarrowhebrew=1461;t.tserequarterhebrew=1461;t.tserewidehebrew=1461;t.tshecyrillic=1115;t.tsuperior=63219;t.ttabengali=2463;t.ttadeva=2335;t.ttagujarati=2719;t.ttagurmukhi=2591;t.tteharabic=1657;t.ttehfinalarabic=64359;t.ttehinitialarabic=64360;t.ttehmedialarabic=64361;t.tthabengali=2464;t.tthadeva=2336;t.tthagujarati=2720;t.tthagurmukhi=2592;t.tturned=647;t.tuhiragana=12388;t.tukatakana=12484;t.tukatakanahalfwidth=65410;t.tusmallhiragana=12387;t.tusmallkatakana=12483;t.tusmallkatakanahalfwidth=65391;t.twelvecircle=9323;t.twelveparen=9343;t.twelveperiod=9363;t.twelveroman=8571;t.twentycircle=9331;t.twentyhangzhou=21316;t.twentyparen=9351;t.twentyperiod=9371;t.two=50;t.twoarabic=1634;t.twobengali=2536;t.twocircle=9313;t.twocircleinversesansserif=10123;t.twodeva=2408;t.twodotenleader=8229;t.twodotleader=8229;t.twodotleadervertical=65072;t.twogujarati=2792;t.twogurmukhi=2664;t.twohackarabic=1634;t.twohangzhou=12322;t.twoideographicparen=12833;t.twoinferior=8322;t.twomonospace=65298;t.twonumeratorbengali=2549;t.twooldstyle=63282;t.twoparen=9333;t.twoperiod=9353;t.twopersian=1778;t.tworoman=8561;t.twostroke=443;t.twosuperior=178;t.twothai=3666;t.twothirds=8532;t.u=117;t.uacute=250;t.ubar=649;t.ubengali=2441;t.ubopomofo=12584;t.ubreve=365;t.ucaron=468;t.ucircle=9444;t.ucircumflex=251;t.ucircumflexbelow=7799;t.ucyrillic=1091;t.udattadeva=2385;t.udblacute=369;t.udblgrave=533;t.udeva=2313;t.udieresis=252;t.udieresisacute=472;t.udieresisbelow=7795;t.udieresiscaron=474;t.udieresiscyrillic=1265;t.udieresisgrave=476;t.udieresismacron=470;t.udotbelow=7909;t.ugrave=249;t.ugujarati=2697;t.ugurmukhi=2569;t.uhiragana=12358;t.uhookabove=7911;t.uhorn=432;t.uhornacute=7913;t.uhorndotbelow=7921;t.uhorngrave=7915;t.uhornhookabove=7917;t.uhorntilde=7919;t.uhungarumlaut=369;t.uhungarumlautcyrillic=1267;t.uinvertedbreve=535;t.ukatakana=12454;t.ukatakanahalfwidth=65395;t.ukcyrillic=1145;t.ukorean=12636;t.umacron=363;t.umacroncyrillic=1263;t.umacrondieresis=7803;t.umatragurmukhi=2625;t.umonospace=65365;t.underscore=95;t.underscoredbl=8215;t.underscoremonospace=65343;t.underscorevertical=65075;t.underscorewavy=65103;t.union=8746;t.universal=8704;t.uogonek=371;t.uparen=9392;t.upblock=9600;t.upperdothebrew=1476;t.upsilon=965;t.upsilondieresis=971;t.upsilondieresistonos=944;t.upsilonlatin=650;t.upsilontonos=973;t.uptackbelowcmb=797;t.uptackmod=724;t.uragurmukhi=2675;t.uring=367;t.ushortcyrillic=1118;t.usmallhiragana=12357;t.usmallkatakana=12453;t.usmallkatakanahalfwidth=65385;t.ustraightcyrillic=1199;t.ustraightstrokecyrillic=1201;t.utilde=361;t.utildeacute=7801;t.utildebelow=7797;t.uubengali=2442;t.uudeva=2314;t.uugujarati=2698;t.uugurmukhi=2570;t.uumatragurmukhi=2626;t.uuvowelsignbengali=2498;t.uuvowelsigndeva=2370;t.uuvowelsigngujarati=2754;t.uvowelsignbengali=2497;t.uvowelsigndeva=2369;t.uvowelsigngujarati=2753;t.v=118;t.vadeva=2357;t.vagujarati=2741;t.vagurmukhi=2613;t.vakatakana=12535;t.vav=1493;t.vavdagesh=64309;t.vavdagesh65=64309;t.vavdageshhebrew=64309;t.vavhebrew=1493;t.vavholam=64331;t.vavholamhebrew=64331;t.vavvavhebrew=1520;t.vavyodhebrew=1521;t.vcircle=9445;t.vdotbelow=7807;t.vecyrillic=1074;t.veharabic=1700;t.vehfinalarabic=64363;t.vehinitialarabic=64364;t.vehmedialarabic=64365;t.vekatakana=12537;t.venus=9792;t.verticalbar=124;t.verticallineabovecmb=781;t.verticallinebelowcmb=809;t.verticallinelowmod=716;t.verticallinemod=712;t.vewarmenian=1406;t.vhook=651;t.vikatakana=12536;t.viramabengali=2509;t.viramadeva=2381;t.viramagujarati=2765;t.visargabengali=2435;t.visargadeva=2307;t.visargagujarati=2691;t.vmonospace=65366;t.voarmenian=1400;t.voicediterationhiragana=12446;t.voicediterationkatakana=12542;t.voicedmarkkana=12443;t.voicedmarkkanahalfwidth=65438;t.vokatakana=12538;t.vparen=9393;t.vtilde=7805;t.vturned=652;t.vuhiragana=12436;t.vukatakana=12532;t.w=119;t.wacute=7811;t.waekorean=12633;t.wahiragana=12431;t.wakatakana=12527;t.wakatakanahalfwidth=65436;t.wakorean=12632;t.wasmallhiragana=12430;t.wasmallkatakana=12526;t.wattosquare=13143;t.wavedash=12316;t.wavyunderscorevertical=65076;t.wawarabic=1608;t.wawfinalarabic=65262;t.wawhamzaabovearabic=1572;t.wawhamzaabovefinalarabic=65158;t.wbsquare=13277;t.wcircle=9446;t.wcircumflex=373;t.wdieresis=7813;t.wdotaccent=7815;t.wdotbelow=7817;t.wehiragana=12433;t.weierstrass=8472;t.wekatakana=12529;t.wekorean=12638;t.weokorean=12637;t.wgrave=7809;t.whitebullet=9702;t.whitecircle=9675;t.whitecircleinverse=9689;t.whitecornerbracketleft=12302;t.whitecornerbracketleftvertical=65091;t.whitecornerbracketright=12303;t.whitecornerbracketrightvertical=65092;t.whitediamond=9671;t.whitediamondcontainingblacksmalldiamond=9672;t.whitedownpointingsmalltriangle=9663;t.whitedownpointingtriangle=9661;t.whiteleftpointingsmalltriangle=9667;t.whiteleftpointingtriangle=9665;t.whitelenticularbracketleft=12310;t.whitelenticularbracketright=12311;t.whiterightpointingsmalltriangle=9657;t.whiterightpointingtriangle=9655;t.whitesmallsquare=9643;t.whitesmilingface=9786;t.whitesquare=9633;t.whitestar=9734;t.whitetelephone=9743;t.whitetortoiseshellbracketleft=12312;t.whitetortoiseshellbracketright=12313;t.whiteuppointingsmalltriangle=9653;t.whiteuppointingtriangle=9651;t.wihiragana=12432;t.wikatakana=12528;t.wikorean=12639;t.wmonospace=65367;t.wohiragana=12434;t.wokatakana=12530;t.wokatakanahalfwidth=65382;t.won=8361;t.wonmonospace=65510;t.wowaenthai=3623;t.wparen=9394;t.wring=7832;t.wsuperior=695;t.wturned=653;t.wynn=447;t.x=120;t.xabovecmb=829;t.xbopomofo=12562;t.xcircle=9447;t.xdieresis=7821;t.xdotaccent=7819;t.xeharmenian=1389;t.xi=958;t.xmonospace=65368;t.xparen=9395;t.xsuperior=739;t.y=121;t.yaadosquare=13134;t.yabengali=2479;t.yacute=253;t.yadeva=2351;t.yaekorean=12626;t.yagujarati=2735;t.yagurmukhi=2607;t.yahiragana=12420;t.yakatakana=12516;t.yakatakanahalfwidth=65428;t.yakorean=12625;t.yamakkanthai=3662;t.yasmallhiragana=12419;t.yasmallkatakana=12515;t.yasmallkatakanahalfwidth=65388;t.yatcyrillic=1123;t.ycircle=9448;t.ycircumflex=375;t.ydieresis=255;t.ydotaccent=7823;t.ydotbelow=7925;t.yeharabic=1610;t.yehbarreearabic=1746;t.yehbarreefinalarabic=64431;t.yehfinalarabic=65266;t.yehhamzaabovearabic=1574;t.yehhamzaabovefinalarabic=65162;t.yehhamzaaboveinitialarabic=65163;t.yehhamzaabovemedialarabic=65164;t.yehinitialarabic=65267;t.yehmedialarabic=65268;t.yehmeeminitialarabic=64733;t.yehmeemisolatedarabic=64600;t.yehnoonfinalarabic=64660;t.yehthreedotsbelowarabic=1745;t.yekorean=12630;t.yen=165;t.yenmonospace=65509;t.yeokorean=12629;t.yeorinhieuhkorean=12678;t.yerahbenyomohebrew=1450;t.yerahbenyomolefthebrew=1450;t.yericyrillic=1099;t.yerudieresiscyrillic=1273;t.yesieungkorean=12673;t.yesieungpansioskorean=12675;t.yesieungsioskorean=12674;t.yetivhebrew=1434;t.ygrave=7923;t.yhook=436;t.yhookabove=7927;t.yiarmenian=1397;t.yicyrillic=1111;t.yikorean=12642;t.yinyang=9775;t.yiwnarmenian=1410;t.ymonospace=65369;t.yod=1497;t.yoddagesh=64313;t.yoddageshhebrew=64313;t.yodhebrew=1497;t.yodyodhebrew=1522;t.yodyodpatahhebrew=64287;t.yohiragana=12424;t.yoikorean=12681;t.yokatakana=12520;t.yokatakanahalfwidth=65430;t.yokorean=12635;t.yosmallhiragana=12423;t.yosmallkatakana=12519;t.yosmallkatakanahalfwidth=65390;t.yotgreek=1011;t.yoyaekorean=12680;t.yoyakorean=12679;t.yoyakthai=3618;t.yoyingthai=3597;t.yparen=9396;t.ypogegrammeni=890;t.ypogegrammenigreekcmb=837;t.yr=422;t.yring=7833;t.ysuperior=696;t.ytilde=7929;t.yturned=654;t.yuhiragana=12422;t.yuikorean=12684;t.yukatakana=12518;t.yukatakanahalfwidth=65429;t.yukorean=12640;t.yusbigcyrillic=1131;t.yusbigiotifiedcyrillic=1133;t.yuslittlecyrillic=1127;t.yuslittleiotifiedcyrillic=1129;t.yusmallhiragana=12421;t.yusmallkatakana=12517;t.yusmallkatakanahalfwidth=65389;t.yuyekorean=12683;t.yuyeokorean=12682;t.yyabengali=2527;t.yyadeva=2399;t.z=122;t.zaarmenian=1382;t.zacute=378;t.zadeva=2395;t.zagurmukhi=2651;t.zaharabic=1592;t.zahfinalarabic=65222;t.zahinitialarabic=65223;t.zahiragana=12374;t.zahmedialarabic=65224;t.zainarabic=1586;t.zainfinalarabic=65200;t.zakatakana=12470;t.zaqefgadolhebrew=1429;t.zaqefqatanhebrew=1428;t.zarqahebrew=1432;t.zayin=1494;t.zayindagesh=64310;t.zayindageshhebrew=64310;t.zayinhebrew=1494;t.zbopomofo=12567;t.zcaron=382;t.zcircle=9449;t.zcircumflex=7825;t.zcurl=657;t.zdot=380;t.zdotaccent=380;t.zdotbelow=7827;t.zecyrillic=1079;t.zedescendercyrillic=1177;t.zedieresiscyrillic=1247;t.zehiragana=12380;t.zekatakana=12476;t.zero=48;t.zeroarabic=1632;t.zerobengali=2534;t.zerodeva=2406;t.zerogujarati=2790;t.zerogurmukhi=2662;t.zerohackarabic=1632;t.zeroinferior=8320;t.zeromonospace=65296;t.zerooldstyle=63280;t.zeropersian=1776;t.zerosuperior=8304;t.zerothai=3664;t.zerowidthjoiner=65279;t.zerowidthnonjoiner=8204;t.zerowidthspace=8203;t.zeta=950;t.zhbopomofo=12563;t.zhearmenian=1386;t.zhebrevecyrillic=1218;t.zhecyrillic=1078;t.zhedescendercyrillic=1175;t.zhedieresiscyrillic=1245;t.zihiragana=12376;t.zikatakana=12472;t.zinorhebrew=1454;t.zlinebelow=7829;t.zmonospace=65370;t.zohiragana=12382;t.zokatakana=12478;t.zparen=9397;t.zretroflexhook=656;t.zstroke=438;t.zuhiragana=12378;t.zukatakana=12474;t[\".notdef\"]=0;t.angbracketleftbig=9001;t.angbracketleftBig=9001;t.angbracketleftbigg=9001;t.angbracketleftBigg=9001;t.angbracketrightBig=9002;t.angbracketrightbig=9002;t.angbracketrightBigg=9002;t.angbracketrightbigg=9002;t.arrowhookleft=8618;t.arrowhookright=8617;t.arrowlefttophalf=8636;t.arrowleftbothalf=8637;t.arrownortheast=8599;t.arrownorthwest=8598;t.arrowrighttophalf=8640;t.arrowrightbothalf=8641;t.arrowsoutheast=8600;t.arrowsouthwest=8601;t.backslashbig=8726;t.backslashBig=8726;t.backslashBigg=8726;t.backslashbigg=8726;t.bardbl=8214;t.bracehtipdownleft=65079;t.bracehtipdownright=65079;t.bracehtipupleft=65080;t.bracehtipupright=65080;t.braceleftBig=123;t.braceleftbig=123;t.braceleftbigg=123;t.braceleftBigg=123;t.bracerightBig=125;t.bracerightbig=125;t.bracerightbigg=125;t.bracerightBigg=125;t.bracketleftbig=91;t.bracketleftBig=91;t.bracketleftbigg=91;t.bracketleftBigg=91;t.bracketrightBig=93;t.bracketrightbig=93;t.bracketrightbigg=93;t.bracketrightBigg=93;t.ceilingleftbig=8968;t.ceilingleftBig=8968;t.ceilingleftBigg=8968;t.ceilingleftbigg=8968;t.ceilingrightbig=8969;t.ceilingrightBig=8969;t.ceilingrightbigg=8969;t.ceilingrightBigg=8969;t.circledotdisplay=8857;t.circledottext=8857;t.circlemultiplydisplay=8855;t.circlemultiplytext=8855;t.circleplusdisplay=8853;t.circleplustext=8853;t.contintegraldisplay=8750;t.contintegraltext=8750;t.coproductdisplay=8720;t.coproducttext=8720;t.floorleftBig=8970;t.floorleftbig=8970;t.floorleftbigg=8970;t.floorleftBigg=8970;t.floorrightbig=8971;t.floorrightBig=8971;t.floorrightBigg=8971;t.floorrightbigg=8971;t.hatwide=770;t.hatwider=770;t.hatwidest=770;t.intercal=7488;t.integraldisplay=8747;t.integraltext=8747;t.intersectiondisplay=8898;t.intersectiontext=8898;t.logicalanddisplay=8743;t.logicalandtext=8743;t.logicalordisplay=8744;t.logicalortext=8744;t.parenleftBig=40;t.parenleftbig=40;t.parenleftBigg=40;t.parenleftbigg=40;t.parenrightBig=41;t.parenrightbig=41;t.parenrightBigg=41;t.parenrightbigg=41;t.prime=8242;t.productdisplay=8719;t.producttext=8719;t.radicalbig=8730;t.radicalBig=8730;t.radicalBigg=8730;t.radicalbigg=8730;t.radicalbt=8730;t.radicaltp=8730;t.radicalvertex=8730;t.slashbig=47;t.slashBig=47;t.slashBigg=47;t.slashbigg=47;t.summationdisplay=8721;t.summationtext=8721;t.tildewide=732;t.tildewider=732;t.tildewidest=732;t.uniondisplay=8899;t.unionmultidisplay=8846;t.unionmultitext=8846;t.unionsqdisplay=8852;t.unionsqtext=8852;t.uniontext=8899;t.vextenddouble=8741;t.vextendsingle=8739}));const getDingbatsGlyphsUnicode=getLookupTableFactory((function(t){t.space=32;t.a1=9985;t.a2=9986;t.a202=9987;t.a3=9988;t.a4=9742;t.a5=9990;t.a119=9991;t.a118=9992;t.a117=9993;t.a11=9755;t.a12=9758;t.a13=9996;t.a14=9997;t.a15=9998;t.a16=9999;t.a105=1e4;t.a17=10001;t.a18=10002;t.a19=10003;t.a20=10004;t.a21=10005;t.a22=10006;t.a23=10007;t.a24=10008;t.a25=10009;t.a26=10010;t.a27=10011;t.a28=10012;t.a6=10013;t.a7=10014;t.a8=10015;t.a9=10016;t.a10=10017;t.a29=10018;t.a30=10019;t.a31=10020;t.a32=10021;t.a33=10022;t.a34=10023;t.a35=9733;t.a36=10025;t.a37=10026;t.a38=10027;t.a39=10028;t.a40=10029;t.a41=10030;t.a42=10031;t.a43=10032;t.a44=10033;t.a45=10034;t.a46=10035;t.a47=10036;t.a48=10037;t.a49=10038;t.a50=10039;t.a51=10040;t.a52=10041;t.a53=10042;t.a54=10043;t.a55=10044;t.a56=10045;t.a57=10046;t.a58=10047;t.a59=10048;t.a60=10049;t.a61=10050;t.a62=10051;t.a63=10052;t.a64=10053;t.a65=10054;t.a66=10055;t.a67=10056;t.a68=10057;t.a69=10058;t.a70=10059;t.a71=9679;t.a72=10061;t.a73=9632;t.a74=10063;t.a203=10064;t.a75=10065;t.a204=10066;t.a76=9650;t.a77=9660;t.a78=9670;t.a79=10070;t.a81=9687;t.a82=10072;t.a83=10073;t.a84=10074;t.a97=10075;t.a98=10076;t.a99=10077;t.a100=10078;t.a101=10081;t.a102=10082;t.a103=10083;t.a104=10084;t.a106=10085;t.a107=10086;t.a108=10087;t.a112=9827;t.a111=9830;t.a110=9829;t.a109=9824;t.a120=9312;t.a121=9313;t.a122=9314;t.a123=9315;t.a124=9316;t.a125=9317;t.a126=9318;t.a127=9319;t.a128=9320;t.a129=9321;t.a130=10102;t.a131=10103;t.a132=10104;t.a133=10105;t.a134=10106;t.a135=10107;t.a136=10108;t.a137=10109;t.a138=10110;t.a139=10111;t.a140=10112;t.a141=10113;t.a142=10114;t.a143=10115;t.a144=10116;t.a145=10117;t.a146=10118;t.a147=10119;t.a148=10120;t.a149=10121;t.a150=10122;t.a151=10123;t.a152=10124;t.a153=10125;t.a154=10126;t.a155=10127;t.a156=10128;t.a157=10129;t.a158=10130;t.a159=10131;t.a160=10132;t.a161=8594;t.a163=8596;t.a164=8597;t.a196=10136;t.a165=10137;t.a192=10138;t.a166=10139;t.a167=10140;t.a168=10141;t.a169=10142;t.a170=10143;t.a171=10144;t.a172=10145;t.a173=10146;t.a162=10147;t.a174=10148;t.a175=10149;t.a176=10150;t.a177=10151;t.a178=10152;t.a179=10153;t.a193=10154;t.a180=10155;t.a199=10156;t.a181=10157;t.a200=10158;t.a182=10159;t.a201=10161;t.a183=10162;t.a184=10163;t.a197=10164;t.a185=10165;t.a194=10166;t.a198=10167;t.a186=10168;t.a195=10169;t.a187=10170;t.a188=10171;t.a189=10172;t.a190=10173;t.a191=10174;t.a89=10088;t.a90=10089;t.a93=10090;t.a94=10091;t.a91=10092;t.a92=10093;t.a205=10094;t.a85=10095;t.a206=10096;t.a86=10097;t.a87=10098;t.a88=10099;t.a95=10100;t.a96=10101;t[\".notdef\"]=0}));const getSpecialPUASymbols=getLookupTableFactory((function(t){t[63721]=169;t[63193]=169;t[63720]=174;t[63194]=174;t[63722]=8482;t[63195]=8482;t[63729]=9127;t[63730]=9128;t[63731]=9129;t[63740]=9131;t[63741]=9132;t[63742]=9133;t[63726]=9121;t[63727]=9122;t[63728]=9123;t[63737]=9124;t[63738]=9125;t[63739]=9126;t[63723]=9115;t[63724]=9116;t[63725]=9117;t[63734]=9118;t[63735]=9119;t[63736]=9120}));function mapSpecialUnicodeValues(code){if(code>=65520&&code<=65535){return 0}else if(code>=62976&&code<=63743){return getSpecialPUASymbols()[code]||code}else if(code===173){return 45}return code}function getUnicodeForGlyph(name,glyphsUnicodeMap){let unicode=glyphsUnicodeMap[name];if(unicode!==undefined){return unicode}if(!name){return-1}if(name[0]===\"u\"){const nameLen=name.length;let hexStr;if(nameLen===7&&name[1]===\"n\"&&name[2]===\"i\"){hexStr=name.substring(3)}else if(nameLen>=5&&nameLen<=7){hexStr=name.substring(1)}else{return-1}if(hexStr===hexStr.toUpperCase()){unicode=parseInt(hexStr,16);if(unicode>=0){return unicode}}}return-1}const UnicodeRanges=[[0,127],[128,255],[256,383],[384,591],[592,687,7424,7551,7552,7615],[688,767,42752,42783],[768,879,7616,7679],[880,1023],[11392,11519],[1024,1279,1280,1327,11744,11775,42560,42655],[1328,1423],[1424,1535],[42240,42559],[1536,1791,1872,1919],[1984,2047],[2304,2431],[2432,2559],[2560,2687],[2688,2815],[2816,2943],[2944,3071],[3072,3199],[3200,3327],[3328,3455],[3584,3711],[3712,3839],[4256,4351,11520,11567],[6912,7039],[4352,4607],[7680,7935,11360,11391,42784,43007],[7936,8191],[8192,8303,11776,11903],[8304,8351],[8352,8399],[8400,8447],[8448,8527],[8528,8591],[8592,8703,10224,10239,10496,10623,11008,11263],[8704,8959,10752,11007,10176,10223,10624,10751],[8960,9215],[9216,9279],[9280,9311],[9312,9471],[9472,9599],[9600,9631],[9632,9727],[9728,9983],[9984,10175],[12288,12351],[12352,12447],[12448,12543,12784,12799],[12544,12591,12704,12735],[12592,12687],[43072,43135],[12800,13055],[13056,13311],[44032,55215],[55296,57343],[67840,67871],[19968,40959,11904,12031,12032,12255,12272,12287,13312,19903,131072,173791,12688,12703],[57344,63743],[12736,12783,63744,64255,194560,195103],[64256,64335],[64336,65023],[65056,65071],[65040,65055],[65104,65135],[65136,65279],[65280,65519],[65520,65535],[3840,4095],[1792,1871],[1920,1983],[3456,3583],[4096,4255],[4608,4991,4992,5023,11648,11743],[5024,5119],[5120,5759],[5760,5791],[5792,5887],[6016,6143],[6144,6319],[10240,10495],[40960,42127],[5888,5919,5920,5951,5952,5983,5984,6015],[66304,66351],[66352,66383],[66560,66639],[118784,119039,119040,119295,119296,119375],[119808,120831],[1044480,1048573],[65024,65039,917760,917999],[917504,917631],[6400,6479],[6480,6527],[6528,6623],[6656,6687],[11264,11359],[11568,11647],[19904,19967],[43008,43055],[65536,65663,65664,65791,65792,65855],[65856,65935],[66432,66463],[66464,66527],[66640,66687],[66688,66735],[67584,67647],[68096,68191],[119552,119647],[73728,74751,74752,74879],[119648,119679],[7040,7103],[7168,7247],[7248,7295],[43136,43231],[43264,43311],[43312,43359],[43520,43615],[65936,65999],[66e3,66047],[66208,66271,66176,66207,67872,67903],[127024,127135,126976,127023]];function getUnicodeRangeFor(value,lastPosition=-1){if(lastPosition!==-1){const range=UnicodeRanges[lastPosition];for(let i=0,ii=range.length;i<ii;i+=2){if(value>=range[i]&&value<=range[i+1]){return lastPosition}}}for(let i=0,ii=UnicodeRanges.length;i<ii;i++){const range=UnicodeRanges[i];for(let j=0,jj=range.length;j<jj;j+=2){if(value>=range[j]&&value<=range[j+1]){return i}}}return-1}const SpecialCharRegExp=new RegExp(\"^(\\\\s)|(\\\\p{Mn})|(\\\\p{Cf})$\",\"u\");const CategoryCache=new Map;function getCharUnicodeCategory(char){const cachedCategory=CategoryCache.get(char);if(cachedCategory){return cachedCategory}const groups=char.match(SpecialCharRegExp);const category={isWhitespace:!!groups?.[1],isZeroWidthDiacritic:!!groups?.[2],isInvisibleFormatMark:!!groups?.[3]};CategoryCache.set(char,category);return category}function clearUnicodeCaches(){CategoryCache.clear()}const SEAC_ANALYSIS_ENABLED=true;const FontFlags={FixedPitch:1,Serif:2,Symbolic:4,Script:8,Nonsymbolic:32,Italic:64,AllCap:65536,SmallCap:131072,ForceBold:262144};const MacStandardGlyphOrdering=[\".notdef\",\".null\",\"nonmarkingreturn\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quotesingle\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"grave\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"Adieresis\",\"Aring\",\"Ccedilla\",\"Eacute\",\"Ntilde\",\"Odieresis\",\"Udieresis\",\"aacute\",\"agrave\",\"acircumflex\",\"adieresis\",\"atilde\",\"aring\",\"ccedilla\",\"eacute\",\"egrave\",\"ecircumflex\",\"edieresis\",\"iacute\",\"igrave\",\"icircumflex\",\"idieresis\",\"ntilde\",\"oacute\",\"ograve\",\"ocircumflex\",\"odieresis\",\"otilde\",\"uacute\",\"ugrave\",\"ucircumflex\",\"udieresis\",\"dagger\",\"degree\",\"cent\",\"sterling\",\"section\",\"bullet\",\"paragraph\",\"germandbls\",\"registered\",\"copyright\",\"trademark\",\"acute\",\"dieresis\",\"notequal\",\"AE\",\"Oslash\",\"infinity\",\"plusminus\",\"lessequal\",\"greaterequal\",\"yen\",\"mu\",\"partialdiff\",\"summation\",\"product\",\"pi\",\"integral\",\"ordfeminine\",\"ordmasculine\",\"Omega\",\"ae\",\"oslash\",\"questiondown\",\"exclamdown\",\"logicalnot\",\"radical\",\"florin\",\"approxequal\",\"Delta\",\"guillemotleft\",\"guillemotright\",\"ellipsis\",\"nonbreakingspace\",\"Agrave\",\"Atilde\",\"Otilde\",\"OE\",\"oe\",\"endash\",\"emdash\",\"quotedblleft\",\"quotedblright\",\"quoteleft\",\"quoteright\",\"divide\",\"lozenge\",\"ydieresis\",\"Ydieresis\",\"fraction\",\"currency\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"daggerdbl\",\"periodcentered\",\"quotesinglbase\",\"quotedblbase\",\"perthousand\",\"Acircumflex\",\"Ecircumflex\",\"Aacute\",\"Edieresis\",\"Egrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Igrave\",\"Oacute\",\"Ocircumflex\",\"apple\",\"Ograve\",\"Uacute\",\"Ucircumflex\",\"Ugrave\",\"dotlessi\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"ring\",\"cedilla\",\"hungarumlaut\",\"ogonek\",\"caron\",\"Lslash\",\"lslash\",\"Scaron\",\"scaron\",\"Zcaron\",\"zcaron\",\"brokenbar\",\"Eth\",\"eth\",\"Yacute\",\"yacute\",\"Thorn\",\"thorn\",\"minus\",\"multiply\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"onehalf\",\"onequarter\",\"threequarters\",\"franc\",\"Gbreve\",\"gbreve\",\"Idotaccent\",\"Scedilla\",\"scedilla\",\"Cacute\",\"cacute\",\"Ccaron\",\"ccaron\",\"dcroat\"];function recoverGlyphName(name,glyphsUnicodeMap){if(glyphsUnicodeMap[name]!==undefined){return name}const unicode=getUnicodeForGlyph(name,glyphsUnicodeMap);if(unicode!==-1){for(const key in glyphsUnicodeMap){if(glyphsUnicodeMap[key]===unicode){return key}}}info(\"Unable to recover a standard glyph name for: \"+name);return name}function type1FontGlyphMapping(properties,builtInEncoding,glyphNames){const charCodeToGlyphId=Object.create(null);let glyphId,charCode,baseEncoding;const isSymbolicFont=!!(properties.flags&FontFlags.Symbolic);if(properties.isInternalFont){baseEncoding=builtInEncoding;for(charCode=0;charCode<baseEncoding.length;charCode++){glyphId=glyphNames.indexOf(baseEncoding[charCode]);charCodeToGlyphId[charCode]=glyphId>=0?glyphId:0}}else if(properties.baseEncodingName){baseEncoding=getEncoding(properties.baseEncodingName);for(charCode=0;charCode<baseEncoding.length;charCode++){glyphId=glyphNames.indexOf(baseEncoding[charCode]);charCodeToGlyphId[charCode]=glyphId>=0?glyphId:0}}else if(isSymbolicFont){for(charCode in builtInEncoding){charCodeToGlyphId[charCode]=builtInEncoding[charCode]}}else{baseEncoding=StandardEncoding;for(charCode=0;charCode<baseEncoding.length;charCode++){glyphId=glyphNames.indexOf(baseEncoding[charCode]);charCodeToGlyphId[charCode]=glyphId>=0?glyphId:0}}const differences=properties.differences;let glyphsUnicodeMap;if(differences){for(charCode in differences){const glyphName=differences[charCode];glyphId=glyphNames.indexOf(glyphName);if(glyphId===-1){if(!glyphsUnicodeMap){glyphsUnicodeMap=getGlyphsUnicode()}const standardGlyphName=recoverGlyphName(glyphName,glyphsUnicodeMap);if(standardGlyphName!==glyphName){glyphId=glyphNames.indexOf(standardGlyphName)}}charCodeToGlyphId[charCode]=glyphId>=0?glyphId:0}}return charCodeToGlyphId}function normalizeFontName(name){return name.replaceAll(/[,_]/g,\"-\").replaceAll(/\\s/g,\"\")}const getVerticalPresentationForm=getLookupTableFactory((t=>{t[8211]=65074;t[8212]=65073;t[8229]=65072;t[8230]=65049;t[12289]=65041;t[12290]=65042;t[12296]=65087;t[12297]=65088;t[12298]=65085;t[12299]=65086;t[12300]=65089;t[12301]=65090;t[12302]=65091;t[12303]=65092;t[12304]=65083;t[12305]=65084;t[12308]=65081;t[12309]=65082;t[12310]=65047;t[12311]=65048;t[65103]=65076;t[65281]=65045;t[65288]=65077;t[65289]=65078;t[65292]=65040;t[65306]=65043;t[65307]=65044;t[65311]=65046;t[65339]=65095;t[65341]=65096;t[65343]=65075;t[65371]=65079;t[65373]=65080}));const MAX_SIZE_TO_COMPILE=1e3;function compileType3Glyph({data:img,width:width,height:height}){if(width>MAX_SIZE_TO_COMPILE||height>MAX_SIZE_TO_COMPILE){return null}const POINT_TO_PROCESS_LIMIT=1e3;const POINT_TYPES=new Uint8Array([0,2,4,0,1,0,5,4,8,10,0,8,0,2,1,0]);const width1=width+1;const points=new Uint8Array(width1*(height+1));let i,j,j0;const lineSize=width+7&~7;const data=new Uint8Array(lineSize*height);let pos=0;for(const elem of img){let mask=128;while(mask>0){data[pos++]=elem&mask?0:255;mask>>=1}}let count=0;pos=0;if(data[pos]!==0){points[0]=1;++count}for(j=1;j<width;j++){if(data[pos]!==data[pos+1]){points[j]=data[pos]?2:1;++count}pos++}if(data[pos]!==0){points[j]=2;++count}for(i=1;i<height;i++){pos=i*lineSize;j0=i*width1;if(data[pos-lineSize]!==data[pos]){points[j0]=data[pos]?1:8;++count}let sum=(data[pos]?4:0)+(data[pos-lineSize]?8:0);for(j=1;j<width;j++){sum=(sum>>2)+(data[pos+1]?4:0)+(data[pos-lineSize+1]?8:0);if(POINT_TYPES[sum]){points[j0+j]=POINT_TYPES[sum];++count}pos++}if(data[pos-lineSize]!==data[pos]){points[j0+j]=data[pos]?2:4;++count}if(count>POINT_TO_PROCESS_LIMIT){return null}}pos=lineSize*(height-1);j0=i*width1;if(data[pos]!==0){points[j0]=8;++count}for(j=1;j<width;j++){if(data[pos]!==data[pos+1]){points[j0+j]=data[pos]?4:8;++count}pos++}if(data[pos]!==0){points[j0+j]=4;++count}if(count>POINT_TO_PROCESS_LIMIT){return null}const steps=new Int32Array([0,width1,-1,0,-width1,0,0,0,1]);const pathBuf=[];const{a:a,b:b,c:c,d:d,e:e,f:f}=(new DOMMatrix).scaleSelf(1/width,-1/height).translateSelf(0,-height);for(i=0;count&&i<=height;i++){let p=i*width1;const end=p+width;while(p<end&&!points[p]){p++}if(p===end){continue}let x=p%width1;let y=i;pathBuf.push(DrawOPS.moveTo,a*x+c*y+e,b*x+d*y+f);const p0=p;let type=points[p];do{const step=steps[type];do{p+=step}while(!points[p]);const pp=points[p];if(pp!==5&&pp!==10){type=pp;points[p]=0}else{type=pp&51*type>>4;points[p]&=type>>2|type<<2}x=p%width1;y=p/width1|0;pathBuf.push(DrawOPS.lineTo,a*x+c*y+e,b*x+d*y+f);if(!points[p]){--count}}while(p0!==p);--i}return[OPS.rawFillPath,[new Float32Array(pathBuf)],new Float32Array([0,0,width,height])]}const ISOAdobeCharset=[\".notdef\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quoteright\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"quoteleft\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"exclamdown\",\"cent\",\"sterling\",\"fraction\",\"yen\",\"florin\",\"section\",\"currency\",\"quotesingle\",\"quotedblleft\",\"guillemotleft\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"endash\",\"dagger\",\"daggerdbl\",\"periodcentered\",\"paragraph\",\"bullet\",\"quotesinglbase\",\"quotedblbase\",\"quotedblright\",\"guillemotright\",\"ellipsis\",\"perthousand\",\"questiondown\",\"grave\",\"acute\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"dieresis\",\"ring\",\"cedilla\",\"hungarumlaut\",\"ogonek\",\"caron\",\"emdash\",\"AE\",\"ordfeminine\",\"Lslash\",\"Oslash\",\"OE\",\"ordmasculine\",\"ae\",\"dotlessi\",\"lslash\",\"oslash\",\"oe\",\"germandbls\",\"onesuperior\",\"logicalnot\",\"mu\",\"trademark\",\"Eth\",\"onehalf\",\"plusminus\",\"Thorn\",\"onequarter\",\"divide\",\"brokenbar\",\"degree\",\"thorn\",\"threequarters\",\"twosuperior\",\"registered\",\"minus\",\"eth\",\"multiply\",\"threesuperior\",\"copyright\",\"Aacute\",\"Acircumflex\",\"Adieresis\",\"Agrave\",\"Aring\",\"Atilde\",\"Ccedilla\",\"Eacute\",\"Ecircumflex\",\"Edieresis\",\"Egrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Igrave\",\"Ntilde\",\"Oacute\",\"Ocircumflex\",\"Odieresis\",\"Ograve\",\"Otilde\",\"Scaron\",\"Uacute\",\"Ucircumflex\",\"Udieresis\",\"Ugrave\",\"Yacute\",\"Ydieresis\",\"Zcaron\",\"aacute\",\"acircumflex\",\"adieresis\",\"agrave\",\"aring\",\"atilde\",\"ccedilla\",\"eacute\",\"ecircumflex\",\"edieresis\",\"egrave\",\"iacute\",\"icircumflex\",\"idieresis\",\"igrave\",\"ntilde\",\"oacute\",\"ocircumflex\",\"odieresis\",\"ograve\",\"otilde\",\"scaron\",\"uacute\",\"ucircumflex\",\"udieresis\",\"ugrave\",\"yacute\",\"ydieresis\",\"zcaron\"];const ExpertCharset=[\".notdef\",\"space\",\"exclamsmall\",\"Hungarumlautsmall\",\"dollaroldstyle\",\"dollarsuperior\",\"ampersandsmall\",\"Acutesmall\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"comma\",\"hyphen\",\"period\",\"fraction\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"colon\",\"semicolon\",\"commasuperior\",\"threequartersemdash\",\"periodsuperior\",\"questionsmall\",\"asuperior\",\"bsuperior\",\"centsuperior\",\"dsuperior\",\"esuperior\",\"isuperior\",\"lsuperior\",\"msuperior\",\"nsuperior\",\"osuperior\",\"rsuperior\",\"ssuperior\",\"tsuperior\",\"ff\",\"fi\",\"fl\",\"ffi\",\"ffl\",\"parenleftinferior\",\"parenrightinferior\",\"Circumflexsmall\",\"hyphensuperior\",\"Gravesmall\",\"Asmall\",\"Bsmall\",\"Csmall\",\"Dsmall\",\"Esmall\",\"Fsmall\",\"Gsmall\",\"Hsmall\",\"Ismall\",\"Jsmall\",\"Ksmall\",\"Lsmall\",\"Msmall\",\"Nsmall\",\"Osmall\",\"Psmall\",\"Qsmall\",\"Rsmall\",\"Ssmall\",\"Tsmall\",\"Usmall\",\"Vsmall\",\"Wsmall\",\"Xsmall\",\"Ysmall\",\"Zsmall\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"Tildesmall\",\"exclamdownsmall\",\"centoldstyle\",\"Lslashsmall\",\"Scaronsmall\",\"Zcaronsmall\",\"Dieresissmall\",\"Brevesmall\",\"Caronsmall\",\"Dotaccentsmall\",\"Macronsmall\",\"figuredash\",\"hypheninferior\",\"Ogoneksmall\",\"Ringsmall\",\"Cedillasmall\",\"onequarter\",\"onehalf\",\"threequarters\",\"questiondownsmall\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"zerosuperior\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"eightsuperior\",\"ninesuperior\",\"zeroinferior\",\"oneinferior\",\"twoinferior\",\"threeinferior\",\"fourinferior\",\"fiveinferior\",\"sixinferior\",\"seveninferior\",\"eightinferior\",\"nineinferior\",\"centinferior\",\"dollarinferior\",\"periodinferior\",\"commainferior\",\"Agravesmall\",\"Aacutesmall\",\"Acircumflexsmall\",\"Atildesmall\",\"Adieresissmall\",\"Aringsmall\",\"AEsmall\",\"Ccedillasmall\",\"Egravesmall\",\"Eacutesmall\",\"Ecircumflexsmall\",\"Edieresissmall\",\"Igravesmall\",\"Iacutesmall\",\"Icircumflexsmall\",\"Idieresissmall\",\"Ethsmall\",\"Ntildesmall\",\"Ogravesmall\",\"Oacutesmall\",\"Ocircumflexsmall\",\"Otildesmall\",\"Odieresissmall\",\"OEsmall\",\"Oslashsmall\",\"Ugravesmall\",\"Uacutesmall\",\"Ucircumflexsmall\",\"Udieresissmall\",\"Yacutesmall\",\"Thornsmall\",\"Ydieresissmall\"];const ExpertSubsetCharset=[\".notdef\",\"space\",\"dollaroldstyle\",\"dollarsuperior\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"comma\",\"hyphen\",\"period\",\"fraction\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"colon\",\"semicolon\",\"commasuperior\",\"threequartersemdash\",\"periodsuperior\",\"asuperior\",\"bsuperior\",\"centsuperior\",\"dsuperior\",\"esuperior\",\"isuperior\",\"lsuperior\",\"msuperior\",\"nsuperior\",\"osuperior\",\"rsuperior\",\"ssuperior\",\"tsuperior\",\"ff\",\"fi\",\"fl\",\"ffi\",\"ffl\",\"parenleftinferior\",\"parenrightinferior\",\"hyphensuperior\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"centoldstyle\",\"figuredash\",\"hypheninferior\",\"onequarter\",\"onehalf\",\"threequarters\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"zerosuperior\",\"onesuperior\",\"twosuperior\",\"threesuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"eightsuperior\",\"ninesuperior\",\"zeroinferior\",\"oneinferior\",\"twoinferior\",\"threeinferior\",\"fourinferior\",\"fiveinferior\",\"sixinferior\",\"seveninferior\",\"eightinferior\",\"nineinferior\",\"centinferior\",\"dollarinferior\",\"periodinferior\",\"commainferior\"];const MAX_SUBR_NESTING=10;const CFFStandardStrings=[\".notdef\",\"space\",\"exclam\",\"quotedbl\",\"numbersign\",\"dollar\",\"percent\",\"ampersand\",\"quoteright\",\"parenleft\",\"parenright\",\"asterisk\",\"plus\",\"comma\",\"hyphen\",\"period\",\"slash\",\"zero\",\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"colon\",\"semicolon\",\"less\",\"equal\",\"greater\",\"question\",\"at\",\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\",\"bracketleft\",\"backslash\",\"bracketright\",\"asciicircum\",\"underscore\",\"quoteleft\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\"braceleft\",\"bar\",\"braceright\",\"asciitilde\",\"exclamdown\",\"cent\",\"sterling\",\"fraction\",\"yen\",\"florin\",\"section\",\"currency\",\"quotesingle\",\"quotedblleft\",\"guillemotleft\",\"guilsinglleft\",\"guilsinglright\",\"fi\",\"fl\",\"endash\",\"dagger\",\"daggerdbl\",\"periodcentered\",\"paragraph\",\"bullet\",\"quotesinglbase\",\"quotedblbase\",\"quotedblright\",\"guillemotright\",\"ellipsis\",\"perthousand\",\"questiondown\",\"grave\",\"acute\",\"circumflex\",\"tilde\",\"macron\",\"breve\",\"dotaccent\",\"dieresis\",\"ring\",\"cedilla\",\"hungarumlaut\",\"ogonek\",\"caron\",\"emdash\",\"AE\",\"ordfeminine\",\"Lslash\",\"Oslash\",\"OE\",\"ordmasculine\",\"ae\",\"dotlessi\",\"lslash\",\"oslash\",\"oe\",\"germandbls\",\"onesuperior\",\"logicalnot\",\"mu\",\"trademark\",\"Eth\",\"onehalf\",\"plusminus\",\"Thorn\",\"onequarter\",\"divide\",\"brokenbar\",\"degree\",\"thorn\",\"threequarters\",\"twosuperior\",\"registered\",\"minus\",\"eth\",\"multiply\",\"threesuperior\",\"copyright\",\"Aacute\",\"Acircumflex\",\"Adieresis\",\"Agrave\",\"Aring\",\"Atilde\",\"Ccedilla\",\"Eacute\",\"Ecircumflex\",\"Edieresis\",\"Egrave\",\"Iacute\",\"Icircumflex\",\"Idieresis\",\"Igrave\",\"Ntilde\",\"Oacute\",\"Ocircumflex\",\"Odieresis\",\"Ograve\",\"Otilde\",\"Scaron\",\"Uacute\",\"Ucircumflex\",\"Udieresis\",\"Ugrave\",\"Yacute\",\"Ydieresis\",\"Zcaron\",\"aacute\",\"acircumflex\",\"adieresis\",\"agrave\",\"aring\",\"atilde\",\"ccedilla\",\"eacute\",\"ecircumflex\",\"edieresis\",\"egrave\",\"iacute\",\"icircumflex\",\"idieresis\",\"igrave\",\"ntilde\",\"oacute\",\"ocircumflex\",\"odieresis\",\"ograve\",\"otilde\",\"scaron\",\"uacute\",\"ucircumflex\",\"udieresis\",\"ugrave\",\"yacute\",\"ydieresis\",\"zcaron\",\"exclamsmall\",\"Hungarumlautsmall\",\"dollaroldstyle\",\"dollarsuperior\",\"ampersandsmall\",\"Acutesmall\",\"parenleftsuperior\",\"parenrightsuperior\",\"twodotenleader\",\"onedotenleader\",\"zerooldstyle\",\"oneoldstyle\",\"twooldstyle\",\"threeoldstyle\",\"fouroldstyle\",\"fiveoldstyle\",\"sixoldstyle\",\"sevenoldstyle\",\"eightoldstyle\",\"nineoldstyle\",\"commasuperior\",\"threequartersemdash\",\"periodsuperior\",\"questionsmall\",\"asuperior\",\"bsuperior\",\"centsuperior\",\"dsuperior\",\"esuperior\",\"isuperior\",\"lsuperior\",\"msuperior\",\"nsuperior\",\"osuperior\",\"rsuperior\",\"ssuperior\",\"tsuperior\",\"ff\",\"ffi\",\"ffl\",\"parenleftinferior\",\"parenrightinferior\",\"Circumflexsmall\",\"hyphensuperior\",\"Gravesmall\",\"Asmall\",\"Bsmall\",\"Csmall\",\"Dsmall\",\"Esmall\",\"Fsmall\",\"Gsmall\",\"Hsmall\",\"Ismall\",\"Jsmall\",\"Ksmall\",\"Lsmall\",\"Msmall\",\"Nsmall\",\"Osmall\",\"Psmall\",\"Qsmall\",\"Rsmall\",\"Ssmall\",\"Tsmall\",\"Usmall\",\"Vsmall\",\"Wsmall\",\"Xsmall\",\"Ysmall\",\"Zsmall\",\"colonmonetary\",\"onefitted\",\"rupiah\",\"Tildesmall\",\"exclamdownsmall\",\"centoldstyle\",\"Lslashsmall\",\"Scaronsmall\",\"Zcaronsmall\",\"Dieresissmall\",\"Brevesmall\",\"Caronsmall\",\"Dotaccentsmall\",\"Macronsmall\",\"figuredash\",\"hypheninferior\",\"Ogoneksmall\",\"Ringsmall\",\"Cedillasmall\",\"questiondownsmall\",\"oneeighth\",\"threeeighths\",\"fiveeighths\",\"seveneighths\",\"onethird\",\"twothirds\",\"zerosuperior\",\"foursuperior\",\"fivesuperior\",\"sixsuperior\",\"sevensuperior\",\"eightsuperior\",\"ninesuperior\",\"zeroinferior\",\"oneinferior\",\"twoinferior\",\"threeinferior\",\"fourinferior\",\"fiveinferior\",\"sixinferior\",\"seveninferior\",\"eightinferior\",\"nineinferior\",\"centinferior\",\"dollarinferior\",\"periodinferior\",\"commainferior\",\"Agravesmall\",\"Aacutesmall\",\"Acircumflexsmall\",\"Atildesmall\",\"Adieresissmall\",\"Aringsmall\",\"AEsmall\",\"Ccedillasmall\",\"Egravesmall\",\"Eacutesmall\",\"Ecircumflexsmall\",\"Edieresissmall\",\"Igravesmall\",\"Iacutesmall\",\"Icircumflexsmall\",\"Idieresissmall\",\"Ethsmall\",\"Ntildesmall\",\"Ogravesmall\",\"Oacutesmall\",\"Ocircumflexsmall\",\"Otildesmall\",\"Odieresissmall\",\"OEsmall\",\"Oslashsmall\",\"Ugravesmall\",\"Uacutesmall\",\"Ucircumflexsmall\",\"Udieresissmall\",\"Yacutesmall\",\"Thornsmall\",\"Ydieresissmall\",\"001.000\",\"001.001\",\"001.002\",\"001.003\",\"Black\",\"Bold\",\"Book\",\"Light\",\"Medium\",\"Regular\",\"Roman\",\"Semibold\"];const NUM_STANDARD_CFF_STRINGS=391;const CharstringValidationData=[null,{id:\"hstem\",min:2,stackClearing:true,stem:true},null,{id:\"vstem\",min:2,stackClearing:true,stem:true},{id:\"vmoveto\",min:1,stackClearing:true},{id:\"rlineto\",min:2,resetStack:true},{id:\"hlineto\",min:1,resetStack:true},{id:\"vlineto\",min:1,resetStack:true},{id:\"rrcurveto\",min:6,resetStack:true},null,{id:\"callsubr\",min:1,undefStack:true},{id:\"return\",min:0,undefStack:true},null,null,{id:\"endchar\",min:0,stackClearing:true},null,null,null,{id:\"hstemhm\",min:2,stackClearing:true,stem:true},{id:\"hintmask\",min:0,stackClearing:true},{id:\"cntrmask\",min:0,stackClearing:true},{id:\"rmoveto\",min:2,stackClearing:true},{id:\"hmoveto\",min:1,stackClearing:true},{id:\"vstemhm\",min:2,stackClearing:true,stem:true},{id:\"rcurveline\",min:8,resetStack:true},{id:\"rlinecurve\",min:8,resetStack:true},{id:\"vvcurveto\",min:4,resetStack:true},{id:\"hhcurveto\",min:4,resetStack:true},null,{id:\"callgsubr\",min:1,undefStack:true},{id:\"vhcurveto\",min:4,resetStack:true},{id:\"hvcurveto\",min:4,resetStack:true}];const CharstringValidationData12=[null,null,null,{id:\"and\",min:2,stackDelta:-1},{id:\"or\",min:2,stackDelta:-1},{id:\"not\",min:1,stackDelta:0},null,null,null,{id:\"abs\",min:1,stackDelta:0},{id:\"add\",min:2,stackDelta:-1,stackFn(stack,index){stack[index-2]=stack[index-2]+stack[index-1]}},{id:\"sub\",min:2,stackDelta:-1,stackFn(stack,index){stack[index-2]=stack[index-2]-stack[index-1]}},{id:\"div\",min:2,stackDelta:-1,stackFn(stack,index){stack[index-2]=stack[index-2]/stack[index-1]}},null,{id:\"neg\",min:1,stackDelta:0,stackFn(stack,index){stack[index-1]=-stack[index-1]}},{id:\"eq\",min:2,stackDelta:-1},null,null,{id:\"drop\",min:1,stackDelta:-1},null,{id:\"put\",min:2,stackDelta:-2},{id:\"get\",min:1,stackDelta:0},{id:\"ifelse\",min:4,stackDelta:-3},{id:\"random\",min:0,stackDelta:1},{id:\"mul\",min:2,stackDelta:-1,stackFn(stack,index){stack[index-2]=stack[index-2]*stack[index-1]}},null,{id:\"sqrt\",min:1,stackDelta:0},{id:\"dup\",min:1,stackDelta:1},{id:\"exch\",min:2,stackDelta:0},{id:\"index\",min:2,stackDelta:0},{id:\"roll\",min:3,stackDelta:-2},null,null,null,{id:\"hflex\",min:7,resetStack:true},{id:\"flex\",min:13,resetStack:true},{id:\"hflex1\",min:9,resetStack:true},{id:\"flex1\",min:11,resetStack:true}];class CFFParser{constructor(file,properties,seacAnalysisEnabled){this.bytes=file.getBytes();this.properties=properties;this.seacAnalysisEnabled=!!seacAnalysisEnabled}parse(){const properties=this.properties;const cff=new CFF;this.cff=cff;const header=this.parseHeader();const nameIndex=this.parseIndex(header.endPos);const topDictIndex=this.parseIndex(nameIndex.endPos);const stringIndex=this.parseIndex(topDictIndex.endPos);const globalSubrIndex=this.parseIndex(stringIndex.endPos);const topDictParsed=this.parseDict(topDictIndex.obj.get(0));const topDict=this.createDict(CFFTopDict,topDictParsed,cff.strings);cff.header=header.obj;cff.names=this.parseNameIndex(nameIndex.obj);cff.strings=this.parseStringIndex(stringIndex.obj);cff.topDict=topDict;cff.globalSubrIndex=globalSubrIndex.obj;this.parsePrivateDict(cff.topDict);cff.isCIDFont=topDict.hasName(\"ROS\");const charStringOffset=topDict.getByName(\"CharStrings\");const charStringIndex=this.parseIndex(charStringOffset).obj;const fontMatrix=topDict.getByName(\"FontMatrix\");if(fontMatrix){properties.fontMatrix=fontMatrix}const fontBBox=topDict.getByName(\"FontBBox\");if(fontBBox){properties.ascent=Math.max(fontBBox[3],fontBBox[1]);properties.descent=Math.min(fontBBox[1],fontBBox[3]);properties.ascentScaled=true}let charset,encoding;if(cff.isCIDFont){const fdArrayIndex=this.parseIndex(topDict.getByName(\"FDArray\")).obj;for(let i=0,ii=fdArrayIndex.count;i<ii;++i){const dictRaw=fdArrayIndex.get(i);const fontDict=this.createDict(CFFTopDict,this.parseDict(dictRaw),cff.strings);this.parsePrivateDict(fontDict);cff.fdArray.push(fontDict)}encoding=null;charset=this.parseCharsets(topDict.getByName(\"charset\"),charStringIndex.count,cff.strings,true);cff.fdSelect=this.parseFDSelect(topDict.getByName(\"FDSelect\"),charStringIndex.count)}else{charset=this.parseCharsets(topDict.getByName(\"charset\"),charStringIndex.count,cff.strings,false);encoding=this.parseEncoding(topDict.getByName(\"Encoding\"),properties,cff.strings,charset.charset)}cff.charset=charset;cff.encoding=encoding;const charStringsAndSeacs=this.parseCharStrings({charStrings:charStringIndex,localSubrIndex:topDict.privateDict.subrsIndex,globalSubrIndex:globalSubrIndex.obj,fdSelect:cff.fdSelect,fdArray:cff.fdArray,privateDict:topDict.privateDict});cff.charStrings=charStringsAndSeacs.charStrings;cff.seacs=charStringsAndSeacs.seacs;cff.widths=charStringsAndSeacs.widths;return cff}parseHeader(){let bytes=this.bytes;const bytesLength=bytes.length;let offset=0;while(offset<bytesLength&&bytes[offset]!==1){++offset}if(offset>=bytesLength){throw new FormatError(\"Invalid CFF header\")}if(offset!==0){info(\"cff data is shifted\");bytes=bytes.subarray(offset);this.bytes=bytes}const major=bytes[0];const minor=bytes[1];const hdrSize=bytes[2];const offSize=bytes[3];const header=new CFFHeader(major,minor,hdrSize,offSize);return{obj:header,endPos:hdrSize}}parseDict(dict){let pos=0;function parseOperand(){let value=dict[pos++];if(value===30){return parseFloatOperand()}else if(value===28){value=readInt16(dict,pos);pos+=2;return value}else if(value===29){value=dict[pos++];value=value<<8|dict[pos++];value=value<<8|dict[pos++];value=value<<8|dict[pos++];return value}else if(value>=32&&value<=246){return value-139}else if(value>=247&&value<=250){return(value-247)*256+dict[pos++]+108}else if(value>=251&&value<=254){return-((value-251)*256)-dict[pos++]-108}warn('CFFParser_parseDict: \"'+value+'\" is a reserved command.');return NaN}function parseFloatOperand(){let str=\"\";const eof=15;const lookup=[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\".\",\"E\",\"E-\",null,\"-\"];const length=dict.length;while(pos<length){const b=dict[pos++];const b1=b>>4;const b2=b&15;if(b1===eof){break}str+=lookup[b1];if(b2===eof){break}str+=lookup[b2]}return parseFloat(str)}let operands=[];const entries=[];pos=0;const end=dict.length;while(pos<end){let b=dict[pos];if(b<=21){if(b===12){b=b<<8|dict[++pos]}entries.push([b,operands]);operands=[];++pos}else{operands.push(parseOperand())}}return entries}parseIndex(pos){const cffIndex=new CFFIndex;const bytes=this.bytes;const count=bytes[pos++]<<8|bytes[pos++];const offsets=[];let end=pos;let i,ii;if(count!==0){const offsetSize=bytes[pos++];const startPos=pos+(count+1)*offsetSize-1;for(i=0,ii=count+1;i<ii;++i){let offset=0;for(let j=0;j<offsetSize;++j){offset<<=8;offset+=bytes[pos++]}offsets.push(startPos+offset)}end=offsets[count]}for(i=0,ii=offsets.length-1;i<ii;++i){const offsetStart=offsets[i];const offsetEnd=offsets[i+1];cffIndex.add(bytes.subarray(offsetStart,offsetEnd))}return{obj:cffIndex,endPos:end}}parseNameIndex(index){const names=[];for(let i=0,ii=index.count;i<ii;++i){const name=index.get(i);names.push(bytesToString(name))}return names}parseStringIndex(index){const strings=new CFFStrings;for(let i=0,ii=index.count;i<ii;++i){const data=index.get(i);strings.add(bytesToString(data))}return strings}createDict(Type,dict,strings){const cffDict=new Type(strings);for(const[key,value]of dict){cffDict.setByKey(key,value)}return cffDict}parseCharString(state,data,localSubrIndex,globalSubrIndex){if(!data||state.callDepth>MAX_SUBR_NESTING){return false}let stackSize=state.stackSize;const stack=state.stack;let length=data.length;for(let j=0;j<length;){const value=data[j++];let validationCommand=null;if(value===12){const q=data[j++];if(q===0){data[j-2]=139;data[j-1]=22;stackSize=0}else{validationCommand=CharstringValidationData12[q]}}else if(value===28){stack[stackSize]=readInt16(data,j);j+=2;stackSize++}else if(value===14){if(stackSize>=4){stackSize-=4;if(this.seacAnalysisEnabled){state.seac=stack.slice(stackSize,stackSize+4);return false}}validationCommand=CharstringValidationData[value]}else if(value>=32&&value<=246){stack[stackSize]=value-139;stackSize++}else if(value>=247&&value<=254){stack[stackSize]=value<251?(value-247<<8)+data[j]+108:-(value-251<<8)-data[j]-108;j++;stackSize++}else if(value===255){stack[stackSize]=(data[j]<<24|data[j+1]<<16|data[j+2]<<8|data[j+3])/65536;j+=4;stackSize++}else if(value===19||value===20){state.hints+=stackSize>>1;if(state.hints===0){data.copyWithin(j-1,j,-1);j-=1;length-=1;continue}j+=state.hints+7>>3;stackSize%=2;validationCommand=CharstringValidationData[value]}else if(value===10||value===29){const subrsIndex=value===10?localSubrIndex:globalSubrIndex;if(!subrsIndex){validationCommand=CharstringValidationData[value];warn(\"Missing subrsIndex for \"+validationCommand.id);return false}let bias=32768;if(subrsIndex.count<1240){bias=107}else if(subrsIndex.count<33900){bias=1131}const subrNumber=stack[--stackSize]+bias;if(subrNumber<0||subrNumber>=subrsIndex.count||isNaN(subrNumber)){validationCommand=CharstringValidationData[value];warn(\"Out of bounds subrIndex for \"+validationCommand.id);return false}state.stackSize=stackSize;state.callDepth++;const valid=this.parseCharString(state,subrsIndex.get(subrNumber),localSubrIndex,globalSubrIndex);if(!valid){return false}state.callDepth--;stackSize=state.stackSize;continue}else if(value===11){state.stackSize=stackSize;return true}else if(value===0&&j===data.length){data[j-1]=14;validationCommand=CharstringValidationData[14]}else if(value===9){data.copyWithin(j-1,j,-1);j-=1;length-=1;continue}else{validationCommand=CharstringValidationData[value]}if(validationCommand){if(validationCommand.stem){state.hints+=stackSize>>1;if(value===3||value===23){state.hasVStems=true}else if(state.hasVStems&&(value===1||value===18)){warn(\"CFF stem hints are in wrong order\");data[j-1]=value===1?3:23}}if(\"min\"in validationCommand){if(!state.undefStack&&stackSize<validationCommand.min){warn(\"Not enough parameters for \"+validationCommand.id+\"; actual: \"+stackSize+\", expected: \"+validationCommand.min);if(stackSize===0){data[j-1]=14;return true}return false}}if(state.firstStackClearing&&validationCommand.stackClearing){state.firstStackClearing=false;stackSize-=validationCommand.min;if(stackSize>=2&&validationCommand.stem){stackSize%=2}else if(stackSize>1){warn(\"Found too many parameters for stack-clearing command\")}if(stackSize>0){state.width=stack[stackSize-1]}}if(\"stackDelta\"in validationCommand){if(\"stackFn\"in validationCommand){validationCommand.stackFn(stack,stackSize)}stackSize+=validationCommand.stackDelta}else if(validationCommand.stackClearing){stackSize=0}else if(validationCommand.resetStack){stackSize=0;state.undefStack=false}else if(validationCommand.undefStack){stackSize=0;state.undefStack=true;state.firstStackClearing=false}}}if(length<data.length){data.fill(14,length)}state.stackSize=stackSize;return true}parseCharStrings({charStrings:charStrings,localSubrIndex:localSubrIndex,globalSubrIndex:globalSubrIndex,fdSelect:fdSelect,fdArray:fdArray,privateDict:privateDict}){const seacs=[];const widths=[];const count=charStrings.count;for(let i=0;i<count;i++){const charstring=charStrings.get(i);const state={callDepth:0,stackSize:0,stack:[],undefStack:true,hints:0,firstStackClearing:true,seac:null,width:null,hasVStems:false};let valid=true;let localSubrToUse=null;let privateDictToUse=privateDict;if(fdSelect&&fdArray.length){const fdIndex=fdSelect.getFDIndex(i);if(fdIndex===-1){warn(\"Glyph index is not in fd select.\");valid=false}if(fdIndex>=fdArray.length){warn(\"Invalid fd index for glyph index.\");valid=false}if(valid){privateDictToUse=fdArray[fdIndex].privateDict;localSubrToUse=privateDictToUse.subrsIndex}}else if(localSubrIndex){localSubrToUse=localSubrIndex}if(valid){valid=this.parseCharString(state,charstring,localSubrToUse,globalSubrIndex)}if(state.width!==null){const nominalWidth=privateDictToUse.getByName(\"nominalWidthX\");widths[i]=nominalWidth+state.width}else{const defaultWidth=privateDictToUse.getByName(\"defaultWidthX\");widths[i]=defaultWidth}if(state.seac!==null){seacs[i]=state.seac}if(!valid){charStrings.set(i,new Uint8Array([14]))}}return{charStrings:charStrings,seacs:seacs,widths:widths}}emptyPrivateDictionary(parentDict){const privateDict=this.createDict(CFFPrivateDict,[],parentDict.strings);parentDict.setByKey(18,[0,0]);parentDict.privateDict=privateDict}parsePrivateDict(parentDict){if(!parentDict.hasName(\"Private\")){this.emptyPrivateDictionary(parentDict);return}const privateOffset=parentDict.getByName(\"Private\");if(!Array.isArray(privateOffset)||privateOffset.length!==2){parentDict.removeByName(\"Private\");return}const size=privateOffset[0];const offset=privateOffset[1];if(size===0||offset>=this.bytes.length){this.emptyPrivateDictionary(parentDict);return}const privateDictEnd=offset+size;const dictData=this.bytes.subarray(offset,privateDictEnd);const dict=this.parseDict(dictData);const privateDict=this.createDict(CFFPrivateDict,dict,parentDict.strings);parentDict.privateDict=privateDict;if(privateDict.getByName(\"ExpansionFactor\")===0){privateDict.setByName(\"ExpansionFactor\",.06)}if(!privateDict.getByName(\"Subrs\")){return}const subrsOffset=privateDict.getByName(\"Subrs\");const relativeOffset=offset+subrsOffset;if(subrsOffset===0||relativeOffset>=this.bytes.length){this.emptyPrivateDictionary(parentDict);return}const subrsIndex=this.parseIndex(relativeOffset);privateDict.subrsIndex=subrsIndex.obj}parseCharsets(pos,length,strings,cid){if(pos===0){return new CFFCharset(true,CFFCharsetPredefinedTypes.ISO_ADOBE,ISOAdobeCharset)}else if(pos===1){return new CFFCharset(true,CFFCharsetPredefinedTypes.EXPERT,ExpertCharset)}else if(pos===2){return new CFFCharset(true,CFFCharsetPredefinedTypes.EXPERT_SUBSET,ExpertSubsetCharset)}const bytes=this.bytes;const start=pos;const format=bytes[pos++];const charset=[cid?0:\".notdef\"];let id,count,i;length-=1;switch(format){case 0:for(i=0;i<length;i++){id=bytes[pos++]<<8|bytes[pos++];charset.push(cid?id:strings.get(id))}break;case 1:while(charset.length<=length){id=bytes[pos++]<<8|bytes[pos++];count=bytes[pos++];for(i=0;i<=count;i++){charset.push(cid?id++:strings.get(id++))}}break;case 2:while(charset.length<=length){id=bytes[pos++]<<8|bytes[pos++];count=bytes[pos++]<<8|bytes[pos++];for(i=0;i<=count;i++){charset.push(cid?id++:strings.get(id++))}}break;default:throw new FormatError(\"Unknown charset format\")}const end=pos;const raw=bytes.subarray(start,end);return new CFFCharset(false,format,charset,raw)}parseEncoding(pos,properties,strings,charset){const encoding=Object.create(null);const bytes=this.bytes;let predefined=false;let format,i,ii;let raw=null;function readSupplement(){const supplementsCount=bytes[pos++];for(i=0;i<supplementsCount;i++){const code=bytes[pos++];const sid=(bytes[pos++]<<8)+(bytes[pos++]&255);encoding[code]=charset.indexOf(strings.get(sid))}}if(pos===0||pos===1){predefined=true;format=pos;const baseEncoding=pos?ExpertEncoding:StandardEncoding;for(i=0,ii=charset.length;i<ii;i++){const index=baseEncoding.indexOf(charset[i]);if(index!==-1){encoding[index]=i}}}else{const dataStart=pos;format=bytes[pos++];switch(format&127){case 0:const glyphsCount=bytes[pos++];for(i=1;i<=glyphsCount;i++){encoding[bytes[pos++]]=i}break;case 1:const rangesCount=bytes[pos++];let gid=1;for(i=0;i<rangesCount;i++){const start=bytes[pos++];const left=bytes[pos++];for(let j=start;j<=start+left;j++){encoding[j]=gid++}}break;default:throw new FormatError(`Unknown encoding format: ${format} in CFF`)}const dataEnd=pos;if(format&128){bytes[dataStart]&=127;readSupplement()}raw=bytes.subarray(dataStart,dataEnd)}format&=127;return new CFFEncoding(predefined,format,encoding,raw)}parseFDSelect(pos,length){const bytes=this.bytes;const format=bytes[pos++];const fdSelect=[];let i;switch(format){case 0:for(i=0;i<length;++i){const id=bytes[pos++];fdSelect.push(id)}break;case 3:const rangesCount=bytes[pos++]<<8|bytes[pos++];for(i=0;i<rangesCount;++i){let first=bytes[pos++]<<8|bytes[pos++];if(i===0&&first!==0){warn(\"parseFDSelect: The first range must have a first GID of 0\"+\" -- trying to recover.\");first=0}const fdIndex=bytes[pos++];const next=bytes[pos]<<8|bytes[pos+1];for(let j=first;j<next;++j){fdSelect.push(fdIndex)}}pos+=2;break;default:throw new FormatError(`parseFDSelect: Unknown format \"${format}\".`)}if(fdSelect.length!==length){throw new FormatError(\"parseFDSelect: Invalid font data.\")}return new CFFFDSelect(format,fdSelect)}}class CFF{constructor(){this.header=null;this.names=[];this.topDict=null;this.strings=new CFFStrings;this.globalSubrIndex=null;this.encoding=null;this.charset=null;this.charStrings=null;this.fdArray=[];this.fdSelect=null;this.isCIDFont=false}duplicateFirstGlyph(){if(this.charStrings.count>=65535){warn(\"Not enough space in charstrings to duplicate first glyph.\");return}const glyphZero=this.charStrings.get(0);this.charStrings.add(glyphZero);if(this.isCIDFont){this.fdSelect.fdSelect.push(this.fdSelect.fdSelect[0])}}hasGlyphId(id){if(id<0||id>=this.charStrings.count){return false}const glyph=this.charStrings.get(id);return glyph.length>0}}class CFFHeader{constructor(major,minor,hdrSize,offSize){this.major=major;this.minor=minor;this.hdrSize=hdrSize;this.offSize=offSize}}class CFFStrings{constructor(){this.strings=[]}get(index){if(index>=0&&index<=NUM_STANDARD_CFF_STRINGS-1){return CFFStandardStrings[index]}if(index-NUM_STANDARD_CFF_STRINGS<=this.strings.length){return this.strings[index-NUM_STANDARD_CFF_STRINGS]}return CFFStandardStrings[0]}getSID(str){let index=CFFStandardStrings.indexOf(str);if(index!==-1){return index}index=this.strings.indexOf(str);if(index!==-1){return index+NUM_STANDARD_CFF_STRINGS}return-1}add(value){this.strings.push(value)}get count(){return this.strings.length}}class CFFIndex{constructor(){this.objects=[];this.length=0}add(data){this.length+=data.length;this.objects.push(data)}set(index,data){this.length+=data.length-this.objects[index].length;this.objects[index]=data}get(index){return this.objects[index]}get count(){return this.objects.length}}class CFFDict{constructor(tables,strings){this.keyToNameMap=tables.keyToNameMap;this.nameToKeyMap=tables.nameToKeyMap;this.defaults=tables.defaults;this.types=tables.types;this.opcodes=tables.opcodes;this.order=tables.order;this.strings=strings;this.values=Object.create(null)}setByKey(key,value){if(!(key in this.keyToNameMap)){return false}if(value.length===0){return true}for(const val of value){if(isNaN(val)){warn(`Invalid CFFDict value: \"${value}\" for key \"${key}\".`);return true}}const type=this.types[key];if(type===\"num\"||type===\"sid\"||type===\"offset\"){value=value[0]}this.values[key]=value;return true}setByName(name,value){if(!(name in this.nameToKeyMap)){throw new FormatError(`Invalid dictionary name \"${name}\"`)}this.values[this.nameToKeyMap[name]]=value}hasName(name){return this.nameToKeyMap[name]in this.values}getByName(name){if(!(name in this.nameToKeyMap)){throw new FormatError(`Invalid dictionary name ${name}\"`)}const key=this.nameToKeyMap[name];if(!(key in this.values)){return this.defaults[key]}return this.values[key]}removeByName(name){delete this.values[this.nameToKeyMap[name]]}static createTables(layout){const tables={keyToNameMap:{},nameToKeyMap:{},defaults:{},types:{},opcodes:{},order:[]};for(const entry of layout){const key=Array.isArray(entry[0])?(entry[0][0]<<8)+entry[0][1]:entry[0];tables.keyToNameMap[key]=entry[1];tables.nameToKeyMap[entry[1]]=key;tables.types[key]=entry[2];tables.defaults[key]=entry[3];tables.opcodes[key]=Array.isArray(entry[0])?entry[0]:[entry[0]];tables.order.push(key)}return tables}}const CFFTopDictLayout=[[[12,30],\"ROS\",[\"sid\",\"sid\",\"num\"],null],[[12,20],\"SyntheticBase\",\"num\",null],[0,\"version\",\"sid\",null],[1,\"Notice\",\"sid\",null],[[12,0],\"Copyright\",\"sid\",null],[2,\"FullName\",\"sid\",null],[3,\"FamilyName\",\"sid\",null],[4,\"Weight\",\"sid\",null],[[12,1],\"isFixedPitch\",\"num\",0],[[12,2],\"ItalicAngle\",\"num\",0],[[12,3],\"UnderlinePosition\",\"num\",-100],[[12,4],\"UnderlineThickness\",\"num\",50],[[12,5],\"PaintType\",\"num\",0],[[12,6],\"CharstringType\",\"num\",2],[[12,7],\"FontMatrix\",[\"num\",\"num\",\"num\",\"num\",\"num\",\"num\"],[.001,0,0,.001,0,0]],[13,\"UniqueID\",\"num\",null],[5,\"FontBBox\",[\"num\",\"num\",\"num\",\"num\"],[0,0,0,0]],[[12,8],\"StrokeWidth\",\"num\",0],[14,\"XUID\",\"array\",null],[15,\"charset\",\"offset\",0],[16,\"Encoding\",\"offset\",0],[17,\"CharStrings\",\"offset\",0],[18,\"Private\",[\"offset\",\"offset\"],null],[[12,21],\"PostScript\",\"sid\",null],[[12,22],\"BaseFontName\",\"sid\",null],[[12,23],\"BaseFontBlend\",\"delta\",null],[[12,31],\"CIDFontVersion\",\"num\",0],[[12,32],\"CIDFontRevision\",\"num\",0],[[12,33],\"CIDFontType\",\"num\",0],[[12,34],\"CIDCount\",\"num\",8720],[[12,35],\"UIDBase\",\"num\",null],[[12,37],\"FDSelect\",\"offset\",null],[[12,36],\"FDArray\",\"offset\",null],[[12,38],\"FontName\",\"sid\",null]];class CFFTopDict extends CFFDict{static get tables(){return shadow(this,\"tables\",this.createTables(CFFTopDictLayout))}constructor(strings){super(CFFTopDict.tables,strings);this.privateDict=null}}const CFFPrivateDictLayout=[[6,\"BlueValues\",\"delta\",null],[7,\"OtherBlues\",\"delta\",null],[8,\"FamilyBlues\",\"delta\",null],[9,\"FamilyOtherBlues\",\"delta\",null],[[12,9],\"BlueScale\",\"num\",.039625],[[12,10],\"BlueShift\",\"num\",7],[[12,11],\"BlueFuzz\",\"num\",1],[10,\"StdHW\",\"num\",null],[11,\"StdVW\",\"num\",null],[[12,12],\"StemSnapH\",\"delta\",null],[[12,13],\"StemSnapV\",\"delta\",null],[[12,14],\"ForceBold\",\"num\",0],[[12,17],\"LanguageGroup\",\"num\",0],[[12,18],\"ExpansionFactor\",\"num\",.06],[[12,19],\"initialRandomSeed\",\"num\",0],[20,\"defaultWidthX\",\"num\",0],[21,\"nominalWidthX\",\"num\",0],[19,\"Subrs\",\"offset\",null]];class CFFPrivateDict extends CFFDict{static get tables(){return shadow(this,\"tables\",this.createTables(CFFPrivateDictLayout))}constructor(strings){super(CFFPrivateDict.tables,strings);this.subrsIndex=null}}const CFFCharsetPredefinedTypes={ISO_ADOBE:0,EXPERT:1,EXPERT_SUBSET:2};class CFFCharset{constructor(predefined,format,charset,raw){this.predefined=predefined;this.format=format;this.charset=charset;this.raw=raw}}class CFFEncoding{constructor(predefined,format,encoding,raw){this.predefined=predefined;this.format=format;this.encoding=encoding;this.raw=raw}}class CFFFDSelect{constructor(format,fdSelect){this.format=format;this.fdSelect=fdSelect}getFDIndex(glyphIndex){if(glyphIndex<0||glyphIndex>=this.fdSelect.length){return-1}return this.fdSelect[glyphIndex]}}class CFFOffsetTracker{constructor(){this.offsets=Object.create(null)}isTracking(key){return key in this.offsets}track(key,location){if(key in this.offsets){throw new FormatError(`Already tracking location of ${key}`)}this.offsets[key]=location}offset(value){for(const key in this.offsets){this.offsets[key]+=value}}setEntryLocation(key,values,output){if(!(key in this.offsets)){throw new FormatError(`Not tracking location of ${key}`)}const data=output.data;const dataOffset=this.offsets[key];const size=5;for(let i=0,ii=values.length;i<ii;++i){const offset0=i*size+dataOffset;const offset1=offset0+1;const offset2=offset0+2;const offset3=offset0+3;const offset4=offset0+4;if(data[offset0]!==29||data[offset1]!==0||data[offset2]!==0||data[offset3]!==0||data[offset4]!==0){throw new FormatError(\"writing to an offset that is not empty\")}const value=values[i];data[offset0]=29;data[offset1]=value>>24&255;data[offset2]=value>>16&255;data[offset3]=value>>8&255;data[offset4]=value&255}}}class CFFCompiler{constructor(cff){this.cff=cff}compile(){const cff=this.cff;const output={data:[],length:0,add(data){try{this.data.push(...data)}catch{this.data=this.data.concat(data)}this.length=this.data.length}};const header=this.compileHeader(cff.header);output.add(header);const nameIndex=this.compileNameIndex(cff.names);output.add(nameIndex);if(cff.isCIDFont){if(cff.topDict.hasName(\"FontMatrix\")){const base=cff.topDict.getByName(\"FontMatrix\");cff.topDict.removeByName(\"FontMatrix\");for(const subDict of cff.fdArray){let matrix=base.slice(0);if(subDict.hasName(\"FontMatrix\")){matrix=Util.transform(matrix,subDict.getByName(\"FontMatrix\"))}subDict.setByName(\"FontMatrix\",matrix)}}}const xuid=cff.topDict.getByName(\"XUID\");if(xuid?.length>16){cff.topDict.removeByName(\"XUID\")}cff.topDict.setByName(\"charset\",0);let compiled=this.compileTopDicts([cff.topDict],output.length,cff.isCIDFont);output.add(compiled.output);const topDictTracker=compiled.trackers[0];const stringIndex=this.compileStringIndex(cff.strings.strings);output.add(stringIndex);const globalSubrIndex=this.compileIndex(cff.globalSubrIndex);output.add(globalSubrIndex);if(cff.encoding&&cff.topDict.hasName(\"Encoding\")){if(cff.encoding.predefined){topDictTracker.setEntryLocation(\"Encoding\",[cff.encoding.format],output)}else{const encoding=this.compileEncoding(cff.encoding);topDictTracker.setEntryLocation(\"Encoding\",[output.length],output);output.add(encoding)}}const charset=this.compileCharset(cff.charset,cff.charStrings.count,cff.strings,cff.isCIDFont);topDictTracker.setEntryLocation(\"charset\",[output.length],output);output.add(charset);const charStrings=this.compileCharStrings(cff.charStrings);topDictTracker.setEntryLocation(\"CharStrings\",[output.length],output);output.add(charStrings);if(cff.isCIDFont){topDictTracker.setEntryLocation(\"FDSelect\",[output.length],output);const fdSelect=this.compileFDSelect(cff.fdSelect);output.add(fdSelect);compiled=this.compileTopDicts(cff.fdArray,output.length,true);topDictTracker.setEntryLocation(\"FDArray\",[output.length],output);output.add(compiled.output);const fontDictTrackers=compiled.trackers;this.compilePrivateDicts(cff.fdArray,fontDictTrackers,output)}this.compilePrivateDicts([cff.topDict],[topDictTracker],output);output.add([0]);return output.data}encodeNumber(value){if(Number.isInteger(value)){return this.encodeInteger(value)}return this.encodeFloat(value)}static get EncodeFloatRegExp(){return shadow(this,\"EncodeFloatRegExp\",/\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/)}encodeFloat(num){let value=num.toString();const m=CFFCompiler.EncodeFloatRegExp.exec(value);if(m){const epsilon=parseFloat(\"1e\"+((m[2]?+m[2]:0)+m[1].length));value=(Math.round(num*epsilon)/epsilon).toString()}let nibbles=\"\";let i,ii;for(i=0,ii=value.length;i<ii;++i){const a=value[i];if(a===\"e\"){nibbles+=value[++i]===\"-\"?\"c\":\"b\"}else if(a===\".\"){nibbles+=\"a\"}else if(a===\"-\"){nibbles+=\"e\"}else{nibbles+=a}}nibbles+=nibbles.length&1?\"f\":\"ff\";const out=[30];for(i=0,ii=nibbles.length;i<ii;i+=2){out.push(parseInt(nibbles.substring(i,i+2),16))}return out}encodeInteger(value){let code;if(value>=-107&&value<=107){code=[value+139]}else if(value>=108&&value<=1131){value-=108;code=[(value>>8)+247,value&255]}else if(value>=-1131&&value<=-108){value=-value-108;code=[(value>>8)+251,value&255]}else if(value>=-32768&&value<=32767){code=[28,value>>8&255,value&255]}else{code=[29,value>>24&255,value>>16&255,value>>8&255,value&255]}return code}compileHeader(header){return[header.major,header.minor,4,header.offSize]}compileNameIndex(names){const nameIndex=new CFFIndex;for(const name of names){const length=Math.min(name.length,127);let sanitizedName=new Array(length);for(let j=0;j<length;j++){let char=name[j];if(char<\"!\"||char>\"~\"||char===\"[\"||char===\"]\"||char===\"(\"||char===\")\"||char===\"{\"||char===\"}\"||char===\"<\"||char===\">\"||char===\"/\"||char===\"%\"){char=\"_\"}sanitizedName[j]=char}sanitizedName=sanitizedName.join(\"\");if(sanitizedName===\"\"){sanitizedName=\"Bad_Font_Name\"}nameIndex.add(stringToBytes(sanitizedName))}return this.compileIndex(nameIndex)}compileTopDicts(dicts,length,removeCidKeys){const fontDictTrackers=[];let fdArrayIndex=new CFFIndex;for(const fontDict of dicts){if(removeCidKeys){fontDict.removeByName(\"CIDFontVersion\");fontDict.removeByName(\"CIDFontRevision\");fontDict.removeByName(\"CIDFontType\");fontDict.removeByName(\"CIDCount\");fontDict.removeByName(\"UIDBase\")}const fontDictTracker=new CFFOffsetTracker;const fontDictData=this.compileDict(fontDict,fontDictTracker);fontDictTrackers.push(fontDictTracker);fdArrayIndex.add(fontDictData);fontDictTracker.offset(length)}fdArrayIndex=this.compileIndex(fdArrayIndex,fontDictTrackers);return{trackers:fontDictTrackers,output:fdArrayIndex}}compilePrivateDicts(dicts,trackers,output){for(let i=0,ii=dicts.length;i<ii;++i){const fontDict=dicts[i];const privateDict=fontDict.privateDict;if(!privateDict||!fontDict.hasName(\"Private\")){throw new FormatError(\"There must be a private dictionary.\")}const privateDictTracker=new CFFOffsetTracker;const privateDictData=this.compileDict(privateDict,privateDictTracker);let outputLength=output.length;privateDictTracker.offset(outputLength);if(!privateDictData.length){outputLength=0}trackers[i].setEntryLocation(\"Private\",[privateDictData.length,outputLength],output);output.add(privateDictData);if(privateDict.subrsIndex&&privateDict.hasName(\"Subrs\")){const subrs=this.compileIndex(privateDict.subrsIndex);privateDictTracker.setEntryLocation(\"Subrs\",[privateDictData.length],output);output.add(subrs)}}}compileDict(dict,offsetTracker){const out=[];for(const key of dict.order){if(!(key in dict.values)){continue}let values=dict.values[key];let types=dict.types[key];if(!Array.isArray(types)){types=[types]}if(!Array.isArray(values)){values=[values]}if(values.length===0){continue}for(let j=0,jj=types.length;j<jj;++j){const type=types[j];const value=values[j];switch(type){case\"num\":case\"sid\":out.push(...this.encodeNumber(value));break;case\"offset\":const name=dict.keyToNameMap[key];if(!offsetTracker.isTracking(name)){offsetTracker.track(name,out.length)}out.push(29,0,0,0,0);break;case\"array\":case\"delta\":out.push(...this.encodeNumber(value));for(let k=1,kk=values.length;k<kk;++k){out.push(...this.encodeNumber(values[k]))}break;default:throw new FormatError(`Unknown data type of ${type}`)}}out.push(...dict.opcodes[key])}return out}compileStringIndex(strings){const stringIndex=new CFFIndex;for(const string of strings){stringIndex.add(stringToBytes(string))}return this.compileIndex(stringIndex)}compileCharStrings(charStrings){const charStringsIndex=new CFFIndex;for(let i=0;i<charStrings.count;i++){const glyph=charStrings.get(i);if(glyph.length===0){charStringsIndex.add(new Uint8Array([139,14]));continue}charStringsIndex.add(glyph)}return this.compileIndex(charStringsIndex)}compileCharset(charset,numGlyphs,strings,isCIDFont){let out;const numGlyphsLessNotDef=numGlyphs-1;if(isCIDFont){const nLeft=numGlyphsLessNotDef-1;out=new Uint8Array([2,0,0,nLeft>>8&255,nLeft&255])}else{const length=1+numGlyphsLessNotDef*2;out=new Uint8Array(length);out[0]=0;let charsetIndex=0;const numCharsets=charset.charset.length;let warned=false;for(let i=1;i<out.length;i+=2){let sid=0;if(charsetIndex<numCharsets){const name=charset.charset[charsetIndex++];sid=strings.getSID(name);if(sid===-1){sid=0;if(!warned){warned=true;warn(`Couldn't find ${name} in CFF strings`)}}}out[i]=sid>>8&255;out[i+1]=sid&255}}return this.compileTypedArray(out)}compileEncoding(encoding){return this.compileTypedArray(encoding.raw)}compileFDSelect(fdSelect){const format=fdSelect.format;let out,i;switch(format){case 0:out=new Uint8Array(1+fdSelect.fdSelect.length);out[0]=format;for(i=0;i<fdSelect.fdSelect.length;i++){out[i+1]=fdSelect.fdSelect[i]}break;case 3:const start=0;let lastFD=fdSelect.fdSelect[0];const ranges=[format,0,0,start>>8&255,start&255,lastFD];for(i=1;i<fdSelect.fdSelect.length;i++){const currentFD=fdSelect.fdSelect[i];if(currentFD!==lastFD){ranges.push(i>>8&255,i&255,currentFD);lastFD=currentFD}}const numRanges=(ranges.length-3)/3;ranges[1]=numRanges>>8&255;ranges[2]=numRanges&255;ranges.push(i>>8&255,i&255);out=new Uint8Array(ranges);break}return this.compileTypedArray(out)}compileTypedArray(data){return Array.from(data)}compileIndex(index,trackers=[]){const objects=index.objects;const count=objects.length;if(count===0){return[0,0]}const data=[count>>8&255,count&255];let lastOffset=1,i;for(i=0;i<count;++i){lastOffset+=objects[i].length}let offsetSize;if(lastOffset<256){offsetSize=1}else if(lastOffset<65536){offsetSize=2}else if(lastOffset<16777216){offsetSize=3}else{offsetSize=4}data.push(offsetSize);let relativeOffset=1;for(i=0;i<count+1;i++){if(offsetSize===1){data.push(relativeOffset&255)}else if(offsetSize===2){data.push(relativeOffset>>8&255,relativeOffset&255)}else if(offsetSize===3){data.push(relativeOffset>>16&255,relativeOffset>>8&255,relativeOffset&255)}else{data.push(relativeOffset>>>24&255,relativeOffset>>16&255,relativeOffset>>8&255,relativeOffset&255)}if(objects[i]){relativeOffset+=objects[i].length}}for(i=0;i<count;i++){if(trackers[i]){trackers[i].offset(data.length)}data.push(...objects[i])}return data}}const getStdFontMap=getLookupTableFactory((function(t){t[\"Times-Roman\"]=\"Times-Roman\";t.Helvetica=\"Helvetica\";t.Courier=\"Courier\";t.Symbol=\"Symbol\";t[\"Times-Bold\"]=\"Times-Bold\";t[\"Helvetica-Bold\"]=\"Helvetica-Bold\";t[\"Courier-Bold\"]=\"Courier-Bold\";t.ZapfDingbats=\"ZapfDingbats\";t[\"Times-Italic\"]=\"Times-Italic\";t[\"Helvetica-Oblique\"]=\"Helvetica-Oblique\";t[\"Courier-Oblique\"]=\"Courier-Oblique\";t[\"Times-BoldItalic\"]=\"Times-BoldItalic\";t[\"Helvetica-BoldOblique\"]=\"Helvetica-BoldOblique\";t[\"Courier-BoldOblique\"]=\"Courier-BoldOblique\";t.ArialNarrow=\"Helvetica\";t[\"ArialNarrow-Bold\"]=\"Helvetica-Bold\";t[\"ArialNarrow-BoldItalic\"]=\"Helvetica-BoldOblique\";t[\"ArialNarrow-Italic\"]=\"Helvetica-Oblique\";t.ArialBlack=\"Helvetica\";t[\"ArialBlack-Bold\"]=\"Helvetica-Bold\";t[\"ArialBlack-BoldItalic\"]=\"Helvetica-BoldOblique\";t[\"ArialBlack-Italic\"]=\"Helvetica-Oblique\";t[\"Arial-Black\"]=\"Helvetica\";t[\"Arial-Black-Bold\"]=\"Helvetica-Bold\";t[\"Arial-Black-BoldItalic\"]=\"Helvetica-BoldOblique\";t[\"Arial-Black-Italic\"]=\"Helvetica-Oblique\";t.Arial=\"Helvetica\";t[\"Arial-Bold\"]=\"Helvetica-Bold\";t[\"Arial-BoldItalic\"]=\"Helvetica-BoldOblique\";t[\"Arial-Italic\"]=\"Helvetica-Oblique\";t.ArialMT=\"Helvetica\";t[\"Arial-BoldItalicMT\"]=\"Helvetica-BoldOblique\";t[\"Arial-BoldMT\"]=\"Helvetica-Bold\";t[\"Arial-ItalicMT\"]=\"Helvetica-Oblique\";t[\"Arial-BoldItalicMT-BoldItalic\"]=\"Helvetica-BoldOblique\";t[\"Arial-BoldMT-Bold\"]=\"Helvetica-Bold\";t[\"Arial-ItalicMT-Italic\"]=\"Helvetica-Oblique\";t.ArialUnicodeMS=\"Helvetica\";t[\"ArialUnicodeMS-Bold\"]=\"Helvetica-Bold\";t[\"ArialUnicodeMS-BoldItalic\"]=\"Helvetica-BoldOblique\";t[\"ArialUnicodeMS-Italic\"]=\"Helvetica-Oblique\";t[\"Courier-BoldItalic\"]=\"Courier-BoldOblique\";t[\"Courier-Italic\"]=\"Courier-Oblique\";t.CourierNew=\"Courier\";t[\"CourierNew-Bold\"]=\"Courier-Bold\";t[\"CourierNew-BoldItalic\"]=\"Courier-BoldOblique\";t[\"CourierNew-Italic\"]=\"Courier-Oblique\";t[\"CourierNewPS-BoldItalicMT\"]=\"Courier-BoldOblique\";t[\"CourierNewPS-BoldMT\"]=\"Courier-Bold\";t[\"CourierNewPS-ItalicMT\"]=\"Courier-Oblique\";t.CourierNewPSMT=\"Courier\";t[\"Helvetica-BoldItalic\"]=\"Helvetica-BoldOblique\";t[\"Helvetica-Italic\"]=\"Helvetica-Oblique\";t[\"HelveticaLTStd-Bold\"]=\"Helvetica-Bold\";t[\"Symbol-Bold\"]=\"Symbol\";t[\"Symbol-BoldItalic\"]=\"Symbol\";t[\"Symbol-Italic\"]=\"Symbol\";t.TimesNewRoman=\"Times-Roman\";t[\"TimesNewRoman-Bold\"]=\"Times-Bold\";t[\"TimesNewRoman-BoldItalic\"]=\"Times-BoldItalic\";t[\"TimesNewRoman-Italic\"]=\"Times-Italic\";t.TimesNewRomanPS=\"Times-Roman\";t[\"TimesNewRomanPS-Bold\"]=\"Times-Bold\";t[\"TimesNewRomanPS-BoldItalic\"]=\"Times-BoldItalic\";t[\"TimesNewRomanPS-BoldItalicMT\"]=\"Times-BoldItalic\";t[\"TimesNewRomanPS-BoldMT\"]=\"Times-Bold\";t[\"TimesNewRomanPS-Italic\"]=\"Times-Italic\";t[\"TimesNewRomanPS-ItalicMT\"]=\"Times-Italic\";t.TimesNewRomanPSMT=\"Times-Roman\";t[\"TimesNewRomanPSMT-Bold\"]=\"Times-Bold\";t[\"TimesNewRomanPSMT-BoldItalic\"]=\"Times-BoldItalic\";t[\"TimesNewRomanPSMT-Italic\"]=\"Times-Italic\"}));const getFontNameToFileMap=getLookupTableFactory((function(t){t.Courier=\"FoxitFixed.pfb\";t[\"Courier-Bold\"]=\"FoxitFixedBold.pfb\";t[\"Courier-BoldOblique\"]=\"FoxitFixedBoldItalic.pfb\";t[\"Courier-Oblique\"]=\"FoxitFixedItalic.pfb\";t.Helvetica=\"LiberationSans-Regular.ttf\";t[\"Helvetica-Bold\"]=\"LiberationSans-Bold.ttf\";t[\"Helvetica-BoldOblique\"]=\"LiberationSans-BoldItalic.ttf\";t[\"Helvetica-Oblique\"]=\"LiberationSans-Italic.ttf\";t[\"Times-Roman\"]=\"FoxitSerif.pfb\";t[\"Times-Bold\"]=\"FoxitSerifBold.pfb\";t[\"Times-BoldItalic\"]=\"FoxitSerifBoldItalic.pfb\";t[\"Times-Italic\"]=\"FoxitSerifItalic.pfb\";t.Symbol=\"FoxitSymbol.pfb\";t.ZapfDingbats=\"FoxitDingbats.pfb\";t[\"LiberationSans-Regular\"]=\"LiberationSans-Regular.ttf\";t[\"LiberationSans-Bold\"]=\"LiberationSans-Bold.ttf\";t[\"LiberationSans-Italic\"]=\"LiberationSans-Italic.ttf\";t[\"LiberationSans-BoldItalic\"]=\"LiberationSans-BoldItalic.ttf\"}));const getNonStdFontMap=getLookupTableFactory((function(t){t.Calibri=\"Helvetica\";t[\"Calibri-Bold\"]=\"Helvetica-Bold\";t[\"Calibri-BoldItalic\"]=\"Helvetica-BoldOblique\";t[\"Calibri-Italic\"]=\"Helvetica-Oblique\";t.CenturyGothic=\"Helvetica\";t[\"CenturyGothic-Bold\"]=\"Helvetica-Bold\";t[\"CenturyGothic-BoldItalic\"]=\"Helvetica-BoldOblique\";t[\"CenturyGothic-Italic\"]=\"Helvetica-Oblique\";t.ComicSansMS=\"Comic Sans MS\";t[\"ComicSansMS-Bold\"]=\"Comic Sans MS-Bold\";t[\"ComicSansMS-BoldItalic\"]=\"Comic Sans MS-BoldItalic\";t[\"ComicSansMS-Italic\"]=\"Comic Sans MS-Italic\";t.GillSansMT=\"Helvetica\";t[\"GillSansMT-Bold\"]=\"Helvetica-Bold\";t[\"GillSansMT-BoldItalic\"]=\"Helvetica-BoldOblique\";t[\"GillSansMT-Italic\"]=\"Helvetica-Oblique\";t.Impact=\"Helvetica\";t[\"ItcSymbol-Bold\"]=\"Helvetica-Bold\";t[\"ItcSymbol-BoldItalic\"]=\"Helvetica-BoldOblique\";t[\"ItcSymbol-Book\"]=\"Helvetica\";t[\"ItcSymbol-BookItalic\"]=\"Helvetica-Oblique\";t[\"ItcSymbol-Medium\"]=\"Helvetica\";t[\"ItcSymbol-MediumItalic\"]=\"Helvetica-Oblique\";t.LucidaConsole=\"Courier\";t[\"LucidaConsole-Bold\"]=\"Courier-Bold\";t[\"LucidaConsole-BoldItalic\"]=\"Courier-BoldOblique\";t[\"LucidaConsole-Italic\"]=\"Courier-Oblique\";t[\"LucidaSans-Demi\"]=\"Helvetica-Bold\";t[\"MS-Gothic\"]=\"MS Gothic\";t[\"MS-Gothic-Bold\"]=\"MS Gothic-Bold\";t[\"MS-Gothic-BoldItalic\"]=\"MS Gothic-BoldItalic\";t[\"MS-Gothic-Italic\"]=\"MS Gothic-Italic\";t[\"MS-Mincho\"]=\"MS Mincho\";t[\"MS-Mincho-Bold\"]=\"MS Mincho-Bold\";t[\"MS-Mincho-BoldItalic\"]=\"MS Mincho-BoldItalic\";t[\"MS-Mincho-Italic\"]=\"MS Mincho-Italic\";t[\"MS-PGothic\"]=\"MS PGothic\";t[\"MS-PGothic-Bold\"]=\"MS PGothic-Bold\";t[\"MS-PGothic-BoldItalic\"]=\"MS PGothic-BoldItalic\";t[\"MS-PGothic-Italic\"]=\"MS PGothic-Italic\";t[\"MS-PMincho\"]=\"MS PMincho\";t[\"MS-PMincho-Bold\"]=\"MS PMincho-Bold\";t[\"MS-PMincho-BoldItalic\"]=\"MS PMincho-BoldItalic\";t[\"MS-PMincho-Italic\"]=\"MS PMincho-Italic\";t.NuptialScript=\"Times-Italic\";t.SegoeUISymbol=\"Helvetica\"}));const getSerifFonts=getLookupTableFactory((function(t){t[\"Adobe Jenson\"]=true;t[\"Adobe Text\"]=true;t.Albertus=true;t.Aldus=true;t.Alexandria=true;t.Algerian=true;t[\"American Typewriter\"]=true;t.Antiqua=true;t.Apex=true;t.Arno=true;t.Aster=true;t.Aurora=true;t.Baskerville=true;t.Bell=true;t.Bembo=true;t[\"Bembo Schoolbook\"]=true;t.Benguiat=true;t[\"Berkeley Old Style\"]=true;t[\"Bernhard Modern\"]=true;t[\"Berthold City\"]=true;t.Bodoni=true;t[\"Bauer Bodoni\"]=true;t[\"Book Antiqua\"]=true;t.Bookman=true;t[\"Bordeaux Roman\"]=true;t[\"Californian FB\"]=true;t.Calisto=true;t.Calvert=true;t.Capitals=true;t.Cambria=true;t.Cartier=true;t.Caslon=true;t.Catull=true;t.Centaur=true;t[\"Century Old Style\"]=true;t[\"Century Schoolbook\"]=true;t.Chaparral=true;t[\"Charis SIL\"]=true;t.Cheltenham=true;t[\"Cholla Slab\"]=true;t.Clarendon=true;t.Clearface=true;t.Cochin=true;t.Colonna=true;t[\"Computer Modern\"]=true;t[\"Concrete Roman\"]=true;t.Constantia=true;t[\"Cooper Black\"]=true;t.Corona=true;t.Ecotype=true;t.Egyptienne=true;t.Elephant=true;t.Excelsior=true;t.Fairfield=true;t[\"FF Scala\"]=true;t.Folkard=true;t.Footlight=true;t.FreeSerif=true;t[\"Friz Quadrata\"]=true;t.Garamond=true;t.Gentium=true;t.Georgia=true;t.Gloucester=true;t[\"Goudy Old Style\"]=true;t[\"Goudy Schoolbook\"]=true;t[\"Goudy Pro Font\"]=true;t.Granjon=true;t[\"Guardian Egyptian\"]=true;t.Heather=true;t.Hercules=true;t[\"High Tower Text\"]=true;t.Hiroshige=true;t[\"Hoefler Text\"]=true;t[\"Humana Serif\"]=true;t.Imprint=true;t[\"Ionic No. 5\"]=true;t.Janson=true;t.Joanna=true;t.Korinna=true;t.Lexicon=true;t.LiberationSerif=true;t[\"Liberation Serif\"]=true;t[\"Linux Libertine\"]=true;t.Literaturnaya=true;t.Lucida=true;t[\"Lucida Bright\"]=true;t.Melior=true;t.Memphis=true;t.Miller=true;t.Minion=true;t.Modern=true;t[\"Mona Lisa\"]=true;t[\"Mrs Eaves\"]=true;t[\"MS Serif\"]=true;t[\"Museo Slab\"]=true;t[\"New York\"]=true;t[\"Nimbus Roman\"]=true;t[\"NPS Rawlinson Roadway\"]=true;t.NuptialScript=true;t.Palatino=true;t.Perpetua=true;t.Plantin=true;t[\"Plantin Schoolbook\"]=true;t.Playbill=true;t[\"Poor Richard\"]=true;t[\"Rawlinson Roadway\"]=true;t.Renault=true;t.Requiem=true;t.Rockwell=true;t.Roman=true;t[\"Rotis Serif\"]=true;t.Sabon=true;t.Scala=true;t.Seagull=true;t.Sistina=true;t.Souvenir=true;t.STIX=true;t[\"Stone Informal\"]=true;t[\"Stone Serif\"]=true;t.Sylfaen=true;t.Times=true;t.Trajan=true;t[\"Trinité\"]=true;t[\"Trump Mediaeval\"]=true;t.Utopia=true;t[\"Vale Type\"]=true;t[\"Bitstream Vera\"]=true;t[\"Vera Serif\"]=true;t.Versailles=true;t.Wanted=true;t.Weiss=true;t[\"Wide Latin\"]=true;t.Windsor=true;t.XITS=true}));const getSymbolsFonts=getLookupTableFactory((function(t){t.Dingbats=true;t.Symbol=true;t.ZapfDingbats=true;t.Wingdings=true;t[\"Wingdings-Bold\"]=true;t[\"Wingdings-Regular\"]=true}));const getGlyphMapForStandardFonts=getLookupTableFactory((function(t){t[2]=10;t[3]=32;t[4]=33;t[5]=34;t[6]=35;t[7]=36;t[8]=37;t[9]=38;t[10]=39;t[11]=40;t[12]=41;t[13]=42;t[14]=43;t[15]=44;t[16]=45;t[17]=46;t[18]=47;t[19]=48;t[20]=49;t[21]=50;t[22]=51;t[23]=52;t[24]=53;t[25]=54;t[26]=55;t[27]=56;t[28]=57;t[29]=58;t[30]=894;t[31]=60;t[32]=61;t[33]=62;t[34]=63;t[35]=64;t[36]=65;t[37]=66;t[38]=67;t[39]=68;t[40]=69;t[41]=70;t[42]=71;t[43]=72;t[44]=73;t[45]=74;t[46]=75;t[47]=76;t[48]=77;t[49]=78;t[50]=79;t[51]=80;t[52]=81;t[53]=82;t[54]=83;t[55]=84;t[56]=85;t[57]=86;t[58]=87;t[59]=88;t[60]=89;t[61]=90;t[62]=91;t[63]=92;t[64]=93;t[65]=94;t[66]=95;t[67]=96;t[68]=97;t[69]=98;t[70]=99;t[71]=100;t[72]=101;t[73]=102;t[74]=103;t[75]=104;t[76]=105;t[77]=106;t[78]=107;t[79]=108;t[80]=109;t[81]=110;t[82]=111;t[83]=112;t[84]=113;t[85]=114;t[86]=115;t[87]=116;t[88]=117;t[89]=118;t[90]=119;t[91]=120;t[92]=121;t[93]=122;t[94]=123;t[95]=124;t[96]=125;t[97]=126;t[98]=196;t[99]=197;t[100]=199;t[101]=201;t[102]=209;t[103]=214;t[104]=220;t[105]=225;t[106]=224;t[107]=226;t[108]=228;t[109]=227;t[110]=229;t[111]=231;t[112]=233;t[113]=232;t[114]=234;t[115]=235;t[116]=237;t[117]=236;t[118]=238;t[119]=239;t[120]=241;t[121]=243;t[122]=242;t[123]=244;t[124]=246;t[125]=245;t[126]=250;t[127]=249;t[128]=251;t[129]=252;t[130]=8224;t[131]=176;t[132]=162;t[133]=163;t[134]=167;t[135]=8226;t[136]=182;t[137]=223;t[138]=174;t[139]=169;t[140]=8482;t[141]=180;t[142]=168;t[143]=8800;t[144]=198;t[145]=216;t[146]=8734;t[147]=177;t[148]=8804;t[149]=8805;t[150]=165;t[151]=181;t[152]=8706;t[153]=8721;t[154]=8719;t[156]=8747;t[157]=170;t[158]=186;t[159]=8486;t[160]=230;t[161]=248;t[162]=191;t[163]=161;t[164]=172;t[165]=8730;t[166]=402;t[167]=8776;t[168]=8710;t[169]=171;t[170]=187;t[171]=8230;t[179]=8220;t[180]=8221;t[181]=8216;t[182]=8217;t[200]=193;t[203]=205;t[207]=211;t[210]=218;t[223]=711;t[224]=321;t[225]=322;t[226]=352;t[227]=353;t[228]=381;t[229]=382;t[233]=221;t[234]=253;t[252]=263;t[253]=268;t[254]=269;t[258]=258;t[260]=260;t[261]=261;t[265]=280;t[266]=281;t[267]=282;t[268]=283;t[269]=313;t[275]=323;t[276]=324;t[278]=328;t[283]=344;t[284]=345;t[285]=346;t[286]=347;t[292]=367;t[295]=377;t[296]=378;t[298]=380;t[305]=963;t[306]=964;t[307]=966;t[308]=8215;t[309]=8252;t[310]=8319;t[311]=8359;t[312]=8592;t[313]=8593;t[337]=9552;t[493]=1039;t[494]=1040;t[570]=1040;t[571]=1041;t[572]=1042;t[573]=1043;t[574]=1044;t[575]=1045;t[576]=1046;t[577]=1047;t[578]=1048;t[579]=1049;t[580]=1050;t[581]=1051;t[582]=1052;t[583]=1053;t[584]=1054;t[585]=1055;t[586]=1056;t[587]=1057;t[588]=1058;t[589]=1059;t[590]=1060;t[591]=1061;t[592]=1062;t[593]=1063;t[594]=1064;t[595]=1065;t[596]=1066;t[597]=1067;t[598]=1068;t[599]=1069;t[600]=1070;t[672]=1488;t[673]=1489;t[674]=1490;t[675]=1491;t[676]=1492;t[677]=1493;t[678]=1494;t[679]=1495;t[680]=1496;t[681]=1497;t[682]=1498;t[683]=1499;t[684]=1500;t[685]=1501;t[686]=1502;t[687]=1503;t[688]=1504;t[689]=1505;t[690]=1506;t[691]=1507;t[692]=1508;t[693]=1509;t[694]=1510;t[695]=1511;t[696]=1512;t[697]=1513;t[698]=1514;t[705]=1524;t[706]=8362;t[710]=64288;t[711]=64298;t[759]=1617;t[761]=1776;t[763]=1778;t[775]=1652;t[777]=1764;t[778]=1780;t[779]=1781;t[780]=1782;t[782]=771;t[783]=64726;t[786]=8363;t[788]=8532;t[790]=768;t[791]=769;t[792]=768;t[795]=803;t[797]=64336;t[798]=64337;t[799]=64342;t[800]=64343;t[801]=64344;t[802]=64345;t[803]=64362;t[804]=64363;t[805]=64364;t[2424]=7821;t[2425]=7822;t[2426]=7823;t[2427]=7824;t[2428]=7825;t[2429]=7826;t[2430]=7827;t[2433]=7682;t[2678]=8045;t[2679]=8046;t[2830]=1552;t[2838]=686;t[2840]=751;t[2842]=753;t[2843]=754;t[2844]=755;t[2846]=757;t[2856]=767;t[2857]=848;t[2858]=849;t[2862]=853;t[2863]=854;t[2864]=855;t[2865]=861;t[2866]=862;t[2906]=7460;t[2908]=7462;t[2909]=7463;t[2910]=7464;t[2912]=7466;t[2913]=7467;t[2914]=7468;t[2916]=7470;t[2917]=7471;t[2918]=7472;t[2920]=7474;t[2921]=7475;t[2922]=7476;t[2924]=7478;t[2925]=7479;t[2926]=7480;t[2928]=7482;t[2929]=7483;t[2930]=7484;t[2932]=7486;t[2933]=7487;t[2934]=7488;t[2936]=7490;t[2937]=7491;t[2938]=7492;t[2940]=7494;t[2941]=7495;t[2942]=7496;t[2944]=7498;t[2946]=7500;t[2948]=7502;t[2950]=7504;t[2951]=7505;t[2952]=7506;t[2954]=7508;t[2955]=7509;t[2956]=7510;t[2958]=7512;t[2959]=7513;t[2960]=7514;t[2962]=7516;t[2963]=7517;t[2964]=7518;t[2966]=7520;t[2967]=7521;t[2968]=7522;t[2970]=7524;t[2971]=7525;t[2972]=7526;t[2974]=7528;t[2975]=7529;t[2976]=7530;t[2978]=1537;t[2979]=1538;t[2980]=1539;t[2982]=1549;t[2983]=1551;t[2984]=1552;t[2986]=1554;t[2987]=1555;t[2988]=1556;t[2990]=1623;t[2991]=1624;t[2995]=1775;t[2999]=1791;t[3002]=64290;t[3003]=64291;t[3004]=64292;t[3006]=64294;t[3007]=64295;t[3008]=64296;t[3011]=1900;t[3014]=8223;t[3015]=8244;t[3017]=7532;t[3018]=7533;t[3019]=7534;t[3075]=7590;t[3076]=7591;t[3079]=7594;t[3080]=7595;t[3083]=7598;t[3084]=7599;t[3087]=7602;t[3088]=7603;t[3091]=7606;t[3092]=7607;t[3095]=7610;t[3096]=7611;t[3099]=7614;t[3100]=7615;t[3103]=7618;t[3104]=7619;t[3107]=8337;t[3108]=8338;t[3116]=1884;t[3119]=1885;t[3120]=1885;t[3123]=1886;t[3124]=1886;t[3127]=1887;t[3128]=1887;t[3131]=1888;t[3132]=1888;t[3135]=1889;t[3136]=1889;t[3139]=1890;t[3140]=1890;t[3143]=1891;t[3144]=1891;t[3147]=1892;t[3148]=1892;t[3153]=580;t[3154]=581;t[3157]=584;t[3158]=585;t[3161]=588;t[3162]=589;t[3165]=891;t[3166]=892;t[3169]=1274;t[3170]=1275;t[3173]=1278;t[3174]=1279;t[3181]=7622;t[3182]=7623;t[3282]=11799;t[3316]=578;t[3379]=42785;t[3393]=1159;t[3416]=8377}));const getSupplementalGlyphMapForArialBlack=getLookupTableFactory((function(t){t[227]=322;t[264]=261;t[291]=346}));const getSupplementalGlyphMapForCalibri=getLookupTableFactory((function(t){t[1]=32;t[4]=65;t[5]=192;t[6]=193;t[9]=196;t[17]=66;t[18]=67;t[21]=268;t[24]=68;t[28]=69;t[29]=200;t[30]=201;t[32]=282;t[38]=70;t[39]=71;t[44]=72;t[47]=73;t[48]=204;t[49]=205;t[58]=74;t[60]=75;t[62]=76;t[68]=77;t[69]=78;t[75]=79;t[76]=210;t[80]=214;t[87]=80;t[89]=81;t[90]=82;t[92]=344;t[94]=83;t[97]=352;t[100]=84;t[104]=85;t[109]=220;t[115]=86;t[116]=87;t[121]=88;t[122]=89;t[124]=221;t[127]=90;t[129]=381;t[258]=97;t[259]=224;t[260]=225;t[263]=228;t[268]=261;t[271]=98;t[272]=99;t[273]=263;t[275]=269;t[282]=100;t[286]=101;t[287]=232;t[288]=233;t[290]=283;t[295]=281;t[296]=102;t[336]=103;t[346]=104;t[349]=105;t[350]=236;t[351]=237;t[361]=106;t[364]=107;t[367]=108;t[371]=322;t[373]=109;t[374]=110;t[381]=111;t[382]=242;t[383]=243;t[386]=246;t[393]=112;t[395]=113;t[396]=114;t[398]=345;t[400]=115;t[401]=347;t[403]=353;t[410]=116;t[437]=117;t[442]=252;t[448]=118;t[449]=119;t[454]=120;t[455]=121;t[457]=253;t[460]=122;t[462]=382;t[463]=380;t[853]=44;t[855]=58;t[856]=46;t[876]=47;t[878]=45;t[882]=45;t[894]=40;t[895]=41;t[896]=91;t[897]=93;t[923]=64;t[940]=163;t[1004]=48;t[1005]=49;t[1006]=50;t[1007]=51;t[1008]=52;t[1009]=53;t[1010]=54;t[1011]=55;t[1012]=56;t[1013]=57;t[1081]=37;t[1085]=43;t[1086]=45}));function getStandardFontName(name){const fontName=normalizeFontName(name);const stdFontMap=getStdFontMap();return stdFontMap[fontName]}function isKnownFontName(name){const fontName=normalizeFontName(name);return!!(getStdFontMap()[fontName]||getNonStdFontMap()[fontName]||getSerifFonts()[fontName]||getSymbolsFonts()[fontName])}class ToUnicodeMap{constructor(cmap=[]){this._map=cmap}get length(){return this._map.length}forEach(callback){for(const charCode in this._map){callback(charCode,this._map[charCode].codePointAt(0))}}has(i){return this._map[i]!==undefined}get(i){return this._map[i]}charCodeOf(value){const map=this._map;if(map.length<=65536){return map.indexOf(value)}for(const charCode in map){if(map[charCode]===value){return charCode|0}}return-1}amend(map){for(const charCode in map){this._map[charCode]=map[charCode]}}}class IdentityToUnicodeMap{constructor(firstChar,lastChar){this.firstChar=firstChar;this.lastChar=lastChar}get length(){return this.lastChar+1-this.firstChar}forEach(callback){for(let i=this.firstChar,ii=this.lastChar;i<=ii;i++){callback(i,i)}}has(i){return this.firstChar<=i&&i<=this.lastChar}get(i){if(this.firstChar<=i&&i<=this.lastChar){return String.fromCharCode(i)}return undefined}charCodeOf(v){return Number.isInteger(v)&&v>=this.firstChar&&v<=this.lastChar?v:-1}amend(map){unreachable(\"Should not call amend()\")}}class CFFFont{constructor(file,properties){this.properties=properties;const parser=new CFFParser(file,properties,SEAC_ANALYSIS_ENABLED);this.cff=parser.parse();this.cff.duplicateFirstGlyph();const compiler=new CFFCompiler(this.cff);this.seacs=this.cff.seacs;try{this.data=compiler.compile()}catch{warn(\"Failed to compile font \"+properties.loadedName);this.data=file}this._createBuiltInEncoding()}get numGlyphs(){return this.cff.charStrings.count}getCharset(){return this.cff.charset.charset}getGlyphMapping(){const cff=this.cff;const properties=this.properties;const{cidToGidMap:cidToGidMap,cMap:cMap}=properties;const charsets=cff.charset.charset;let charCodeToGlyphId;let glyphId;if(properties.composite){let invCidToGidMap;if(cidToGidMap?.length>0){invCidToGidMap=Object.create(null);for(let i=0,ii=cidToGidMap.length;i<ii;i++){const gid=cidToGidMap[i];if(gid!==undefined){invCidToGidMap[gid]=i}}}charCodeToGlyphId=Object.create(null);let charCode;if(cff.isCIDFont){for(glyphId=0;glyphId<charsets.length;glyphId++){const cid=charsets[glyphId];charCode=cMap.charCodeOf(cid);if(invCidToGidMap?.[charCode]!==undefined){charCode=invCidToGidMap[charCode]}charCodeToGlyphId[charCode]=glyphId}}else{for(glyphId=0;glyphId<cff.charStrings.count;glyphId++){charCode=cMap.charCodeOf(glyphId);charCodeToGlyphId[charCode]=glyphId}}return charCodeToGlyphId}let encoding=cff.encoding?cff.encoding.encoding:null;if(properties.isInternalFont){encoding=properties.defaultEncoding}charCodeToGlyphId=type1FontGlyphMapping(properties,encoding,charsets);return charCodeToGlyphId}hasGlyphId(id){return this.cff.hasGlyphId(id)}_createBuiltInEncoding(){const{charset:charset,encoding:encoding}=this.cff;if(!charset||!encoding){return}const charsets=charset.charset,encodings=encoding.encoding;const map=[];for(const charCode in encodings){const glyphId=encodings[charCode];if(glyphId>=0){const glyphName=charsets[glyphId];if(glyphName){map[charCode]=glyphName}}}if(map.length>0){this.properties.builtInEncoding=map}}}function getFloat214(data,offset){return readInt16(data,offset)/16384}function getSubroutineBias(subrs){const numSubrs=subrs.length;let bias=32768;if(numSubrs<1240){bias=107}else if(numSubrs<33900){bias=1131}return bias}function parseCmap(data,start,end){const offset=readUint16(data,start+2)===1?readUint32(data,start+8):readUint32(data,start+16);const format=readUint16(data,start+offset);let ranges,p,i;if(format===4){readUint16(data,start+offset+2);const segCount=readUint16(data,start+offset+6)>>1;p=start+offset+14;ranges=[];for(i=0;i<segCount;i++,p+=2){ranges[i]={end:readUint16(data,p)}}p+=2;for(i=0;i<segCount;i++,p+=2){ranges[i].start=readUint16(data,p)}for(i=0;i<segCount;i++,p+=2){ranges[i].idDelta=readUint16(data,p)}for(i=0;i<segCount;i++,p+=2){let idOffset=readUint16(data,p);if(idOffset===0){continue}ranges[i].ids=[];for(let j=0,jj=ranges[i].end-ranges[i].start+1;j<jj;j++){ranges[i].ids[j]=readUint16(data,p+idOffset);idOffset+=2}}return ranges}else if(format===12){const groups=readUint32(data,start+offset+12);p=start+offset+16;ranges=[];for(i=0;i<groups;i++){start=readUint32(data,p);ranges.push({start:start,end:readUint32(data,p+4),idDelta:readUint32(data,p+8)-start});p+=12}return ranges}throw new FormatError(`unsupported cmap: ${format}`)}function parseCff(data,start,end,seacAnalysisEnabled){const properties={};const parser=new CFFParser(new Stream(data,start,end-start),properties,seacAnalysisEnabled);const cff=parser.parse();return{glyphs:cff.charStrings.objects,subrs:cff.topDict.privateDict?.subrsIndex?.objects,gsubrs:cff.globalSubrIndex?.objects,isCFFCIDFont:cff.isCIDFont,fdSelect:cff.fdSelect,fdArray:cff.fdArray}}function parseGlyfTable(glyf,loca,isGlyphLocationsLong){let itemSize,itemDecode;if(isGlyphLocationsLong){itemSize=4;itemDecode=readUint32}else{itemSize=2;itemDecode=(data,offset)=>2*readUint16(data,offset)}const glyphs=[];let startOffset=itemDecode(loca,0);for(let j=itemSize;j<loca.length;j+=itemSize){const endOffset=itemDecode(loca,j);glyphs.push(glyf.subarray(startOffset,endOffset));startOffset=endOffset}return glyphs}function lookupCmap(ranges,unicode){const code=unicode.codePointAt(0);let gid=0,l=0,r=ranges.length-1;while(l<r){const c=l+r+1>>1;if(code<ranges[c].start){r=c-1}else{l=c}}if(ranges[l].start<=code&&code<=ranges[l].end){gid=ranges[l].idDelta+(ranges[l].ids?ranges[l].ids[code-ranges[l].start]:code)&65535}return{charCode:code,glyphId:gid}}function compileGlyf(code,cmds,font){function moveTo(x,y){if(firstPoint){cmds.add(\"L\",firstPoint)}firstPoint=[x,y];cmds.add(\"M\",[x,y])}function lineTo(x,y){cmds.add(\"L\",[x,y])}function quadraticCurveTo(xa,ya,x,y){cmds.add(\"Q\",[xa,ya,x,y])}let i=0;const numberOfContours=readInt16(code,i);let flags;let firstPoint=null;let x=0,y=0;i+=10;if(numberOfContours<0){do{flags=readUint16(code,i);const glyphIndex=readUint16(code,i+2);i+=4;let arg1,arg2;if(flags&1){if(flags&2){arg1=readInt16(code,i);arg2=readInt16(code,i+2)}else{arg1=readUint16(code,i);arg2=readUint16(code,i+2)}i+=4}else if(flags&2){arg1=readInt8(code,i++);arg2=readInt8(code,i++)}else{arg1=code[i++];arg2=code[i++]}if(flags&2){x=arg1;y=arg2}else{x=0;y=0}let scaleX=1,scaleY=1,scale01=0,scale10=0;if(flags&8){scaleX=scaleY=getFloat214(code,i);i+=2}else if(flags&64){scaleX=getFloat214(code,i);scaleY=getFloat214(code,i+2);i+=4}else if(flags&128){scaleX=getFloat214(code,i);scale01=getFloat214(code,i+2);scale10=getFloat214(code,i+4);scaleY=getFloat214(code,i+6);i+=8}const subglyph=font.glyphs[glyphIndex];if(subglyph){cmds.save();cmds.transform([scaleX,scale01,scale10,scaleY,x,y]);if(!(flags&2)){}compileGlyf(subglyph,cmds,font);cmds.restore()}}while(flags&32)}else{const endPtsOfContours=[];let j,jj;for(j=0;j<numberOfContours;j++){endPtsOfContours.push(readUint16(code,i));i+=2}const instructionLength=readUint16(code,i);i+=2+instructionLength;const numberOfPoints=endPtsOfContours.at(-1)+1;const points=[];while(points.length<numberOfPoints){flags=code[i++];let repeat=1;if(flags&8){repeat+=code[i++]}while(repeat-- >0){points.push({flags:flags})}}for(j=0;j<numberOfPoints;j++){switch(points[j].flags&18){case 0:x+=readInt16(code,i);i+=2;break;case 2:x-=code[i++];break;case 18:x+=code[i++];break}points[j].x=x}for(j=0;j<numberOfPoints;j++){switch(points[j].flags&36){case 0:y+=readInt16(code,i);i+=2;break;case 4:y-=code[i++];break;case 36:y+=code[i++];break}points[j].y=y}let startPoint=0;for(i=0;i<numberOfContours;i++){const endPoint=endPtsOfContours[i];const contour=points.slice(startPoint,endPoint+1);if(contour[0].flags&1){contour.push(contour[0])}else if(contour.at(-1).flags&1){contour.unshift(contour.at(-1))}else{const p={flags:1,x:(contour[0].x+contour.at(-1).x)/2,y:(contour[0].y+contour.at(-1).y)/2};contour.unshift(p);contour.push(p)}moveTo(contour[0].x,contour[0].y);for(j=1,jj=contour.length;j<jj;j++){if(contour[j].flags&1){lineTo(contour[j].x,contour[j].y)}else if(contour[j+1].flags&1){quadraticCurveTo(contour[j].x,contour[j].y,contour[j+1].x,contour[j+1].y);j++}else{quadraticCurveTo(contour[j].x,contour[j].y,(contour[j].x+contour[j+1].x)/2,(contour[j].y+contour[j+1].y)/2)}}startPoint=endPoint+1}}}function compileCharString(charStringCode,cmds,font,glyphId){function moveTo(x,y){if(firstPoint){cmds.add(\"L\",firstPoint)}firstPoint=[x,y];cmds.add(\"M\",[x,y])}function lineTo(x,y){cmds.add(\"L\",[x,y])}function bezierCurveTo(x1,y1,x2,y2,x,y){cmds.add(\"C\",[x1,y1,x2,y2,x,y])}const stack=[];let x=0,y=0;let stems=0;let firstPoint=null;function parse(code){let i=0;while(i<code.length){let stackClean=false;let v=code[i++];let xa,xb,ya,yb,y1,y2,y3,n,subrCode;switch(v){case 1:stems+=stack.length>>1;stackClean=true;break;case 3:stems+=stack.length>>1;stackClean=true;break;case 4:y+=stack.pop();moveTo(x,y);stackClean=true;break;case 5:while(stack.length>0){x+=stack.shift();y+=stack.shift();lineTo(x,y)}break;case 6:while(stack.length>0){x+=stack.shift();lineTo(x,y);if(stack.length===0){break}y+=stack.shift();lineTo(x,y)}break;case 7:while(stack.length>0){y+=stack.shift();lineTo(x,y);if(stack.length===0){break}x+=stack.shift();lineTo(x,y)}break;case 8:while(stack.length>0){xa=x+stack.shift();ya=y+stack.shift();xb=xa+stack.shift();yb=ya+stack.shift();x=xb+stack.shift();y=yb+stack.shift();bezierCurveTo(xa,ya,xb,yb,x,y)}break;case 10:n=stack.pop();subrCode=null;if(font.isCFFCIDFont){const fdIndex=font.fdSelect.getFDIndex(glyphId);if(fdIndex>=0&&fdIndex<font.fdArray.length){const fontDict=font.fdArray[fdIndex];let subrs;if(fontDict.privateDict?.subrsIndex){subrs=fontDict.privateDict.subrsIndex.objects}if(subrs){n+=getSubroutineBias(subrs);subrCode=subrs[n]}}else{warn(\"Invalid fd index for glyph index.\")}}else{subrCode=font.subrs[n+font.subrsBias]}if(subrCode){parse(subrCode)}break;case 11:return;case 12:v=code[i++];switch(v){case 34:xa=x+stack.shift();xb=xa+stack.shift();y1=y+stack.shift();x=xb+stack.shift();bezierCurveTo(xa,y,xb,y1,x,y1);xa=x+stack.shift();xb=xa+stack.shift();x=xb+stack.shift();bezierCurveTo(xa,y1,xb,y,x,y);break;case 35:xa=x+stack.shift();ya=y+stack.shift();xb=xa+stack.shift();yb=ya+stack.shift();x=xb+stack.shift();y=yb+stack.shift();bezierCurveTo(xa,ya,xb,yb,x,y);xa=x+stack.shift();ya=y+stack.shift();xb=xa+stack.shift();yb=ya+stack.shift();x=xb+stack.shift();y=yb+stack.shift();bezierCurveTo(xa,ya,xb,yb,x,y);stack.pop();break;case 36:xa=x+stack.shift();y1=y+stack.shift();xb=xa+stack.shift();y2=y1+stack.shift();x=xb+stack.shift();bezierCurveTo(xa,y1,xb,y2,x,y2);xa=x+stack.shift();xb=xa+stack.shift();y3=y2+stack.shift();x=xb+stack.shift();bezierCurveTo(xa,y2,xb,y3,x,y);break;case 37:const x0=x,y0=y;xa=x+stack.shift();ya=y+stack.shift();xb=xa+stack.shift();yb=ya+stack.shift();x=xb+stack.shift();y=yb+stack.shift();bezierCurveTo(xa,ya,xb,yb,x,y);xa=x+stack.shift();ya=y+stack.shift();xb=xa+stack.shift();yb=ya+stack.shift();x=xb;y=yb;if(Math.abs(x-x0)>Math.abs(y-y0)){x+=stack.shift()}else{y+=stack.shift()}bezierCurveTo(xa,ya,xb,yb,x,y);break;default:throw new FormatError(`unknown operator: 12 ${v}`)}break;case 14:if(stack.length>=4){const achar=stack.pop();const bchar=stack.pop();y=stack.pop();x=stack.pop();cmds.save();cmds.translate(x,y);let cmap=lookupCmap(font.cmap,String.fromCharCode(font.glyphNameMap[StandardEncoding[achar]]));compileCharString(font.glyphs[cmap.glyphId],cmds,font,cmap.glyphId);cmds.restore();cmap=lookupCmap(font.cmap,String.fromCharCode(font.glyphNameMap[StandardEncoding[bchar]]));compileCharString(font.glyphs[cmap.glyphId],cmds,font,cmap.glyphId)}return;case 18:stems+=stack.length>>1;stackClean=true;break;case 19:stems+=stack.length>>1;i+=stems+7>>3;stackClean=true;break;case 20:stems+=stack.length>>1;i+=stems+7>>3;stackClean=true;break;case 21:y+=stack.pop();x+=stack.pop();moveTo(x,y);stackClean=true;break;case 22:x+=stack.pop();moveTo(x,y);stackClean=true;break;case 23:stems+=stack.length>>1;stackClean=true;break;case 24:while(stack.length>2){xa=x+stack.shift();ya=y+stack.shift();xb=xa+stack.shift();yb=ya+stack.shift();x=xb+stack.shift();y=yb+stack.shift();bezierCurveTo(xa,ya,xb,yb,x,y)}x+=stack.shift();y+=stack.shift();lineTo(x,y);break;case 25:while(stack.length>6){x+=stack.shift();y+=stack.shift();lineTo(x,y)}xa=x+stack.shift();ya=y+stack.shift();xb=xa+stack.shift();yb=ya+stack.shift();x=xb+stack.shift();y=yb+stack.shift();bezierCurveTo(xa,ya,xb,yb,x,y);break;case 26:if(stack.length%2){x+=stack.shift()}while(stack.length>0){xa=x;ya=y+stack.shift();xb=xa+stack.shift();yb=ya+stack.shift();x=xb;y=yb+stack.shift();bezierCurveTo(xa,ya,xb,yb,x,y)}break;case 27:if(stack.length%2){y+=stack.shift()}while(stack.length>0){xa=x+stack.shift();ya=y;xb=xa+stack.shift();yb=ya+stack.shift();x=xb+stack.shift();y=yb;bezierCurveTo(xa,ya,xb,yb,x,y)}break;case 28:stack.push(readInt16(code,i));i+=2;break;case 29:n=stack.pop()+font.gsubrsBias;subrCode=font.gsubrs[n];if(subrCode){parse(subrCode)}break;case 30:while(stack.length>0){xa=x;ya=y+stack.shift();xb=xa+stack.shift();yb=ya+stack.shift();x=xb+stack.shift();y=yb+(stack.length===1?stack.shift():0);bezierCurveTo(xa,ya,xb,yb,x,y);if(stack.length===0){break}xa=x+stack.shift();ya=y;xb=xa+stack.shift();yb=ya+stack.shift();y=yb+stack.shift();x=xb+(stack.length===1?stack.shift():0);bezierCurveTo(xa,ya,xb,yb,x,y)}break;case 31:while(stack.length>0){xa=x+stack.shift();ya=y;xb=xa+stack.shift();yb=ya+stack.shift();y=yb+stack.shift();x=xb+(stack.length===1?stack.shift():0);bezierCurveTo(xa,ya,xb,yb,x,y);if(stack.length===0){break}xa=x;ya=y+stack.shift();xb=xa+stack.shift();yb=ya+stack.shift();x=xb+stack.shift();y=yb+(stack.length===1?stack.shift():0);bezierCurveTo(xa,ya,xb,yb,x,y)}break;default:if(v<32){throw new FormatError(`unknown operator: ${v}`)}if(v<247){stack.push(v-139)}else if(v<251){stack.push((v-247)*256+code[i++]+108)}else if(v<255){stack.push(-(v-251)*256-code[i++]-108)}else{stack.push((code[i]<<24|code[i+1]<<16|code[i+2]<<8|code[i+3])/65536);i+=4}break}if(stackClean){stack.length=0}}}parse(charStringCode)}const NOOP=\"\";class Commands{cmds=[];transformStack=[];currentTransform=[1,0,0,1,0,0];add(cmd,args){if(args){const{currentTransform:currentTransform}=this;for(let i=0,ii=args.length;i<ii;i+=2){Util.applyTransform(args,currentTransform,i)}this.cmds.push(`${cmd}${args.join(\" \")}`)}else{this.cmds.push(cmd)}}transform(transf){this.currentTransform=Util.transform(this.currentTransform,transf)}translate(x,y){this.transform([1,0,0,1,x,y])}save(){this.transformStack.push(this.currentTransform.slice())}restore(){this.currentTransform=this.transformStack.pop()||[1,0,0,1,0,0]}getSVG(){return this.cmds.join(\"\")}}class CompiledFont{constructor(fontMatrix){this.fontMatrix=fontMatrix;this.compiledGlyphs=Object.create(null);this.compiledCharCodeToGlyphId=Object.create(null)}getPathJs(unicode){const{charCode:charCode,glyphId:glyphId}=lookupCmap(this.cmap,unicode);let fn=this.compiledGlyphs[glyphId],compileEx;if(fn===undefined){try{fn=this.compileGlyph(this.glyphs[glyphId],glyphId)}catch(ex){fn=NOOP;compileEx=ex}this.compiledGlyphs[glyphId]=fn}this.compiledCharCodeToGlyphId[charCode]??=glyphId;if(compileEx){throw compileEx}return fn}compileGlyph(code,glyphId){if(!code?.length||code[0]===14){return NOOP}let fontMatrix=this.fontMatrix;if(this.isCFFCIDFont){const fdIndex=this.fdSelect.getFDIndex(glyphId);if(fdIndex>=0&&fdIndex<this.fdArray.length){const fontDict=this.fdArray[fdIndex];fontMatrix=fontDict.getByName(\"FontMatrix\")||FONT_IDENTITY_MATRIX}else{warn(\"Invalid fd index for glyph index.\")}}assert(isNumberArray(fontMatrix,6),\"Expected a valid fontMatrix.\");const cmds=new Commands;cmds.transform(fontMatrix.slice());this.compileGlyphImpl(code,cmds,glyphId);cmds.add(\"Z\");return cmds.getSVG()}compileGlyphImpl(){unreachable(\"Children classes should implement this.\")}hasBuiltPath(unicode){const{charCode:charCode,glyphId:glyphId}=lookupCmap(this.cmap,unicode);return this.compiledGlyphs[glyphId]!==undefined&&this.compiledCharCodeToGlyphId[charCode]!==undefined}}class TrueTypeCompiled extends CompiledFont{constructor(glyphs,cmap,fontMatrix){super(fontMatrix||[488e-6,0,0,488e-6,0,0]);this.glyphs=glyphs;this.cmap=cmap}compileGlyphImpl(code,cmds){compileGlyf(code,cmds,this)}}class Type2Compiled extends CompiledFont{constructor(cffInfo,cmap,fontMatrix){super(fontMatrix||[.001,0,0,.001,0,0]);this.glyphs=cffInfo.glyphs;this.gsubrs=cffInfo.gsubrs||[];this.subrs=cffInfo.subrs||[];this.cmap=cmap;this.glyphNameMap=getGlyphsUnicode();this.gsubrsBias=getSubroutineBias(this.gsubrs);this.subrsBias=getSubroutineBias(this.subrs);this.isCFFCIDFont=cffInfo.isCFFCIDFont;this.fdSelect=cffInfo.fdSelect;this.fdArray=cffInfo.fdArray}compileGlyphImpl(code,cmds,glyphId){compileCharString(code,cmds,this,glyphId)}}class FontRendererFactory{static create(font,seacAnalysisEnabled){const data=new Uint8Array(font.data);let cmap,glyf,loca,cff,indexToLocFormat,unitsPerEm;const numTables=readUint16(data,4);for(let i=0,p=12;i<numTables;i++,p+=16){const tag=bytesToString(data.subarray(p,p+4));const offset=readUint32(data,p+8);const length=readUint32(data,p+12);switch(tag){case\"cmap\":cmap=parseCmap(data,offset,offset+length);break;case\"glyf\":glyf=data.subarray(offset,offset+length);break;case\"loca\":loca=data.subarray(offset,offset+length);break;case\"head\":unitsPerEm=readUint16(data,offset+18);indexToLocFormat=readUint16(data,offset+50);break;case\"CFF \":cff=parseCff(data,offset,offset+length,seacAnalysisEnabled);break}}if(glyf){const fontMatrix=!unitsPerEm?font.fontMatrix:[1/unitsPerEm,0,0,1/unitsPerEm,0,0];return new TrueTypeCompiled(parseGlyfTable(glyf,loca,indexToLocFormat),cmap,fontMatrix)}return new Type2Compiled(cff,cmap,font.fontMatrix)}}const getMetrics=getLookupTableFactory((function(t){t.Courier=600;t[\"Courier-Bold\"]=600;t[\"Courier-BoldOblique\"]=600;t[\"Courier-Oblique\"]=600;t.Helvetica=getLookupTableFactory((function(t){t.space=278;t.exclam=278;t.quotedbl=355;t.numbersign=556;t.dollar=556;t.percent=889;t.ampersand=667;t.quoteright=222;t.parenleft=333;t.parenright=333;t.asterisk=389;t.plus=584;t.comma=278;t.hyphen=333;t.period=278;t.slash=278;t.zero=556;t.one=556;t.two=556;t.three=556;t.four=556;t.five=556;t.six=556;t.seven=556;t.eight=556;t.nine=556;t.colon=278;t.semicolon=278;t.less=584;t.equal=584;t.greater=584;t.question=556;t.at=1015;t.A=667;t.B=667;t.C=722;t.D=722;t.E=667;t.F=611;t.G=778;t.H=722;t.I=278;t.J=500;t.K=667;t.L=556;t.M=833;t.N=722;t.O=778;t.P=667;t.Q=778;t.R=722;t.S=667;t.T=611;t.U=722;t.V=667;t.W=944;t.X=667;t.Y=667;t.Z=611;t.bracketleft=278;t.backslash=278;t.bracketright=278;t.asciicircum=469;t.underscore=556;t.quoteleft=222;t.a=556;t.b=556;t.c=500;t.d=556;t.e=556;t.f=278;t.g=556;t.h=556;t.i=222;t.j=222;t.k=500;t.l=222;t.m=833;t.n=556;t.o=556;t.p=556;t.q=556;t.r=333;t.s=500;t.t=278;t.u=556;t.v=500;t.w=722;t.x=500;t.y=500;t.z=500;t.braceleft=334;t.bar=260;t.braceright=334;t.asciitilde=584;t.exclamdown=333;t.cent=556;t.sterling=556;t.fraction=167;t.yen=556;t.florin=556;t.section=556;t.currency=556;t.quotesingle=191;t.quotedblleft=333;t.guillemotleft=556;t.guilsinglleft=333;t.guilsinglright=333;t.fi=500;t.fl=500;t.endash=556;t.dagger=556;t.daggerdbl=556;t.periodcentered=278;t.paragraph=537;t.bullet=350;t.quotesinglbase=222;t.quotedblbase=333;t.quotedblright=333;t.guillemotright=556;t.ellipsis=1e3;t.perthousand=1e3;t.questiondown=611;t.grave=333;t.acute=333;t.circumflex=333;t.tilde=333;t.macron=333;t.breve=333;t.dotaccent=333;t.dieresis=333;t.ring=333;t.cedilla=333;t.hungarumlaut=333;t.ogonek=333;t.caron=333;t.emdash=1e3;t.AE=1e3;t.ordfeminine=370;t.Lslash=556;t.Oslash=778;t.OE=1e3;t.ordmasculine=365;t.ae=889;t.dotlessi=278;t.lslash=222;t.oslash=611;t.oe=944;t.germandbls=611;t.Idieresis=278;t.eacute=556;t.abreve=556;t.uhungarumlaut=556;t.ecaron=556;t.Ydieresis=667;t.divide=584;t.Yacute=667;t.Acircumflex=667;t.aacute=556;t.Ucircumflex=722;t.yacute=500;t.scommaaccent=500;t.ecircumflex=556;t.Uring=722;t.Udieresis=722;t.aogonek=556;t.Uacute=722;t.uogonek=556;t.Edieresis=667;t.Dcroat=722;t.commaaccent=250;t.copyright=737;t.Emacron=667;t.ccaron=500;t.aring=556;t.Ncommaaccent=722;t.lacute=222;t.agrave=556;t.Tcommaaccent=611;t.Cacute=722;t.atilde=556;t.Edotaccent=667;t.scaron=500;t.scedilla=500;t.iacute=278;t.lozenge=471;t.Rcaron=722;t.Gcommaaccent=778;t.ucircumflex=556;t.acircumflex=556;t.Amacron=667;t.rcaron=333;t.ccedilla=500;t.Zdotaccent=611;t.Thorn=667;t.Omacron=778;t.Racute=722;t.Sacute=667;t.dcaron=643;t.Umacron=722;t.uring=556;t.threesuperior=333;t.Ograve=778;t.Agrave=667;t.Abreve=667;t.multiply=584;t.uacute=556;t.Tcaron=611;t.partialdiff=476;t.ydieresis=500;t.Nacute=722;t.icircumflex=278;t.Ecircumflex=667;t.adieresis=556;t.edieresis=556;t.cacute=500;t.nacute=556;t.umacron=556;t.Ncaron=722;t.Iacute=278;t.plusminus=584;t.brokenbar=260;t.registered=737;t.Gbreve=778;t.Idotaccent=278;t.summation=600;t.Egrave=667;t.racute=333;t.omacron=556;t.Zacute=611;t.Zcaron=611;t.greaterequal=549;t.Eth=722;t.Ccedilla=722;t.lcommaaccent=222;t.tcaron=317;t.eogonek=556;t.Uogonek=722;t.Aacute=667;t.Adieresis=667;t.egrave=556;t.zacute=500;t.iogonek=222;t.Oacute=778;t.oacute=556;t.amacron=556;t.sacute=500;t.idieresis=278;t.Ocircumflex=778;t.Ugrave=722;t.Delta=612;t.thorn=556;t.twosuperior=333;t.Odieresis=778;t.mu=556;t.igrave=278;t.ohungarumlaut=556;t.Eogonek=667;t.dcroat=556;t.threequarters=834;t.Scedilla=667;t.lcaron=299;t.Kcommaaccent=667;t.Lacute=556;t.trademark=1e3;t.edotaccent=556;t.Igrave=278;t.Imacron=278;t.Lcaron=556;t.onehalf=834;t.lessequal=549;t.ocircumflex=556;t.ntilde=556;t.Uhungarumlaut=722;t.Eacute=667;t.emacron=556;t.gbreve=556;t.onequarter=834;t.Scaron=667;t.Scommaaccent=667;t.Ohungarumlaut=778;t.degree=400;t.ograve=556;t.Ccaron=722;t.ugrave=556;t.radical=453;t.Dcaron=722;t.rcommaaccent=333;t.Ntilde=722;t.otilde=556;t.Rcommaaccent=722;t.Lcommaaccent=556;t.Atilde=667;t.Aogonek=667;t.Aring=667;t.Otilde=778;t.zdotaccent=500;t.Ecaron=667;t.Iogonek=278;t.kcommaaccent=500;t.minus=584;t.Icircumflex=278;t.ncaron=556;t.tcommaaccent=278;t.logicalnot=584;t.odieresis=556;t.udieresis=556;t.notequal=549;t.gcommaaccent=556;t.eth=556;t.zcaron=500;t.ncommaaccent=556;t.onesuperior=333;t.imacron=278;t.Euro=556}));t[\"Helvetica-Bold\"]=getLookupTableFactory((function(t){t.space=278;t.exclam=333;t.quotedbl=474;t.numbersign=556;t.dollar=556;t.percent=889;t.ampersand=722;t.quoteright=278;t.parenleft=333;t.parenright=333;t.asterisk=389;t.plus=584;t.comma=278;t.hyphen=333;t.period=278;t.slash=278;t.zero=556;t.one=556;t.two=556;t.three=556;t.four=556;t.five=556;t.six=556;t.seven=556;t.eight=556;t.nine=556;t.colon=333;t.semicolon=333;t.less=584;t.equal=584;t.greater=584;t.question=611;t.at=975;t.A=722;t.B=722;t.C=722;t.D=722;t.E=667;t.F=611;t.G=778;t.H=722;t.I=278;t.J=556;t.K=722;t.L=611;t.M=833;t.N=722;t.O=778;t.P=667;t.Q=778;t.R=722;t.S=667;t.T=611;t.U=722;t.V=667;t.W=944;t.X=667;t.Y=667;t.Z=611;t.bracketleft=333;t.backslash=278;t.bracketright=333;t.asciicircum=584;t.underscore=556;t.quoteleft=278;t.a=556;t.b=611;t.c=556;t.d=611;t.e=556;t.f=333;t.g=611;t.h=611;t.i=278;t.j=278;t.k=556;t.l=278;t.m=889;t.n=611;t.o=611;t.p=611;t.q=611;t.r=389;t.s=556;t.t=333;t.u=611;t.v=556;t.w=778;t.x=556;t.y=556;t.z=500;t.braceleft=389;t.bar=280;t.braceright=389;t.asciitilde=584;t.exclamdown=333;t.cent=556;t.sterling=556;t.fraction=167;t.yen=556;t.florin=556;t.section=556;t.currency=556;t.quotesingle=238;t.quotedblleft=500;t.guillemotleft=556;t.guilsinglleft=333;t.guilsinglright=333;t.fi=611;t.fl=611;t.endash=556;t.dagger=556;t.daggerdbl=556;t.periodcentered=278;t.paragraph=556;t.bullet=350;t.quotesinglbase=278;t.quotedblbase=500;t.quotedblright=500;t.guillemotright=556;t.ellipsis=1e3;t.perthousand=1e3;t.questiondown=611;t.grave=333;t.acute=333;t.circumflex=333;t.tilde=333;t.macron=333;t.breve=333;t.dotaccent=333;t.dieresis=333;t.ring=333;t.cedilla=333;t.hungarumlaut=333;t.ogonek=333;t.caron=333;t.emdash=1e3;t.AE=1e3;t.ordfeminine=370;t.Lslash=611;t.Oslash=778;t.OE=1e3;t.ordmasculine=365;t.ae=889;t.dotlessi=278;t.lslash=278;t.oslash=611;t.oe=944;t.germandbls=611;t.Idieresis=278;t.eacute=556;t.abreve=556;t.uhungarumlaut=611;t.ecaron=556;t.Ydieresis=667;t.divide=584;t.Yacute=667;t.Acircumflex=722;t.aacute=556;t.Ucircumflex=722;t.yacute=556;t.scommaaccent=556;t.ecircumflex=556;t.Uring=722;t.Udieresis=722;t.aogonek=556;t.Uacute=722;t.uogonek=611;t.Edieresis=667;t.Dcroat=722;t.commaaccent=250;t.copyright=737;t.Emacron=667;t.ccaron=556;t.aring=556;t.Ncommaaccent=722;t.lacute=278;t.agrave=556;t.Tcommaaccent=611;t.Cacute=722;t.atilde=556;t.Edotaccent=667;t.scaron=556;t.scedilla=556;t.iacute=278;t.lozenge=494;t.Rcaron=722;t.Gcommaaccent=778;t.ucircumflex=611;t.acircumflex=556;t.Amacron=722;t.rcaron=389;t.ccedilla=556;t.Zdotaccent=611;t.Thorn=667;t.Omacron=778;t.Racute=722;t.Sacute=667;t.dcaron=743;t.Umacron=722;t.uring=611;t.threesuperior=333;t.Ograve=778;t.Agrave=722;t.Abreve=722;t.multiply=584;t.uacute=611;t.Tcaron=611;t.partialdiff=494;t.ydieresis=556;t.Nacute=722;t.icircumflex=278;t.Ecircumflex=667;t.adieresis=556;t.edieresis=556;t.cacute=556;t.nacute=611;t.umacron=611;t.Ncaron=722;t.Iacute=278;t.plusminus=584;t.brokenbar=280;t.registered=737;t.Gbreve=778;t.Idotaccent=278;t.summation=600;t.Egrave=667;t.racute=389;t.omacron=611;t.Zacute=611;t.Zcaron=611;t.greaterequal=549;t.Eth=722;t.Ccedilla=722;t.lcommaaccent=278;t.tcaron=389;t.eogonek=556;t.Uogonek=722;t.Aacute=722;t.Adieresis=722;t.egrave=556;t.zacute=500;t.iogonek=278;t.Oacute=778;t.oacute=611;t.amacron=556;t.sacute=556;t.idieresis=278;t.Ocircumflex=778;t.Ugrave=722;t.Delta=612;t.thorn=611;t.twosuperior=333;t.Odieresis=778;t.mu=611;t.igrave=278;t.ohungarumlaut=611;t.Eogonek=667;t.dcroat=611;t.threequarters=834;t.Scedilla=667;t.lcaron=400;t.Kcommaaccent=722;t.Lacute=611;t.trademark=1e3;t.edotaccent=556;t.Igrave=278;t.Imacron=278;t.Lcaron=611;t.onehalf=834;t.lessequal=549;t.ocircumflex=611;t.ntilde=611;t.Uhungarumlaut=722;t.Eacute=667;t.emacron=556;t.gbreve=611;t.onequarter=834;t.Scaron=667;t.Scommaaccent=667;t.Ohungarumlaut=778;t.degree=400;t.ograve=611;t.Ccaron=722;t.ugrave=611;t.radical=549;t.Dcaron=722;t.rcommaaccent=389;t.Ntilde=722;t.otilde=611;t.Rcommaaccent=722;t.Lcommaaccent=611;t.Atilde=722;t.Aogonek=722;t.Aring=722;t.Otilde=778;t.zdotaccent=500;t.Ecaron=667;t.Iogonek=278;t.kcommaaccent=556;t.minus=584;t.Icircumflex=278;t.ncaron=611;t.tcommaaccent=333;t.logicalnot=584;t.odieresis=611;t.udieresis=611;t.notequal=549;t.gcommaaccent=611;t.eth=611;t.zcaron=500;t.ncommaaccent=611;t.onesuperior=333;t.imacron=278;t.Euro=556}));t[\"Helvetica-BoldOblique\"]=getLookupTableFactory((function(t){t.space=278;t.exclam=333;t.quotedbl=474;t.numbersign=556;t.dollar=556;t.percent=889;t.ampersand=722;t.quoteright=278;t.parenleft=333;t.parenright=333;t.asterisk=389;t.plus=584;t.comma=278;t.hyphen=333;t.period=278;t.slash=278;t.zero=556;t.one=556;t.two=556;t.three=556;t.four=556;t.five=556;t.six=556;t.seven=556;t.eight=556;t.nine=556;t.colon=333;t.semicolon=333;t.less=584;t.equal=584;t.greater=584;t.question=611;t.at=975;t.A=722;t.B=722;t.C=722;t.D=722;t.E=667;t.F=611;t.G=778;t.H=722;t.I=278;t.J=556;t.K=722;t.L=611;t.M=833;t.N=722;t.O=778;t.P=667;t.Q=778;t.R=722;t.S=667;t.T=611;t.U=722;t.V=667;t.W=944;t.X=667;t.Y=667;t.Z=611;t.bracketleft=333;t.backslash=278;t.bracketright=333;t.asciicircum=584;t.underscore=556;t.quoteleft=278;t.a=556;t.b=611;t.c=556;t.d=611;t.e=556;t.f=333;t.g=611;t.h=611;t.i=278;t.j=278;t.k=556;t.l=278;t.m=889;t.n=611;t.o=611;t.p=611;t.q=611;t.r=389;t.s=556;t.t=333;t.u=611;t.v=556;t.w=778;t.x=556;t.y=556;t.z=500;t.braceleft=389;t.bar=280;t.braceright=389;t.asciitilde=584;t.exclamdown=333;t.cent=556;t.sterling=556;t.fraction=167;t.yen=556;t.florin=556;t.section=556;t.currency=556;t.quotesingle=238;t.quotedblleft=500;t.guillemotleft=556;t.guilsinglleft=333;t.guilsinglright=333;t.fi=611;t.fl=611;t.endash=556;t.dagger=556;t.daggerdbl=556;t.periodcentered=278;t.paragraph=556;t.bullet=350;t.quotesinglbase=278;t.quotedblbase=500;t.quotedblright=500;t.guillemotright=556;t.ellipsis=1e3;t.perthousand=1e3;t.questiondown=611;t.grave=333;t.acute=333;t.circumflex=333;t.tilde=333;t.macron=333;t.breve=333;t.dotaccent=333;t.dieresis=333;t.ring=333;t.cedilla=333;t.hungarumlaut=333;t.ogonek=333;t.caron=333;t.emdash=1e3;t.AE=1e3;t.ordfeminine=370;t.Lslash=611;t.Oslash=778;t.OE=1e3;t.ordmasculine=365;t.ae=889;t.dotlessi=278;t.lslash=278;t.oslash=611;t.oe=944;t.germandbls=611;t.Idieresis=278;t.eacute=556;t.abreve=556;t.uhungarumlaut=611;t.ecaron=556;t.Ydieresis=667;t.divide=584;t.Yacute=667;t.Acircumflex=722;t.aacute=556;t.Ucircumflex=722;t.yacute=556;t.scommaaccent=556;t.ecircumflex=556;t.Uring=722;t.Udieresis=722;t.aogonek=556;t.Uacute=722;t.uogonek=611;t.Edieresis=667;t.Dcroat=722;t.commaaccent=250;t.copyright=737;t.Emacron=667;t.ccaron=556;t.aring=556;t.Ncommaaccent=722;t.lacute=278;t.agrave=556;t.Tcommaaccent=611;t.Cacute=722;t.atilde=556;t.Edotaccent=667;t.scaron=556;t.scedilla=556;t.iacute=278;t.lozenge=494;t.Rcaron=722;t.Gcommaaccent=778;t.ucircumflex=611;t.acircumflex=556;t.Amacron=722;t.rcaron=389;t.ccedilla=556;t.Zdotaccent=611;t.Thorn=667;t.Omacron=778;t.Racute=722;t.Sacute=667;t.dcaron=743;t.Umacron=722;t.uring=611;t.threesuperior=333;t.Ograve=778;t.Agrave=722;t.Abreve=722;t.multiply=584;t.uacute=611;t.Tcaron=611;t.partialdiff=494;t.ydieresis=556;t.Nacute=722;t.icircumflex=278;t.Ecircumflex=667;t.adieresis=556;t.edieresis=556;t.cacute=556;t.nacute=611;t.umacron=611;t.Ncaron=722;t.Iacute=278;t.plusminus=584;t.brokenbar=280;t.registered=737;t.Gbreve=778;t.Idotaccent=278;t.summation=600;t.Egrave=667;t.racute=389;t.omacron=611;t.Zacute=611;t.Zcaron=611;t.greaterequal=549;t.Eth=722;t.Ccedilla=722;t.lcommaaccent=278;t.tcaron=389;t.eogonek=556;t.Uogonek=722;t.Aacute=722;t.Adieresis=722;t.egrave=556;t.zacute=500;t.iogonek=278;t.Oacute=778;t.oacute=611;t.amacron=556;t.sacute=556;t.idieresis=278;t.Ocircumflex=778;t.Ugrave=722;t.Delta=612;t.thorn=611;t.twosuperior=333;t.Odieresis=778;t.mu=611;t.igrave=278;t.ohungarumlaut=611;t.Eogonek=667;t.dcroat=611;t.threequarters=834;t.Scedilla=667;t.lcaron=400;t.Kcommaaccent=722;t.Lacute=611;t.trademark=1e3;t.edotaccent=556;t.Igrave=278;t.Imacron=278;t.Lcaron=611;t.onehalf=834;t.lessequal=549;t.ocircumflex=611;t.ntilde=611;t.Uhungarumlaut=722;t.Eacute=667;t.emacron=556;t.gbreve=611;t.onequarter=834;t.Scaron=667;t.Scommaaccent=667;t.Ohungarumlaut=778;t.degree=400;t.ograve=611;t.Ccaron=722;t.ugrave=611;t.radical=549;t.Dcaron=722;t.rcommaaccent=389;t.Ntilde=722;t.otilde=611;t.Rcommaaccent=722;t.Lcommaaccent=611;t.Atilde=722;t.Aogonek=722;t.Aring=722;t.Otilde=778;t.zdotaccent=500;t.Ecaron=667;t.Iogonek=278;t.kcommaaccent=556;t.minus=584;t.Icircumflex=278;t.ncaron=611;t.tcommaaccent=333;t.logicalnot=584;t.odieresis=611;t.udieresis=611;t.notequal=549;t.gcommaaccent=611;t.eth=611;t.zcaron=500;t.ncommaaccent=611;t.onesuperior=333;t.imacron=278;t.Euro=556}));t[\"Helvetica-Oblique\"]=getLookupTableFactory((function(t){t.space=278;t.exclam=278;t.quotedbl=355;t.numbersign=556;t.dollar=556;t.percent=889;t.ampersand=667;t.quoteright=222;t.parenleft=333;t.parenright=333;t.asterisk=389;t.plus=584;t.comma=278;t.hyphen=333;t.period=278;t.slash=278;t.zero=556;t.one=556;t.two=556;t.three=556;t.four=556;t.five=556;t.six=556;t.seven=556;t.eight=556;t.nine=556;t.colon=278;t.semicolon=278;t.less=584;t.equal=584;t.greater=584;t.question=556;t.at=1015;t.A=667;t.B=667;t.C=722;t.D=722;t.E=667;t.F=611;t.G=778;t.H=722;t.I=278;t.J=500;t.K=667;t.L=556;t.M=833;t.N=722;t.O=778;t.P=667;t.Q=778;t.R=722;t.S=667;t.T=611;t.U=722;t.V=667;t.W=944;t.X=667;t.Y=667;t.Z=611;t.bracketleft=278;t.backslash=278;t.bracketright=278;t.asciicircum=469;t.underscore=556;t.quoteleft=222;t.a=556;t.b=556;t.c=500;t.d=556;t.e=556;t.f=278;t.g=556;t.h=556;t.i=222;t.j=222;t.k=500;t.l=222;t.m=833;t.n=556;t.o=556;t.p=556;t.q=556;t.r=333;t.s=500;t.t=278;t.u=556;t.v=500;t.w=722;t.x=500;t.y=500;t.z=500;t.braceleft=334;t.bar=260;t.braceright=334;t.asciitilde=584;t.exclamdown=333;t.cent=556;t.sterling=556;t.fraction=167;t.yen=556;t.florin=556;t.section=556;t.currency=556;t.quotesingle=191;t.quotedblleft=333;t.guillemotleft=556;t.guilsinglleft=333;t.guilsinglright=333;t.fi=500;t.fl=500;t.endash=556;t.dagger=556;t.daggerdbl=556;t.periodcentered=278;t.paragraph=537;t.bullet=350;t.quotesinglbase=222;t.quotedblbase=333;t.quotedblright=333;t.guillemotright=556;t.ellipsis=1e3;t.perthousand=1e3;t.questiondown=611;t.grave=333;t.acute=333;t.circumflex=333;t.tilde=333;t.macron=333;t.breve=333;t.dotaccent=333;t.dieresis=333;t.ring=333;t.cedilla=333;t.hungarumlaut=333;t.ogonek=333;t.caron=333;t.emdash=1e3;t.AE=1e3;t.ordfeminine=370;t.Lslash=556;t.Oslash=778;t.OE=1e3;t.ordmasculine=365;t.ae=889;t.dotlessi=278;t.lslash=222;t.oslash=611;t.oe=944;t.germandbls=611;t.Idieresis=278;t.eacute=556;t.abreve=556;t.uhungarumlaut=556;t.ecaron=556;t.Ydieresis=667;t.divide=584;t.Yacute=667;t.Acircumflex=667;t.aacute=556;t.Ucircumflex=722;t.yacute=500;t.scommaaccent=500;t.ecircumflex=556;t.Uring=722;t.Udieresis=722;t.aogonek=556;t.Uacute=722;t.uogonek=556;t.Edieresis=667;t.Dcroat=722;t.commaaccent=250;t.copyright=737;t.Emacron=667;t.ccaron=500;t.aring=556;t.Ncommaaccent=722;t.lacute=222;t.agrave=556;t.Tcommaaccent=611;t.Cacute=722;t.atilde=556;t.Edotaccent=667;t.scaron=500;t.scedilla=500;t.iacute=278;t.lozenge=471;t.Rcaron=722;t.Gcommaaccent=778;t.ucircumflex=556;t.acircumflex=556;t.Amacron=667;t.rcaron=333;t.ccedilla=500;t.Zdotaccent=611;t.Thorn=667;t.Omacron=778;t.Racute=722;t.Sacute=667;t.dcaron=643;t.Umacron=722;t.uring=556;t.threesuperior=333;t.Ograve=778;t.Agrave=667;t.Abreve=667;t.multiply=584;t.uacute=556;t.Tcaron=611;t.partialdiff=476;t.ydieresis=500;t.Nacute=722;t.icircumflex=278;t.Ecircumflex=667;t.adieresis=556;t.edieresis=556;t.cacute=500;t.nacute=556;t.umacron=556;t.Ncaron=722;t.Iacute=278;t.plusminus=584;t.brokenbar=260;t.registered=737;t.Gbreve=778;t.Idotaccent=278;t.summation=600;t.Egrave=667;t.racute=333;t.omacron=556;t.Zacute=611;t.Zcaron=611;t.greaterequal=549;t.Eth=722;t.Ccedilla=722;t.lcommaaccent=222;t.tcaron=317;t.eogonek=556;t.Uogonek=722;t.Aacute=667;t.Adieresis=667;t.egrave=556;t.zacute=500;t.iogonek=222;t.Oacute=778;t.oacute=556;t.amacron=556;t.sacute=500;t.idieresis=278;t.Ocircumflex=778;t.Ugrave=722;t.Delta=612;t.thorn=556;t.twosuperior=333;t.Odieresis=778;t.mu=556;t.igrave=278;t.ohungarumlaut=556;t.Eogonek=667;t.dcroat=556;t.threequarters=834;t.Scedilla=667;t.lcaron=299;t.Kcommaaccent=667;t.Lacute=556;t.trademark=1e3;t.edotaccent=556;t.Igrave=278;t.Imacron=278;t.Lcaron=556;t.onehalf=834;t.lessequal=549;t.ocircumflex=556;t.ntilde=556;t.Uhungarumlaut=722;t.Eacute=667;t.emacron=556;t.gbreve=556;t.onequarter=834;t.Scaron=667;t.Scommaaccent=667;t.Ohungarumlaut=778;t.degree=400;t.ograve=556;t.Ccaron=722;t.ugrave=556;t.radical=453;t.Dcaron=722;t.rcommaaccent=333;t.Ntilde=722;t.otilde=556;t.Rcommaaccent=722;t.Lcommaaccent=556;t.Atilde=667;t.Aogonek=667;t.Aring=667;t.Otilde=778;t.zdotaccent=500;t.Ecaron=667;t.Iogonek=278;t.kcommaaccent=500;t.minus=584;t.Icircumflex=278;t.ncaron=556;t.tcommaaccent=278;t.logicalnot=584;t.odieresis=556;t.udieresis=556;t.notequal=549;t.gcommaaccent=556;t.eth=556;t.zcaron=500;t.ncommaaccent=556;t.onesuperior=333;t.imacron=278;t.Euro=556}));t.Symbol=getLookupTableFactory((function(t){t.space=250;t.exclam=333;t.universal=713;t.numbersign=500;t.existential=549;t.percent=833;t.ampersand=778;t.suchthat=439;t.parenleft=333;t.parenright=333;t.asteriskmath=500;t.plus=549;t.comma=250;t.minus=549;t.period=250;t.slash=278;t.zero=500;t.one=500;t.two=500;t.three=500;t.four=500;t.five=500;t.six=500;t.seven=500;t.eight=500;t.nine=500;t.colon=278;t.semicolon=278;t.less=549;t.equal=549;t.greater=549;t.question=444;t.congruent=549;t.Alpha=722;t.Beta=667;t.Chi=722;t.Delta=612;t.Epsilon=611;t.Phi=763;t.Gamma=603;t.Eta=722;t.Iota=333;t.theta1=631;t.Kappa=722;t.Lambda=686;t.Mu=889;t.Nu=722;t.Omicron=722;t.Pi=768;t.Theta=741;t.Rho=556;t.Sigma=592;t.Tau=611;t.Upsilon=690;t.sigma1=439;t.Omega=768;t.Xi=645;t.Psi=795;t.Zeta=611;t.bracketleft=333;t.therefore=863;t.bracketright=333;t.perpendicular=658;t.underscore=500;t.radicalex=500;t.alpha=631;t.beta=549;t.chi=549;t.delta=494;t.epsilon=439;t.phi=521;t.gamma=411;t.eta=603;t.iota=329;t.phi1=603;t.kappa=549;t.lambda=549;t.mu=576;t.nu=521;t.omicron=549;t.pi=549;t.theta=521;t.rho=549;t.sigma=603;t.tau=439;t.upsilon=576;t.omega1=713;t.omega=686;t.xi=493;t.psi=686;t.zeta=494;t.braceleft=480;t.bar=200;t.braceright=480;t.similar=549;t.Euro=750;t.Upsilon1=620;t.minute=247;t.lessequal=549;t.fraction=167;t.infinity=713;t.florin=500;t.club=753;t.diamond=753;t.heart=753;t.spade=753;t.arrowboth=1042;t.arrowleft=987;t.arrowup=603;t.arrowright=987;t.arrowdown=603;t.degree=400;t.plusminus=549;t.second=411;t.greaterequal=549;t.multiply=549;t.proportional=713;t.partialdiff=494;t.bullet=460;t.divide=549;t.notequal=549;t.equivalence=549;t.approxequal=549;t.ellipsis=1e3;t.arrowvertex=603;t.arrowhorizex=1e3;t.carriagereturn=658;t.aleph=823;t.Ifraktur=686;t.Rfraktur=795;t.weierstrass=987;t.circlemultiply=768;t.circleplus=768;t.emptyset=823;t.intersection=768;t.union=768;t.propersuperset=713;t.reflexsuperset=713;t.notsubset=713;t.propersubset=713;t.reflexsubset=713;t.element=713;t.notelement=713;t.angle=768;t.gradient=713;t.registerserif=790;t.copyrightserif=790;t.trademarkserif=890;t.product=823;t.radical=549;t.dotmath=250;t.logicalnot=713;t.logicaland=603;t.logicalor=603;t.arrowdblboth=1042;t.arrowdblleft=987;t.arrowdblup=603;t.arrowdblright=987;t.arrowdbldown=603;t.lozenge=494;t.angleleft=329;t.registersans=790;t.copyrightsans=790;t.trademarksans=786;t.summation=713;t.parenlefttp=384;t.parenleftex=384;t.parenleftbt=384;t.bracketlefttp=384;t.bracketleftex=384;t.bracketleftbt=384;t.bracelefttp=494;t.braceleftmid=494;t.braceleftbt=494;t.braceex=494;t.angleright=329;t.integral=274;t.integraltp=686;t.integralex=686;t.integralbt=686;t.parenrighttp=384;t.parenrightex=384;t.parenrightbt=384;t.bracketrighttp=384;t.bracketrightex=384;t.bracketrightbt=384;t.bracerighttp=494;t.bracerightmid=494;t.bracerightbt=494;t.apple=790}));t[\"Times-Roman\"]=getLookupTableFactory((function(t){t.space=250;t.exclam=333;t.quotedbl=408;t.numbersign=500;t.dollar=500;t.percent=833;t.ampersand=778;t.quoteright=333;t.parenleft=333;t.parenright=333;t.asterisk=500;t.plus=564;t.comma=250;t.hyphen=333;t.period=250;t.slash=278;t.zero=500;t.one=500;t.two=500;t.three=500;t.four=500;t.five=500;t.six=500;t.seven=500;t.eight=500;t.nine=500;t.colon=278;t.semicolon=278;t.less=564;t.equal=564;t.greater=564;t.question=444;t.at=921;t.A=722;t.B=667;t.C=667;t.D=722;t.E=611;t.F=556;t.G=722;t.H=722;t.I=333;t.J=389;t.K=722;t.L=611;t.M=889;t.N=722;t.O=722;t.P=556;t.Q=722;t.R=667;t.S=556;t.T=611;t.U=722;t.V=722;t.W=944;t.X=722;t.Y=722;t.Z=611;t.bracketleft=333;t.backslash=278;t.bracketright=333;t.asciicircum=469;t.underscore=500;t.quoteleft=333;t.a=444;t.b=500;t.c=444;t.d=500;t.e=444;t.f=333;t.g=500;t.h=500;t.i=278;t.j=278;t.k=500;t.l=278;t.m=778;t.n=500;t.o=500;t.p=500;t.q=500;t.r=333;t.s=389;t.t=278;t.u=500;t.v=500;t.w=722;t.x=500;t.y=500;t.z=444;t.braceleft=480;t.bar=200;t.braceright=480;t.asciitilde=541;t.exclamdown=333;t.cent=500;t.sterling=500;t.fraction=167;t.yen=500;t.florin=500;t.section=500;t.currency=500;t.quotesingle=180;t.quotedblleft=444;t.guillemotleft=500;t.guilsinglleft=333;t.guilsinglright=333;t.fi=556;t.fl=556;t.endash=500;t.dagger=500;t.daggerdbl=500;t.periodcentered=250;t.paragraph=453;t.bullet=350;t.quotesinglbase=333;t.quotedblbase=444;t.quotedblright=444;t.guillemotright=500;t.ellipsis=1e3;t.perthousand=1e3;t.questiondown=444;t.grave=333;t.acute=333;t.circumflex=333;t.tilde=333;t.macron=333;t.breve=333;t.dotaccent=333;t.dieresis=333;t.ring=333;t.cedilla=333;t.hungarumlaut=333;t.ogonek=333;t.caron=333;t.emdash=1e3;t.AE=889;t.ordfeminine=276;t.Lslash=611;t.Oslash=722;t.OE=889;t.ordmasculine=310;t.ae=667;t.dotlessi=278;t.lslash=278;t.oslash=500;t.oe=722;t.germandbls=500;t.Idieresis=333;t.eacute=444;t.abreve=444;t.uhungarumlaut=500;t.ecaron=444;t.Ydieresis=722;t.divide=564;t.Yacute=722;t.Acircumflex=722;t.aacute=444;t.Ucircumflex=722;t.yacute=500;t.scommaaccent=389;t.ecircumflex=444;t.Uring=722;t.Udieresis=722;t.aogonek=444;t.Uacute=722;t.uogonek=500;t.Edieresis=611;t.Dcroat=722;t.commaaccent=250;t.copyright=760;t.Emacron=611;t.ccaron=444;t.aring=444;t.Ncommaaccent=722;t.lacute=278;t.agrave=444;t.Tcommaaccent=611;t.Cacute=667;t.atilde=444;t.Edotaccent=611;t.scaron=389;t.scedilla=389;t.iacute=278;t.lozenge=471;t.Rcaron=667;t.Gcommaaccent=722;t.ucircumflex=500;t.acircumflex=444;t.Amacron=722;t.rcaron=333;t.ccedilla=444;t.Zdotaccent=611;t.Thorn=556;t.Omacron=722;t.Racute=667;t.Sacute=556;t.dcaron=588;t.Umacron=722;t.uring=500;t.threesuperior=300;t.Ograve=722;t.Agrave=722;t.Abreve=722;t.multiply=564;t.uacute=500;t.Tcaron=611;t.partialdiff=476;t.ydieresis=500;t.Nacute=722;t.icircumflex=278;t.Ecircumflex=611;t.adieresis=444;t.edieresis=444;t.cacute=444;t.nacute=500;t.umacron=500;t.Ncaron=722;t.Iacute=333;t.plusminus=564;t.brokenbar=200;t.registered=760;t.Gbreve=722;t.Idotaccent=333;t.summation=600;t.Egrave=611;t.racute=333;t.omacron=500;t.Zacute=611;t.Zcaron=611;t.greaterequal=549;t.Eth=722;t.Ccedilla=667;t.lcommaaccent=278;t.tcaron=326;t.eogonek=444;t.Uogonek=722;t.Aacute=722;t.Adieresis=722;t.egrave=444;t.zacute=444;t.iogonek=278;t.Oacute=722;t.oacute=500;t.amacron=444;t.sacute=389;t.idieresis=278;t.Ocircumflex=722;t.Ugrave=722;t.Delta=612;t.thorn=500;t.twosuperior=300;t.Odieresis=722;t.mu=500;t.igrave=278;t.ohungarumlaut=500;t.Eogonek=611;t.dcroat=500;t.threequarters=750;t.Scedilla=556;t.lcaron=344;t.Kcommaaccent=722;t.Lacute=611;t.trademark=980;t.edotaccent=444;t.Igrave=333;t.Imacron=333;t.Lcaron=611;t.onehalf=750;t.lessequal=549;t.ocircumflex=500;t.ntilde=500;t.Uhungarumlaut=722;t.Eacute=611;t.emacron=444;t.gbreve=500;t.onequarter=750;t.Scaron=556;t.Scommaaccent=556;t.Ohungarumlaut=722;t.degree=400;t.ograve=500;t.Ccaron=667;t.ugrave=500;t.radical=453;t.Dcaron=722;t.rcommaaccent=333;t.Ntilde=722;t.otilde=500;t.Rcommaaccent=667;t.Lcommaaccent=611;t.Atilde=722;t.Aogonek=722;t.Aring=722;t.Otilde=722;t.zdotaccent=444;t.Ecaron=611;t.Iogonek=333;t.kcommaaccent=500;t.minus=564;t.Icircumflex=333;t.ncaron=500;t.tcommaaccent=278;t.logicalnot=564;t.odieresis=500;t.udieresis=500;t.notequal=549;t.gcommaaccent=500;t.eth=500;t.zcaron=444;t.ncommaaccent=500;t.onesuperior=300;t.imacron=278;t.Euro=500}));t[\"Times-Bold\"]=getLookupTableFactory((function(t){t.space=250;t.exclam=333;t.quotedbl=555;t.numbersign=500;t.dollar=500;t.percent=1e3;t.ampersand=833;t.quoteright=333;t.parenleft=333;t.parenright=333;t.asterisk=500;t.plus=570;t.comma=250;t.hyphen=333;t.period=250;t.slash=278;t.zero=500;t.one=500;t.two=500;t.three=500;t.four=500;t.five=500;t.six=500;t.seven=500;t.eight=500;t.nine=500;t.colon=333;t.semicolon=333;t.less=570;t.equal=570;t.greater=570;t.question=500;t.at=930;t.A=722;t.B=667;t.C=722;t.D=722;t.E=667;t.F=611;t.G=778;t.H=778;t.I=389;t.J=500;t.K=778;t.L=667;t.M=944;t.N=722;t.O=778;t.P=611;t.Q=778;t.R=722;t.S=556;t.T=667;t.U=722;t.V=722;t.W=1e3;t.X=722;t.Y=722;t.Z=667;t.bracketleft=333;t.backslash=278;t.bracketright=333;t.asciicircum=581;t.underscore=500;t.quoteleft=333;t.a=500;t.b=556;t.c=444;t.d=556;t.e=444;t.f=333;t.g=500;t.h=556;t.i=278;t.j=333;t.k=556;t.l=278;t.m=833;t.n=556;t.o=500;t.p=556;t.q=556;t.r=444;t.s=389;t.t=333;t.u=556;t.v=500;t.w=722;t.x=500;t.y=500;t.z=444;t.braceleft=394;t.bar=220;t.braceright=394;t.asciitilde=520;t.exclamdown=333;t.cent=500;t.sterling=500;t.fraction=167;t.yen=500;t.florin=500;t.section=500;t.currency=500;t.quotesingle=278;t.quotedblleft=500;t.guillemotleft=500;t.guilsinglleft=333;t.guilsinglright=333;t.fi=556;t.fl=556;t.endash=500;t.dagger=500;t.daggerdbl=500;t.periodcentered=250;t.paragraph=540;t.bullet=350;t.quotesinglbase=333;t.quotedblbase=500;t.quotedblright=500;t.guillemotright=500;t.ellipsis=1e3;t.perthousand=1e3;t.questiondown=500;t.grave=333;t.acute=333;t.circumflex=333;t.tilde=333;t.macron=333;t.breve=333;t.dotaccent=333;t.dieresis=333;t.ring=333;t.cedilla=333;t.hungarumlaut=333;t.ogonek=333;t.caron=333;t.emdash=1e3;t.AE=1e3;t.ordfeminine=300;t.Lslash=667;t.Oslash=778;t.OE=1e3;t.ordmasculine=330;t.ae=722;t.dotlessi=278;t.lslash=278;t.oslash=500;t.oe=722;t.germandbls=556;t.Idieresis=389;t.eacute=444;t.abreve=500;t.uhungarumlaut=556;t.ecaron=444;t.Ydieresis=722;t.divide=570;t.Yacute=722;t.Acircumflex=722;t.aacute=500;t.Ucircumflex=722;t.yacute=500;t.scommaaccent=389;t.ecircumflex=444;t.Uring=722;t.Udieresis=722;t.aogonek=500;t.Uacute=722;t.uogonek=556;t.Edieresis=667;t.Dcroat=722;t.commaaccent=250;t.copyright=747;t.Emacron=667;t.ccaron=444;t.aring=500;t.Ncommaaccent=722;t.lacute=278;t.agrave=500;t.Tcommaaccent=667;t.Cacute=722;t.atilde=500;t.Edotaccent=667;t.scaron=389;t.scedilla=389;t.iacute=278;t.lozenge=494;t.Rcaron=722;t.Gcommaaccent=778;t.ucircumflex=556;t.acircumflex=500;t.Amacron=722;t.rcaron=444;t.ccedilla=444;t.Zdotaccent=667;t.Thorn=611;t.Omacron=778;t.Racute=722;t.Sacute=556;t.dcaron=672;t.Umacron=722;t.uring=556;t.threesuperior=300;t.Ograve=778;t.Agrave=722;t.Abreve=722;t.multiply=570;t.uacute=556;t.Tcaron=667;t.partialdiff=494;t.ydieresis=500;t.Nacute=722;t.icircumflex=278;t.Ecircumflex=667;t.adieresis=500;t.edieresis=444;t.cacute=444;t.nacute=556;t.umacron=556;t.Ncaron=722;t.Iacute=389;t.plusminus=570;t.brokenbar=220;t.registered=747;t.Gbreve=778;t.Idotaccent=389;t.summation=600;t.Egrave=667;t.racute=444;t.omacron=500;t.Zacute=667;t.Zcaron=667;t.greaterequal=549;t.Eth=722;t.Ccedilla=722;t.lcommaaccent=278;t.tcaron=416;t.eogonek=444;t.Uogonek=722;t.Aacute=722;t.Adieresis=722;t.egrave=444;t.zacute=444;t.iogonek=278;t.Oacute=778;t.oacute=500;t.amacron=500;t.sacute=389;t.idieresis=278;t.Ocircumflex=778;t.Ugrave=722;t.Delta=612;t.thorn=556;t.twosuperior=300;t.Odieresis=778;t.mu=556;t.igrave=278;t.ohungarumlaut=500;t.Eogonek=667;t.dcroat=556;t.threequarters=750;t.Scedilla=556;t.lcaron=394;t.Kcommaaccent=778;t.Lacute=667;t.trademark=1e3;t.edotaccent=444;t.Igrave=389;t.Imacron=389;t.Lcaron=667;t.onehalf=750;t.lessequal=549;t.ocircumflex=500;t.ntilde=556;t.Uhungarumlaut=722;t.Eacute=667;t.emacron=444;t.gbreve=500;t.onequarter=750;t.Scaron=556;t.Scommaaccent=556;t.Ohungarumlaut=778;t.degree=400;t.ograve=500;t.Ccaron=722;t.ugrave=556;t.radical=549;t.Dcaron=722;t.rcommaaccent=444;t.Ntilde=722;t.otilde=500;t.Rcommaaccent=722;t.Lcommaaccent=667;t.Atilde=722;t.Aogonek=722;t.Aring=722;t.Otilde=778;t.zdotaccent=444;t.Ecaron=667;t.Iogonek=389;t.kcommaaccent=556;t.minus=570;t.Icircumflex=389;t.ncaron=556;t.tcommaaccent=333;t.logicalnot=570;t.odieresis=500;t.udieresis=556;t.notequal=549;t.gcommaaccent=500;t.eth=500;t.zcaron=444;t.ncommaaccent=556;t.onesuperior=300;t.imacron=278;t.Euro=500}));t[\"Times-BoldItalic\"]=getLookupTableFactory((function(t){t.space=250;t.exclam=389;t.quotedbl=555;t.numbersign=500;t.dollar=500;t.percent=833;t.ampersand=778;t.quoteright=333;t.parenleft=333;t.parenright=333;t.asterisk=500;t.plus=570;t.comma=250;t.hyphen=333;t.period=250;t.slash=278;t.zero=500;t.one=500;t.two=500;t.three=500;t.four=500;t.five=500;t.six=500;t.seven=500;t.eight=500;t.nine=500;t.colon=333;t.semicolon=333;t.less=570;t.equal=570;t.greater=570;t.question=500;t.at=832;t.A=667;t.B=667;t.C=667;t.D=722;t.E=667;t.F=667;t.G=722;t.H=778;t.I=389;t.J=500;t.K=667;t.L=611;t.M=889;t.N=722;t.O=722;t.P=611;t.Q=722;t.R=667;t.S=556;t.T=611;t.U=722;t.V=667;t.W=889;t.X=667;t.Y=611;t.Z=611;t.bracketleft=333;t.backslash=278;t.bracketright=333;t.asciicircum=570;t.underscore=500;t.quoteleft=333;t.a=500;t.b=500;t.c=444;t.d=500;t.e=444;t.f=333;t.g=500;t.h=556;t.i=278;t.j=278;t.k=500;t.l=278;t.m=778;t.n=556;t.o=500;t.p=500;t.q=500;t.r=389;t.s=389;t.t=278;t.u=556;t.v=444;t.w=667;t.x=500;t.y=444;t.z=389;t.braceleft=348;t.bar=220;t.braceright=348;t.asciitilde=570;t.exclamdown=389;t.cent=500;t.sterling=500;t.fraction=167;t.yen=500;t.florin=500;t.section=500;t.currency=500;t.quotesingle=278;t.quotedblleft=500;t.guillemotleft=500;t.guilsinglleft=333;t.guilsinglright=333;t.fi=556;t.fl=556;t.endash=500;t.dagger=500;t.daggerdbl=500;t.periodcentered=250;t.paragraph=500;t.bullet=350;t.quotesinglbase=333;t.quotedblbase=500;t.quotedblright=500;t.guillemotright=500;t.ellipsis=1e3;t.perthousand=1e3;t.questiondown=500;t.grave=333;t.acute=333;t.circumflex=333;t.tilde=333;t.macron=333;t.breve=333;t.dotaccent=333;t.dieresis=333;t.ring=333;t.cedilla=333;t.hungarumlaut=333;t.ogonek=333;t.caron=333;t.emdash=1e3;t.AE=944;t.ordfeminine=266;t.Lslash=611;t.Oslash=722;t.OE=944;t.ordmasculine=300;t.ae=722;t.dotlessi=278;t.lslash=278;t.oslash=500;t.oe=722;t.germandbls=500;t.Idieresis=389;t.eacute=444;t.abreve=500;t.uhungarumlaut=556;t.ecaron=444;t.Ydieresis=611;t.divide=570;t.Yacute=611;t.Acircumflex=667;t.aacute=500;t.Ucircumflex=722;t.yacute=444;t.scommaaccent=389;t.ecircumflex=444;t.Uring=722;t.Udieresis=722;t.aogonek=500;t.Uacute=722;t.uogonek=556;t.Edieresis=667;t.Dcroat=722;t.commaaccent=250;t.copyright=747;t.Emacron=667;t.ccaron=444;t.aring=500;t.Ncommaaccent=722;t.lacute=278;t.agrave=500;t.Tcommaaccent=611;t.Cacute=667;t.atilde=500;t.Edotaccent=667;t.scaron=389;t.scedilla=389;t.iacute=278;t.lozenge=494;t.Rcaron=667;t.Gcommaaccent=722;t.ucircumflex=556;t.acircumflex=500;t.Amacron=667;t.rcaron=389;t.ccedilla=444;t.Zdotaccent=611;t.Thorn=611;t.Omacron=722;t.Racute=667;t.Sacute=556;t.dcaron=608;t.Umacron=722;t.uring=556;t.threesuperior=300;t.Ograve=722;t.Agrave=667;t.Abreve=667;t.multiply=570;t.uacute=556;t.Tcaron=611;t.partialdiff=494;t.ydieresis=444;t.Nacute=722;t.icircumflex=278;t.Ecircumflex=667;t.adieresis=500;t.edieresis=444;t.cacute=444;t.nacute=556;t.umacron=556;t.Ncaron=722;t.Iacute=389;t.plusminus=570;t.brokenbar=220;t.registered=747;t.Gbreve=722;t.Idotaccent=389;t.summation=600;t.Egrave=667;t.racute=389;t.omacron=500;t.Zacute=611;t.Zcaron=611;t.greaterequal=549;t.Eth=722;t.Ccedilla=667;t.lcommaaccent=278;t.tcaron=366;t.eogonek=444;t.Uogonek=722;t.Aacute=667;t.Adieresis=667;t.egrave=444;t.zacute=389;t.iogonek=278;t.Oacute=722;t.oacute=500;t.amacron=500;t.sacute=389;t.idieresis=278;t.Ocircumflex=722;t.Ugrave=722;t.Delta=612;t.thorn=500;t.twosuperior=300;t.Odieresis=722;t.mu=576;t.igrave=278;t.ohungarumlaut=500;t.Eogonek=667;t.dcroat=500;t.threequarters=750;t.Scedilla=556;t.lcaron=382;t.Kcommaaccent=667;t.Lacute=611;t.trademark=1e3;t.edotaccent=444;t.Igrave=389;t.Imacron=389;t.Lcaron=611;t.onehalf=750;t.lessequal=549;t.ocircumflex=500;t.ntilde=556;t.Uhungarumlaut=722;t.Eacute=667;t.emacron=444;t.gbreve=500;t.onequarter=750;t.Scaron=556;t.Scommaaccent=556;t.Ohungarumlaut=722;t.degree=400;t.ograve=500;t.Ccaron=667;t.ugrave=556;t.radical=549;t.Dcaron=722;t.rcommaaccent=389;t.Ntilde=722;t.otilde=500;t.Rcommaaccent=667;t.Lcommaaccent=611;t.Atilde=667;t.Aogonek=667;t.Aring=667;t.Otilde=722;t.zdotaccent=389;t.Ecaron=667;t.Iogonek=389;t.kcommaaccent=500;t.minus=606;t.Icircumflex=389;t.ncaron=556;t.tcommaaccent=278;t.logicalnot=606;t.odieresis=500;t.udieresis=556;t.notequal=549;t.gcommaaccent=500;t.eth=500;t.zcaron=389;t.ncommaaccent=556;t.onesuperior=300;t.imacron=278;t.Euro=500}));t[\"Times-Italic\"]=getLookupTableFactory((function(t){t.space=250;t.exclam=333;t.quotedbl=420;t.numbersign=500;t.dollar=500;t.percent=833;t.ampersand=778;t.quoteright=333;t.parenleft=333;t.parenright=333;t.asterisk=500;t.plus=675;t.comma=250;t.hyphen=333;t.period=250;t.slash=278;t.zero=500;t.one=500;t.two=500;t.three=500;t.four=500;t.five=500;t.six=500;t.seven=500;t.eight=500;t.nine=500;t.colon=333;t.semicolon=333;t.less=675;t.equal=675;t.greater=675;t.question=500;t.at=920;t.A=611;t.B=611;t.C=667;t.D=722;t.E=611;t.F=611;t.G=722;t.H=722;t.I=333;t.J=444;t.K=667;t.L=556;t.M=833;t.N=667;t.O=722;t.P=611;t.Q=722;t.R=611;t.S=500;t.T=556;t.U=722;t.V=611;t.W=833;t.X=611;t.Y=556;t.Z=556;t.bracketleft=389;t.backslash=278;t.bracketright=389;t.asciicircum=422;t.underscore=500;t.quoteleft=333;t.a=500;t.b=500;t.c=444;t.d=500;t.e=444;t.f=278;t.g=500;t.h=500;t.i=278;t.j=278;t.k=444;t.l=278;t.m=722;t.n=500;t.o=500;t.p=500;t.q=500;t.r=389;t.s=389;t.t=278;t.u=500;t.v=444;t.w=667;t.x=444;t.y=444;t.z=389;t.braceleft=400;t.bar=275;t.braceright=400;t.asciitilde=541;t.exclamdown=389;t.cent=500;t.sterling=500;t.fraction=167;t.yen=500;t.florin=500;t.section=500;t.currency=500;t.quotesingle=214;t.quotedblleft=556;t.guillemotleft=500;t.guilsinglleft=333;t.guilsinglright=333;t.fi=500;t.fl=500;t.endash=500;t.dagger=500;t.daggerdbl=500;t.periodcentered=250;t.paragraph=523;t.bullet=350;t.quotesinglbase=333;t.quotedblbase=556;t.quotedblright=556;t.guillemotright=500;t.ellipsis=889;t.perthousand=1e3;t.questiondown=500;t.grave=333;t.acute=333;t.circumflex=333;t.tilde=333;t.macron=333;t.breve=333;t.dotaccent=333;t.dieresis=333;t.ring=333;t.cedilla=333;t.hungarumlaut=333;t.ogonek=333;t.caron=333;t.emdash=889;t.AE=889;t.ordfeminine=276;t.Lslash=556;t.Oslash=722;t.OE=944;t.ordmasculine=310;t.ae=667;t.dotlessi=278;t.lslash=278;t.oslash=500;t.oe=667;t.germandbls=500;t.Idieresis=333;t.eacute=444;t.abreve=500;t.uhungarumlaut=500;t.ecaron=444;t.Ydieresis=556;t.divide=675;t.Yacute=556;t.Acircumflex=611;t.aacute=500;t.Ucircumflex=722;t.yacute=444;t.scommaaccent=389;t.ecircumflex=444;t.Uring=722;t.Udieresis=722;t.aogonek=500;t.Uacute=722;t.uogonek=500;t.Edieresis=611;t.Dcroat=722;t.commaaccent=250;t.copyright=760;t.Emacron=611;t.ccaron=444;t.aring=500;t.Ncommaaccent=667;t.lacute=278;t.agrave=500;t.Tcommaaccent=556;t.Cacute=667;t.atilde=500;t.Edotaccent=611;t.scaron=389;t.scedilla=389;t.iacute=278;t.lozenge=471;t.Rcaron=611;t.Gcommaaccent=722;t.ucircumflex=500;t.acircumflex=500;t.Amacron=611;t.rcaron=389;t.ccedilla=444;t.Zdotaccent=556;t.Thorn=611;t.Omacron=722;t.Racute=611;t.Sacute=500;t.dcaron=544;t.Umacron=722;t.uring=500;t.threesuperior=300;t.Ograve=722;t.Agrave=611;t.Abreve=611;t.multiply=675;t.uacute=500;t.Tcaron=556;t.partialdiff=476;t.ydieresis=444;t.Nacute=667;t.icircumflex=278;t.Ecircumflex=611;t.adieresis=500;t.edieresis=444;t.cacute=444;t.nacute=500;t.umacron=500;t.Ncaron=667;t.Iacute=333;t.plusminus=675;t.brokenbar=275;t.registered=760;t.Gbreve=722;t.Idotaccent=333;t.summation=600;t.Egrave=611;t.racute=389;t.omacron=500;t.Zacute=556;t.Zcaron=556;t.greaterequal=549;t.Eth=722;t.Ccedilla=667;t.lcommaaccent=278;t.tcaron=300;t.eogonek=444;t.Uogonek=722;t.Aacute=611;t.Adieresis=611;t.egrave=444;t.zacute=389;t.iogonek=278;t.Oacute=722;t.oacute=500;t.amacron=500;t.sacute=389;t.idieresis=278;t.Ocircumflex=722;t.Ugrave=722;t.Delta=612;t.thorn=500;t.twosuperior=300;t.Odieresis=722;t.mu=500;t.igrave=278;t.ohungarumlaut=500;t.Eogonek=611;t.dcroat=500;t.threequarters=750;t.Scedilla=500;t.lcaron=300;t.Kcommaaccent=667;t.Lacute=556;t.trademark=980;t.edotaccent=444;t.Igrave=333;t.Imacron=333;t.Lcaron=611;t.onehalf=750;t.lessequal=549;t.ocircumflex=500;t.ntilde=500;t.Uhungarumlaut=722;t.Eacute=611;t.emacron=444;t.gbreve=500;t.onequarter=750;t.Scaron=500;t.Scommaaccent=500;t.Ohungarumlaut=722;t.degree=400;t.ograve=500;t.Ccaron=667;t.ugrave=500;t.radical=453;t.Dcaron=722;t.rcommaaccent=389;t.Ntilde=667;t.otilde=500;t.Rcommaaccent=611;t.Lcommaaccent=556;t.Atilde=611;t.Aogonek=611;t.Aring=611;t.Otilde=722;t.zdotaccent=389;t.Ecaron=611;t.Iogonek=333;t.kcommaaccent=444;t.minus=675;t.Icircumflex=333;t.ncaron=500;t.tcommaaccent=278;t.logicalnot=675;t.odieresis=500;t.udieresis=500;t.notequal=549;t.gcommaaccent=500;t.eth=500;t.zcaron=389;t.ncommaaccent=500;t.onesuperior=300;t.imacron=278;t.Euro=500}));t.ZapfDingbats=getLookupTableFactory((function(t){t.space=278;t.a1=974;t.a2=961;t.a202=974;t.a3=980;t.a4=719;t.a5=789;t.a119=790;t.a118=791;t.a117=690;t.a11=960;t.a12=939;t.a13=549;t.a14=855;t.a15=911;t.a16=933;t.a105=911;t.a17=945;t.a18=974;t.a19=755;t.a20=846;t.a21=762;t.a22=761;t.a23=571;t.a24=677;t.a25=763;t.a26=760;t.a27=759;t.a28=754;t.a6=494;t.a7=552;t.a8=537;t.a9=577;t.a10=692;t.a29=786;t.a30=788;t.a31=788;t.a32=790;t.a33=793;t.a34=794;t.a35=816;t.a36=823;t.a37=789;t.a38=841;t.a39=823;t.a40=833;t.a41=816;t.a42=831;t.a43=923;t.a44=744;t.a45=723;t.a46=749;t.a47=790;t.a48=792;t.a49=695;t.a50=776;t.a51=768;t.a52=792;t.a53=759;t.a54=707;t.a55=708;t.a56=682;t.a57=701;t.a58=826;t.a59=815;t.a60=789;t.a61=789;t.a62=707;t.a63=687;t.a64=696;t.a65=689;t.a66=786;t.a67=787;t.a68=713;t.a69=791;t.a70=785;t.a71=791;t.a72=873;t.a73=761;t.a74=762;t.a203=762;t.a75=759;t.a204=759;t.a76=892;t.a77=892;t.a78=788;t.a79=784;t.a81=438;t.a82=138;t.a83=277;t.a84=415;t.a97=392;t.a98=392;t.a99=668;t.a100=668;t.a89=390;t.a90=390;t.a93=317;t.a94=317;t.a91=276;t.a92=276;t.a205=509;t.a85=509;t.a206=410;t.a86=410;t.a87=234;t.a88=234;t.a95=334;t.a96=334;t.a101=732;t.a102=544;t.a103=544;t.a104=910;t.a106=667;t.a107=760;t.a108=760;t.a112=776;t.a111=595;t.a110=694;t.a109=626;t.a120=788;t.a121=788;t.a122=788;t.a123=788;t.a124=788;t.a125=788;t.a126=788;t.a127=788;t.a128=788;t.a129=788;t.a130=788;t.a131=788;t.a132=788;t.a133=788;t.a134=788;t.a135=788;t.a136=788;t.a137=788;t.a138=788;t.a139=788;t.a140=788;t.a141=788;t.a142=788;t.a143=788;t.a144=788;t.a145=788;t.a146=788;t.a147=788;t.a148=788;t.a149=788;t.a150=788;t.a151=788;t.a152=788;t.a153=788;t.a154=788;t.a155=788;t.a156=788;t.a157=788;t.a158=788;t.a159=788;t.a160=894;t.a161=838;t.a163=1016;t.a164=458;t.a196=748;t.a165=924;t.a192=748;t.a166=918;t.a167=927;t.a168=928;t.a169=928;t.a170=834;t.a171=873;t.a172=828;t.a173=924;t.a162=924;t.a174=917;t.a175=930;t.a176=931;t.a177=463;t.a178=883;t.a179=836;t.a193=836;t.a180=867;t.a199=867;t.a181=696;t.a200=696;t.a182=874;t.a201=874;t.a183=760;t.a184=946;t.a197=771;t.a185=865;t.a194=771;t.a198=888;t.a186=967;t.a195=888;t.a187=831;t.a188=873;t.a189=927;t.a190=970;t.a191=918}))}));const getFontBasicMetrics=getLookupTableFactory((function(t){t.Courier={ascent:629,descent:-157,capHeight:562,xHeight:-426};t[\"Courier-Bold\"]={ascent:629,descent:-157,capHeight:562,xHeight:439};t[\"Courier-Oblique\"]={ascent:629,descent:-157,capHeight:562,xHeight:426};t[\"Courier-BoldOblique\"]={ascent:629,descent:-157,capHeight:562,xHeight:426};t.Helvetica={ascent:718,descent:-207,capHeight:718,xHeight:523};t[\"Helvetica-Bold\"]={ascent:718,descent:-207,capHeight:718,xHeight:532};t[\"Helvetica-Oblique\"]={ascent:718,descent:-207,capHeight:718,xHeight:523};t[\"Helvetica-BoldOblique\"]={ascent:718,descent:-207,capHeight:718,xHeight:532};t[\"Times-Roman\"]={ascent:683,descent:-217,capHeight:662,xHeight:450};t[\"Times-Bold\"]={ascent:683,descent:-217,capHeight:676,xHeight:461};t[\"Times-Italic\"]={ascent:683,descent:-217,capHeight:653,xHeight:441};t[\"Times-BoldItalic\"]={ascent:683,descent:-217,capHeight:669,xHeight:462};t.Symbol={ascent:Math.NaN,descent:Math.NaN,capHeight:Math.NaN,xHeight:Math.NaN};t.ZapfDingbats={ascent:Math.NaN,descent:Math.NaN,capHeight:Math.NaN,xHeight:Math.NaN}}));const ON_CURVE_POINT=1<<0;const X_SHORT_VECTOR=1<<1;const Y_SHORT_VECTOR=1<<2;const REPEAT_FLAG=1<<3;const X_IS_SAME_OR_POSITIVE_X_SHORT_VECTOR=1<<4;const Y_IS_SAME_OR_POSITIVE_Y_SHORT_VECTOR=1<<5;const OVERLAP_SIMPLE=1<<6;const ARG_1_AND_2_ARE_WORDS=1<<0;const ARGS_ARE_XY_VALUES=1<<1;const WE_HAVE_A_SCALE=1<<3;const MORE_COMPONENTS=1<<5;const WE_HAVE_AN_X_AND_Y_SCALE=1<<6;const WE_HAVE_A_TWO_BY_TWO=1<<7;const WE_HAVE_INSTRUCTIONS=1<<8;class GlyfTable{constructor({glyfTable:glyfTable,isGlyphLocationsLong:isGlyphLocationsLong,locaTable:locaTable,numGlyphs:numGlyphs}){this.glyphs=[];const loca=new DataView(locaTable.buffer,locaTable.byteOffset,locaTable.byteLength);const glyf=new DataView(glyfTable.buffer,glyfTable.byteOffset,glyfTable.byteLength);const offsetSize=isGlyphLocationsLong?4:2;let prev=isGlyphLocationsLong?loca.getUint32(0):2*loca.getUint16(0);let pos=0;for(let i=0;i<numGlyphs;i++){pos+=offsetSize;const next=isGlyphLocationsLong?loca.getUint32(pos):2*loca.getUint16(pos);if(next===prev){this.glyphs.push(new Glyph({}));continue}const glyph=Glyph.parse(prev,glyf);this.glyphs.push(glyph);prev=next}}getSize(){return Math.sumPrecise(this.glyphs.map((g=>g.getSize()+3&~3)))}write(){const totalSize=this.getSize();const glyfTable=new DataView(new ArrayBuffer(totalSize));const isLocationLong=totalSize>131070;const offsetSize=isLocationLong?4:2;const locaTable=new DataView(new ArrayBuffer((this.glyphs.length+1)*offsetSize));if(isLocationLong){locaTable.setUint32(0,0)}else{locaTable.setUint16(0,0)}let pos=0;let locaIndex=0;for(const glyph of this.glyphs){pos+=glyph.write(pos,glyfTable);pos=pos+3&~3;locaIndex+=offsetSize;if(isLocationLong){locaTable.setUint32(locaIndex,pos)}else{locaTable.setUint16(locaIndex,pos>>1)}}return{isLocationLong:isLocationLong,loca:new Uint8Array(locaTable.buffer),glyf:new Uint8Array(glyfTable.buffer)}}scale(factors){for(let i=0,ii=this.glyphs.length;i<ii;i++){this.glyphs[i].scale(factors[i])}}}class Glyph{constructor({header:header=null,simple:simple=null,composites:composites=null}){this.header=header;this.simple=simple;this.composites=composites}static parse(pos,glyf){const[read,header]=GlyphHeader.parse(pos,glyf);pos+=read;if(header.numberOfContours<0){const composites=[];while(true){const[n,composite]=CompositeGlyph.parse(pos,glyf);pos+=n;composites.push(composite);if(!(composite.flags&MORE_COMPONENTS)){break}}return new Glyph({header:header,composites:composites})}const simple=SimpleGlyph.parse(pos,glyf,header.numberOfContours);return new Glyph({header:header,simple:simple})}getSize(){if(!this.header){return 0}const size=this.simple?this.simple.getSize():Math.sumPrecise(this.composites.map((c=>c.getSize())));return this.header.getSize()+size}write(pos,buf){if(!this.header){return 0}const spos=pos;pos+=this.header.write(pos,buf);if(this.simple){pos+=this.simple.write(pos,buf)}else{for(const composite of this.composites){pos+=composite.write(pos,buf)}}return pos-spos}scale(factor){if(!this.header){return}const xMiddle=(this.header.xMin+this.header.xMax)/2;this.header.scale(xMiddle,factor);if(this.simple){this.simple.scale(xMiddle,factor)}else{for(const composite of this.composites){composite.scale(xMiddle,factor)}}}}class GlyphHeader{constructor({numberOfContours:numberOfContours,xMin:xMin,yMin:yMin,xMax:xMax,yMax:yMax}){this.numberOfContours=numberOfContours;this.xMin=xMin;this.yMin=yMin;this.xMax=xMax;this.yMax=yMax}static parse(pos,glyf){return[10,new GlyphHeader({numberOfContours:glyf.getInt16(pos),xMin:glyf.getInt16(pos+2),yMin:glyf.getInt16(pos+4),xMax:glyf.getInt16(pos+6),yMax:glyf.getInt16(pos+8)})]}getSize(){return 10}write(pos,buf){buf.setInt16(pos,this.numberOfContours);buf.setInt16(pos+2,this.xMin);buf.setInt16(pos+4,this.yMin);buf.setInt16(pos+6,this.xMax);buf.setInt16(pos+8,this.yMax);return 10}scale(x,factor){this.xMin=Math.round(x+(this.xMin-x)*factor);this.xMax=Math.round(x+(this.xMax-x)*factor)}}class Contour{constructor({flags:flags,xCoordinates:xCoordinates,yCoordinates:yCoordinates}){this.xCoordinates=xCoordinates;this.yCoordinates=yCoordinates;this.flags=flags}}class SimpleGlyph{constructor({contours:contours,instructions:instructions}){this.contours=contours;this.instructions=instructions}static parse(pos,glyf,numberOfContours){const endPtsOfContours=[];for(let i=0;i<numberOfContours;i++){const endPt=glyf.getUint16(pos);pos+=2;endPtsOfContours.push(endPt)}const numberOfPt=endPtsOfContours[numberOfContours-1]+1;const instructionLength=glyf.getUint16(pos);pos+=2;const instructions=new Uint8Array(glyf).slice(pos,pos+instructionLength);pos+=instructionLength;const flags=[];for(let i=0;i<numberOfPt;pos++,i++){let flag=glyf.getUint8(pos);flags.push(flag);if(flag&REPEAT_FLAG){const count=glyf.getUint8(++pos);flag^=REPEAT_FLAG;for(let m=0;m<count;m++){flags.push(flag)}i+=count}}const allXCoordinates=[];let xCoordinates=[];let yCoordinates=[];let pointFlags=[];const contours=[];let endPtsOfContoursIndex=0;let lastCoordinate=0;for(let i=0;i<numberOfPt;i++){const flag=flags[i];if(flag&X_SHORT_VECTOR){const x=glyf.getUint8(pos++);lastCoordinate+=flag&X_IS_SAME_OR_POSITIVE_X_SHORT_VECTOR?x:-x;xCoordinates.push(lastCoordinate)}else if(flag&X_IS_SAME_OR_POSITIVE_X_SHORT_VECTOR){xCoordinates.push(lastCoordinate)}else{lastCoordinate+=glyf.getInt16(pos);pos+=2;xCoordinates.push(lastCoordinate)}if(endPtsOfContours[endPtsOfContoursIndex]===i){endPtsOfContoursIndex++;allXCoordinates.push(xCoordinates);xCoordinates=[]}}lastCoordinate=0;endPtsOfContoursIndex=0;for(let i=0;i<numberOfPt;i++){const flag=flags[i];if(flag&Y_SHORT_VECTOR){const y=glyf.getUint8(pos++);lastCoordinate+=flag&Y_IS_SAME_OR_POSITIVE_Y_SHORT_VECTOR?y:-y;yCoordinates.push(lastCoordinate)}else if(flag&Y_IS_SAME_OR_POSITIVE_Y_SHORT_VECTOR){yCoordinates.push(lastCoordinate)}else{lastCoordinate+=glyf.getInt16(pos);pos+=2;yCoordinates.push(lastCoordinate)}pointFlags.push(flag&ON_CURVE_POINT|flag&OVERLAP_SIMPLE);if(endPtsOfContours[endPtsOfContoursIndex]===i){xCoordinates=allXCoordinates[endPtsOfContoursIndex];endPtsOfContoursIndex++;contours.push(new Contour({flags:pointFlags,xCoordinates:xCoordinates,yCoordinates:yCoordinates}));yCoordinates=[];pointFlags=[]}}return new SimpleGlyph({contours:contours,instructions:instructions})}getSize(){let size=this.contours.length*2+2+this.instructions.length;let lastX=0;let lastY=0;for(const contour of this.contours){size+=contour.flags.length;for(let i=0,ii=contour.xCoordinates.length;i<ii;i++){const x=contour.xCoordinates[i];const y=contour.yCoordinates[i];let abs=Math.abs(x-lastX);if(abs>255){size+=2}else if(abs>0){size+=1}lastX=x;abs=Math.abs(y-lastY);if(abs>255){size+=2}else if(abs>0){size+=1}lastY=y}}return size}write(pos,buf){const spos=pos;const xCoordinates=[];const yCoordinates=[];const flags=[];let lastX=0;let lastY=0;for(const contour of this.contours){for(let i=0,ii=contour.xCoordinates.length;i<ii;i++){let flag=contour.flags[i];const x=contour.xCoordinates[i];let delta=x-lastX;if(delta===0){flag|=X_IS_SAME_OR_POSITIVE_X_SHORT_VECTOR;xCoordinates.push(0)}else{const abs=Math.abs(delta);if(abs<=255){flag|=delta>=0?X_SHORT_VECTOR|X_IS_SAME_OR_POSITIVE_X_SHORT_VECTOR:X_SHORT_VECTOR;xCoordinates.push(abs)}else{xCoordinates.push(delta)}}lastX=x;const y=contour.yCoordinates[i];delta=y-lastY;if(delta===0){flag|=Y_IS_SAME_OR_POSITIVE_Y_SHORT_VECTOR;yCoordinates.push(0)}else{const abs=Math.abs(delta);if(abs<=255){flag|=delta>=0?Y_SHORT_VECTOR|Y_IS_SAME_OR_POSITIVE_Y_SHORT_VECTOR:Y_SHORT_VECTOR;yCoordinates.push(abs)}else{yCoordinates.push(delta)}}lastY=y;flags.push(flag)}buf.setUint16(pos,xCoordinates.length-1);pos+=2}buf.setUint16(pos,this.instructions.length);pos+=2;if(this.instructions.length){new Uint8Array(buf.buffer,0,buf.buffer.byteLength).set(this.instructions,pos);pos+=this.instructions.length}for(const flag of flags){buf.setUint8(pos++,flag)}for(let i=0,ii=xCoordinates.length;i<ii;i++){const x=xCoordinates[i];const flag=flags[i];if(flag&X_SHORT_VECTOR){buf.setUint8(pos++,x)}else if(!(flag&X_IS_SAME_OR_POSITIVE_X_SHORT_VECTOR)){buf.setInt16(pos,x);pos+=2}}for(let i=0,ii=yCoordinates.length;i<ii;i++){const y=yCoordinates[i];const flag=flags[i];if(flag&Y_SHORT_VECTOR){buf.setUint8(pos++,y)}else if(!(flag&Y_IS_SAME_OR_POSITIVE_Y_SHORT_VECTOR)){buf.setInt16(pos,y);pos+=2}}return pos-spos}scale(x,factor){for(const contour of this.contours){if(contour.xCoordinates.length===0){continue}for(let i=0,ii=contour.xCoordinates.length;i<ii;i++){contour.xCoordinates[i]=Math.round(x+(contour.xCoordinates[i]-x)*factor)}}}}class CompositeGlyph{constructor({flags:flags,glyphIndex:glyphIndex,argument1:argument1,argument2:argument2,transf:transf,instructions:instructions}){this.flags=flags;this.glyphIndex=glyphIndex;this.argument1=argument1;this.argument2=argument2;this.transf=transf;this.instructions=instructions}static parse(pos,glyf){const spos=pos;const transf=[];let flags=glyf.getUint16(pos);const glyphIndex=glyf.getUint16(pos+2);pos+=4;let argument1,argument2;if(flags&ARG_1_AND_2_ARE_WORDS){if(flags&ARGS_ARE_XY_VALUES){argument1=glyf.getInt16(pos);argument2=glyf.getInt16(pos+2)}else{argument1=glyf.getUint16(pos);argument2=glyf.getUint16(pos+2)}pos+=4;flags^=ARG_1_AND_2_ARE_WORDS}else{if(flags&ARGS_ARE_XY_VALUES){argument1=glyf.getInt8(pos);argument2=glyf.getInt8(pos+1)}else{argument1=glyf.getUint8(pos);argument2=glyf.getUint8(pos+1)}pos+=2}if(flags&WE_HAVE_A_SCALE){transf.push(glyf.getUint16(pos));pos+=2}else if(flags&WE_HAVE_AN_X_AND_Y_SCALE){transf.push(glyf.getUint16(pos),glyf.getUint16(pos+2));pos+=4}else if(flags&WE_HAVE_A_TWO_BY_TWO){transf.push(glyf.getUint16(pos),glyf.getUint16(pos+2),glyf.getUint16(pos+4),glyf.getUint16(pos+6));pos+=8}let instructions=null;if(flags&WE_HAVE_INSTRUCTIONS){const instructionLength=glyf.getUint16(pos);pos+=2;instructions=new Uint8Array(glyf).slice(pos,pos+instructionLength);pos+=instructionLength}return[pos-spos,new CompositeGlyph({flags:flags,glyphIndex:glyphIndex,argument1:argument1,argument2:argument2,transf:transf,instructions:instructions})]}getSize(){let size=2+2+this.transf.length*2;if(this.flags&WE_HAVE_INSTRUCTIONS){size+=2+this.instructions.length}size+=2;if(this.flags&2){if(!(this.argument1>=-128&&this.argument1<=127&&this.argument2>=-128&&this.argument2<=127)){size+=2}}else if(!(this.argument1>=0&&this.argument1<=255&&this.argument2>=0&&this.argument2<=255)){size+=2}return size}write(pos,buf){const spos=pos;if(this.flags&ARGS_ARE_XY_VALUES){if(!(this.argument1>=-128&&this.argument1<=127&&this.argument2>=-128&&this.argument2<=127)){this.flags|=ARG_1_AND_2_ARE_WORDS}}else if(!(this.argument1>=0&&this.argument1<=255&&this.argument2>=0&&this.argument2<=255)){this.flags|=ARG_1_AND_2_ARE_WORDS}buf.setUint16(pos,this.flags);buf.setUint16(pos+2,this.glyphIndex);pos+=4;if(this.flags&ARG_1_AND_2_ARE_WORDS){if(this.flags&ARGS_ARE_XY_VALUES){buf.setInt16(pos,this.argument1);buf.setInt16(pos+2,this.argument2)}else{buf.setUint16(pos,this.argument1);buf.setUint16(pos+2,this.argument2)}pos+=4}else{buf.setUint8(pos,this.argument1);buf.setUint8(pos+1,this.argument2);pos+=2}if(this.flags&WE_HAVE_INSTRUCTIONS){buf.setUint16(pos,this.instructions.length);pos+=2;if(this.instructions.length){new Uint8Array(buf.buffer,0,buf.buffer.byteLength).set(this.instructions,pos);pos+=this.instructions.length}}return pos-spos}scale(x,factor){}}function writeInt16(dest,offset,num){dest[offset]=num>>8&255;dest[offset+1]=num&255}function writeInt32(dest,offset,num){dest[offset]=num>>24&255;dest[offset+1]=num>>16&255;dest[offset+2]=num>>8&255;dest[offset+3]=num&255}function writeData(dest,offset,data){if(data instanceof Uint8Array){dest.set(data,offset)}else if(typeof data===\"string\"){for(let i=0,ii=data.length;i<ii;i++){dest[offset++]=data.charCodeAt(i)&255}}else{for(const num of data){dest[offset++]=num&255}}}const OTF_HEADER_SIZE=12;const OTF_TABLE_ENTRY_SIZE=16;class OpenTypeFileBuilder{constructor(sfnt){this.sfnt=sfnt;this.tables=Object.create(null)}static getSearchParams(entriesCount,entrySize){let maxPower2=1,log2=0;while((maxPower2^entriesCount)>maxPower2){maxPower2<<=1;log2++}const searchRange=maxPower2*entrySize;return{range:searchRange,entry:log2,rangeShift:entrySize*entriesCount-searchRange}}toArray(){let sfnt=this.sfnt;const tables=this.tables;const tablesNames=Object.keys(tables);tablesNames.sort();const numTables=tablesNames.length;let i,j,jj,table,tableName;let offset=OTF_HEADER_SIZE+numTables*OTF_TABLE_ENTRY_SIZE;const tableOffsets=[offset];for(i=0;i<numTables;i++){table=tables[tablesNames[i]];const paddedLength=(table.length+3&~3)>>>0;offset+=paddedLength;tableOffsets.push(offset)}const file=new Uint8Array(offset);for(i=0;i<numTables;i++){table=tables[tablesNames[i]];writeData(file,tableOffsets[i],table)}if(sfnt===\"true\"){sfnt=string32(65536)}file[0]=sfnt.charCodeAt(0)&255;file[1]=sfnt.charCodeAt(1)&255;file[2]=sfnt.charCodeAt(2)&255;file[3]=sfnt.charCodeAt(3)&255;writeInt16(file,4,numTables);const searchParams=OpenTypeFileBuilder.getSearchParams(numTables,16);writeInt16(file,6,searchParams.range);writeInt16(file,8,searchParams.entry);writeInt16(file,10,searchParams.rangeShift);offset=OTF_HEADER_SIZE;for(i=0;i<numTables;i++){tableName=tablesNames[i];file[offset]=tableName.charCodeAt(0)&255;file[offset+1]=tableName.charCodeAt(1)&255;file[offset+2]=tableName.charCodeAt(2)&255;file[offset+3]=tableName.charCodeAt(3)&255;let checksum=0;for(j=tableOffsets[i],jj=tableOffsets[i+1];j<jj;j+=4){const quad=readUint32(file,j);checksum=checksum+quad>>>0}writeInt32(file,offset+4,checksum);writeInt32(file,offset+8,tableOffsets[i]);writeInt32(file,offset+12,tables[tableName].length);offset+=OTF_TABLE_ENTRY_SIZE}return file}addTable(tag,data){if(tag in this.tables){throw new Error(\"Table \"+tag+\" already exists\")}this.tables[tag]=data}}const HINTING_ENABLED=false;const COMMAND_MAP={hstem:[1],vstem:[3],vmoveto:[4],rlineto:[5],hlineto:[6],vlineto:[7],rrcurveto:[8],callsubr:[10],flex:[12,35],drop:[12,18],endchar:[14],rmoveto:[21],hmoveto:[22],vhcurveto:[30],hvcurveto:[31]};class Type1CharString{constructor(){this.width=0;this.lsb=0;this.flexing=false;this.output=[];this.stack=[]}convert(encoded,subrs,seacAnalysisEnabled){const count=encoded.length;let error=false;let wx,sbx,subrNumber;for(let i=0;i<count;i++){let value=encoded[i];if(value<32){if(value===12){value=(value<<8)+encoded[++i]}switch(value){case 1:if(!HINTING_ENABLED){this.stack=[];break}error=this.executeCommand(2,COMMAND_MAP.hstem);break;case 3:if(!HINTING_ENABLED){this.stack=[];break}error=this.executeCommand(2,COMMAND_MAP.vstem);break;case 4:if(this.flexing){if(this.stack.length<1){error=true;break}const dy=this.stack.pop();this.stack.push(0,dy);break}error=this.executeCommand(1,COMMAND_MAP.vmoveto);break;case 5:error=this.executeCommand(2,COMMAND_MAP.rlineto);break;case 6:error=this.executeCommand(1,COMMAND_MAP.hlineto);break;case 7:error=this.executeCommand(1,COMMAND_MAP.vlineto);break;case 8:error=this.executeCommand(6,COMMAND_MAP.rrcurveto);break;case 9:this.stack=[];break;case 10:if(this.stack.length<1){error=true;break}subrNumber=this.stack.pop();if(!subrs[subrNumber]){error=true;break}error=this.convert(subrs[subrNumber],subrs,seacAnalysisEnabled);break;case 11:return error;case 13:if(this.stack.length<2){error=true;break}wx=this.stack.pop();sbx=this.stack.pop();this.lsb=sbx;this.width=wx;this.stack.push(wx,sbx);error=this.executeCommand(2,COMMAND_MAP.hmoveto);break;case 14:this.output.push(COMMAND_MAP.endchar[0]);break;case 21:if(this.flexing){break}error=this.executeCommand(2,COMMAND_MAP.rmoveto);break;case 22:if(this.flexing){this.stack.push(0);break}error=this.executeCommand(1,COMMAND_MAP.hmoveto);break;case 30:error=this.executeCommand(4,COMMAND_MAP.vhcurveto);break;case 31:error=this.executeCommand(4,COMMAND_MAP.hvcurveto);break;case(12<<8)+0:this.stack=[];break;case(12<<8)+1:if(!HINTING_ENABLED){this.stack=[];break}error=this.executeCommand(2,COMMAND_MAP.vstem);break;case(12<<8)+2:if(!HINTING_ENABLED){this.stack=[];break}error=this.executeCommand(2,COMMAND_MAP.hstem);break;case(12<<8)+6:if(seacAnalysisEnabled){const asb=this.stack.at(-5);this.seac=this.stack.splice(-4,4);this.seac[0]+=this.lsb-asb;error=this.executeCommand(0,COMMAND_MAP.endchar)}else{error=this.executeCommand(4,COMMAND_MAP.endchar)}break;case(12<<8)+7:if(this.stack.length<4){error=true;break}this.stack.pop();wx=this.stack.pop();const sby=this.stack.pop();sbx=this.stack.pop();this.lsb=sbx;this.width=wx;this.stack.push(wx,sbx,sby);error=this.executeCommand(3,COMMAND_MAP.rmoveto);break;case(12<<8)+12:if(this.stack.length<2){error=true;break}const num2=this.stack.pop();const num1=this.stack.pop();this.stack.push(num1/num2);break;case(12<<8)+16:if(this.stack.length<2){error=true;break}subrNumber=this.stack.pop();const numArgs=this.stack.pop();if(subrNumber===0&&numArgs===3){const flexArgs=this.stack.splice(-17,17);this.stack.push(flexArgs[2]+flexArgs[0],flexArgs[3]+flexArgs[1],flexArgs[4],flexArgs[5],flexArgs[6],flexArgs[7],flexArgs[8],flexArgs[9],flexArgs[10],flexArgs[11],flexArgs[12],flexArgs[13],flexArgs[14]);error=this.executeCommand(13,COMMAND_MAP.flex,true);this.flexing=false;this.stack.push(flexArgs[15],flexArgs[16])}else if(subrNumber===1&&numArgs===0){this.flexing=true}break;case(12<<8)+17:break;case(12<<8)+33:this.stack=[];break;default:warn('Unknown type 1 charstring command of \"'+value+'\"');break}if(error){break}continue}else if(value<=246){value-=139}else if(value<=250){value=(value-247)*256+encoded[++i]+108}else if(value<=254){value=-((value-251)*256)-encoded[++i]-108}else{value=(encoded[++i]&255)<<24|(encoded[++i]&255)<<16|(encoded[++i]&255)<<8|(encoded[++i]&255)<<0}this.stack.push(value)}return error}executeCommand(howManyArgs,command,keepStack){const stackLength=this.stack.length;if(howManyArgs>stackLength){return true}const start=stackLength-howManyArgs;for(let i=start;i<stackLength;i++){let value=this.stack[i];if(Number.isInteger(value)){this.output.push(28,value>>8&255,value&255)}else{value=65536*value|0;this.output.push(255,value>>24&255,value>>16&255,value>>8&255,value&255)}}this.output.push(...command);if(keepStack){this.stack.splice(start,howManyArgs)}else{this.stack.length=0}return false}}const EEXEC_ENCRYPT_KEY=55665;const CHAR_STRS_ENCRYPT_KEY=4330;function isHexDigit(code){return code>=48&&code<=57||code>=65&&code<=70||code>=97&&code<=102}function decrypt(data,key,discardNumber){if(discardNumber>=data.length){return new Uint8Array(0)}const c1=52845,c2=22719;let r=key|0,i,j;for(i=0;i<discardNumber;i++){r=(data[i]+r)*c1+c2&(1<<16)-1}const count=data.length-discardNumber;const decrypted=new Uint8Array(count);for(i=discardNumber,j=0;j<count;i++,j++){const value=data[i];decrypted[j]=value^r>>8;r=(value+r)*c1+c2&(1<<16)-1}return decrypted}function decryptAscii(data,key,discardNumber){const c1=52845,c2=22719;let r=key|0;const count=data.length,maybeLength=count>>>1;const decrypted=new Uint8Array(maybeLength);let i,j;for(i=0,j=0;i<count;i++){const digit1=data[i];if(!isHexDigit(digit1)){continue}i++;let digit2;while(i<count&&!isHexDigit(digit2=data[i])){i++}if(i<count){const value=parseInt(String.fromCharCode(digit1,digit2),16);decrypted[j++]=value^r>>8;r=(value+r)*c1+c2&(1<<16)-1}}return decrypted.slice(discardNumber,j)}function isSpecial(c){return c===47||c===91||c===93||c===123||c===125||c===40||c===41}class Type1Parser{constructor(stream,encrypted,seacAnalysisEnabled){if(encrypted){const data=stream.getBytes();const isBinary=!((isHexDigit(data[0])||isWhiteSpace(data[0]))&&isHexDigit(data[1])&&isHexDigit(data[2])&&isHexDigit(data[3])&&isHexDigit(data[4])&&isHexDigit(data[5])&&isHexDigit(data[6])&&isHexDigit(data[7]));stream=new Stream(isBinary?decrypt(data,EEXEC_ENCRYPT_KEY,4):decryptAscii(data,EEXEC_ENCRYPT_KEY,4))}this.seacAnalysisEnabled=!!seacAnalysisEnabled;this.stream=stream;this.nextChar()}readNumberArray(){this.getToken();const array=[];while(true){const token=this.getToken();if(token===null||token===\"]\"||token===\"}\"){break}array.push(parseFloat(token||0))}return array}readNumber(){const token=this.getToken();return parseFloat(token||0)}readInt(){const token=this.getToken();return parseInt(token||0,10)|0}readBoolean(){const token=this.getToken();return token===\"true\"?1:0}nextChar(){return this.currentChar=this.stream.getByte()}prevChar(){this.stream.skip(-2);return this.currentChar=this.stream.getByte()}getToken(){let comment=false;let ch=this.currentChar;while(true){if(ch===-1){return null}if(comment){if(ch===10||ch===13){comment=false}}else if(ch===37){comment=true}else if(!isWhiteSpace(ch)){break}ch=this.nextChar()}if(isSpecial(ch)){this.nextChar();return String.fromCharCode(ch)}let token=\"\";do{token+=String.fromCharCode(ch);ch=this.nextChar()}while(ch>=0&&!isWhiteSpace(ch)&&!isSpecial(ch));return token}readCharStrings(bytes,lenIV){if(lenIV===-1){return bytes}return decrypt(bytes,CHAR_STRS_ENCRYPT_KEY,lenIV)}extractFontProgram(properties){const stream=this.stream;const subrs=[],charstrings=[];const privateData=Object.create(null);privateData.lenIV=4;const program={subrs:[],charstrings:[],properties:{privateData:privateData}};let token,length,data,lenIV;while((token=this.getToken())!==null){if(token!==\"/\"){continue}token=this.getToken();switch(token){case\"CharStrings\":this.getToken();this.getToken();this.getToken();this.getToken();while(true){token=this.getToken();if(token===null||token===\"end\"){break}if(token!==\"/\"){continue}const glyph=this.getToken();length=this.readInt();this.getToken();data=length>0?stream.getBytes(length):new Uint8Array(0);lenIV=program.properties.privateData.lenIV;const encoded=this.readCharStrings(data,lenIV);this.nextChar();token=this.getToken();if(token===\"noaccess\"){this.getToken()}else if(token===\"/\"){this.prevChar()}charstrings.push({glyph:glyph,encoded:encoded})}break;case\"Subrs\":this.readInt();this.getToken();while(this.getToken()===\"dup\"){const index=this.readInt();length=this.readInt();this.getToken();data=length>0?stream.getBytes(length):new Uint8Array(0);lenIV=program.properties.privateData.lenIV;const encoded=this.readCharStrings(data,lenIV);this.nextChar();token=this.getToken();if(token===\"noaccess\"){this.getToken()}subrs[index]=encoded}break;case\"BlueValues\":case\"OtherBlues\":case\"FamilyBlues\":case\"FamilyOtherBlues\":const blueArray=this.readNumberArray();if(blueArray.length>0&&blueArray.length%2===0&&HINTING_ENABLED){program.properties.privateData[token]=blueArray}break;case\"StemSnapH\":case\"StemSnapV\":program.properties.privateData[token]=this.readNumberArray();break;case\"StdHW\":case\"StdVW\":program.properties.privateData[token]=this.readNumberArray()[0];break;case\"BlueShift\":case\"lenIV\":case\"BlueFuzz\":case\"BlueScale\":case\"LanguageGroup\":program.properties.privateData[token]=this.readNumber();break;case\"ExpansionFactor\":program.properties.privateData[token]=this.readNumber()||.06;break;case\"ForceBold\":program.properties.privateData[token]=this.readBoolean();break}}for(const{encoded:encoded,glyph:glyph}of charstrings){const charString=new Type1CharString;const error=charString.convert(encoded,subrs,this.seacAnalysisEnabled);let output=charString.output;if(error){output=[14]}const charStringObject={glyphName:glyph,charstring:output,width:charString.width,lsb:charString.lsb,seac:charString.seac};if(glyph===\".notdef\"){program.charstrings.unshift(charStringObject)}else{program.charstrings.push(charStringObject)}if(properties.builtInEncoding){const index=properties.builtInEncoding.indexOf(glyph);if(index>-1&&properties.widths[index]===undefined&&index>=properties.firstChar&&index<=properties.lastChar){properties.widths[index]=charString.width}}}return program}extractFontHeader(properties){let token;while((token=this.getToken())!==null){if(token!==\"/\"){continue}token=this.getToken();switch(token){case\"FontMatrix\":const matrix=this.readNumberArray();properties.fontMatrix=matrix;break;case\"Encoding\":const encodingArg=this.getToken();let encoding;if(!/^\\d+$/.test(encodingArg)){encoding=getEncoding(encodingArg)}else{encoding=[];const size=parseInt(encodingArg,10)|0;this.getToken();for(let j=0;j<size;j++){token=this.getToken();while(token!==\"dup\"&&token!==\"def\"){token=this.getToken();if(token===null){return}}if(token===\"def\"){break}const index=this.readInt();this.getToken();const glyph=this.getToken();encoding[index]=glyph;this.getToken()}}properties.builtInEncoding=encoding;break;case\"FontBBox\":const fontBBox=this.readNumberArray();properties.ascent=Math.max(fontBBox[3],fontBBox[1]);properties.descent=Math.min(fontBBox[1],fontBBox[3]);properties.ascentScaled=true;break}}}}function findBlock(streamBytes,signature,startIndex){const streamBytesLength=streamBytes.length;const signatureLength=signature.length;const scanLength=streamBytesLength-signatureLength;let i=startIndex,found=false;while(i<scanLength){let j=0;while(j<signatureLength&&streamBytes[i+j]===signature[j]){j++}if(j>=signatureLength){i+=j;while(i<streamBytesLength&&isWhiteSpace(streamBytes[i])){i++}found=true;break}i++}return{found:found,length:i}}function getHeaderBlock(stream,suggestedLength){const EEXEC_SIGNATURE=[101,101,120,101,99];const streamStartPos=stream.pos;let headerBytes,headerBytesLength,block;try{headerBytes=stream.getBytes(suggestedLength);headerBytesLength=headerBytes.length}catch{}if(headerBytesLength===suggestedLength){block=findBlock(headerBytes,EEXEC_SIGNATURE,suggestedLength-2*EEXEC_SIGNATURE.length);if(block.found&&block.length===suggestedLength){return{stream:new Stream(headerBytes),length:suggestedLength}}}warn('Invalid \"Length1\" property in Type1 font -- trying to recover.');stream.pos=streamStartPos;const SCAN_BLOCK_LENGTH=2048;let actualLength;while(true){const scanBytes=stream.peekBytes(SCAN_BLOCK_LENGTH);block=findBlock(scanBytes,EEXEC_SIGNATURE,0);if(block.length===0){break}stream.pos+=block.length;if(block.found){actualLength=stream.pos-streamStartPos;break}}stream.pos=streamStartPos;if(actualLength){return{stream:new Stream(stream.getBytes(actualLength)),length:actualLength}}warn('Unable to recover \"Length1\" property in Type1 font -- using as is.');return{stream:new Stream(stream.getBytes(suggestedLength)),length:suggestedLength}}function getEexecBlock(stream,suggestedLength){const eexecBytes=stream.getBytes();if(eexecBytes.length===0){throw new FormatError(\"getEexecBlock - no font program found.\")}return{stream:new Stream(eexecBytes),length:eexecBytes.length}}class Type1Font{constructor(name,file,properties){const PFB_HEADER_SIZE=6;let headerBlockLength=properties.length1;let eexecBlockLength=properties.length2;let pfbHeader=file.peekBytes(PFB_HEADER_SIZE);const pfbHeaderPresent=pfbHeader[0]===128&&pfbHeader[1]===1;if(pfbHeaderPresent){file.skip(PFB_HEADER_SIZE);headerBlockLength=pfbHeader[5]<<24|pfbHeader[4]<<16|pfbHeader[3]<<8|pfbHeader[2]}const headerBlock=getHeaderBlock(file,headerBlockLength);const headerBlockParser=new Type1Parser(headerBlock.stream,false,SEAC_ANALYSIS_ENABLED);headerBlockParser.extractFontHeader(properties);if(pfbHeaderPresent){pfbHeader=file.getBytes(PFB_HEADER_SIZE);eexecBlockLength=pfbHeader[5]<<24|pfbHeader[4]<<16|pfbHeader[3]<<8|pfbHeader[2]}const eexecBlock=getEexecBlock(file,eexecBlockLength);const eexecBlockParser=new Type1Parser(eexecBlock.stream,true,SEAC_ANALYSIS_ENABLED);const data=eexecBlockParser.extractFontProgram(properties);for(const key in data.properties){properties[key]=data.properties[key]}const charstrings=data.charstrings;const type2Charstrings=this.getType2Charstrings(charstrings);const subrs=this.getType2Subrs(data.subrs);this.charstrings=charstrings;this.data=this.wrap(name,type2Charstrings,this.charstrings,subrs,properties);this.seacs=this.getSeacs(data.charstrings)}get numGlyphs(){return this.charstrings.length+1}getCharset(){const charset=[\".notdef\"];for(const{glyphName:glyphName}of this.charstrings){charset.push(glyphName)}return charset}getGlyphMapping(properties){const charstrings=this.charstrings;if(properties.composite){const charCodeToGlyphId=Object.create(null);for(let glyphId=0,charstringsLen=charstrings.length;glyphId<charstringsLen;glyphId++){const charCode=properties.cMap.charCodeOf(glyphId);charCodeToGlyphId[charCode]=glyphId+1}return charCodeToGlyphId}const glyphNames=[\".notdef\"];let builtInEncoding,glyphId;for(glyphId=0;glyphId<charstrings.length;glyphId++){glyphNames.push(charstrings[glyphId].glyphName)}const encoding=properties.builtInEncoding;if(encoding){builtInEncoding=Object.create(null);for(const charCode in encoding){glyphId=glyphNames.indexOf(encoding[charCode]);if(glyphId>=0){builtInEncoding[charCode]=glyphId}}}return type1FontGlyphMapping(properties,builtInEncoding,glyphNames)}hasGlyphId(id){if(id<0||id>=this.numGlyphs){return false}if(id===0){return true}const glyph=this.charstrings[id-1];return glyph.charstring.length>0}getSeacs(charstrings){const seacMap=[];for(let i=0,ii=charstrings.length;i<ii;i++){const charstring=charstrings[i];if(charstring.seac){seacMap[i+1]=charstring.seac}}return seacMap}getType2Charstrings(type1Charstrings){const type2Charstrings=[];for(const type1Charstring of type1Charstrings){type2Charstrings.push(type1Charstring.charstring)}return type2Charstrings}getType2Subrs(type1Subrs){let bias=0;const count=type1Subrs.length;if(count<1133){bias=107}else if(count<33769){bias=1131}else{bias=32768}const type2Subrs=[];let i;for(i=0;i<bias;i++){type2Subrs.push([11])}for(i=0;i<count;i++){type2Subrs.push(type1Subrs[i])}return type2Subrs}wrap(name,glyphs,charstrings,subrs,properties){const cff=new CFF;cff.header=new CFFHeader(1,0,4,4);cff.names=[name];const topDict=new CFFTopDict;topDict.setByName(\"version\",391);topDict.setByName(\"Notice\",392);topDict.setByName(\"FullName\",393);topDict.setByName(\"FamilyName\",394);topDict.setByName(\"Weight\",395);topDict.setByName(\"Encoding\",null);topDict.setByName(\"FontMatrix\",properties.fontMatrix);topDict.setByName(\"FontBBox\",properties.bbox);topDict.setByName(\"charset\",null);topDict.setByName(\"CharStrings\",null);topDict.setByName(\"Private\",null);cff.topDict=topDict;const strings=new CFFStrings;strings.add(\"Version 0.11\");strings.add(\"See original notice\");strings.add(name);strings.add(name);strings.add(\"Medium\");cff.strings=strings;cff.globalSubrIndex=new CFFIndex;const count=glyphs.length;const charsetArray=[\".notdef\"];let i,ii;for(i=0;i<count;i++){const glyphName=charstrings[i].glyphName;const index=CFFStandardStrings.indexOf(glyphName);if(index===-1){strings.add(glyphName)}charsetArray.push(glyphName)}cff.charset=new CFFCharset(false,0,charsetArray);const charStringsIndex=new CFFIndex;charStringsIndex.add([139,14]);for(i=0;i<count;i++){charStringsIndex.add(glyphs[i])}cff.charStrings=charStringsIndex;const privateDict=new CFFPrivateDict;privateDict.setByName(\"Subrs\",null);const fields=[\"BlueValues\",\"OtherBlues\",\"FamilyBlues\",\"FamilyOtherBlues\",\"StemSnapH\",\"StemSnapV\",\"BlueShift\",\"BlueFuzz\",\"BlueScale\",\"LanguageGroup\",\"ExpansionFactor\",\"ForceBold\",\"StdHW\",\"StdVW\"];for(i=0,ii=fields.length;i<ii;i++){const field=fields[i];if(!(field in properties.privateData)){continue}const value=properties.privateData[field];if(Array.isArray(value)){for(let j=value.length-1;j>0;j--){value[j]-=value[j-1]}}privateDict.setByName(field,value)}cff.topDict.privateDict=privateDict;const subrIndex=new CFFIndex;for(i=0,ii=subrs.length;i<ii;i++){subrIndex.add(subrs[i])}privateDict.subrsIndex=subrIndex;const compiler=new CFFCompiler(cff);return compiler.compile()}}const PRIVATE_USE_AREAS=[[57344,63743],[1048576,1114109]];const PDF_GLYPH_SPACE_UNITS=1e3;const EXPORT_DATA_PROPERTIES=[\"ascent\",\"bbox\",\"black\",\"bold\",\"charProcOperatorList\",\"cssFontInfo\",\"data\",\"defaultVMetrics\",\"defaultWidth\",\"descent\",\"disableFontFace\",\"fallbackName\",\"fontExtraProperties\",\"fontMatrix\",\"isInvalidPDFjsFont\",\"isType3Font\",\"italic\",\"loadedName\",\"mimetype\",\"missingFile\",\"name\",\"remeasure\",\"systemFontInfo\",\"vertical\"];const EXPORT_DATA_EXTRA_PROPERTIES=[\"cMap\",\"composite\",\"defaultEncoding\",\"differences\",\"isMonospace\",\"isSerifFont\",\"isSymbolicFont\",\"seacMap\",\"subtype\",\"toFontChar\",\"toUnicode\",\"type\",\"vmetrics\",\"widths\"];function adjustWidths(properties){if(!properties.fontMatrix){return}if(properties.fontMatrix[0]===FONT_IDENTITY_MATRIX[0]){return}const scale=.001/properties.fontMatrix[0];const glyphsWidths=properties.widths;for(const glyph in glyphsWidths){glyphsWidths[glyph]*=scale}properties.defaultWidth*=scale}function adjustTrueTypeToUnicode(properties,isSymbolicFont,nameRecords){if(properties.isInternalFont){return}if(properties.hasIncludedToUnicodeMap){return}if(properties.hasEncoding){return}if(properties.toUnicode instanceof IdentityToUnicodeMap){return}if(!isSymbolicFont){return}if(nameRecords.length===0){return}if(properties.defaultEncoding===WinAnsiEncoding){return}for(const r of nameRecords){if(!isWinNameRecord(r)){return}}const encoding=WinAnsiEncoding;const toUnicode=[],glyphsUnicodeMap=getGlyphsUnicode();for(const charCode in encoding){const glyphName=encoding[charCode];if(glyphName===\"\"){continue}const unicode=glyphsUnicodeMap[glyphName];if(unicode===undefined){continue}toUnicode[charCode]=String.fromCharCode(unicode)}if(toUnicode.length>0){properties.toUnicode.amend(toUnicode)}}function adjustType1ToUnicode(properties,builtInEncoding){if(properties.isInternalFont){return}if(properties.hasIncludedToUnicodeMap){return}if(builtInEncoding===properties.defaultEncoding){return}if(properties.toUnicode instanceof IdentityToUnicodeMap){return}const toUnicode=[],glyphsUnicodeMap=getGlyphsUnicode();for(const charCode in builtInEncoding){if(properties.hasEncoding){if(properties.baseEncodingName||properties.differences[charCode]!==undefined){continue}}const glyphName=builtInEncoding[charCode];const unicode=getUnicodeForGlyph(glyphName,glyphsUnicodeMap);if(unicode!==-1){toUnicode[charCode]=String.fromCharCode(unicode)}}if(toUnicode.length>0){properties.toUnicode.amend(toUnicode)}}function amendFallbackToUnicode(properties){if(!properties.fallbackToUnicode){return}if(properties.toUnicode instanceof IdentityToUnicodeMap){return}const toUnicode=[];for(const charCode in properties.fallbackToUnicode){if(properties.toUnicode.has(charCode)){continue}toUnicode[charCode]=properties.fallbackToUnicode[charCode]}if(toUnicode.length>0){properties.toUnicode.amend(toUnicode)}}class fonts_Glyph{constructor(originalCharCode,fontChar,unicode,accent,width,vmetric,operatorListId,isSpace,isInFont){this.originalCharCode=originalCharCode;this.fontChar=fontChar;this.unicode=unicode;this.accent=accent;this.width=width;this.vmetric=vmetric;this.operatorListId=operatorListId;this.isSpace=isSpace;this.isInFont=isInFont}get category(){return shadow(this,\"category\",getCharUnicodeCategory(this.unicode),true)}}function int16(b0,b1){return(b0<<8)+b1}function writeSignedInt16(bytes,index,value){bytes[index+1]=value;bytes[index]=value>>>8}function signedInt16(b0,b1){const value=(b0<<8)+b1;return value&1<<15?value-65536:value}function writeUint32(bytes,index,value){bytes[index+3]=value&255;bytes[index+2]=value>>>8;bytes[index+1]=value>>>16;bytes[index]=value>>>24}function int32(b0,b1,b2,b3){return(b0<<24)+(b1<<16)+(b2<<8)+b3}function string16(value){return String.fromCharCode(value>>8&255,value&255)}function safeString16(value){if(value>32767){value=32767}else if(value<-32768){value=-32768}return String.fromCharCode(value>>8&255,value&255)}function isTrueTypeFile(file){const header=file.peekBytes(4);return readUint32(header,0)===65536||bytesToString(header)===\"true\"}function isTrueTypeCollectionFile(file){const header=file.peekBytes(4);return bytesToString(header)===\"ttcf\"}function isOpenTypeFile(file){const header=file.peekBytes(4);return bytesToString(header)===\"OTTO\"}function isType1File(file){const header=file.peekBytes(2);if(header[0]===37&&header[1]===33){return true}if(header[0]===128&&header[1]===1){return true}return false}function isCFFFile(file){const header=file.peekBytes(4);if(header[0]>=1&&header[3]>=1&&header[3]<=4){return true}return false}function getFontFileType(file,{type:type,subtype:subtype,composite:composite}){let fileType,fileSubtype;if(isTrueTypeFile(file)||isTrueTypeCollectionFile(file)){fileType=composite?\"CIDFontType2\":\"TrueType\"}else if(isOpenTypeFile(file)){fileType=composite?\"CIDFontType2\":\"OpenType\"}else if(isType1File(file)){if(composite){fileType=\"CIDFontType0\"}else{fileType=type===\"MMType1\"?\"MMType1\":\"Type1\"}}else if(isCFFFile(file)){if(composite){fileType=\"CIDFontType0\";fileSubtype=\"CIDFontType0C\"}else{fileType=type===\"MMType1\"?\"MMType1\":\"Type1\";fileSubtype=\"Type1C\"}}else{warn(\"getFontFileType: Unable to detect correct font file Type/Subtype.\");fileType=type;fileSubtype=subtype}return[fileType,fileSubtype]}function applyStandardFontGlyphMap(map,glyphMap){for(const charCode in glyphMap){map[+charCode]=glyphMap[charCode]}}function buildToFontChar(encoding,glyphsUnicodeMap,differences){const toFontChar=[];let unicode;for(let i=0,ii=encoding.length;i<ii;i++){unicode=getUnicodeForGlyph(encoding[i],glyphsUnicodeMap);if(unicode!==-1){toFontChar[i]=unicode}}for(const charCode in differences){unicode=getUnicodeForGlyph(differences[charCode],glyphsUnicodeMap);if(unicode!==-1){toFontChar[+charCode]=unicode}}return toFontChar}function isMacNameRecord(r){return r.platform===1&&r.encoding===0&&r.language===0}function isWinNameRecord(r){return r.platform===3&&r.encoding===1&&r.language===1033}function convertCidString(charCode,cid,shouldThrow=false){switch(cid.length){case 1:return cid.charCodeAt(0);case 2:return cid.charCodeAt(0)<<8|cid.charCodeAt(1)}const msg=`Unsupported CID string (charCode ${charCode}): \"${cid}\".`;if(shouldThrow){throw new FormatError(msg)}warn(msg);return cid}function adjustMapping(charCodeToGlyphId,hasGlyph,newGlyphZeroId,toUnicode){const newMap=Object.create(null);const toUnicodeExtraMap=new Map;const toFontChar=[];const usedGlyphIds=new Set;let privateUseAreaIndex=0;const privateUseOffetStart=PRIVATE_USE_AREAS[privateUseAreaIndex][0];let nextAvailableFontCharCode=privateUseOffetStart;let privateUseOffetEnd=PRIVATE_USE_AREAS[privateUseAreaIndex][1];const isInPrivateArea=code=>PRIVATE_USE_AREAS[0][0]<=code&&code<=PRIVATE_USE_AREAS[0][1]||PRIVATE_USE_AREAS[1][0]<=code&&code<=PRIVATE_USE_AREAS[1][1];let LIGATURE_TO_UNICODE=null;for(const originalCharCode in charCodeToGlyphId){let glyphId=charCodeToGlyphId[originalCharCode];if(!hasGlyph(glyphId)){continue}if(nextAvailableFontCharCode>privateUseOffetEnd){privateUseAreaIndex++;if(privateUseAreaIndex>=PRIVATE_USE_AREAS.length){warn(\"Ran out of space in font private use area.\");break}nextAvailableFontCharCode=PRIVATE_USE_AREAS[privateUseAreaIndex][0];privateUseOffetEnd=PRIVATE_USE_AREAS[privateUseAreaIndex][1]}const fontCharCode=nextAvailableFontCharCode++;if(glyphId===0){glyphId=newGlyphZeroId}let unicode=toUnicode.get(originalCharCode);if(typeof unicode===\"string\"){if(unicode.length===1){unicode=unicode.codePointAt(0)}else{if(!LIGATURE_TO_UNICODE){LIGATURE_TO_UNICODE=new Map;for(let i=64256;i<=64335;i++){const normalized=String.fromCharCode(i).normalize(\"NFKD\");if(normalized.length>1){LIGATURE_TO_UNICODE.set(normalized,i)}}}unicode=LIGATURE_TO_UNICODE.get(unicode)||unicode.codePointAt(0)}}if(unicode&&!isInPrivateArea(unicode)&&!usedGlyphIds.has(glyphId)){toUnicodeExtraMap.set(unicode,glyphId);usedGlyphIds.add(glyphId)}newMap[fontCharCode]=glyphId;toFontChar[originalCharCode]=fontCharCode}return{toFontChar:toFontChar,charCodeToGlyphId:newMap,toUnicodeExtraMap:toUnicodeExtraMap,nextAvailableFontCharCode:nextAvailableFontCharCode}}function getRanges(glyphs,toUnicodeExtraMap,numGlyphs){const codes=[];for(const charCode in glyphs){if(glyphs[charCode]>=numGlyphs){continue}codes.push({fontCharCode:charCode|0,glyphId:glyphs[charCode]})}if(toUnicodeExtraMap){for(const[unicode,glyphId]of toUnicodeExtraMap){if(glyphId>=numGlyphs){continue}codes.push({fontCharCode:unicode,glyphId:glyphId})}}if(codes.length===0){codes.push({fontCharCode:0,glyphId:0})}codes.sort(((a,b)=>a.fontCharCode-b.fontCharCode));const ranges=[];const length=codes.length;for(let n=0;n<length;){const start=codes[n].fontCharCode;const codeIndices=[codes[n].glyphId];++n;let end=start;while(n<length&&end+1===codes[n].fontCharCode){codeIndices.push(codes[n].glyphId);++end;++n;if(end===65535){break}}ranges.push([start,end,codeIndices])}return ranges}function createCmapTable(glyphs,toUnicodeExtraMap,numGlyphs){const ranges=getRanges(glyphs,toUnicodeExtraMap,numGlyphs);const numTables=ranges.at(-1)[1]>65535?2:1;let cmap=\"\\0\\0\"+string16(numTables)+\"\\0\u0003\"+\"\\0\u0001\"+string32(4+numTables*8);let i,ii,j,jj;for(i=ranges.length-1;i>=0;--i){if(ranges[i][0]<=65535){break}}const bmpLength=i+1;if(ranges[i][0]<65535&&ranges[i][1]===65535){ranges[i][1]=65534}const trailingRangesCount=ranges[i][1]<65535?1:0;const segCount=bmpLength+trailingRangesCount;const searchParams=OpenTypeFileBuilder.getSearchParams(segCount,2);let startCount=\"\";let endCount=\"\";let idDeltas=\"\";let idRangeOffsets=\"\";let glyphsIds=\"\";let bias=0;let range,start,end,codes;for(i=0,ii=bmpLength;i<ii;i++){range=ranges[i];start=range[0];end=range[1];startCount+=string16(start);endCount+=string16(end);codes=range[2];let contiguous=true;for(j=1,jj=codes.length;j<jj;++j){if(codes[j]!==codes[j-1]+1){contiguous=false;break}}if(!contiguous){const offset=(segCount-i)*2+bias*2;bias+=end-start+1;idDeltas+=string16(0);idRangeOffsets+=string16(offset);for(j=0,jj=codes.length;j<jj;++j){glyphsIds+=string16(codes[j])}}else{const startCode=codes[0];idDeltas+=string16(startCode-start&65535);idRangeOffsets+=string16(0)}}if(trailingRangesCount>0){endCount+=\"ÿÿ\";startCount+=\"ÿÿ\";idDeltas+=\"\\0\u0001\";idRangeOffsets+=\"\\0\\0\"}const format314=\"\\0\\0\"+string16(2*segCount)+string16(searchParams.range)+string16(searchParams.entry)+string16(searchParams.rangeShift)+endCount+\"\\0\\0\"+startCount+idDeltas+idRangeOffsets+glyphsIds;let format31012=\"\";let header31012=\"\";if(numTables>1){cmap+=\"\\0\u0003\"+\"\\0\\n\"+string32(4+numTables*8+4+format314.length);format31012=\"\";for(i=0,ii=ranges.length;i<ii;i++){range=ranges[i];start=range[0];codes=range[2];let code=codes[0];for(j=1,jj=codes.length;j<jj;++j){if(codes[j]!==codes[j-1]+1){end=range[0]+j-1;format31012+=string32(start)+string32(end)+string32(code);start=end+1;code=codes[j]}}format31012+=string32(start)+string32(range[1])+string32(code)}header31012=\"\\0\\f\"+\"\\0\\0\"+string32(format31012.length+16)+\"\\0\\0\\0\\0\"+string32(format31012.length/12)}return cmap+\"\\0\u0004\"+string16(format314.length+4)+format314+header31012+format31012}function validateOS2Table(os2,file){file.pos=(file.start||0)+os2.offset;const version=file.getUint16();file.skip(60);const selection=file.getUint16();if(version<4&&selection&768){return false}const firstChar=file.getUint16();const lastChar=file.getUint16();if(firstChar>lastChar){return false}file.skip(6);const usWinAscent=file.getUint16();if(usWinAscent===0){return false}os2.data[8]=os2.data[9]=0;return true}function createOS2Table(properties,charstrings,override){override||={unitsPerEm:0,yMax:0,yMin:0,ascent:0,descent:0};let ulUnicodeRange1=0;let ulUnicodeRange2=0;let ulUnicodeRange3=0;let ulUnicodeRange4=0;let firstCharIndex=null;let lastCharIndex=0;let position=-1;if(charstrings){for(let code in charstrings){code|=0;if(firstCharIndex>code||!firstCharIndex){firstCharIndex=code}if(lastCharIndex<code){lastCharIndex=code}position=getUnicodeRangeFor(code,position);if(position<32){ulUnicodeRange1|=1<<position}else if(position<64){ulUnicodeRange2|=1<<position-32}else if(position<96){ulUnicodeRange3|=1<<position-64}else if(position<123){ulUnicodeRange4|=1<<position-96}else{throw new FormatError(\"Unicode ranges Bits > 123 are reserved for internal usage\")}}if(lastCharIndex>65535){lastCharIndex=65535}}else{firstCharIndex=0;lastCharIndex=255}const bbox=properties.bbox||[0,0,0,0];const unitsPerEm=override.unitsPerEm||(properties.fontMatrix?1/Math.max(...properties.fontMatrix.slice(0,4).map(Math.abs)):1e3);const scale=properties.ascentScaled?1:unitsPerEm/PDF_GLYPH_SPACE_UNITS;const typoAscent=override.ascent||Math.round(scale*(properties.ascent||bbox[3]));let typoDescent=override.descent||Math.round(scale*(properties.descent||bbox[1]));if(typoDescent>0&&properties.descent>0&&bbox[1]<0){typoDescent=-typoDescent}const winAscent=override.yMax||typoAscent;const winDescent=-override.yMin||-typoDescent;return\"\\0\u0003\"+\"\u0002$\"+\"\u0001ô\"+\"\\0\u0005\"+\"\\0\\0\"+\"\u0002\"+\"\u0002»\"+\"\\0\\0\"+\"\\0\"+\"\u0002\"+\"\u0002»\"+\"\\0\\0\"+\"\u0001ß\"+\"\\x001\"+\"\u0001\u0002\"+\"\\0\\0\"+\"\\0\\0\u0006\"+String.fromCharCode(properties.fixedPitch?9:0)+\"\\0\\0\\0\\0\\0\\0\"+string32(ulUnicodeRange1)+string32(ulUnicodeRange2)+string32(ulUnicodeRange3)+string32(ulUnicodeRange4)+\"*21*\"+string16(properties.italicAngle?1:0)+string16(firstCharIndex||properties.firstChar)+string16(lastCharIndex||properties.lastChar)+string16(typoAscent)+string16(typoDescent)+\"\\0d\"+string16(winAscent)+string16(winDescent)+\"\\0\\0\\0\\0\"+\"\\0\\0\\0\\0\"+string16(properties.xHeight)+string16(properties.capHeight)+string16(0)+string16(firstCharIndex||properties.firstChar)+\"\\0\u0003\"}function createPostTable(properties){const angle=Math.floor(properties.italicAngle*2**16);return\"\\0\u0003\\0\\0\"+string32(angle)+\"\\0\\0\"+\"\\0\\0\"+string32(properties.fixedPitch?1:0)+\"\\0\\0\\0\\0\"+\"\\0\\0\\0\\0\"+\"\\0\\0\\0\\0\"+\"\\0\\0\\0\\0\"}function createPostscriptName(name){return name.replaceAll(/[^\\x21-\\x7E]|[[\\](){}<>/%]/g,\"\").slice(0,63)}function createNameTable(name,proto){if(!proto){proto=[[],[]]}const strings=[proto[0][0]||\"Original licence\",proto[0][1]||name,proto[0][2]||\"Unknown\",proto[0][3]||\"uniqueID\",proto[0][4]||name,proto[0][5]||\"Version 0.11\",proto[0][6]||createPostscriptName(name),proto[0][7]||\"Unknown\",proto[0][8]||\"Unknown\",proto[0][9]||\"Unknown\"];const stringsUnicode=[];let i,ii,j,jj,str;for(i=0,ii=strings.length;i<ii;i++){str=proto[1][i]||strings[i];const strBufUnicode=[];for(j=0,jj=str.length;j<jj;j++){strBufUnicode.push(string16(str.charCodeAt(j)))}stringsUnicode.push(strBufUnicode.join(\"\"))}const names=[strings,stringsUnicode];const platforms=[\"\\0\u0001\",\"\\0\u0003\"];const encodings=[\"\\0\\0\",\"\\0\u0001\"];const languages=[\"\\0\\0\",\"\u0004\\t\"];const namesRecordCount=strings.length*platforms.length;let nameTable=\"\\0\\0\"+string16(namesRecordCount)+string16(namesRecordCount*12+6);let strOffset=0;for(i=0,ii=platforms.length;i<ii;i++){const strs=names[i];for(j=0,jj=strs.length;j<jj;j++){str=strs[j];const nameRecord=platforms[i]+encodings[i]+languages[i]+string16(j)+string16(str.length)+string16(strOffset);nameTable+=nameRecord;strOffset+=str.length}}nameTable+=strings.join(\"\")+stringsUnicode.join(\"\");return nameTable}class Font{constructor(name,file,properties,evaluatorOptions){this.name=name;this.psName=null;this.mimetype=null;this.disableFontFace=evaluatorOptions.disableFontFace;this.fontExtraProperties=evaluatorOptions.fontExtraProperties;this.loadedName=properties.loadedName;this.isType3Font=properties.isType3Font;this.missingFile=false;this.cssFontInfo=properties.cssFontInfo;this._charsCache=Object.create(null);this._glyphCache=Object.create(null);let isSerifFont=!!(properties.flags&FontFlags.Serif);if(!isSerifFont&&!properties.isSimulatedFlags){const baseName=name.replaceAll(/[,_]/g,\"-\").split(\"-\",1)[0],serifFonts=getSerifFonts();for(const namePart of baseName.split(\"+\")){if(serifFonts[namePart]){isSerifFont=true;break}}}this.isSerifFont=isSerifFont;this.isSymbolicFont=!!(properties.flags&FontFlags.Symbolic);this.isMonospace=!!(properties.flags&FontFlags.FixedPitch);let{type:type,subtype:subtype}=properties;this.type=type;this.subtype=subtype;this.systemFontInfo=properties.systemFontInfo;const matches=name.match(/^InvalidPDFjsFont_(.*)_\\d+$/);this.isInvalidPDFjsFont=!!matches;if(this.isInvalidPDFjsFont){this.fallbackName=matches[1]}else if(this.isMonospace){this.fallbackName=\"monospace\"}else if(this.isSerifFont){this.fallbackName=\"serif\"}else{this.fallbackName=\"sans-serif\"}if(this.systemFontInfo?.guessFallback){this.systemFontInfo.guessFallback=false;this.systemFontInfo.css+=`,${this.fallbackName}`}this.differences=properties.differences;this.widths=properties.widths;this.defaultWidth=properties.defaultWidth;this.composite=properties.composite;this.cMap=properties.cMap;this.capHeight=properties.capHeight/PDF_GLYPH_SPACE_UNITS;this.ascent=properties.ascent/PDF_GLYPH_SPACE_UNITS;this.descent=properties.descent/PDF_GLYPH_SPACE_UNITS;this.lineHeight=this.ascent-this.descent;this.fontMatrix=properties.fontMatrix;this.bbox=properties.bbox;this.defaultEncoding=properties.defaultEncoding;this.toUnicode=properties.toUnicode;this.toFontChar=[];if(properties.type===\"Type3\"){for(let charCode=0;charCode<256;charCode++){this.toFontChar[charCode]=this.differences[charCode]||properties.defaultEncoding[charCode]}return}this.cidEncoding=properties.cidEncoding||\"\";this.vertical=!!properties.vertical;if(this.vertical){this.vmetrics=properties.vmetrics;this.defaultVMetrics=properties.defaultVMetrics}if(!file||file.isEmpty){if(file){warn('Font file is empty in \"'+name+'\" ('+this.loadedName+\")\")}this.fallbackToSystemFont(properties);return}[type,subtype]=getFontFileType(file,properties);if(type!==this.type||subtype!==this.subtype){info(\"Inconsistent font file Type/SubType, expected: \"+`${this.type}/${this.subtype} but found: ${type}/${subtype}.`)}let data;try{switch(type){case\"MMType1\":info(\"MMType1 font (\"+name+\"), falling back to Type1.\");case\"Type1\":case\"CIDFontType0\":this.mimetype=\"font/opentype\";const cff=subtype===\"Type1C\"||subtype===\"CIDFontType0C\"?new CFFFont(file,properties):new Type1Font(name,file,properties);adjustWidths(properties);data=this.convert(name,cff,properties);break;case\"OpenType\":case\"TrueType\":case\"CIDFontType2\":this.mimetype=\"font/opentype\";data=this.checkAndRepair(name,file,properties);adjustWidths(properties);if(this.isOpenType){type=\"OpenType\"}break;default:throw new FormatError(`Font ${type} is not supported`)}}catch(e){warn(e);this.fallbackToSystemFont(properties);return}amendFallbackToUnicode(properties);this.data=data;this.type=type;this.subtype=subtype;this.fontMatrix=properties.fontMatrix;this.widths=properties.widths;this.defaultWidth=properties.defaultWidth;this.toUnicode=properties.toUnicode;this.seacMap=properties.seacMap}get renderer(){const renderer=FontRendererFactory.create(this,SEAC_ANALYSIS_ENABLED);return shadow(this,\"renderer\",renderer)}exportData(){const exportDataProps=this.fontExtraProperties?[...EXPORT_DATA_PROPERTIES,...EXPORT_DATA_EXTRA_PROPERTIES]:EXPORT_DATA_PROPERTIES;const data=Object.create(null);for(const prop of exportDataProps){const value=this[prop];if(value!==undefined){data[prop]=value}}return data}fallbackToSystemFont(properties){this.missingFile=true;const{name:name,type:type}=this;let fontName=normalizeFontName(name);const stdFontMap=getStdFontMap(),nonStdFontMap=getNonStdFontMap();const isStandardFont=!!stdFontMap[fontName];const isMappedToStandardFont=!!(nonStdFontMap[fontName]&&stdFontMap[nonStdFontMap[fontName]]);fontName=stdFontMap[fontName]||nonStdFontMap[fontName]||fontName;const fontBasicMetricsMap=getFontBasicMetrics();const metrics=fontBasicMetricsMap[fontName];if(metrics){if(isNaN(this.ascent)){this.ascent=metrics.ascent/PDF_GLYPH_SPACE_UNITS}if(isNaN(this.descent)){this.descent=metrics.descent/PDF_GLYPH_SPACE_UNITS}if(isNaN(this.capHeight)){this.capHeight=metrics.capHeight/PDF_GLYPH_SPACE_UNITS}}this.bold=/bold/gi.test(fontName);this.italic=/oblique|italic/gi.test(fontName);this.black=/Black/g.test(name);const isNarrow=/Narrow/g.test(name);this.remeasure=(!isStandardFont||isNarrow)&&Object.keys(this.widths).length>0;if((isStandardFont||isMappedToStandardFont)&&type===\"CIDFontType2\"&&this.cidEncoding.startsWith(\"Identity-\")){const cidToGidMap=properties.cidToGidMap;const map=[];applyStandardFontGlyphMap(map,getGlyphMapForStandardFonts());if(/Arial-?Black/i.test(name)){applyStandardFontGlyphMap(map,getSupplementalGlyphMapForArialBlack())}else if(/Calibri/i.test(name)){applyStandardFontGlyphMap(map,getSupplementalGlyphMapForCalibri())}if(cidToGidMap){for(const charCode in map){const cid=map[charCode];if(cidToGidMap[cid]!==undefined){map[+charCode]=cidToGidMap[cid]}}if(cidToGidMap.length!==this.toUnicode.length&&properties.hasIncludedToUnicodeMap&&this.toUnicode instanceof IdentityToUnicodeMap){this.toUnicode.forEach((function(charCode,unicodeCharCode){const cid=map[charCode];if(cidToGidMap[cid]===undefined){map[+charCode]=unicodeCharCode}}))}}if(!(this.toUnicode instanceof IdentityToUnicodeMap)){this.toUnicode.forEach((function(charCode,unicodeCharCode){map[+charCode]=unicodeCharCode}))}this.toFontChar=map;this.toUnicode=new ToUnicodeMap(map)}else if(/Symbol/i.test(fontName)){this.toFontChar=buildToFontChar(SymbolSetEncoding,getGlyphsUnicode(),this.differences)}else if(/Dingbats/i.test(fontName)){this.toFontChar=buildToFontChar(ZapfDingbatsEncoding,getDingbatsGlyphsUnicode(),this.differences)}else if(isStandardFont||isMappedToStandardFont){const map=buildToFontChar(this.defaultEncoding,getGlyphsUnicode(),this.differences);if(type===\"CIDFontType2\"&&!this.cidEncoding.startsWith(\"Identity-\")&&!(this.toUnicode instanceof IdentityToUnicodeMap)){this.toUnicode.forEach((function(charCode,unicodeCharCode){map[+charCode]=unicodeCharCode}))}this.toFontChar=map}else{const glyphsUnicodeMap=getGlyphsUnicode();const map=[];this.toUnicode.forEach(((charCode,unicodeCharCode)=>{if(!this.composite){const glyphName=this.differences[charCode]||this.defaultEncoding[charCode];const unicode=getUnicodeForGlyph(glyphName,glyphsUnicodeMap);if(unicode!==-1){unicodeCharCode=unicode}}map[+charCode]=unicodeCharCode}));if(this.composite&&this.toUnicode instanceof IdentityToUnicodeMap){if(/Tahoma|Verdana/i.test(name)){applyStandardFontGlyphMap(map,getGlyphMapForStandardFonts())}}this.toFontChar=map}amendFallbackToUnicode(properties);this.loadedName=fontName.split(\"-\",1)[0]}checkAndRepair(name,font,properties){const VALID_TABLES=[\"OS/2\",\"cmap\",\"head\",\"hhea\",\"hmtx\",\"maxp\",\"name\",\"post\",\"loca\",\"glyf\",\"fpgm\",\"prep\",\"cvt \",\"CFF \"];function readTables(file,numTables){const tables=Object.create(null);tables[\"OS/2\"]=null;tables.cmap=null;tables.head=null;tables.hhea=null;tables.hmtx=null;tables.maxp=null;tables.name=null;tables.post=null;for(let i=0;i<numTables;i++){const table=readTableEntry(file);if(!VALID_TABLES.includes(table.tag)){continue}if(table.length===0){continue}tables[table.tag]=table}return tables}function readTableEntry(file){const tag=file.getString(4);const checksum=file.getInt32()>>>0;const offset=file.getInt32()>>>0;const length=file.getInt32()>>>0;const previousPosition=file.pos;file.pos=file.start||0;file.skip(offset);const data=file.getBytes(length);file.pos=previousPosition;if(tag===\"head\"){data[8]=data[9]=data[10]=data[11]=0;data[17]|=32}return{tag:tag,checksum:checksum,length:length,offset:offset,data:data}}function readOpenTypeHeader(ttf){return{version:ttf.getString(4),numTables:ttf.getUint16(),searchRange:ttf.getUint16(),entrySelector:ttf.getUint16(),rangeShift:ttf.getUint16()}}function readTrueTypeCollectionHeader(ttc){const ttcTag=ttc.getString(4);assert(ttcTag===\"ttcf\",\"Must be a TrueType Collection font.\");const majorVersion=ttc.getUint16();const minorVersion=ttc.getUint16();const numFonts=ttc.getInt32()>>>0;const offsetTable=[];for(let i=0;i<numFonts;i++){offsetTable.push(ttc.getInt32()>>>0)}const header={ttcTag:ttcTag,majorVersion:majorVersion,minorVersion:minorVersion,numFonts:numFonts,offsetTable:offsetTable};switch(majorVersion){case 1:return header;case 2:header.dsigTag=ttc.getInt32()>>>0;header.dsigLength=ttc.getInt32()>>>0;header.dsigOffset=ttc.getInt32()>>>0;return header}throw new FormatError(`Invalid TrueType Collection majorVersion: ${majorVersion}.`)}function readTrueTypeCollectionData(ttc,fontName){const{numFonts:numFonts,offsetTable:offsetTable}=readTrueTypeCollectionHeader(ttc);const fontNameParts=fontName.split(\"+\");let fallbackData;for(let i=0;i<numFonts;i++){ttc.pos=(ttc.start||0)+offsetTable[i];const potentialHeader=readOpenTypeHeader(ttc);const potentialTables=readTables(ttc,potentialHeader.numTables);if(!potentialTables.name){throw new FormatError('TrueType Collection font must contain a \"name\" table.')}const[nameTable]=readNameTable(potentialTables.name);for(let j=0,jj=nameTable.length;j<jj;j++){for(let k=0,kk=nameTable[j].length;k<kk;k++){const nameEntry=nameTable[j][k]?.replaceAll(/\\s/g,\"\");if(!nameEntry){continue}if(nameEntry===fontName){return{header:potentialHeader,tables:potentialTables}}if(fontNameParts.length<2){continue}for(const part of fontNameParts){if(nameEntry===part){fallbackData={name:part,header:potentialHeader,tables:potentialTables}}}}}}if(fallbackData){warn(`TrueType Collection does not contain \"${fontName}\" font, `+`falling back to \"${fallbackData.name}\" font instead.`);return{header:fallbackData.header,tables:fallbackData.tables}}throw new FormatError(`TrueType Collection does not contain \"${fontName}\" font.`)}function readCmapTable(cmap,file,isSymbolicFont,hasEncoding){if(!cmap){warn(\"No cmap table available.\");return{platformId:-1,encodingId:-1,mappings:[],hasShortCmap:false}}let segment;let start=(file.start||0)+cmap.offset;file.pos=start;file.skip(2);const numTables=file.getUint16();let potentialTable;let canBreak=false;for(let i=0;i<numTables;i++){const platformId=file.getUint16();const encodingId=file.getUint16();const offset=file.getInt32()>>>0;let useTable=false;if(potentialTable?.platformId===platformId&&potentialTable?.encodingId===encodingId){continue}if(platformId===0&&(encodingId===0||encodingId===1||encodingId===3)){useTable=true}else if(platformId===1&&encodingId===0){useTable=true}else if(platformId===3&&encodingId===1&&(hasEncoding||!potentialTable)){useTable=true;if(!isSymbolicFont){canBreak=true}}else if(isSymbolicFont&&platformId===3&&encodingId===0){useTable=true;let correctlySorted=true;if(i<numTables-1){const nextBytes=file.peekBytes(2),nextPlatformId=int16(nextBytes[0],nextBytes[1]);if(nextPlatformId<platformId){correctlySorted=false}}if(correctlySorted){canBreak=true}}if(useTable){potentialTable={platformId:platformId,encodingId:encodingId,offset:offset}}if(canBreak){break}}if(potentialTable){file.pos=start+potentialTable.offset}if(!potentialTable||file.peekByte()===-1){warn(\"Could not find a preferred cmap table.\");return{platformId:-1,encodingId:-1,mappings:[],hasShortCmap:false}}const format=file.getUint16();let hasShortCmap=false;const mappings=[];let j,glyphId;if(format===0){file.skip(2+2);for(j=0;j<256;j++){const index=file.getByte();if(!index){continue}mappings.push({charCode:j,glyphId:index})}hasShortCmap=true}else if(format===2){file.skip(2+2);const subHeaderKeys=[];let maxSubHeaderKey=0;for(let i=0;i<256;i++){const subHeaderKey=file.getUint16()>>3;subHeaderKeys.push(subHeaderKey);maxSubHeaderKey=Math.max(subHeaderKey,maxSubHeaderKey)}const subHeaders=[];for(let i=0;i<=maxSubHeaderKey;i++){subHeaders.push({firstCode:file.getUint16(),entryCount:file.getUint16(),idDelta:signedInt16(file.getByte(),file.getByte()),idRangePos:file.pos+file.getUint16()})}for(let i=0;i<256;i++){if(subHeaderKeys[i]===0){file.pos=subHeaders[0].idRangePos+2*i;glyphId=file.getUint16();mappings.push({charCode:i,glyphId:glyphId})}else{const s=subHeaders[subHeaderKeys[i]];for(j=0;j<s.entryCount;j++){const charCode=(i<<8)+j+s.firstCode;file.pos=s.idRangePos+2*j;glyphId=file.getUint16();if(glyphId!==0){glyphId=(glyphId+s.idDelta)%65536}mappings.push({charCode:charCode,glyphId:glyphId})}}}}else if(format===4){file.skip(2+2);const segCount=file.getUint16()>>1;file.skip(6);const segments=[];let segIndex;for(segIndex=0;segIndex<segCount;segIndex++){segments.push({end:file.getUint16()})}file.skip(2);for(segIndex=0;segIndex<segCount;segIndex++){segments[segIndex].start=file.getUint16()}for(segIndex=0;segIndex<segCount;segIndex++){segments[segIndex].delta=file.getUint16()}let offsetsCount=0,offsetIndex;for(segIndex=0;segIndex<segCount;segIndex++){segment=segments[segIndex];const rangeOffset=file.getUint16();if(!rangeOffset){segment.offsetIndex=-1;continue}offsetIndex=(rangeOffset>>1)-(segCount-segIndex);segment.offsetIndex=offsetIndex;offsetsCount=Math.max(offsetsCount,offsetIndex+segment.end-segment.start+1)}const offsets=[];for(j=0;j<offsetsCount;j++){offsets.push(file.getUint16())}for(segIndex=0;segIndex<segCount;segIndex++){segment=segments[segIndex];start=segment.start;const end=segment.end;const delta=segment.delta;offsetIndex=segment.offsetIndex;for(j=start;j<=end;j++){if(j===65535){continue}glyphId=offsetIndex<0?j:offsets[offsetIndex+j-start];glyphId=glyphId+delta&65535;mappings.push({charCode:j,glyphId:glyphId})}}}else if(format===6){file.skip(2+2);const firstCode=file.getUint16();const entryCount=file.getUint16();for(j=0;j<entryCount;j++){glyphId=file.getUint16();const charCode=firstCode+j;mappings.push({charCode:charCode,glyphId:glyphId})}}else if(format===12){file.skip(2+4+4);const nGroups=file.getInt32()>>>0;for(j=0;j<nGroups;j++){const startCharCode=file.getInt32()>>>0;const endCharCode=file.getInt32()>>>0;let glyphCode=file.getInt32()>>>0;for(let charCode=startCharCode;charCode<=endCharCode;charCode++){mappings.push({charCode:charCode,glyphId:glyphCode++})}}}else{warn(\"cmap table has unsupported format: \"+format);return{platformId:-1,encodingId:-1,mappings:[],hasShortCmap:false}}mappings.sort(((a,b)=>a.charCode-b.charCode));const finalMappings=[],seenCharCodes=new Set;for(const map of mappings){const{charCode:charCode}=map;if(seenCharCodes.has(charCode)){continue}seenCharCodes.add(charCode);finalMappings.push(map)}return{platformId:potentialTable.platformId,encodingId:potentialTable.encodingId,mappings:finalMappings,hasShortCmap:hasShortCmap}}function sanitizeMetrics(file,header,metrics,headTable,numGlyphs,dupFirstEntry){if(!header){if(metrics){metrics.data=null}return}file.pos=(file.start||0)+header.offset;file.pos+=4;file.pos+=2;file.pos+=2;file.pos+=2;file.pos+=2;file.pos+=2;file.pos+=2;file.pos+=2;file.pos+=2;file.pos+=2;const caretOffset=file.getUint16();file.pos+=8;file.pos+=2;let numOfMetrics=file.getUint16();if(caretOffset!==0){const macStyle=int16(headTable.data[44],headTable.data[45]);if(!(macStyle&2)){header.data[22]=0;header.data[23]=0}}if(numOfMetrics>numGlyphs){info(`The numOfMetrics (${numOfMetrics}) should not be `+`greater than the numGlyphs (${numGlyphs}).`);numOfMetrics=numGlyphs;header.data[34]=(numOfMetrics&65280)>>8;header.data[35]=numOfMetrics&255}const numOfSidebearings=numGlyphs-numOfMetrics;const numMissing=numOfSidebearings-(metrics.length-numOfMetrics*4>>1);if(numMissing>0){const entries=new Uint8Array(metrics.length+numMissing*2);entries.set(metrics.data);if(dupFirstEntry){entries[metrics.length]=metrics.data[2];entries[metrics.length+1]=metrics.data[3]}metrics.data=entries}}function sanitizeGlyph(source,sourceStart,sourceEnd,dest,destStart,hintsValid){const glyphProfile={length:0,sizeOfInstructions:0};if(sourceStart<0||sourceStart>=source.length||sourceEnd>source.length||sourceEnd-sourceStart<=12){return glyphProfile}const glyf=source.subarray(sourceStart,sourceEnd);const xMin=signedInt16(glyf[2],glyf[3]);const yMin=signedInt16(glyf[4],glyf[5]);const xMax=signedInt16(glyf[6],glyf[7]);const yMax=signedInt16(glyf[8],glyf[9]);if(xMin>xMax){writeSignedInt16(glyf,2,xMax);writeSignedInt16(glyf,6,xMin)}if(yMin>yMax){writeSignedInt16(glyf,4,yMax);writeSignedInt16(glyf,8,yMin)}const contoursCount=signedInt16(glyf[0],glyf[1]);if(contoursCount<0){if(contoursCount<-1){return glyphProfile}dest.set(glyf,destStart);glyphProfile.length=glyf.length;return glyphProfile}let i,j=10,flagsCount=0;for(i=0;i<contoursCount;i++){const endPoint=glyf[j]<<8|glyf[j+1];flagsCount=endPoint+1;j+=2}const instructionsStart=j;const instructionsLength=glyf[j]<<8|glyf[j+1];glyphProfile.sizeOfInstructions=instructionsLength;j+=2+instructionsLength;const instructionsEnd=j;let coordinatesLength=0;for(i=0;i<flagsCount;i++){const flag=glyf[j++];if(flag&192){glyf[j-1]=flag&63}let xLength=2;if(flag&2){xLength=1}else if(flag&16){xLength=0}let yLength=2;if(flag&4){yLength=1}else if(flag&32){yLength=0}const xyLength=xLength+yLength;coordinatesLength+=xyLength;if(flag&8){const repeat=glyf[j++];if(repeat===0){glyf[j-1]^=8}i+=repeat;coordinatesLength+=repeat*xyLength}}if(coordinatesLength===0){return glyphProfile}let glyphDataLength=j+coordinatesLength;if(glyphDataLength>glyf.length){return glyphProfile}if(!hintsValid&&instructionsLength>0){dest.set(glyf.subarray(0,instructionsStart),destStart);dest.set([0,0],destStart+instructionsStart);dest.set(glyf.subarray(instructionsEnd,glyphDataLength),destStart+instructionsStart+2);glyphDataLength-=instructionsLength;if(glyf.length-glyphDataLength>3){glyphDataLength=glyphDataLength+3&~3}glyphProfile.length=glyphDataLength;return glyphProfile}if(glyf.length-glyphDataLength>3){glyphDataLength=glyphDataLength+3&~3;dest.set(glyf.subarray(0,glyphDataLength),destStart);glyphProfile.length=glyphDataLength;return glyphProfile}dest.set(glyf,destStart);glyphProfile.length=glyf.length;return glyphProfile}function sanitizeHead(head,numGlyphs,locaLength){const data=head.data;const version=int32(data[0],data[1],data[2],data[3]);if(version>>16!==1){info(\"Attempting to fix invalid version in head table: \"+version);data[0]=0;data[1]=1;data[2]=0;data[3]=0}const indexToLocFormat=int16(data[50],data[51]);if(indexToLocFormat<0||indexToLocFormat>1){info(\"Attempting to fix invalid indexToLocFormat in head table: \"+indexToLocFormat);const numGlyphsPlusOne=numGlyphs+1;if(locaLength===numGlyphsPlusOne<<1){data[50]=0;data[51]=0}else if(locaLength===numGlyphsPlusOne<<2){data[50]=0;data[51]=1}else{throw new FormatError(\"Could not fix indexToLocFormat: \"+indexToLocFormat)}}}function sanitizeGlyphLocations(loca,glyf,numGlyphs,isGlyphLocationsLong,hintsValid,dupFirstEntry,maxSizeOfInstructions){let itemSize,itemDecode,itemEncode;if(isGlyphLocationsLong){itemSize=4;itemDecode=function fontItemDecodeLong(data,offset){return data[offset]<<24|data[offset+1]<<16|data[offset+2]<<8|data[offset+3]};itemEncode=function fontItemEncodeLong(data,offset,value){data[offset]=value>>>24&255;data[offset+1]=value>>16&255;data[offset+2]=value>>8&255;data[offset+3]=value&255}}else{itemSize=2;itemDecode=function fontItemDecode(data,offset){return data[offset]<<9|data[offset+1]<<1};itemEncode=function fontItemEncode(data,offset,value){data[offset]=value>>9&255;data[offset+1]=value>>1&255}}const numGlyphsOut=dupFirstEntry?numGlyphs+1:numGlyphs;const locaDataSize=itemSize*(1+numGlyphsOut);const locaData=new Uint8Array(locaDataSize);locaData.set(loca.data.subarray(0,locaDataSize));loca.data=locaData;const oldGlyfData=glyf.data;const oldGlyfDataLength=oldGlyfData.length;const newGlyfData=new Uint8Array(oldGlyfDataLength);let i,j;const locaEntries=[];for(i=0,j=0;i<numGlyphs+1;i++,j+=itemSize){let offset=itemDecode(locaData,j);if(offset>oldGlyfDataLength){offset=oldGlyfDataLength}locaEntries.push({index:i,offset:offset,endOffset:0})}locaEntries.sort(((a,b)=>a.offset-b.offset));for(i=0;i<numGlyphs;i++){locaEntries[i].endOffset=locaEntries[i+1].offset}locaEntries.sort(((a,b)=>a.index-b.index));for(i=0;i<numGlyphs;i++){const{offset:offset,endOffset:endOffset}=locaEntries[i];if(offset!==0||endOffset!==0){break}const nextOffset=locaEntries[i+1].offset;if(nextOffset===0){continue}locaEntries[i].endOffset=nextOffset;break}const last=locaEntries.at(-2);if(last.offset!==0&&last.endOffset===0){last.endOffset=oldGlyfDataLength}const missingGlyphs=Object.create(null);let writeOffset=0;itemEncode(locaData,0,writeOffset);for(i=0,j=itemSize;i<numGlyphs;i++,j+=itemSize){const glyphProfile=sanitizeGlyph(oldGlyfData,locaEntries[i].offset,locaEntries[i].endOffset,newGlyfData,writeOffset,hintsValid);const newLength=glyphProfile.length;if(newLength===0){missingGlyphs[i]=true}if(glyphProfile.sizeOfInstructions>maxSizeOfInstructions){maxSizeOfInstructions=glyphProfile.sizeOfInstructions}writeOffset+=newLength;itemEncode(locaData,j,writeOffset)}if(writeOffset===0){const simpleGlyph=new Uint8Array([0,1,0,0,0,0,0,0,0,0,0,0,0,0,49,0]);for(i=0,j=itemSize;i<numGlyphsOut;i++,j+=itemSize){itemEncode(locaData,j,simpleGlyph.length)}glyf.data=simpleGlyph}else if(dupFirstEntry){const firstEntryLength=itemDecode(locaData,itemSize);if(newGlyfData.length>firstEntryLength+writeOffset){glyf.data=newGlyfData.subarray(0,firstEntryLength+writeOffset)}else{glyf.data=new Uint8Array(firstEntryLength+writeOffset);glyf.data.set(newGlyfData.subarray(0,writeOffset))}glyf.data.set(newGlyfData.subarray(0,firstEntryLength),writeOffset);itemEncode(loca.data,locaData.length-itemSize,writeOffset+firstEntryLength)}else{glyf.data=newGlyfData.subarray(0,writeOffset)}return{missingGlyphs:missingGlyphs,maxSizeOfInstructions:maxSizeOfInstructions}}function readPostScriptTable(post,propertiesObj,maxpNumGlyphs){const start=(font.start||0)+post.offset;font.pos=start;const length=post.length,end=start+length;const version=font.getInt32();font.skip(28);let glyphNames;let valid=true;let i;switch(version){case 65536:glyphNames=MacStandardGlyphOrdering;break;case 131072:const numGlyphs=font.getUint16();if(numGlyphs!==maxpNumGlyphs){valid=false;break}const glyphNameIndexes=[];for(i=0;i<numGlyphs;++i){const index=font.getUint16();if(index>=32768){valid=false;break}glyphNameIndexes.push(index)}if(!valid){break}const customNames=[],strBuf=[];while(font.pos<end){const stringLength=font.getByte();strBuf.length=stringLength;for(i=0;i<stringLength;++i){strBuf[i]=String.fromCharCode(font.getByte())}customNames.push(strBuf.join(\"\"))}glyphNames=[];for(i=0;i<numGlyphs;++i){const j=glyphNameIndexes[i];if(j<258){glyphNames.push(MacStandardGlyphOrdering[j]);continue}glyphNames.push(customNames[j-258])}break;case 196608:break;default:warn(\"Unknown/unsupported post table version \"+version);valid=false;if(propertiesObj.defaultEncoding){glyphNames=propertiesObj.defaultEncoding}break}propertiesObj.glyphNames=glyphNames;return valid}function readNameTable(nameTable){const start=(font.start||0)+nameTable.offset;font.pos=start;const names=[[],[]],records=[];const length=nameTable.length,end=start+length;const format=font.getUint16();const FORMAT_0_HEADER_LENGTH=6;if(format!==0||length<FORMAT_0_HEADER_LENGTH){return[names,records]}const numRecords=font.getUint16();const stringsStart=font.getUint16();const NAME_RECORD_LENGTH=12;let i,ii;for(i=0;i<numRecords&&font.pos+NAME_RECORD_LENGTH<=end;i++){const r={platform:font.getUint16(),encoding:font.getUint16(),language:font.getUint16(),name:font.getUint16(),length:font.getUint16(),offset:font.getUint16()};if(isMacNameRecord(r)||isWinNameRecord(r)){records.push(r)}}for(i=0,ii=records.length;i<ii;i++){const record=records[i];if(record.length<=0){continue}const pos=start+stringsStart+record.offset;if(pos+record.length>end){continue}font.pos=pos;const nameIndex=record.name;if(record.encoding){let str=\"\";for(let j=0,jj=record.length;j<jj;j+=2){str+=String.fromCharCode(font.getUint16())}names[1][nameIndex]=str}else{names[0][nameIndex]=font.getString(record.length)}}return[names,records]}const TTOpsStackDeltas=[0,0,0,0,0,0,0,0,-2,-2,-2,-2,0,0,-2,-5,-1,-1,-1,-1,-1,-1,-1,-1,0,0,-1,0,-1,-1,-1,-1,1,-1,-999,0,1,0,-1,-2,0,-1,-2,-1,-1,0,-1,-1,0,0,-999,-999,-1,-1,-1,-1,-2,-999,-2,-2,-999,0,-2,-2,0,0,-2,0,-2,0,0,0,-2,-1,-1,1,1,0,0,-1,-1,-1,-1,-1,-1,-1,0,0,-1,0,-1,-1,0,-999,-1,-1,-1,-1,-1,-1,0,0,0,0,0,0,0,0,0,0,0,0,-2,-999,-999,-999,-999,-999,-1,-1,-2,-2,0,0,0,0,-1,-1,-999,-2,-2,0,0,-1,-2,-2,0,0,0,-1,-1,-1,-2];function sanitizeTTProgram(table,ttContext){let data=table.data;let i=0,j,n,b,funcId,pc,lastEndf=0,lastDeff=0;const stack=[];const callstack=[];const functionsCalled=[];let tooComplexToFollowFunctions=ttContext.tooComplexToFollowFunctions;let inFDEF=false,ifLevel=0,inELSE=0;for(let ii=data.length;i<ii;){const op=data[i++];if(op===64){n=data[i++];if(inFDEF||inELSE){i+=n}else{for(j=0;j<n;j++){stack.push(data[i++])}}}else if(op===65){n=data[i++];if(inFDEF||inELSE){i+=n*2}else{for(j=0;j<n;j++){b=data[i++];stack.push(b<<8|data[i++])}}}else if((op&248)===176){n=op-176+1;if(inFDEF||inELSE){i+=n}else{for(j=0;j<n;j++){stack.push(data[i++])}}}else if((op&248)===184){n=op-184+1;if(inFDEF||inELSE){i+=n*2}else{for(j=0;j<n;j++){b=data[i++];stack.push(signedInt16(b,data[i++]))}}}else if(op===43&&!tooComplexToFollowFunctions){if(!inFDEF&&!inELSE){funcId=stack.at(-1);if(isNaN(funcId)){info(\"TT: CALL empty stack (or invalid entry).\")}else{ttContext.functionsUsed[funcId]=true;if(funcId in ttContext.functionsStackDeltas){const newStackLength=stack.length+ttContext.functionsStackDeltas[funcId];if(newStackLength<0){warn(\"TT: CALL invalid functions stack delta.\");ttContext.hintsValid=false;return}stack.length=newStackLength}else if(funcId in ttContext.functionsDefined&&!functionsCalled.includes(funcId)){callstack.push({data:data,i:i,stackTop:stack.length-1});functionsCalled.push(funcId);pc=ttContext.functionsDefined[funcId];if(!pc){warn(\"TT: CALL non-existent function\");ttContext.hintsValid=false;return}data=pc.data;i=pc.i}}}}else if(op===44&&!tooComplexToFollowFunctions){if(inFDEF||inELSE){warn(\"TT: nested FDEFs not allowed\");tooComplexToFollowFunctions=true}inFDEF=true;lastDeff=i;funcId=stack.pop();ttContext.functionsDefined[funcId]={data:data,i:i}}else if(op===45){if(inFDEF){inFDEF=false;lastEndf=i}else{pc=callstack.pop();if(!pc){warn(\"TT: ENDF bad stack\");ttContext.hintsValid=false;return}funcId=functionsCalled.pop();data=pc.data;i=pc.i;ttContext.functionsStackDeltas[funcId]=stack.length-pc.stackTop}}else if(op===137){if(inFDEF||inELSE){warn(\"TT: nested IDEFs not allowed\");tooComplexToFollowFunctions=true}inFDEF=true;lastDeff=i}else if(op===88){++ifLevel}else if(op===27){inELSE=ifLevel}else if(op===89){if(inELSE===ifLevel){inELSE=0}--ifLevel}else if(op===28){if(!inFDEF&&!inELSE){const offset=stack.at(-1);if(offset>0){i+=offset-1}}}if(!inFDEF&&!inELSE){let stackDelta=0;if(op<=142){stackDelta=TTOpsStackDeltas[op]}else if(op>=192&&op<=223){stackDelta=-1}else if(op>=224){stackDelta=-2}if(op>=113&&op<=117){n=stack.pop();if(!isNaN(n)){stackDelta=-n*2}}while(stackDelta<0&&stack.length>0){stack.pop();stackDelta++}while(stackDelta>0){stack.push(NaN);stackDelta--}}}ttContext.tooComplexToFollowFunctions=tooComplexToFollowFunctions;const content=[data];if(i>data.length){content.push(new Uint8Array(i-data.length))}if(lastDeff>lastEndf){warn(\"TT: complementing a missing function tail\");content.push(new Uint8Array([34,45]))}foldTTTable(table,content)}function checkInvalidFunctions(ttContext,maxFunctionDefs){if(ttContext.tooComplexToFollowFunctions){return}if(ttContext.functionsDefined.length>maxFunctionDefs){warn(\"TT: more functions defined than expected\");ttContext.hintsValid=false;return}for(let j=0,jj=ttContext.functionsUsed.length;j<jj;j++){if(j>maxFunctionDefs){warn(\"TT: invalid function id: \"+j);ttContext.hintsValid=false;return}if(ttContext.functionsUsed[j]&&!ttContext.functionsDefined[j]){warn(\"TT: undefined function: \"+j);ttContext.hintsValid=false;return}}}function foldTTTable(table,content){if(content.length>1){let newLength=0;let j,jj;for(j=0,jj=content.length;j<jj;j++){newLength+=content[j].length}newLength=newLength+3&~3;const result=new Uint8Array(newLength);let pos=0;for(j=0,jj=content.length;j<jj;j++){result.set(content[j],pos);pos+=content[j].length}table.data=result;table.length=newLength}}function sanitizeTTPrograms(fpgm,prep,cvt,maxFunctionDefs){const ttContext={functionsDefined:[],functionsUsed:[],functionsStackDeltas:[],tooComplexToFollowFunctions:false,hintsValid:true};if(fpgm){sanitizeTTProgram(fpgm,ttContext)}if(prep){sanitizeTTProgram(prep,ttContext)}if(fpgm){checkInvalidFunctions(ttContext,maxFunctionDefs)}if(cvt&&cvt.length&1){const cvtData=new Uint8Array(cvt.length+1);cvtData.set(cvt.data);cvt.data=cvtData}return ttContext.hintsValid}font=new Stream(new Uint8Array(font.getBytes()));let header,tables;if(isTrueTypeCollectionFile(font)){const ttcData=readTrueTypeCollectionData(font,this.name);header=ttcData.header;tables=ttcData.tables}else{header=readOpenTypeHeader(font);tables=readTables(font,header.numTables)}let cff,cffFile;const isTrueType=!tables[\"CFF \"];if(!isTrueType){const isComposite=properties.composite&&(properties.cidToGidMap?.length>0||!(properties.cMap instanceof IdentityCMap));if(header.version===\"OTTO\"&&!isComposite||!tables.head||!tables.hhea||!tables.maxp||!tables.post){cffFile=new Stream(tables[\"CFF \"].data);cff=new CFFFont(cffFile,properties);return this.convert(name,cff,properties)}delete tables.glyf;delete tables.loca;delete tables.fpgm;delete tables.prep;delete tables[\"cvt \"];this.isOpenType=true}else{if(!tables.loca){throw new FormatError('Required \"loca\" table is not found')}if(!tables.glyf){warn('Required \"glyf\" table is not found -- trying to recover.');tables.glyf={tag:\"glyf\",data:new Uint8Array(0)}}this.isOpenType=false}if(!tables.maxp){throw new FormatError('Required \"maxp\" table is not found')}font.pos=(font.start||0)+tables.maxp.offset;let version=font.getInt32();const numGlyphs=font.getUint16();if(version!==65536&&version!==20480){if(tables.maxp.length===6){version=20480}else if(tables.maxp.length>=32){version=65536}else{throw new FormatError(`\"maxp\" table has a wrong version number`)}writeUint32(tables.maxp.data,0,version)}if(properties.scaleFactors?.length===numGlyphs&&isTrueType){const{scaleFactors:scaleFactors}=properties;const isGlyphLocationsLong=int16(tables.head.data[50],tables.head.data[51]);const glyphs=new GlyfTable({glyfTable:tables.glyf.data,isGlyphLocationsLong:isGlyphLocationsLong,locaTable:tables.loca.data,numGlyphs:numGlyphs});glyphs.scale(scaleFactors);const{glyf:glyf,loca:loca,isLocationLong:isLocationLong}=glyphs.write();tables.glyf.data=glyf;tables.loca.data=loca;if(isLocationLong!==!!isGlyphLocationsLong){tables.head.data[50]=0;tables.head.data[51]=isLocationLong?1:0}const metrics=tables.hmtx.data;for(let i=0;i<numGlyphs;i++){const j=4*i;const advanceWidth=Math.round(scaleFactors[i]*int16(metrics[j],metrics[j+1]));metrics[j]=advanceWidth>>8&255;metrics[j+1]=advanceWidth&255;const lsb=Math.round(scaleFactors[i]*signedInt16(metrics[j+2],metrics[j+3]));writeSignedInt16(metrics,j+2,lsb)}}let numGlyphsOut=numGlyphs+1;let dupFirstEntry=true;if(numGlyphsOut>65535){dupFirstEntry=false;numGlyphsOut=numGlyphs;warn(\"Not enough space in glyfs to duplicate first glyph.\")}let maxFunctionDefs=0;let maxSizeOfInstructions=0;if(version>=65536&&tables.maxp.length>=32){font.pos+=8;const maxZones=font.getUint16();if(maxZones>2){tables.maxp.data[14]=0;tables.maxp.data[15]=2}font.pos+=4;maxFunctionDefs=font.getUint16();font.pos+=4;maxSizeOfInstructions=font.getUint16()}tables.maxp.data[4]=numGlyphsOut>>8;tables.maxp.data[5]=numGlyphsOut&255;const hintsValid=sanitizeTTPrograms(tables.fpgm,tables.prep,tables[\"cvt \"],maxFunctionDefs);if(!hintsValid){delete tables.fpgm;delete tables.prep;delete tables[\"cvt \"]}sanitizeMetrics(font,tables.hhea,tables.hmtx,tables.head,numGlyphsOut,dupFirstEntry);if(!tables.head){throw new FormatError('Required \"head\" table is not found')}sanitizeHead(tables.head,numGlyphs,isTrueType?tables.loca.length:0);let missingGlyphs=Object.create(null);if(isTrueType){const isGlyphLocationsLong=int16(tables.head.data[50],tables.head.data[51]);const glyphsInfo=sanitizeGlyphLocations(tables.loca,tables.glyf,numGlyphs,isGlyphLocationsLong,hintsValid,dupFirstEntry,maxSizeOfInstructions);missingGlyphs=glyphsInfo.missingGlyphs;if(version>=65536&&tables.maxp.length>=32){tables.maxp.data[26]=glyphsInfo.maxSizeOfInstructions>>8;tables.maxp.data[27]=glyphsInfo.maxSizeOfInstructions&255}}if(!tables.hhea){throw new FormatError('Required \"hhea\" table is not found')}if(tables.hhea.data[10]===0&&tables.hhea.data[11]===0){tables.hhea.data[10]=255;tables.hhea.data[11]=255}const metricsOverride={unitsPerEm:int16(tables.head.data[18],tables.head.data[19]),yMax:signedInt16(tables.head.data[42],tables.head.data[43]),yMin:signedInt16(tables.head.data[38],tables.head.data[39]),ascent:signedInt16(tables.hhea.data[4],tables.hhea.data[5]),descent:signedInt16(tables.hhea.data[6],tables.hhea.data[7]),lineGap:signedInt16(tables.hhea.data[8],tables.hhea.data[9])};this.ascent=metricsOverride.ascent/metricsOverride.unitsPerEm;this.descent=metricsOverride.descent/metricsOverride.unitsPerEm;this.lineGap=metricsOverride.lineGap/metricsOverride.unitsPerEm;if(this.cssFontInfo?.lineHeight){this.lineHeight=this.cssFontInfo.metrics.lineHeight;this.lineGap=this.cssFontInfo.metrics.lineGap}else{this.lineHeight=this.ascent-this.descent+this.lineGap}if(tables.post){readPostScriptTable(tables.post,properties,numGlyphs)}tables.post={tag:\"post\",data:createPostTable(properties)};const charCodeToGlyphId=Object.create(null);function hasGlyph(glyphId){return!missingGlyphs[glyphId]}if(properties.composite){const cidToGidMap=properties.cidToGidMap||[];const isCidToGidMapEmpty=cidToGidMap.length===0;properties.cMap.forEach((function(charCode,cid){if(typeof cid===\"string\"){cid=convertCidString(charCode,cid,true)}if(cid>65535){throw new FormatError(\"Max size of CID is 65,535\")}let glyphId=-1;if(isCidToGidMapEmpty){glyphId=cid}else if(cidToGidMap[cid]!==undefined){glyphId=cidToGidMap[cid]}if(glyphId>=0&&glyphId<numGlyphs&&hasGlyph(glyphId)){charCodeToGlyphId[charCode]=glyphId}}))}else{const cmapTable=readCmapTable(tables.cmap,font,this.isSymbolicFont,properties.hasEncoding);const cmapPlatformId=cmapTable.platformId;const cmapEncodingId=cmapTable.encodingId;const cmapMappings=cmapTable.mappings;let baseEncoding=[],forcePostTable=false;if(properties.hasEncoding&&(properties.baseEncodingName===\"MacRomanEncoding\"||properties.baseEncodingName===\"WinAnsiEncoding\")){baseEncoding=getEncoding(properties.baseEncodingName)}if(properties.hasEncoding&&!this.isSymbolicFont&&(cmapPlatformId===3&&cmapEncodingId===1||cmapPlatformId===1&&cmapEncodingId===0)){const glyphsUnicodeMap=getGlyphsUnicode();for(let charCode=0;charCode<256;charCode++){let glyphName;if(this.differences[charCode]!==undefined){glyphName=this.differences[charCode]}else if(baseEncoding.length&&baseEncoding[charCode]!==\"\"){glyphName=baseEncoding[charCode]}else{glyphName=StandardEncoding[charCode]}if(!glyphName){continue}const standardGlyphName=recoverGlyphName(glyphName,glyphsUnicodeMap);let unicodeOrCharCode;if(cmapPlatformId===3&&cmapEncodingId===1){unicodeOrCharCode=glyphsUnicodeMap[standardGlyphName]}else if(cmapPlatformId===1&&cmapEncodingId===0){unicodeOrCharCode=MacRomanEncoding.indexOf(standardGlyphName)}if(unicodeOrCharCode===undefined){if(!properties.glyphNames&&properties.hasIncludedToUnicodeMap&&!(this.toUnicode instanceof IdentityToUnicodeMap)){const unicode=this.toUnicode.get(charCode);if(unicode){unicodeOrCharCode=unicode.codePointAt(0)}}if(unicodeOrCharCode===undefined){continue}}for(const mapping of cmapMappings){if(mapping.charCode!==unicodeOrCharCode){continue}charCodeToGlyphId[charCode]=mapping.glyphId;break}}}else if(cmapPlatformId===0){for(const mapping of cmapMappings){charCodeToGlyphId[mapping.charCode]=mapping.glyphId}forcePostTable=true}else if(cmapPlatformId===3&&cmapEncodingId===0){for(const mapping of cmapMappings){let charCode=mapping.charCode;if(charCode>=61440&&charCode<=61695){charCode&=255}charCodeToGlyphId[charCode]=mapping.glyphId}}else{for(const mapping of cmapMappings){charCodeToGlyphId[mapping.charCode]=mapping.glyphId}}if(properties.glyphNames&&(baseEncoding.length||this.differences.length)){for(let i=0;i<256;++i){if(!forcePostTable&&charCodeToGlyphId[i]!==undefined){continue}const glyphName=this.differences[i]||baseEncoding[i];if(!glyphName){continue}const glyphId=properties.glyphNames.indexOf(glyphName);if(glyphId>0&&hasGlyph(glyphId)){charCodeToGlyphId[i]=glyphId}}}}if(charCodeToGlyphId.length===0){charCodeToGlyphId[0]=0}let glyphZeroId=numGlyphsOut-1;if(!dupFirstEntry){glyphZeroId=0}if(!properties.cssFontInfo){const newMapping=adjustMapping(charCodeToGlyphId,hasGlyph,glyphZeroId,this.toUnicode);this.toFontChar=newMapping.toFontChar;tables.cmap={tag:\"cmap\",data:createCmapTable(newMapping.charCodeToGlyphId,newMapping.toUnicodeExtraMap,numGlyphsOut)};if(!tables[\"OS/2\"]||!validateOS2Table(tables[\"OS/2\"],font)){tables[\"OS/2\"]={tag:\"OS/2\",data:createOS2Table(properties,newMapping.charCodeToGlyphId,metricsOverride)}}}if(!isTrueType){try{cffFile=new Stream(tables[\"CFF \"].data);const parser=new CFFParser(cffFile,properties,SEAC_ANALYSIS_ENABLED);cff=parser.parse();cff.duplicateFirstGlyph();const compiler=new CFFCompiler(cff);tables[\"CFF \"].data=compiler.compile()}catch{warn(\"Failed to compile font \"+properties.loadedName)}}if(!tables.name){tables.name={tag:\"name\",data:createNameTable(this.name)}}else{const[namePrototype,nameRecords]=readNameTable(tables.name);tables.name.data=createNameTable(name,namePrototype);this.psName=namePrototype[0][6]||null;if(!properties.composite){adjustTrueTypeToUnicode(properties,this.isSymbolicFont,nameRecords)}}const builder=new OpenTypeFileBuilder(header.version);for(const tableTag in tables){builder.addTable(tableTag,tables[tableTag].data)}return builder.toArray()}convert(fontName,font,properties){properties.fixedPitch=false;if(properties.builtInEncoding){adjustType1ToUnicode(properties,properties.builtInEncoding)}let glyphZeroId=1;if(font instanceof CFFFont){glyphZeroId=font.numGlyphs-1}const mapping=font.getGlyphMapping(properties);let newMapping=null;let newCharCodeToGlyphId=mapping;let toUnicodeExtraMap=null;if(!properties.cssFontInfo){newMapping=adjustMapping(mapping,font.hasGlyphId.bind(font),glyphZeroId,this.toUnicode);this.toFontChar=newMapping.toFontChar;newCharCodeToGlyphId=newMapping.charCodeToGlyphId;toUnicodeExtraMap=newMapping.toUnicodeExtraMap}const numGlyphs=font.numGlyphs;function getCharCodes(charCodeToGlyphId,glyphId){let charCodes=null;for(const charCode in charCodeToGlyphId){if(glyphId===charCodeToGlyphId[charCode]){(charCodes||=[]).push(charCode|0)}}return charCodes}function createCharCode(charCodeToGlyphId,glyphId){for(const charCode in charCodeToGlyphId){if(glyphId===charCodeToGlyphId[charCode]){return charCode|0}}newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode]=glyphId;return newMapping.nextAvailableFontCharCode++}const seacs=font.seacs;if(newMapping&&SEAC_ANALYSIS_ENABLED&&seacs?.length){const matrix=properties.fontMatrix||FONT_IDENTITY_MATRIX;const charset=font.getCharset();const seacMap=Object.create(null);for(let glyphId in seacs){glyphId|=0;const seac=seacs[glyphId];const baseGlyphName=StandardEncoding[seac[2]];const accentGlyphName=StandardEncoding[seac[3]];const baseGlyphId=charset.indexOf(baseGlyphName);const accentGlyphId=charset.indexOf(accentGlyphName);if(baseGlyphId<0||accentGlyphId<0){continue}const accentOffset={x:seac[0]*matrix[0]+seac[1]*matrix[2]+matrix[4],y:seac[0]*matrix[1]+seac[1]*matrix[3]+matrix[5]};const charCodes=getCharCodes(mapping,glyphId);if(!charCodes){continue}for(const charCode of charCodes){const charCodeToGlyphId=newMapping.charCodeToGlyphId;const baseFontCharCode=createCharCode(charCodeToGlyphId,baseGlyphId);const accentFontCharCode=createCharCode(charCodeToGlyphId,accentGlyphId);seacMap[charCode]={baseFontCharCode:baseFontCharCode,accentFontCharCode:accentFontCharCode,accentOffset:accentOffset}}}properties.seacMap=seacMap}const unitsPerEm=properties.fontMatrix?1/Math.max(...properties.fontMatrix.slice(0,4).map(Math.abs)):1e3;const builder=new OpenTypeFileBuilder(\"OTTO\");builder.addTable(\"CFF \",font.data);builder.addTable(\"OS/2\",createOS2Table(properties,newCharCodeToGlyphId));builder.addTable(\"cmap\",createCmapTable(newCharCodeToGlyphId,toUnicodeExtraMap,numGlyphs));builder.addTable(\"head\",\"\\0\u0001\\0\\0\"+\"\\0\\0\u0010\\0\"+\"\\0\\0\\0\\0\"+\"_\u000f<õ\"+\"\\0\\0\"+safeString16(unitsPerEm)+\"\\0\\0\\0\\0\\v~'\"+\"\\0\\0\\0\\0\\v~'\"+\"\\0\\0\"+safeString16(properties.descent)+\"\u000fÿ\"+safeString16(properties.ascent)+string16(properties.italicAngle?2:0)+\"\\0\u0011\"+\"\\0\\0\"+\"\\0\\0\"+\"\\0\\0\");builder.addTable(\"hhea\",\"\\0\u0001\\0\\0\"+safeString16(properties.ascent)+safeString16(properties.descent)+\"\\0\\0\"+\"ÿÿ\"+\"\\0\\0\"+\"\\0\\0\"+\"\\0\\0\"+safeString16(properties.capHeight)+safeString16(Math.tan(properties.italicAngle)*properties.xHeight)+\"\\0\\0\"+\"\\0\\0\"+\"\\0\\0\"+\"\\0\\0\"+\"\\0\\0\"+\"\\0\\0\"+string16(numGlyphs));builder.addTable(\"hmtx\",function fontFieldsHmtx(){const charstrings=font.charstrings;const cffWidths=font.cff?font.cff.widths:null;let hmtx=\"\\0\\0\\0\\0\";for(let i=1,ii=numGlyphs;i<ii;i++){let width=0;if(charstrings){const charstring=charstrings[i-1];width=\"width\"in charstring?charstring.width:0}else if(cffWidths){width=Math.ceil(cffWidths[i]||0)}hmtx+=string16(width)+string16(0)}return hmtx}());builder.addTable(\"maxp\",\"\\0\\0P\\0\"+string16(numGlyphs));builder.addTable(\"name\",createNameTable(fontName));builder.addTable(\"post\",createPostTable(properties));return builder.toArray()}get _spaceWidth(){const possibleSpaceReplacements=[\"space\",\"minus\",\"one\",\"i\",\"I\"];let width;for(const glyphName of possibleSpaceReplacements){if(glyphName in this.widths){width=this.widths[glyphName];break}const glyphsUnicodeMap=getGlyphsUnicode();const glyphUnicode=glyphsUnicodeMap[glyphName];let charcode=0;if(this.composite&&this.cMap.contains(glyphUnicode)){charcode=this.cMap.lookup(glyphUnicode);if(typeof charcode===\"string\"){charcode=convertCidString(glyphUnicode,charcode)}}if(!charcode&&this.toUnicode){charcode=this.toUnicode.charCodeOf(glyphUnicode)}if(charcode<=0){charcode=glyphUnicode}width=this.widths[charcode];if(width){break}}return shadow(this,\"_spaceWidth\",width||this.defaultWidth)}_charToGlyph(charcode,isSpace=false){let glyph=this._glyphCache[charcode];if(glyph?.isSpace===isSpace){return glyph}let fontCharCode,width,operatorListId;let widthCode=charcode;if(this.cMap?.contains(charcode)){widthCode=this.cMap.lookup(charcode);if(typeof widthCode===\"string\"){widthCode=convertCidString(charcode,widthCode)}}width=this.widths[widthCode];if(typeof width!==\"number\"){width=this.defaultWidth}const vmetric=this.vmetrics?.[widthCode];let unicode=this.toUnicode.get(charcode)||charcode;if(typeof unicode===\"number\"){unicode=String.fromCharCode(unicode)}let isInFont=this.toFontChar[charcode]!==undefined;fontCharCode=this.toFontChar[charcode]||charcode;if(this.missingFile){const glyphName=this.differences[charcode]||this.defaultEncoding[charcode];if((glyphName===\".notdef\"||glyphName===\"\")&&this.type===\"Type1\"){fontCharCode=32;if(glyphName===\"\"){width||=this._spaceWidth;unicode=String.fromCharCode(fontCharCode)}}fontCharCode=mapSpecialUnicodeValues(fontCharCode)}if(this.isType3Font){operatorListId=fontCharCode}let accent=null;if(this.seacMap?.[charcode]){isInFont=true;const seac=this.seacMap[charcode];fontCharCode=seac.baseFontCharCode;accent={fontChar:String.fromCodePoint(seac.accentFontCharCode),offset:seac.accentOffset}}let fontChar=\"\";if(typeof fontCharCode===\"number\"){if(fontCharCode<=1114111){fontChar=String.fromCodePoint(fontCharCode)}else{warn(`charToGlyph - invalid fontCharCode: ${fontCharCode}`)}}if(this.missingFile&&this.vertical&&fontChar.length===1){const vertical=getVerticalPresentationForm()[fontChar.charCodeAt(0)];if(vertical){fontChar=unicode=String.fromCharCode(vertical)}}glyph=new fonts_Glyph(charcode,fontChar,unicode,accent,width,vmetric,operatorListId,isSpace,isInFont);return this._glyphCache[charcode]=glyph}charsToGlyphs(chars){let glyphs=this._charsCache[chars];if(glyphs){return glyphs}glyphs=[];if(this.cMap){const c=Object.create(null),ii=chars.length;let i=0;while(i<ii){this.cMap.readCharCode(chars,i,c);const{charcode:charcode,length:length}=c;i+=length;const glyph=this._charToGlyph(charcode,length===1&&chars.charCodeAt(i-1)===32);glyphs.push(glyph)}}else{for(let i=0,ii=chars.length;i<ii;++i){const charcode=chars.charCodeAt(i);const glyph=this._charToGlyph(charcode,charcode===32);glyphs.push(glyph)}}return this._charsCache[chars]=glyphs}getCharPositions(chars){const positions=[];if(this.cMap){const c=Object.create(null);let i=0;while(i<chars.length){this.cMap.readCharCode(chars,i,c);const length=c.length;positions.push([i,i+length]);i+=length}}else{for(let i=0,ii=chars.length;i<ii;++i){positions.push([i,i+1])}}return positions}get glyphCacheValues(){return Object.values(this._glyphCache)}encodeString(str){const buffers=[];const currentBuf=[];const hasCurrentBufErrors=()=>buffers.length%2===1;const getCharCode=this.toUnicode instanceof IdentityToUnicodeMap?unicode=>this.toUnicode.charCodeOf(unicode):unicode=>this.toUnicode.charCodeOf(String.fromCodePoint(unicode));for(let i=0,ii=str.length;i<ii;i++){const unicode=str.codePointAt(i);if(unicode>55295&&(unicode<57344||unicode>65533)){i++}if(this.toUnicode){const charCode=getCharCode(unicode);if(charCode!==-1){if(hasCurrentBufErrors()){buffers.push(currentBuf.join(\"\"));currentBuf.length=0}const charCodeLength=this.cMap?this.cMap.getCharCodeLength(charCode):1;for(let j=charCodeLength-1;j>=0;j--){currentBuf.push(String.fromCharCode(charCode>>8*j&255))}continue}}if(!hasCurrentBufErrors()){buffers.push(currentBuf.join(\"\"));currentBuf.length=0}currentBuf.push(String.fromCodePoint(unicode))}buffers.push(currentBuf.join(\"\"));return buffers}}class ErrorFont{constructor(error){this.error=error;this.loadedName=\"g_font_error\";this.missingFile=true}charsToGlyphs(){return[]}encodeString(chars){return[chars]}exportData(){return{error:this.error}}}const ShadingType={FUNCTION_BASED:1,AXIAL:2,RADIAL:3,FREE_FORM_MESH:4,LATTICE_FORM_MESH:5,COONS_PATCH_MESH:6,TENSOR_PATCH_MESH:7};class Pattern{constructor(){unreachable(\"Cannot initialize Pattern.\")}static parseShading(shading,xref,res,pdfFunctionFactory,globalColorSpaceCache,localColorSpaceCache){const dict=shading instanceof BaseStream?shading.dict:shading;const type=dict.get(\"ShadingType\");try{switch(type){case ShadingType.AXIAL:case ShadingType.RADIAL:return new RadialAxialShading(dict,xref,res,pdfFunctionFactory,globalColorSpaceCache,localColorSpaceCache);case ShadingType.FREE_FORM_MESH:case ShadingType.LATTICE_FORM_MESH:case ShadingType.COONS_PATCH_MESH:case ShadingType.TENSOR_PATCH_MESH:return new MeshShading(shading,xref,res,pdfFunctionFactory,globalColorSpaceCache,localColorSpaceCache);default:throw new FormatError(\"Unsupported ShadingType: \"+type)}}catch(ex){if(ex instanceof MissingDataException){throw ex}warn(ex);return new DummyShading}}}class BaseShading{static SMALL_NUMBER=1e-6;getIR(){unreachable(\"Abstract method `getIR` called.\")}}class RadialAxialShading extends BaseShading{constructor(dict,xref,resources,pdfFunctionFactory,globalColorSpaceCache,localColorSpaceCache){super();this.shadingType=dict.get(\"ShadingType\");let coordsLen=0;if(this.shadingType===ShadingType.AXIAL){coordsLen=4}else if(this.shadingType===ShadingType.RADIAL){coordsLen=6}this.coordsArr=dict.getArray(\"Coords\");if(!isNumberArray(this.coordsArr,coordsLen)){throw new FormatError(\"RadialAxialShading: Invalid /Coords array.\")}const cs=ColorSpaceUtils.parse({cs:dict.getRaw(\"CS\")||dict.getRaw(\"ColorSpace\"),xref:xref,resources:resources,pdfFunctionFactory:pdfFunctionFactory,globalColorSpaceCache:globalColorSpaceCache,localColorSpaceCache:localColorSpaceCache});this.bbox=lookupNormalRect(dict.getArray(\"BBox\"),null);let t0=0,t1=1;const domainArr=dict.getArray(\"Domain\");if(isNumberArray(domainArr,2)){[t0,t1]=domainArr}let extendStart=false,extendEnd=false;const extendArr=dict.getArray(\"Extend\");if(isBooleanArray(extendArr,2)){[extendStart,extendEnd]=extendArr}if(this.shadingType===ShadingType.RADIAL&&(!extendStart||!extendEnd)){const[x1,y1,r1,x2,y2,r2]=this.coordsArr;const distance=Math.hypot(x1-x2,y1-y2);if(r1<=r2+distance&&r2<=r1+distance){warn(\"Unsupported radial gradient.\")}}this.extendStart=extendStart;this.extendEnd=extendEnd;const fnObj=dict.getRaw(\"Function\");const fn=pdfFunctionFactory.create(fnObj,true);const NUMBER_OF_SAMPLES=840;const step=(t1-t0)/NUMBER_OF_SAMPLES;const colorStops=this.colorStops=[];if(t0>=t1||step<=0){info(\"Bad shading domain.\");return}const color=new Float32Array(cs.numComps),ratio=new Float32Array(1);let rgbColor;let iBase=0;ratio[0]=t0;fn(ratio,0,color,0);let rgbBase=cs.getRgb(color,0);const cssColorBase=Util.makeHexColor(rgbBase[0],rgbBase[1],rgbBase[2]);colorStops.push([0,cssColorBase]);let iPrev=1;ratio[0]=t0+step;fn(ratio,0,color,0);let rgbPrev=cs.getRgb(color,0);let maxSlopeR=rgbPrev[0]-rgbBase[0]+1;let maxSlopeG=rgbPrev[1]-rgbBase[1]+1;let maxSlopeB=rgbPrev[2]-rgbBase[2]+1;let minSlopeR=rgbPrev[0]-rgbBase[0]-1;let minSlopeG=rgbPrev[1]-rgbBase[1]-1;let minSlopeB=rgbPrev[2]-rgbBase[2]-1;for(let i=2;i<NUMBER_OF_SAMPLES;i++){ratio[0]=t0+i*step;fn(ratio,0,color,0);rgbColor=cs.getRgb(color,0);const run=i-iBase;maxSlopeR=Math.min(maxSlopeR,(rgbColor[0]-rgbBase[0]+1)/run);maxSlopeG=Math.min(maxSlopeG,(rgbColor[1]-rgbBase[1]+1)/run);maxSlopeB=Math.min(maxSlopeB,(rgbColor[2]-rgbBase[2]+1)/run);minSlopeR=Math.max(minSlopeR,(rgbColor[0]-rgbBase[0]-1)/run);minSlopeG=Math.max(minSlopeG,(rgbColor[1]-rgbBase[1]-1)/run);minSlopeB=Math.max(minSlopeB,(rgbColor[2]-rgbBase[2]-1)/run);const slopesExist=minSlopeR<=maxSlopeR&&minSlopeG<=maxSlopeG&&minSlopeB<=maxSlopeB;if(!slopesExist){const cssColor=Util.makeHexColor(rgbPrev[0],rgbPrev[1],rgbPrev[2]);colorStops.push([iPrev/NUMBER_OF_SAMPLES,cssColor]);maxSlopeR=rgbColor[0]-rgbPrev[0]+1;maxSlopeG=rgbColor[1]-rgbPrev[1]+1;maxSlopeB=rgbColor[2]-rgbPrev[2]+1;minSlopeR=rgbColor[0]-rgbPrev[0]-1;minSlopeG=rgbColor[1]-rgbPrev[1]-1;minSlopeB=rgbColor[2]-rgbPrev[2]-1;iBase=iPrev;rgbBase=rgbPrev}iPrev=i;rgbPrev=rgbColor}const cssColor=Util.makeHexColor(rgbPrev[0],rgbPrev[1],rgbPrev[2]);colorStops.push([1,cssColor]);let background=\"transparent\";if(dict.has(\"Background\")){rgbColor=cs.getRgb(dict.get(\"Background\"),0);background=Util.makeHexColor(rgbColor[0],rgbColor[1],rgbColor[2])}if(!extendStart){colorStops.unshift([0,background]);colorStops[1][0]+=BaseShading.SMALL_NUMBER}if(!extendEnd){colorStops.at(-1)[0]-=BaseShading.SMALL_NUMBER;colorStops.push([1,background])}this.colorStops=colorStops}getIR(){const{coordsArr:coordsArr,shadingType:shadingType}=this;let type,p0,p1,r0,r1;if(shadingType===ShadingType.AXIAL){p0=[coordsArr[0],coordsArr[1]];p1=[coordsArr[2],coordsArr[3]];r0=null;r1=null;type=\"axial\"}else if(shadingType===ShadingType.RADIAL){p0=[coordsArr[0],coordsArr[1]];p1=[coordsArr[3],coordsArr[4]];r0=coordsArr[2];r1=coordsArr[5];type=\"radial\"}else{unreachable(`getPattern type unknown: ${shadingType}`)}return[\"RadialAxial\",type,this.bbox,this.colorStops,p0,p1,r0,r1]}}class MeshStreamReader{constructor(stream,context){this.stream=stream;this.context=context;this.buffer=0;this.bufferLength=0;const numComps=context.numComps;this.tmpCompsBuf=new Float32Array(numComps);const csNumComps=context.colorSpace.numComps;this.tmpCsCompsBuf=context.colorFn?new Float32Array(csNumComps):this.tmpCompsBuf}get hasData(){if(this.stream.end){return this.stream.pos<this.stream.end}if(this.bufferLength>0){return true}const nextByte=this.stream.getByte();if(nextByte<0){return false}this.buffer=nextByte;this.bufferLength=8;return true}readBits(n){const{stream:stream}=this;let{buffer:buffer,bufferLength:bufferLength}=this;if(n===32){if(bufferLength===0){return stream.getInt32()>>>0}buffer=buffer<<24|stream.getByte()<<16|stream.getByte()<<8|stream.getByte();const nextByte=stream.getByte();this.buffer=nextByte&(1<<bufferLength)-1;return(buffer<<8-bufferLength|(nextByte&255)>>bufferLength)>>>0}if(n===8&&bufferLength===0){return stream.getByte()}while(bufferLength<n){buffer=buffer<<8|stream.getByte();bufferLength+=8}bufferLength-=n;this.bufferLength=bufferLength;this.buffer=buffer&(1<<bufferLength)-1;return buffer>>bufferLength}align(){this.buffer=0;this.bufferLength=0}readFlag(){return this.readBits(this.context.bitsPerFlag)}readCoordinate(){const{bitsPerCoordinate:bitsPerCoordinate,decode:decode}=this.context;const xi=this.readBits(bitsPerCoordinate);const yi=this.readBits(bitsPerCoordinate);const scale=bitsPerCoordinate<32?1/((1<<bitsPerCoordinate)-1):2.3283064365386963e-10;return[xi*scale*(decode[1]-decode[0])+decode[0],yi*scale*(decode[3]-decode[2])+decode[2]]}readComponents(){const{bitsPerComponent:bitsPerComponent,colorFn:colorFn,colorSpace:colorSpace,decode:decode,numComps:numComps}=this.context;const scale=bitsPerComponent<32?1/((1<<bitsPerComponent)-1):2.3283064365386963e-10;const components=this.tmpCompsBuf;for(let i=0,j=4;i<numComps;i++,j+=2){const ci=this.readBits(bitsPerComponent);components[i]=ci*scale*(decode[j+1]-decode[j])+decode[j]}const color=this.tmpCsCompsBuf;colorFn?.(components,0,color,0);return colorSpace.getRgb(color,0)}}let bCache=Object.create(null);function buildB(count){const lut=[];for(let i=0;i<=count;i++){const t=i/count,t_=1-t;lut.push(new Float32Array([t_**3,3*t*t_**2,3*t**2*t_,t**3]))}return lut}function getB(count){return bCache[count]||=buildB(count)}function clearPatternCaches(){bCache=Object.create(null)}class MeshShading extends BaseShading{static MIN_SPLIT_PATCH_CHUNKS_AMOUNT=3;static MAX_SPLIT_PATCH_CHUNKS_AMOUNT=20;static TRIANGLE_DENSITY=20;constructor(stream,xref,resources,pdfFunctionFactory,globalColorSpaceCache,localColorSpaceCache){super();if(!(stream instanceof BaseStream)){throw new FormatError(\"Mesh data is not a stream\")}const dict=stream.dict;this.shadingType=dict.get(\"ShadingType\");this.bbox=lookupNormalRect(dict.getArray(\"BBox\"),null);const cs=ColorSpaceUtils.parse({cs:dict.getRaw(\"CS\")||dict.getRaw(\"ColorSpace\"),xref:xref,resources:resources,pdfFunctionFactory:pdfFunctionFactory,globalColorSpaceCache:globalColorSpaceCache,localColorSpaceCache:localColorSpaceCache});this.background=dict.has(\"Background\")?cs.getRgb(dict.get(\"Background\"),0):null;const fnObj=dict.getRaw(\"Function\");const fn=fnObj?pdfFunctionFactory.create(fnObj,true):null;this.coords=[];this.colors=[];this.figures=[];const decodeContext={bitsPerCoordinate:dict.get(\"BitsPerCoordinate\"),bitsPerComponent:dict.get(\"BitsPerComponent\"),bitsPerFlag:dict.get(\"BitsPerFlag\"),decode:dict.getArray(\"Decode\"),colorFn:fn,colorSpace:cs,numComps:fn?1:cs.numComps};const reader=new MeshStreamReader(stream,decodeContext);let patchMesh=false;switch(this.shadingType){case ShadingType.FREE_FORM_MESH:this._decodeType4Shading(reader);break;case ShadingType.LATTICE_FORM_MESH:const verticesPerRow=dict.get(\"VerticesPerRow\")|0;if(verticesPerRow<2){throw new FormatError(\"Invalid VerticesPerRow\")}this._decodeType5Shading(reader,verticesPerRow);break;case ShadingType.COONS_PATCH_MESH:this._decodeType6Shading(reader);patchMesh=true;break;case ShadingType.TENSOR_PATCH_MESH:this._decodeType7Shading(reader);patchMesh=true;break;default:unreachable(\"Unsupported mesh type.\");break}if(patchMesh){this._updateBounds();for(let i=0,ii=this.figures.length;i<ii;i++){this._buildFigureFromPatch(i)}}this._updateBounds();this._packData()}_decodeType4Shading(reader){const coords=this.coords;const colors=this.colors;const operators=[];const ps=[];let verticesLeft=0;while(reader.hasData){const f=reader.readFlag();const coord=reader.readCoordinate();const color=reader.readComponents();if(verticesLeft===0){if(!(0<=f&&f<=2)){throw new FormatError(\"Unknown type4 flag\")}switch(f){case 0:verticesLeft=3;break;case 1:ps.push(ps.at(-2),ps.at(-1));verticesLeft=1;break;case 2:ps.push(ps.at(-3),ps.at(-1));verticesLeft=1;break}operators.push(f)}ps.push(coords.length);coords.push(coord);colors.push(color);verticesLeft--;reader.align()}this.figures.push({type:\"triangles\",coords:new Int32Array(ps),colors:new Int32Array(ps)})}_decodeType5Shading(reader,verticesPerRow){const coords=this.coords;const colors=this.colors;const ps=[];while(reader.hasData){const coord=reader.readCoordinate();const color=reader.readComponents();ps.push(coords.length);coords.push(coord);colors.push(color)}this.figures.push({type:\"lattice\",coords:new Int32Array(ps),colors:new Int32Array(ps),verticesPerRow:verticesPerRow})}_decodeType6Shading(reader){const coords=this.coords;const colors=this.colors;const ps=new Int32Array(16);const cs=new Int32Array(4);while(reader.hasData){const f=reader.readFlag();if(!(0<=f&&f<=3)){throw new FormatError(\"Unknown type6 flag\")}const pi=coords.length;for(let i=0,ii=f!==0?8:12;i<ii;i++){coords.push(reader.readCoordinate())}const ci=colors.length;for(let i=0,ii=f!==0?2:4;i<ii;i++){colors.push(reader.readComponents())}let tmp1,tmp2,tmp3,tmp4;switch(f){case 0:ps[12]=pi+3;ps[13]=pi+4;ps[14]=pi+5;ps[15]=pi+6;ps[8]=pi+2;ps[11]=pi+7;ps[4]=pi+1;ps[7]=pi+8;ps[0]=pi;ps[1]=pi+11;ps[2]=pi+10;ps[3]=pi+9;cs[2]=ci+1;cs[3]=ci+2;cs[0]=ci;cs[1]=ci+3;break;case 1:tmp1=ps[12];tmp2=ps[13];tmp3=ps[14];tmp4=ps[15];ps[12]=tmp4;ps[13]=pi+0;ps[14]=pi+1;ps[15]=pi+2;ps[8]=tmp3;ps[11]=pi+3;ps[4]=tmp2;ps[7]=pi+4;ps[0]=tmp1;ps[1]=pi+7;ps[2]=pi+6;ps[3]=pi+5;tmp1=cs[2];tmp2=cs[3];cs[2]=tmp2;cs[3]=ci;cs[0]=tmp1;cs[1]=ci+1;break;case 2:tmp1=ps[15];tmp2=ps[11];ps[12]=ps[3];ps[13]=pi+0;ps[14]=pi+1;ps[15]=pi+2;ps[8]=ps[7];ps[11]=pi+3;ps[4]=tmp2;ps[7]=pi+4;ps[0]=tmp1;ps[1]=pi+7;ps[2]=pi+6;ps[3]=pi+5;tmp1=cs[3];cs[2]=cs[1];cs[3]=ci;cs[0]=tmp1;cs[1]=ci+1;break;case 3:ps[12]=ps[0];ps[13]=pi+0;ps[14]=pi+1;ps[15]=pi+2;ps[8]=ps[1];ps[11]=pi+3;ps[4]=ps[2];ps[7]=pi+4;ps[0]=ps[3];ps[1]=pi+7;ps[2]=pi+6;ps[3]=pi+5;cs[2]=cs[0];cs[3]=ci;cs[0]=cs[1];cs[1]=ci+1;break}ps[5]=coords.length;coords.push([(-4*coords[ps[0]][0]-coords[ps[15]][0]+6*(coords[ps[4]][0]+coords[ps[1]][0])-2*(coords[ps[12]][0]+coords[ps[3]][0])+3*(coords[ps[13]][0]+coords[ps[7]][0]))/9,(-4*coords[ps[0]][1]-coords[ps[15]][1]+6*(coords[ps[4]][1]+coords[ps[1]][1])-2*(coords[ps[12]][1]+coords[ps[3]][1])+3*(coords[ps[13]][1]+coords[ps[7]][1]))/9]);ps[6]=coords.length;coords.push([(-4*coords[ps[3]][0]-coords[ps[12]][0]+6*(coords[ps[2]][0]+coords[ps[7]][0])-2*(coords[ps[0]][0]+coords[ps[15]][0])+3*(coords[ps[4]][0]+coords[ps[14]][0]))/9,(-4*coords[ps[3]][1]-coords[ps[12]][1]+6*(coords[ps[2]][1]+coords[ps[7]][1])-2*(coords[ps[0]][1]+coords[ps[15]][1])+3*(coords[ps[4]][1]+coords[ps[14]][1]))/9]);ps[9]=coords.length;coords.push([(-4*coords[ps[12]][0]-coords[ps[3]][0]+6*(coords[ps[8]][0]+coords[ps[13]][0])-2*(coords[ps[0]][0]+coords[ps[15]][0])+3*(coords[ps[11]][0]+coords[ps[1]][0]))/9,(-4*coords[ps[12]][1]-coords[ps[3]][1]+6*(coords[ps[8]][1]+coords[ps[13]][1])-2*(coords[ps[0]][1]+coords[ps[15]][1])+3*(coords[ps[11]][1]+coords[ps[1]][1]))/9]);ps[10]=coords.length;coords.push([(-4*coords[ps[15]][0]-coords[ps[0]][0]+6*(coords[ps[11]][0]+coords[ps[14]][0])-2*(coords[ps[12]][0]+coords[ps[3]][0])+3*(coords[ps[2]][0]+coords[ps[8]][0]))/9,(-4*coords[ps[15]][1]-coords[ps[0]][1]+6*(coords[ps[11]][1]+coords[ps[14]][1])-2*(coords[ps[12]][1]+coords[ps[3]][1])+3*(coords[ps[2]][1]+coords[ps[8]][1]))/9]);this.figures.push({type:\"patch\",coords:new Int32Array(ps),colors:new Int32Array(cs)})}}_decodeType7Shading(reader){const coords=this.coords;const colors=this.colors;const ps=new Int32Array(16);const cs=new Int32Array(4);while(reader.hasData){const f=reader.readFlag();if(!(0<=f&&f<=3)){throw new FormatError(\"Unknown type7 flag\")}const pi=coords.length;for(let i=0,ii=f!==0?12:16;i<ii;i++){coords.push(reader.readCoordinate())}const ci=colors.length;for(let i=0,ii=f!==0?2:4;i<ii;i++){colors.push(reader.readComponents())}let tmp1,tmp2,tmp3,tmp4;switch(f){case 0:ps[12]=pi+3;ps[13]=pi+4;ps[14]=pi+5;ps[15]=pi+6;ps[8]=pi+2;ps[9]=pi+13;ps[10]=pi+14;ps[11]=pi+7;ps[4]=pi+1;ps[5]=pi+12;ps[6]=pi+15;ps[7]=pi+8;ps[0]=pi;ps[1]=pi+11;ps[2]=pi+10;ps[3]=pi+9;cs[2]=ci+1;cs[3]=ci+2;cs[0]=ci;cs[1]=ci+3;break;case 1:tmp1=ps[12];tmp2=ps[13];tmp3=ps[14];tmp4=ps[15];ps[12]=tmp4;ps[13]=pi+0;ps[14]=pi+1;ps[15]=pi+2;ps[8]=tmp3;ps[9]=pi+9;ps[10]=pi+10;ps[11]=pi+3;ps[4]=tmp2;ps[5]=pi+8;ps[6]=pi+11;ps[7]=pi+4;ps[0]=tmp1;ps[1]=pi+7;ps[2]=pi+6;ps[3]=pi+5;tmp1=cs[2];tmp2=cs[3];cs[2]=tmp2;cs[3]=ci;cs[0]=tmp1;cs[1]=ci+1;break;case 2:tmp1=ps[15];tmp2=ps[11];ps[12]=ps[3];ps[13]=pi+0;ps[14]=pi+1;ps[15]=pi+2;ps[8]=ps[7];ps[9]=pi+9;ps[10]=pi+10;ps[11]=pi+3;ps[4]=tmp2;ps[5]=pi+8;ps[6]=pi+11;ps[7]=pi+4;ps[0]=tmp1;ps[1]=pi+7;ps[2]=pi+6;ps[3]=pi+5;tmp1=cs[3];cs[2]=cs[1];cs[3]=ci;cs[0]=tmp1;cs[1]=ci+1;break;case 3:ps[12]=ps[0];ps[13]=pi+0;ps[14]=pi+1;ps[15]=pi+2;ps[8]=ps[1];ps[9]=pi+9;ps[10]=pi+10;ps[11]=pi+3;ps[4]=ps[2];ps[5]=pi+8;ps[6]=pi+11;ps[7]=pi+4;ps[0]=ps[3];ps[1]=pi+7;ps[2]=pi+6;ps[3]=pi+5;cs[2]=cs[0];cs[3]=ci;cs[0]=cs[1];cs[1]=ci+1;break}this.figures.push({type:\"patch\",coords:new Int32Array(ps),colors:new Int32Array(cs)})}}_buildFigureFromPatch(index){const figure=this.figures[index];assert(figure.type===\"patch\",\"Unexpected patch mesh figure\");const coords=this.coords,colors=this.colors;const pi=figure.coords;const ci=figure.colors;const figureMinX=Math.min(coords[pi[0]][0],coords[pi[3]][0],coords[pi[12]][0],coords[pi[15]][0]);const figureMinY=Math.min(coords[pi[0]][1],coords[pi[3]][1],coords[pi[12]][1],coords[pi[15]][1]);const figureMaxX=Math.max(coords[pi[0]][0],coords[pi[3]][0],coords[pi[12]][0],coords[pi[15]][0]);const figureMaxY=Math.max(coords[pi[0]][1],coords[pi[3]][1],coords[pi[12]][1],coords[pi[15]][1]);let splitXBy=Math.ceil((figureMaxX-figureMinX)*MeshShading.TRIANGLE_DENSITY/(this.bounds[2]-this.bounds[0]));splitXBy=MathClamp(splitXBy,MeshShading.MIN_SPLIT_PATCH_CHUNKS_AMOUNT,MeshShading.MAX_SPLIT_PATCH_CHUNKS_AMOUNT);let splitYBy=Math.ceil((figureMaxY-figureMinY)*MeshShading.TRIANGLE_DENSITY/(this.bounds[3]-this.bounds[1]));splitYBy=MathClamp(splitYBy,MeshShading.MIN_SPLIT_PATCH_CHUNKS_AMOUNT,MeshShading.MAX_SPLIT_PATCH_CHUNKS_AMOUNT);const verticesPerRow=splitXBy+1;const figureCoords=new Int32Array((splitYBy+1)*verticesPerRow);const figureColors=new Int32Array((splitYBy+1)*verticesPerRow);let k=0;const cl=new Uint8Array(3),cr=new Uint8Array(3);const c0=colors[ci[0]],c1=colors[ci[1]],c2=colors[ci[2]],c3=colors[ci[3]];const bRow=getB(splitYBy),bCol=getB(splitXBy);for(let row=0;row<=splitYBy;row++){cl[0]=(c0[0]*(splitYBy-row)+c2[0]*row)/splitYBy|0;cl[1]=(c0[1]*(splitYBy-row)+c2[1]*row)/splitYBy|0;cl[2]=(c0[2]*(splitYBy-row)+c2[2]*row)/splitYBy|0;cr[0]=(c1[0]*(splitYBy-row)+c3[0]*row)/splitYBy|0;cr[1]=(c1[1]*(splitYBy-row)+c3[1]*row)/splitYBy|0;cr[2]=(c1[2]*(splitYBy-row)+c3[2]*row)/splitYBy|0;for(let col=0;col<=splitXBy;col++,k++){if((row===0||row===splitYBy)&&(col===0||col===splitXBy)){continue}let x=0,y=0;let q=0;for(let i=0;i<=3;i++){for(let j=0;j<=3;j++,q++){const m=bRow[row][i]*bCol[col][j];x+=coords[pi[q]][0]*m;y+=coords[pi[q]][1]*m}}figureCoords[k]=coords.length;coords.push([x,y]);figureColors[k]=colors.length;const newColor=new Uint8Array(3);newColor[0]=(cl[0]*(splitXBy-col)+cr[0]*col)/splitXBy|0;newColor[1]=(cl[1]*(splitXBy-col)+cr[1]*col)/splitXBy|0;newColor[2]=(cl[2]*(splitXBy-col)+cr[2]*col)/splitXBy|0;colors.push(newColor)}}figureCoords[0]=pi[0];figureColors[0]=ci[0];figureCoords[splitXBy]=pi[3];figureColors[splitXBy]=ci[1];figureCoords[verticesPerRow*splitYBy]=pi[12];figureColors[verticesPerRow*splitYBy]=ci[2];figureCoords[verticesPerRow*splitYBy+splitXBy]=pi[15];figureColors[verticesPerRow*splitYBy+splitXBy]=ci[3];this.figures[index]={type:\"lattice\",coords:figureCoords,colors:figureColors,verticesPerRow:verticesPerRow}}_updateBounds(){let minX=this.coords[0][0],minY=this.coords[0][1],maxX=minX,maxY=minY;for(let i=1,ii=this.coords.length;i<ii;i++){const x=this.coords[i][0],y=this.coords[i][1];minX=minX>x?x:minX;minY=minY>y?y:minY;maxX=maxX<x?x:maxX;maxY=maxY<y?y:maxY}this.bounds=[minX,minY,maxX,maxY]}_packData(){let i,ii,j,jj;const coords=this.coords;const coordsPacked=new Float32Array(coords.length*2);for(i=0,j=0,ii=coords.length;i<ii;i++){const xy=coords[i];coordsPacked[j++]=xy[0];coordsPacked[j++]=xy[1]}this.coords=coordsPacked;const colors=this.colors;const colorsPacked=new Uint8Array(colors.length*3);for(i=0,j=0,ii=colors.length;i<ii;i++){const c=colors[i];colorsPacked[j++]=c[0];colorsPacked[j++]=c[1];colorsPacked[j++]=c[2]}this.colors=colorsPacked;const figures=this.figures;for(i=0,ii=figures.length;i<ii;i++){const figure=figures[i],ps=figure.coords,cs=figure.colors;for(j=0,jj=ps.length;j<jj;j++){ps[j]*=2;cs[j]*=3}}}getIR(){const{bounds:bounds}=this;if(bounds[2]-bounds[0]===0||bounds[3]-bounds[1]===0){throw new FormatError(`Invalid MeshShading bounds: [${bounds}].`)}return[\"Mesh\",this.shadingType,this.coords,this.colors,this.figures,bounds,this.bbox,this.background]}}class DummyShading extends BaseShading{getIR(){return[\"Dummy\"]}}function getTilingPatternIR(operatorList,dict,color){const matrix=lookupMatrix(dict.getArray(\"Matrix\"),IDENTITY_MATRIX);const bbox=lookupNormalRect(dict.getArray(\"BBox\"),null);if(!bbox||bbox[2]-bbox[0]===0||bbox[3]-bbox[1]===0){throw new FormatError(`Invalid getTilingPatternIR /BBox array.`)}const xstep=dict.get(\"XStep\");if(typeof xstep!==\"number\"){throw new FormatError(`Invalid getTilingPatternIR /XStep value.`)}const ystep=dict.get(\"YStep\");if(typeof ystep!==\"number\"){throw new FormatError(`Invalid getTilingPatternIR /YStep value.`)}const paintType=dict.get(\"PaintType\");if(!Number.isInteger(paintType)){throw new FormatError(`Invalid getTilingPatternIR /PaintType value.`)}const tilingType=dict.get(\"TilingType\");if(!Number.isInteger(tilingType)){throw new FormatError(`Invalid getTilingPatternIR /TilingType value.`)}return[\"TilingPattern\",color,operatorList,matrix,bbox,xstep,ystep,paintType,tilingType]}const CalibriBoldFactors=[1.3877,1,1,1,.97801,.92482,.89552,.91133,.81988,.97566,.98152,.93548,.93548,1.2798,.85284,.92794,1,.96134,1.54657,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.82845,.82845,.85284,.85284,.85284,.75859,.92138,.83908,.7762,.73293,.87289,.73133,.7514,.81921,.87356,.95958,.59526,.75727,.69225,1.04924,.9121,.86943,.79795,.88198,.77958,.70864,.81055,.90399,.88653,.96017,.82577,.77892,.78257,.97507,1.54657,.97507,.85284,.89552,.90176,.88762,.8785,.75241,.8785,.90518,.95015,.77618,.8785,.88401,.91916,.86304,.88401,.91488,.8785,.8801,.8785,.8785,.91343,.7173,1.04106,.8785,.85075,.95794,.82616,.85162,.79492,.88331,1.69808,.88331,.85284,.97801,.89552,.91133,.89552,.91133,1.7801,.89552,1.24487,1.13254,1.12401,.96839,.85284,.68787,.70645,.85592,.90747,1.01466,1.0088,.90323,1,1.07463,1,.91056,.75806,1.19118,.96839,.78864,.82845,.84133,.75859,.83908,.83908,.83908,.83908,.83908,.83908,.77539,.73293,.73133,.73133,.73133,.73133,.95958,.95958,.95958,.95958,.88506,.9121,.86943,.86943,.86943,.86943,.86943,.85284,.87508,.90399,.90399,.90399,.90399,.77892,.79795,.90807,.88762,.88762,.88762,.88762,.88762,.88762,.8715,.75241,.90518,.90518,.90518,.90518,.88401,.88401,.88401,.88401,.8785,.8785,.8801,.8801,.8801,.8801,.8801,.90747,.89049,.8785,.8785,.8785,.8785,.85162,.8785,.85162,.83908,.88762,.83908,.88762,.83908,.88762,.73293,.75241,.73293,.75241,.73293,.75241,.73293,.75241,.87289,.83016,.88506,.93125,.73133,.90518,.73133,.90518,.73133,.90518,.73133,.90518,.73133,.90518,.81921,.77618,.81921,.77618,.81921,.77618,1,1,.87356,.8785,.91075,.89608,.95958,.88401,.95958,.88401,.95958,.88401,.95958,.88401,.95958,.88401,.76229,.90167,.59526,.91916,1,1,.86304,.69225,.88401,1,1,.70424,.79468,.91926,.88175,.70823,.94903,.9121,.8785,1,1,.9121,.8785,.87802,.88656,.8785,.86943,.8801,.86943,.8801,.86943,.8801,.87402,.89291,.77958,.91343,1,1,.77958,.91343,.70864,.7173,.70864,.7173,.70864,.7173,.70864,.7173,1,1,.81055,.75841,.81055,1.06452,.90399,.8785,.90399,.8785,.90399,.8785,.90399,.8785,.90399,.8785,.90399,.8785,.96017,.95794,.77892,.85162,.77892,.78257,.79492,.78257,.79492,.78257,.79492,.9297,.56892,.83908,.88762,.77539,.8715,.87508,.89049,1,1,.81055,1.04106,1.20528,1.20528,1,1.15543,.70674,.98387,.94721,1.33431,1.45894,.95161,1.06303,.83908,.80352,.57184,.6965,.56289,.82001,.56029,.81235,1.02988,.83908,.7762,.68156,.80367,.73133,.78257,.87356,.86943,.95958,.75727,.89019,1.04924,.9121,.7648,.86943,.87356,.79795,.78275,.81055,.77892,.9762,.82577,.99819,.84896,.95958,.77892,.96108,1.01407,.89049,1.02988,.94211,.96108,.8936,.84021,.87842,.96399,.79109,.89049,1.00813,1.02988,.86077,.87445,.92099,.84723,.86513,.8801,.75638,.85714,.78216,.79586,.87965,.94211,.97747,.78287,.97926,.84971,1.02988,.94211,.8801,.94211,.84971,.73133,1,1,1,1,1,1,1,1,1,1,1,1,.90264,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.90518,1,1,1,1,1,1,1,1,1,1,1,1,.90548,1,1,1,1,1,1,.96017,.95794,.96017,.95794,.96017,.95794,.77892,.85162,1,1,.89552,.90527,1,.90363,.92794,.92794,.92794,.92794,.87012,.87012,.87012,.89552,.89552,1.42259,.71143,1.06152,1,1,1.03372,1.03372,.97171,1.4956,2.2807,.93835,.83406,.91133,.84107,.91133,1,1,1,.72021,1,1.23108,.83489,.88525,.88525,.81499,.90527,1.81055,.90527,1.81055,1.31006,1.53711,.94434,1.08696,1,.95018,.77192,.85284,.90747,1.17534,.69825,.9716,1.37077,.90747,.90747,.85356,.90747,.90747,1.44947,.85284,.8941,.8941,.70572,.8,.70572,.70572,.70572,.70572,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.99862,.99862,1,1,1,1,1,1.08004,.91027,1,1,1,.99862,1,1,1,1,1,1,1,1,1,1,1,1,.90727,.90727,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];const CalibriBoldMetrics={lineHeight:1.2207,lineGap:.2207};const CalibriBoldItalicFactors=[1.3877,1,1,1,.97801,.92482,.89552,.91133,.81988,.97566,.98152,.93548,.93548,1.2798,.85284,.92794,1,.96134,1.56239,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.82845,.82845,.85284,.85284,.85284,.75859,.92138,.83908,.7762,.71805,.87289,.73133,.7514,.81921,.87356,.95958,.59526,.75727,.69225,1.04924,.90872,.85938,.79795,.87068,.77958,.69766,.81055,.90399,.88653,.96068,.82577,.77892,.78257,.97507,1.529,.97507,.85284,.89552,.90176,.94908,.86411,.74012,.86411,.88323,.95015,.86411,.86331,.88401,.91916,.86304,.88401,.9039,.86331,.86331,.86411,.86411,.90464,.70852,1.04106,.86331,.84372,.95794,.82616,.84548,.79492,.88331,1.69808,.88331,.85284,.97801,.89552,.91133,.89552,.91133,1.7801,.89552,1.24487,1.13254,1.19129,.96839,.85284,.68787,.70645,.85592,.90747,1.01466,1.0088,.90323,1,1.07463,1,.91056,.75806,1.19118,.96839,.78864,.82845,.84133,.75859,.83908,.83908,.83908,.83908,.83908,.83908,.77539,.71805,.73133,.73133,.73133,.73133,.95958,.95958,.95958,.95958,.88506,.90872,.85938,.85938,.85938,.85938,.85938,.85284,.87068,.90399,.90399,.90399,.90399,.77892,.79795,.90807,.94908,.94908,.94908,.94908,.94908,.94908,.85887,.74012,.88323,.88323,.88323,.88323,.88401,.88401,.88401,.88401,.8785,.86331,.86331,.86331,.86331,.86331,.86331,.90747,.89049,.86331,.86331,.86331,.86331,.84548,.86411,.84548,.83908,.94908,.83908,.94908,.83908,.94908,.71805,.74012,.71805,.74012,.71805,.74012,.71805,.74012,.87289,.79538,.88506,.92726,.73133,.88323,.73133,.88323,.73133,.88323,.73133,.88323,.73133,.88323,.81921,.86411,.81921,.86411,.81921,.86411,1,1,.87356,.86331,.91075,.8777,.95958,.88401,.95958,.88401,.95958,.88401,.95958,.88401,.95958,.88401,.76467,.90167,.59526,.91916,1,1,.86304,.69225,.88401,1,1,.70424,.77312,.91926,.88175,.70823,.94903,.90872,.86331,1,1,.90872,.86331,.86906,.88116,.86331,.85938,.86331,.85938,.86331,.85938,.86331,.87402,.86549,.77958,.90464,1,1,.77958,.90464,.69766,.70852,.69766,.70852,.69766,.70852,.69766,.70852,1,1,.81055,.75841,.81055,1.06452,.90399,.86331,.90399,.86331,.90399,.86331,.90399,.86331,.90399,.86331,.90399,.86331,.96068,.95794,.77892,.84548,.77892,.78257,.79492,.78257,.79492,.78257,.79492,.9297,.56892,.83908,.94908,.77539,.85887,.87068,.89049,1,1,.81055,1.04106,1.20528,1.20528,1,1.15543,.70088,.98387,.94721,1.33431,1.45894,.95161,1.48387,.83908,.80352,.57118,.6965,.56347,.79179,.55853,.80346,1.02988,.83908,.7762,.67174,.86036,.73133,.78257,.87356,.86441,.95958,.75727,.89019,1.04924,.90872,.74889,.85938,.87891,.79795,.7957,.81055,.77892,.97447,.82577,.97466,.87179,.95958,.77892,.94252,.95612,.8753,1.02988,.92733,.94252,.87411,.84021,.8728,.95612,.74081,.8753,1.02189,1.02988,.84814,.87445,.91822,.84723,.85668,.86331,.81344,.87581,.76422,.82046,.96057,.92733,.99375,.78022,.95452,.86015,1.02988,.92733,.86331,.92733,.86015,.73133,1,1,1,1,1,1,1,1,1,1,1,1,.90631,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.88323,1,1,1,1,1,1,1,1,1,1,1,1,.85174,1,1,1,1,1,1,.96068,.95794,.96068,.95794,.96068,.95794,.77892,.84548,1,1,.89552,.90527,1,.90363,.92794,.92794,.92794,.89807,.87012,.87012,.87012,.89552,.89552,1.42259,.71094,1.06152,1,1,1.03372,1.03372,.97171,1.4956,2.2807,.92972,.83406,.91133,.83326,.91133,1,1,1,.72021,1,1.23108,.83489,.88525,.88525,.81499,.90616,1.81055,.90527,1.81055,1.3107,1.53711,.94434,1.08696,1,.95018,.77192,.85284,.90747,1.17534,.69825,.9716,1.37077,.90747,.90747,.85356,.90747,.90747,1.44947,.85284,.8941,.8941,.70572,.8,.70572,.70572,.70572,.70572,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.99862,.99862,1,1,1,1,1,1.08004,.91027,1,1,1,.99862,1,1,1,1,1,1,1,1,1,1,1,1,.90727,.90727,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];const CalibriBoldItalicMetrics={lineHeight:1.2207,lineGap:.2207};const CalibriItalicFactors=[1.3877,1,1,1,1.17223,1.1293,.89552,.91133,.80395,1.02269,1.15601,.91056,.91056,1.2798,.85284,.89807,1,.90861,1.39543,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.96309,.96309,.85284,.85284,.85284,.83319,.88071,.8675,.81552,.72346,.85193,.73206,.7522,.81105,.86275,.90685,.6377,.77892,.75593,1.02638,.89249,.84118,.77452,.85374,.75186,.67789,.79776,.88844,.85066,.94309,.77818,.7306,.76659,1.10369,1.38313,1.10369,1.06139,.89552,.8739,.9245,.9245,.83203,.9245,.85865,1.09842,.9245,.9245,1.03297,1.07692,.90918,1.03297,.94959,.9245,.92274,.9245,.9245,1.02933,.77832,1.20562,.9245,.8916,.98986,.86621,.89453,.79004,.94152,1.77256,.94152,.85284,.97801,.89552,.91133,.89552,.91133,1.91729,.89552,1.17889,1.13254,1.16359,.92098,.85284,.68787,.71353,.84737,.90747,1.0088,1.0044,.87683,1,1.09091,1,.92229,.739,1.15642,.92098,.76288,.80504,.80972,.75859,.8675,.8675,.8675,.8675,.8675,.8675,.76318,.72346,.73206,.73206,.73206,.73206,.90685,.90685,.90685,.90685,.86477,.89249,.84118,.84118,.84118,.84118,.84118,.85284,.84557,.88844,.88844,.88844,.88844,.7306,.77452,.86331,.9245,.9245,.9245,.9245,.9245,.9245,.84843,.83203,.85865,.85865,.85865,.85865,.82601,.82601,.82601,.82601,.94469,.9245,.92274,.92274,.92274,.92274,.92274,.90747,.86651,.9245,.9245,.9245,.9245,.89453,.9245,.89453,.8675,.9245,.8675,.9245,.8675,.9245,.72346,.83203,.72346,.83203,.72346,.83203,.72346,.83203,.85193,.8875,.86477,.99034,.73206,.85865,.73206,.85865,.73206,.85865,.73206,.85865,.73206,.85865,.81105,.9245,.81105,.9245,.81105,.9245,1,1,.86275,.9245,.90872,.93591,.90685,.82601,.90685,.82601,.90685,.82601,.90685,1.03297,.90685,.82601,.77896,1.05611,.6377,1.07692,1,1,.90918,.75593,1.03297,1,1,.76032,.9375,.98156,.93407,.77261,1.11429,.89249,.9245,1,1,.89249,.9245,.92534,.86698,.9245,.84118,.92274,.84118,.92274,.84118,.92274,.8667,.86291,.75186,1.02933,1,1,.75186,1.02933,.67789,.77832,.67789,.77832,.67789,.77832,.67789,.77832,1,1,.79776,.97655,.79776,1.23023,.88844,.9245,.88844,.9245,.88844,.9245,.88844,.9245,.88844,.9245,.88844,.9245,.94309,.98986,.7306,.89453,.7306,.76659,.79004,.76659,.79004,.76659,.79004,1.09231,.54873,.8675,.9245,.76318,.84843,.84557,.86651,1,1,.79776,1.20562,1.18622,1.18622,1,1.1437,.67009,.96334,.93695,1.35191,1.40909,.95161,1.48387,.8675,.90861,.6192,.7363,.64824,.82411,.56321,.85696,1.23516,.8675,.81552,.7286,.84134,.73206,.76659,.86275,.84369,.90685,.77892,.85871,1.02638,.89249,.75828,.84118,.85984,.77452,.76466,.79776,.7306,.90782,.77818,.903,.87291,.90685,.7306,.99058,1.03667,.94635,1.23516,.9849,.99058,.92393,.8916,.942,1.03667,.75026,.94635,1.0297,1.23516,.90918,.94048,.98217,.89746,.84153,.92274,.82507,.88832,.84438,.88178,1.03525,.9849,1.00225,.78086,.97248,.89404,1.23516,.9849,.92274,.9849,.89404,.73206,1,1,1,1,1,1,1,1,1,1,1,1,.89693,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.85865,1,1,1,1,1,1,1,1,1,1,1,1,.90933,1,1,1,1,1,1,.94309,.98986,.94309,.98986,.94309,.98986,.7306,.89453,1,1,.89552,.90527,1,.90186,1.12308,1.12308,1.12308,1.12308,1.2566,1.2566,1.2566,.89552,.89552,1.42259,.68994,1.03809,1,1,1.0176,1.0176,1.11523,1.4956,2.01462,.97858,.82616,.91133,.83437,.91133,1,1,1,.70508,1,1.23108,.79801,.84426,.84426,.774,.90572,1.81055,.90749,1.81055,1.28809,1.55469,.94434,1.07806,1,.97094,.7589,.85284,.90747,1.19658,.69825,.97622,1.33512,.90747,.90747,.85284,.90747,.90747,1.44947,.85284,.8941,.8941,.70572,.8,.70572,.70572,.70572,.70572,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.99862,.99862,1,1,1,1,1,1.0336,.91027,1,1,1,.99862,1,1,1,1,1,1,1,1,1,1,1,1,1.05859,1.05859,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];const CalibriItalicMetrics={lineHeight:1.2207,lineGap:.2207};const CalibriRegularFactors=[1.3877,1,1,1,1.17223,1.1293,.89552,.91133,.80395,1.02269,1.15601,.91056,.91056,1.2798,.85284,.89807,1,.90861,1.39016,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.91133,.96309,.96309,.85284,.85284,.85284,.83319,.88071,.8675,.81552,.73834,.85193,.73206,.7522,.81105,.86275,.90685,.6377,.77892,.75593,1.02638,.89385,.85122,.77452,.86503,.75186,.68887,.79776,.88844,.85066,.94258,.77818,.7306,.76659,1.10369,1.39016,1.10369,1.06139,.89552,.8739,.86128,.94469,.8457,.94469,.89464,1.09842,.84636,.94469,1.03297,1.07692,.90918,1.03297,.95897,.94469,.9482,.94469,.94469,1.04692,.78223,1.20562,.94469,.90332,.98986,.86621,.90527,.79004,.94152,1.77256,.94152,.85284,.97801,.89552,.91133,.89552,.91133,1.91729,.89552,1.17889,1.13254,1.08707,.92098,.85284,.68787,.71353,.84737,.90747,1.0088,1.0044,.87683,1,1.09091,1,.92229,.739,1.15642,.92098,.76288,.80504,.80972,.75859,.8675,.8675,.8675,.8675,.8675,.8675,.76318,.73834,.73206,.73206,.73206,.73206,.90685,.90685,.90685,.90685,.86477,.89385,.85122,.85122,.85122,.85122,.85122,.85284,.85311,.88844,.88844,.88844,.88844,.7306,.77452,.86331,.86128,.86128,.86128,.86128,.86128,.86128,.8693,.8457,.89464,.89464,.89464,.89464,.82601,.82601,.82601,.82601,.94469,.94469,.9482,.9482,.9482,.9482,.9482,.90747,.86651,.94469,.94469,.94469,.94469,.90527,.94469,.90527,.8675,.86128,.8675,.86128,.8675,.86128,.73834,.8457,.73834,.8457,.73834,.8457,.73834,.8457,.85193,.92454,.86477,.9921,.73206,.89464,.73206,.89464,.73206,.89464,.73206,.89464,.73206,.89464,.81105,.84636,.81105,.84636,.81105,.84636,1,1,.86275,.94469,.90872,.95786,.90685,.82601,.90685,.82601,.90685,.82601,.90685,1.03297,.90685,.82601,.77741,1.05611,.6377,1.07692,1,1,.90918,.75593,1.03297,1,1,.76032,.90452,.98156,1.11842,.77261,1.11429,.89385,.94469,1,1,.89385,.94469,.95877,.86901,.94469,.85122,.9482,.85122,.9482,.85122,.9482,.8667,.90016,.75186,1.04692,1,1,.75186,1.04692,.68887,.78223,.68887,.78223,.68887,.78223,.68887,.78223,1,1,.79776,.92188,.79776,1.23023,.88844,.94469,.88844,.94469,.88844,.94469,.88844,.94469,.88844,.94469,.88844,.94469,.94258,.98986,.7306,.90527,.7306,.76659,.79004,.76659,.79004,.76659,.79004,1.09231,.54873,.8675,.86128,.76318,.8693,.85311,.86651,1,1,.79776,1.20562,1.18622,1.18622,1,1.1437,.67742,.96334,.93695,1.35191,1.40909,.95161,1.48387,.86686,.90861,.62267,.74359,.65649,.85498,.56963,.88254,1.23516,.8675,.81552,.75443,.84503,.73206,.76659,.86275,.85122,.90685,.77892,.85746,1.02638,.89385,.75657,.85122,.86275,.77452,.74171,.79776,.7306,.95165,.77818,.89772,.88831,.90685,.7306,.98142,1.02191,.96576,1.23516,.99018,.98142,.9236,.89258,.94035,1.02191,.78848,.96576,.9561,1.23516,.90918,.92578,.95424,.89746,.83969,.9482,.80113,.89442,.85208,.86155,.98022,.99018,1.00452,.81209,.99247,.89181,1.23516,.99018,.9482,.99018,.89181,.73206,1,1,1,1,1,1,1,1,1,1,1,1,.88844,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.89464,1,1,1,1,1,1,1,1,1,1,1,1,.96766,1,1,1,1,1,1,.94258,.98986,.94258,.98986,.94258,.98986,.7306,.90527,1,1,.89552,.90527,1,.90186,1.12308,1.12308,1.12308,1.12308,1.2566,1.2566,1.2566,.89552,.89552,1.42259,.69043,1.03809,1,1,1.0176,1.0176,1.11523,1.4956,2.01462,.99331,.82616,.91133,.84286,.91133,1,1,1,.70508,1,1.23108,.79801,.84426,.84426,.774,.90527,1.81055,.90527,1.81055,1.28809,1.55469,.94434,1.07806,1,.97094,.7589,.85284,.90747,1.19658,.69825,.97622,1.33512,.90747,.90747,.85356,.90747,.90747,1.44947,.85284,.8941,.8941,.70572,.8,.70572,.70572,.70572,.70572,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.99862,.99862,1,1,1,1,1,1.0336,.91027,1,1,1,.99862,1,1,1,1,1,1,1,1,1,1,1,1,1.05859,1.05859,1,1,1,1.07185,.99413,.96334,1.08065,1,1,1,1,1,1,1,1,1,1,1];const CalibriRegularMetrics={lineHeight:1.2207,lineGap:.2207};const HelveticaBoldFactors=[.76116,1,1,1.0006,.99998,.99974,.99973,.99973,.99982,.99977,1.00087,.99998,.99998,.99959,1.00003,1.0006,.99998,1.0006,1.0006,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99998,1,1.00003,1.00003,1.00003,1.00026,.9999,.99977,.99977,.99977,.99977,1.00001,1.00026,1.00022,.99977,1.0006,.99973,.99977,1.00026,.99999,.99977,1.00022,1.00001,1.00022,.99977,1.00001,1.00026,.99977,1.00001,1.00016,1.00001,1.00001,1.00026,.99998,1.0006,.99998,1.00003,.99973,.99998,.99973,1.00026,.99973,1.00026,.99973,.99998,1.00026,1.00026,1.0006,1.0006,.99973,1.0006,.99982,1.00026,1.00026,1.00026,1.00026,.99959,.99973,.99998,1.00026,.99973,1.00022,.99973,.99973,1,.99959,1.00077,.99959,1.00003,.99998,.99973,.99973,.99973,.99973,1.00077,.99973,.99998,1.00025,.99968,.99973,1.00003,1.00025,.60299,1.00024,1.06409,1,1,.99998,1,.99973,1.0006,.99998,1,.99936,.99973,1.00002,1.00002,1.00002,1.00026,.99977,.99977,.99977,.99977,.99977,.99977,1,.99977,1.00001,1.00001,1.00001,1.00001,1.0006,1.0006,1.0006,1.0006,.99977,.99977,1.00022,1.00022,1.00022,1.00022,1.00022,1.00003,1.00022,.99977,.99977,.99977,.99977,1.00001,1.00001,1.00026,.99973,.99973,.99973,.99973,.99973,.99973,.99982,.99973,.99973,.99973,.99973,.99973,1.0006,1.0006,1.0006,1.0006,1.00026,1.00026,1.00026,1.00026,1.00026,1.00026,1.00026,1.06409,1.00026,1.00026,1.00026,1.00026,1.00026,.99973,1.00026,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,1.03374,.99977,1.00026,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00022,1.00026,1.00022,1.00026,1.00022,1.00026,1.00022,1.00026,.99977,1.00026,.99977,1.00026,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,1.00042,.99973,.99973,1.0006,.99977,.99973,.99973,1.00026,1.0006,1.00026,1.0006,1.00026,1.03828,1.00026,.99999,1.00026,1.0006,.99977,1.00026,.99977,1.00026,.99977,1.00026,.9993,.9998,1.00026,1.00022,1.00026,1.00022,1.00026,1.00022,1.00026,1,1.00016,.99977,.99959,.99977,.99959,.99977,.99959,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00026,.99998,1.00026,.8121,1.00026,.99998,.99977,1.00026,.99977,1.00026,.99977,1.00026,.99977,1.00026,.99977,1.00026,.99977,1.00026,1.00016,1.00022,1.00001,.99973,1.00001,1.00026,1,1.00026,1,1.00026,1,1.0006,.99973,.99977,.99973,1,.99982,1.00022,1.00026,1.00001,.99973,1.00026,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,1.00034,.99977,1,.99997,1.00026,1.00078,1.00036,.99973,1.00013,1.0006,.99977,.99977,.99988,.85148,1.00001,1.00026,.99977,1.00022,1.0006,.99977,1.00001,.99999,.99977,1.00069,1.00022,.99977,1.00001,.99984,1.00026,1.00001,1.00024,1.00001,.9999,1,1.0006,1.00001,1.00041,.99962,1.00026,1.0006,.99995,1.00041,.99942,.99973,.99927,1.00082,.99902,1.00026,1.00087,1.0006,1.00069,.99973,.99867,.99973,.9993,1.00026,1.00049,1.00056,1,.99988,.99935,.99995,.99954,1.00055,.99945,1.00032,1.0006,.99995,1.00026,.99995,1.00032,1.00001,1.00008,.99971,1.00019,.9994,1.00001,1.0006,1.00044,.99973,1.00023,1.00047,1,.99942,.99561,.99989,1.00035,.99977,1.00035,.99977,1.00019,.99944,1.00001,1.00021,.99926,1.00035,1.00035,.99942,1.00048,.99999,.99977,1.00022,1.00035,1.00001,.99977,1.00026,.99989,1.00057,1.00001,.99936,1.00052,1.00012,.99996,1.00043,1,1.00035,.9994,.99976,1.00035,.99973,1.00052,1.00041,1.00119,1.00037,.99973,1.00002,.99986,1.00041,1.00041,.99902,.9996,1.00034,.99999,1.00026,.99999,1.00026,.99973,1.00052,.99973,1,.99973,1.00041,1.00075,.9994,1.0003,.99999,1,1.00041,.99955,1,.99915,.99973,.99973,1.00026,1.00119,.99955,.99973,1.0006,.99911,1.0006,1.00026,.99972,1.00026,.99902,1.00041,.99973,.99999,1,1,1.00038,1.0005,1.00016,1.00022,1.00016,1.00022,1.00016,1.00022,1.00001,.99973,1,1,.99973,1,1,.99955,1.0006,1.0006,1.0006,1.0006,1,1,1,.99973,.99973,.99972,1,1,1.00106,.99999,.99998,.99998,.99999,.99998,1.66475,1,.99973,.99973,1.00023,.99973,.99971,1.00047,1.00023,1,.99991,.99984,1.00002,1.00002,1.00002,1.00002,1,1,1,1,1,1,1,.99972,1,1.20985,1.39713,1.00003,1.00031,1.00015,1,.99561,1.00027,1.00031,1.00031,.99915,1.00031,1.00031,.99999,1.00003,.99999,.99999,1.41144,1.6,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.40579,1.40579,1.36625,.99999,1,.99861,.99861,1,1.00026,1.00026,1.00026,1.00026,.99972,.99999,.99999,.99999,.99999,1.40483,1,.99977,1.00054,1,1,.99953,.99962,1.00042,.9995,1,1,1,1,1,1,1,1,.99998,.99998,.99998,.99998,1,1,1,1,1,1,1,1,1,1,1];const HelveticaBoldMetrics={lineHeight:1.2,lineGap:.2};const HelveticaBoldItalicFactors=[.76116,1,1,1.0006,.99998,.99974,.99973,.99973,.99982,.99977,1.00087,.99998,.99998,.99959,1.00003,1.0006,.99998,1.0006,1.0006,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99998,1,1.00003,1.00003,1.00003,1.00026,.9999,.99977,.99977,.99977,.99977,1.00001,1.00026,1.00022,.99977,1.0006,.99973,.99977,1.00026,.99999,.99977,1.00022,1.00001,1.00022,.99977,1.00001,1.00026,.99977,1.00001,1.00016,1.00001,1.00001,1.00026,.99998,1.0006,.99998,1.00003,.99973,.99998,.99973,1.00026,.99973,1.00026,.99973,.99998,1.00026,1.00026,1.0006,1.0006,.99973,1.0006,.99982,1.00026,1.00026,1.00026,1.00026,.99959,.99973,.99998,1.00026,.99973,1.00022,.99973,.99973,1,.99959,1.00077,.99959,1.00003,.99998,.99973,.99973,.99973,.99973,1.00077,.99973,.99998,1.00025,.99968,.99973,1.00003,1.00025,.60299,1.00024,1.06409,1,1,.99998,1,.99973,1.0006,.99998,1,.99936,.99973,1.00002,1.00002,1.00002,1.00026,.99977,.99977,.99977,.99977,.99977,.99977,1,.99977,1.00001,1.00001,1.00001,1.00001,1.0006,1.0006,1.0006,1.0006,.99977,.99977,1.00022,1.00022,1.00022,1.00022,1.00022,1.00003,1.00022,.99977,.99977,.99977,.99977,1.00001,1.00001,1.00026,.99973,.99973,.99973,.99973,.99973,.99973,.99982,.99973,.99973,.99973,.99973,.99973,1.0006,1.0006,1.0006,1.0006,1.00026,1.00026,1.00026,1.00026,1.00026,1.00026,1.00026,1.06409,1.00026,1.00026,1.00026,1.00026,1.00026,.99973,1.00026,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,1.0044,.99977,1.00026,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00022,1.00026,1.00022,1.00026,1.00022,1.00026,1.00022,1.00026,.99977,1.00026,.99977,1.00026,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,.99971,.99973,.99973,1.0006,.99977,.99973,.99973,1.00026,1.0006,1.00026,1.0006,1.00026,1.01011,1.00026,.99999,1.00026,1.0006,.99977,1.00026,.99977,1.00026,.99977,1.00026,.9993,.9998,1.00026,1.00022,1.00026,1.00022,1.00026,1.00022,1.00026,1,1.00016,.99977,.99959,.99977,.99959,.99977,.99959,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00026,.99998,1.00026,.8121,1.00026,.99998,.99977,1.00026,.99977,1.00026,.99977,1.00026,.99977,1.00026,.99977,1.00026,.99977,1.00026,1.00016,1.00022,1.00001,.99973,1.00001,1.00026,1,1.00026,1,1.00026,1,1.0006,.99973,.99977,.99973,1,.99982,1.00022,1.00026,1.00001,.99973,1.00026,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99977,1,1,1.00026,.99969,.99972,.99981,.9998,1.0006,.99977,.99977,1.00022,.91155,1.00001,1.00026,.99977,1.00022,1.0006,.99977,1.00001,.99999,.99977,.99966,1.00022,1.00032,1.00001,.99944,1.00026,1.00001,.99968,1.00001,1.00047,1,1.0006,1.00001,.99981,1.00101,1.00026,1.0006,.99948,.99981,1.00064,.99973,.99942,1.00101,1.00061,1.00026,1.00069,1.0006,1.00014,.99973,1.01322,.99973,1.00065,1.00026,1.00012,.99923,1,1.00064,1.00076,.99948,1.00055,1.00063,1.00007,.99943,1.0006,.99948,1.00026,.99948,.99943,1.00001,1.00001,1.00029,1.00038,1.00035,1.00001,1.0006,1.0006,.99973,.99978,1.00001,1.00057,.99989,.99967,.99964,.99967,.99977,.99999,.99977,1.00038,.99977,1.00001,.99973,1.00066,.99967,.99967,1.00041,.99998,.99999,.99977,1.00022,.99967,1.00001,.99977,1.00026,.99964,1.00031,1.00001,.99999,.99999,1,1.00023,1,1,.99999,1.00035,1.00001,.99999,.99973,.99977,.99999,1.00058,.99973,.99973,.99955,.9995,1.00026,1.00026,1.00032,.99989,1.00034,.99999,1.00026,1.00026,1.00026,.99973,.45998,.99973,1.00026,.99973,1.00001,.99999,.99982,.99994,.99996,1,1.00042,1.00044,1.00029,1.00023,.99973,.99973,1.00026,.99949,1.00002,.99973,1.0006,1.0006,1.0006,.99975,1.00026,1.00026,1.00032,.98685,.99973,1.00026,1,1,.99966,1.00044,1.00016,1.00022,1.00016,1.00022,1.00016,1.00022,1.00001,.99973,1,1,.99973,1,1,.99955,1.0006,1.0006,1.0006,1.0006,1,1,1,.99973,.99973,.99972,1,1,1.00106,.99999,.99998,.99998,.99999,.99998,1.66475,1,.99973,.99973,1,.99973,.99971,.99978,1,1,.99991,.99984,1.00002,1.00002,1.00002,1.00002,1.00098,1,1,1,1.00049,1,1,.99972,1,1.20985,1.39713,1.00003,1.00031,1.00015,1,.99561,1.00027,1.00031,1.00031,.99915,1.00031,1.00031,.99999,1.00003,.99999,.99999,1.41144,1.6,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.40579,1.40579,1.36625,.99999,1,.99861,.99861,1,1.00026,1.00026,1.00026,1.00026,.99972,.99999,.99999,.99999,.99999,1.40483,1,.99977,1.00054,1,1,.99953,.99962,1.00042,.9995,1,1,1,1,1,1,1,1,.99998,.99998,.99998,.99998,1,1,1,1,1,1,1,1,1,1,1];const HelveticaBoldItalicMetrics={lineHeight:1.35,lineGap:.2};const HelveticaItalicFactors=[.76116,1,1,1.0006,1.0006,1.00006,.99973,.99973,.99982,1.00001,1.00043,.99998,.99998,.99959,1.00003,1.0006,.99998,1.0006,1.0006,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99973,1.0006,1,1.00003,1.00003,1.00003,.99973,.99987,1.00001,1.00001,.99977,.99977,1.00001,1.00026,1.00022,.99977,1.0006,1,1.00001,.99973,.99999,.99977,1.00022,1.00001,1.00022,.99977,1.00001,1.00026,.99977,1.00001,1.00016,1.00001,1.00001,1.00026,1.0006,1.0006,1.0006,.99949,.99973,.99998,.99973,.99973,1,.99973,.99973,1.0006,.99973,.99973,.99924,.99924,1,.99924,.99999,.99973,.99973,.99973,.99973,.99998,1,1.0006,.99973,1,.99977,1,1,1,1.00005,1.0009,1.00005,1.00003,.99998,.99973,.99973,.99973,.99973,1.0009,.99973,.99998,1.00025,.99968,.99973,1.00003,1.00025,.60299,1.00024,1.06409,1,1,.99998,1,.9998,1.0006,.99998,1,.99936,.99973,1.00002,1.00002,1.00002,1.00026,1.00001,1.00001,1.00001,1.00001,1.00001,1.00001,1,.99977,1.00001,1.00001,1.00001,1.00001,1.0006,1.0006,1.0006,1.0006,.99977,.99977,1.00022,1.00022,1.00022,1.00022,1.00022,1.00003,1.00022,.99977,.99977,.99977,.99977,1.00001,1.00001,1.00026,.99973,.99973,.99973,.99973,.99973,.99973,.99982,1,.99973,.99973,.99973,.99973,1.0006,1.0006,1.0006,1.0006,.99973,.99973,.99973,.99973,.99973,.99973,.99973,1.06409,1.00026,.99973,.99973,.99973,.99973,1,.99973,1,1.00001,.99973,1.00001,.99973,1.00001,.99973,.99977,1,.99977,1,.99977,1,.99977,1,.99977,1.0288,.99977,.99973,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00022,.99973,1.00022,.99973,1.00022,.99973,1.00022,.99973,.99977,.99973,.99977,.99973,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,.99924,1.0006,1.0006,.99946,1.00034,1,.99924,1.00001,1,1,.99973,.99924,.99973,.99924,.99973,1.06311,.99973,1.00024,.99973,.99924,.99977,.99973,.99977,.99973,.99977,.99973,1.00041,.9998,.99973,1.00022,.99973,1.00022,.99973,1.00022,.99973,1,1.00016,.99977,.99998,.99977,.99998,.99977,.99998,1.00001,1,1.00001,1,1.00001,1,1.00001,1,1.00026,1.0006,1.00026,.89547,1.00026,1.0006,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,1.00016,.99977,1.00001,1,1.00001,1.00026,1,1.00026,1,1.00026,1,.99924,.99973,1.00001,.99973,1,.99982,1.00022,1.00026,1.00001,1,1.00026,1.0006,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,1.00001,1,1.00054,.99977,1.00084,1.00007,.99973,1.00013,.99924,1.00001,1.00001,.99945,.91221,1.00001,1.00026,.99977,1.00022,1.0006,1.00001,1.00001,.99999,.99977,.99933,1.00022,1.00054,1.00001,1.00065,1.00026,1.00001,1.0001,1.00001,1.00052,1,1.0006,1.00001,.99945,.99897,.99968,.99924,1.00036,.99945,.99949,1,1.0006,.99897,.99918,.99968,.99911,.99924,1,.99962,1.01487,1,1.0005,.99973,1.00012,1.00043,1,.99995,.99994,1.00036,.99947,1.00019,1.00063,1.00025,.99924,1.00036,.99973,1.00036,1.00025,1.00001,1.00001,1.00027,1.0001,1.00068,1.00001,1.0006,1.0006,1,1.00008,.99957,.99972,.9994,.99954,.99975,1.00051,1.00001,1.00019,1.00001,1.0001,.99986,1.00001,1.00001,1.00038,.99954,.99954,.9994,1.00066,.99999,.99977,1.00022,1.00054,1.00001,.99977,1.00026,.99975,1.0001,1.00001,.99993,.9995,.99955,1.00016,.99978,.99974,1.00019,1.00022,.99955,1.00053,.99973,1.00089,1.00005,.99967,1.00048,.99973,1.00002,1.00034,.99973,.99973,.99964,1.00006,1.00066,.99947,.99973,.98894,.99973,1,.44898,1,.99946,1,1.00039,1.00082,.99991,.99991,.99985,1.00022,1.00023,1.00061,1.00006,.99966,.99973,.99973,.99973,1.00019,1.0008,1,.99924,.99924,.99924,.99983,1.00044,.99973,.99964,.98332,1,.99973,1,1,.99962,.99895,1.00016,.99977,1.00016,.99977,1.00016,.99977,1.00001,1,1,1,.99973,1,1,.99955,.99924,.99924,.99924,.99924,.99998,.99998,.99998,.99973,.99973,.99972,1,1,1.00267,.99999,.99998,.99998,1,.99998,1.66475,1,.99973,.99973,1.00023,.99973,1.00423,.99925,.99999,1,.99991,.99984,1.00002,1.00002,1.00002,1.00002,1.00049,1,1.00245,1,1,1,1,.96329,1,1.20985,1.39713,1.00003,.8254,1.00015,1,1.00035,1.00027,1.00031,1.00031,1.00003,1.00031,1.00031,.99999,1.00003,.99999,.99999,1.41144,1.6,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.40579,1.40579,1.36625,.99999,1,.99861,.99861,1,1.00026,1.00026,1.00026,1.00026,.95317,.99999,.99999,.99999,.99999,1.40483,1,.99977,1.00054,1,1,.99953,.99962,1.00042,.9995,1,1,1,1,1,1,1,1,.99998,.99998,.99998,.99998,1,1,1,1,1,1,1,1,1,1,1];const HelveticaItalicMetrics={lineHeight:1.35,lineGap:.2};const HelveticaRegularFactors=[.76116,1,1,1.0006,1.0006,1.00006,.99973,.99973,.99982,1.00001,1.00043,.99998,.99998,.99959,1.00003,1.0006,.99998,1.0006,1.0006,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99973,.99973,1.0006,1,1.00003,1.00003,1.00003,.99973,.99987,1.00001,1.00001,.99977,.99977,1.00001,1.00026,1.00022,.99977,1.0006,1,1.00001,.99973,.99999,.99977,1.00022,1.00001,1.00022,.99977,1.00001,1.00026,.99977,1.00001,1.00016,1.00001,1.00001,1.00026,1.0006,1.0006,1.0006,.99949,.99973,.99998,.99973,.99973,1,.99973,.99973,1.0006,.99973,.99973,.99924,.99924,1,.99924,.99999,.99973,.99973,.99973,.99973,.99998,1,1.0006,.99973,1,.99977,1,1,1,1.00005,1.0009,1.00005,1.00003,.99998,.99973,.99973,.99973,.99973,1.0009,.99973,.99998,1.00025,.99968,.99973,1.00003,1.00025,.60299,1.00024,1.06409,1,1,.99998,1,.9998,1.0006,.99998,1,.99936,.99973,1.00002,1.00002,1.00002,1.00026,1.00001,1.00001,1.00001,1.00001,1.00001,1.00001,1,.99977,1.00001,1.00001,1.00001,1.00001,1.0006,1.0006,1.0006,1.0006,.99977,.99977,1.00022,1.00022,1.00022,1.00022,1.00022,1.00003,1.00022,.99977,.99977,.99977,.99977,1.00001,1.00001,1.00026,.99973,.99973,.99973,.99973,.99973,.99973,.99982,1,.99973,.99973,.99973,.99973,1.0006,1.0006,1.0006,1.0006,.99973,.99973,.99973,.99973,.99973,.99973,.99973,1.06409,1.00026,.99973,.99973,.99973,.99973,1,.99973,1,1.00001,.99973,1.00001,.99973,1.00001,.99973,.99977,1,.99977,1,.99977,1,.99977,1,.99977,1.04596,.99977,.99973,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00001,.99973,1.00022,.99973,1.00022,.99973,1.00022,.99973,1.00022,.99973,.99977,.99973,.99977,.99973,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,1.0006,.99924,1.0006,1.0006,1.00019,1.00034,1,.99924,1.00001,1,1,.99973,.99924,.99973,.99924,.99973,1.02572,.99973,1.00005,.99973,.99924,.99977,.99973,.99977,.99973,.99977,.99973,.99999,.9998,.99973,1.00022,.99973,1.00022,.99973,1.00022,.99973,1,1.00016,.99977,.99998,.99977,.99998,.99977,.99998,1.00001,1,1.00001,1,1.00001,1,1.00001,1,1.00026,1.0006,1.00026,.84533,1.00026,1.0006,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,.99977,.99973,1.00016,.99977,1.00001,1,1.00001,1.00026,1,1.00026,1,1.00026,1,.99924,.99973,1.00001,.99973,1,.99982,1.00022,1.00026,1.00001,1,1.00026,1.0006,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99998,.99928,1,.99977,1.00013,1.00055,.99947,.99945,.99941,.99924,1.00001,1.00001,1.0004,.91621,1.00001,1.00026,.99977,1.00022,1.0006,1.00001,1.00005,.99999,.99977,1.00015,1.00022,.99977,1.00001,.99973,1.00026,1.00001,1.00019,1.00001,.99946,1,1.0006,1.00001,.99978,1.00045,.99973,.99924,1.00023,.99978,.99966,1,1.00065,1.00045,1.00019,.99973,.99973,.99924,1,1,.96499,1,1.00055,.99973,1.00008,1.00027,1,.9997,.99995,1.00023,.99933,1.00019,1.00015,1.00031,.99924,1.00023,.99973,1.00023,1.00031,1.00001,.99928,1.00029,1.00092,1.00035,1.00001,1.0006,1.0006,1,.99988,.99975,1,1.00082,.99561,.9996,1.00035,1.00001,.99962,1.00001,1.00092,.99964,1.00001,.99963,.99999,1.00035,1.00035,1.00082,.99962,.99999,.99977,1.00022,1.00035,1.00001,.99977,1.00026,.9996,.99967,1.00001,1.00034,1.00074,1.00054,1.00053,1.00063,.99971,.99962,1.00035,.99975,.99977,.99973,1.00043,.99953,1.0007,.99915,.99973,1.00008,.99892,1.00073,1.00073,1.00114,.99915,1.00073,.99955,.99973,1.00092,.99973,1,.99998,1,1.0003,1,1.00043,1.00001,.99969,1.0003,1,1.00035,1.00001,.9995,1,1.00092,.99973,.99973,.99973,1.0007,.9995,1,.99924,1.0006,.99924,.99972,1.00062,.99973,1.00114,1.00073,1,.99955,1,1,1.00047,.99968,1.00016,.99977,1.00016,.99977,1.00016,.99977,1.00001,1,1,1,.99973,1,1,.99955,.99924,.99924,.99924,.99924,.99998,.99998,.99998,.99973,.99973,.99972,1,1,1.00267,.99999,.99998,.99998,1,.99998,1.66475,1,.99973,.99973,1.00023,.99973,.99971,.99925,1.00023,1,.99991,.99984,1.00002,1.00002,1.00002,1.00002,1,1,1,1,1,1,1,.96329,1,1.20985,1.39713,1.00003,.8254,1.00015,1,1.00035,1.00027,1.00031,1.00031,.99915,1.00031,1.00031,.99999,1.00003,.99999,.99999,1.41144,1.6,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.41144,1.40579,1.40579,1.36625,.99999,1,.99861,.99861,1,1.00026,1.00026,1.00026,1.00026,.95317,.99999,.99999,.99999,.99999,1.40483,1,.99977,1.00054,1,1,.99953,.99962,1.00042,.9995,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];const HelveticaRegularMetrics={lineHeight:1.2,lineGap:.2};const LiberationSansBoldWidths=[365,0,333,278,333,474,556,556,889,722,238,333,333,389,584,278,333,278,278,556,556,556,556,556,556,556,556,556,556,333,333,584,584,584,611,975,722,722,722,722,667,611,778,722,278,556,722,611,833,722,778,667,778,722,667,611,722,667,944,667,667,611,333,278,333,584,556,333,556,611,556,611,556,333,611,611,278,278,556,278,889,611,611,611,611,389,556,333,611,556,778,556,556,500,389,280,389,584,333,556,556,556,556,280,556,333,737,370,556,584,737,552,400,549,333,333,333,576,556,278,333,333,365,556,834,834,834,611,722,722,722,722,722,722,1e3,722,667,667,667,667,278,278,278,278,722,722,778,778,778,778,778,584,778,722,722,722,722,667,667,611,556,556,556,556,556,556,889,556,556,556,556,556,278,278,278,278,611,611,611,611,611,611,611,549,611,611,611,611,611,556,611,556,722,556,722,556,722,556,722,556,722,556,722,556,722,556,722,719,722,611,667,556,667,556,667,556,667,556,667,556,778,611,778,611,778,611,778,611,722,611,722,611,278,278,278,278,278,278,278,278,278,278,785,556,556,278,722,556,556,611,278,611,278,611,385,611,479,611,278,722,611,722,611,722,611,708,723,611,778,611,778,611,778,611,1e3,944,722,389,722,389,722,389,667,556,667,556,667,556,667,556,611,333,611,479,611,333,722,611,722,611,722,611,722,611,722,611,722,611,944,778,667,556,667,611,500,611,500,611,500,278,556,722,556,1e3,889,778,611,667,556,611,333,333,333,333,333,333,333,333,333,333,333,465,722,333,853,906,474,825,927,838,278,722,722,601,719,667,611,722,778,278,722,667,833,722,644,778,722,667,600,611,667,821,667,809,802,278,667,615,451,611,278,582,615,610,556,606,475,460,611,541,278,558,556,612,556,445,611,766,619,520,684,446,582,715,576,753,845,278,582,611,582,845,667,669,885,567,711,667,278,276,556,1094,1062,875,610,722,622,719,722,719,722,567,712,667,904,626,719,719,610,702,833,722,778,719,667,722,611,622,854,667,730,703,1005,1019,870,979,719,711,1031,719,556,618,615,417,635,556,709,497,615,615,500,635,740,604,611,604,611,556,490,556,875,556,615,581,833,844,729,854,615,552,854,583,556,556,611,417,552,556,278,281,278,969,906,611,500,615,556,604,778,611,487,447,944,778,944,778,944,778,667,556,333,333,556,1e3,1e3,552,278,278,278,278,500,500,500,556,556,350,1e3,1e3,240,479,333,333,604,333,167,396,556,556,1094,556,885,489,1115,1e3,768,600,834,834,834,834,1e3,500,1e3,500,1e3,500,500,494,612,823,713,584,549,713,979,722,274,549,549,583,549,549,604,584,604,604,708,625,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,729,604,604,354,354,1e3,990,990,990,990,494,604,604,604,604,354,1021,1052,917,750,750,531,656,594,510,500,750,750,611,611,333,333,333,333,333,333,333,333,222,222,333,333,333,333,333,333,333,333];const LiberationSansBoldMapping=[-1,-1,-1,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,402,506,507,508,509,510,511,536,537,538,539,710,711,713,728,729,730,731,732,733,900,901,902,903,904,905,906,908,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1138,1139,1168,1169,7808,7809,7810,7811,7812,7813,7922,7923,8208,8209,8211,8212,8213,8215,8216,8217,8218,8219,8220,8221,8222,8224,8225,8226,8230,8240,8242,8243,8249,8250,8252,8254,8260,8319,8355,8356,8359,8364,8453,8467,8470,8482,8486,8494,8539,8540,8541,8542,8592,8593,8594,8595,8596,8597,8616,8706,8710,8719,8721,8722,8730,8734,8735,8745,8747,8776,8800,8801,8804,8805,8962,8976,8992,8993,9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9600,9604,9608,9612,9616,9617,9618,9619,9632,9633,9642,9643,9644,9650,9658,9660,9668,9674,9675,9679,9688,9689,9702,9786,9787,9788,9792,9794,9824,9827,9829,9830,9834,9835,9836,61441,61442,61445,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];const LiberationSansBoldItalicWidths=[365,0,333,278,333,474,556,556,889,722,238,333,333,389,584,278,333,278,278,556,556,556,556,556,556,556,556,556,556,333,333,584,584,584,611,975,722,722,722,722,667,611,778,722,278,556,722,611,833,722,778,667,778,722,667,611,722,667,944,667,667,611,333,278,333,584,556,333,556,611,556,611,556,333,611,611,278,278,556,278,889,611,611,611,611,389,556,333,611,556,778,556,556,500,389,280,389,584,333,556,556,556,556,280,556,333,737,370,556,584,737,552,400,549,333,333,333,576,556,278,333,333,365,556,834,834,834,611,722,722,722,722,722,722,1e3,722,667,667,667,667,278,278,278,278,722,722,778,778,778,778,778,584,778,722,722,722,722,667,667,611,556,556,556,556,556,556,889,556,556,556,556,556,278,278,278,278,611,611,611,611,611,611,611,549,611,611,611,611,611,556,611,556,722,556,722,556,722,556,722,556,722,556,722,556,722,556,722,740,722,611,667,556,667,556,667,556,667,556,667,556,778,611,778,611,778,611,778,611,722,611,722,611,278,278,278,278,278,278,278,278,278,278,782,556,556,278,722,556,556,611,278,611,278,611,396,611,479,611,278,722,611,722,611,722,611,708,723,611,778,611,778,611,778,611,1e3,944,722,389,722,389,722,389,667,556,667,556,667,556,667,556,611,333,611,479,611,333,722,611,722,611,722,611,722,611,722,611,722,611,944,778,667,556,667,611,500,611,500,611,500,278,556,722,556,1e3,889,778,611,667,556,611,333,333,333,333,333,333,333,333,333,333,333,333,722,333,854,906,473,844,930,847,278,722,722,610,671,667,611,722,778,278,722,667,833,722,657,778,718,667,590,611,667,822,667,829,781,278,667,620,479,611,278,591,620,621,556,610,479,492,611,558,278,566,556,603,556,450,611,712,605,532,664,409,591,704,578,773,834,278,591,611,591,834,667,667,886,614,719,667,278,278,556,1094,1042,854,622,719,677,719,722,708,722,614,722,667,927,643,719,719,615,687,833,722,778,719,667,722,611,677,781,667,729,708,979,989,854,1e3,708,719,1042,729,556,619,604,534,618,556,736,510,611,611,507,622,740,604,611,611,611,556,889,556,885,556,646,583,889,935,707,854,594,552,865,589,556,556,611,469,563,556,278,278,278,969,906,611,507,619,556,611,778,611,575,467,944,778,944,778,944,778,667,556,333,333,556,1e3,1e3,552,278,278,278,278,500,500,500,556,556,350,1e3,1e3,240,479,333,333,604,333,167,396,556,556,1104,556,885,516,1146,1e3,768,600,834,834,834,834,999,500,1e3,500,1e3,500,500,494,612,823,713,584,549,713,979,722,274,549,549,583,549,549,604,584,604,604,708,625,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,729,604,604,354,354,1e3,990,990,990,990,494,604,604,604,604,354,1021,1052,917,750,750,531,656,594,510,500,750,750,611,611,333,333,333,333,333,333,333,333,222,222,333,333,333,333,333,333,333,333];const LiberationSansBoldItalicMapping=[-1,-1,-1,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,402,506,507,508,509,510,511,536,537,538,539,710,711,713,728,729,730,731,732,733,900,901,902,903,904,905,906,908,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1138,1139,1168,1169,7808,7809,7810,7811,7812,7813,7922,7923,8208,8209,8211,8212,8213,8215,8216,8217,8218,8219,8220,8221,8222,8224,8225,8226,8230,8240,8242,8243,8249,8250,8252,8254,8260,8319,8355,8356,8359,8364,8453,8467,8470,8482,8486,8494,8539,8540,8541,8542,8592,8593,8594,8595,8596,8597,8616,8706,8710,8719,8721,8722,8730,8734,8735,8745,8747,8776,8800,8801,8804,8805,8962,8976,8992,8993,9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9600,9604,9608,9612,9616,9617,9618,9619,9632,9633,9642,9643,9644,9650,9658,9660,9668,9674,9675,9679,9688,9689,9702,9786,9787,9788,9792,9794,9824,9827,9829,9830,9834,9835,9836,61441,61442,61445,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];const LiberationSansItalicWidths=[365,0,333,278,278,355,556,556,889,667,191,333,333,389,584,278,333,278,278,556,556,556,556,556,556,556,556,556,556,278,278,584,584,584,556,1015,667,667,722,722,667,611,778,722,278,500,667,556,833,722,778,667,778,722,667,611,722,667,944,667,667,611,278,278,278,469,556,333,556,556,500,556,556,278,556,556,222,222,500,222,833,556,556,556,556,333,500,278,556,500,722,500,500,500,334,260,334,584,333,556,556,556,556,260,556,333,737,370,556,584,737,552,400,549,333,333,333,576,537,278,333,333,365,556,834,834,834,611,667,667,667,667,667,667,1e3,722,667,667,667,667,278,278,278,278,722,722,778,778,778,778,778,584,778,722,722,722,722,667,667,611,556,556,556,556,556,556,889,500,556,556,556,556,278,278,278,278,556,556,556,556,556,556,556,549,611,556,556,556,556,500,556,500,667,556,667,556,667,556,722,500,722,500,722,500,722,500,722,625,722,556,667,556,667,556,667,556,667,556,667,556,778,556,778,556,778,556,778,556,722,556,722,556,278,278,278,278,278,278,278,222,278,278,733,444,500,222,667,500,500,556,222,556,222,556,281,556,400,556,222,722,556,722,556,722,556,615,723,556,778,556,778,556,778,556,1e3,944,722,333,722,333,722,333,667,500,667,500,667,500,667,500,611,278,611,354,611,278,722,556,722,556,722,556,722,556,722,556,722,556,944,722,667,500,667,611,500,611,500,611,500,222,556,667,556,1e3,889,778,611,667,500,611,278,333,333,333,333,333,333,333,333,333,333,333,667,278,789,846,389,794,865,775,222,667,667,570,671,667,611,722,778,278,667,667,833,722,648,778,725,667,600,611,667,837,667,831,761,278,667,570,439,555,222,550,570,571,500,556,439,463,555,542,222,500,492,548,500,447,556,670,573,486,603,374,550,652,546,728,779,222,550,556,550,779,667,667,843,544,708,667,278,278,500,1066,982,844,589,715,639,724,667,651,667,544,704,667,917,614,715,715,589,686,833,722,778,725,667,722,611,639,795,667,727,673,920,923,805,886,651,694,1022,682,556,562,522,493,553,556,688,465,556,556,472,564,686,550,556,556,556,500,833,500,835,500,572,518,830,851,621,736,526,492,752,534,556,556,556,378,496,500,222,222,222,910,828,556,472,565,500,556,778,556,492,339,944,722,944,722,944,722,667,500,333,333,556,1e3,1e3,552,222,222,222,222,333,333,333,556,556,350,1e3,1e3,188,354,333,333,500,333,167,365,556,556,1094,556,885,323,1083,1e3,768,600,834,834,834,834,1e3,500,998,500,1e3,500,500,494,612,823,713,584,549,713,979,719,274,549,549,584,549,549,604,584,604,604,708,625,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,729,604,604,354,354,1e3,990,990,990,990,494,604,604,604,604,354,1021,1052,917,750,750,531,656,594,510,500,750,750,500,500,333,333,333,333,333,333,333,333,222,222,294,294,324,324,316,328,398,285];const LiberationSansItalicMapping=[-1,-1,-1,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,402,506,507,508,509,510,511,536,537,538,539,710,711,713,728,729,730,731,732,733,900,901,902,903,904,905,906,908,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1138,1139,1168,1169,7808,7809,7810,7811,7812,7813,7922,7923,8208,8209,8211,8212,8213,8215,8216,8217,8218,8219,8220,8221,8222,8224,8225,8226,8230,8240,8242,8243,8249,8250,8252,8254,8260,8319,8355,8356,8359,8364,8453,8467,8470,8482,8486,8494,8539,8540,8541,8542,8592,8593,8594,8595,8596,8597,8616,8706,8710,8719,8721,8722,8730,8734,8735,8745,8747,8776,8800,8801,8804,8805,8962,8976,8992,8993,9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9600,9604,9608,9612,9616,9617,9618,9619,9632,9633,9642,9643,9644,9650,9658,9660,9668,9674,9675,9679,9688,9689,9702,9786,9787,9788,9792,9794,9824,9827,9829,9830,9834,9835,9836,61441,61442,61445,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];const LiberationSansRegularWidths=[365,0,333,278,278,355,556,556,889,667,191,333,333,389,584,278,333,278,278,556,556,556,556,556,556,556,556,556,556,278,278,584,584,584,556,1015,667,667,722,722,667,611,778,722,278,500,667,556,833,722,778,667,778,722,667,611,722,667,944,667,667,611,278,278,278,469,556,333,556,556,500,556,556,278,556,556,222,222,500,222,833,556,556,556,556,333,500,278,556,500,722,500,500,500,334,260,334,584,333,556,556,556,556,260,556,333,737,370,556,584,737,552,400,549,333,333,333,576,537,278,333,333,365,556,834,834,834,611,667,667,667,667,667,667,1e3,722,667,667,667,667,278,278,278,278,722,722,778,778,778,778,778,584,778,722,722,722,722,667,667,611,556,556,556,556,556,556,889,500,556,556,556,556,278,278,278,278,556,556,556,556,556,556,556,549,611,556,556,556,556,500,556,500,667,556,667,556,667,556,722,500,722,500,722,500,722,500,722,615,722,556,667,556,667,556,667,556,667,556,667,556,778,556,778,556,778,556,778,556,722,556,722,556,278,278,278,278,278,278,278,222,278,278,735,444,500,222,667,500,500,556,222,556,222,556,292,556,334,556,222,722,556,722,556,722,556,604,723,556,778,556,778,556,778,556,1e3,944,722,333,722,333,722,333,667,500,667,500,667,500,667,500,611,278,611,375,611,278,722,556,722,556,722,556,722,556,722,556,722,556,944,722,667,500,667,611,500,611,500,611,500,222,556,667,556,1e3,889,778,611,667,500,611,278,333,333,333,333,333,333,333,333,333,333,333,667,278,784,838,384,774,855,752,222,667,667,551,668,667,611,722,778,278,667,668,833,722,650,778,722,667,618,611,667,798,667,835,748,278,667,578,446,556,222,547,578,575,500,557,446,441,556,556,222,500,500,576,500,448,556,690,569,482,617,395,547,648,525,713,781,222,547,556,547,781,667,667,865,542,719,667,278,278,500,1057,1010,854,583,722,635,719,667,656,667,542,677,667,923,604,719,719,583,656,833,722,778,719,667,722,611,635,760,667,740,667,917,938,792,885,656,719,1010,722,556,573,531,365,583,556,669,458,559,559,438,583,688,552,556,542,556,500,458,500,823,500,573,521,802,823,625,719,521,510,750,542,556,556,556,365,510,500,222,278,222,906,812,556,438,559,500,552,778,556,489,411,944,722,944,722,944,722,667,500,333,333,556,1e3,1e3,552,222,222,222,222,333,333,333,556,556,350,1e3,1e3,188,354,333,333,500,333,167,365,556,556,1094,556,885,323,1073,1e3,768,600,834,834,834,834,1e3,500,1e3,500,1e3,500,500,494,612,823,713,584,549,713,979,719,274,549,549,583,549,549,604,584,604,604,708,625,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,708,729,604,604,354,354,1e3,990,990,990,990,494,604,604,604,604,354,1021,1052,917,750,750,531,656,594,510,500,750,750,500,500,333,333,333,333,333,333,333,333,222,222,294,294,324,324,316,328,398,285];const LiberationSansRegularMapping=[-1,-1,-1,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,402,506,507,508,509,510,511,536,537,538,539,710,711,713,728,729,730,731,732,733,900,901,902,903,904,905,906,908,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1138,1139,1168,1169,7808,7809,7810,7811,7812,7813,7922,7923,8208,8209,8211,8212,8213,8215,8216,8217,8218,8219,8220,8221,8222,8224,8225,8226,8230,8240,8242,8243,8249,8250,8252,8254,8260,8319,8355,8356,8359,8364,8453,8467,8470,8482,8486,8494,8539,8540,8541,8542,8592,8593,8594,8595,8596,8597,8616,8706,8710,8719,8721,8722,8730,8734,8735,8745,8747,8776,8800,8801,8804,8805,8962,8976,8992,8993,9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9600,9604,9608,9612,9616,9617,9618,9619,9632,9633,9642,9643,9644,9650,9658,9660,9668,9674,9675,9679,9688,9689,9702,9786,9787,9788,9792,9794,9824,9827,9829,9830,9834,9835,9836,61441,61442,61445,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];const MyriadProBoldFactors=[1.36898,1,1,.72706,.80479,.83734,.98894,.99793,.9897,.93884,.86209,.94292,.94292,1.16661,1.02058,.93582,.96694,.93582,1.19137,.99793,.99793,.99793,.99793,.99793,.99793,.99793,.99793,.99793,.99793,.78076,.78076,1.02058,1.02058,1.02058,.72851,.78966,.90838,.83637,.82391,.96376,.80061,.86275,.8768,.95407,1.0258,.73901,.85022,.83655,1.0156,.95546,.92179,.87107,.92179,.82114,.8096,.89713,.94438,.95353,.94083,.91905,.90406,.9446,.94292,1.18777,.94292,1.02058,.89903,.90088,.94938,.97898,.81093,.97571,.94938,1.024,.9577,.95933,.98621,1.0474,.97455,.98981,.9672,.95933,.9446,.97898,.97407,.97646,.78036,1.10208,.95442,.95298,.97579,.9332,.94039,.938,.80687,1.01149,.80687,1.02058,.80479,.99793,.99793,.99793,.99793,1.01149,1.00872,.90088,.91882,1.0213,.8361,1.02058,.62295,.54324,.89022,1.08595,1,1,.90088,1,.97455,.93582,.90088,1,1.05686,.8361,.99642,.99642,.99642,.72851,.90838,.90838,.90838,.90838,.90838,.90838,.868,.82391,.80061,.80061,.80061,.80061,1.0258,1.0258,1.0258,1.0258,.97484,.95546,.92179,.92179,.92179,.92179,.92179,1.02058,.92179,.94438,.94438,.94438,.94438,.90406,.86958,.98225,.94938,.94938,.94938,.94938,.94938,.94938,.9031,.81093,.94938,.94938,.94938,.94938,.98621,.98621,.98621,.98621,.93969,.95933,.9446,.9446,.9446,.9446,.9446,1.08595,.9446,.95442,.95442,.95442,.95442,.94039,.97898,.94039,.90838,.94938,.90838,.94938,.90838,.94938,.82391,.81093,.82391,.81093,.82391,.81093,.82391,.81093,.96376,.84313,.97484,.97571,.80061,.94938,.80061,.94938,.80061,.94938,.80061,.94938,.80061,.94938,.8768,.9577,.8768,.9577,.8768,.9577,1,1,.95407,.95933,.97069,.95933,1.0258,.98621,1.0258,.98621,1.0258,.98621,1.0258,.98621,1.0258,.98621,.887,1.01591,.73901,1.0474,1,1,.97455,.83655,.98981,1,1,.83655,.73977,.83655,.73903,.84638,1.033,.95546,.95933,1,1,.95546,.95933,.8271,.95417,.95933,.92179,.9446,.92179,.9446,.92179,.9446,.936,.91964,.82114,.97646,1,1,.82114,.97646,.8096,.78036,.8096,.78036,1,1,.8096,.78036,1,1,.89713,.77452,.89713,1.10208,.94438,.95442,.94438,.95442,.94438,.95442,.94438,.95442,.94438,.95442,.94438,.95442,.94083,.97579,.90406,.94039,.90406,.9446,.938,.9446,.938,.9446,.938,1,.99793,.90838,.94938,.868,.9031,.92179,.9446,1,1,.89713,1.10208,.90088,.90088,.90088,.90088,.90088,.90088,.90088,.90088,.90088,.90989,.9358,.91945,.83181,.75261,.87992,.82976,.96034,.83689,.97268,1.0078,.90838,.83637,.8019,.90157,.80061,.9446,.95407,.92436,1.0258,.85022,.97153,1.0156,.95546,.89192,.92179,.92361,.87107,.96318,.89713,.93704,.95638,.91905,.91709,.92796,1.0258,.93704,.94836,1.0373,.95933,1.0078,.95871,.94836,.96174,.92601,.9498,.98607,.95776,.95933,1.05453,1.0078,.98275,.9314,.95617,.91701,1.05993,.9446,.78367,.9553,1,.86832,1.0128,.95871,.99394,.87548,.96361,.86774,1.0078,.95871,.9446,.95871,.86774,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.94083,.97579,.94083,.97579,.94083,.97579,.90406,.94039,.96694,1,.89903,1,1,1,.93582,.93582,.93582,1,.908,.908,.918,.94219,.94219,.96544,1,1.285,1,1,.81079,.81079,1,1,.74854,1,1,1,1,.99793,1,1,1,.65,1,1.36145,1,1,1,1,1,1,1,1,1,1,1,1.17173,1,.80535,.76169,1.02058,1.0732,1.05486,1,1,1.30692,1.08595,1.08595,1,1.08595,1.08595,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1.16161,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];const MyriadProBoldMetrics={lineHeight:1.2,lineGap:.2};const MyriadProBoldItalicFactors=[1.36898,1,1,.66227,.80779,.81625,.97276,.97276,.97733,.92222,.83266,.94292,.94292,1.16148,1.02058,.93582,.96694,.93582,1.17337,.97276,.97276,.97276,.97276,.97276,.97276,.97276,.97276,.97276,.97276,.78076,.78076,1.02058,1.02058,1.02058,.71541,.76813,.85576,.80591,.80729,.94299,.77512,.83655,.86523,.92222,.98621,.71743,.81698,.79726,.98558,.92222,.90637,.83809,.90637,.80729,.76463,.86275,.90699,.91605,.9154,.85308,.85458,.90531,.94292,1.21296,.94292,1.02058,.89903,1.18616,.99613,.91677,.78216,.91677,.90083,.98796,.9135,.92168,.95381,.98981,.95298,.95381,.93459,.92168,.91513,.92004,.91677,.95077,.748,1.04502,.91677,.92061,.94236,.89544,.89364,.9,.80687,.8578,.80687,1.02058,.80779,.97276,.97276,.97276,.97276,.8578,.99973,1.18616,.91339,1.08074,.82891,1.02058,.55509,.71526,.89022,1.08595,1,1,1.18616,1,.96736,.93582,1.18616,1,1.04864,.82711,.99043,.99043,.99043,.71541,.85576,.85576,.85576,.85576,.85576,.85576,.845,.80729,.77512,.77512,.77512,.77512,.98621,.98621,.98621,.98621,.95961,.92222,.90637,.90637,.90637,.90637,.90637,1.02058,.90251,.90699,.90699,.90699,.90699,.85458,.83659,.94951,.99613,.99613,.99613,.99613,.99613,.99613,.85811,.78216,.90083,.90083,.90083,.90083,.95381,.95381,.95381,.95381,.9135,.92168,.91513,.91513,.91513,.91513,.91513,1.08595,.91677,.91677,.91677,.91677,.91677,.89364,.92332,.89364,.85576,.99613,.85576,.99613,.85576,.99613,.80729,.78216,.80729,.78216,.80729,.78216,.80729,.78216,.94299,.76783,.95961,.91677,.77512,.90083,.77512,.90083,.77512,.90083,.77512,.90083,.77512,.90083,.86523,.9135,.86523,.9135,.86523,.9135,1,1,.92222,.92168,.92222,.92168,.98621,.95381,.98621,.95381,.98621,.95381,.98621,.95381,.98621,.95381,.86036,.97096,.71743,.98981,1,1,.95298,.79726,.95381,1,1,.79726,.6894,.79726,.74321,.81691,1.0006,.92222,.92168,1,1,.92222,.92168,.79464,.92098,.92168,.90637,.91513,.90637,.91513,.90637,.91513,.909,.87514,.80729,.95077,1,1,.80729,.95077,.76463,.748,.76463,.748,1,1,.76463,.748,1,1,.86275,.72651,.86275,1.04502,.90699,.91677,.90699,.91677,.90699,.91677,.90699,.91677,.90699,.91677,.90699,.91677,.9154,.94236,.85458,.89364,.85458,.90531,.9,.90531,.9,.90531,.9,1,.97276,.85576,.99613,.845,.85811,.90251,.91677,1,1,.86275,1.04502,1.18616,1.18616,1.18616,1.18616,1.18616,1.18616,1.18616,1.18616,1.18616,1.00899,1.30628,.85576,.80178,.66862,.7927,.69323,.88127,.72459,.89711,.95381,.85576,.80591,.7805,.94729,.77512,.90531,.92222,.90637,.98621,.81698,.92655,.98558,.92222,.85359,.90637,.90976,.83809,.94523,.86275,.83509,.93157,.85308,.83392,.92346,.98621,.83509,.92886,.91324,.92168,.95381,.90646,.92886,.90557,.86847,.90276,.91324,.86842,.92168,.99531,.95381,.9224,.85408,.92699,.86847,1.0051,.91513,.80487,.93481,1,.88159,1.05214,.90646,.97355,.81539,.89398,.85923,.95381,.90646,.91513,.90646,.85923,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.9154,.94236,.9154,.94236,.9154,.94236,.85458,.89364,.96694,1,.89903,1,1,1,.91782,.91782,.91782,1,.896,.896,.896,.9332,.9332,.95973,1,1.26,1,1,.80479,.80178,1,1,.85633,1,1,1,1,.97276,1,1,1,.698,1,1.36145,1,1,1,1,1,1,1,1,1,1,1,1.14542,1,.79199,.78694,1.02058,1.03493,1.05486,1,1,1.23026,1.08595,1.08595,1,1.08595,1.08595,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1.20006,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];const MyriadProBoldItalicMetrics={lineHeight:1.2,lineGap:.2};const MyriadProItalicFactors=[1.36898,1,1,.65507,.84943,.85639,.88465,.88465,.86936,.88307,.86948,.85283,.85283,1.06383,1.02058,.75945,.9219,.75945,1.17337,.88465,.88465,.88465,.88465,.88465,.88465,.88465,.88465,.88465,.88465,.75945,.75945,1.02058,1.02058,1.02058,.69046,.70926,.85158,.77812,.76852,.89591,.70466,.76125,.80094,.86822,.83864,.728,.77212,.79475,.93637,.87514,.8588,.76013,.8588,.72421,.69866,.77598,.85991,.80811,.87832,.78112,.77512,.8562,1.0222,1.18417,1.0222,1.27014,.89903,1.15012,.93859,.94399,.846,.94399,.81453,1.0186,.94219,.96017,1.03075,1.02175,.912,1.03075,.96998,.96017,.93859,.94399,.94399,.95493,.746,1.12658,.94578,.91,.979,.882,.882,.83,.85034,.83537,.85034,1.02058,.70869,.88465,.88465,.88465,.88465,.83537,.90083,1.15012,.9161,.94565,.73541,1.02058,.53609,.69353,.79519,1.08595,1,1,1.15012,1,.91974,.75945,1.15012,1,.9446,.73361,.9005,.9005,.9005,.62864,.85158,.85158,.85158,.85158,.85158,.85158,.773,.76852,.70466,.70466,.70466,.70466,.83864,.83864,.83864,.83864,.90561,.87514,.8588,.8588,.8588,.8588,.8588,1.02058,.85751,.85991,.85991,.85991,.85991,.77512,.76013,.88075,.93859,.93859,.93859,.93859,.93859,.93859,.8075,.846,.81453,.81453,.81453,.81453,.82424,.82424,.82424,.82424,.9278,.96017,.93859,.93859,.93859,.93859,.93859,1.08595,.8562,.94578,.94578,.94578,.94578,.882,.94578,.882,.85158,.93859,.85158,.93859,.85158,.93859,.76852,.846,.76852,.846,.76852,.846,.76852,.846,.89591,.8544,.90561,.94399,.70466,.81453,.70466,.81453,.70466,.81453,.70466,.81453,.70466,.81453,.80094,.94219,.80094,.94219,.80094,.94219,1,1,.86822,.96017,.86822,.96017,.83864,.82424,.83864,.82424,.83864,.82424,.83864,1.03075,.83864,.82424,.81402,1.02738,.728,1.02175,1,1,.912,.79475,1.03075,1,1,.79475,.83911,.79475,.66266,.80553,1.06676,.87514,.96017,1,1,.87514,.96017,.86865,.87396,.96017,.8588,.93859,.8588,.93859,.8588,.93859,.867,.84759,.72421,.95493,1,1,.72421,.95493,.69866,.746,.69866,.746,1,1,.69866,.746,1,1,.77598,.88417,.77598,1.12658,.85991,.94578,.85991,.94578,.85991,.94578,.85991,.94578,.85991,.94578,.85991,.94578,.87832,.979,.77512,.882,.77512,.8562,.83,.8562,.83,.8562,.83,1,.88465,.85158,.93859,.773,.8075,.85751,.8562,1,1,.77598,1.12658,1.15012,1.15012,1.15012,1.15012,1.15012,1.15313,1.15012,1.15012,1.15012,1.08106,1.03901,.85158,.77025,.62264,.7646,.65351,.86026,.69461,.89947,1.03075,.85158,.77812,.76449,.88836,.70466,.8562,.86822,.8588,.83864,.77212,.85308,.93637,.87514,.82352,.8588,.85701,.76013,.89058,.77598,.8156,.82565,.78112,.77899,.89386,.83864,.8156,.9486,.92388,.96186,1.03075,.91123,.9486,.93298,.878,.93942,.92388,.84596,.96186,.95119,1.03075,.922,.88787,.95829,.88,.93559,.93859,.78815,.93758,1,.89217,1.03737,.91123,.93969,.77487,.85769,.86799,1.03075,.91123,.93859,.91123,.86799,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.87832,.979,.87832,.979,.87832,.979,.77512,.882,.9219,1,.89903,1,1,1,.87321,.87321,.87321,1,1.027,1.027,1.027,.86847,.86847,.79121,1,1.124,1,1,.73572,.73572,1,1,.85034,1,1,1,1,.88465,1,1,1,.669,1,1.36145,1,1,1,1,1,1,1,1,1,1,1,1.04828,1,.74948,.75187,1.02058,.98391,1.02119,1,1,1.06233,1.08595,1.08595,1,1.08595,1.08595,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1.05233,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];const MyriadProItalicMetrics={lineHeight:1.2,lineGap:.2};const MyriadProRegularFactors=[1.36898,1,1,.76305,.82784,.94935,.89364,.92241,.89073,.90706,.98472,.85283,.85283,1.0664,1.02058,.74505,.9219,.74505,1.23456,.92241,.92241,.92241,.92241,.92241,.92241,.92241,.92241,.92241,.92241,.74505,.74505,1.02058,1.02058,1.02058,.73002,.72601,.91755,.8126,.80314,.92222,.73764,.79726,.83051,.90284,.86023,.74,.8126,.84869,.96518,.91115,.8858,.79761,.8858,.74498,.73914,.81363,.89591,.83659,.89633,.85608,.8111,.90531,1.0222,1.22736,1.0222,1.27014,.89903,.90088,.86667,1.0231,.896,1.01411,.90083,1.05099,1.00512,.99793,1.05326,1.09377,.938,1.06226,1.00119,.99793,.98714,1.0231,1.01231,.98196,.792,1.19137,.99074,.962,1.01915,.926,.942,.856,.85034,.92006,.85034,1.02058,.69067,.92241,.92241,.92241,.92241,.92006,.9332,.90088,.91882,.93484,.75339,1.02058,.56866,.54324,.79519,1.08595,1,1,.90088,1,.95325,.74505,.90088,1,.97198,.75339,.91009,.91009,.91009,.66466,.91755,.91755,.91755,.91755,.91755,.91755,.788,.80314,.73764,.73764,.73764,.73764,.86023,.86023,.86023,.86023,.92915,.91115,.8858,.8858,.8858,.8858,.8858,1.02058,.8858,.89591,.89591,.89591,.89591,.8111,.79611,.89713,.86667,.86667,.86667,.86667,.86667,.86667,.86936,.896,.90083,.90083,.90083,.90083,.84224,.84224,.84224,.84224,.97276,.99793,.98714,.98714,.98714,.98714,.98714,1.08595,.89876,.99074,.99074,.99074,.99074,.942,1.0231,.942,.91755,.86667,.91755,.86667,.91755,.86667,.80314,.896,.80314,.896,.80314,.896,.80314,.896,.92222,.93372,.92915,1.01411,.73764,.90083,.73764,.90083,.73764,.90083,.73764,.90083,.73764,.90083,.83051,1.00512,.83051,1.00512,.83051,1.00512,1,1,.90284,.99793,.90976,.99793,.86023,.84224,.86023,.84224,.86023,.84224,.86023,1.05326,.86023,.84224,.82873,1.07469,.74,1.09377,1,1,.938,.84869,1.06226,1,1,.84869,.83704,.84869,.81441,.85588,1.08927,.91115,.99793,1,1,.91115,.99793,.91887,.90991,.99793,.8858,.98714,.8858,.98714,.8858,.98714,.894,.91434,.74498,.98196,1,1,.74498,.98196,.73914,.792,.73914,.792,1,1,.73914,.792,1,1,.81363,.904,.81363,1.19137,.89591,.99074,.89591,.99074,.89591,.99074,.89591,.99074,.89591,.99074,.89591,.99074,.89633,1.01915,.8111,.942,.8111,.90531,.856,.90531,.856,.90531,.856,1,.92241,.91755,.86667,.788,.86936,.8858,.89876,1,1,.81363,1.19137,.90088,.90088,.90088,.90088,.90088,.90088,.90088,.90088,.90088,.90388,1.03901,.92138,.78105,.7154,.86169,.80513,.94007,.82528,.98612,1.06226,.91755,.8126,.81884,.92819,.73764,.90531,.90284,.8858,.86023,.8126,.91172,.96518,.91115,.83089,.8858,.87791,.79761,.89297,.81363,.88157,.89992,.85608,.81992,.94307,.86023,.88157,.95308,.98699,.99793,1.06226,.95817,.95308,.97358,.928,.98088,.98699,.92761,.99793,.96017,1.06226,.986,.944,.95978,.938,.96705,.98714,.80442,.98972,1,.89762,1.04552,.95817,.99007,.87064,.91879,.88888,1.06226,.95817,.98714,.95817,.88888,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.89633,1.01915,.89633,1.01915,.89633,1.01915,.8111,.942,.9219,1,.89903,1,1,1,.93173,.93173,.93173,1,1.06304,1.06304,1.06904,.89903,.89903,.80549,1,1.156,1,1,.76575,.76575,1,1,.72458,1,1,1,1,.92241,1,1,1,.619,1,1.36145,1,1,1,1,1,1,1,1,1,1,1,1.07257,1,.74705,.71119,1.02058,1.024,1.02119,1,1,1.1536,1.08595,1.08595,1,1.08595,1.08595,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1.05638,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];const MyriadProRegularMetrics={lineHeight:1.2,lineGap:.2};const SegoeuiBoldFactors=[1.76738,1,1,.99297,.9824,1.04016,1.06497,1.03424,.97529,1.17647,1.23203,1.1085,1.1085,1.16939,1.2107,.9754,1.21408,.9754,1.59578,1.03424,1.03424,1.03424,1.03424,1.03424,1.03424,1.03424,1.03424,1.03424,1.03424,.81378,.81378,1.2107,1.2107,1.2107,.71703,.97847,.97363,.88776,.8641,1.02096,.79795,.85132,.914,1.06085,1.1406,.8007,.89858,.83693,1.14889,1.09398,.97489,.92094,.97489,.90399,.84041,.95923,1.00135,1,1.06467,.98243,.90996,.99361,1.1085,1.56942,1.1085,1.2107,.74627,.94282,.96752,1.01519,.86304,1.01359,.97278,1.15103,1.01359,.98561,1.02285,1.02285,1.00527,1.02285,1.0302,.99041,1.0008,1.01519,1.01359,1.02258,.79104,1.16862,.99041,.97454,1.02511,.99298,.96752,.95801,.94856,1.16579,.94856,1.2107,.9824,1.03424,1.03424,1,1.03424,1.16579,.8727,1.3871,1.18622,1.10818,1.04478,1.2107,1.18622,.75155,.94994,1.28826,1.21408,1.21408,.91056,1,.91572,.9754,.64663,1.18328,1.24866,1.04478,1.14169,1.15749,1.17389,.71703,.97363,.97363,.97363,.97363,.97363,.97363,.93506,.8641,.79795,.79795,.79795,.79795,1.1406,1.1406,1.1406,1.1406,1.02096,1.09398,.97426,.97426,.97426,.97426,.97426,1.2107,.97489,1.00135,1.00135,1.00135,1.00135,.90996,.92094,1.02798,.96752,.96752,.96752,.96752,.96752,.96752,.93136,.86304,.97278,.97278,.97278,.97278,1.02285,1.02285,1.02285,1.02285,.97122,.99041,1,1,1,1,1,1.28826,1.0008,.99041,.99041,.99041,.99041,.96752,1.01519,.96752,.97363,.96752,.97363,.96752,.97363,.96752,.8641,.86304,.8641,.86304,.8641,.86304,.8641,.86304,1.02096,1.03057,1.02096,1.03517,.79795,.97278,.79795,.97278,.79795,.97278,.79795,.97278,.79795,.97278,.914,1.01359,.914,1.01359,.914,1.01359,1,1,1.06085,.98561,1.06085,1.00879,1.1406,1.02285,1.1406,1.02285,1.1406,1.02285,1.1406,1.02285,1.1406,1.02285,.97138,1.08692,.8007,1.02285,1,1,1.00527,.83693,1.02285,1,1,.83693,.9455,.83693,.90418,.83693,1.13005,1.09398,.99041,1,1,1.09398,.99041,.96692,1.09251,.99041,.97489,1.0008,.97489,1.0008,.97489,1.0008,.93994,.97931,.90399,1.02258,1,1,.90399,1.02258,.84041,.79104,.84041,.79104,.84041,.79104,.84041,.79104,1,1,.95923,1.07034,.95923,1.16862,1.00135,.99041,1.00135,.99041,1.00135,.99041,1.00135,.99041,1.00135,.99041,1.00135,.99041,1.06467,1.02511,.90996,.96752,.90996,.99361,.95801,.99361,.95801,.99361,.95801,1.07733,1.03424,.97363,.96752,.93506,.93136,.97489,1.0008,1,1,.95923,1.16862,1.15103,1.15103,1.01173,1.03959,.75953,.81378,.79912,1.15103,1.21994,.95161,.87815,1.01149,.81525,.7676,.98167,1.01134,1.02546,.84097,1.03089,1.18102,.97363,.88776,.85134,.97826,.79795,.99361,1.06085,.97489,1.1406,.89858,1.0388,1.14889,1.09398,.86039,.97489,1.0595,.92094,.94793,.95923,.90996,.99346,.98243,1.02112,.95493,1.1406,.90996,1.03574,1.02597,1.0008,1.18102,1.06628,1.03574,1.0192,1.01932,1.00886,.97531,1.0106,1.0008,1.13189,1.18102,1.02277,.98683,1.0016,.99561,1.07237,1.0008,.90434,.99921,.93803,.8965,1.23085,1.06628,1.04983,.96268,1.0499,.98439,1.18102,1.06628,1.0008,1.06628,.98439,.79795,1,1,1,1,1,1,1,1,1,1,1,1,1.09466,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.97278,1,1,1,1,1,1,1,1,1,1,1,1,1.02065,1,1,1,1,1,1,1.06467,1.02511,1.06467,1.02511,1.06467,1.02511,.90996,.96752,1,1.21408,.89903,1,1,.75155,1.04394,1.04394,1.04394,1.04394,.98633,.98633,.98633,.73047,.73047,1.20642,.91211,1.25635,1.222,1.02956,1.03372,1.03372,.96039,1.24633,1,1.12454,.93503,1.03424,1.19687,1.03424,1,1,1,.771,1,1,1.15749,1.15749,1.15749,1.10948,.86279,.94434,.86279,.94434,.86182,1,1,1.16897,1,.96085,.90137,1.2107,1.18416,1.13973,.69825,.9716,2.10339,1.29004,1.29004,1.21172,1.29004,1.29004,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1.42603,1,.99862,.99862,1,.87025,.87025,.87025,.87025,1.18874,1.42603,1,1.42603,1.42603,.99862,1,1,1,1,1,1.2886,1.04315,1.15296,1.34163,1,1,1,1.09193,1.09193,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];const SegoeuiBoldMetrics={lineHeight:1.33008,lineGap:0};const SegoeuiBoldItalicFactors=[1.76738,1,1,.98946,1.03959,1.04016,1.02809,1.036,.97639,1.10953,1.23203,1.11144,1.11144,1.16939,1.21237,.9754,1.21261,.9754,1.59754,1.036,1.036,1.036,1.036,1.036,1.036,1.036,1.036,1.036,1.036,.81378,.81378,1.21237,1.21237,1.21237,.73541,.97847,.97363,.89723,.87897,1.0426,.79429,.85292,.91149,1.05815,1.1406,.79631,.90128,.83853,1.04396,1.10615,.97552,.94436,.97552,.88641,.80527,.96083,1.00135,1,1.06777,.9817,.91142,.99361,1.11144,1.57293,1.11144,1.21237,.74627,1.31818,1.06585,.97042,.83055,.97042,.93503,1.1261,.97042,.97922,1.14236,.94552,1.01054,1.14236,1.02471,.97922,.94165,.97042,.97042,1.0276,.78929,1.1261,.97922,.95874,1.02197,.98507,.96752,.97168,.95107,1.16579,.95107,1.21237,1.03959,1.036,1.036,1,1.036,1.16579,.87357,1.31818,1.18754,1.26781,1.05356,1.21237,1.18622,.79487,.94994,1.29004,1.24047,1.24047,1.31818,1,.91484,.9754,1.31818,1.1349,1.24866,1.05356,1.13934,1.15574,1.17389,.73541,.97363,.97363,.97363,.97363,.97363,.97363,.94385,.87897,.79429,.79429,.79429,.79429,1.1406,1.1406,1.1406,1.1406,1.0426,1.10615,.97552,.97552,.97552,.97552,.97552,1.21237,.97552,1.00135,1.00135,1.00135,1.00135,.91142,.94436,.98721,1.06585,1.06585,1.06585,1.06585,1.06585,1.06585,.96705,.83055,.93503,.93503,.93503,.93503,1.14236,1.14236,1.14236,1.14236,.93125,.97922,.94165,.94165,.94165,.94165,.94165,1.29004,.94165,.97922,.97922,.97922,.97922,.96752,.97042,.96752,.97363,1.06585,.97363,1.06585,.97363,1.06585,.87897,.83055,.87897,.83055,.87897,.83055,.87897,.83055,1.0426,1.0033,1.0426,.97042,.79429,.93503,.79429,.93503,.79429,.93503,.79429,.93503,.79429,.93503,.91149,.97042,.91149,.97042,.91149,.97042,1,1,1.05815,.97922,1.05815,.97922,1.1406,1.14236,1.1406,1.14236,1.1406,1.14236,1.1406,1.14236,1.1406,1.14236,.97441,1.04302,.79631,1.01582,1,1,1.01054,.83853,1.14236,1,1,.83853,1.09125,.83853,.90418,.83853,1.19508,1.10615,.97922,1,1,1.10615,.97922,1.01034,1.10466,.97922,.97552,.94165,.97552,.94165,.97552,.94165,.91602,.91981,.88641,1.0276,1,1,.88641,1.0276,.80527,.78929,.80527,.78929,.80527,.78929,.80527,.78929,1,1,.96083,1.05403,.95923,1.16862,1.00135,.97922,1.00135,.97922,1.00135,.97922,1.00135,.97922,1.00135,.97922,1.00135,.97922,1.06777,1.02197,.91142,.96752,.91142,.99361,.97168,.99361,.97168,.99361,.97168,1.23199,1.036,.97363,1.06585,.94385,.96705,.97552,.94165,1,1,.96083,1.1261,1.31818,1.31818,1.31818,1.31818,1.31818,1.31818,1.31818,1.31818,1.31818,.95161,1.27126,1.00811,.83284,.77702,.99137,.95253,1.0347,.86142,1.07205,1.14236,.97363,.89723,.86869,1.09818,.79429,.99361,1.05815,.97552,1.1406,.90128,1.06662,1.04396,1.10615,.84918,.97552,1.04694,.94436,.98015,.96083,.91142,1.00356,.9817,1.01945,.98999,1.1406,.91142,1.04961,.9898,1.00639,1.14236,1.07514,1.04961,.99607,1.02897,1.008,.9898,.95134,1.00639,1.11121,1.14236,1.00518,.97981,1.02186,1,1.08578,.94165,.99314,.98387,.93028,.93377,1.35125,1.07514,1.10687,.93491,1.04232,1.00351,1.14236,1.07514,.94165,1.07514,1.00351,.79429,1,1,1,1,1,1,1,1,1,1,1,1,1.09097,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.93503,1,1,1,1,1,1,1,1,1,1,1,1,.96609,1,1,1,1,1,1,1.06777,1.02197,1.06777,1.02197,1.06777,1.02197,.91142,.96752,1,1.21261,.89903,1,1,.75155,1.04745,1.04745,1.04745,1.04394,.98633,.98633,.98633,.72959,.72959,1.20502,.91406,1.26514,1.222,1.02956,1.03372,1.03372,.96039,1.24633,1,1.09125,.93327,1.03336,1.16541,1.036,1,1,1,.771,1,1,1.15574,1.15574,1.15574,1.15574,.86364,.94434,.86279,.94434,.86224,1,1,1.16798,1,.96085,.90068,1.21237,1.18416,1.13904,.69825,.9716,2.10339,1.29004,1.29004,1.21339,1.29004,1.29004,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1.42603,1,.99862,.99862,1,.87025,.87025,.87025,.87025,1.18775,1.42603,1,1.42603,1.42603,.99862,1,1,1,1,1,1.2886,1.04315,1.15296,1.34163,1,1,1,1.13269,1.13269,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];const SegoeuiBoldItalicMetrics={lineHeight:1.33008,lineGap:0};const SegoeuiItalicFactors=[1.76738,1,1,.98946,1.14763,1.05365,1.06234,.96927,.92586,1.15373,1.18414,.91349,.91349,1.07403,1.17308,.78383,1.20088,.78383,1.42531,.96927,.96927,.96927,.96927,.96927,.96927,.96927,.96927,.96927,.96927,.78383,.78383,1.17308,1.17308,1.17308,.77349,.94565,.94729,.85944,.88506,.9858,.74817,.80016,.88449,.98039,.95782,.69238,.89898,.83231,.98183,1.03989,.96924,.86237,.96924,.80595,.74524,.86091,.95402,.94143,.98448,.8858,.83089,.93285,1.0949,1.39016,1.0949,1.45994,.74627,1.04839,.97454,.97454,.87207,.97454,.87533,1.06151,.97454,1.00176,1.16484,1.08132,.98047,1.16484,1.02989,1.01054,.96225,.97454,.97454,1.06598,.79004,1.16344,1.00351,.94629,.9973,.91016,.96777,.9043,.91082,.92481,.91082,1.17308,.95748,.96927,.96927,1,.96927,.92481,.80597,1.04839,1.23393,1.1781,.9245,1.17308,1.20808,.63218,.94261,1.24822,1.09971,1.09971,1.04839,1,.85273,.78032,1.04839,1.09971,1.22326,.9245,1.09836,1.13525,1.15222,.70424,.94729,.94729,.94729,.94729,.94729,.94729,.85498,.88506,.74817,.74817,.74817,.74817,.95782,.95782,.95782,.95782,.9858,1.03989,.96924,.96924,.96924,.96924,.96924,1.17308,.96924,.95402,.95402,.95402,.95402,.83089,.86237,.88409,.97454,.97454,.97454,.97454,.97454,.97454,.92916,.87207,.87533,.87533,.87533,.87533,.93146,.93146,.93146,.93146,.93854,1.01054,.96225,.96225,.96225,.96225,.96225,1.24822,.8761,1.00351,1.00351,1.00351,1.00351,.96777,.97454,.96777,.94729,.97454,.94729,.97454,.94729,.97454,.88506,.87207,.88506,.87207,.88506,.87207,.88506,.87207,.9858,.95391,.9858,.97454,.74817,.87533,.74817,.87533,.74817,.87533,.74817,.87533,.74817,.87533,.88449,.97454,.88449,.97454,.88449,.97454,1,1,.98039,1.00176,.98039,1.00176,.95782,.93146,.95782,.93146,.95782,.93146,.95782,1.16484,.95782,.93146,.84421,1.12761,.69238,1.08132,1,1,.98047,.83231,1.16484,1,1,.84723,1.04861,.84723,.78755,.83231,1.23736,1.03989,1.01054,1,1,1.03989,1.01054,.9857,1.03849,1.01054,.96924,.96225,.96924,.96225,.96924,.96225,.92383,.90171,.80595,1.06598,1,1,.80595,1.06598,.74524,.79004,.74524,.79004,.74524,.79004,.74524,.79004,1,1,.86091,1.02759,.85771,1.16344,.95402,1.00351,.95402,1.00351,.95402,1.00351,.95402,1.00351,.95402,1.00351,.95402,1.00351,.98448,.9973,.83089,.96777,.83089,.93285,.9043,.93285,.9043,.93285,.9043,1.31868,.96927,.94729,.97454,.85498,.92916,.96924,.8761,1,1,.86091,1.16344,1.04839,1.04839,1.04839,1.04839,1.04839,1.04839,1.04839,1.04839,1.04839,.81965,.81965,.94729,.78032,.71022,.90883,.84171,.99877,.77596,1.05734,1.2,.94729,.85944,.82791,.9607,.74817,.93285,.98039,.96924,.95782,.89898,.98316,.98183,1.03989,.78614,.96924,.97642,.86237,.86075,.86091,.83089,.90082,.8858,.97296,1.01284,.95782,.83089,1.0976,1.04,1.03342,1.2,1.0675,1.0976,.98205,1.03809,1.05097,1.04,.95364,1.03342,1.05401,1.2,1.02148,1.0119,1.04724,1.0127,1.02732,.96225,.8965,.97783,.93574,.94818,1.30679,1.0675,1.11826,.99821,1.0557,1.0326,1.2,1.0675,.96225,1.0675,1.0326,.74817,1,1,1,1,1,1,1,1,1,1,1,1,1.03754,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.87533,1,1,1,1,1,1,1,1,1,1,1,1,.98705,1,1,1,1,1,1,.98448,.9973,.98448,.9973,.98448,.9973,.83089,.96777,1,1.20088,.89903,1,1,.75155,.94945,.94945,.94945,.94945,1.12317,1.12317,1.12317,.67603,.67603,1.15621,.73584,1.21191,1.22135,1.06483,.94868,.94868,.95996,1.24633,1,1.07497,.87709,.96927,1.01473,.96927,1,1,1,.77295,1,1,1.09836,1.09836,1.09836,1.01522,.86321,.94434,.8649,.94434,.86182,1,1,1.083,1,.91578,.86438,1.17308,1.18416,1.14589,.69825,.97622,1.96791,1.24822,1.24822,1.17308,1.24822,1.24822,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1.42603,1,.99862,.99862,1,.87025,.87025,.87025,.87025,1.17984,1.42603,1,1.42603,1.42603,.99862,1,1,1,1,1,1.2886,1.04315,1.15296,1.34163,1,1,1,1.10742,1.10742,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1];const SegoeuiItalicMetrics={lineHeight:1.33008,lineGap:0};const SegoeuiRegularFactors=[1.76738,1,1,.98594,1.02285,1.10454,1.06234,.96927,.92037,1.19985,1.2046,.90616,.90616,1.07152,1.1714,.78032,1.20088,.78032,1.40246,.96927,.96927,.96927,.96927,.96927,.96927,.96927,.96927,.96927,.96927,.78032,.78032,1.1714,1.1714,1.1714,.80597,.94084,.96706,.85944,.85734,.97093,.75842,.79936,.88198,.9831,.95782,.71387,.86969,.84636,1.07796,1.03584,.96924,.83968,.96924,.82826,.79649,.85771,.95132,.93119,.98965,.88433,.8287,.93365,1.08612,1.3638,1.08612,1.45786,.74627,.80499,.91484,1.05707,.92383,1.05882,.9403,1.12654,1.05882,1.01756,1.09011,1.09011,.99414,1.09011,1.034,1.01756,1.05356,1.05707,1.05882,1.04399,.84863,1.21968,1.01756,.95801,1.00068,.91797,.96777,.9043,.90351,.92105,.90351,1.1714,.85337,.96927,.96927,.99912,.96927,.92105,.80597,1.2434,1.20808,1.05937,.90957,1.1714,1.20808,.75155,.94261,1.24644,1.09971,1.09971,.84751,1,.85273,.78032,.61584,1.05425,1.17914,.90957,1.08665,1.11593,1.14169,.73381,.96706,.96706,.96706,.96706,.96706,.96706,.86035,.85734,.75842,.75842,.75842,.75842,.95782,.95782,.95782,.95782,.97093,1.03584,.96924,.96924,.96924,.96924,.96924,1.1714,.96924,.95132,.95132,.95132,.95132,.8287,.83968,.89049,.91484,.91484,.91484,.91484,.91484,.91484,.93575,.92383,.9403,.9403,.9403,.9403,.8717,.8717,.8717,.8717,1.00527,1.01756,1.05356,1.05356,1.05356,1.05356,1.05356,1.24644,.95923,1.01756,1.01756,1.01756,1.01756,.96777,1.05707,.96777,.96706,.91484,.96706,.91484,.96706,.91484,.85734,.92383,.85734,.92383,.85734,.92383,.85734,.92383,.97093,1.0969,.97093,1.05882,.75842,.9403,.75842,.9403,.75842,.9403,.75842,.9403,.75842,.9403,.88198,1.05882,.88198,1.05882,.88198,1.05882,1,1,.9831,1.01756,.9831,1.01756,.95782,.8717,.95782,.8717,.95782,.8717,.95782,1.09011,.95782,.8717,.84784,1.11551,.71387,1.09011,1,1,.99414,.84636,1.09011,1,1,.84636,1.0536,.84636,.94298,.84636,1.23297,1.03584,1.01756,1,1,1.03584,1.01756,1.00323,1.03444,1.01756,.96924,1.05356,.96924,1.05356,.96924,1.05356,.93066,.98293,.82826,1.04399,1,1,.82826,1.04399,.79649,.84863,.79649,.84863,.79649,.84863,.79649,.84863,1,1,.85771,1.17318,.85771,1.21968,.95132,1.01756,.95132,1.01756,.95132,1.01756,.95132,1.01756,.95132,1.01756,.95132,1.01756,.98965,1.00068,.8287,.96777,.8287,.93365,.9043,.93365,.9043,.93365,.9043,1.08571,.96927,.96706,.91484,.86035,.93575,.96924,.95923,1,1,.85771,1.21968,1.11437,1.11437,.93109,.91202,.60411,.84164,.55572,1.01173,.97361,.81818,.81818,.96635,.78032,.72727,.92366,.98601,1.03405,.77968,1.09799,1.2,.96706,.85944,.85638,.96491,.75842,.93365,.9831,.96924,.95782,.86969,.94152,1.07796,1.03584,.78437,.96924,.98715,.83968,.83491,.85771,.8287,.94492,.88433,.9287,1.0098,.95782,.8287,1.0625,.98248,1.03424,1.2,1.01071,1.0625,.95246,1.03809,1.04912,.98248,1.00221,1.03424,1.05443,1.2,1.04785,.99609,1.00169,1.05176,.99346,1.05356,.9087,1.03004,.95542,.93117,1.23362,1.01071,1.07831,1.02512,1.05205,1.03502,1.2,1.01071,1.05356,1.01071,1.03502,.75842,1,1,1,1,1,1,1,1,1,1,1,1,1.03719,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.9403,1,1,1,1,1,1,1,1,1,1,1,1,1.04021,1,1,1,1,1,1,.98965,1.00068,.98965,1.00068,.98965,1.00068,.8287,.96777,1,1.20088,.89903,1,1,.75155,1.03077,1.03077,1.03077,1.03077,1.13196,1.13196,1.13196,.67428,.67428,1.16039,.73291,1.20996,1.22135,1.06483,.94868,.94868,.95996,1.24633,1,1.07497,.87796,.96927,1.01518,.96927,1,1,1,.77295,1,1,1.10539,1.10539,1.11358,1.06967,.86279,.94434,.86279,.94434,.86182,1,1,1.083,1,.91578,.86507,1.1714,1.18416,1.14589,.69825,.97622,1.9697,1.24822,1.24822,1.17238,1.24822,1.24822,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1.42603,1,.99862,.99862,1,.87025,.87025,.87025,.87025,1.18083,1.42603,1,1.42603,1.42603,.99862,1,1,1,1,1,1.2886,1.04315,1.15296,1.34163,1,1,1,1.10938,1.10938,1,1,1,1.05425,1.09971,1.09971,1.09971,1,1,1,1,1,1,1,1,1,1,1];const SegoeuiRegularMetrics={lineHeight:1.33008,lineGap:0};const getXFAFontMap=getLookupTableFactory((function(t){t[\"MyriadPro-Regular\"]=t[\"PdfJS-Fallback-Regular\"]={name:\"LiberationSans-Regular\",factors:MyriadProRegularFactors,baseWidths:LiberationSansRegularWidths,baseMapping:LiberationSansRegularMapping,metrics:MyriadProRegularMetrics};t[\"MyriadPro-Bold\"]=t[\"PdfJS-Fallback-Bold\"]={name:\"LiberationSans-Bold\",factors:MyriadProBoldFactors,baseWidths:LiberationSansBoldWidths,baseMapping:LiberationSansBoldMapping,metrics:MyriadProBoldMetrics};t[\"MyriadPro-It\"]=t[\"MyriadPro-Italic\"]=t[\"PdfJS-Fallback-Italic\"]={name:\"LiberationSans-Italic\",factors:MyriadProItalicFactors,baseWidths:LiberationSansItalicWidths,baseMapping:LiberationSansItalicMapping,metrics:MyriadProItalicMetrics};t[\"MyriadPro-BoldIt\"]=t[\"MyriadPro-BoldItalic\"]=t[\"PdfJS-Fallback-BoldItalic\"]={name:\"LiberationSans-BoldItalic\",factors:MyriadProBoldItalicFactors,baseWidths:LiberationSansBoldItalicWidths,baseMapping:LiberationSansBoldItalicMapping,metrics:MyriadProBoldItalicMetrics};t.ArialMT=t.Arial=t[\"Arial-Regular\"]={name:\"LiberationSans-Regular\",baseWidths:LiberationSansRegularWidths,baseMapping:LiberationSansRegularMapping};t[\"Arial-BoldMT\"]=t[\"Arial-Bold\"]={name:\"LiberationSans-Bold\",baseWidths:LiberationSansBoldWidths,baseMapping:LiberationSansBoldMapping};t[\"Arial-ItalicMT\"]=t[\"Arial-Italic\"]={name:\"LiberationSans-Italic\",baseWidths:LiberationSansItalicWidths,baseMapping:LiberationSansItalicMapping};t[\"Arial-BoldItalicMT\"]=t[\"Arial-BoldItalic\"]={name:\"LiberationSans-BoldItalic\",baseWidths:LiberationSansBoldItalicWidths,baseMapping:LiberationSansBoldItalicMapping};t[\"Calibri-Regular\"]={name:\"LiberationSans-Regular\",factors:CalibriRegularFactors,baseWidths:LiberationSansRegularWidths,baseMapping:LiberationSansRegularMapping,metrics:CalibriRegularMetrics};t[\"Calibri-Bold\"]={name:\"LiberationSans-Bold\",factors:CalibriBoldFactors,baseWidths:LiberationSansBoldWidths,baseMapping:LiberationSansBoldMapping,metrics:CalibriBoldMetrics};t[\"Calibri-Italic\"]={name:\"LiberationSans-Italic\",factors:CalibriItalicFactors,baseWidths:LiberationSansItalicWidths,baseMapping:LiberationSansItalicMapping,metrics:CalibriItalicMetrics};t[\"Calibri-BoldItalic\"]={name:\"LiberationSans-BoldItalic\",factors:CalibriBoldItalicFactors,baseWidths:LiberationSansBoldItalicWidths,baseMapping:LiberationSansBoldItalicMapping,metrics:CalibriBoldItalicMetrics};t[\"Segoeui-Regular\"]={name:\"LiberationSans-Regular\",factors:SegoeuiRegularFactors,baseWidths:LiberationSansRegularWidths,baseMapping:LiberationSansRegularMapping,metrics:SegoeuiRegularMetrics};t[\"Segoeui-Bold\"]={name:\"LiberationSans-Bold\",factors:SegoeuiBoldFactors,baseWidths:LiberationSansBoldWidths,baseMapping:LiberationSansBoldMapping,metrics:SegoeuiBoldMetrics};t[\"Segoeui-Italic\"]={name:\"LiberationSans-Italic\",factors:SegoeuiItalicFactors,baseWidths:LiberationSansItalicWidths,baseMapping:LiberationSansItalicMapping,metrics:SegoeuiItalicMetrics};t[\"Segoeui-BoldItalic\"]={name:\"LiberationSans-BoldItalic\",factors:SegoeuiBoldItalicFactors,baseWidths:LiberationSansBoldItalicWidths,baseMapping:LiberationSansBoldItalicMapping,metrics:SegoeuiBoldItalicMetrics};t[\"Helvetica-Regular\"]=t.Helvetica={name:\"LiberationSans-Regular\",factors:HelveticaRegularFactors,baseWidths:LiberationSansRegularWidths,baseMapping:LiberationSansRegularMapping,metrics:HelveticaRegularMetrics};t[\"Helvetica-Bold\"]={name:\"LiberationSans-Bold\",factors:HelveticaBoldFactors,baseWidths:LiberationSansBoldWidths,baseMapping:LiberationSansBoldMapping,metrics:HelveticaBoldMetrics};t[\"Helvetica-Italic\"]={name:\"LiberationSans-Italic\",factors:HelveticaItalicFactors,baseWidths:LiberationSansItalicWidths,baseMapping:LiberationSansItalicMapping,metrics:HelveticaItalicMetrics};t[\"Helvetica-BoldItalic\"]={name:\"LiberationSans-BoldItalic\",factors:HelveticaBoldItalicFactors,baseWidths:LiberationSansBoldItalicWidths,baseMapping:LiberationSansBoldItalicMapping,metrics:HelveticaBoldItalicMetrics}}));function getXfaFontName(name){const fontName=normalizeFontName(name);const fontMap=getXFAFontMap();return fontMap[fontName]}function getXfaFontWidths(name){const info=getXfaFontName(name);if(!info){return null}const{baseWidths:baseWidths,baseMapping:baseMapping,factors:factors}=info;const rescaledBaseWidths=!factors?baseWidths:baseWidths.map(((w,i)=>w*factors[i]));let currentCode=-2;let currentArray;const newWidths=[];for(const[unicode,glyphIndex]of baseMapping.map(((charUnicode,index)=>[charUnicode,index])).sort((([unicode1],[unicode2])=>unicode1-unicode2))){if(unicode===-1){continue}if(unicode===currentCode+1){currentArray.push(rescaledBaseWidths[glyphIndex]);currentCode+=1}else{currentCode=unicode;currentArray=[rescaledBaseWidths[glyphIndex]];newWidths.push(unicode,currentArray)}}return newWidths}function getXfaFontDict(name){const widths=getXfaFontWidths(name);const dict=new Dict(null);dict.set(\"BaseFont\",Name.get(name));dict.set(\"Type\",Name.get(\"Font\"));dict.set(\"Subtype\",Name.get(\"CIDFontType2\"));dict.set(\"Encoding\",Name.get(\"Identity-H\"));dict.set(\"CIDToGIDMap\",Name.get(\"Identity\"));dict.set(\"W\",widths);dict.set(\"FirstChar\",widths[0]);dict.set(\"LastChar\",widths.at(-2)+widths.at(-1).length-1);const descriptor=new Dict(null);dict.set(\"FontDescriptor\",descriptor);const systemInfo=new Dict(null);systemInfo.set(\"Ordering\",\"Identity\");systemInfo.set(\"Registry\",\"Adobe\");systemInfo.set(\"Supplement\",0);dict.set(\"CIDSystemInfo\",systemInfo);return dict}class PostScriptParser{constructor(lexer){this.lexer=lexer;this.operators=[];this.token=null;this.prev=null}nextToken(){this.prev=this.token;this.token=this.lexer.getToken()}accept(type){if(this.token.type===type){this.nextToken();return true}return false}expect(type){if(this.accept(type)){return true}throw new FormatError(`Unexpected symbol: found ${this.token.type} expected ${type}.`)}parse(){this.nextToken();this.expect(PostScriptTokenTypes.LBRACE);this.parseBlock();this.expect(PostScriptTokenTypes.RBRACE);return this.operators}parseBlock(){while(true){if(this.accept(PostScriptTokenTypes.NUMBER)){this.operators.push(this.prev.value)}else if(this.accept(PostScriptTokenTypes.OPERATOR)){this.operators.push(this.prev.value)}else if(this.accept(PostScriptTokenTypes.LBRACE)){this.parseCondition()}else{return}}}parseCondition(){const conditionLocation=this.operators.length;this.operators.push(null,null);this.parseBlock();this.expect(PostScriptTokenTypes.RBRACE);if(this.accept(PostScriptTokenTypes.IF)){this.operators[conditionLocation]=this.operators.length;this.operators[conditionLocation+1]=\"jz\"}else if(this.accept(PostScriptTokenTypes.LBRACE)){const jumpLocation=this.operators.length;this.operators.push(null,null);const endOfTrue=this.operators.length;this.parseBlock();this.expect(PostScriptTokenTypes.RBRACE);this.expect(PostScriptTokenTypes.IFELSE);this.operators[jumpLocation]=this.operators.length;this.operators[jumpLocation+1]=\"j\";this.operators[conditionLocation]=endOfTrue;this.operators[conditionLocation+1]=\"jz\"}else{throw new FormatError(\"PS Function: error parsing conditional.\")}}}const PostScriptTokenTypes={LBRACE:0,RBRACE:1,NUMBER:2,OPERATOR:3,IF:4,IFELSE:5};class PostScriptToken{static get opCache(){return shadow(this,\"opCache\",Object.create(null))}constructor(type,value){this.type=type;this.value=value}static getOperator(op){return PostScriptToken.opCache[op]||=new PostScriptToken(PostScriptTokenTypes.OPERATOR,op)}static get LBRACE(){return shadow(this,\"LBRACE\",new PostScriptToken(PostScriptTokenTypes.LBRACE,\"{\"))}static get RBRACE(){return shadow(this,\"RBRACE\",new PostScriptToken(PostScriptTokenTypes.RBRACE,\"}\"))}static get IF(){return shadow(this,\"IF\",new PostScriptToken(PostScriptTokenTypes.IF,\"IF\"))}static get IFELSE(){return shadow(this,\"IFELSE\",new PostScriptToken(PostScriptTokenTypes.IFELSE,\"IFELSE\"))}}class PostScriptLexer{constructor(stream){this.stream=stream;this.nextChar();this.strBuf=[]}nextChar(){return this.currentChar=this.stream.getByte()}getToken(){let comment=false;let ch=this.currentChar;while(true){if(ch<0){return EOF}if(comment){if(ch===10||ch===13){comment=false}}else if(ch===37){comment=true}else if(!isWhiteSpace(ch)){break}ch=this.nextChar()}switch(ch|0){case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:case 43:case 45:case 46:return new PostScriptToken(PostScriptTokenTypes.NUMBER,this.getNumber());case 123:this.nextChar();return PostScriptToken.LBRACE;case 125:this.nextChar();return PostScriptToken.RBRACE}const strBuf=this.strBuf;strBuf.length=0;strBuf[0]=String.fromCharCode(ch);while((ch=this.nextChar())>=0&&(ch>=65&&ch<=90||ch>=97&&ch<=122)){strBuf.push(String.fromCharCode(ch))}const str=strBuf.join(\"\");switch(str.toLowerCase()){case\"if\":return PostScriptToken.IF;case\"ifelse\":return PostScriptToken.IFELSE;default:return PostScriptToken.getOperator(str)}}getNumber(){let ch=this.currentChar;const strBuf=this.strBuf;strBuf.length=0;strBuf[0]=String.fromCharCode(ch);while((ch=this.nextChar())>=0){if(ch>=48&&ch<=57||ch===45||ch===46){strBuf.push(String.fromCharCode(ch))}else{break}}const value=parseFloat(strBuf.join(\"\"));if(isNaN(value)){throw new FormatError(`Invalid floating point number: ${value}`)}return value}}class BaseLocalCache{constructor(options){this._onlyRefs=options?.onlyRefs===true;if(!this._onlyRefs){this._nameRefMap=new Map;this._imageMap=new Map}this._imageCache=new RefSetCache}getByName(name){if(this._onlyRefs){unreachable(\"Should not call `getByName` method.\")}const ref=this._nameRefMap.get(name);if(ref){return this.getByRef(ref)}return this._imageMap.get(name)||null}getByRef(ref){return this._imageCache.get(ref)||null}set(name,ref,data){unreachable(\"Abstract method `set` called.\")}}class LocalImageCache extends BaseLocalCache{set(name,ref=null,data){if(typeof name!==\"string\"){throw new Error('LocalImageCache.set - expected \"name\" argument.')}if(ref){if(this._imageCache.has(ref)){return}this._nameRefMap.set(name,ref);this._imageCache.put(ref,data);return}if(this._imageMap.has(name)){return}this._imageMap.set(name,data)}}class LocalColorSpaceCache extends BaseLocalCache{set(name=null,ref=null,data){if(typeof name!==\"string\"&&!ref){throw new Error('LocalColorSpaceCache.set - expected \"name\" and/or \"ref\" argument.')}if(ref){if(this._imageCache.has(ref)){return}if(name!==null){this._nameRefMap.set(name,ref)}this._imageCache.put(ref,data);return}if(this._imageMap.has(name)){return}this._imageMap.set(name,data)}}class LocalFunctionCache extends BaseLocalCache{constructor(options){super({onlyRefs:true})}set(name=null,ref,data){if(!ref){throw new Error('LocalFunctionCache.set - expected \"ref\" argument.')}if(this._imageCache.has(ref)){return}this._imageCache.put(ref,data)}}class LocalGStateCache extends BaseLocalCache{set(name,ref=null,data){if(typeof name!==\"string\"){throw new Error('LocalGStateCache.set - expected \"name\" argument.')}if(ref){if(this._imageCache.has(ref)){return}this._nameRefMap.set(name,ref);this._imageCache.put(ref,data);return}if(this._imageMap.has(name)){return}this._imageMap.set(name,data)}}class LocalTilingPatternCache extends BaseLocalCache{constructor(options){super({onlyRefs:true})}set(name=null,ref,data){if(!ref){throw new Error('LocalTilingPatternCache.set - expected \"ref\" argument.')}if(this._imageCache.has(ref)){return}this._imageCache.put(ref,data)}}class RegionalImageCache extends BaseLocalCache{constructor(options){super({onlyRefs:true})}set(name=null,ref,data){if(!ref){throw new Error('RegionalImageCache.set - expected \"ref\" argument.')}if(this._imageCache.has(ref)){return}this._imageCache.put(ref,data)}}class GlobalColorSpaceCache extends BaseLocalCache{constructor(options){super({onlyRefs:true})}set(name=null,ref,data){if(!ref){throw new Error('GlobalColorSpaceCache.set - expected \"ref\" argument.')}if(this._imageCache.has(ref)){return}this._imageCache.put(ref,data)}clear(){this._imageCache.clear()}}class GlobalImageCache{static NUM_PAGES_THRESHOLD=2;static MIN_IMAGES_TO_CACHE=10;static MAX_BYTE_SIZE=5e7;#decodeFailedSet=new RefSet;constructor(){this._refCache=new RefSetCache;this._imageCache=new RefSetCache}get#byteSize(){let byteSize=0;for(const imageData of this._imageCache){byteSize+=imageData.byteSize}return byteSize}get#cacheLimitReached(){if(this._imageCache.size<GlobalImageCache.MIN_IMAGES_TO_CACHE){return false}if(this.#byteSize<GlobalImageCache.MAX_BYTE_SIZE){return false}return true}shouldCache(ref,pageIndex){let pageIndexSet=this._refCache.get(ref);if(!pageIndexSet){pageIndexSet=new Set;this._refCache.put(ref,pageIndexSet)}pageIndexSet.add(pageIndex);if(pageIndexSet.size<GlobalImageCache.NUM_PAGES_THRESHOLD){return false}if(!this._imageCache.has(ref)&&this.#cacheLimitReached){return false}return true}addDecodeFailed(ref){this.#decodeFailedSet.put(ref)}hasDecodeFailed(ref){return this.#decodeFailedSet.has(ref)}addByteSize(ref,byteSize){const imageData=this._imageCache.get(ref);if(!imageData){return}if(imageData.byteSize){return}imageData.byteSize=byteSize}getData(ref,pageIndex){const pageIndexSet=this._refCache.get(ref);if(!pageIndexSet){return null}if(pageIndexSet.size<GlobalImageCache.NUM_PAGES_THRESHOLD){return null}const imageData=this._imageCache.get(ref);if(!imageData){return null}pageIndexSet.add(pageIndex);return imageData}setData(ref,data){if(!this._refCache.has(ref)){throw new Error('GlobalImageCache.setData - expected \"shouldCache\" to have been called.')}if(this._imageCache.has(ref)){return}if(this.#cacheLimitReached){warn(\"GlobalImageCache.setData - cache limit reached.\");return}this._imageCache.put(ref,data)}clear(onlyData=false){if(!onlyData){this.#decodeFailedSet.clear();this._refCache.clear()}this._imageCache.clear()}}class PDFFunctionFactory{constructor({xref:xref,isEvalSupported:isEvalSupported=true}){this.xref=xref;this.isEvalSupported=isEvalSupported!==false}create(fn,parseArray=false){let fnRef,parsedFn;if(fn instanceof Ref){fnRef=fn}else if(fn instanceof Dict){fnRef=fn.objId}else if(fn instanceof BaseStream){fnRef=fn.dict?.objId}if(fnRef){const cachedFn=this._localFunctionCache.getByRef(fnRef);if(cachedFn){return cachedFn}}const fnObj=this.xref.fetchIfRef(fn);if(Array.isArray(fnObj)){if(!parseArray){throw new Error('PDFFunctionFactory.create - expected \"parseArray\" argument.')}parsedFn=PDFFunction.parseArray(this,fnObj)}else{parsedFn=PDFFunction.parse(this,fnObj)}if(fnRef){this._localFunctionCache.set(null,fnRef,parsedFn)}return parsedFn}get _localFunctionCache(){return shadow(this,\"_localFunctionCache\",new LocalFunctionCache)}}function toNumberArray(arr){if(!Array.isArray(arr)){return null}if(!isNumberArray(arr,null)){return arr.map((x=>+x))}return arr}class PDFFunction{static getSampleArray(size,outputSize,bps,stream){let i,ii;let length=1;for(i=0,ii=size.length;i<ii;i++){length*=size[i]}length*=outputSize;const array=new Array(length);let codeSize=0;let codeBuf=0;const sampleMul=1/(2**bps-1);const strBytes=stream.getBytes((length*bps+7)/8);let strIdx=0;for(i=0;i<length;i++){while(codeSize<bps){codeBuf<<=8;codeBuf|=strBytes[strIdx++];codeSize+=8}codeSize-=bps;array[i]=(codeBuf>>codeSize)*sampleMul;codeBuf&=(1<<codeSize)-1}return array}static parse(factory,fn){const dict=fn.dict||fn;const typeNum=dict.get(\"FunctionType\");switch(typeNum){case 0:return this.constructSampled(factory,fn,dict);case 1:break;case 2:return this.constructInterpolated(factory,dict);case 3:return this.constructStiched(factory,dict);case 4:return this.constructPostScript(factory,fn,dict)}throw new FormatError(\"Unknown type of function\")}static parseArray(factory,fnObj){const{xref:xref}=factory;const fnArray=[];for(const fn of fnObj){fnArray.push(this.parse(factory,xref.fetchIfRef(fn)))}return function(src,srcOffset,dest,destOffset){for(let i=0,ii=fnArray.length;i<ii;i++){fnArray[i](src,srcOffset,dest,destOffset+i)}}}static constructSampled(factory,fn,dict){function toMultiArray(arr){const inputLength=arr.length;const out=[];let index=0;for(let i=0;i<inputLength;i+=2){out[index++]=[arr[i],arr[i+1]]}return out}function interpolate(x,xmin,xmax,ymin,ymax){return ymin+(x-xmin)*((ymax-ymin)/(xmax-xmin))}let domain=toNumberArray(dict.getArray(\"Domain\"));let range=toNumberArray(dict.getArray(\"Range\"));if(!domain||!range){throw new FormatError(\"No domain or range\")}const inputSize=domain.length/2;const outputSize=range.length/2;domain=toMultiArray(domain);range=toMultiArray(range);const size=toNumberArray(dict.getArray(\"Size\"));const bps=dict.get(\"BitsPerSample\");const order=dict.get(\"Order\")||1;if(order!==1){info(\"No support for cubic spline interpolation: \"+order)}let encode=toNumberArray(dict.getArray(\"Encode\"));if(!encode){encode=[];for(let i=0;i<inputSize;++i){encode.push([0,size[i]-1])}}else{encode=toMultiArray(encode)}let decode=toNumberArray(dict.getArray(\"Decode\"));decode=!decode?range:toMultiArray(decode);const samples=this.getSampleArray(size,outputSize,bps,fn);return function constructSampledFn(src,srcOffset,dest,destOffset){const cubeVertices=1<<inputSize;const cubeN=new Float64Array(cubeVertices).fill(1);const cubeVertex=new Uint32Array(cubeVertices);let i,j;let k=outputSize,pos=1;for(i=0;i<inputSize;++i){const domain_2i=domain[i][0];const domain_2i_1=domain[i][1];const xi=MathClamp(src[srcOffset+i],domain_2i,domain_2i_1);let e=interpolate(xi,domain_2i,domain_2i_1,encode[i][0],encode[i][1]);const size_i=size[i];e=MathClamp(e,0,size_i-1);const e0=e<size_i-1?Math.floor(e):e-1;const n0=e0+1-e;const n1=e-e0;const offset0=e0*k;const offset1=offset0+k;for(j=0;j<cubeVertices;j++){if(j&pos){cubeN[j]*=n1;cubeVertex[j]+=offset1}else{cubeN[j]*=n0;cubeVertex[j]+=offset0}}k*=size_i;pos<<=1}for(j=0;j<outputSize;++j){let rj=0;for(i=0;i<cubeVertices;i++){rj+=samples[cubeVertex[i]+j]*cubeN[i]}rj=interpolate(rj,0,1,decode[j][0],decode[j][1]);dest[destOffset+j]=MathClamp(rj,range[j][0],range[j][1])}}}static constructInterpolated(factory,dict){const c0=toNumberArray(dict.getArray(\"C0\"))||[0];const c1=toNumberArray(dict.getArray(\"C1\"))||[1];const n=dict.get(\"N\");const diff=[];for(let i=0,ii=c0.length;i<ii;++i){diff.push(c1[i]-c0[i])}const length=diff.length;return function constructInterpolatedFn(src,srcOffset,dest,destOffset){const x=n===1?src[srcOffset]:src[srcOffset]**n;for(let j=0;j<length;++j){dest[destOffset+j]=c0[j]+x*diff[j]}}}static constructStiched(factory,dict){const domain=toNumberArray(dict.getArray(\"Domain\"));if(!domain){throw new FormatError(\"No domain\")}const inputSize=domain.length/2;if(inputSize!==1){throw new FormatError(\"Bad domain for stiched function\")}const{xref:xref}=factory;const fns=[];for(const fn of dict.get(\"Functions\")){fns.push(this.parse(factory,xref.fetchIfRef(fn)))}const bounds=toNumberArray(dict.getArray(\"Bounds\"));const encode=toNumberArray(dict.getArray(\"Encode\"));const tmpBuf=new Float32Array(1);return function constructStichedFn(src,srcOffset,dest,destOffset){const v=MathClamp(src[srcOffset],domain[0],domain[1]);const length=bounds.length;let i;for(i=0;i<length;++i){if(v<bounds[i]){break}}let dmin=domain[0];if(i>0){dmin=bounds[i-1]}let dmax=domain[1];if(i<bounds.length){dmax=bounds[i]}const rmin=encode[2*i];const rmax=encode[2*i+1];tmpBuf[0]=dmin===dmax?rmin:rmin+(v-dmin)*(rmax-rmin)/(dmax-dmin);fns[i](tmpBuf,0,dest,destOffset)}}static constructPostScript(factory,fn,dict){const domain=toNumberArray(dict.getArray(\"Domain\"));const range=toNumberArray(dict.getArray(\"Range\"));if(!domain){throw new FormatError(\"No domain.\")}if(!range){throw new FormatError(\"No range.\")}const lexer=new PostScriptLexer(fn);const parser=new PostScriptParser(lexer);const code=parser.parse();if(factory.isEvalSupported&&FeatureTest.isEvalSupported){const compiled=(new PostScriptCompiler).compile(code,domain,range);if(compiled){return new Function(\"src\",\"srcOffset\",\"dest\",\"destOffset\",compiled)}}info(\"Unable to compile PS function\");const numOutputs=range.length>>1;const numInputs=domain.length>>1;const evaluator=new PostScriptEvaluator(code);const cache=Object.create(null);const MAX_CACHE_SIZE=2048*4;let cache_available=MAX_CACHE_SIZE;const tmpBuf=new Float32Array(numInputs);return function constructPostScriptFn(src,srcOffset,dest,destOffset){let i,value;let key=\"\";const input=tmpBuf;for(i=0;i<numInputs;i++){value=src[srcOffset+i];input[i]=value;key+=value+\"_\"}const cachedValue=cache[key];if(cachedValue!==undefined){dest.set(cachedValue,destOffset);return}const output=new Float32Array(numOutputs);const stack=evaluator.execute(input);const stackIndex=stack.length-numOutputs;for(i=0;i<numOutputs;i++){value=stack[stackIndex+i];let bound=range[i*2];if(value<bound){value=bound}else{bound=range[i*2+1];if(value>bound){value=bound}}output[i]=value}if(cache_available>0){cache_available--;cache[key]=output}dest.set(output,destOffset)}}}function isPDFFunction(v){let fnDict;if(v instanceof Dict){fnDict=v}else if(v instanceof BaseStream){fnDict=v.dict}else{return false}return fnDict.has(\"FunctionType\")}class PostScriptStack{static MAX_STACK_SIZE=100;constructor(initialStack){this.stack=initialStack?Array.from(initialStack):[]}push(value){if(this.stack.length>=PostScriptStack.MAX_STACK_SIZE){throw new Error(\"PostScript function stack overflow.\")}this.stack.push(value)}pop(){if(this.stack.length<=0){throw new Error(\"PostScript function stack underflow.\")}return this.stack.pop()}copy(n){if(this.stack.length+n>=PostScriptStack.MAX_STACK_SIZE){throw new Error(\"PostScript function stack overflow.\")}const stack=this.stack;for(let i=stack.length-n,j=n-1;j>=0;j--,i++){stack.push(stack[i])}}index(n){this.push(this.stack[this.stack.length-n-1])}roll(n,p){const stack=this.stack;const l=stack.length-n;const r=stack.length-1;const c=l+(p-Math.floor(p/n)*n);for(let i=l,j=r;i<j;i++,j--){const t=stack[i];stack[i]=stack[j];stack[j]=t}for(let i=l,j=c-1;i<j;i++,j--){const t=stack[i];stack[i]=stack[j];stack[j]=t}for(let i=c,j=r;i<j;i++,j--){const t=stack[i];stack[i]=stack[j];stack[j]=t}}}class PostScriptEvaluator{constructor(operators){this.operators=operators}execute(initialStack){const stack=new PostScriptStack(initialStack);let counter=0;const operators=this.operators;const length=operators.length;let operator,a,b;while(counter<length){operator=operators[counter++];if(typeof operator===\"number\"){stack.push(operator);continue}switch(operator){case\"jz\":b=stack.pop();a=stack.pop();if(!a){counter=b}break;case\"j\":a=stack.pop();counter=a;break;case\"abs\":a=stack.pop();stack.push(Math.abs(a));break;case\"add\":b=stack.pop();a=stack.pop();stack.push(a+b);break;case\"and\":b=stack.pop();a=stack.pop();if(typeof a===\"boolean\"&&typeof b===\"boolean\"){stack.push(a&&b)}else{stack.push(a&b)}break;case\"atan\":b=stack.pop();a=stack.pop();a=Math.atan2(a,b)/Math.PI*180;if(a<0){a+=360}stack.push(a);break;case\"bitshift\":b=stack.pop();a=stack.pop();if(a>0){stack.push(a<<b)}else{stack.push(a>>b)}break;case\"ceiling\":a=stack.pop();stack.push(Math.ceil(a));break;case\"copy\":a=stack.pop();stack.copy(a);break;case\"cos\":a=stack.pop();stack.push(Math.cos(a%360/180*Math.PI));break;case\"cvi\":a=stack.pop()|0;stack.push(a);break;case\"cvr\":break;case\"div\":b=stack.pop();a=stack.pop();stack.push(a/b);break;case\"dup\":stack.copy(1);break;case\"eq\":b=stack.pop();a=stack.pop();stack.push(a===b);break;case\"exch\":stack.roll(2,1);break;case\"exp\":b=stack.pop();a=stack.pop();stack.push(a**b);break;case\"false\":stack.push(false);break;case\"floor\":a=stack.pop();stack.push(Math.floor(a));break;case\"ge\":b=stack.pop();a=stack.pop();stack.push(a>=b);break;case\"gt\":b=stack.pop();a=stack.pop();stack.push(a>b);break;case\"idiv\":b=stack.pop();a=stack.pop();stack.push(a/b|0);break;case\"index\":a=stack.pop();stack.index(a);break;case\"le\":b=stack.pop();a=stack.pop();stack.push(a<=b);break;case\"ln\":a=stack.pop();stack.push(Math.log(a));break;case\"log\":a=stack.pop();stack.push(Math.log10(a));break;case\"lt\":b=stack.pop();a=stack.pop();stack.push(a<b);break;case\"mod\":b=stack.pop();a=stack.pop();stack.push(a%b);break;case\"mul\":b=stack.pop();a=stack.pop();stack.push(a*b);break;case\"ne\":b=stack.pop();a=stack.pop();stack.push(a!==b);break;case\"neg\":a=stack.pop();stack.push(-a);break;case\"not\":a=stack.pop();if(typeof a===\"boolean\"){stack.push(!a)}else{stack.push(~a)}break;case\"or\":b=stack.pop();a=stack.pop();if(typeof a===\"boolean\"&&typeof b===\"boolean\"){stack.push(a||b)}else{stack.push(a|b)}break;case\"pop\":stack.pop();break;case\"roll\":b=stack.pop();a=stack.pop();stack.roll(a,b);break;case\"round\":a=stack.pop();stack.push(Math.round(a));break;case\"sin\":a=stack.pop();stack.push(Math.sin(a%360/180*Math.PI));break;case\"sqrt\":a=stack.pop();stack.push(Math.sqrt(a));break;case\"sub\":b=stack.pop();a=stack.pop();stack.push(a-b);break;case\"true\":stack.push(true);break;case\"truncate\":a=stack.pop();a=a<0?Math.ceil(a):Math.floor(a);stack.push(a);break;case\"xor\":b=stack.pop();a=stack.pop();if(typeof a===\"boolean\"&&typeof b===\"boolean\"){stack.push(a!==b)}else{stack.push(a^b)}break;default:throw new FormatError(`Unknown operator ${operator}`)}}return stack.stack}}class AstNode{constructor(type){this.type=type}visit(visitor){unreachable(\"abstract method\")}}class AstArgument extends AstNode{constructor(index,min,max){super(\"args\");this.index=index;this.min=min;this.max=max}visit(visitor){visitor.visitArgument(this)}}class AstLiteral extends AstNode{constructor(number){super(\"literal\");this.number=number;this.min=number;this.max=number}visit(visitor){visitor.visitLiteral(this)}}class AstBinaryOperation extends AstNode{constructor(op,arg1,arg2,min,max){super(\"binary\");this.op=op;this.arg1=arg1;this.arg2=arg2;this.min=min;this.max=max}visit(visitor){visitor.visitBinaryOperation(this)}}class AstMin extends AstNode{constructor(arg,max){super(\"max\");this.arg=arg;this.min=arg.min;this.max=max}visit(visitor){visitor.visitMin(this)}}class AstVariable extends AstNode{constructor(index,min,max){super(\"var\");this.index=index;this.min=min;this.max=max}visit(visitor){visitor.visitVariable(this)}}class AstVariableDefinition extends AstNode{constructor(variable,arg){super(\"definition\");this.variable=variable;this.arg=arg}visit(visitor){visitor.visitVariableDefinition(this)}}class ExpressionBuilderVisitor{constructor(){this.parts=[]}visitArgument(arg){this.parts.push(\"Math.max(\",arg.min,\", Math.min(\",arg.max,\", src[srcOffset + \",arg.index,\"]))\")}visitVariable(variable){this.parts.push(\"v\",variable.index)}visitLiteral(literal){this.parts.push(literal.number)}visitBinaryOperation(operation){this.parts.push(\"(\");operation.arg1.visit(this);this.parts.push(\" \",operation.op,\" \");operation.arg2.visit(this);this.parts.push(\")\")}visitVariableDefinition(definition){this.parts.push(\"var \");definition.variable.visit(this);this.parts.push(\" = \");definition.arg.visit(this);this.parts.push(\";\")}visitMin(max){this.parts.push(\"Math.min(\");max.arg.visit(this);this.parts.push(\", \",max.max,\")\")}toString(){return this.parts.join(\"\")}}function buildAddOperation(num1,num2){if(num2.type===\"literal\"&&num2.number===0){return num1}if(num1.type===\"literal\"&&num1.number===0){return num2}if(num2.type===\"literal\"&&num1.type===\"literal\"){return new AstLiteral(num1.number+num2.number)}return new AstBinaryOperation(\"+\",num1,num2,num1.min+num2.min,num1.max+num2.max)}function buildMulOperation(num1,num2){if(num2.type===\"literal\"){if(num2.number===0){return new AstLiteral(0)}else if(num2.number===1){return num1}else if(num1.type===\"literal\"){return new AstLiteral(num1.number*num2.number)}}if(num1.type===\"literal\"){if(num1.number===0){return new AstLiteral(0)}else if(num1.number===1){return num2}}const min=Math.min(num1.min*num2.min,num1.min*num2.max,num1.max*num2.min,num1.max*num2.max);const max=Math.max(num1.min*num2.min,num1.min*num2.max,num1.max*num2.min,num1.max*num2.max);return new AstBinaryOperation(\"*\",num1,num2,min,max)}function buildSubOperation(num1,num2){if(num2.type===\"literal\"){if(num2.number===0){return num1}else if(num1.type===\"literal\"){return new AstLiteral(num1.number-num2.number)}}if(num2.type===\"binary\"&&num2.op===\"-\"&&num1.type===\"literal\"&&num1.number===1&&num2.arg1.type===\"literal\"&&num2.arg1.number===1){return num2.arg2}return new AstBinaryOperation(\"-\",num1,num2,num1.min-num2.max,num1.max-num2.min)}function buildMinOperation(num1,max){if(num1.min>=max){return new AstLiteral(max)}else if(num1.max<=max){return num1}return new AstMin(num1,max)}class PostScriptCompiler{compile(code,domain,range){const stack=[];const instructions=[];const inputSize=domain.length>>1,outputSize=range.length>>1;let lastRegister=0;let n,j;let num1,num2,ast1,ast2,tmpVar,item;for(let i=0;i<inputSize;i++){stack.push(new AstArgument(i,domain[i*2],domain[i*2+1]))}for(let i=0,ii=code.length;i<ii;i++){item=code[i];if(typeof item===\"number\"){stack.push(new AstLiteral(item));continue}switch(item){case\"add\":if(stack.length<2){return null}num2=stack.pop();num1=stack.pop();stack.push(buildAddOperation(num1,num2));break;case\"cvr\":if(stack.length<1){return null}break;case\"mul\":if(stack.length<2){return null}num2=stack.pop();num1=stack.pop();stack.push(buildMulOperation(num1,num2));break;case\"sub\":if(stack.length<2){return null}num2=stack.pop();num1=stack.pop();stack.push(buildSubOperation(num1,num2));break;case\"exch\":if(stack.length<2){return null}ast1=stack.pop();ast2=stack.pop();stack.push(ast1,ast2);break;case\"pop\":if(stack.length<1){return null}stack.pop();break;case\"index\":if(stack.length<1){return null}num1=stack.pop();if(num1.type!==\"literal\"){return null}n=num1.number;if(n<0||!Number.isInteger(n)||stack.length<n){return null}ast1=stack[stack.length-n-1];if(ast1.type===\"literal\"||ast1.type===\"var\"){stack.push(ast1);break}tmpVar=new AstVariable(lastRegister++,ast1.min,ast1.max);stack[stack.length-n-1]=tmpVar;stack.push(tmpVar);instructions.push(new AstVariableDefinition(tmpVar,ast1));break;case\"dup\":if(stack.length<1){return null}if(typeof code[i+1]===\"number\"&&code[i+2]===\"gt\"&&code[i+3]===i+7&&code[i+4]===\"jz\"&&code[i+5]===\"pop\"&&code[i+6]===code[i+1]){num1=stack.pop();stack.push(buildMinOperation(num1,code[i+1]));i+=6;break}ast1=stack.at(-1);if(ast1.type===\"literal\"||ast1.type===\"var\"){stack.push(ast1);break}tmpVar=new AstVariable(lastRegister++,ast1.min,ast1.max);stack[stack.length-1]=tmpVar;stack.push(tmpVar);instructions.push(new AstVariableDefinition(tmpVar,ast1));break;case\"roll\":if(stack.length<2){return null}num2=stack.pop();num1=stack.pop();if(num2.type!==\"literal\"||num1.type!==\"literal\"){return null}j=num2.number;n=num1.number;if(n<=0||!Number.isInteger(n)||!Number.isInteger(j)||stack.length<n){return null}j=(j%n+n)%n;if(j===0){break}stack.push(...stack.splice(stack.length-n,n-j));break;default:return null}}if(stack.length!==outputSize){return null}const result=[];for(const instruction of instructions){const statementBuilder=new ExpressionBuilderVisitor;instruction.visit(statementBuilder);result.push(statementBuilder.toString())}for(let i=0,ii=stack.length;i<ii;i++){const expr=stack[i],statementBuilder=new ExpressionBuilderVisitor;expr.visit(statementBuilder);const min=range[i*2],max=range[i*2+1];const out=[statementBuilder.toString()];if(min>expr.min){out.unshift(\"Math.max(\",min,\", \");out.push(\")\")}if(max<expr.max){out.unshift(\"Math.min(\",max,\", \");out.push(\")\")}out.unshift(\"dest[destOffset + \",i,\"] = \");out.push(\";\");result.push(out.join(\"\"))}return result.join(\"\\n\")}}const baseTypesconst arabicTypes=[\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"ON\",\"ON\",\"AL\",\"ET\",\"ET\",\"AL\",\"CS\",\"AL\",\"ON\",\"ON\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AL\",\"AL\",\"\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"AN\",\"ET\",\"AN\",\"AN\",\"AL\",\"AL\",\"AL\",\"NSM\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AN\",\"ON\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AL\",\"AL\",\"NSM\",\"NSM\",\"ON\",\"NSM\",\"NSM\",\"NSM\",\"NSM\",\"AL\",\"AL\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"EN\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\",\"AL\"];function isOdd(i){return(i&1)!==0}function isEven(i){return(i&1)===0}function findUnequal(arr,start,value){let j,jj;for(j=start,jj=arr.length;j<jj;++j){if(arr[j]!==value){return j}}return j}function reverseValues(arr,start,end){for(let i=start,j=end-1;i<j;++i,--j){const temp=arr[i];arr[i]=arr[j];arr[j]=temp}}function createBidiText(str,isLTR,vertical=false){let dir=\"ltr\";if(vertical){dir=\"ttb\"}else if(!isLTR){dir=\"rtl\"}return{str:str,dir:dir}}const chars=[];const types=[];function bidi(str,startLevel=-1,vertical=false){let isLTR=true;const strLength=str.length;if(strLength===0||vertical){return createBidiText(str,isLTR,vertical)}chars.length=strLength;types.length=strLength;let numBidi=0;let i,ii;for(i=0;i<strLength;++i){chars[i]=str.charAt(i);const charCode=str.charCodeAt(i);let charType=\"L\";if(charCode<=255){charType=baseTypes[charCode]}else if(1424<=charCode&&charCode<=1524){charType=\"R\"}else if(1536<=charCode&&charCode<=1791){charType=arabicTypes[charCode&255];if(!charType){warn(\"Bidi: invalid Unicode character \"+charCode.toString(16))}}else if(1792<=charCode&&charCode<=2220||64336<=charCode&&charCode<=65023||65136<=charCode&&charCode<=65279){charType=\"AL\"}if(charType===\"R\"||charType===\"AL\"||charType===\"AN\"){numBidi++}types[i]=charType}if(numBidi===0){isLTR=true;return createBidiText(str,isLTR)}if(startLevel===-1){if(numBidi/strLength<.3&&strLength>4){isLTR=true;startLevel=0}else{isLTR=false;startLevel=1}}const levels=[];for(i=0;i<strLength;++i){levels[i]=startLevel}const e=isOdd(startLevel)?\"R\":\"L\";const sor=e;const eor=sor;let lastType=sor;for(i=0;i<strLength;++i){if(types[i]===\"NSM\"){types[i]=lastType}else{lastType=types[i]}}lastType=sor;let t;for(i=0;i<strLength;++i){t=types[i];if(t===\"EN\"){types[i]=lastType===\"AL\"?\"AN\":\"EN\"}else if(t===\"R\"||t===\"L\"||t===\"AL\"){lastType=t}}for(i=0;i<strLength;++i){t=types[i];if(t===\"AL\"){types[i]=\"R\"}}for(i=1;i<strLength-1;++i){if(types[i]===\"ES\"&&types[i-1]===\"EN\"&&types[i+1]===\"EN\"){types[i]=\"EN\"}if(types[i]===\"CS\"&&(types[i-1]===\"EN\"||types[i-1]===\"AN\")&&types[i+1]===types[i-1]){types[i]=types[i-1]}}for(i=0;i<strLength;++i){if(types[i]===\"EN\"){for(let j=i-1;j>=0;--j){if(types[j]!==\"ET\"){break}types[j]=\"EN\"}for(let j=i+1;j<strLength;++j){if(types[j]!==\"ET\"){break}types[j]=\"EN\"}}}for(i=0;i<strLength;++i){t=types[i];if(t===\"WS\"||t===\"ES\"||t===\"ET\"||t===\"CS\"){types[i]=\"ON\"}}lastType=sor;for(i=0;i<strLength;++i){t=types[i];if(t===\"EN\"){types[i]=lastType===\"L\"?\"L\":\"EN\"}else if(t===\"R\"||t===\"L\"){lastType=t}}for(i=0;i<strLength;++i){if(types[i]===\"ON\"){const end=findUnequal(types,i+1,\"ON\");let before=sor;if(i>0){before=types[i-1]}let after=eor;if(end+1<strLength){after=types[end+1]}if(before!==\"L\"){before=\"R\"}if(after!==\"L\"){after=\"R\"}if(before===after){types.fill(before,i,end)}i=end-1}}for(i=0;i<strLength;++i){if(types[i]===\"ON\"){types[i]=e}}for(i=0;i<strLength;++i){t=types[i];if(isEven(levels[i])){if(t===\"R\"){levels[i]+=1}else if(t===\"AN\"||t===\"EN\"){levels[i]+=2}}else if(t===\"L\"||t===\"AN\"||t===\"EN\"){levels[i]+=1}}let highestLevel=-1;let lowestOddLevel=99;let level;for(i=0,ii=levels.length;i<ii;++i){level=levels[i];if(highestLevel<level){highestLevel=level}if(lowestOddLevel>level&&isOdd(level)){lowestOddLevel=level}}for(level=highestLevel;level>=lowestOddLevel;--level){let start=-1;for(i=0,ii=levels.length;i<ii;++i){if(levels[i]<level){if(start>=0){reverseValues(chars,start,i);start=-1}}else if(start<0){start=i}}if(start>=0){reverseValues(chars,start,levels.length)}}for(i=0,ii=chars.length;i<ii;++i){const ch=chars[i];if(ch===\"<\"||ch===\">\"){chars[i]=\"\"}}return createBidiText(chars.join(\"\"),isLTR)}const NORMAL={style:\"normal\",weight:\"normal\"};const BOLD={style:\"normal\",weight:\"bold\"};const ITALIC={style:\"italic\",weight:\"normal\"};const BOLDITALIC={style:\"italic\",weight:\"bold\"};const substitutionMap=new Map([[\"Times-Roman\",{local:[\"Times New Roman\",\"Times-Roman\",\"Times\",\"Liberation Serif\",\"Nimbus Roman\",\"Nimbus Roman L\",\"Tinos\",\"Thorndale\",\"TeX Gyre Termes\",\"FreeSerif\",\"Linux Libertine O\",\"Libertinus Serif\",\"DejaVu Serif\",\"Bitstream Vera Serif\",\"Ubuntu\"],style:NORMAL,ultimate:\"serif\"}],[\"Times-Bold\",{alias:\"Times-Roman\",style:BOLD,ultimate:\"serif\"}],[\"Times-Italic\",{alias:\"Times-Roman\",style:ITALIC,ultimate:\"serif\"}],[\"Times-BoldItalic\",{alias:\"Times-Roman\",style:BOLDITALIC,ultimate:\"serif\"}],[\"Helvetica\",{local:[\"Helvetica\",\"Helvetica Neue\",\"Arial\",\"Arial Nova\",\"Liberation Sans\",\"Arimo\",\"Nimbus Sans\",\"Nimbus Sans L\",\"A030\",\"TeX Gyre Heros\",\"FreeSans\",\"DejaVu Sans\",\"Albany\",\"Bitstream Vera Sans\",\"Arial Unicode MS\",\"Microsoft Sans Serif\",\"Apple Symbols\",\"Cantarell\"],path:\"LiberationSans-Regular.ttf\",style:NORMAL,ultimate:\"sans-serif\"}],[\"Helvetica-Bold\",{alias:\"Helvetica\",path:\"LiberationSans-Bold.ttf\",style:BOLD,ultimate:\"sans-serif\"}],[\"Helvetica-Oblique\",{alias:\"Helvetica\",path:\"LiberationSans-Italic.ttf\",style:ITALIC,ultimate:\"sans-serif\"}],[\"Helvetica-BoldOblique\",{alias:\"Helvetica\",path:\"LiberationSans-BoldItalic.ttf\",style:BOLDITALIC,ultimate:\"sans-serif\"}],[\"Courier\",{local:[\"Courier\",\"Courier New\",\"Liberation Mono\",\"Nimbus Mono\",\"Nimbus Mono L\",\"Cousine\",\"Cumberland\",\"TeX Gyre Cursor\",\"FreeMono\",\"Linux Libertine Mono O\",\"Libertinus Mono\"],style:NORMAL,ultimate:\"monospace\"}],[\"Courier-Bold\",{alias:\"Courier\",style:BOLD,ultimate:\"monospace\"}],[\"Courier-Oblique\",{alias:\"Courier\",style:ITALIC,ultimate:\"monospace\"}],[\"Courier-BoldOblique\",{alias:\"Courier\",style:BOLDITALIC,ultimate:\"monospace\"}],[\"ArialBlack\",{local:[\"Arial Black\"],style:{style:\"normal\",weight:\"900\"},fallback:\"Helvetica-Bold\"}],[\"ArialBlack-Bold\",{alias:\"ArialBlack\"}],[\"ArialBlack-Italic\",{alias:\"ArialBlack\",style:{style:\"italic\",weight:\"900\"},fallback:\"Helvetica-BoldOblique\"}],[\"ArialBlack-BoldItalic\",{alias:\"ArialBlack-Italic\"}],[\"ArialNarrow\",{local:[\"Arial Narrow\",\"Liberation Sans Narrow\",\"Helvetica Condensed\",\"Nimbus Sans Narrow\",\"TeX Gyre Heros Cn\"],style:NORMAL,fallback:\"Helvetica\"}],[\"ArialNarrow-Bold\",{alias:\"ArialNarrow\",style:BOLD,fallback:\"Helvetica-Bold\"}],[\"ArialNarrow-Italic\",{alias:\"ArialNarrow\",style:ITALIC,fallback:\"Helvetica-Oblique\"}],[\"ArialNarrow-BoldItalic\",{alias:\"ArialNarrow\",style:BOLDITALIC,fallback:\"Helvetica-BoldOblique\"}],[\"Calibri\",{local:[\"Calibri\",\"Carlito\"],style:NORMAL,fallback:\"Helvetica\"}],[\"Calibri-Bold\",{alias:\"Calibri\",style:BOLD,fallback:\"Helvetica-Bold\"}],[\"Calibri-Italic\",{alias:\"Calibri\",style:ITALIC,fallback:\"Helvetica-Oblique\"}],[\"Calibri-BoldItalic\",{alias:\"Calibri\",style:BOLDITALIC,fallback:\"Helvetica-BoldOblique\"}],[\"Wingdings\",{local:[\"Wingdings\",\"URW Dingbats\"],style:NORMAL}],[\"Wingdings-Regular\",{alias:\"Wingdings\"}],[\"Wingdings-Bold\",{alias:\"Wingdings\"}]]);const fontAliases=new Map([[\"Arial-Black\",\"ArialBlack\"]]);function getStyleToAppend(style){switch(style){case BOLD:return\"Bold\";case ITALIC:return\"Italic\";case BOLDITALIC:return\"Bold Italic\";default:if(style?.weight===\"bold\"){return\"Bold\"}if(style?.style===\"italic\"){return\"Italic\"}}return\"\"}function getFamilyName(str){const keywords=new Set([\"thin\",\"extralight\",\"ultralight\",\"demilight\",\"semilight\",\"light\",\"book\",\"regular\",\"normal\",\"medium\",\"demibold\",\"semibold\",\"bold\",\"extrabold\",\"ultrabold\",\"black\",\"heavy\",\"extrablack\",\"ultrablack\",\"roman\",\"italic\",\"oblique\",\"ultracondensed\",\"extracondensed\",\"condensed\",\"semicondensed\",\"normal\",\"semiexpanded\",\"expanded\",\"extraexpanded\",\"ultraexpanded\",\"bolditalic\"]);return str.split(/[- ,+]+/g).filter((tok=>!keywords.has(tok.toLowerCase()))).join(\" \")}function generateFont({alias:alias,local:local,path:path,fallback:fallback,style:style,ultimate:ultimate},src,localFontPath,useFallback=true,usePath=true,append=\"\"){const result={style:null,ultimate:null};if(local){const extra=append?` ${append}`:\"\";for(const name of local){src.push(`local(${name}${extra})`)}}if(alias){const substitution=substitutionMap.get(alias);const aliasAppend=append||getStyleToAppend(style);Object.assign(result,generateFont(substitution,src,localFontPath,useFallback&&!fallback,usePath&&!path,aliasAppend))}if(style){result.style=style}if(ultimate){result.ultimate=ultimate}if(useFallback&&fallback){const fallbackInfo=substitutionMap.get(fallback);const{ultimate:fallbackUltimate}=generateFont(fallbackInfo,src,localFontPath,useFallback,usePath&&!path,append);result.ultimate||=fallbackUltimate}if(usePath&&path&&localFontPath){src.push(`url(${localFontPath}${path})`)}return result}function getFontSubstitution(systemFontCache,idFactory,localFontPath,baseFontName,standardFontName,type){if(baseFontName.startsWith(\"InvalidPDFjsFont_\")){return null}if((type===\"TrueType\"||type===\"Type1\")&&/^[A-Z]{6}\\+/.test(baseFontName)){baseFontName=baseFontName.slice(7)}baseFontName=normalizeFontName(baseFontName);const key=baseFontName;let substitutionInfo=systemFontCache.get(key);if(substitutionInfo){return substitutionInfo}let substitution=substitutionMap.get(baseFontName);if(!substitution){for(const[alias,subst]of fontAliases){if(baseFontName.startsWith(alias)){baseFontName=`${subst}${baseFontName.substring(alias.length)}`;substitution=substitutionMap.get(baseFontName);break}}}let mustAddBaseFont=false;if(!substitution){substitution=substitutionMap.get(standardFontName);mustAddBaseFont=true}const loadedName=`${idFactory.getDocId()}_s${idFactory.createFontId()}`;if(!substitution){if(!validateFontName(baseFontName)){warn(`Cannot substitute the font because of its name: ${baseFontName}`);systemFontCache.set(key,null);return null}const bold=/bold/gi.test(baseFontName);const italic=/oblique|italic/gi.test(baseFontName);const style=bold&&italic&&BOLDITALIC||bold&&BOLD||italic&&ITALIC||NORMAL;substitutionInfo={css:`\"${getFamilyName(baseFontName)}\",${loadedName}`,guessFallback:true,loadedName:loadedName,baseFontName:baseFontName,src:`local(${baseFontName})`,style:style};systemFontCache.set(key,substitutionInfo);return substitutionInfo}const src=[];if(mustAddBaseFont&&validateFontName(baseFontName)){src.push(`local(${baseFontName})`)}const{style:style,ultimate:ultimate}=generateFont(substitution,src,localFontPath);const guessFallback=ultimate===null;const fallback=guessFallback?\"\":`,${ultimate}`;substitutionInfo={css:`\"${getFamilyName(baseFontName)}\",${loadedName}${fallback}`,guessFallback:guessFallback,loadedName:loadedName,baseFontName:baseFontName,src:src.join(\",\"),style:style};systemFontCache.set(key,substitutionInfo);return substitutionInfo}const SEED=3285377520;const MASK_HIGH=4294901760;const MASK_LOW=65535;class MurmurHash3_64{constructor(seed){this.h1=seed?seed&4294967295:SEED;this.h2=seed?seed&4294967295:SEED}update(input){let data,length;if(typeof input===\"string\"){data=new Uint8Array(input.length*2);length=0;for(let i=0,ii=input.length;i<ii;i++){const code=input.charCodeAt(i);if(code<=255){data[length++]=code}else{data[length++]=code>>>8;data[length++]=code&255}}}else if(ArrayBuffer.isView(input)){data=input.slice();length=data.byteLength}else{throw new Error(\"Invalid data format, must be a string or TypedArray.\")}const blockCounts=length>>2;const tailLength=length-blockCounts*4;const dataUint32=new Uint32Array(data.buffer,0,blockCounts);let k1=0,k2=0;let h1=this.h1,h2=this.h2;const C1=3432918353,C2=461845907;const C1_LOW=C1&MASK_LOW,C2_LOW=C2&MASK_LOW;for(let i=0;i<blockCounts;i++){if(i&1){k1=dataUint32[i];k1=k1*C1&MASK_HIGH|k1*C1_LOW&MASK_LOW;k1=k1<<15|k1>>>17;k1=k1*C2&MASK_HIGH|k1*C2_LOW&MASK_LOW;h1^=k1;h1=h1<<13|h1>>>19;h1=h1*5+3864292196}else{k2=dataUint32[i];k2=k2*C1&MASK_HIGH|k2*C1_LOW&MASK_LOW;k2=k2<<15|k2>>>17;k2=k2*C2&MASK_HIGH|k2*C2_LOW&MASK_LOW;h2^=k2;h2=h2<<13|h2>>>19;h2=h2*5+3864292196}}k1=0;switch(tailLength){case 3:k1^=data[blockCounts*4+2]<<16;case 2:k1^=data[blockCounts*4+1]<<8;case 1:k1^=data[blockCounts*4];k1=k1*C1&MASK_HIGH|k1*C1_LOW&MASK_LOW;k1=k1<<15|k1>>>17;k1=k1*C2&MASK_HIGH|k1*C2_LOW&MASK_LOW;if(blockCounts&1){h1^=k1}else{h2^=k1}}this.h1=h1;this.h2=h2}hexdigest(){let h1=this.h1,h2=this.h2;h1^=h2>>>1;h1=h1*3981806797&MASK_HIGH|h1*36045&MASK_LOW;h2=h2*4283543511&MASK_HIGH|((h2<<16|h1>>>16)*2950163797&MASK_HIGH)>>>16;h1^=h2>>>1;h1=h1*444984403&MASK_HIGH|h1*60499&MASK_LOW;h2=h2*3301882366&MASK_HIGH|((h2<<16|h1>>>16)*3120437893&MASK_HIGH)>>>16;h1^=h2>>>1;return(h1>>>0).toString(16).padStart(8,\"0\")+(h2>>>0).toString(16).padStart(8,\"0\")}}function resizeImageMask(src,bpc,w1,h1,w2,h2){const length=w2*h2;let dest;if(bpc<=8){dest=new Uint8Array(length)}else if(bpc<=16){dest=new Uint16Array(length)}else{dest=new Uint32Array(length)}const xRatio=w1/w2;const yRatio=h1/h2;let i,j,py,newIndex=0,oldIndex;const xScaled=new Uint16Array(w2);const w1Scanline=w1;for(i=0;i<w2;i++){xScaled[i]=Math.floor(i*xRatio)}for(i=0;i<h2;i++){py=Math.floor(i*yRatio)*w1Scanline;for(j=0;j<w2;j++){oldIndex=py+xScaled[j];dest[newIndex++]=src[oldIndex]}}return dest}class PDFImage{constructor({xref:xref,res:res,image:image,isInline:isInline=false,smask:smask=null,mask:mask=null,isMask:isMask=false,pdfFunctionFactory:pdfFunctionFactory,globalColorSpaceCache:globalColorSpaceCache,localColorSpaceCache:localColorSpaceCache}){this.image=image;const dict=image.dict;const filter=dict.get(\"F\",\"Filter\");let filterName;if(filter instanceof Name){filterName=filter.name}else if(Array.isArray(filter)){const filterZero=xref.fetchIfRef(filter[0]);if(filterZero instanceof Name){filterName=filterZero.name}}switch(filterName){case\"JPXDecode\":({width:image.width,height:image.height,componentsCount:image.numComps,bitsPerComponent:image.bitsPerComponent}=JpxImage.parseImageProperties(image.stream));image.stream.reset();const reducePower=ImageResizer.getReducePowerForJPX(image.width,image.height,image.numComps);this.jpxDecoderOptions={numComponents:0,isIndexedColormap:false,smaskInData:dict.has(\"SMaskInData\"),reducePower:reducePower};if(reducePower){const factor=2**reducePower;image.width=Math.ceil(image.width/factor);image.height=Math.ceil(image.height/factor)}break;case\"JBIG2Decode\":image.bitsPerComponent=1;image.numComps=1;break}let width=dict.get(\"W\",\"Width\");let height=dict.get(\"H\",\"Height\");if(Number.isInteger(image.width)&&image.width>0&&Number.isInteger(image.height)&&image.height>0&&(image.width!==width||image.height!==height)){warn(\"PDFImage - using the Width/Height of the image data, \"+\"rather than the image dictionary.\");width=image.width;height=image.height}else{const validWidth=typeof width===\"number\"&&width>0,validHeight=typeof height===\"number\"&&height>0;if(!validWidth||!validHeight){if(!image.fallbackDims){throw new FormatError(`Invalid image width: ${width} or height: ${height}`)}warn(\"PDFImage - using the Width/Height of the parent image, for SMask/Mask data.\");if(!validWidth){width=image.fallbackDims.width}if(!validHeight){height=image.fallbackDims.height}}}this.width=width;this.height=height;this.interpolate=dict.get(\"I\",\"Interpolate\");this.imageMask=dict.get(\"IM\",\"ImageMask\")||false;this.matte=dict.get(\"Matte\")||false;let bitsPerComponent=image.bitsPerComponent;if(!bitsPerComponent){bitsPerComponent=dict.get(\"BPC\",\"BitsPerComponent\");if(!bitsPerComponent){if(this.imageMask){bitsPerComponent=1}else{throw new FormatError(`Bits per component missing in image: ${this.imageMask}`)}}}this.bpc=bitsPerComponent;if(!this.imageMask){let colorSpace=dict.getRaw(\"CS\")||dict.getRaw(\"ColorSpace\");const hasColorSpace=!!colorSpace;if(!hasColorSpace){if(this.jpxDecoderOptions){colorSpace=Name.get(\"DeviceRGBA\")}else{switch(image.numComps){case 1:colorSpace=Name.get(\"DeviceGray\");break;case 3:colorSpace=Name.get(\"DeviceRGB\");break;case 4:colorSpace=Name.get(\"DeviceCMYK\");break;default:throw new Error(`Images with ${image.numComps} color components not supported.`)}}}else if(this.jpxDecoderOptions?.smaskInData){colorSpace=Name.get(\"DeviceRGBA\")}this.colorSpace=ColorSpaceUtils.parse({cs:colorSpace,xref:xref,resources:isInline?res:null,pdfFunctionFactory:pdfFunctionFactory,globalColorSpaceCache:globalColorSpaceCache,localColorSpaceCache:localColorSpaceCache});this.numComps=this.colorSpace.numComps;if(this.jpxDecoderOptions){this.jpxDecoderOptions.numComponents=hasColorSpace?this.numComps:0;this.jpxDecoderOptions.isIndexedColormap=this.colorSpace.name===\"Indexed\"}}this.decode=dict.getArray(\"D\",\"Decode\");this.needsDecode=false;if(this.decode&&(this.colorSpace&&!this.colorSpace.isDefaultDecode(this.decode,bitsPerComponent)||isMask&&!ColorSpace.isDefaultDecode(this.decode,1))){this.needsDecode=true;const max=(1<<bitsPerComponent)-1;this.decodeCoefficients=[];this.decodeAddends=[];const isIndexed=this.colorSpace?.name===\"Indexed\";for(let i=0,j=0;i<this.decode.length;i+=2,++j){const dmin=this.decode[i];const dmax=this.decode[i+1];this.decodeCoefficients[j]=isIndexed?(dmax-dmin)/max:dmax-dmin;this.decodeAddends[j]=isIndexed?dmin:max*dmin}}if(smask){smask.fallbackDims??={width:width,height:height};this.smask=new PDFImage({xref:xref,res:res,image:smask,isInline:isInline,pdfFunctionFactory:pdfFunctionFactory,globalColorSpaceCache:globalColorSpaceCache,localColorSpaceCache:localColorSpaceCache})}else if(mask){if(mask instanceof BaseStream){const maskDict=mask.dict,imageMask=maskDict.get(\"IM\",\"ImageMask\");if(!imageMask){warn(\"Ignoring /Mask in image without /ImageMask.\")}else{mask.fallbackDims??={width:width,height:height};this.mask=new PDFImage({xref:xref,res:res,image:mask,isInline:isInline,isMask:true,pdfFunctionFactory:pdfFunctionFactory,globalColorSpaceCache:globalColorSpaceCache,localColorSpaceCache:localColorSpaceCache})}}else{this.mask=mask}}}static async buildImage({xref:xref,res:res,image:image,isInline:isInline=false,pdfFunctionFactory:pdfFunctionFactory,globalColorSpaceCache:globalColorSpaceCache,localColorSpaceCache:localColorSpaceCache}){const imageData=image;let smaskData=null;let maskData=null;const smask=image.dict.get(\"SMask\");const mask=image.dict.get(\"Mask\");if(smask){if(smask instanceof BaseStream){smaskData=smask}else{warn(\"Unsupported /SMask format.\")}}else if(mask){if(mask instanceof BaseStream||Array.isArray(mask)){maskData=mask}else{warn(\"Unsupported /Mask format.\")}}return new PDFImage({xref:xref,res:res,image:imageData,isInline:isInline,smask:smaskData,mask:maskData,pdfFunctionFactory:pdfFunctionFactory,globalColorSpaceCache:globalColorSpaceCache,localColorSpaceCache:localColorSpaceCache})}static async createMask({image:image,isOffscreenCanvasSupported:isOffscreenCanvasSupported=false}){const{dict:dict}=image;const width=dict.get(\"W\",\"Width\");const height=dict.get(\"H\",\"Height\");const interpolate=dict.get(\"I\",\"Interpolate\");const decode=dict.getArray(\"D\",\"Decode\");const inverseDecode=decode?.[0]>0;const computedLength=(width+7>>3)*height;const imgArray=image.getBytes(computedLength);const isSingleOpaquePixel=width===1&&height===1&&inverseDecode===(imgArray.length===0||!!(imgArray[0]&128));if(isSingleOpaquePixel){return{isSingleOpaquePixel:isSingleOpaquePixel}}if(isOffscreenCanvasSupported){if(ImageResizer.needsToBeResized(width,height)){const data=new Uint8ClampedArray(width*height*4);convertBlackAndWhiteToRGBA({src:imgArray,dest:data,width:width,height:height,nonBlackColor:0,inverseDecode:inverseDecode});return ImageResizer.createImage({kind:ImageKind.RGBA_32BPP,data:data,width:width,height:height,interpolate:interpolate})}const canvas=new OffscreenCanvas(width,height);const ctx=canvas.getContext(\"2d\");const imgData=ctx.createImageData(width,height);convertBlackAndWhiteToRGBA({src:imgArray,dest:imgData.data,width:width,height:height,nonBlackColor:0,inverseDecode:inverseDecode});ctx.putImageData(imgData,0,0);const bitmap=canvas.transferToImageBitmap();return{data:null,width:width,height:height,interpolate:interpolate,bitmap:bitmap}}const actualLength=imgArray.byteLength;const haveFullData=computedLength===actualLength;let data;if(image instanceof DecodeStream&&(!inverseDecode||haveFullData)){data=imgArray}else if(!inverseDecode){data=new Uint8Array(imgArray)}else{data=new Uint8Array(computedLength);data.set(imgArray);data.fill(255,actualLength)}if(inverseDecode){for(let i=0;i<actualLength;i++){data[i]^=255}}return{data:data,width:width,height:height,interpolate:interpolate}}get drawWidth(){return Math.max(this.width,this.smask?.width||0,this.mask?.width||0)}get drawHeight(){return Math.max(this.height,this.smask?.height||0,this.mask?.height||0)}decodeBuffer(buffer){const bpc=this.bpc;const numComps=this.numComps;const decodeAddends=this.decodeAddends;const decodeCoefficients=this.decodeCoefficients;const max=(1<<bpc)-1;let i,ii;if(bpc===1){for(i=0,ii=buffer.length;i<ii;i++){buffer[i]=+!buffer[i]}return}let index=0;for(i=0,ii=this.width*this.height;i<ii;i++){for(let j=0;j<numComps;j++){buffer[index]=MathClamp(decodeAddends[j]+buffer[index]*decodeCoefficients[j],0,max);index++}}}getComponents(buffer){const bpc=this.bpc;if(bpc===8){return buffer}const width=this.width;const height=this.height;const numComps=this.numComps;const length=width*height*numComps;let bufferPos=0;let output;if(bpc<=8){output=new Uint8Array(length)}else if(bpc<=16){output=new Uint16Array(length)}else{output=new Uint32Array(length)}const rowComps=width*numComps;const max=(1<<bpc)-1;let i=0,ii,buf;if(bpc===1){let mask,loop1End,loop2End;for(let j=0;j<height;j++){loop1End=i+(rowComps&~7);loop2End=i+rowComps;while(i<loop1End){buf=buffer[bufferPos++];output[i]=buf>>7&1;output[i+1]=buf>>6&1;output[i+2]=buf>>5&1;output[i+3]=buf>>4&1;output[i+4]=buf>>3&1;output[i+5]=buf>>2&1;output[i+6]=buf>>1&1;output[i+7]=buf&1;i+=8}if(i<loop2End){buf=buffer[bufferPos++];mask=128;while(i<loop2End){output[i++]=+!!(buf&mask);mask>>=1}}}}else{let bits=0;buf=0;for(i=0,ii=length;i<ii;++i){if(i%rowComps===0){buf=0;bits=0}while(bits<bpc){buf=buf<<8|buffer[bufferPos++];bits+=8}const remainingBits=bits-bpc;let value=buf>>remainingBits;if(value<0){value=0}else if(value>max){value=max}output[i]=value;buf&=(1<<remainingBits)-1;bits=remainingBits}}return output}async fillOpacity(rgbaBuf,width,height,actualHeight,image){const smask=this.smask;const mask=this.mask;let alphaBuf,sw,sh,i,ii,j;if(smask){sw=smask.width;sh=smask.height;alphaBuf=new Uint8ClampedArray(sw*sh);await smask.fillGrayBuffer(alphaBuf);if(sw!==width||sh!==height){alphaBuf=resizeImageMask(alphaBuf,smask.bpc,sw,sh,width,height)}}else if(mask){if(mask instanceof PDFImage){sw=mask.width;sh=mask.height;alphaBuf=new Uint8ClampedArray(sw*sh);mask.numComps=1;await mask.fillGrayBuffer(alphaBuf);for(i=0,ii=sw*sh;i<ii;++i){alphaBuf[i]=255-alphaBuf[i]}if(sw!==width||sh!==height){alphaBuf=resizeImageMask(alphaBuf,mask.bpc,sw,sh,width,height)}}else if(Array.isArray(mask)){alphaBuf=new Uint8ClampedArray(width*height);const numComps=this.numComps;for(i=0,ii=width*height;i<ii;++i){let opacity=0;const imageOffset=i*numComps;for(j=0;j<numComps;++j){const color=image[imageOffset+j];const maskOffset=j*2;if(color<mask[maskOffset]||color>mask[maskOffset+1]){opacity=255;break}}alphaBuf[i]=opacity}}else{throw new FormatError(\"Unknown mask format.\")}}if(alphaBuf){for(i=0,j=3,ii=width*actualHeight;i<ii;++i,j+=4){rgbaBuf[j]=alphaBuf[i]}}else{for(i=0,j=3,ii=width*actualHeight;i<ii;++i,j+=4){rgbaBuf[j]=255}}}undoPreblend(buffer,width,height){const matte=this.smask?.matte;if(!matte){return}const matteRgb=this.colorSpace.getRgb(matte,0);const matteR=matteRgb[0];const matteG=matteRgb[1];const matteB=matteRgb[2];const length=width*height*4;for(let i=0;i<length;i+=4){const alpha=buffer[i+3];if(alpha===0){buffer[i]=255;buffer[i+1]=255;buffer[i+2]=255;continue}const k=255/alpha;buffer[i]=(buffer[i]-matteR)*k+matteR;buffer[i+1]=(buffer[i+1]-matteG)*k+matteG;buffer[i+2]=(buffer[i+2]-matteB)*k+matteB}}async createImageData(forceRGBA=false,isOffscreenCanvasSupported=false){const drawWidth=this.drawWidth;const drawHeight=this.drawHeight;const imgData={width:drawWidth,height:drawHeight,interpolate:this.interpolate,kind:0,data:null};const numComps=this.numComps;const originalWidth=this.width;const originalHeight=this.height;const bpc=this.bpc;const rowBytes=originalWidth*numComps*bpc+7>>3;const mustBeResized=isOffscreenCanvasSupported&&ImageResizer.needsToBeResized(drawWidth,drawHeight);if(!this.smask&&!this.mask&&this.colorSpace.name===\"DeviceRGBA\"){imgData.kind=ImageKind.RGBA_32BPP;const imgArray=imgData.data=await this.getImageBytes(originalHeight*originalWidth*4,{});if(isOffscreenCanvasSupported){if(!mustBeResized){return this.createBitmap(ImageKind.RGBA_32BPP,drawWidth,drawHeight,imgArray)}return ImageResizer.createImage(imgData,false)}return imgData}if(!forceRGBA){let kind;if(this.colorSpace.name===\"DeviceGray\"&&bpc===1){kind=ImageKind.GRAYSCALE_1BPP}else if(this.colorSpace.name===\"DeviceRGB\"&&bpc===8&&!this.needsDecode){kind=ImageKind.RGB_24BPP}if(kind&&!this.smask&&!this.mask&&drawWidth===originalWidth&&drawHeight===originalHeight){const image=await this.#getImage(originalWidth,originalHeight);if(image){return image}const data=await this.getImageBytes(originalHeight*rowBytes,{});if(isOffscreenCanvasSupported){if(mustBeResized){return ImageResizer.createImage({data:data,kind:kind,width:drawWidth,height:drawHeight,interpolate:this.interpolate},this.needsDecode)}return this.createBitmap(kind,originalWidth,originalHeight,data)}imgData.kind=kind;imgData.data=data;if(this.needsDecode){assert(kind===ImageKind.GRAYSCALE_1BPP,\"PDFImage.createImageData: The image must be grayscale.\");const buffer=imgData.data;for(let i=0,ii=buffer.length;i<ii;i++){buffer[i]^=255}}return imgData}if(this.image instanceof JpegStream&&!this.smask&&!this.mask&&!this.needsDecode){let imageLength=originalHeight*rowBytes;if(isOffscreenCanvasSupported&&!mustBeResized){let isHandled=false;switch(this.colorSpace.name){case\"DeviceGray\":imageLength*=4;isHandled=true;break;case\"DeviceRGB\":imageLength=imageLength/3*4;isHandled=true;break;case\"DeviceCMYK\":isHandled=true;break}if(isHandled){const image=await this.#getImage(drawWidth,drawHeight);if(image){return image}const rgba=await this.getImageBytes(imageLength,{drawWidth:drawWidth,drawHeight:drawHeight,forceRGBA:true});return this.createBitmap(ImageKind.RGBA_32BPP,drawWidth,drawHeight,rgba)}}else{switch(this.colorSpace.name){case\"DeviceGray\":imageLength*=3;case\"DeviceRGB\":case\"DeviceCMYK\":imgData.kind=ImageKind.RGB_24BPP;imgData.data=await this.getImageBytes(imageLength,{drawWidth:drawWidth,drawHeight:drawHeight,forceRGB:true});if(mustBeResized){return ImageResizer.createImage(imgData)}return imgData}}}}const imgArray=await this.getImageBytes(originalHeight*rowBytes,{internal:true});const actualHeight=0|imgArray.length/rowBytes*drawHeight/originalHeight;const comps=this.getComponents(imgArray);let alpha01,maybeUndoPreblend;let canvas,ctx,canvasImgData,data;if(isOffscreenCanvasSupported&&!mustBeResized){canvas=new OffscreenCanvas(drawWidth,drawHeight);ctx=canvas.getContext(\"2d\");canvasImgData=ctx.createImageData(drawWidth,drawHeight);data=canvasImgData.data}imgData.kind=ImageKind.RGBA_32BPP;if(!forceRGBA&&!this.smask&&!this.mask){if(!isOffscreenCanvasSupported||mustBeResized){imgData.kind=ImageKind.RGB_24BPP;data=new Uint8ClampedArray(drawWidth*drawHeight*3);alpha01=0}else{const arr=new Uint32Array(data.buffer);arr.fill(FeatureTest.isLittleEndian?4278190080:255);alpha01=1}maybeUndoPreblend=false}else{if(!isOffscreenCanvasSupported||mustBeResized){data=new Uint8ClampedArray(drawWidth*drawHeight*4)}alpha01=1;maybeUndoPreblend=true;await this.fillOpacity(data,drawWidth,drawHeight,actualHeight,comps)}if(this.needsDecode){this.decodeBuffer(comps)}this.colorSpace.fillRgb(data,originalWidth,originalHeight,drawWidth,drawHeight,actualHeight,bpc,comps,alpha01);if(maybeUndoPreblend){this.undoPreblend(data,drawWidth,actualHeight)}if(isOffscreenCanvasSupported&&!mustBeResized){ctx.putImageData(canvasImgData,0,0);const bitmap=canvas.transferToImageBitmap();return{data:null,width:drawWidth,height:drawHeight,bitmap:bitmap,interpolate:this.interpolate}}imgData.data=data;if(mustBeResized){return ImageResizer.createImage(imgData)}return imgData}async fillGrayBuffer(buffer){const numComps=this.numComps;if(numComps!==1){throw new FormatError(`Reading gray scale from a color image: ${numComps}`)}const width=this.width;const height=this.height;const bpc=this.bpc;const rowBytes=width*numComps*bpc+7>>3;const imgArray=await this.getImageBytes(height*rowBytes,{internal:true});const comps=this.getComponents(imgArray);let i,length;if(bpc===1){length=width*height;if(this.needsDecode){for(i=0;i<length;++i){buffer[i]=comps[i]-1&255}}else{for(i=0;i<length;++i){buffer[i]=-comps[i]&255}}return}if(this.needsDecode){this.decodeBuffer(comps)}length=width*height;const scale=255/((1<<bpc)-1);for(i=0;i<length;++i){buffer[i]=scale*comps[i]}}createBitmap(kind,width,height,src){const canvas=new OffscreenCanvas(width,height);const ctx=canvas.getContext(\"2d\");let imgData;if(kind===ImageKind.RGBA_32BPP){imgData=new ImageData(src,width,height)}else{imgData=ctx.createImageData(width,height);convertToRGBA({kind:kind,src:src,dest:new Uint32Array(imgData.data.buffer),width:width,height:height,inverseDecode:this.needsDecode})}ctx.putImageData(imgData,0,0);const bitmap=canvas.transferToImageBitmap();return{data:null,width:width,height:height,bitmap:bitmap,interpolate:this.interpolate}}async#getImage(width,height){const bitmap=await this.image.getTransferableImage();if(!bitmap){return null}return{data:null,width:width,height:height,bitmap:bitmap,interpolate:this.interpolate}}async getImageBytes(length,{drawWidth:drawWidth,drawHeight:drawHeight,forceRGBA:forceRGBA=false,forceRGB:forceRGB=false,internal:internal=false}){this.image.reset();this.image.drawWidth=drawWidth||this.width;this.image.drawHeight=drawHeight||this.height;this.image.forceRGBA=!!forceRGBA;this.image.forceRGB=!!forceRGB;const imageBytes=await this.image.getImageData(length,this.jpxDecoderOptions);if(internal||this.image instanceof DecodeStream){return imageBytes}assert(imageBytes instanceof Uint8Array,'PDFImage.getImageBytes: Unsupported \"imageBytes\" type.');return new Uint8Array(imageBytes)}}const DefaultPartialEvaluatorOptions=Object.freeze({maxImageSize:-1,disableFontFace:false,ignoreErrors:false,isEvalSupported:true,isOffscreenCanvasSupported:false,isImageDecoderSupported:false,canvasMaxAreaInBytes:-1,fontExtraProperties:false,useSystemFonts:true,useWasm:true,useWorkerFetch:true,cMapUrl:null,iccUrl:null,standardFontDataUrl:null,wasmUrl:null});const PatternType={TILING:1,SHADING:2};const TEXT_CHUNK_BATCH_SIZE=10;const deferred=Promise.resolve();function normalizeBlendMode(value,parsingArray=false){if(Array.isArray(value)){for(const val of value){const maybeBM=normalizeBlendMode(val,true);if(maybeBM){return maybeBM}}warn(`Unsupported blend mode Array: ${value}`);return\"source-over\"}if(!(value instanceof Name)){if(parsingArray){return null}return\"source-over\"}switch(value.name){case\"Normal\":case\"Compatible\":return\"source-over\";case\"Multiply\":return\"multiply\";case\"Screen\":return\"screen\";case\"Overlay\":return\"overlay\";case\"Darken\":return\"darken\";case\"Lighten\":return\"lighten\";case\"ColorDodge\":return\"color-dodge\";case\"ColorBurn\":return\"color-burn\";case\"HardLight\":return\"hard-light\";case\"SoftLight\":return\"soft-light\";case\"Difference\":return\"difference\";case\"Exclusion\":return\"exclusion\";case\"Hue\":return\"hue\";case\"Saturation\":return\"saturation\";case\"Color\":return\"color\";case\"Luminosity\":return\"luminosity\"}if(parsingArray){return null}warn(`Unsupported blend mode: ${value.name}`);return\"source-over\"}function addCachedImageOps(opList,{objId:objId,fn:fn,args:args,optionalContent:optionalContent,hasMask:hasMask}){if(objId){opList.addDependency(objId)}opList.addImageOps(fn,args,optionalContent,hasMask);if(fn===OPS.paintImageMaskXObject&&args[0]?.count>0){args[0].count++}}class TimeSlotManager{static TIME_SLOT_DURATION_MS=20;static CHECK_TIME_EVERY=100;constructor(){this.reset()}check(){if(++this.checked<TimeSlotManager.CHECK_TIME_EVERY){return false}this.checked=0;return this.endTime<=Date.now()}reset(){this.endTime=Date.now()+TimeSlotManager.TIME_SLOT_DURATION_MS;this.checked=0}}class PartialEvaluator{constructor({xref:xref,handler:handler,pageIndex:pageIndex,idFactory:idFactory,fontCache:fontCache,builtInCMapCache:builtInCMapCache,standardFontDataCache:standardFontDataCache,globalColorSpaceCache:globalColorSpaceCache,globalImageCache:globalImageCache,systemFontCache:systemFontCache,options:options=null}){this.xref=xref;this.handler=handler;this.pageIndex=pageIndex;this.idFactory=idFactory;this.fontCache=fontCache;this.builtInCMapCache=builtInCMapCache;this.standardFontDataCache=standardFontDataCache;this.globalColorSpaceCache=globalColorSpaceCache;this.globalImageCache=globalImageCache;this.systemFontCache=systemFontCache;this.options=options||DefaultPartialEvaluatorOptions;this.type3FontRefs=null;this._regionalImageCache=new RegionalImageCache;this._fetchBuiltInCMapBound=this.fetchBuiltInCMap.bind(this)}get _pdfFunctionFactory(){const pdfFunctionFactory=new PDFFunctionFactory({xref:this.xref,isEvalSupported:this.options.isEvalSupported});return shadow(this,\"_pdfFunctionFactory\",pdfFunctionFactory)}get parsingType3Font(){return!!this.type3FontRefs}clone(newOptions=null){const newEvaluator=Object.create(this);newEvaluator.options=Object.assign(Object.create(null),this.options,newOptions);return newEvaluator}hasBlendModes(resources,nonBlendModesSet){if(!(resources instanceof Dict)){return false}if(resources.objId&&nonBlendModesSet.has(resources.objId)){return false}const processed=new RefSet(nonBlendModesSet);if(resources.objId){processed.put(resources.objId)}const nodes=[resources],xref=this.xref;while(nodes.length){const node=nodes.shift();const graphicStates=node.get(\"ExtGState\");if(graphicStates instanceof Dict){for(let graphicState of graphicStates.getRawValues()){if(graphicState instanceof Ref){if(processed.has(graphicState)){continue}try{graphicState=xref.fetch(graphicState)}catch(ex){processed.put(graphicState);info(`hasBlendModes - ignoring ExtGState: \"${ex}\".`);continue}}if(!(graphicState instanceof Dict)){continue}if(graphicState.objId){processed.put(graphicState.objId)}const bm=graphicState.get(\"BM\");if(bm instanceof Name){if(bm.name!==\"Normal\"){return true}continue}if(bm!==undefined&&Array.isArray(bm)){for(const element of bm){if(element instanceof Name&&element.name!==\"Normal\"){return true}}}}}const xObjects=node.get(\"XObject\");if(!(xObjects instanceof Dict)){continue}for(let xObject of xObjects.getRawValues()){if(xObject instanceof Ref){if(processed.has(xObject)){continue}try{xObject=xref.fetch(xObject)}catch(ex){processed.put(xObject);info(`hasBlendModes - ignoring XObject: \"${ex}\".`);continue}}if(!(xObject instanceof BaseStream)){continue}if(xObject.dict.objId){processed.put(xObject.dict.objId)}const xResources=xObject.dict.get(\"Resources\");if(!(xResources instanceof Dict)){continue}if(xResources.objId&&processed.has(xResources.objId)){continue}nodes.push(xResources);if(xResources.objId){processed.put(xResources.objId)}}}for(const ref of processed){nonBlendModesSet.put(ref)}return false}async fetchBuiltInCMap(name){const cachedData=this.builtInCMapCache.get(name);if(cachedData){return cachedData}let data;if(this.options.useWorkerFetch){data={cMapData:await fetchBinaryData(`${this.options.cMapUrl}${name}.bcmap`),isCompressed:true}}else{data=await this.handler.sendWithPromise(\"FetchBinaryData\",{type:\"cMapReaderFactory\",name:name})}this.builtInCMapCache.set(name,data);return data}async fetchStandardFontData(name){const cachedData=this.standardFontDataCache.get(name);if(cachedData){return new Stream(cachedData)}if(this.options.useSystemFonts&&name!==\"Symbol\"&&name!==\"ZapfDingbats\"){return null}const standardFontNameToFileName=getFontNameToFileMap(),filename=standardFontNameToFileName[name];let data;try{if(this.options.useWorkerFetch){data=await fetchBinaryData(`${this.options.standardFontDataUrl}${filename}`)}else{data=await this.handler.sendWithPromise(\"FetchBinaryData\",{type:\"standardFontDataFactory\",filename:filename})}}catch(ex){warn(ex);return null}this.standardFontDataCache.set(name,data);return new Stream(data)}async buildFormXObject(resources,xobj,smask,operatorList,task,initialState,localColorSpaceCache,seenRefs){const{dict:dict}=xobj;const matrix=lookupMatrix(dict.getArray(\"Matrix\"),null);const bbox=lookupNormalRect(dict.getArray(\"BBox\"),null);let optionalContent,groupOptions;if(dict.has(\"OC\")){optionalContent=await this.parseMarkedContentProps(dict.get(\"OC\"),resources)}if(optionalContent!==undefined){operatorList.addOp(OPS.beginMarkedContentProps,[\"OC\",optionalContent])}const group=dict.get(\"Group\");if(group){groupOptions={matrix:matrix,bbox:bbox,smask:smask,isolated:false,knockout:false};const groupSubtype=group.get(\"S\");let colorSpace=null;if(isName(groupSubtype,\"Transparency\")){groupOptions.isolated=group.get(\"I\")||false;groupOptions.knockout=group.get(\"K\")||false;if(group.has(\"CS\")){const cs=this._getColorSpace(group.getRaw(\"CS\"),resources,localColorSpaceCache);colorSpace=cs instanceof ColorSpace?cs:await this._handleColorSpace(cs)}}if(smask?.backdrop){colorSpace||=ColorSpaceUtils.rgb;smask.backdrop=colorSpace.getRgb(smask.backdrop,0)}operatorList.addOp(OPS.beginGroup,[groupOptions])}const f32matrix=matrix&&new Float32Array(matrix);const f32bbox=!group&&bbox&&new Float32Array(bbox)||null;const args=[f32matrix,f32bbox];operatorList.addOp(OPS.paintFormXObjectBegin,args);const localResources=dict.get(\"Resources\");await this.getOperatorList({stream:xobj,task:task,resources:localResources instanceof Dict?localResources:resources,operatorList:operatorList,initialState:initialState,prevRefs:seenRefs});operatorList.addOp(OPS.paintFormXObjectEnd,[]);if(group){operatorList.addOp(OPS.endGroup,[groupOptions])}if(optionalContent!==undefined){operatorList.addOp(OPS.endMarkedContent,[])}}_sendImgData(objId,imgData,cacheGlobally=false){const transfers=imgData?[imgData.bitmap||imgData.data.buffer]:null;if(this.parsingType3Font||cacheGlobally){return this.handler.send(\"commonobj\",[objId,\"Image\",imgData],transfers)}return this.handler.send(\"obj\",[objId,this.pageIndex,\"Image\",imgData],transfers)}async buildPaintImageXObject({resources:resources,image:image,isInline:isInline=false,operatorList:operatorList,cacheKey:cacheKey,localImageCache:localImageCache,localColorSpaceCache:localColorSpaceCache}){const{maxImageSize:maxImageSize,ignoreErrors:ignoreErrors,isOffscreenCanvasSupported:isOffscreenCanvasSupported}=this.options;const{dict:dict}=image;const imageRef=dict.objId;const w=dict.get(\"W\",\"Width\");const h=dict.get(\"H\",\"Height\");if(!(w&&typeof w===\"number\")||!(h&&typeof h===\"number\")){warn(\"Image dimensions are missing, or not numbers.\");return}if(maxImageSize!==-1&&w*h>maxImageSize){const msg=\"Image exceeded maximum allowed size and was removed.\";if(!ignoreErrors){throw new Error(msg)}warn(msg);return}let optionalContent;if(dict.has(\"OC\")){optionalContent=await this.parseMarkedContentProps(dict.get(\"OC\"),resources)}const imageMask=dict.get(\"IM\",\"ImageMask\")||false;let imgData,fn,args;if(imageMask){imgData=await PDFImage.createMask({image:image,isOffscreenCanvasSupported:isOffscreenCanvasSupported&&!this.parsingType3Font});if(imgData.isSingleOpaquePixel){fn=OPS.paintSolidColorImageMask;args=[];operatorList.addImageOps(fn,args,optionalContent);if(cacheKey){const cacheData={fn:fn,args:args,optionalContent:optionalContent};localImageCache.set(cacheKey,imageRef,cacheData);if(imageRef){this._regionalImageCache.set(null,imageRef,cacheData)}}return}if(this.parsingType3Font){args=compileType3Glyph(imgData);if(args){operatorList.addImageOps(OPS.constructPath,args,optionalContent);return}warn(\"Cannot compile Type3 glyph.\");operatorList.addImageOps(OPS.paintImageMaskXObject,[imgData],optionalContent);return}const objId=`mask_${this.idFactory.createObjId()}`;operatorList.addDependency(objId);imgData.dataLen=imgData.bitmap?imgData.width*imgData.height*4:imgData.data.length;this._sendImgData(objId,imgData);fn=OPS.paintImageMaskXObject;args=[{data:objId,width:imgData.width,height:imgData.height,interpolate:imgData.interpolate,count:1}];operatorList.addImageOps(fn,args,optionalContent);if(cacheKey){const cacheData={objId:objId,fn:fn,args:args,optionalContent:optionalContent};localImageCache.set(cacheKey,imageRef,cacheData);if(imageRef){this._regionalImageCache.set(null,imageRef,cacheData)}}return}const SMALL_IMAGE_DIMENSIONS=200;const hasMask=dict.has(\"SMask\")||dict.has(\"Mask\");if(isInline&&w+h<SMALL_IMAGE_DIMENSIONS&&!hasMask){try{const imageObj=new PDFImage({xref:this.xref,res:resources,image:image,isInline:isInline,pdfFunctionFactory:this._pdfFunctionFactory,globalColorSpaceCache:this.globalColorSpaceCache,localColorSpaceCache:localColorSpaceCache});imgData=await imageObj.createImageData(true,false);operatorList.addImageOps(OPS.paintInlineImageXObject,[imgData],optionalContent)}catch(reason){const msg=`Unable to decode inline image: \"${reason}\".`;if(!ignoreErrors){throw new Error(msg)}warn(msg)}return}let objId=`img_${this.idFactory.createObjId()}`,cacheGlobally=false,globalCacheData=null;if(this.parsingType3Font){objId=`${this.idFactory.getDocId()}_type3_${objId}`}else if(cacheKey&&imageRef){cacheGlobally=this.globalImageCache.shouldCache(imageRef,this.pageIndex);if(cacheGlobally){assert(!isInline,\"Cannot cache an inline image globally.\");objId=`${this.idFactory.getDocId()}_${objId}`}}operatorList.addDependency(objId);fn=OPS.paintImageXObject;args=[objId,w,h];operatorList.addImageOps(fn,args,optionalContent,hasMask);if(cacheGlobally){globalCacheData={objId:objId,fn:fn,args:args,optionalContent:optionalContent,hasMask:hasMask,byteSize:0};if(this.globalImageCache.hasDecodeFailed(imageRef)){this.globalImageCache.setData(imageRef,globalCacheData);this._sendImgData(objId,null,cacheGlobally);return}if(w*h>25e4||hasMask){const localLength=await this.handler.sendWithPromise(\"commonobj\",[objId,\"CopyLocalImage\",{imageRef:imageRef}]);if(localLength){this.globalImageCache.setData(imageRef,globalCacheData);this.globalImageCache.addByteSize(imageRef,localLength);return}}}PDFImage.buildImage({xref:this.xref,res:resources,image:image,isInline:isInline,pdfFunctionFactory:this._pdfFunctionFactory,globalColorSpaceCache:this.globalColorSpaceCache,localColorSpaceCache:localColorSpaceCache}).then((async imageObj=>{imgData=await imageObj.createImageData(false,isOffscreenCanvasSupported);imgData.dataLen=imgData.bitmap?imgData.width*imgData.height*4:imgData.data.length;imgData.ref=imageRef;if(cacheGlobally){this.globalImageCache.addByteSize(imageRef,imgData.dataLen)}return this._sendImgData(objId,imgData,cacheGlobally)})).catch((reason=>{warn(`Unable to decode image \"${objId}\": \"${reason}\".`);if(imageRef){this.globalImageCache.addDecodeFailed(imageRef)}return this._sendImgData(objId,null,cacheGlobally)}));if(cacheKey){const cacheData={objId:objId,fn:fn,args:args,optionalContent:optionalContent,hasMask:hasMask};localImageCache.set(cacheKey,imageRef,cacheData);if(imageRef){this._regionalImageCache.set(null,imageRef,cacheData);if(cacheGlobally){assert(globalCacheData,\"The global cache-data must be available.\");this.globalImageCache.setData(imageRef,globalCacheData)}}}}handleSMask(smask,resources,operatorList,task,stateManager,localColorSpaceCache,seenRefs){const smaskContent=smask.get(\"G\");const smaskOptions={subtype:smask.get(\"S\").name,backdrop:smask.get(\"BC\")};const transferObj=smask.get(\"TR\");if(isPDFFunction(transferObj)){const transferFn=this._pdfFunctionFactory.create(transferObj);const transferMap=new Uint8Array(256);const tmp=new Float32Array(1);for(let i=0;i<256;i++){tmp[0]=i/255;transferFn(tmp,0,tmp,0);transferMap[i]=tmp[0]*255|0}smaskOptions.transferMap=transferMap}return this.buildFormXObject(resources,smaskContent,smaskOptions,operatorList,task,stateManager.state.clone({newPath:true}),localColorSpaceCache,seenRefs)}handleTransferFunction(tr){let transferArray;if(Array.isArray(tr)){transferArray=tr}else if(isPDFFunction(tr)){transferArray=[tr]}else{return null}const transferMaps=[];let numFns=0,numEffectfulFns=0;for(const entry of transferArray){const transferObj=this.xref.fetchIfRef(entry);numFns++;if(isName(transferObj,\"Identity\")){transferMaps.push(null);continue}else if(!isPDFFunction(transferObj)){return null}const transferFn=this._pdfFunctionFactory.create(transferObj);const transferMap=new Uint8Array(256),tmp=new Float32Array(1);for(let j=0;j<256;j++){tmp[0]=j/255;transferFn(tmp,0,tmp,0);transferMap[j]=tmp[0]*255|0}transferMaps.push(transferMap);numEffectfulFns++}if(!(numFns===1||numFns===4)){return null}if(numEffectfulFns===0){return null}return transferMaps}handleTilingType(fn,color,resources,pattern,patternDict,operatorList,task,localTilingPatternCache){const tilingOpList=new OperatorList;const patternResources=Dict.merge({xref:this.xref,dictArray:[patternDict.get(\"Resources\"),resources]});return this.getOperatorList({stream:pattern,task:task,resources:patternResources,operatorList:tilingOpList}).then((function(){const operatorListIR=tilingOpList.getIR();const tilingPatternIR=getTilingPatternIR(operatorListIR,patternDict,color);operatorList.addDependencies(tilingOpList.dependencies);operatorList.addOp(fn,tilingPatternIR);if(patternDict.objId){localTilingPatternCache.set(null,patternDict.objId,{operatorListIR:operatorListIR,dict:patternDict})}})).catch((reason=>{if(reason instanceof AbortException){return}if(this.options.ignoreErrors){warn(`handleTilingType - ignoring pattern: \"${reason}\".`);return}throw reason}))}async handleSetFont(resources,fontArgs,fontRef,operatorList,task,state,fallbackFontDict=null,cssFontInfo=null){const fontName=fontArgs?.[0]instanceof Name?fontArgs[0].name:null;const translated=await this.loadFont(fontName,fontRef,resources,task,fallbackFontDict,cssFontInfo);if(translated.font.isType3Font){operatorList.addDependencies(translated.type3Dependencies)}state.font=translated.font;translated.send(this.handler);return translated.loadedName}handleText(chars,state){const font=state.font;const glyphs=font.charsToGlyphs(chars);if(font.data){const isAddToPathSet=!!(state.textRenderingMode&TextRenderingMode.ADD_TO_PATH_FLAG);if(isAddToPathSet||state.fillColorSpace.name===\"Pattern\"||font.disableFontFace){PartialEvaluator.buildFontPaths(font,glyphs,this.handler,this.options)}}return glyphs}ensureStateFont(state){if(state.font){return}const reason=new FormatError(\"Missing setFont (Tf) operator before text rendering operator.\");if(this.options.ignoreErrors){warn(`ensureStateFont: \"${reason}\".`);return}throw reason}async setGState({resources:resources,gState:gState,operatorList:operatorList,cacheKey:cacheKey,task:task,stateManager:stateManager,localGStateCache:localGStateCache,localColorSpaceCache:localColorSpaceCache,seenRefs:seenRefs}){const gStateRef=gState.objId;let isSimpleGState=true;const gStateObj=[];let promise=Promise.resolve();for(const[key,value]of gState){switch(key){case\"Type\":break;case\"LW\":if(typeof value!==\"number\"){warn(`Invalid LW (line width): ${value}`);break}gStateObj.push([key,Math.abs(value)]);break;case\"LC\":case\"LJ\":case\"ML\":case\"D\":case\"RI\":case\"FL\":case\"CA\":case\"ca\":gStateObj.push([key,value]);break;case\"Font\":isSimpleGState=false;promise=promise.then((()=>this.handleSetFont(resources,null,value[0],operatorList,task,stateManager.state).then((function(loadedName){operatorList.addDependency(loadedName);gStateObj.push([key,[loadedName,value[1]]])}))));break;case\"BM\":gStateObj.push([key,normalizeBlendMode(value)]);break;case\"SMask\":if(isName(value,\"None\")){gStateObj.push([key,false]);break}if(value instanceof Dict){isSimpleGState=false;promise=promise.then((()=>this.handleSMask(value,resources,operatorList,task,stateManager,localColorSpaceCache,seenRefs)));gStateObj.push([key,true])}else{warn(\"Unsupported SMask type\")}break;case\"TR\":const transferMaps=this.handleTransferFunction(value);gStateObj.push([key,transferMaps]);break;case\"OP\":case\"op\":case\"OPM\":case\"BG\":case\"BG2\":case\"UCR\":case\"UCR2\":case\"TR2\":case\"HT\":case\"SM\":case\"SA\":case\"AIS\":case\"TK\":info(\"graphic state operator \"+key);break;default:info(\"Unknown graphic state operator \"+key);break}}await promise;if(gStateObj.length>0){operatorList.addOp(OPS.setGState,[gStateObj])}if(isSimpleGState){localGStateCache.set(cacheKey,gStateRef,gStateObj)}}loadFont(fontName,font,resources,task,fallbackFontDict=null,cssFontInfo=null){const errorFont=async()=>new TranslatedFont({loadedName:\"g_font_error\",font:new ErrorFont(`Font \"${fontName}\" is not available.`),dict:font});let fontRef;if(font){if(font instanceof Ref){fontRef=font}}else{const fontRes=resources.get(\"Font\");if(fontRes){fontRef=fontRes.getRaw(fontName)}}if(fontRef){if(this.type3FontRefs?.has(fontRef)){return errorFont()}if(this.fontCache.has(fontRef)){return this.fontCache.get(fontRef)}try{font=this.xref.fetchIfRef(fontRef)}catch(ex){warn(`loadFont - lookup failed: \"${ex}\".`)}}if(!(font instanceof Dict)){if(!this.options.ignoreErrors&&!this.parsingType3Font){warn(`Font \"${fontName}\" is not available.`);return errorFont()}warn(`Font \"${fontName}\" is not available -- attempting to fallback to a default font.`);font=fallbackFontDict||PartialEvaluator.fallbackFontDict}if(font.cacheKey&&this.fontCache.has(font.cacheKey)){return this.fontCache.get(font.cacheKey)}const{promise:promise,resolve:resolve}=Promise.withResolvers();let preEvaluatedFont;try{preEvaluatedFont=this.preEvaluateFont(font);preEvaluatedFont.cssFontInfo=cssFontInfo}catch(reason){warn(`loadFont - preEvaluateFont failed: \"${reason}\".`);return errorFont()}const{descriptor:descriptor,hash:hash}=preEvaluatedFont;const fontRefIsRef=fontRef instanceof Ref;let fontID;if(hash&&descriptor instanceof Dict){const fontAliases=descriptor.fontAliases||=Object.create(null);if(fontAliases[hash]){const aliasFontRef=fontAliases[hash].aliasRef;if(fontRefIsRef&&aliasFontRef&&this.fontCache.has(aliasFontRef)){this.fontCache.putAlias(fontRef,aliasFontRef);return this.fontCache.get(fontRef)}}else{fontAliases[hash]={fontID:this.idFactory.createFontId()}}if(fontRefIsRef){fontAliases[hash].aliasRef=fontRef}fontID=fontAliases[hash].fontID}else{fontID=this.idFactory.createFontId()}assert(fontID?.startsWith(\"f\"),'The \"fontID\" must be (correctly) defined.');if(fontRefIsRef){this.fontCache.put(fontRef,promise)}else{font.cacheKey=`cacheKey_${fontID}`;this.fontCache.put(font.cacheKey,promise)}font.loadedName=`${this.idFactory.getDocId()}_${fontID}`;this.translateFont(preEvaluatedFont).then((async translatedFont=>{const translated=new TranslatedFont({loadedName:font.loadedName,font:translatedFont,dict:font});if(translatedFont.isType3Font){try{await translated.loadType3Data(this,resources,task)}catch(reason){throw new Error(`Type3 font load error: ${reason}`)}}resolve(translated)})).catch((reason=>{warn(`loadFont - translateFont failed: \"${reason}\".`);resolve(new TranslatedFont({loadedName:font.loadedName,font:new ErrorFont(reason?.message),dict:font}))}));return promise}buildPath(fn,args,state){const{pathMinMax:minMax,pathBuffer:pathBuffer}=state;switch(fn|0){case OPS.rectangle:{const x=state.currentPointX=args[0];const y=state.currentPointY=args[1];const width=args[2];const height=args[3];const xw=x+width;const yh=y+height;if(width===0||height===0){pathBuffer.push(DrawOPS.moveTo,x,y,DrawOPS.lineTo,xw,yh,DrawOPS.closePath)}else{pathBuffer.push(DrawOPS.moveTo,x,y,DrawOPS.lineTo,xw,y,DrawOPS.lineTo,xw,yh,DrawOPS.lineTo,x,yh,DrawOPS.closePath)}Util.rectBoundingBox(x,y,xw,yh,minMax);break}case OPS.moveTo:{const x=state.currentPointX=args[0];const y=state.currentPointY=args[1];pathBuffer.push(DrawOPS.moveTo,x,y);Util.pointBoundingBox(x,y,minMax);break}case OPS.lineTo:{const x=state.currentPointX=args[0];const y=state.currentPointY=args[1];pathBuffer.push(DrawOPS.lineTo,x,y);Util.pointBoundingBox(x,y,minMax);break}case OPS.curveTo:{const startX=state.currentPointX;const startY=state.currentPointY;const[x1,y1,x2,y2,x,y]=args;state.currentPointX=x;state.currentPointY=y;pathBuffer.push(DrawOPS.curveTo,x1,y1,x2,y2,x,y);Util.bezierBoundingBox(startX,startY,x1,y1,x2,y2,x,y,minMax);break}case OPS.curveTo2:{const startX=state.currentPointX;const startY=state.currentPointY;const[x1,y1,x,y]=args;state.currentPointX=x;state.currentPointY=y;pathBuffer.push(DrawOPS.curveTo,startX,startY,x1,y1,x,y);Util.bezierBoundingBox(startX,startY,startX,startY,x1,y1,x,y,minMax);break}case OPS.curveTo3:{const startX=state.currentPointX;const startY=state.currentPointY;const[x1,y1,x,y]=args;state.currentPointX=x;state.currentPointY=y;pathBuffer.push(DrawOPS.curveTo,x1,y1,x,y,x,y);Util.bezierBoundingBox(startX,startY,x1,y1,x,y,x,y,minMax);break}case OPS.closePath:pathBuffer.push(DrawOPS.closePath);break}}_getColorSpace(cs,resources,localColorSpaceCache){return ColorSpaceUtils.parse({cs:cs,xref:this.xref,resources:resources,pdfFunctionFactory:this._pdfFunctionFactory,globalColorSpaceCache:this.globalColorSpaceCache,localColorSpaceCache:localColorSpaceCache,asyncIfNotCached:true})}async _handleColorSpace(csPromise){try{return await csPromise}catch(ex){if(ex instanceof AbortException){return null}if(this.options.ignoreErrors){warn(`_handleColorSpace - ignoring ColorSpace: \"${ex}\".`);return null}throw ex}}parseShading({shading:shading,resources:resources,localColorSpaceCache:localColorSpaceCache,localShadingPatternCache:localShadingPatternCache}){let id=localShadingPatternCache.get(shading);if(id){return id}let patternIR;try{const shadingFill=Pattern.parseShading(shading,this.xref,resources,this._pdfFunctionFactory,this.globalColorSpaceCache,localColorSpaceCache);patternIR=shadingFill.getIR()}catch(reason){if(reason instanceof AbortException){return null}if(this.options.ignoreErrors){warn(`parseShading - ignoring shading: \"${reason}\".`);localShadingPatternCache.set(shading,null);return null}throw reason}id=`pattern_${this.idFactory.createObjId()}`;if(this.parsingType3Font){id=`${this.idFactory.getDocId()}_type3_${id}`}localShadingPatternCache.set(shading,id);if(this.parsingType3Font){this.handler.send(\"commonobj\",[id,\"Pattern\",patternIR])}else{this.handler.send(\"obj\",[id,this.pageIndex,\"Pattern\",patternIR])}return id}handleColorN(operatorList,fn,args,cs,patterns,resources,task,localColorSpaceCache,localTilingPatternCache,localShadingPatternCache){const patternName=args.pop();if(patternName instanceof Name){const rawPattern=patterns.getRaw(patternName.name);const localTilingPattern=rawPattern instanceof Ref&&localTilingPatternCache.getByRef(rawPattern);if(localTilingPattern){try{const color=cs.base?cs.base.getRgb(args,0):null;const tilingPatternIR=getTilingPatternIR(localTilingPattern.operatorListIR,localTilingPattern.dict,color);operatorList.addOp(fn,tilingPatternIR);return undefined}catch{}}const pattern=this.xref.fetchIfRef(rawPattern);if(pattern){const dict=pattern instanceof BaseStream?pattern.dict:pattern;const typeNum=dict.get(\"PatternType\");if(typeNum===PatternType.TILING){const color=cs.base?cs.base.getRgb(args,0):null;return this.handleTilingType(fn,color,resources,pattern,dict,operatorList,task,localTilingPatternCache)}else if(typeNum===PatternType.SHADING){const shading=dict.get(\"Shading\");const objId=this.parseShading({shading:shading,resources:resources,localColorSpaceCache:localColorSpaceCache,localShadingPatternCache:localShadingPatternCache});if(objId){const matrix=lookupMatrix(dict.getArray(\"Matrix\"),null);operatorList.addOp(fn,[\"Shading\",objId,matrix])}return undefined}throw new FormatError(`Unknown PatternType: ${typeNum}`)}}throw new FormatError(`Unknown PatternName: ${patternName}`)}_parseVisibilityExpression(array,nestingCounter,currentResult){const MAX_NESTING=10;if(++nestingCounter>MAX_NESTING){warn(\"Visibility expression is too deeply nested\");return}const length=array.length;const operator=this.xref.fetchIfRef(array[0]);if(length<2||!(operator instanceof Name)){warn(\"Invalid visibility expression\");return}switch(operator.name){case\"And\":case\"Or\":case\"Not\":currentResult.push(operator.name);break;default:warn(`Invalid operator ${operator.name} in visibility expression`);return}for(let i=1;i<length;i++){const raw=array[i];const object=this.xref.fetchIfRef(raw);if(Array.isArray(object)){const nestedResult=[];currentResult.push(nestedResult);this._parseVisibilityExpression(object,nestingCounter,nestedResult)}else if(raw instanceof Ref){currentResult.push(raw.toString())}}}async parseMarkedContentProps(contentProperties,resources){let optionalContent;if(contentProperties instanceof Name){const properties=resources.get(\"Properties\");optionalContent=properties.get(contentProperties.name)}else if(contentProperties instanceof Dict){optionalContent=contentProperties}else{throw new FormatError(\"Optional content properties malformed.\")}const optionalContentType=optionalContent.get(\"Type\")?.name;if(optionalContentType===\"OCG\"){return{type:optionalContentType,id:optionalContent.objId}}else if(optionalContentType===\"OCMD\"){const expression=optionalContent.get(\"VE\");if(Array.isArray(expression)){const result=[];this._parseVisibilityExpression(expression,0,result);if(result.length>0){return{type:\"OCMD\",expression:result}}}const optionalContentGroups=optionalContent.get(\"OCGs\");if(Array.isArray(optionalContentGroups)||optionalContentGroups instanceof Dict){const groupIds=[];if(Array.isArray(optionalContentGroups)){for(const ocg of optionalContentGroups){groupIds.push(ocg.toString())}}else{groupIds.push(optionalContentGroups.objId)}return{type:optionalContentType,ids:groupIds,policy:optionalContent.get(\"P\")instanceof Name?optionalContent.get(\"P\").name:null,expression:null}}else if(optionalContentGroups instanceof Ref){return{type:optionalContentType,id:optionalContentGroups.toString()}}}return null}getOperatorList({stream:stream,task:task,resources:resources,operatorList:operatorList,initialState:initialState=null,fallbackFontDict:fallbackFontDict=null,prevRefs:prevRefs=null}){const objId=stream.dict?.objId;const seenRefs=new RefSet(prevRefs);if(objId){if(prevRefs?.has(objId)){throw new Error(`getOperatorList - ignoring circular reference: ${objId}`)}seenRefs.put(objId)}resources||=Dict.empty;initialState||=new EvalState;if(!operatorList){throw new Error('getOperatorList: missing \"operatorList\" parameter')}const self=this;const xref=this.xref;const localImageCache=new LocalImageCache;const localColorSpaceCache=new LocalColorSpaceCache;const localGStateCache=new LocalGStateCache;const localTilingPatternCache=new LocalTilingPatternCache;const localShadingPatternCache=new Map;const xobjs=resources.get(\"XObject\")||Dict.empty;const patterns=resources.get(\"Pattern\")||Dict.empty;const stateManager=new StateManager(initialState);const preprocessor=new EvaluatorPreprocessor(stream,xref,stateManager);const timeSlotManager=new TimeSlotManager;function closePendingRestoreOPS(argument){for(let i=0,ii=preprocessor.savedStatesDepth;i<ii;i++){operatorList.addOp(OPS.restore,[])}}return new Promise((function promiseBody(resolve,reject){const next=function(promise){Promise.all([promise,operatorList.ready]).then((function(){try{promiseBody(resolve,reject)}catch(ex){reject(ex)}}),reject)};task.ensureNotTerminated();timeSlotManager.reset();const operation={};let stop,i,ii,cs,name,isValidName;while(!(stop=timeSlotManager.check())){operation.args=null;if(!preprocessor.read(operation)){break}let args=operation.args;let fn=operation.fn;switch(fn|0){case OPS.paintXObject:isValidName=args[0]instanceof Name;name=args[0].name;if(isValidName){const localImage=localImageCache.getByName(name);if(localImage){addCachedImageOps(operatorList,localImage);args=null;continue}}next(new Promise((function(resolveXObject,rejectXObject){if(!isValidName){throw new FormatError(\"XObject must be referred to by name.\")}let xobj=xobjs.getRaw(name);if(xobj instanceof Ref){const cachedImage=localImageCache.getByRef(xobj)||self._regionalImageCache.getByRef(xobj)||self.globalImageCache.getData(xobj,self.pageIndex);if(cachedImage){addCachedImageOps(operatorList,cachedImage);resolveXObject();return}xobj=xref.fetch(xobj)}if(!(xobj instanceof BaseStream)){throw new FormatError(\"XObject should be a stream\")}const type=xobj.dict.get(\"Subtype\");if(!(type instanceof Name)){throw new FormatError(\"XObject should have a Name subtype\")}if(type.name===\"Form\"){stateManager.save();self.buildFormXObject(resources,xobj,null,operatorList,task,stateManager.state.clone({newPath:true}),localColorSpaceCache,seenRefs).then((function(){stateManager.restore();resolveXObject()}),rejectXObject);return}else if(type.name===\"Image\"){self.buildPaintImageXObject({resources:resources,image:xobj,operatorList:operatorList,cacheKey:name,localImageCache:localImageCache,localColorSpaceCache:localColorSpaceCache}).then(resolveXObject,rejectXObject);return}else if(type.name===\"PS\"){info(\"Ignored XObject subtype PS\")}else{throw new FormatError(`Unhandled XObject subtype ${type.name}`)}resolveXObject()})).catch((function(reason){if(reason instanceof AbortException){return}if(self.options.ignoreErrors){warn(`getOperatorList - ignoring XObject: \"${reason}\".`);return}throw reason})));return;case OPS.setFont:const fontSize=args[1];next(self.handleSetFont(resources,args,null,operatorList,task,stateManager.state,fallbackFontDict).then((function(loadedName){operatorList.addDependency(loadedName);operatorList.addOp(OPS.setFont,[loadedName,fontSize])})));return;case OPS.endInlineImage:const cacheKey=args[0].cacheKey;if(cacheKey){const localImage=localImageCache.getByName(cacheKey);if(localImage){addCachedImageOps(operatorList,localImage);args=null;continue}}next(self.buildPaintImageXObject({resources:resources,image:args[0],isInline:true,operatorList:operatorList,cacheKey:cacheKey,localImageCache:localImageCache,localColorSpaceCache:localColorSpaceCache}));return;case OPS.showText:if(!stateManager.state.font){self.ensureStateFont(stateManager.state);continue}args[0]=self.handleText(args[0],stateManager.state);break;case OPS.showSpacedText:if(!stateManager.state.font){self.ensureStateFont(stateManager.state);continue}const combinedGlyphs=[],state=stateManager.state;for(const arrItem of args[0]){if(typeof arrItem===\"string\"){combinedGlyphs.push(...self.handleText(arrItem,state))}else if(typeof arrItem===\"number\"){combinedGlyphs.push(arrItem)}}args[0]=combinedGlyphs;fn=OPS.showText;break;case OPS.nextLineShowText:if(!stateManager.state.font){self.ensureStateFont(stateManager.state);continue}operatorList.addOp(OPS.nextLine);args[0]=self.handleText(args[0],stateManager.state);fn=OPS.showText;break;case OPS.nextLineSetSpacingShowText:if(!stateManager.state.font){self.ensureStateFont(stateManager.state);continue}operatorList.addOp(OPS.nextLine);operatorList.addOp(OPS.setWordSpacing,[args.shift()]);operatorList.addOp(OPS.setCharSpacing,[args.shift()]);args[0]=self.handleText(args[0],stateManager.state);fn=OPS.showText;break;case OPS.setTextRenderingMode:stateManager.state.textRenderingMode=args[0];break;case OPS.setFillColorSpace:{const fillCS=self._getColorSpace(args[0],resources,localColorSpaceCache);if(fillCS instanceof ColorSpace){stateManager.state.fillColorSpace=fillCS;continue}next(self._handleColorSpace(fillCS).then((colorSpace=>{stateManager.state.fillColorSpace=colorSpace||ColorSpaceUtils.gray})));return}case OPS.setStrokeColorSpace:{const strokeCS=self._getColorSpace(args[0],resources,localColorSpaceCache);if(strokeCS instanceof ColorSpace){stateManager.state.strokeColorSpace=strokeCS;continue}next(self._handleColorSpace(strokeCS).then((colorSpace=>{stateManager.state.strokeColorSpace=colorSpace||ColorSpaceUtils.gray})));return}case OPS.setFillColor:cs=stateManager.state.fillColorSpace;args=cs.getRgb(args,0);fn=OPS.setFillRGBColor;break;case OPS.setStrokeColor:cs=stateManager.state.strokeColorSpace;args=cs.getRgb(args,0);fn=OPS.setStrokeRGBColor;break;case OPS.setFillGray:stateManager.state.fillColorSpace=ColorSpaceUtils.gray;args=ColorSpaceUtils.gray.getRgb(args,0);fn=OPS.setFillRGBColor;break;case OPS.setStrokeGray:stateManager.state.strokeColorSpace=ColorSpaceUtils.gray;args=ColorSpaceUtils.gray.getRgb(args,0);fn=OPS.setStrokeRGBColor;break;case OPS.setFillCMYKColor:stateManager.state.fillColorSpace=ColorSpaceUtils.cmyk;args=ColorSpaceUtils.cmyk.getRgb(args,0);fn=OPS.setFillRGBColor;break;case OPS.setStrokeCMYKColor:stateManager.state.strokeColorSpace=ColorSpaceUtils.cmyk;args=ColorSpaceUtils.cmyk.getRgb(args,0);fn=OPS.setStrokeRGBColor;break;case OPS.setFillRGBColor:stateManager.state.fillColorSpace=ColorSpaceUtils.rgb;args=ColorSpaceUtils.rgb.getRgb(args,0);break;case OPS.setStrokeRGBColor:stateManager.state.strokeColorSpace=ColorSpaceUtils.rgb;args=ColorSpaceUtils.rgb.getRgb(args,0);break;case OPS.setFillColorN:cs=stateManager.state.patternFillColorSpace;if(!cs){if(isNumberArray(args,null)){args=ColorSpaceUtils.gray.getRgb(args,0);fn=OPS.setFillRGBColor;break}args=[];fn=OPS.setFillTransparent;break}if(cs.name===\"Pattern\"){next(self.handleColorN(operatorList,OPS.setFillColorN,args,cs,patterns,resources,task,localColorSpaceCache,localTilingPatternCache,localShadingPatternCache));return}args=cs.getRgb(args,0);fn=OPS.setFillRGBColor;break;case OPS.setStrokeColorN:cs=stateManager.state.patternStrokeColorSpace;if(!cs){if(isNumberArray(args,null)){args=ColorSpaceUtils.gray.getRgb(args,0);fn=OPS.setStrokeRGBColor;break}args=[];fn=OPS.setStrokeTransparent;break}if(cs.name===\"Pattern\"){next(self.handleColorN(operatorList,OPS.setStrokeColorN,args,cs,patterns,resources,task,localColorSpaceCache,localTilingPatternCache,localShadingPatternCache));return}args=cs.getRgb(args,0);fn=OPS.setStrokeRGBColor;break;case OPS.shadingFill:let shading;try{const shadingRes=resources.get(\"Shading\");if(!shadingRes){throw new FormatError(\"No shading resource found\")}shading=shadingRes.get(args[0].name);if(!shading){throw new FormatError(\"No shading object found\")}}catch(reason){if(reason instanceof AbortException){continue}if(self.options.ignoreErrors){warn(`getOperatorList - ignoring Shading: \"${reason}\".`);continue}throw reason}const patternId=self.parseShading({shading:shading,resources:resources,localColorSpaceCache:localColorSpaceCache,localShadingPatternCache:localShadingPatternCache});if(!patternId){continue}args=[patternId];fn=OPS.shadingFill;break;case OPS.setGState:isValidName=args[0]instanceof Name;name=args[0].name;if(isValidName){const localGStateObj=localGStateCache.getByName(name);if(localGStateObj){if(localGStateObj.length>0){operatorList.addOp(OPS.setGState,[localGStateObj])}args=null;continue}}next(new Promise((function(resolveGState,rejectGState){if(!isValidName){throw new FormatError(\"GState must be referred to by name.\")}const extGState=resources.get(\"ExtGState\");if(!(extGState instanceof Dict)){throw new FormatError(\"ExtGState should be a dictionary.\")}const gState=extGState.get(name);if(!(gState instanceof Dict)){throw new FormatError(\"GState should be a dictionary.\")}self.setGState({resources:resources,gState:gState,operatorList:operatorList,cacheKey:name,task:task,stateManager:stateManager,localGStateCache:localGStateCache,localColorSpaceCache:localColorSpaceCache,seenRefs:seenRefs}).then(resolveGState,rejectGState)})).catch((function(reason){if(reason instanceof AbortException){return}if(self.options.ignoreErrors){warn(`getOperatorList - ignoring ExtGState: \"${reason}\".`);return}throw reason})));return;case OPS.setLineWidth:{const[thickness]=args;if(typeof thickness!==\"number\"){warn(`Invalid setLineWidth: ${thickness}`);continue}args[0]=Math.abs(thickness);break}case OPS.moveTo:case OPS.lineTo:case OPS.curveTo:case OPS.curveTo2:case OPS.curveTo3:case OPS.closePath:case OPS.rectangle:self.buildPath(fn,args,stateManager.state);continue;case OPS.stroke:case OPS.closeStroke:case OPS.fill:case OPS.eoFill:case OPS.fillStroke:case OPS.eoFillStroke:case OPS.closeFillStroke:case OPS.closeEOFillStroke:case OPS.endPath:{const{state:{pathBuffer:pathBuffer,pathMinMax:pathMinMax}}=stateManager;if(fn===OPS.closeStroke||fn===OPS.closeFillStroke||fn===OPS.closeEOFillStroke){pathBuffer.push(DrawOPS.closePath)}if(pathBuffer.length===0){operatorList.addOp(OPS.constructPath,[fn,[null],null])}else{operatorList.addOp(OPS.constructPath,[fn,[new Float32Array(pathBuffer)],pathMinMax.slice()]);pathBuffer.length=0;pathMinMax.set([Infinity,Infinity,-Infinity,-Infinity],0)}continue}case OPS.setTextMatrix:operatorList.addOp(fn,[new Float32Array(args)]);continue;case OPS.markPoint:case OPS.markPointProps:case OPS.beginCompat:case OPS.endCompat:continue;case OPS.beginMarkedContentProps:if(!(args[0]instanceof Name)){warn(`Expected name for beginMarkedContentProps arg0=${args[0]}`);operatorList.addOp(OPS.beginMarkedContentProps,[\"OC\",null]);continue}if(args[0].name===\"OC\"){next(self.parseMarkedContentProps(args[1],resources).then((data=>{operatorList.addOp(OPS.beginMarkedContentProps,[\"OC\",data])})).catch((reason=>{if(reason instanceof AbortException){return}if(self.options.ignoreErrors){warn(`getOperatorList - ignoring beginMarkedContentProps: \"${reason}\".`);operatorList.addOp(OPS.beginMarkedContentProps,[\"OC\",null]);return}throw reason})));return}args=[args[0].name,args[1]instanceof Dict?args[1].get(\"MCID\"):null];break;case OPS.beginMarkedContent:case OPS.endMarkedContent:default:if(args!==null){for(i=0,ii=args.length;i<ii;i++){if(args[i]instanceof Dict){break}}if(i<ii){warn(\"getOperatorList - ignoring operator: \"+fn);continue}}}operatorList.addOp(fn,args)}if(stop){next(deferred);return}closePendingRestoreOPS();resolve()})).catch((reason=>{if(reason instanceof AbortException){return}if(this.options.ignoreErrors){warn(`getOperatorList - ignoring errors during \"${task.name}\" `+`task: \"${reason}\".`);closePendingRestoreOPS();return}throw reason}))}getTextContent({stream:stream,task:task,resources:resources,stateManager:stateManager=null,includeMarkedContent:includeMarkedContent=false,sink:sink,seenStyles:seenStyles=new Set,viewBox:viewBox,lang:lang=null,markedContentData:markedContentData=null,disableNormalization:disableNormalization=false,keepWhiteSpace:keepWhiteSpace=false,prevRefs:prevRefs=null}){const objId=stream.dict?.objId;const seenRefs=new RefSet(prevRefs);if(objId){if(prevRefs?.has(objId)){throw new Error(`getTextContent - ignoring circular reference: ${objId}`)}seenRefs.put(objId)}resources||=Dict.empty;stateManager||=new StateManager(new TextState);if(includeMarkedContent){markedContentData||={level:0}}const textContent={items:[],styles:Object.create(null),lang:lang};const textContentItem={initialized:false,str:[],totalWidth:0,totalHeight:0,width:0,height:0,vertical:false,prevTransform:null,textAdvanceScale:0,spaceInFlowMin:0,spaceInFlowMax:0,trackingSpaceMin:Infinity,negativeSpaceMax:-Infinity,notASpace:-Infinity,transform:null,fontName:null,hasEOL:false};const twoLastChars=[\" \",\" \"];let twoLastCharsPos=0;function saveLastChar(char){const nextPos=(twoLastCharsPos+1)%2;const ret=twoLastChars[twoLastCharsPos]!==\" \"&&twoLastChars[nextPos]===\" \";twoLastChars[twoLastCharsPos]=char;twoLastCharsPos=nextPos;return!keepWhiteSpace&&ret}function shouldAddWhitepsace(){return!keepWhiteSpace&&twoLastChars[twoLastCharsPos]!==\" \"&&twoLastChars[(twoLastCharsPos+1)%2]===\" \"}function resetLastChars(){twoLastChars[0]=twoLastChars[1]=\" \";twoLastCharsPos=0}const TRACKING_SPACE_FACTOR=.102;const NOT_A_SPACE_FACTOR=.03;const NEGATIVE_SPACE_FACTOR=-.2;const SPACE_IN_FLOW_MIN_FACTOR=.102;const SPACE_IN_FLOW_MAX_FACTOR=.6;const VERTICAL_SHIFT_RATIO=.25;const self=this;const xref=this.xref;const showSpacedTextBuffer=[];let xobjs=null;const emptyXObjectCache=new LocalImageCache;const emptyGStateCache=new LocalGStateCache;const preprocessor=new EvaluatorPreprocessor(stream,xref,stateManager);let textState;function pushWhitespace({width:width=0,height:height=0,transform:transform=textContentItem.prevTransform,fontName:fontName=textContentItem.fontName}){textContent.items.push({str:\" \",dir:\"ltr\",width:width,height:height,transform:transform,fontName:fontName,hasEOL:false})}function getCurrentTextTransform(){const font=textState.font;const tsm=[textState.fontSize*textState.textHScale,0,0,textState.fontSize,0,textState.textRise];if(font.isType3Font&&(textState.fontSize<=1||font.isCharBBox)&&!isArrayEqual(textState.fontMatrix,FONT_IDENTITY_MATRIX)){const glyphHeight=font.bbox[3]-font.bbox[1];if(glyphHeight>0){tsm[3]*=glyphHeight*textState.fontMatrix[3]}}return Util.transform(textState.ctm,Util.transform(textState.textMatrix,tsm))}function ensureTextContentItem(){if(textContentItem.initialized){return textContentItem}const{font:font,loadedName:loadedName}=textState;if(!seenStyles.has(loadedName)){seenStyles.add(loadedName);textContent.styles[loadedName]={fontFamily:font.fallbackName,ascent:font.ascent,descent:font.descent,vertical:font.vertical};if(self.options.fontExtraProperties&&font.systemFontInfo){const style=textContent.styles[loadedName];style.fontSubstitution=font.systemFontInfo.css;style.fontSubstitutionLoadedName=font.systemFontInfo.loadedName}}textContentItem.fontName=loadedName;const trm=textContentItem.transform=getCurrentTextTransform();if(!font.vertical){textContentItem.width=textContentItem.totalWidth=0;textContentItem.height=textContentItem.totalHeight=Math.hypot(trm[2],trm[3]);textContentItem.vertical=false}else{textContentItem.width=textContentItem.totalWidth=Math.hypot(trm[0],trm[1]);textContentItem.height=textContentItem.totalHeight=0;textContentItem.vertical=true}const scaleLineX=Math.hypot(textState.textLineMatrix[0],textState.textLineMatrix[1]);const scaleCtmX=Math.hypot(textState.ctm[0],textState.ctm[1]);textContentItem.textAdvanceScale=scaleCtmX*scaleLineX;const{fontSize:fontSize}=textState;textContentItem.trackingSpaceMin=fontSize*TRACKING_SPACE_FACTOR;textContentItem.notASpace=fontSize*NOT_A_SPACE_FACTOR;textContentItem.negativeSpaceMax=fontSize*NEGATIVE_SPACE_FACTOR;textContentItem.spaceInFlowMin=fontSize*SPACE_IN_FLOW_MIN_FACTOR;textContentItem.spaceInFlowMax=fontSize*SPACE_IN_FLOW_MAX_FACTOR;textContentItem.hasEOL=false;textContentItem.initialized=true;return textContentItem}function updateAdvanceScale(){if(!textContentItem.initialized){return}const scaleLineX=Math.hypot(textState.textLineMatrix[0],textState.textLineMatrix[1]);const scaleCtmX=Math.hypot(textState.ctm[0],textState.ctm[1]);const scaleFactor=scaleCtmX*scaleLineX;if(scaleFactor===textContentItem.textAdvanceScale){return}if(!textContentItem.vertical){textContentItem.totalWidth+=textContentItem.width*textContentItem.textAdvanceScale;textContentItem.width=0}else{textContentItem.totalHeight+=textContentItem.height*textContentItem.textAdvanceScale;textContentItem.height=0}textContentItem.textAdvanceScale=scaleFactor}function runBidiTransform(textChunk){let text=textChunk.str.join(\"\");if(!disableNormalization){text=normalizeUnicode(text)}const bidiResult=bidi(text,-1,textChunk.vertical);return{str:bidiResult.str,dir:bidiResult.dir,width:Math.abs(textChunk.totalWidth),height:Math.abs(textChunk.totalHeight),transform:textChunk.transform,fontName:textChunk.fontName,hasEOL:textChunk.hasEOL}}async function handleSetFont(fontName,fontRef){const translated=await self.loadFont(fontName,fontRef,resources,task);textState.loadedName=translated.loadedName;textState.font=translated.font;textState.fontMatrix=translated.font.fontMatrix||FONT_IDENTITY_MATRIX}function applyInverseRotation(x,y,matrix){const scale=Math.hypot(matrix[0],matrix[1]);return[(matrix[0]*x+matrix[1]*y)/scale,(matrix[2]*x+matrix[3]*y)/scale]}function compareWithLastPosition(glyphWidth){const currentTransform=getCurrentTextTransform();let posX=currentTransform[4];let posY=currentTransform[5];if(textState.font?.vertical){if(posX<viewBox[0]||posX>viewBox[2]||posY+glyphWidth<viewBox[1]||posY>viewBox[3]){return false}}else if(posX+glyphWidth<viewBox[0]||posX>viewBox[2]||posY<viewBox[1]||posY>viewBox[3]){return false}if(!textState.font||!textContentItem.prevTransform){return true}let lastPosX=textContentItem.prevTransform[4];let lastPosY=textContentItem.prevTransform[5];if(lastPosX===posX&&lastPosY===posY){return true}let rotate=-1;if(currentTransform[0]&&currentTransform[1]===0&&currentTransform[2]===0){rotate=currentTransform[0]>0?0:180}else if(currentTransform[1]&&currentTransform[0]===0&&currentTransform[3]===0){rotate=currentTransform[1]>0?90:270}switch(rotate){case 0:break;case 90:[posX,posY]=[posY,posX];[lastPosX,lastPosY]=[lastPosY,lastPosX];break;case 180:[posX,posY,lastPosX,lastPosY]=[-posX,-posY,-lastPosX,-lastPosY];break;case 270:[posX,posY]=[-posY,-posX];[lastPosX,lastPosY]=[-lastPosY,-lastPosX];break;default:[posX,posY]=applyInverseRotation(posX,posY,currentTransform);[lastPosX,lastPosY]=applyInverseRotation(lastPosX,lastPosY,textContentItem.prevTransform)}if(textState.font.vertical){const advanceY=(lastPosY-posY)/textContentItem.textAdvanceScale;const advanceX=posX-lastPosX;const textOrientation=Math.sign(textContentItem.height);if(advanceY<textOrientation*textContentItem.negativeSpaceMax){if(Math.abs(advanceX)>.5*textContentItem.width){appendEOL();return true}resetLastChars();flushTextContentItem();return true}if(Math.abs(advanceX)>textContentItem.width){appendEOL();return true}if(advanceY<=textOrientation*textContentItem.notASpace){resetLastChars()}if(advanceY<=textOrientation*textContentItem.trackingSpaceMin){if(shouldAddWhitepsace()){resetLastChars();flushTextContentItem();pushWhitespace({height:Math.abs(advanceY)})}else{textContentItem.height+=advanceY}}else if(!addFakeSpaces(advanceY,textContentItem.prevTransform,textOrientation)){if(textContentItem.str.length===0){resetLastChars();pushWhitespace({height:Math.abs(advanceY)})}else{textContentItem.height+=advanceY}}if(Math.abs(advanceX)>textContentItem.width*VERTICAL_SHIFT_RATIO){flushTextContentItem()}return true}const advanceX=(posX-lastPosX)/textContentItem.textAdvanceScale;const advanceY=posY-lastPosY;const textOrientation=Math.sign(textContentItem.width);if(advanceX<textOrientation*textContentItem.negativeSpaceMax){if(Math.abs(advanceY)>.5*textContentItem.height){appendEOL();return true}resetLastChars();flushTextContentItem();return true}if(Math.abs(advanceY)>textContentItem.height){appendEOL();return true}if(advanceX<=textOrientation*textContentItem.notASpace){resetLastChars()}if(advanceX<=textOrientation*textContentItem.trackingSpaceMin){if(shouldAddWhitepsace()){resetLastChars();flushTextContentItem();pushWhitespace({width:Math.abs(advanceX)})}else{textContentItem.width+=advanceX}}else if(!addFakeSpaces(advanceX,textContentItem.prevTransform,textOrientation)){if(textContentItem.str.length===0){resetLastChars();pushWhitespace({width:Math.abs(advanceX)})}else{textContentItem.width+=advanceX}}if(Math.abs(advanceY)>textContentItem.height*VERTICAL_SHIFT_RATIO){flushTextContentItem()}return true}function buildTextContentItem({chars:chars,extraSpacing:extraSpacing}){const font=textState.font;if(!chars){const charSpacing=textState.charSpacing+extraSpacing;if(charSpacing){if(!font.vertical){textState.translateTextMatrix(charSpacing*textState.textHScale,0)}else{textState.translateTextMatrix(0,-charSpacing)}}if(keepWhiteSpace){compareWithLastPosition(0)}return}const glyphs=font.charsToGlyphs(chars);const scale=textState.fontMatrix[0]*textState.fontSize;for(let i=0,ii=glyphs.length;i<ii;i++){const glyph=glyphs[i];const{category:category}=glyph;if(category.isInvisibleFormatMark){continue}let charSpacing=textState.charSpacing+(i+1===ii?extraSpacing:0);let glyphWidth=glyph.width;if(font.vertical){glyphWidth=glyph.vmetric?glyph.vmetric[0]:-glyphWidth}let scaledDim=glyphWidth*scale;if(!keepWhiteSpace&&category.isWhitespace){if(!font.vertical){charSpacing+=scaledDim+textState.wordSpacing;textState.translateTextMatrix(charSpacing*textState.textHScale,0)}else{charSpacing+=-scaledDim+textState.wordSpacing;textState.translateTextMatrix(0,-charSpacing)}saveLastChar(\" \");continue}if(!category.isZeroWidthDiacritic&&!compareWithLastPosition(scaledDim)){if(!font.vertical){textState.translateTextMatrix(scaledDim*textState.textHScale,0)}else{textState.translateTextMatrix(0,scaledDim)}continue}const textChunk=ensureTextContentItem();if(category.isZeroWidthDiacritic){scaledDim=0}if(!font.vertical){scaledDim*=textState.textHScale;textState.translateTextMatrix(scaledDim,0);textChunk.width+=scaledDim}else{textState.translateTextMatrix(0,scaledDim);scaledDim=Math.abs(scaledDim);textChunk.height+=scaledDim}if(scaledDim){textChunk.prevTransform=getCurrentTextTransform()}const glyphUnicode=glyph.unicode;if(saveLastChar(glyphUnicode)){textChunk.str.push(\" \")}textChunk.str.push(glyphUnicode);if(charSpacing){if(!font.vertical){textState.translateTextMatrix(charSpacing*textState.textHScale,0)}else{textState.translateTextMatrix(0,-charSpacing)}}}}function appendEOL(){resetLastChars();if(textContentItem.initialized){textContentItem.hasEOL=true;flushTextContentItem()}else{textContent.items.push({str:\"\",dir:\"ltr\",width:0,height:0,transform:getCurrentTextTransform(),fontName:textState.loadedName,hasEOL:true})}}function addFakeSpaces(width,transf,textOrientation){if(textOrientation*textContentItem.spaceInFlowMin<=width&&width<=textOrientation*textContentItem.spaceInFlowMax){if(textContentItem.initialized){resetLastChars();textContentItem.str.push(\" \")}return false}const fontName=textContentItem.fontName;let height=0;if(textContentItem.vertical){height=width;width=0}flushTextContentItem();resetLastChars();pushWhitespace({width:Math.abs(width),height:Math.abs(height),transform:transf||getCurrentTextTransform(),fontName:fontName});return true}function flushTextContentItem(){if(!textContentItem.initialized||!textContentItem.str){return}if(!textContentItem.vertical){textContentItem.totalWidth+=textContentItem.width*textContentItem.textAdvanceScale}else{textContentItem.totalHeight+=textContentItem.height*textContentItem.textAdvanceScale}textContent.items.push(runBidiTransform(textContentItem));textContentItem.initialized=false;textContentItem.str.length=0}function enqueueChunk(batch=false){const length=textContent.items.length;if(length===0){return}if(batch&&length<TEXT_CHUNK_BATCH_SIZE){return}sink.enqueue(textContent,length);textContent.items=[];textContent.styles=Object.create(null)}const timeSlotManager=new TimeSlotManager;return new Promise((function promiseBody(resolve,reject){const next=function(promise){enqueueChunk(true);Promise.all([promise,sink.ready]).then((function(){try{promiseBody(resolve,reject)}catch(ex){reject(ex)}}),reject)};task.ensureNotTerminated();timeSlotManager.reset();const operation={};let stop,name,isValidName,args=[];while(!(stop=timeSlotManager.check())){args.length=0;operation.args=args;if(!preprocessor.read(operation)){break}const previousState=textState;textState=stateManager.state;const fn=operation.fn;args=operation.args;switch(fn|0){case OPS.setFont:const fontNameArg=args[0].name,fontSizeArg=args[1];if(textState.font&&fontNameArg===textState.fontName&&fontSizeArg===textState.fontSize){break}flushTextContentItem();textState.fontName=fontNameArg;textState.fontSize=fontSizeArg;next(handleSetFont(fontNameArg,null));return;case OPS.setTextRise:textState.textRise=args[0];break;case OPS.setHScale:textState.textHScale=args[0]/100;break;case OPS.setLeading:textState.leading=args[0];break;case OPS.moveText:textState.translateTextLineMatrix(args[0],args[1]);textState.textMatrix=textState.textLineMatrix.slice();break;case OPS.setLeadingMoveText:textState.leading=-args[1];textState.translateTextLineMatrix(args[0],args[1]);textState.textMatrix=textState.textLineMatrix.slice();break;case OPS.nextLine:textState.carriageReturn();break;case OPS.setTextMatrix:textState.setTextMatrix(args[0],args[1],args[2],args[3],args[4],args[5]);textState.setTextLineMatrix(args[0],args[1],args[2],args[3],args[4],args[5]);updateAdvanceScale();break;case OPS.setCharSpacing:textState.charSpacing=args[0];break;case OPS.setWordSpacing:textState.wordSpacing=args[0];break;case OPS.beginText:textState.textMatrix=IDENTITY_MATRIX.slice();textState.textLineMatrix=IDENTITY_MATRIX.slice();break;case OPS.showSpacedText:if(!stateManager.state.font){self.ensureStateFont(stateManager.state);continue}const spaceFactor=(textState.font.vertical?1:-1)*textState.fontSize/1e3;const elements=args[0];for(let i=0,ii=elements.length;i<ii;i++){const item=elements[i];if(typeof item===\"string\"){showSpacedTextBuffer.push(item)}else if(typeof item===\"number\"&&item!==0){const str=showSpacedTextBuffer.join(\"\");showSpacedTextBuffer.length=0;buildTextContentItem({chars:str,extraSpacing:item*spaceFactor})}}if(showSpacedTextBuffer.length>0){const str=showSpacedTextBuffer.join(\"\");showSpacedTextBuffer.length=0;buildTextContentItem({chars:str,extraSpacing:0})}break;case OPS.showText:if(!stateManager.state.font){self.ensureStateFont(stateManager.state);continue}buildTextContentItem({chars:args[0],extraSpacing:0});break;case OPS.nextLineShowText:if(!stateManager.state.font){self.ensureStateFont(stateManager.state);continue}textState.carriageReturn();buildTextContentItem({chars:args[0],extraSpacing:0});break;case OPS.nextLineSetSpacingShowText:if(!stateManager.state.font){self.ensureStateFont(stateManager.state);continue}textState.wordSpacing=args[0];textState.charSpacing=args[1];textState.carriageReturn();buildTextContentItem({chars:args[2],extraSpacing:0});break;case OPS.paintXObject:flushTextContentItem();xobjs??=resources.get(\"XObject\")||Dict.empty;isValidName=args[0]instanceof Name;name=args[0].name;if(isValidName&&emptyXObjectCache.getByName(name)){break}next(new Promise((function(resolveXObject,rejectXObject){if(!isValidName){throw new FormatError(\"XObject must be referred to by name.\")}let xobj=xobjs.getRaw(name);if(xobj instanceof Ref){if(emptyXObjectCache.getByRef(xobj)){resolveXObject();return}const globalImage=self.globalImageCache.getData(xobj,self.pageIndex);if(globalImage){resolveXObject();return}xobj=xref.fetch(xobj)}if(!(xobj instanceof BaseStream)){throw new FormatError(\"XObject should be a stream\")}const{dict:dict}=xobj;const type=dict.get(\"Subtype\");if(!(type instanceof Name)){throw new FormatError(\"XObject should have a Name subtype\")}if(type.name!==\"Form\"){emptyXObjectCache.set(name,dict.objId,true);resolveXObject();return}const currentState=stateManager.state.clone();const xObjStateManager=new StateManager(currentState);const matrix=lookupMatrix(dict.getArray(\"Matrix\"),null);if(matrix){xObjStateManager.transform(matrix)}const localResources=dict.get(\"Resources\");enqueueChunk();const sinkWrapper={enqueueInvoked:false,enqueue(chunk,size){this.enqueueInvoked=true;sink.enqueue(chunk,size)},get desiredSize(){return sink.desiredSize},get ready(){return sink.ready}};self.getTextContent({stream:xobj,task:task,resources:localResources instanceof Dict?localResources:resources,stateManager:xObjStateManager,includeMarkedContent:includeMarkedContent,sink:sinkWrapper,seenStyles:seenStyles,viewBox:viewBox,lang:lang,markedContentData:markedContentData,disableNormalization:disableNormalization,keepWhiteSpace:keepWhiteSpace,prevRefs:seenRefs}).then((function(){if(!sinkWrapper.enqueueInvoked){emptyXObjectCache.set(name,dict.objId,true)}resolveXObject()}),rejectXObject)})).catch((function(reason){if(reason instanceof AbortException){return}if(self.options.ignoreErrors){warn(`getTextContent - ignoring XObject: \"${reason}\".`);return}throw reason})));return;case OPS.setGState:isValidName=args[0]instanceof Name;name=args[0].name;if(isValidName&&emptyGStateCache.getByName(name)){break}next(new Promise((function(resolveGState,rejectGState){if(!isValidName){throw new FormatError(\"GState must be referred to by name.\")}const extGState=resources.get(\"ExtGState\");if(!(extGState instanceof Dict)){throw new FormatError(\"ExtGState should be a dictionary.\")}const gState=extGState.get(name);if(!(gState instanceof Dict)){throw new FormatError(\"GState should be a dictionary.\")}const gStateFont=gState.get(\"Font\");if(!gStateFont){emptyGStateCache.set(name,gState.objId,true);resolveGState();return}flushTextContentItem();textState.fontName=null;textState.fontSize=gStateFont[1];handleSetFont(null,gStateFont[0]).then(resolveGState,rejectGState)})).catch((function(reason){if(reason instanceof AbortException){return}if(self.options.ignoreErrors){warn(`getTextContent - ignoring ExtGState: \"${reason}\".`);return}throw reason})));return;case OPS.beginMarkedContent:flushTextContentItem();if(includeMarkedContent){markedContentData.level++;textContent.items.push({type:\"beginMarkedContent\",tag:args[0]instanceof Name?args[0].name:null})}break;case OPS.beginMarkedContentProps:flushTextContentItem();if(includeMarkedContent){markedContentData.level++;let mcid=null;if(args[1]instanceof Dict){mcid=args[1].get(\"MCID\")}textContent.items.push({type:\"beginMarkedContentProps\",id:Number.isInteger(mcid)?`${self.idFactory.getPageObjId()}_mc${mcid}`:null,tag:args[0]instanceof Name?args[0].name:null})}break;case OPS.endMarkedContent:flushTextContentItem();if(includeMarkedContent){if(markedContentData.level===0){break}markedContentData.level--;textContent.items.push({type:\"endMarkedContent\"})}break;case OPS.restore:if(previousState&&(previousState.font!==textState.font||previousState.fontSize!==textState.fontSize||previousState.fontName!==textState.fontName)){flushTextContentItem()}break}if(textContent.items.length>=sink.desiredSize){stop=true;break}}if(stop){next(deferred);return}flushTextContentItem();enqueueChunk();resolve()})).catch((reason=>{if(reason instanceof AbortException){return}if(this.options.ignoreErrors){warn(`getTextContent - ignoring errors during \"${task.name}\" `+`task: \"${reason}\".`);flushTextContentItem();enqueueChunk();return}throw reason}))}async extractDataStructures(dict,properties){const xref=this.xref;let cidToGidBytes;const toUnicodePromise=this.readToUnicode(properties.toUnicode);if(properties.composite){const cidSystemInfo=dict.get(\"CIDSystemInfo\");if(cidSystemInfo instanceof Dict){properties.cidSystemInfo={registry:stringToPDFString(cidSystemInfo.get(\"Registry\")),ordering:stringToPDFString(cidSystemInfo.get(\"Ordering\")),supplement:cidSystemInfo.get(\"Supplement\")}}try{const cidToGidMap=dict.get(\"CIDToGIDMap\");if(cidToGidMap instanceof BaseStream){cidToGidBytes=cidToGidMap.getBytes()}}catch(ex){if(!this.options.ignoreErrors){throw ex}warn(`extractDataStructures - ignoring CIDToGIDMap data: \"${ex}\".`)}}const differences=[];let baseEncodingName=null;let encoding;if(dict.has(\"Encoding\")){encoding=dict.get(\"Encoding\");if(encoding instanceof Dict){baseEncodingName=encoding.get(\"BaseEncoding\");baseEncodingName=baseEncodingName instanceof Name?baseEncodingName.name:null;if(encoding.has(\"Differences\")){const diffEncoding=encoding.get(\"Differences\");let index=0;for(const entry of diffEncoding){const data=xref.fetchIfRef(entry);if(typeof data===\"number\"){index=data}else if(data instanceof Name){differences[index++]=data.name}else{throw new FormatError(`Invalid entry in 'Differences' array: ${data}`)}}}}else if(encoding instanceof Name){baseEncodingName=encoding.name}else{const msg=\"Encoding is not a Name nor a Dict\";if(!this.options.ignoreErrors){throw new FormatError(msg)}warn(msg)}if(baseEncodingName!==\"MacRomanEncoding\"&&baseEncodingName!==\"MacExpertEncoding\"&&baseEncodingName!==\"WinAnsiEncoding\"){baseEncodingName=null}}const nonEmbeddedFont=!properties.file||properties.isInternalFont,isSymbolsFontName=getSymbolsFonts()[properties.name];if(baseEncodingName&&nonEmbeddedFont&&isSymbolsFontName){baseEncodingName=null}if(baseEncodingName){properties.defaultEncoding=getEncoding(baseEncodingName)}else{const isSymbolicFont=!!(properties.flags&FontFlags.Symbolic);const isNonsymbolicFont=!!(properties.flags&FontFlags.Nonsymbolic);encoding=StandardEncoding;if(properties.type===\"TrueType\"&&!isNonsymbolicFont){encoding=WinAnsiEncoding}if(isSymbolicFont||isSymbolsFontName){encoding=MacRomanEncoding;if(nonEmbeddedFont){if(/Symbol/i.test(properties.name)){encoding=SymbolSetEncoding}else if(/Dingbats/i.test(properties.name)){encoding=ZapfDingbatsEncoding}else if(/Wingdings/i.test(properties.name)){encoding=WinAnsiEncoding}}}properties.defaultEncoding=encoding}properties.differences=differences;properties.baseEncodingName=baseEncodingName;properties.hasEncoding=!!baseEncodingName||differences.length>0;properties.dict=dict;properties.toUnicode=await toUnicodePromise;const builtToUnicode=await this.buildToUnicode(properties);properties.toUnicode=builtToUnicode;if(cidToGidBytes){properties.cidToGidMap=this.readCidToGidMap(cidToGidBytes,builtToUnicode)}return properties}_simpleFontToUnicode(properties,forceGlyphs=false){assert(!properties.composite,\"Must be a simple font.\");const toUnicode=[];const encoding=properties.defaultEncoding.slice();const baseEncodingName=properties.baseEncodingName;const differences=properties.differences;for(const charcode in differences){const glyphName=differences[charcode];if(glyphName===\".notdef\"){continue}encoding[charcode]=glyphName}const glyphsUnicodeMap=getGlyphsUnicode();for(const charcode in encoding){let glyphName=encoding[charcode];if(glyphName===\"\"){continue}let unicode=glyphsUnicodeMap[glyphName];if(unicode!==undefined){toUnicode[charcode]=String.fromCharCode(unicode);continue}let code=0;switch(glyphName[0]){case\"G\":if(glyphName.length===3){code=parseInt(glyphName.substring(1),16)}break;case\"g\":if(glyphName.length===5){code=parseInt(glyphName.substring(1),16)}break;case\"C\":case\"c\":if(glyphName.length>=3&&glyphName.length<=4){const codeStr=glyphName.substring(1);if(forceGlyphs){code=parseInt(codeStr,16);break}code=+codeStr;if(Number.isNaN(code)&&Number.isInteger(parseInt(codeStr,16))){return this._simpleFontToUnicode(properties,true)}}break;case\"u\":unicode=getUnicodeForGlyph(glyphName,glyphsUnicodeMap);if(unicode!==-1){code=unicode}break;default:switch(glyphName){case\"f_h\":case\"f_t\":case\"T_h\":toUnicode[charcode]=glyphName.replaceAll(\"_\",\"\");continue}break}if(code>0&&code<=1114111&&Number.isInteger(code)){if(baseEncodingName&&code===+charcode){const baseEncoding=getEncoding(baseEncodingName);if(baseEncoding&&(glyphName=baseEncoding[charcode])){toUnicode[charcode]=String.fromCharCode(glyphsUnicodeMap[glyphName]);continue}}toUnicode[charcode]=String.fromCodePoint(code)}}return toUnicode}async buildToUnicode(properties){properties.hasIncludedToUnicodeMap=properties.toUnicode?.length>0;if(properties.hasIncludedToUnicodeMap){if(!properties.composite&&properties.hasEncoding){properties.fallbackToUnicode=this._simpleFontToUnicode(properties)}return properties.toUnicode}if(!properties.composite){return new ToUnicodeMap(this._simpleFontToUnicode(properties))}if(properties.composite&&(properties.cMap.builtInCMap&&!(properties.cMap instanceof IdentityCMap)||properties.cidSystemInfo?.registry===\"Adobe\"&&(properties.cidSystemInfo.ordering===\"GB1\"||properties.cidSystemInfo.ordering===\"CNS1\"||properties.cidSystemInfo.ordering===\"Japan1\"||properties.cidSystemInfo.ordering===\"Korea1\"))){const{registry:registry,ordering:ordering}=properties.cidSystemInfo;const ucs2CMapName=Name.get(`${registry}-${ordering}-UCS2`);const ucs2CMap=await CMapFactory.create({encoding:ucs2CMapName,fetchBuiltInCMap:this._fetchBuiltInCMapBound,useCMap:null});const toUnicode=[],buf=[];properties.cMap.forEach((function(charcode,cid){if(cid>65535){throw new FormatError(\"Max size of CID is 65,535\")}const ucs2=ucs2CMap.lookup(cid);if(ucs2){buf.length=0;for(let i=0,ii=ucs2.length;i<ii;i+=2){buf.push((ucs2.charCodeAt(i)<<8)+ucs2.charCodeAt(i+1))}toUnicode[charcode]=String.fromCharCode(...buf)}}));return new ToUnicodeMap(toUnicode)}return new IdentityToUnicodeMap(properties.firstChar,properties.lastChar)}async readToUnicode(cmapObj){if(!cmapObj){return null}if(cmapObj instanceof Name){const cmap=await CMapFactory.create({encoding:cmapObj,fetchBuiltInCMap:this._fetchBuiltInCMapBound,useCMap:null});if(cmap instanceof IdentityCMap){return new IdentityToUnicodeMap(0,65535)}return new ToUnicodeMap(cmap.getMap())}if(cmapObj instanceof BaseStream){try{const cmap=await CMapFactory.create({encoding:cmapObj,fetchBuiltInCMap:this._fetchBuiltInCMapBound,useCMap:null});if(cmap instanceof IdentityCMap){return new IdentityToUnicodeMap(0,65535)}const map=new Array(cmap.length);cmap.forEach((function(charCode,token){if(typeof token===\"number\"){map[charCode]=String.fromCodePoint(token);return}if(token.length%2!==0){token=\"\\0\"+token}const str=[];for(let k=0;k<token.length;k+=2){const w1=token.charCodeAt(k)<<8|token.charCodeAt(k+1);if((w1&63488)!==55296){str.push(w1);continue}k+=2;const w2=token.charCodeAt(k)<<8|token.charCodeAt(k+1);str.push(((w1&1023)<<10)+(w2&1023)+65536)}map[charCode]=String.fromCodePoint(...str)}));return new ToUnicodeMap(map)}catch(reason){if(reason instanceof AbortException){return null}if(this.options.ignoreErrors){warn(`readToUnicode - ignoring ToUnicode data: \"${reason}\".`);return null}throw reason}}return null}readCidToGidMap(glyphsData,toUnicode){const result=[];for(let j=0,jj=glyphsData.length;j<jj;j++){const glyphID=glyphsData[j++]<<8|glyphsData[j];const code=j>>1;if(glyphID===0&&!toUnicode.has(code)){continue}result[code]=glyphID}return result}extractWidths(dict,descriptor,properties){const xref=this.xref;let glyphsWidths=[];let defaultWidth=0;const glyphsVMetrics=[];let defaultVMetrics;if(properties.composite){const dw=dict.get(\"DW\");defaultWidth=typeof dw===\"number\"?Math.ceil(dw):1e3;const widths=dict.get(\"W\");if(Array.isArray(widths)){for(let i=0,ii=widths.length;i<ii;i++){let start=xref.fetchIfRef(widths[i++]);if(!Number.isInteger(start)){break}const code=xref.fetchIfRef(widths[i]);if(Array.isArray(code)){for(const c of code){const width=xref.fetchIfRef(c);if(typeof width===\"number\"){glyphsWidths[start]=width}start++}}else if(Number.isInteger(code)){const width=xref.fetchIfRef(widths[++i]);if(typeof width!==\"number\"){continue}for(let j=start;j<=code;j++){glyphsWidths[j]=width}}else{break}}}if(properties.vertical){const dw2=dict.getArray(\"DW2\");let vmetrics=isNumberArray(dw2,2)?dw2:[880,-1e3];defaultVMetrics=[vmetrics[1],defaultWidth*.5,vmetrics[0]];vmetrics=dict.get(\"W2\");if(Array.isArray(vmetrics)){for(let i=0,ii=vmetrics.length;i<ii;i++){let start=xref.fetchIfRef(vmetrics[i++]);if(!Number.isInteger(start)){break}const code=xref.fetchIfRef(vmetrics[i]);if(Array.isArray(code)){for(let j=0,jj=code.length;j<jj;j++){const vmetric=[xref.fetchIfRef(code[j++]),xref.fetchIfRef(code[j++]),xref.fetchIfRef(code[j])];if(isNumberArray(vmetric,null)){glyphsVMetrics[start]=vmetric}start++}}else if(Number.isInteger(code)){const vmetric=[xref.fetchIfRef(vmetrics[++i]),xref.fetchIfRef(vmetrics[++i]),xref.fetchIfRef(vmetrics[++i])];if(!isNumberArray(vmetric,null)){continue}for(let j=start;j<=code;j++){glyphsVMetrics[j]=vmetric}}else{break}}}}}else{const widths=dict.get(\"Widths\");if(Array.isArray(widths)){let j=properties.firstChar;for(const w of widths){const width=xref.fetchIfRef(w);if(typeof width===\"number\"){glyphsWidths[j]=width}j++}const missingWidth=descriptor.get(\"MissingWidth\");defaultWidth=typeof missingWidth===\"number\"?missingWidth:0}else{const baseFontName=dict.get(\"BaseFont\");if(baseFontName instanceof Name){const metrics=this.getBaseFontMetrics(baseFontName.name);glyphsWidths=this.buildCharCodeToWidth(metrics.widths,properties);defaultWidth=metrics.defaultWidth}}}let isMonospace=true;let firstWidth=defaultWidth;for(const glyph in glyphsWidths){const glyphWidth=glyphsWidths[glyph];if(!glyphWidth){continue}if(!firstWidth){firstWidth=glyphWidth;continue}if(firstWidth!==glyphWidth){isMonospace=false;break}}if(isMonospace){properties.flags|=FontFlags.FixedPitch}else{properties.flags&=~FontFlags.FixedPitch}properties.defaultWidth=defaultWidth;properties.widths=glyphsWidths;properties.defaultVMetrics=defaultVMetrics;properties.vmetrics=glyphsVMetrics}isSerifFont(baseFontName){const fontNameWoStyle=baseFontName.split(\"-\",1)[0];return fontNameWoStyle in getSerifFonts()||/serif/gi.test(fontNameWoStyle)}getBaseFontMetrics(name){let defaultWidth=0;let widths=Object.create(null);let monospace=false;const stdFontMap=getStdFontMap();let lookupName=stdFontMap[name]||name;const Metrics=getMetrics();if(!(lookupName in Metrics)){lookupName=this.isSerifFont(name)?\"Times-Roman\":\"Helvetica\"}const glyphWidths=Metrics[lookupName];if(typeof glyphWidths===\"number\"){defaultWidth=glyphWidths;monospace=true}else{widths=glyphWidths()}return{defaultWidth:defaultWidth,monospace:monospace,widths:widths}}buildCharCodeToWidth(widthsByGlyphName,properties){const widths=Object.create(null);const differences=properties.differences;const encoding=properties.defaultEncoding;for(let charCode=0;charCode<256;charCode++){if(charCode in differences&&widthsByGlyphName[differences[charCode]]){widths[charCode]=widthsByGlyphName[differences[charCode]];continue}if(charCode in encoding&&widthsByGlyphName[encoding[charCode]]){widths[charCode]=widthsByGlyphName[encoding[charCode]];continue}}return widths}preEvaluateFont(dict){const baseDict=dict;let type=dict.get(\"Subtype\");if(!(type instanceof Name)){throw new FormatError(\"invalid font Subtype\")}let composite=false;let hash;if(type.name===\"Type0\"){const df=dict.get(\"DescendantFonts\");if(!df){throw new FormatError(\"Descendant fonts are not specified\")}dict=Array.isArray(df)?this.xref.fetchIfRef(df[0]):df;if(!(dict instanceof Dict)){throw new FormatError(\"Descendant font is not a dictionary.\")}type=dict.get(\"Subtype\");if(!(type instanceof Name)){throw new FormatError(\"invalid font Subtype\")}composite=true}let firstChar=dict.get(\"FirstChar\");if(!Number.isInteger(firstChar)){firstChar=0}let lastChar=dict.get(\"LastChar\");if(!Number.isInteger(lastChar)){lastChar=composite?65535:255}const descriptor=dict.get(\"FontDescriptor\");const toUnicode=dict.get(\"ToUnicode\")||baseDict.get(\"ToUnicode\");if(descriptor){hash=new MurmurHash3_64;const encoding=baseDict.getRaw(\"Encoding\");if(encoding instanceof Name){hash.update(encoding.name)}else if(encoding instanceof Ref){hash.update(encoding.toString())}else if(encoding instanceof Dict){for(const entry of encoding.getRawValues()){if(entry instanceof Name){hash.update(entry.name)}else if(entry instanceof Ref){hash.update(entry.toString())}else if(Array.isArray(entry)){const diffLength=entry.length,diffBuf=new Array(diffLength);for(let j=0;j<diffLength;j++){const diffEntry=entry[j];if(diffEntry instanceof Name){diffBuf[j]=diffEntry.name}else if(typeof diffEntry===\"number\"||diffEntry instanceof Ref){diffBuf[j]=diffEntry.toString()}}hash.update(diffBuf.join())}}}hash.update(`${firstChar}-${lastChar}`);if(toUnicode instanceof BaseStream){const stream=toUnicode.str||toUnicode;const uint8array=stream.buffer?new Uint8Array(stream.buffer.buffer,0,stream.bufferLength):new Uint8Array(stream.bytes.buffer,stream.start,stream.end-stream.start);hash.update(uint8array)}else if(toUnicode instanceof Name){hash.update(toUnicode.name)}const widths=dict.get(\"Widths\")||baseDict.get(\"Widths\");if(Array.isArray(widths)){const widthsBuf=[];for(const entry of widths){if(typeof entry===\"number\"||entry instanceof Ref){widthsBuf.push(entry.toString())}}hash.update(widthsBuf.join())}if(composite){hash.update(\"compositeFont\");const compositeWidths=dict.get(\"W\")||baseDict.get(\"W\");if(Array.isArray(compositeWidths)){const widthsBuf=[];for(const entry of compositeWidths){if(typeof entry===\"number\"||entry instanceof Ref){widthsBuf.push(entry.toString())}else if(Array.isArray(entry)){const subWidthsBuf=[];for(const element of entry){if(typeof element===\"number\"||element instanceof Ref){subWidthsBuf.push(element.toString())}}widthsBuf.push(`[${subWidthsBuf.join()}]`)}}hash.update(widthsBuf.join())}const cidToGidMap=dict.getRaw(\"CIDToGIDMap\")||baseDict.getRaw(\"CIDToGIDMap\");if(cidToGidMap instanceof Name){hash.update(cidToGidMap.name)}else if(cidToGidMap instanceof Ref){hash.update(cidToGidMap.toString())}else if(cidToGidMap instanceof BaseStream){hash.update(cidToGidMap.peekBytes())}}}return{descriptor:descriptor,dict:dict,baseDict:baseDict,composite:composite,type:type.name,firstChar:firstChar,lastChar:lastChar,toUnicode:toUnicode,hash:hash?hash.hexdigest():\"\"}}async translateFont({descriptor:descriptor,dict:dict,baseDict:baseDict,composite:composite,type:type,firstChar:firstChar,lastChar:lastChar,toUnicode:toUnicode,cssFontInfo:cssFontInfo}){const isType3Font=type===\"Type3\";if(!descriptor){if(isType3Font){const bbox=lookupNormalRect(dict.getArray(\"FontBBox\"),[0,0,0,0]);descriptor=new Dict(null);descriptor.set(\"FontName\",Name.get(type));descriptor.set(\"FontBBox\",bbox)}else{let baseFontName=dict.get(\"BaseFont\");if(!(baseFontName instanceof Name)){throw new FormatError(\"Base font is not specified\")}baseFontName=baseFontName.name.replaceAll(/[,_]/g,\"-\");const metrics=this.getBaseFontMetrics(baseFontName);const fontNameWoStyle=baseFontName.split(\"-\",1)[0];const flags=(this.isSerifFont(fontNameWoStyle)?FontFlags.Serif:0)|(metrics.monospace?FontFlags.FixedPitch:0)|(getSymbolsFonts()[fontNameWoStyle]?FontFlags.Symbolic:FontFlags.Nonsymbolic);const properties={type:type,name:baseFontName,loadedName:baseDict.loadedName,systemFontInfo:null,widths:metrics.widths,defaultWidth:metrics.defaultWidth,isSimulatedFlags:true,flags:flags,firstChar:firstChar,lastChar:lastChar,toUnicode:toUnicode,xHeight:0,capHeight:0,italicAngle:0,isType3Font:isType3Font};const widths=dict.get(\"Widths\");const standardFontName=getStandardFontName(baseFontName);let file=null;if(standardFontName){file=await this.fetchStandardFontData(standardFontName);properties.isInternalFont=!!file}if(!properties.isInternalFont&&this.options.useSystemFonts){properties.systemFontInfo=getFontSubstitution(this.systemFontCache,this.idFactory,this.options.standardFontDataUrl,baseFontName,standardFontName,type)}const newProperties=await this.extractDataStructures(dict,properties);if(Array.isArray(widths)){const glyphWidths=[];let j=firstChar;for(const w of widths){const width=this.xref.fetchIfRef(w);if(typeof width===\"number\"){glyphWidths[j]=width}j++}newProperties.widths=glyphWidths}else{newProperties.widths=this.buildCharCodeToWidth(metrics.widths,newProperties)}return new Font(baseFontName,file,newProperties,this.options)}}let fontName=descriptor.get(\"FontName\");let baseFont=dict.get(\"BaseFont\");if(typeof fontName===\"string\"){fontName=Name.get(fontName)}if(typeof baseFont===\"string\"){baseFont=Name.get(baseFont)}const fontNameStr=fontName?.name;const baseFontStr=baseFont?.name;if(!isType3Font&&fontNameStr!==baseFontStr){info(`The FontDescriptor's FontName is \"${fontNameStr}\" but `+`should be the same as the Font's BaseFont \"${baseFontStr}\".`);if(fontNameStr&&baseFontStr&&(baseFontStr.startsWith(fontNameStr)||!isKnownFontName(fontNameStr)&&isKnownFontName(baseFontStr))){fontName=null}}fontName||=baseFont;if(!(fontName instanceof Name)){throw new FormatError(\"invalid font name\")}let fontFile,subtype,length1,length2,length3;try{fontFile=descriptor.get(\"FontFile\",\"FontFile2\",\"FontFile3\");if(fontFile){if(!(fontFile instanceof BaseStream)){throw new FormatError(\"FontFile should be a stream\")}else if(fontFile.isEmpty){throw new FormatError(\"FontFile is empty\")}}}catch(ex){if(!this.options.ignoreErrors){throw ex}warn(`translateFont - fetching \"${fontName.name}\" font file: \"${ex}\".`);fontFile=null}let isInternalFont=false;let glyphScaleFactors=null;let systemFontInfo=null;if(fontFile){if(fontFile.dict){const subtypeEntry=fontFile.dict.get(\"Subtype\");if(subtypeEntry instanceof Name){subtype=subtypeEntry.name}length1=fontFile.dict.get(\"Length1\");length2=fontFile.dict.get(\"Length2\");length3=fontFile.dict.get(\"Length3\")}}else if(cssFontInfo){const standardFontName=getXfaFontName(fontName.name);if(standardFontName){cssFontInfo.fontFamily=`${cssFontInfo.fontFamily}-PdfJS-XFA`;cssFontInfo.metrics=standardFontName.metrics||null;glyphScaleFactors=standardFontName.factors||null;fontFile=await this.fetchStandardFontData(standardFontName.name);isInternalFont=!!fontFile;baseDict=dict=getXfaFontDict(fontName.name);composite=true}}else if(!isType3Font){const standardFontName=getStandardFontName(fontName.name);if(standardFontName){fontFile=await this.fetchStandardFontData(standardFontName);isInternalFont=!!fontFile}if(!isInternalFont&&this.options.useSystemFonts){systemFontInfo=getFontSubstitution(this.systemFontCache,this.idFactory,this.options.standardFontDataUrl,fontName.name,standardFontName,type)}}const fontMatrix=lookupMatrix(dict.getArray(\"FontMatrix\"),FONT_IDENTITY_MATRIX);const bbox=lookupNormalRect(descriptor.getArray(\"FontBBox\")||dict.getArray(\"FontBBox\"),undefined);let ascent=descriptor.get(\"Ascent\");if(typeof ascent!==\"number\"){ascent=undefined}let descent=descriptor.get(\"Descent\");if(typeof descent!==\"number\"){descent=undefined}let xHeight=descriptor.get(\"XHeight\");if(typeof xHeight!==\"number\"){xHeight=0}let capHeight=descriptor.get(\"CapHeight\");if(typeof capHeight!==\"number\"){capHeight=0}let flags=descriptor.get(\"Flags\");if(!Number.isInteger(flags)){flags=0}let italicAngle=descriptor.get(\"ItalicAngle\");if(typeof italicAngle!==\"number\"){italicAngle=0}const properties={type:type,name:fontName.name,subtype:subtype,file:fontFile,length1:length1,length2:length2,length3:length3,isInternalFont:isInternalFont,loadedName:baseDict.loadedName,composite:composite,fixedPitch:false,fontMatrix:fontMatrix,firstChar:firstChar,lastChar:lastChar,toUnicode:toUnicode,bbox:bbox,ascent:ascent,descent:descent,xHeight:xHeight,capHeight:capHeight,flags:flags,italicAngle:italicAngle,isType3Font:isType3Font,cssFontInfo:cssFontInfo,scaleFactors:glyphScaleFactors,systemFontInfo:systemFontInfo};if(composite){const cidEncoding=baseDict.get(\"Encoding\");if(cidEncoding instanceof Name){properties.cidEncoding=cidEncoding.name}const cMap=await CMapFactory.create({encoding:cidEncoding,fetchBuiltInCMap:this._fetchBuiltInCMapBound,useCMap:null});properties.cMap=cMap;properties.vertical=properties.cMap.vertical}const newProperties=await this.extractDataStructures(dict,properties);this.extractWidths(dict,descriptor,newProperties);return new Font(fontName.name,fontFile,newProperties,this.options)}static buildFontPaths(font,glyphs,handler,evaluatorOptions){function buildPath(fontChar){const glyphName=`${font.loadedName}_path_${fontChar}`;try{if(font.renderer.hasBuiltPath(fontChar)){return}handler.send(\"commonobj\",[glyphName,\"FontPath\",font.renderer.getPathJs(fontChar)])}catch(reason){if(evaluatorOptions.ignoreErrors){warn(`buildFontPaths - ignoring ${glyphName} glyph: \"${reason}\".`);return}throw reason}}for(const glyph of glyphs){buildPath(glyph.fontChar);const accent=glyph.accent;if(accent?.fontChar){buildPath(accent.fontChar)}}}static get fallbackFontDict(){const dict=new Dict;dict.set(\"BaseFont\",Name.get(\"Helvetica\"));dict.set(\"Type\",Name.get(\"FallbackType\"));dict.set(\"Subtype\",Name.get(\"FallbackType\"));dict.set(\"Encoding\",Name.get(\"WinAnsiEncoding\"));return shadow(this,\"fallbackFontDict\",dict)}}class TranslatedFont{#sent=false;#type3Loaded=null;constructor({loadedName:loadedName,font:font,dict:dict}){this.loadedName=loadedName;this.font=font;this.dict=dict;this.type3Dependencies=font.isType3Font?new Set:null}send(handler){if(this.#sent){return}this.#sent=true;handler.send(\"commonobj\",[this.loadedName,\"Font\",this.font.exportData()])}fallback(handler,evaluatorOptions){if(!this.font.data){return}this.font.disableFontFace=true;PartialEvaluator.buildFontPaths(this.font,this.font.glyphCacheValues,handler,evaluatorOptions)}loadType3Data(evaluator,resources,task){if(this.#type3Loaded){return this.#type3Loaded}const{font:font,type3Dependencies:type3Dependencies}=this;assert(font.isType3Font,\"Must be a Type3 font.\");const type3Evaluator=evaluator.clone({ignoreErrors:false});const type3FontRefs=new RefSet(evaluator.type3FontRefs);if(this.dict.objId&&!type3FontRefs.has(this.dict.objId)){type3FontRefs.put(this.dict.objId)}type3Evaluator.type3FontRefs=type3FontRefs;let loadCharProcsPromise=Promise.resolve();const charProcs=this.dict.get(\"CharProcs\");const fontResources=this.dict.get(\"Resources\")||resources;const charProcOperatorList=Object.create(null);const fontBBox=Util.normalizeRect(font.bbox||[0,0,0,0]),width=fontBBox[2]-fontBBox[0],height=fontBBox[3]-fontBBox[1];const fontBBoxSize=Math.hypot(width,height);for(const key of charProcs.getKeys()){loadCharProcsPromise=loadCharProcsPromise.then((()=>{const glyphStream=charProcs.get(key);const operatorList=new OperatorList;return type3Evaluator.getOperatorList({stream:glyphStream,task:task,resources:fontResources,operatorList:operatorList}).then((()=>{switch(operatorList.fnArray[0]){case OPS.setCharWidthAndBounds:this.#removeType3ColorOperators(operatorList,fontBBoxSize);break;case OPS.setCharWidth:if(!fontBBoxSize){this.#guessType3FontBBox(operatorList)}break}charProcOperatorList[key]=operatorList.getIR();for(const dependency of operatorList.dependencies){type3Dependencies.add(dependency)}})).catch((function(reason){warn(`Type3 font resource \"${key}\" is not available.`);const dummyOperatorList=new OperatorList;charProcOperatorList[key]=dummyOperatorList.getIR()}))}))}this.#type3Loaded=loadCharProcsPromise.then((()=>{font.charProcOperatorList=charProcOperatorList;if(this._bbox){font.isCharBBox=true;font.bbox=this._bbox}}));return this.#type3Loaded}#removeType3ColorOperators(operatorList,fontBBoxSize=NaN){const charBBox=Util.normalizeRect(operatorList.argsArray[0].slice(2)),width=charBBox[2]-charBBox[0],height=charBBox[3]-charBBox[1];const charBBoxSize=Math.hypot(width,height);if(width===0||height===0){operatorList.fnArray.splice(0,1);operatorList.argsArray.splice(0,1)}else if(fontBBoxSize===0||Math.round(charBBoxSize/fontBBoxSize)>=10){this._bbox??=[Infinity,Infinity,-Infinity,-Infinity];Util.rectBoundingBox(...charBBox,this._bbox)}let i=0,ii=operatorList.length;while(i<ii){switch(operatorList.fnArray[i]){case OPS.setCharWidthAndBounds:break;case OPS.setStrokeColorSpace:case OPS.setFillColorSpace:case OPS.setStrokeColor:case OPS.setStrokeColorN:case OPS.setFillColor:case OPS.setFillColorN:case OPS.setStrokeGray:case OPS.setFillGray:case OPS.setStrokeRGBColor:case OPS.setFillRGBColor:case OPS.setStrokeCMYKColor:case OPS.setFillCMYKColor:case OPS.shadingFill:case OPS.setRenderingIntent:operatorList.fnArray.splice(i,1);operatorList.argsArray.splice(i,1);ii--;continue;case OPS.setGState:const[gStateObj]=operatorList.argsArray[i];let j=0,jj=gStateObj.length;while(j<jj){const[gStateKey]=gStateObj[j];switch(gStateKey){case\"TR\":case\"TR2\":case\"HT\":case\"BG\":case\"BG2\":case\"UCR\":case\"UCR2\":gStateObj.splice(j,1);jj--;continue}j++}break}i++}}#guessType3FontBBox(operatorList){let i=1;const ii=operatorList.length;while(i<ii){switch(operatorList.fnArray[i]){case OPS.constructPath:const minMax=operatorList.argsArray[i][2];this._bbox??=[Infinity,Infinity,-Infinity,-Infinity];Util.rectBoundingBox(...minMax,this._bbox);break}i++}}}class StateManager{constructor(initialState=new EvalState){this.state=initialState;this.stateStack=[]}save(){const old=this.state;this.stateStack.push(this.state);this.state=old.clone()}restore(){const prev=this.stateStack.pop();if(prev){this.state=prev}}transform(args){this.state.ctm=Util.transform(this.state.ctm,args)}}class TextState{constructor(){this.ctm=new Float32Array(IDENTITY_MATRIX);this.fontName=null;this.fontSize=0;this.loadedName=null;this.font=null;this.fontMatrix=FONT_IDENTITY_MATRIX;this.textMatrix=IDENTITY_MATRIX.slice();this.textLineMatrix=IDENTITY_MATRIX.slice();this.charSpacing=0;this.wordSpacing=0;this.leading=0;this.textHScale=1;this.textRise=0}setTextMatrix(a,b,c,d,e,f){const m=this.textMatrix;m[0]=a;m[1]=b;m[2]=c;m[3]=d;m[4]=e;m[5]=f}setTextLineMatrix(a,b,c,d,e,f){const m=this.textLineMatrix;m[0]=a;m[1]=b;m[2]=c;m[3]=d;m[4]=e;m[5]=f}translateTextMatrix(x,y){const m=this.textMatrix;m[4]=m[0]*x+m[2]*y+m[4];m[5]=m[1]*x+m[3]*y+m[5]}translateTextLineMatrix(x,y){const m=this.textLineMatrix;m[4]=m[0]*x+m[2]*y+m[4];m[5]=m[1]*x+m[3]*y+m[5]}carriageReturn(){this.translateTextLineMatrix(0,-this.leading);this.textMatrix=this.textLineMatrix.slice()}clone(){const clone=Object.create(this);clone.textMatrix=this.textMatrix.slice();clone.textLineMatrix=this.textLineMatrix.slice();clone.fontMatrix=this.fontMatrix.slice();return clone}}class EvalState{constructor(){this.ctm=new Float32Array(IDENTITY_MATRIX);this.font=null;this.textRenderingMode=TextRenderingMode.FILL;this._fillColorSpace=this._strokeColorSpace=ColorSpaceUtils.gray;this.patternFillColorSpace=null;this.patternStrokeColorSpace=null;this.currentPointX=this.currentPointY=0;this.pathMinMax=new Float32Array([Infinity,Infinity,-Infinity,-Infinity]);this.pathBuffer=[]}get fillColorSpace(){return this._fillColorSpace}set fillColorSpace(colorSpace){this._fillColorSpace=this.patternFillColorSpace=colorSpace}get strokeColorSpace(){return this._strokeColorSpace}set strokeColorSpace(colorSpace){this._strokeColorSpace=this.patternStrokeColorSpace=colorSpace}clone({newPath:newPath=false}={}){const clone=Object.create(this);if(newPath){clone.pathBuffer=[];clone.pathMinMax=new Float32Array([Infinity,Infinity,-Infinity,-Infinity])}return clone}}class EvaluatorPreprocessor{static get opMap(){return shadow(this,\"opMap\",Object.assign(Object.create(null),{w:{id:OPS.setLineWidth,numArgs:1,variableArgs:false},J:{id:OPS.setLineCap,numArgs:1,variableArgs:false},j:{id:OPS.setLineJoin,numArgs:1,variableArgs:false},M:{id:OPS.setMiterLimit,numArgs:1,variableArgs:false},d:{id:OPS.setDash,numArgs:2,variableArgs:false},ri:{id:OPS.setRenderingIntent,numArgs:1,variableArgs:false},i:{id:OPS.setFlatness,numArgs:1,variableArgs:false},gs:{id:OPS.setGState,numArgs:1,variableArgs:false},q:{id:OPS.save,numArgs:0,variableArgs:false},Q:{id:OPS.restore,numArgs:0,variableArgs:false},cm:{id:OPS.transform,numArgs:6,variableArgs:false},m:{id:OPS.moveTo,numArgs:2,variableArgs:false},l:{id:OPS.lineTo,numArgs:2,variableArgs:false},c:{id:OPS.curveTo,numArgs:6,variableArgs:false},v:{id:OPS.curveTo2,numArgs:4,variableArgs:false},y:{id:OPS.curveTo3,numArgs:4,variableArgs:false},h:{id:OPS.closePath,numArgs:0,variableArgs:false},re:{id:OPS.rectangle,numArgs:4,variableArgs:false},S:{id:OPS.stroke,numArgs:0,variableArgs:false},s:{id:OPS.closeStroke,numArgs:0,variableArgs:false},f:{id:OPS.fill,numArgs:0,variableArgs:false},F:{id:OPS.fill,numArgs:0,variableArgs:false},\"f*\":{id:OPS.eoFill,numArgs:0,variableArgs:false},B:{id:OPS.fillStroke,numArgs:0,variableArgs:false},\"B*\":{id:OPS.eoFillStroke,numArgs:0,variableArgs:false},b:{id:OPS.closeFillStroke,numArgs:0,variableArgs:false},\"b*\":{id:OPS.closeEOFillStroke,numArgs:0,variableArgs:false},n:{id:OPS.endPath,numArgs:0,variableArgs:false},W:{id:OPS.clip,numArgs:0,variableArgs:false},\"W*\":{id:OPS.eoClip,numArgs:0,variableArgs:false},BT:{id:OPS.beginText,numArgs:0,variableArgs:false},ET:{id:OPS.endText,numArgs:0,variableArgs:false},Tc:{id:OPS.setCharSpacing,numArgs:1,variableArgs:false},Tw:{id:OPS.setWordSpacing,numArgs:1,variableArgs:false},Tz:{id:OPS.setHScale,numArgs:1,variableArgs:false},TL:{id:OPS.setLeading,numArgs:1,variableArgs:false},Tf:{id:OPS.setFont,numArgs:2,variableArgs:false},Tr:{id:OPS.setTextRenderingMode,numArgs:1,variableArgs:false},Ts:{id:OPS.setTextRise,numArgs:1,variableArgs:false},Td:{id:OPS.moveText,numArgs:2,variableArgs:false},TD:{id:OPS.setLeadingMoveText,numArgs:2,variableArgs:false},Tm:{id:OPS.setTextMatrix,numArgs:6,variableArgs:false},\"T*\":{id:OPS.nextLine,numArgs:0,variableArgs:false},Tj:{id:OPS.showText,numArgs:1,variableArgs:false},TJ:{id:OPS.showSpacedText,numArgs:1,variableArgs:false},\"'\":{id:OPS.nextLineShowText,numArgs:1,variableArgs:false},'\"':{id:OPS.nextLineSetSpacingShowText,numArgs:3,variableArgs:false},d0:{id:OPS.setCharWidth,numArgs:2,variableArgs:false},d1:{id:OPS.setCharWidthAndBounds,numArgs:6,variableArgs:false},CS:{id:OPS.setStrokeColorSpace,numArgs:1,variableArgs:false},cs:{id:OPS.setFillColorSpace,numArgs:1,variableArgs:false},SC:{id:OPS.setStrokeColor,numArgs:4,variableArgs:true},SCN:{id:OPS.setStrokeColorN,numArgs:33,variableArgs:true},sc:{id:OPS.setFillColor,numArgs:4,variableArgs:true},scn:{id:OPS.setFillColorN,numArgs:33,variableArgs:true},G:{id:OPS.setStrokeGray,numArgs:1,variableArgs:false},g:{id:OPS.setFillGray,numArgs:1,variableArgs:false},RG:{id:OPS.setStrokeRGBColor,numArgs:3,variableArgs:false},rg:{id:OPS.setFillRGBColor,numArgs:3,variableArgs:false},K:{id:OPS.setStrokeCMYKColor,numArgs:4,variableArgs:false},k:{id:OPS.setFillCMYKColor,numArgs:4,variableArgs:false},sh:{id:OPS.shadingFill,numArgs:1,variableArgs:false},BI:{id:OPS.beginInlineImage,numArgs:0,variableArgs:false},ID:{id:OPS.beginImageData,numArgs:0,variableArgs:false},EI:{id:OPS.endInlineImage,numArgs:1,variableArgs:false},Do:{id:OPS.paintXObject,numArgs:1,variableArgs:false},MP:{id:OPS.markPoint,numArgs:1,variableArgs:false},DP:{id:OPS.markPointProps,numArgs:2,variableArgs:false},BMC:{id:OPS.beginMarkedContent,numArgs:1,variableArgs:false},BDC:{id:OPS.beginMarkedContentProps,numArgs:2,variableArgs:false},EMC:{id:OPS.endMarkedContent,numArgs:0,variableArgs:false},BX:{id:OPS.beginCompat,numArgs:0,variableArgs:false},EX:{id:OPS.endCompat,numArgs:0,variableArgs:false},BM:null,BD:null,true:null,fa:null,fal:null,fals:null,false:null,nu:null,nul:null,null:null}))}static MAX_INVALID_PATH_OPS=10;constructor(stream,xref,stateManager=new StateManager){this.parser=new Parser({lexer:new Lexer(stream,EvaluatorPreprocessor.opMap),xref:xref});this.stateManager=stateManager;this.nonProcessedArgs=[];this._isPathOp=false;this._numInvalidPathOPS=0}get savedStatesDepth(){return this.stateManager.stateStack.length}read(operation){let args=operation.args;while(true){const obj=this.parser.getObj();if(obj instanceof Cmd){const cmd=obj.cmd;const opSpec=EvaluatorPreprocessor.opMap[cmd];if(!opSpec){warn(`Unknown command \"${cmd}\".`);continue}const fn=opSpec.id;const numArgs=opSpec.numArgs;let argsLength=args!==null?args.length:0;if(!this._isPathOp){this._numInvalidPathOPS=0}this._isPathOp=fn>=OPS.moveTo&&fn<=OPS.endPath;if(!opSpec.variableArgs){if(argsLength!==numArgs){const nonProcessedArgs=this.nonProcessedArgs;while(argsLength>numArgs){nonProcessedArgs.push(args.shift());argsLength--}while(argsLength<numArgs&&nonProcessedArgs.length!==0){if(args===null){args=[]}args.unshift(nonProcessedArgs.pop());argsLength++}}if(argsLength<numArgs){const partialMsg=`command ${cmd}: expected ${numArgs} args, `+`but received ${argsLength} args.`;if(this._isPathOp&&++this._numInvalidPathOPS>EvaluatorPreprocessor.MAX_INVALID_PATH_OPS){throw new FormatError(`Invalid ${partialMsg}`)}warn(`Skipping ${partialMsg}`);if(args!==null){args.length=0}continue}}else if(argsLength>numArgs){info(`Command ${cmd}: expected [0, ${numArgs}] args, `+`but received ${argsLength} args.`)}this.preprocessCommand(fn,args);operation.fn=fn;operation.args=args;return true}if(obj===EOF){return false}if(obj!==null){if(args===null){args=[]}args.push(obj);if(args.length>33){throw new FormatError(\"Too many arguments\")}}}}preprocessCommand(fn,args){switch(fn|0){case OPS.save:this.stateManager.save();break;case OPS.restore:this.stateManager.restore();break;case OPS.transform:this.stateManager.transform(args);break}}}class DefaultAppearanceEvaluator extends EvaluatorPreprocessor{constructor(str){super(new StringStream(str))}parse(){const operation={fn:0,args:[]};const result={fontSize:0,fontName:\"\",fontColor:new Uint8ClampedArray(3)};try{while(true){operation.args.length=0;if(!this.read(operation)){break}if(this.savedStatesDepth!==0){continue}const{fn:fn,args:args}=operation;switch(fn|0){case OPS.setFont:const[fontName,fontSize]=args;if(fontName instanceof Name){result.fontName=fontName.name}if(typeof fontSize===\"number\"&&fontSize>0){result.fontSize=fontSize}break;case OPS.setFillRGBColor:ColorSpaceUtils.rgb.getRgbItem(args,0,result.fontColor,0);break;case OPS.setFillGray:ColorSpaceUtils.gray.getRgbItem(args,0,result.fontColor,0);break;case OPS.setFillCMYKColor:ColorSpaceUtils.cmyk.getRgbItem(args,0,result.fontColor,0);break}}}catch(reason){warn(`parseDefaultAppearance - ignoring errors: \"${reason}\".`)}return result}}function parseDefaultAppearance(str){return new DefaultAppearanceEvaluator(str).parse()}class AppearanceStreamEvaluator extends EvaluatorPreprocessor{constructor(stream,evaluatorOptions,xref,globalColorSpaceCache){super(stream);this.stream=stream;this.evaluatorOptions=evaluatorOptions;this.xref=xref;this.globalColorSpaceCache=globalColorSpaceCache;this.resources=stream.dict?.get(\"Resources\")}parse(){const operation={fn:0,args:[]};let result={scaleFactor:1,fontSize:0,fontName:\"\",fontColor:new Uint8ClampedArray(3),fillColorSpace:ColorSpaceUtils.gray};let breakLoop=false;const stack=[];try{while(true){operation.args.length=0;if(breakLoop||!this.read(operation)){break}const{fn:fn,args:args}=operation;switch(fn|0){case OPS.save:stack.push({scaleFactor:result.scaleFactor,fontSize:result.fontSize,fontName:result.fontName,fontColor:result.fontColor.slice(),fillColorSpace:result.fillColorSpace});break;case OPS.restore:result=stack.pop()||result;break;case OPS.setTextMatrix:result.scaleFactor*=Math.hypot(args[0],args[1]);break;case OPS.setFont:const[fontName,fontSize]=args;if(fontName instanceof Name){result.fontName=fontName.name}if(typeof fontSize===\"number\"&&fontSize>0){result.fontSize=fontSize*result.scaleFactor}break;case OPS.setFillColorSpace:result.fillColorSpace=ColorSpaceUtils.parse({cs:args[0],xref:this.xref,resources:this.resources,pdfFunctionFactory:this._pdfFunctionFactory,globalColorSpaceCache:this.globalColorSpaceCache,localColorSpaceCache:this._localColorSpaceCache});break;case OPS.setFillColor:const cs=result.fillColorSpace;cs.getRgbItem(args,0,result.fontColor,0);break;case OPS.setFillRGBColor:ColorSpaceUtils.rgb.getRgbItem(args,0,result.fontColor,0);break;case OPS.setFillGray:ColorSpaceUtils.gray.getRgbItem(args,0,result.fontColor,0);break;case OPS.setFillCMYKColor:ColorSpaceUtils.cmyk.getRgbItem(args,0,result.fontColor,0);break;case OPS.showText:case OPS.showSpacedText:case OPS.nextLineShowText:case OPS.nextLineSetSpacingShowText:breakLoop=true;break}}}catch(reason){warn(`parseAppearanceStream - ignoring errors: \"${reason}\".`)}this.stream.reset();delete result.scaleFactor;delete result.fillColorSpace;return result}get _localColorSpaceCache(){return shadow(this,\"_localColorSpaceCache\",new LocalColorSpaceCache)}get _pdfFunctionFactory(){const pdfFunctionFactory=new PDFFunctionFactory({xref:this.xref,isEvalSupported:this.evaluatorOptions.isEvalSupported});return shadow(this,\"_pdfFunctionFactory\",pdfFunctionFactory)}}function parseAppearanceStream(stream,evaluatorOptions,xref,globalColorSpaceCache){return new AppearanceStreamEvaluator(stream,evaluatorOptions,xref,globalColorSpaceCache).parse()}function getPdfColor(color,isFill){if(color[0]===color[1]&&color[1]===color[2]){const gray=color[0]/255;return`${numberToString(gray)} ${isFill?\"g\":\"G\"}`}return Array.from(color,(c=>numberToString(c/255))).join(\" \")+` ${isFill?\"rg\":\"RG\"}`}function createDefaultAppearance({fontSize:fontSize,fontName:fontName,fontColor:fontColor}){return`/${escapePDFName(fontName)} ${fontSize} Tf ${getPdfColor(fontColor,true)}`}class FakeUnicodeFont{constructor(xref,fontFamily){this.xref=xref;this.widths=null;this.firstChar=Infinity;this.lastChar=-Infinity;this.fontFamily=fontFamily;const canvas=new OffscreenCanvas(1,1);this.ctxMeasure=canvas.getContext(\"2d\",{willReadFrequently:true});if(!FakeUnicodeFont._fontNameId){FakeUnicodeFont._fontNameId=1}this.fontName=Name.get(`InvalidPDFjsFont_${fontFamily}_${FakeUnicodeFont._fontNameId++}`)}get fontDescriptorRef(){if(!FakeUnicodeFont._fontDescriptorRef){const fontDescriptor=new Dict(this.xref);fontDescriptor.set(\"Type\",Name.get(\"FontDescriptor\"));fontDescriptor.set(\"FontName\",this.fontName);fontDescriptor.set(\"FontFamily\",\"MyriadPro Regular\");fontDescriptor.set(\"FontBBox\",[0,0,0,0]);fontDescriptor.set(\"FontStretch\",Name.get(\"Normal\"));fontDescriptor.set(\"FontWeight\",400);fontDescriptor.set(\"ItalicAngle\",0);FakeUnicodeFont._fontDescriptorRef=this.xref.getNewPersistentRef(fontDescriptor)}return FakeUnicodeFont._fontDescriptorRef}get descendantFontRef(){const descendantFont=new Dict(this.xref);descendantFont.set(\"BaseFont\",this.fontName);descendantFont.set(\"Type\",Name.get(\"Font\"));descendantFont.set(\"Subtype\",Name.get(\"CIDFontType0\"));descendantFont.set(\"CIDToGIDMap\",Name.get(\"Identity\"));descendantFont.set(\"FirstChar\",this.firstChar);descendantFont.set(\"LastChar\",this.lastChar);descendantFont.set(\"FontDescriptor\",this.fontDescriptorRef);descendantFont.set(\"DW\",1e3);const widths=[];const chars=[...this.widths.entries()].sort();let currentChar=null;let currentWidths=null;for(const[char,width]of chars){if(!currentChar){currentChar=char;currentWidths=[width];continue}if(char===currentChar+currentWidths.length){currentWidths.push(width)}else{widths.push(currentChar,currentWidths);currentChar=char;currentWidths=[width]}}if(currentChar){widths.push(currentChar,currentWidths)}descendantFont.set(\"W\",widths);const cidSystemInfo=new Dict(this.xref);cidSystemInfo.set(\"Ordering\",\"Identity\");cidSystemInfo.set(\"Registry\",\"Adobe\");cidSystemInfo.set(\"Supplement\",0);descendantFont.set(\"CIDSystemInfo\",cidSystemInfo);return this.xref.getNewPersistentRef(descendantFont)}get baseFontRef(){const baseFont=new Dict(this.xref);baseFont.set(\"BaseFont\",this.fontName);baseFont.set(\"Type\",Name.get(\"Font\"));baseFont.set(\"Subtype\",Name.get(\"Type0\"));baseFont.set(\"Encoding\",Name.get(\"Identity-H\"));baseFont.set(\"DescendantFonts\",[this.descendantFontRef]);baseFont.set(\"ToUnicode\",Name.get(\"Identity-H\"));return this.xref.getNewPersistentRef(baseFont)}get resources(){const resources=new Dict(this.xref);const font=new Dict(this.xref);font.set(this.fontName.name,this.baseFontRef);resources.set(\"Font\",font);return resources}_createContext(){this.widths=new Map;this.ctxMeasure.font=`1000px ${this.fontFamily}`;return this.ctxMeasure}createFontResources(text){const ctx=this._createContext();for(const line of text.split(/\\r\\n?|\\n/)){for(const char of line.split(\"\")){const code=char.charCodeAt(0);if(this.widths.has(code)){continue}const metrics=ctx.measureText(char);const width=Math.ceil(metrics.width);this.widths.set(code,width);this.firstChar=Math.min(code,this.firstChar);this.lastChar=Math.max(code,this.lastChar)}}return this.resources}static getFirstPositionInfo(rect,rotation,fontSize){const[x1,y1,x2,y2]=rect;let w=x2-x1;let h=y2-y1;if(rotation%180!==0){[w,h]=[h,w]}const lineHeight=LINE_FACTOR*fontSize;const lineDescent=LINE_DESCENT_FACTOR*fontSize;return{coords:[0,h+lineDescent-lineHeight],bbox:[0,0,w,h],matrix:rotation!==0?getRotationMatrix(rotation,h,lineHeight):undefined}}createAppearance(text,rect,rotation,fontSize,bgColor,strokeAlpha){const ctx=this._createContext();const lines=[];let maxWidth=-Infinity;for(const line of text.split(/\\r\\n?|\\n/)){lines.push(line);const lineWidth=ctx.measureText(line).width;maxWidth=Math.max(maxWidth,lineWidth);for(const code of codePointIter(line)){const char=String.fromCodePoint(code);let width=this.widths.get(code);if(width===undefined){const metrics=ctx.measureText(char);width=Math.ceil(metrics.width);this.widths.set(code,width);this.firstChar=Math.min(code,this.firstChar);this.lastChar=Math.max(code,this.lastChar)}}}maxWidth*=fontSize/1e3;const[x1,y1,x2,y2]=rect;let w=x2-x1;let h=y2-y1;if(rotation%180!==0){[w,h]=[h,w]}let hscale=1;if(maxWidth>w){hscale=w/maxWidth}let vscale=1;const lineHeight=LINE_FACTOR*fontSize;const lineDescent=LINE_DESCENT_FACTOR*fontSize;const maxHeight=lineHeight*lines.length;if(maxHeight>h){vscale=h/maxHeight}const fscale=Math.min(hscale,vscale);const newFontSize=fontSize*fscale;const buffer=[\"q\",`0 0 ${numberToString(w)} ${numberToString(h)} re W n`,`BT`,`1 0 0 1 0 ${numberToString(h+lineDescent)} Tm 0 Tc ${getPdfColor(bgColor,true)}`,`/${this.fontName.name} ${numberToString(newFontSize)} Tf`];const{resources:resources}=this;strokeAlpha=typeof strokeAlpha===\"number\"&&strokeAlpha>=0&&strokeAlpha<=1?strokeAlpha:1;if(strokeAlpha!==1){buffer.push(\"/R0 gs\");const extGState=new Dict(this.xref);const r0=new Dict(this.xref);r0.set(\"ca\",strokeAlpha);r0.set(\"CA\",strokeAlpha);r0.set(\"Type\",Name.get(\"ExtGState\"));extGState.set(\"R0\",r0);resources.set(\"ExtGState\",extGState)}const vShift=numberToString(lineHeight);for(const line of lines){buffer.push(`0 -${vShift} Td <${stringToUTF16HexString(line)}> Tj`)}buffer.push(\"ET\",\"Q\");const appearance=buffer.join(\"\\n\");const appearanceStreamDict=new Dict(this.xref);appearanceStreamDict.set(\"Subtype\",Name.get(\"Form\"));appearanceStreamDict.set(\"Type\",Name.get(\"XObject\"));appearanceStreamDict.set(\"BBox\",[0,0,w,h]);appearanceStreamDict.set(\"Length\",appearance.length);appearanceStreamDict.set(\"Resources\",resources);if(rotation){const matrix=getRotationMatrix(rotation,w,h);appearanceStreamDict.set(\"Matrix\",matrix)}const ap=new StringStream(appearance);ap.dict=appearanceStreamDict;return ap}}class NameOrNumberTree{constructor(root,xref,type){this.root=root;this.xref=xref;this._type=type}getAll(){const map=new Map;if(!this.root){return map}const xref=this.xref;const processed=new RefSet;processed.put(this.root);const queue=[this.root];while(queue.length>0){const obj=xref.fetchIfRef(queue.shift());if(!(obj instanceof Dict)){continue}if(obj.has(\"Kids\")){const kids=obj.get(\"Kids\");if(!Array.isArray(kids)){continue}for(const kid of kids){if(processed.has(kid)){throw new FormatError(`Duplicate entry in \"${this._type}\" tree.`)}queue.push(kid);processed.put(kid)}continue}const entries=obj.get(this._type);if(!Array.isArray(entries)){continue}for(let i=0,ii=entries.length;i<ii;i+=2){map.set(xref.fetchIfRef(entries[i]),xref.fetchIfRef(entries[i+1]))}}return map}getRaw(key){if(!this.root){return null}const xref=this.xref;let kidsOrEntries=xref.fetchIfRef(this.root);let loopCount=0;const MAX_LEVELS=10;while(kidsOrEntries.has(\"Kids\")){if(++loopCount>MAX_LEVELS){warn(`Search depth limit reached for \"${this._type}\" tree.`);return null}const kids=kidsOrEntries.get(\"Kids\");if(!Array.isArray(kids)){return null}let l=0,r=kids.length-1;while(l<=r){const m=l+r>>1;const kid=xref.fetchIfRef(kids[m]);const limits=kid.get(\"Limits\");if(key<xref.fetchIfRef(limits[0])){r=m-1}else if(key>xref.fetchIfRef(limits[1])){l=m+1}else{kidsOrEntries=kid;break}}if(l>r){return null}}const entries=kidsOrEntries.get(this._type);if(Array.isArray(entries)){let l=0,r=entries.length-2;while(l<=r){const tmp=l+r>>1,m=tmp+(tmp&1);const currentKey=xref.fetchIfRef(entries[m]);if(key<currentKey){r=m-2}else if(key>currentKey){l=m+2}else{return entries[m+1]}}}return null}get(key){return this.xref.fetchIfRef(this.getRaw(key))}}class NameTree extends NameOrNumberTree{constructor(root,xref){super(root,xref,\"Names\")}}class NumberTree extends NameOrNumberTree{constructor(root,xref){super(root,xref,\"Nums\")}}function clearGlobalCaches(){clearPatternCaches();clearPrimitiveCaches();clearUnicodeCaches();JpxImage.cleanup()}function pickPlatformItem(dict){if(!(dict instanceof Dict)){return null}if(dict.has(\"UF\")){return dict.get(\"UF\")}else if(dict.has(\"F\")){return dict.get(\"F\")}else if(dict.has(\"Unix\")){return dict.get(\"Unix\")}else if(dict.has(\"Mac\")){return dict.get(\"Mac\")}else if(dict.has(\"DOS\")){return dict.get(\"DOS\")}return null}function stripPath(str){return str.substring(str.lastIndexOf(\"/\")+1)}class FileSpec{#contentAvailable=false;constructor(root,xref,skipContent=false){if(!(root instanceof Dict)){return}this.xref=xref;this.root=root;if(root.has(\"FS\")){this.fs=root.get(\"FS\")}if(root.has(\"RF\")){warn(\"Related file specifications are not supported\")}if(!skipContent){if(root.has(\"EF\")){this.#contentAvailable=true}else{warn(\"Non-embedded file specifications are not supported\")}}}get filename(){let filename=\"\";const item=pickPlatformItem(this.root);if(item&&typeof item===\"string\"){filename=stringToPDFString(item,true).replaceAll(\"\\\\\\\\\",\"\\\\\").replaceAll(\"\\\\/\",\"/\").replaceAll(\"\\\\\",\"/\")}return shadow(this,\"filename\",filename||\"unnamed\")}get content(){if(!this.#contentAvailable){return null}this._contentRef||=pickPlatformItem(this.root?.get(\"EF\"));let content=null;if(this._contentRef){const fileObj=this.xref.fetchIfRef(this._contentRef);if(fileObj instanceof BaseStream){content=fileObj.getBytes()}else{warn(\"Embedded file specification points to non-existing/invalid content\")}}else{warn(\"Embedded file specification does not have any content\")}return content}get description(){let description=\"\";const desc=this.root?.get(\"Desc\");if(desc&&typeof desc===\"string\"){description=stringToPDFString(desc)}return shadow(this,\"description\",description)}get serializable(){return{rawFilename:this.filename,filename:stripPath(this.filename),content:this.content,description:this.description}}}const XMLParserErrorCode={NoError:0,EndOfDocument:-1,UnterminatedCdat:-2,UnterminatedXmlDeclaration:-3,UnterminatedDoctypeDeclaration:-4,UnterminatedComment:-5,MalformedElement:-6,OutOfMemory:-7,UnterminatedAttributeValue:-8,UnterminatedElement:-9,ElementNeverBegun:-10};function isWhitespace(s,index){const ch=s[index];return ch===\" \"||ch===\"\\n\"||ch===\"\\r\"||ch===\"\\t\"}function isWhitespaceString(s){for(let i=0,ii=s.length;i<ii;i++){if(!isWhitespace(s,i)){return false}}return true}class XMLParserBase{_resolveEntities(s){return s.replaceAll(/&([^;]+);/g,((all,entity)=>{if(entity.substring(0,2)===\"#x\"){return String.fromCodePoint(parseInt(entity.substring(2),16))}else if(entity.substring(0,1)===\"#\"){return String.fromCodePoint(parseInt(entity.substring(1),10))}switch(entity){case\"lt\":return\"<\";case\"gt\":return\">\";case\"amp\":return\"&\";case\"quot\":return'\"';case\"apos\":return\"'\"}return this.onResolveEntity(entity)}))}_parseContent(s,start){const attributes=[];let pos=start;function skipWs(){while(pos<s.length&&isWhitespace(s,pos)){++pos}}while(pos<s.length&&!isWhitespace(s,pos)&&s[pos]!==\">\"&&s[pos]!==\"/\"){++pos}const name=s.substring(start,pos);skipWs();while(pos<s.length&&s[pos]!==\">\"&&s[pos]!==\"/\"&&s[pos]!==\"?\"){skipWs();let attrName=\"\",attrValue=\"\";while(pos<s.length&&!isWhitespace(s,pos)&&s[pos]!==\"=\"){attrName+=s[pos];++pos}skipWs();if(s[pos]!==\"=\"){return null}++pos;skipWs();const attrEndChar=s[pos];if(attrEndChar!=='\"'&&attrEndChar!==\"'\"){return null}const attrEndIndex=s.indexOf(attrEndChar,++pos);if(attrEndIndex<0){return null}attrValue=s.substring(pos,attrEndIndex);attributes.push({name:attrName,value:this._resolveEntities(attrValue)});pos=attrEndIndex+1;skipWs()}return{name:name,attributes:attributes,parsed:pos-start}}_parseProcessingInstruction(s,start){let pos=start;function skipWs(){while(pos<s.length&&isWhitespace(s,pos)){++pos}}while(pos<s.length&&!isWhitespace(s,pos)&&s[pos]!==\">\"&&s[pos]!==\"?\"&&s[pos]!==\"/\"){++pos}const name=s.substring(start,pos);skipWs();const attrStart=pos;while(pos<s.length&&(s[pos]!==\"?\"||s[pos+1]!==\">\")){++pos}const value=s.substring(attrStart,pos);return{name:name,value:value,parsed:pos-start}}parseXml(s){let i=0;while(i<s.length){const ch=s[i];let j=i;if(ch===\"<\"){++j;const ch2=s[j];let q;switch(ch2){case\"/\":++j;q=s.indexOf(\">\",j);if(q<0){this.onError(XMLParserErrorCode.UnterminatedElement);return}this.onEndElement(s.substring(j,q));j=q+1;break;case\"?\":++j;const pi=this._parseProcessingInstruction(s,j);if(s.substring(j+pi.parsed,j+pi.parsed+2)!==\"?>\"){this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);return}this.onPi(pi.name,pi.value);j+=pi.parsed+2;break;case\"!\":if(s.substring(j+1,j+3)===\"--\"){q=s.indexOf(\"--\\x3e\",j+3);if(q<0){this.onError(XMLParserErrorCode.UnterminatedComment);return}this.onComment(s.substring(j+3,q));j=q+3}else if(s.substring(j+1,j+8)===\"[CDATA[\"){q=s.indexOf(\"]]>\",j+8);if(q<0){this.onError(XMLParserErrorCode.UnterminatedCdat);return}this.onCdata(s.substring(j+8,q));j=q+3}else if(s.substring(j+1,j+8)===\"DOCTYPE\"){const q2=s.indexOf(\"[\",j+8);let complexDoctype=false;q=s.indexOf(\">\",j+8);if(q<0){this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);return}if(q2>0&&q>q2){q=s.indexOf(\"]>\",j+8);if(q<0){this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);return}complexDoctype=true}const doctypeContent=s.substring(j+8,q+(complexDoctype?1:0));this.onDoctype(doctypeContent);j=q+(complexDoctype?2:1)}else{this.onError(XMLParserErrorCode.MalformedElement);return}break;default:const content=this._parseContent(s,j);if(content===null){this.onError(XMLParserErrorCode.MalformedElement);return}let isClosed=false;if(s.substring(j+content.parsed,j+content.parsed+2)===\"/>\"){isClosed=true}else if(s.substring(j+content.parsed,j+content.parsed+1)!==\">\"){this.onError(XMLParserErrorCode.UnterminatedElement);return}this.onBeginElement(content.name,content.attributes,isClosed);j+=content.parsed+(isClosed?2:1);break}}else{while(j<s.length&&s[j]!==\"<\"){j++}const text=s.substring(i,j);this.onText(this._resolveEntities(text))}i=j}}onResolveEntity(name){return`&${name};`}onPi(name,value){}onComment(text){}onCdata(text){}onDoctype(doctypeContent){}onText(text){}onBeginElement(name,attributes,isEmpty){}onEndElement(name){}onError(code){}}class SimpleDOMNode{constructor(nodeName,nodeValue){this.nodeName=nodeName;this.nodeValue=nodeValue;Object.defineProperty(this,\"parentNode\",{value:null,writable:true})}get firstChild(){return this.childNodes?.[0]}get nextSibling(){const childNodes=this.parentNode.childNodes;if(!childNodes){return undefined}const index=childNodes.indexOf(this);if(index===-1){return undefined}return childNodes[index+1]}get textContent(){if(!this.childNodes){return this.nodeValue||\"\"}return this.childNodes.map((child=>child.textContent)).join(\"\")}get children(){return this.childNodes||[]}hasChildNodes(){return this.childNodes?.length>0}searchNode(paths,pos){if(pos>=paths.length){return this}const component=paths[pos];if(component.name.startsWith(\"#\")&&pos<paths.length-1){return this.searchNode(paths,pos+1)}const stack=[];let node=this;while(true){if(component.name===node.nodeName){if(component.pos===0){const res=node.searchNode(paths,pos+1);if(res!==null){return res}}else if(stack.length===0){return null}else{const[parent]=stack.pop();let siblingPos=0;for(const child of parent.childNodes){if(component.name===child.nodeName){if(siblingPos===component.pos){return child.searchNode(paths,pos+1)}siblingPos++}}return node.searchNode(paths,pos+1)}}if(node.childNodes?.length>0){stack.push([node,0]);node=node.childNodes[0]}else if(stack.length===0){return null}else{while(stack.length!==0){const[parent,currentPos]=stack.pop();const newPos=currentPos+1;if(newPos<parent.childNodes.length){stack.push([parent,newPos]);node=parent.childNodes[newPos];break}}if(stack.length===0){return null}}}}dump(buffer){if(this.nodeName===\"#text\"){buffer.push(encodeToXmlString(this.nodeValue));return}buffer.push(`<${this.nodeName}`);if(this.attributes){for(const attribute of this.attributes){buffer.push(` ${attribute.name}=\"${encodeToXmlString(attribute.value)}\"`)}}if(this.hasChildNodes()){buffer.push(\">\");for(const child of this.childNodes){child.dump(buffer)}buffer.push(`</${this.nodeName}>`)}else if(this.nodeValue){buffer.push(`>${encodeToXmlString(this.nodeValue)}</${this.nodeName}>`)}else{buffer.push(\"/>\")}}}class SimpleXMLParser extends XMLParserBase{constructor({hasAttributes:hasAttributes=false,lowerCaseName:lowerCaseName=false}){super();this._currentFragment=null;this._stack=null;this._errorCode=XMLParserErrorCode.NoError;this._hasAttributes=hasAttributes;this._lowerCaseName=lowerCaseName}parseFromString(data){this._currentFragment=[];this._stack=[];this._errorCode=XMLParserErrorCode.NoError;this.parseXml(data);if(this._errorCode!==XMLParserErrorCode.NoError){return undefined}const[documentElement]=this._currentFragment;if(!documentElement){return undefined}return{documentElement:documentElement}}onText(text){if(isWhitespaceString(text)){return}const node=new SimpleDOMNode(\"#text\",text);this._currentFragment.push(node)}onCdata(text){const node=new SimpleDOMNode(\"#text\",text);this._currentFragment.push(node)}onBeginElement(name,attributes,isEmpty){if(this._lowerCaseName){name=name.toLowerCase()}const node=new SimpleDOMNode(name);node.childNodes=[];if(this._hasAttributes){node.attributes=attributes}this._currentFragment.push(node);if(isEmpty){return}this._stack.push(this._currentFragment);this._currentFragment=node.childNodes}onEndElement(name){this._currentFragment=this._stack.pop()||[];const lastElement=this._currentFragment.at(-1);if(!lastElement){return null}for(const childNode of lastElement.childNodes){childNode.parentNode=lastElement}return lastElement}onError(code){this._errorCode=code}}class MetadataParser{constructor(data){data=this._repair(data);const parser=new SimpleXMLParser({lowerCaseName:true});const xmlDocument=parser.parseFromString(data);this._metadataMap=new Map;this._data=data;if(xmlDocument){this._parse(xmlDocument)}}_repair(data){return data.replace(/^[^<]+/,\"\").replaceAll(/>\\\\376\\\\377([^<]+)/g,(function(all,codes){const bytes=codes.replaceAll(/\\\\([0-3])([0-7])([0-7])/g,(function(code,d1,d2,d3){return String.fromCharCode(d1*64+d2*8+d3*1)})).replaceAll(/&(amp|apos|gt|lt|quot);/g,(function(str,name){switch(name){case\"amp\":return\"&\";case\"apos\":return\"'\";case\"gt\":return\">\";case\"lt\":return\"<\";case\"quot\":return'\"'}throw new Error(`_repair: ${name} isn't defined.`)}));const charBuf=[\">\"];for(let i=0,ii=bytes.length;i<ii;i+=2){const code=bytes.charCodeAt(i)*256+bytes.charCodeAt(i+1);if(code>=32&&code<127&&code!==60&&code!==62&&code!==38){charBuf.push(String.fromCharCode(code))}else{charBuf.push(\"&#x\"+(65536+code).toString(16).substring(1)+\";\")}}return charBuf.join(\"\")}))}_getSequence(entry){const name=entry.nodeName;if(name!==\"rdf:bag\"&&name!==\"rdf:seq\"&&name!==\"rdf:alt\"){return null}return entry.childNodes.filter((node=>node.nodeName===\"rdf:li\"))}_parseArray(entry){if(!entry.hasChildNodes()){return}const[seqNode]=entry.childNodes;const sequence=this._getSequence(seqNode)||[];this._metadataMap.set(entry.nodeName,sequence.map((node=>node.textContent.trim())))}_parse(xmlDocument){let rdf=xmlDocument.documentElement;if(rdf.nodeName!==\"rdf:rdf\"){rdf=rdf.firstChild;while(rdf&&rdf.nodeName!==\"rdf:rdf\"){rdf=rdf.nextSibling}}if(!rdf||rdf.nodeName!==\"rdf:rdf\"||!rdf.hasChildNodes()){return}for(const desc of rdf.childNodes){if(desc.nodeName!==\"rdf:description\"){continue}for(const entry of desc.childNodes){const name=entry.nodeName;switch(name){case\"#text\":continue;case\"dc:creator\":case\"dc:subject\":this._parseArray(entry);continue}this._metadataMap.set(name,entry.textContent.trim())}}}get serializable(){return{parsedData:this._metadataMap,rawData:this._data}}}const MAX_DEPTH=40;const StructElementType={PAGE_CONTENT:1,STREAM_CONTENT:2,OBJECT:3,ANNOTATION:4,ELEMENT:5};class StructTreeRoot{constructor(xref,rootDict,rootRef){this.xref=xref;this.dict=rootDict;this.ref=rootRef instanceof Ref?rootRef:null;this.roleMap=new Map;this.structParentIds=null}init(){this.readRoleMap()}#addIdToPage(pageRef,id,type){if(!(pageRef instanceof Ref)||id<0){return}this.structParentIds||=new RefSetCache;let ids=this.structParentIds.get(pageRef);if(!ids){ids=[];this.structParentIds.put(pageRef,ids)}ids.push([id,type])}addAnnotationIdToPage(pageRef,id){this.#addIdToPage(pageRef,id,StructElementType.ANNOTATION)}readRoleMap(){const roleMapDict=this.dict.get(\"RoleMap\");if(!(roleMapDict instanceof Dict)){return}for(const[key,value]of roleMapDict){if(value instanceof Name){this.roleMap.set(key,value.name)}}}static async canCreateStructureTree({catalogRef:catalogRef,pdfManager:pdfManager,newAnnotationsByPage:newAnnotationsByPage}){if(!(catalogRef instanceof Ref)){warn(\"Cannot save the struct tree: no catalog reference.\");return false}let nextKey=0;let hasNothingToUpdate=true;for(const[pageIndex,elements]of newAnnotationsByPage){const{ref:pageRef}=await pdfManager.getPage(pageIndex);if(!(pageRef instanceof Ref)){warn(`Cannot save the struct tree: page ${pageIndex} has no ref.`);hasNothingToUpdate=true;break}for(const element of elements){if(element.accessibilityData?.type){element.parentTreeId=nextKey++;hasNothingToUpdate=false}}}if(hasNothingToUpdate){for(const elements of newAnnotationsByPage.values()){for(const element of elements){delete element.parentTreeId}}return false}return true}static async createStructureTree({newAnnotationsByPage:newAnnotationsByPage,xref:xref,catalogRef:catalogRef,pdfManager:pdfManager,changes:changes}){const root=await pdfManager.ensureCatalog(\"cloneDict\");const cache=new RefSetCache;cache.put(catalogRef,root);const structTreeRootRef=xref.getNewTemporaryRef();root.set(\"StructTreeRoot\",structTreeRootRef);const structTreeRoot=new Dict(xref);structTreeRoot.set(\"Type\",Name.get(\"StructTreeRoot\"));const parentTreeRef=xref.getNewTemporaryRef();structTreeRoot.set(\"ParentTree\",parentTreeRef);const kids=[];structTreeRoot.set(\"K\",kids);cache.put(structTreeRootRef,structTreeRoot);const parentTree=new Dict(xref);const nums=[];parentTree.set(\"Nums\",nums);const nextKey=await this.#writeKids({newAnnotationsByPage:newAnnotationsByPage,structTreeRootRef:structTreeRootRef,structTreeRoot:null,kids:kids,nums:nums,xref:xref,pdfManager:pdfManager,changes:changes,cache:cache});structTreeRoot.set(\"ParentTreeNextKey\",nextKey);cache.put(parentTreeRef,parentTree);for(const[ref,obj]of cache.items()){changes.put(ref,{data:obj})}}async canUpdateStructTree({pdfManager:pdfManager,newAnnotationsByPage:newAnnotationsByPage}){if(!this.ref){warn(\"Cannot update the struct tree: no root reference.\");return false}let nextKey=this.dict.get(\"ParentTreeNextKey\");if(!Number.isInteger(nextKey)||nextKey<0){warn(\"Cannot update the struct tree: invalid next key.\");return false}const parentTree=this.dict.get(\"ParentTree\");if(!(parentTree instanceof Dict)){warn(\"Cannot update the struct tree: ParentTree isn't a dict.\");return false}const nums=parentTree.get(\"Nums\");if(!Array.isArray(nums)){warn(\"Cannot update the struct tree: nums isn't an array.\");return false}const numberTree=new NumberTree(parentTree,this.xref);for(const pageIndex of newAnnotationsByPage.keys()){const{pageDict:pageDict}=await pdfManager.getPage(pageIndex);if(!pageDict.has(\"StructParents\")){continue}const id=pageDict.get(\"StructParents\");if(!Number.isInteger(id)||!Array.isArray(numberTree.get(id))){warn(`Cannot save the struct tree: page ${pageIndex} has a wrong id.`);return false}}let hasNothingToUpdate=true;for(const[pageIndex,elements]of newAnnotationsByPage){const{pageDict:pageDict}=await pdfManager.getPage(pageIndex);StructTreeRoot.#collectParents({elements:elements,xref:this.xref,pageDict:pageDict,numberTree:numberTree});for(const element of elements){if(element.accessibilityData?.type){if(!(element.accessibilityData.structParent>=0)){element.parentTreeId=nextKey++}hasNothingToUpdate=false}}}if(hasNothingToUpdate){for(const elements of newAnnotationsByPage.values()){for(const element of elements){delete element.parentTreeId;delete element.structTreeParent}}return false}return true}async updateStructureTree({newAnnotationsByPage:newAnnotationsByPage,pdfManager:pdfManager,changes:changes}){const{ref:structTreeRootRef,xref:xref}=this;const structTreeRoot=this.dict.clone();const cache=new RefSetCache;cache.put(structTreeRootRef,structTreeRoot);let parentTreeRef=structTreeRoot.getRaw(\"ParentTree\");let parentTree;if(parentTreeRef instanceof Ref){parentTree=xref.fetch(parentTreeRef)}else{parentTree=parentTreeRef;parentTreeRef=xref.getNewTemporaryRef();structTreeRoot.set(\"ParentTree\",parentTreeRef)}parentTree=parentTree.clone();cache.put(parentTreeRef,parentTree);let nums=parentTree.getRaw(\"Nums\");let numsRef=null;if(nums instanceof Ref){numsRef=nums;nums=xref.fetch(numsRef)}nums=nums.slice();if(!numsRef){parentTree.set(\"Nums\",nums)}const newNextKey=await StructTreeRoot.#writeKids({newAnnotationsByPage:newAnnotationsByPage,structTreeRootRef:structTreeRootRef,structTreeRoot:this,kids:null,nums:nums,xref:xref,pdfManager:pdfManager,changes:changes,cache:cache});if(newNextKey===-1){return}structTreeRoot.set(\"ParentTreeNextKey\",newNextKey);if(numsRef){cache.put(numsRef,nums)}for(const[ref,obj]of cache.items()){changes.put(ref,{data:obj})}}static async#writeKids({newAnnotationsByPage:newAnnotationsByPage,structTreeRootRef:structTreeRootRef,structTreeRoot:structTreeRoot,kids:kids,nums:nums,xref:xref,pdfManager:pdfManager,changes:changes,cache:cache}){const objr=Name.get(\"OBJR\");let nextKey=-1;let structTreePageObjs;for(const[pageIndex,elements]of newAnnotationsByPage){const page=await pdfManager.getPage(pageIndex);const{ref:pageRef}=page;const isPageRef=pageRef instanceof Ref;for(const{accessibilityData:accessibilityData,ref:ref,parentTreeId:parentTreeId,structTreeParent:structTreeParent}of elements){if(!accessibilityData?.type){continue}const{structParent:structParent}=accessibilityData;if(structTreeRoot&&Number.isInteger(structParent)&&structParent>=0){let objs=(structTreePageObjs||=new Map).get(pageIndex);if(objs===undefined){const structTreePage=new StructTreePage(structTreeRoot,page.pageDict);objs=structTreePage.collectObjects(pageRef);structTreePageObjs.set(pageIndex,objs)}const objRef=objs?.get(structParent);if(objRef){const tagDict=xref.fetch(objRef).clone();StructTreeRoot.#writeProperties(tagDict,accessibilityData);changes.put(objRef,{data:tagDict});continue}}nextKey=Math.max(nextKey,parentTreeId);const tagRef=xref.getNewTemporaryRef();const tagDict=new Dict(xref);StructTreeRoot.#writeProperties(tagDict,accessibilityData);await this.#updateParentTag({structTreeParent:structTreeParent,tagDict:tagDict,newTagRef:tagRef,structTreeRootRef:structTreeRootRef,fallbackKids:kids,xref:xref,cache:cache});const objDict=new Dict(xref);tagDict.set(\"K\",objDict);objDict.set(\"Type\",objr);if(isPageRef){objDict.set(\"Pg\",pageRef)}objDict.set(\"Obj\",ref);cache.put(tagRef,tagDict);nums.push(parentTreeId,tagRef)}}return nextKey+1}static#writeProperties(tagDict,{type:type,title:title,lang:lang,alt:alt,expanded:expanded,actualText:actualText}){tagDict.set(\"S\",Name.get(type));if(title){tagDict.set(\"T\",stringToAsciiOrUTF16BE(title))}if(lang){tagDict.set(\"Lang\",stringToAsciiOrUTF16BE(lang))}if(alt){tagDict.set(\"Alt\",stringToAsciiOrUTF16BE(alt))}if(expanded){tagDict.set(\"E\",stringToAsciiOrUTF16BE(expanded))}if(actualText){tagDict.set(\"ActualText\",stringToAsciiOrUTF16BE(actualText))}}static#collectParents({elements:elements,xref:xref,pageDict:pageDict,numberTree:numberTree}){const idToElements=new Map;for(const element of elements){if(element.structTreeParentId){const id=parseInt(element.structTreeParentId.split(\"_mc\")[1],10);let elems=idToElements.get(id);if(!elems){elems=[];idToElements.set(id,elems)}elems.push(element)}}const id=pageDict.get(\"StructParents\");if(!Number.isInteger(id)){return}const parentArray=numberTree.get(id);const updateElement=(kid,pageKid,kidRef)=>{const elems=idToElements.get(kid);if(elems){const parentRef=pageKid.getRaw(\"P\");const parentDict=xref.fetchIfRef(parentRef);if(parentRef instanceof Ref&&parentDict instanceof Dict){const params={ref:kidRef,dict:pageKid};for(const element of elems){element.structTreeParent=params}}return true}return false};for(const kidRef of parentArray){if(!(kidRef instanceof Ref)){continue}const pageKid=xref.fetch(kidRef);const k=pageKid.get(\"K\");if(Number.isInteger(k)){updateElement(k,pageKid,kidRef);continue}if(!Array.isArray(k)){continue}for(let kid of k){kid=xref.fetchIfRef(kid);if(Number.isInteger(kid)&&updateElement(kid,pageKid,kidRef)){break}if(!(kid instanceof Dict)){continue}if(!isName(kid.get(\"Type\"),\"MCR\")){break}const mcid=kid.get(\"MCID\");if(Number.isInteger(mcid)&&updateElement(mcid,pageKid,kidRef)){break}}}}static async#updateParentTag({structTreeParent:structTreeParent,tagDict:tagDict,newTagRef:newTagRef,structTreeRootRef:structTreeRootRef,fallbackKids:fallbackKids,xref:xref,cache:cache}){let ref=null;let parentRef;if(structTreeParent){({ref:ref}=structTreeParent);parentRef=structTreeParent.dict.getRaw(\"P\")||structTreeRootRef}else{parentRef=structTreeRootRef}tagDict.set(\"P\",parentRef);const parentDict=xref.fetchIfRef(parentRef);if(!parentDict){fallbackKids.push(newTagRef);return}let cachedParentDict=cache.get(parentRef);if(!cachedParentDict){cachedParentDict=parentDict.clone();cache.put(parentRef,cachedParentDict)}const parentKidsRaw=cachedParentDict.getRaw(\"K\");let cachedParentKids=parentKidsRaw instanceof Ref?cache.get(parentKidsRaw):null;if(!cachedParentKids){cachedParentKids=xref.fetchIfRef(parentKidsRaw);cachedParentKids=Array.isArray(cachedParentKids)?cachedParentKids.slice():[parentKidsRaw];const parentKidsRef=xref.getNewTemporaryRef();cachedParentDict.set(\"K\",parentKidsRef);cache.put(parentKidsRef,cachedParentKids)}const index=cachedParentKids.indexOf(ref);cachedParentKids.splice(index>=0?index+1:cachedParentKids.length,0,newTagRef)}}class StructElementNode{constructor(tree,dict){this.tree=tree;this.xref=tree.xref;this.dict=dict;this.kids=[];this.parseKids()}get role(){const nameObj=this.dict.get(\"S\");const name=nameObj instanceof Name?nameObj.name:\"\";const{root:root}=this.tree;return root.roleMap.get(name)??name}parseKids(){let pageObjId=null;const objRef=this.dict.getRaw(\"Pg\");if(objRef instanceof Ref){pageObjId=objRef.toString()}const kids=this.dict.get(\"K\");if(Array.isArray(kids)){for(const kid of kids){const element=this.parseKid(pageObjId,this.xref.fetchIfRef(kid));if(element){this.kids.push(element)}}}else{const element=this.parseKid(pageObjId,kids);if(element){this.kids.push(element)}}}parseKid(pageObjId,kid){if(Number.isInteger(kid)){if(this.tree.pageDict.objId!==pageObjId){return null}return new StructElement({type:StructElementType.PAGE_CONTENT,mcid:kid,pageObjId:pageObjId})}if(!(kid instanceof Dict)){return null}const pageRef=kid.getRaw(\"Pg\");if(pageRef instanceof Ref){pageObjId=pageRef.toString()}const type=kid.get(\"Type\")instanceof Name?kid.get(\"Type\").name:null;if(type===\"MCR\"){if(this.tree.pageDict.objId!==pageObjId){return null}const kidRef=kid.getRaw(\"Stm\");return new StructElement({type:StructElementType.STREAM_CONTENT,refObjId:kidRef instanceof Ref?kidRef.toString():null,pageObjId:pageObjId,mcid:kid.get(\"MCID\")})}if(type===\"OBJR\"){if(this.tree.pageDict.objId!==pageObjId){return null}const kidRef=kid.getRaw(\"Obj\");return new StructElement({type:StructElementType.OBJECT,refObjId:kidRef instanceof Ref?kidRef.toString():null,pageObjId:pageObjId})}return new StructElement({type:StructElementType.ELEMENT,dict:kid})}}class StructElement{constructor({type:type,dict:dict=null,mcid:mcid=null,pageObjId:pageObjId=null,refObjId:refObjId=null}){this.type=type;this.dict=dict;this.mcid=mcid;this.pageObjId=pageObjId;this.refObjId=refObjId;this.parentNode=null}}class StructTreePage{constructor(structTreeRoot,pageDict){this.root=structTreeRoot;this.xref=structTreeRoot?.xref??null;this.rootDict=structTreeRoot?.dict??null;this.pageDict=pageDict;this.nodes=[]}collectObjects(pageRef){if(!this.root||!this.rootDict||!(pageRef instanceof Ref)){return null}const parentTree=this.rootDict.get(\"ParentTree\");if(!parentTree){return null}const ids=this.root.structParentIds?.get(pageRef);if(!ids){return null}const map=new Map;const numberTree=new NumberTree(parentTree,this.xref);for(const[elemId]of ids){const obj=numberTree.getRaw(elemId);if(obj instanceof Ref){map.set(elemId,obj)}}return map}parse(pageRef){if(!this.root||!this.rootDict||!(pageRef instanceof Ref)){return}const parentTree=this.rootDict.get(\"ParentTree\");if(!parentTree){return}const id=this.pageDict.get(\"StructParents\");const ids=this.root.structParentIds?.get(pageRef);if(!Number.isInteger(id)&&!ids){return}const map=new Map;const numberTree=new NumberTree(parentTree,this.xref);if(Number.isInteger(id)){const parentArray=numberTree.get(id);if(Array.isArray(parentArray)){for(const ref of parentArray){if(ref instanceof Ref){this.addNode(this.xref.fetch(ref),map)}}}}if(!ids){return}for(const[elemId,type]of ids){const obj=numberTree.get(elemId);if(obj){const elem=this.addNode(this.xref.fetchIfRef(obj),map);if(elem?.kids?.length===1&&elem.kids[0].type===StructElementType.OBJECT){elem.kids[0].type=type}}}}addNode(dict,map,level=0){if(level>MAX_DEPTH){warn(\"StructTree MAX_DEPTH reached.\");return null}if(!(dict instanceof Dict)){return null}if(map.has(dict)){return map.get(dict)}const element=new StructElementNode(this,dict);map.set(dict,element);const parent=dict.get(\"P\");if(!(parent instanceof Dict)||isName(parent.get(\"Type\"),\"StructTreeRoot\")){if(!this.addTopLevelNode(dict,element)){map.delete(dict)}return element}const parentNode=this.addNode(parent,map,level+1);if(!parentNode){return element}let save=false;for(const kid of parentNode.kids){if(kid.type===StructElementType.ELEMENT&&kid.dict===dict){kid.parentNode=element;save=true}}if(!save){map.delete(dict)}return element}addTopLevelNode(dict,element){const obj=this.rootDict.get(\"K\");if(!obj){return false}if(obj instanceof Dict){if(obj.objId!==dict.objId){return false}this.nodes[0]=element;return true}if(!Array.isArray(obj)){return true}let save=false;for(let i=0;i<obj.length;i++){const kidRef=obj[i];if(kidRef?.toString()===dict.objId){this.nodes[i]=element;save=true}}return save}get serializable(){function nodeToSerializable(node,parent,level=0){if(level>MAX_DEPTH){warn(\"StructTree too deep to be fully serialized.\");return}const obj=Object.create(null);obj.role=node.role;obj.children=[];parent.children.push(obj);let alt=node.dict.get(\"Alt\");if(typeof alt!==\"string\"){alt=node.dict.get(\"ActualText\")}if(typeof alt===\"string\"){obj.alt=stringToPDFString(alt)}const a=node.dict.get(\"A\");if(a instanceof Dict){const bbox=lookupNormalRect(a.getArray(\"BBox\"),null);if(bbox){obj.bbox=bbox}else{const width=a.get(\"Width\");const height=a.get(\"Height\");if(typeof width===\"number\"&&width>0&&typeof height===\"number\"&&height>0){obj.bbox=[0,0,width,height]}}}const lang=node.dict.get(\"Lang\");if(typeof lang===\"string\"){obj.lang=stringToPDFString(lang)}for(const kid of node.kids){const kidElement=kid.type===StructElementType.ELEMENT?kid.parentNode:null;if(kidElement){nodeToSerializable(kidElement,obj,level+1);continue}else if(kid.type===StructElementType.PAGE_CONTENT||kid.type===StructElementType.STREAM_CONTENT){obj.children.push({type:\"content\",id:`p${kid.pageObjId}_mc${kid.mcid}`})}else if(kid.type===StructElementType.OBJECT){obj.children.push({type:\"object\",id:kid.refObjId})}else if(kid.type===StructElementType.ANNOTATION){obj.children.push({type:\"annotation\",id:`${AnnotationPrefix}${kid.refObjId}`})}}}const root=Object.create(null);root.children=[];root.role=\"Root\";for(const child of this.nodes){if(!child){continue}nodeToSerializable(child,root)}return root}}const isRef=v=>v instanceof Ref;const isValidExplicitDest=_isValidExplicitDest.bind(null,isRef,isName);function fetchDest(dest){if(dest instanceof Dict){dest=dest.get(\"D\")}return isValidExplicitDest(dest)?dest:null}function fetchRemoteDest(action){let dest=action.get(\"D\");if(dest){if(dest instanceof Name){dest=dest.name}if(typeof dest===\"string\"){return stringToPDFString(dest,true)}else if(isValidExplicitDest(dest)){return JSON.stringify(dest)}}return null}class Catalog{constructor(pdfManager,xref){this.pdfManager=pdfManager;this.xref=xref;this._catDict=xref.getCatalogObj();if(!(this._catDict instanceof Dict)){throw new FormatError(\"Catalog object is not a dictionary.\")}this.toplevelPagesDict;this._actualNumPages=null;this.fontCache=new RefSetCache;this.builtInCMapCache=new Map;this.standardFontDataCache=new Map;this.globalColorSpaceCache=new GlobalColorSpaceCache;this.globalImageCache=new GlobalImageCache;this.pageKidsCountCache=new RefSetCache;this.pageIndexCache=new RefSetCache;this.pageDictCache=new RefSetCache;this.nonBlendModesSet=new RefSet;this.systemFontCache=new Map}cloneDict(){return this._catDict.clone()}get version(){const version=this._catDict.get(\"Version\");if(version instanceof Name){if(PDF_VERSION_REGEXP.test(version.name)){return shadow(this,\"version\",version.name)}warn(`Invalid PDF catalog version: ${version.name}`)}return shadow(this,\"version\",null)}get lang(){const lang=this._catDict.get(\"Lang\");return shadow(this,\"lang\",lang&&typeof lang===\"string\"?stringToPDFString(lang):null)}get needsRendering(){const needsRendering=this._catDict.get(\"NeedsRendering\");return shadow(this,\"needsRendering\",typeof needsRendering===\"boolean\"?needsRendering:false)}get collection(){let collection=null;try{const obj=this._catDict.get(\"Collection\");if(obj instanceof Dict&&obj.size>0){collection=obj}}catch(ex){if(ex instanceof MissingDataException){throw ex}info(\"Cannot fetch Collection entry; assuming no collection is present.\")}return shadow(this,\"collection\",collection)}get acroForm(){let acroForm=null;try{const obj=this._catDict.get(\"AcroForm\");if(obj instanceof Dict&&obj.size>0){acroForm=obj}}catch(ex){if(ex instanceof MissingDataException){throw ex}info(\"Cannot fetch AcroForm entry; assuming no forms are present.\")}return shadow(this,\"acroForm\",acroForm)}get acroFormRef(){const value=this._catDict.getRaw(\"AcroForm\");return shadow(this,\"acroFormRef\",value instanceof Ref?value:null)}get metadata(){const streamRef=this._catDict.getRaw(\"Metadata\");if(!(streamRef instanceof Ref)){return shadow(this,\"metadata\",null)}let metadata=null;try{const stream=this.xref.fetch(streamRef,!this.xref.encrypt?.encryptMetadata);if(stream instanceof BaseStream&&stream.dict instanceof Dict){const type=stream.dict.get(\"Type\");const subtype=stream.dict.get(\"Subtype\");if(isName(type,\"Metadata\")&&isName(subtype,\"XML\")){const data=stringToUTF8String(stream.getString());if(data){metadata=new MetadataParser(data).serializable}}}}catch(ex){if(ex instanceof MissingDataException){throw ex}info(`Skipping invalid Metadata: \"${ex}\".`)}return shadow(this,\"metadata\",metadata)}get markInfo(){let markInfo=null;try{markInfo=this._readMarkInfo()}catch(ex){if(ex instanceof MissingDataException){throw ex}warn(\"Unable to read mark info.\")}return shadow(this,\"markInfo\",markInfo)}_readMarkInfo(){const obj=this._catDict.get(\"MarkInfo\");if(!(obj instanceof Dict)){return null}const markInfo={Marked:false,UserProperties:false,Suspects:false};for(const key in markInfo){const value=obj.get(key);if(typeof value===\"boolean\"){markInfo[key]=value}}return markInfo}get structTreeRoot(){let structTree=null;try{structTree=this.#readStructTreeRoot()}catch(ex){if(ex instanceof MissingDataException){throw ex}warn(\"Unable read to structTreeRoot info.\")}return shadow(this,\"structTreeRoot\",structTree)}#readStructTreeRoot(){const rawObj=this._catDict.getRaw(\"StructTreeRoot\");const obj=this.xref.fetchIfRef(rawObj);if(!(obj instanceof Dict)){return null}const root=new StructTreeRoot(this.xref,obj,rawObj);root.init();return root}get toplevelPagesDict(){const pagesObj=this._catDict.get(\"Pages\");if(!(pagesObj instanceof Dict)){throw new FormatError(\"Invalid top-level pages dictionary.\")}return shadow(this,\"toplevelPagesDict\",pagesObj)}get documentOutline(){let obj=null;try{obj=this._readDocumentOutline()}catch(ex){if(ex instanceof MissingDataException){throw ex}warn(\"Unable to read document outline.\")}return shadow(this,\"documentOutline\",obj)}_readDocumentOutline(){let obj=this._catDict.get(\"Outlines\");if(!(obj instanceof Dict)){return null}obj=obj.getRaw(\"First\");if(!(obj instanceof Ref)){return null}const root={items:[]};const queue=[{obj:obj,parent:root}];const processed=new RefSet;processed.put(obj);const xref=this.xref,blackColor=new Uint8ClampedArray(3);while(queue.length>0){const i=queue.shift();const outlineDict=xref.fetchIfRef(i.obj);if(outlineDict===null){continue}if(!outlineDict.has(\"Title\")){warn(\"Invalid outline item encountered.\")}const data={url:null,dest:null,action:null};Catalog.parseDestDictionary({destDict:outlineDict,resultObj:data,docBaseUrl:this.baseUrl,docAttachments:this.attachments});const title=outlineDict.get(\"Title\");const flags=outlineDict.get(\"F\")||0;const color=outlineDict.getArray(\"C\");const count=outlineDict.get(\"Count\");let rgbColor=blackColor;if(isNumberArray(color,3)&&(color[0]!==0||color[1]!==0||color[2]!==0)){rgbColor=ColorSpaceUtils.rgb.getRgb(color,0)}const outlineItem={action:data.action,attachment:data.attachment,dest:data.dest,url:data.url,unsafeUrl:data.unsafeUrl,newWindow:data.newWindow,setOCGState:data.setOCGState,title:typeof title===\"string\"?stringToPDFString(title):\"\",color:rgbColor,count:Number.isInteger(count)?count:undefined,bold:!!(flags&2),italic:!!(flags&1),items:[]};i.parent.items.push(outlineItem);obj=outlineDict.getRaw(\"First\");if(obj instanceof Ref&&!processed.has(obj)){queue.push({obj:obj,parent:outlineItem});processed.put(obj)}obj=outlineDict.getRaw(\"Next\");if(obj instanceof Ref&&!processed.has(obj)){queue.push({obj:obj,parent:i.parent});processed.put(obj)}}return root.items.length>0?root.items:null}get permissions(){let permissions=null;try{permissions=this._readPermissions()}catch(ex){if(ex instanceof MissingDataException){throw ex}warn(\"Unable to read permissions.\")}return shadow(this,\"permissions\",permissions)}_readPermissions(){const encrypt=this.xref.trailer.get(\"Encrypt\");if(!(encrypt instanceof Dict)){return null}let flags=encrypt.get(\"P\");if(typeof flags!==\"number\"){return null}flags+=2**32;const permissions=[];for(const key in PermissionFlag){const value=PermissionFlag[key];if(flags&value){permissions.push(value)}}return permissions}get optionalContentConfig(){let config=null;try{const properties=this._catDict.get(\"OCProperties\");if(!properties){return shadow(this,\"optionalContentConfig\",null)}const defaultConfig=properties.get(\"D\");if(!defaultConfig){return shadow(this,\"optionalContentConfig\",null)}const groupsData=properties.get(\"OCGs\");if(!Array.isArray(groupsData)){return shadow(this,\"optionalContentConfig\",null)}const groupRefCache=new RefSetCache;for(const groupRef of groupsData){if(!(groupRef instanceof Ref)||groupRefCache.has(groupRef)){continue}groupRefCache.put(groupRef,this.#readOptionalContentGroup(groupRef))}config=this.#readOptionalContentConfig(defaultConfig,groupRefCache)}catch(ex){if(ex instanceof MissingDataException){throw ex}warn(`Unable to read optional content config: ${ex}`)}return shadow(this,\"optionalContentConfig\",config)}#readOptionalContentGroup(groupRef){const group=this.xref.fetch(groupRef);const obj={id:groupRef.toString(),name:null,intent:null,usage:{print:null,view:null},rbGroups:[]};const name=group.get(\"Name\");if(typeof name===\"string\"){obj.name=stringToPDFString(name)}let intent=group.getArray(\"Intent\");if(!Array.isArray(intent)){intent=[intent]}if(intent.every((i=>i instanceof Name))){obj.intent=intent.map((i=>i.name))}const usage=group.get(\"Usage\");if(!(usage instanceof Dict)){return obj}const usageObj=obj.usage;const print=usage.get(\"Print\");if(print instanceof Dict){const printState=print.get(\"PrintState\");if(printState instanceof Name){switch(printState.name){case\"ON\":case\"OFF\":usageObj.print={printState:printState.name}}}}const view=usage.get(\"View\");if(view instanceof Dict){const viewState=view.get(\"ViewState\");if(viewState instanceof Name){switch(viewState.name){case\"ON\":case\"OFF\":usageObj.view={viewState:viewState.name}}}}return obj}#readOptionalContentConfig(config,groupRefCache){function parseOnOff(refs){const onParsed=[];if(Array.isArray(refs)){for(const value of refs){if(value instanceof Ref&&groupRefCache.has(value)){onParsed.push(value.toString())}}}return onParsed}function parseOrder(refs,nestedLevels=0){if(!Array.isArray(refs)){return null}const order=[];for(const value of refs){if(value instanceof Ref&&groupRefCache.has(value)){parsedOrderRefs.put(value);order.push(value.toString());continue}const nestedOrder=parseNestedOrder(value,nestedLevels);if(nestedOrder){order.push(nestedOrder)}}if(nestedLevels>0){return order}const hiddenGroups=[];for(const[groupRef]of groupRefCache.items()){if(parsedOrderRefs.has(groupRef)){continue}hiddenGroups.push(groupRef.toString())}if(hiddenGroups.length){order.push({name:null,order:hiddenGroups})}return order}function parseNestedOrder(ref,nestedLevels){if(++nestedLevels>MAX_NESTED_LEVELS){warn(\"parseNestedOrder - reached MAX_NESTED_LEVELS.\");return null}const value=xref.fetchIfRef(ref);if(!Array.isArray(value)){return null}const nestedName=xref.fetchIfRef(value[0]);if(typeof nestedName!==\"string\"){return null}const nestedOrder=parseOrder(value.slice(1),nestedLevels);if(!nestedOrder?.length){return null}return{name:stringToPDFString(nestedName),order:nestedOrder}}function parseRBGroups(rbGroups){if(!Array.isArray(rbGroups)){return}for(const value of rbGroups){const rbGroup=xref.fetchIfRef(value);if(!Array.isArray(rbGroup)||!rbGroup.length){continue}const parsedRbGroup=new Set;for(const ref of rbGroup){if(ref instanceof Ref&&groupRefCache.has(ref)&&!parsedRbGroup.has(ref.toString())){parsedRbGroup.add(ref.toString());groupRefCache.get(ref).rbGroups.push(parsedRbGroup)}}}}const xref=this.xref,parsedOrderRefs=new RefSet,MAX_NESTED_LEVELS=10;parseRBGroups(config.get(\"RBGroups\"));return{name:typeof config.get(\"Name\")===\"string\"?stringToPDFString(config.get(\"Name\")):null,creator:typeof config.get(\"Creator\")===\"string\"?stringToPDFString(config.get(\"Creator\")):null,baseState:config.get(\"BaseState\")instanceof Name?config.get(\"BaseState\").name:null,on:parseOnOff(config.get(\"ON\")),off:parseOnOff(config.get(\"OFF\")),order:parseOrder(config.get(\"Order\")),groups:[...groupRefCache]}}setActualNumPages(num=null){this._actualNumPages=num}get hasActualNumPages(){return this._actualNumPages!==null}get _pagesCount(){const obj=this.toplevelPagesDict.get(\"Count\");if(!Number.isInteger(obj)){throw new FormatError(\"Page count in top-level pages dictionary is not an integer.\")}return shadow(this,\"_pagesCount\",obj)}get numPages(){return this.hasActualNumPages?this._actualNumPages:this._pagesCount}get destinations(){const rawDests=this.#readDests(),dests=Object.create(null);for(const obj of rawDests){if(obj instanceof NameTree){for(const[key,value]of obj.getAll()){const dest=fetchDest(value);if(dest){dests[stringToPDFString(key,true)]=dest}}}else if(obj instanceof Dict){for(const[key,value]of obj){const dest=fetchDest(value);if(dest){dests[stringToPDFString(key,true)]||=dest}}}}return shadow(this,\"destinations\",dests)}getDestination(id){if(this.hasOwnProperty(\"destinations\")){return this.destinations[id]??null}const rawDests=this.#readDests();for(const obj of rawDests){if(obj instanceof NameTree||obj instanceof Dict){const dest=fetchDest(obj.get(id));if(dest){return dest}}}if(rawDests.length){const dest=this.destinations[id];if(dest){return dest}}return null}#readDests(){const obj=this._catDict.get(\"Names\");const rawDests=[];if(obj?.has(\"Dests\")){rawDests.push(new NameTree(obj.getRaw(\"Dests\"),this.xref))}if(this._catDict.has(\"Dests\")){rawDests.push(this._catDict.get(\"Dests\"))}return rawDests}get pageLabels(){let obj=null;try{obj=this._readPageLabels()}catch(ex){if(ex instanceof MissingDataException){throw ex}warn(\"Unable to read page labels.\")}return shadow(this,\"pageLabels\",obj)}_readPageLabels(){const obj=this._catDict.getRaw(\"PageLabels\");if(!obj){return null}const pageLabels=new Array(this.numPages);let style=null,prefix=\"\";const numberTree=new NumberTree(obj,this.xref);const nums=numberTree.getAll();let currentLabel=\"\",currentIndex=1;for(let i=0,ii=this.numPages;i<ii;i++){const labelDict=nums.get(i);if(labelDict!==undefined){if(!(labelDict instanceof Dict)){throw new FormatError(\"PageLabel is not a dictionary.\")}if(labelDict.has(\"Type\")&&!isName(labelDict.get(\"Type\"),\"PageLabel\")){throw new FormatError(\"Invalid type in PageLabel dictionary.\")}if(labelDict.has(\"S\")){const s=labelDict.get(\"S\");if(!(s instanceof Name)){throw new FormatError(\"Invalid style in PageLabel dictionary.\")}style=s.name}else{style=null}if(labelDict.has(\"P\")){const p=labelDict.get(\"P\");if(typeof p!==\"string\"){throw new FormatError(\"Invalid prefix in PageLabel dictionary.\")}prefix=stringToPDFString(p)}else{prefix=\"\"}if(labelDict.has(\"St\")){const st=labelDict.get(\"St\");if(!(Number.isInteger(st)&&st>=1)){throw new FormatError(\"Invalid start in PageLabel dictionary.\")}currentIndex=st}else{currentIndex=1}}switch(style){case\"D\":currentLabel=currentIndex;break;case\"R\":case\"r\":currentLabel=toRomanNumerals(currentIndex,style===\"r\");break;case\"A\":case\"a\":const LIMIT=26;const A_UPPER_CASE=65,A_LOWER_CASE=97;const baseCharCode=style===\"a\"?A_LOWER_CASE:A_UPPER_CASE;const letterIndex=currentIndex-1;const character=String.fromCharCode(baseCharCode+letterIndex%LIMIT);currentLabel=character.repeat(Math.floor(letterIndex/LIMIT)+1);break;default:if(style){throw new FormatError(`Invalid style \"${style}\" in PageLabel dictionary.`)}currentLabel=\"\"}pageLabels[i]=prefix+currentLabel;currentIndex++}return pageLabels}get pageLayout(){const obj=this._catDict.get(\"PageLayout\");let pageLayout=\"\";if(obj instanceof Name){switch(obj.name){case\"SinglePage\":case\"OneColumn\":case\"TwoColumnLeft\":case\"TwoColumnRight\":case\"TwoPageLeft\":case\"TwoPageRight\":pageLayout=obj.name}}return shadow(this,\"pageLayout\",pageLayout)}get pageMode(){const obj=this._catDict.get(\"PageMode\");let pageMode=\"UseNone\";if(obj instanceof Name){switch(obj.name){case\"UseNone\":case\"UseOutlines\":case\"UseThumbs\":case\"FullScreen\":case\"UseOC\":case\"UseAttachments\":pageMode=obj.name}}return shadow(this,\"pageMode\",pageMode)}get viewerPreferences(){const obj=this._catDict.get(\"ViewerPreferences\");if(!(obj instanceof Dict)){return shadow(this,\"viewerPreferences\",null)}let prefs=null;for(const[key,value]of obj){let prefValue;switch(key){case\"HideToolbar\":case\"HideMenubar\":case\"HideWindowUI\":case\"FitWindow\":case\"CenterWindow\":case\"DisplayDocTitle\":case\"PickTrayByPDFSize\":if(typeof value===\"boolean\"){prefValue=value}break;case\"NonFullScreenPageMode\":if(value instanceof Name){switch(value.name){case\"UseNone\":case\"UseOutlines\":case\"UseThumbs\":case\"UseOC\":prefValue=value.name;break;default:prefValue=\"UseNone\"}}break;case\"Direction\":if(value instanceof Name){switch(value.name){case\"L2R\":case\"R2L\":prefValue=value.name;break;default:prefValue=\"L2R\"}}break;case\"ViewArea\":case\"ViewClip\":case\"PrintArea\":case\"PrintClip\":if(value instanceof Name){switch(value.name){case\"MediaBox\":case\"CropBox\":case\"BleedBox\":case\"TrimBox\":case\"ArtBox\":prefValue=value.name;break;default:prefValue=\"CropBox\"}}break;case\"PrintScaling\":if(value instanceof Name){switch(value.name){case\"None\":case\"AppDefault\":prefValue=value.name;break;default:prefValue=\"AppDefault\"}}break;case\"Duplex\":if(value instanceof Name){switch(value.name){case\"Simplex\":case\"DuplexFlipShortEdge\":case\"DuplexFlipLongEdge\":prefValue=value.name;break;default:prefValue=\"None\"}}break;case\"PrintPageRange\":if(Array.isArray(value)&&value.length%2===0){const isValid=value.every(((page,i,arr)=>Number.isInteger(page)&&page>0&&(i===0||page>=arr[i-1])&&page<=this.numPages));if(isValid){prefValue=value}}break;case\"NumCopies\":if(Number.isInteger(value)&&value>0){prefValue=value}break;default:warn(`Ignoring non-standard key in ViewerPreferences: ${key}.`);continue}if(prefValue===undefined){warn(`Bad value, for key \"${key}\", in ViewerPreferences: ${value}.`);continue}prefs??=Object.create(null);prefs[key]=prefValue}return shadow(this,\"viewerPreferences\",prefs)}get openAction(){const obj=this._catDict.get(\"OpenAction\");const openAction=Object.create(null);if(obj instanceof Dict){const destDict=new Dict(this.xref);destDict.set(\"A\",obj);const resultObj={url:null,dest:null,action:null};Catalog.parseDestDictionary({destDict:destDict,resultObj:resultObj});if(Array.isArray(resultObj.dest)){openAction.dest=resultObj.dest}else if(resultObj.action){openAction.action=resultObj.action}}else if(Array.isArray(obj)){openAction.dest=obj}return shadow(this,\"openAction\",objectSize(openAction)>0?openAction:null)}get attachments(){const obj=this._catDict.get(\"Names\");let attachments=null;if(obj instanceof Dict&&obj.has(\"EmbeddedFiles\")){const nameTree=new NameTree(obj.getRaw(\"EmbeddedFiles\"),this.xref);for(const[key,value]of nameTree.getAll()){const fs=new FileSpec(value,this.xref);attachments??=Object.create(null);attachments[stringToPDFString(key,true)]=fs.serializable}}return shadow(this,\"attachments\",attachments)}get xfaImages(){const obj=this._catDict.get(\"Names\");let xfaImages=null;if(obj instanceof Dict&&obj.has(\"XFAImages\")){const nameTree=new NameTree(obj.getRaw(\"XFAImages\"),this.xref);for(const[key,value]of nameTree.getAll()){if(value instanceof BaseStream){xfaImages??=new Map;xfaImages.set(stringToPDFString(key,true),value.getBytes())}}}return shadow(this,\"xfaImages\",xfaImages)}_collectJavaScript(){const obj=this._catDict.get(\"Names\");let javaScript=null;function appendIfJavaScriptDict(name,jsDict){if(!(jsDict instanceof Dict)){return}if(!isName(jsDict.get(\"S\"),\"JavaScript\")){return}let js=jsDict.get(\"JS\");if(js instanceof BaseStream){js=js.getString()}else if(typeof js!==\"string\"){return}js=stringToPDFString(js,true).replaceAll(\"\\0\",\"\");if(js){(javaScript||=new Map).set(name,js)}}if(obj instanceof Dict&&obj.has(\"JavaScript\")){const nameTree=new NameTree(obj.getRaw(\"JavaScript\"),this.xref);for(const[key,value]of nameTree.getAll()){appendIfJavaScriptDict(stringToPDFString(key,true),value)}}const openAction=this._catDict.get(\"OpenAction\");if(openAction){appendIfJavaScriptDict(\"OpenAction\",openAction)}return javaScript}get jsActions(){const javaScript=this._collectJavaScript();let actions=collectActions(this.xref,this._catDict,DocumentActionEventType);if(javaScript){actions||=Object.create(null);for(const[key,val]of javaScript){if(key in actions){actions[key].push(val)}else{actions[key]=[val]}}}return shadow(this,\"jsActions\",actions)}async cleanup(manuallyTriggered=false){clearGlobalCaches();this.globalColorSpaceCache.clear();this.globalImageCache.clear(manuallyTriggered);this.pageKidsCountCache.clear();this.pageIndexCache.clear();this.pageDictCache.clear();this.nonBlendModesSet.clear();for(const{dict:dict}of await Promise.all(this.fontCache)){delete dict.cacheKey}this.fontCache.clear();this.builtInCMapCache.clear();this.standardFontDataCache.clear();this.systemFontCache.clear()}async getPageDict(pageIndex){const nodesToVisit=[this.toplevelPagesDict];const visitedNodes=new RefSet;const pagesRef=this._catDict.getRaw(\"Pages\");if(pagesRef instanceof Ref){visitedNodes.put(pagesRef)}const xref=this.xref,pageKidsCountCache=this.pageKidsCountCache,pageIndexCache=this.pageIndexCache,pageDictCache=this.pageDictCache;let currentPageIndex=0;while(nodesToVisit.length){const currentNode=nodesToVisit.pop();if(currentNode instanceof Ref){const count=pageKidsCountCache.get(currentNode);if(count>=0&&currentPageIndex+count<=pageIndex){currentPageIndex+=count;continue}if(visitedNodes.has(currentNode)){throw new FormatError(\"Pages tree contains circular reference.\")}visitedNodes.put(currentNode);const obj=await(pageDictCache.get(currentNode)||xref.fetchAsync(currentNode));if(obj instanceof Dict){let type=obj.getRaw(\"Type\");if(type instanceof Ref){type=await xref.fetchAsync(type)}if(isName(type,\"Page\")||!obj.has(\"Kids\")){if(!pageKidsCountCache.has(currentNode)){pageKidsCountCache.put(currentNode,1)}if(!pageIndexCache.has(currentNode)){pageIndexCache.put(currentNode,currentPageIndex)}if(currentPageIndex===pageIndex){return[obj,currentNode]}currentPageIndex++;continue}}nodesToVisit.push(obj);continue}if(!(currentNode instanceof Dict)){throw new FormatError(\"Page dictionary kid reference points to wrong type of object.\")}const{objId:objId}=currentNode;let count=currentNode.getRaw(\"Count\");if(count instanceof Ref){count=await xref.fetchAsync(count)}if(Number.isInteger(count)&&count>=0){if(objId&&!pageKidsCountCache.has(objId)){pageKidsCountCache.put(objId,count)}if(currentPageIndex+count<=pageIndex){currentPageIndex+=count;continue}}let kids=currentNode.getRaw(\"Kids\");if(kids instanceof Ref){kids=await xref.fetchAsync(kids)}if(!Array.isArray(kids)){let type=currentNode.getRaw(\"Type\");if(type instanceof Ref){type=await xref.fetchAsync(type)}if(isName(type,\"Page\")||!currentNode.has(\"Kids\")){if(currentPageIndex===pageIndex){return[currentNode,null]}currentPageIndex++;continue}throw new FormatError(\"Page dictionary kids object is not an array.\")}for(let last=kids.length-1;last>=0;last--){const lastKid=kids[last];nodesToVisit.push(lastKid);if(currentNode===this.toplevelPagesDict&&lastKid instanceof Ref&&!pageDictCache.has(lastKid)){pageDictCache.put(lastKid,xref.fetchAsync(lastKid))}}}throw new Error(`Page index ${pageIndex} not found.`)}async getAllPageDicts(recoveryMode=false){const{ignoreErrors:ignoreErrors}=this.pdfManager.evaluatorOptions;const queue=[{currentNode:this.toplevelPagesDict,posInKids:0}];const visitedNodes=new RefSet;const pagesRef=this._catDict.getRaw(\"Pages\");if(pagesRef instanceof Ref){visitedNodes.put(pagesRef)}const map=new Map,xref=this.xref,pageIndexCache=this.pageIndexCache;let pageIndex=0;function addPageDict(pageDict,pageRef){if(pageRef&&!pageIndexCache.has(pageRef)){pageIndexCache.put(pageRef,pageIndex)}map.set(pageIndex++,[pageDict,pageRef])}function addPageError(error){if(error instanceof XRefEntryException&&!recoveryMode){throw error}if(recoveryMode&&ignoreErrors&&pageIndex===0){warn(`getAllPageDicts - Skipping invalid first page: \"${error}\".`);error=Dict.empty}map.set(pageIndex++,[error,null])}while(queue.length>0){const queueItem=queue.at(-1);const{currentNode:currentNode,posInKids:posInKids}=queueItem;let kids=currentNode.getRaw(\"Kids\");if(kids instanceof Ref){try{kids=await xref.fetchAsync(kids)}catch(ex){addPageError(ex);break}}if(!Array.isArray(kids)){addPageError(new FormatError(\"Page dictionary kids object is not an array.\"));break}if(posInKids>=kids.length){queue.pop();continue}const kidObj=kids[posInKids];let obj;if(kidObj instanceof Ref){if(visitedNodes.has(kidObj)){addPageError(new FormatError(\"Pages tree contains circular reference.\"));break}visitedNodes.put(kidObj);try{obj=await xref.fetchAsync(kidObj)}catch(ex){addPageError(ex);break}}else{obj=kidObj}if(!(obj instanceof Dict)){addPageError(new FormatError(\"Page dictionary kid reference points to wrong type of object.\"));break}let type=obj.getRaw(\"Type\");if(type instanceof Ref){try{type=await xref.fetchAsync(type)}catch(ex){addPageError(ex);break}}if(isName(type,\"Page\")||!obj.has(\"Kids\")){addPageDict(obj,kidObj instanceof Ref?kidObj:null)}else{queue.push({currentNode:obj,posInKids:0})}queueItem.posInKids++}return map}getPageIndex(pageRef){const cachedPageIndex=this.pageIndexCache.get(pageRef);if(cachedPageIndex!==undefined){return Promise.resolve(cachedPageIndex)}const xref=this.xref;function pagesBeforeRef(kidRef){let total=0,parentRef;return xref.fetchAsync(kidRef).then((function(node){if(isRefsEqual(kidRef,pageRef)&&!isDict(node,\"Page\")&&!(node instanceof Dict&&!node.has(\"Type\")&&node.has(\"Contents\"))){throw new FormatError(\"The reference does not point to a /Page dictionary.\")}if(!node){return null}if(!(node instanceof Dict)){throw new FormatError(\"Node must be a dictionary.\")}parentRef=node.getRaw(\"Parent\");return node.getAsync(\"Parent\")})).then((function(parent){if(!parent){return null}if(!(parent instanceof Dict)){throw new FormatError(\"Parent must be a dictionary.\")}return parent.getAsync(\"Kids\")})).then((function(kids){if(!kids){return null}const kidPromises=[];let found=false;for(const kid of kids){if(!(kid instanceof Ref)){throw new FormatError(\"Kid must be a reference.\")}if(isRefsEqual(kid,kidRef)){found=true;break}kidPromises.push(xref.fetchAsync(kid).then((function(obj){if(!(obj instanceof Dict)){throw new FormatError(\"Kid node must be a dictionary.\")}if(obj.has(\"Count\")){total+=obj.get(\"Count\")}else{total++}})))}if(!found){throw new FormatError(\"Kid reference not found in parent's kids.\")}return Promise.all(kidPromises).then((()=>[total,parentRef]))}))}let total=0;const next=ref=>pagesBeforeRef(ref).then((args=>{if(!args){this.pageIndexCache.put(pageRef,total);return total}const[count,parentRef]=args;total+=count;return next(parentRef)}));return next(pageRef)}get baseUrl(){const uri=this._catDict.get(\"URI\");if(uri instanceof Dict){const base=uri.get(\"Base\");if(typeof base===\"string\"){const absoluteUrl=createValidAbsoluteUrl(base,null,{tryConvertEncoding:true});if(absoluteUrl){return shadow(this,\"baseUrl\",absoluteUrl.href)}}}return shadow(this,\"baseUrl\",this.pdfManager.docBaseUrl)}static parseDestDictionary({destDict:destDict,resultObj:resultObj,docBaseUrl:docBaseUrl=null,docAttachments:docAttachments=null}){if(!(destDict instanceof Dict)){warn(\"parseDestDictionary: `destDict` must be a dictionary.\");return}let action=destDict.get(\"A\"),url,dest;if(!(action instanceof Dict)){if(destDict.has(\"Dest\")){action=destDict.get(\"Dest\")}else{action=destDict.get(\"AA\");if(action instanceof Dict){if(action.has(\"D\")){action=action.get(\"D\")}else if(action.has(\"U\")){action=action.get(\"U\")}}}}if(action instanceof Dict){const actionType=action.get(\"S\");if(!(actionType instanceof Name)){warn(\"parseDestDictionary: Invalid type in Action dictionary.\");return}const actionName=actionType.name;switch(actionName){case\"ResetForm\":const flags=action.get(\"Flags\");const include=((typeof flags===\"number\"?flags:0)&1)===0;const fields=[];const refs=[];for(const obj of action.get(\"Fields\")||[]){if(obj instanceof Ref){refs.push(obj.toString())}else if(typeof obj===\"string\"){fields.push(stringToPDFString(obj))}}resultObj.resetForm={fields:fields,refs:refs,include:include};break;case\"URI\":url=action.get(\"URI\");if(url instanceof Name){url=\"/\"+url.name}break;case\"GoTo\":dest=action.get(\"D\");break;case\"Launch\":case\"GoToR\":const urlDict=action.get(\"F\");if(urlDict instanceof Dict){const fs=new FileSpec(urlDict,null,true);const{rawFilename:rawFilename}=fs.serializable;url=rawFilename}else if(typeof urlDict===\"string\"){url=urlDict}const remoteDest=fetchRemoteDest(action);if(remoteDest&&typeof url===\"string\"){url=url.split(\"#\",1)[0]+\"#\"+remoteDest}const newWindow=action.get(\"NewWindow\");if(typeof newWindow===\"boolean\"){resultObj.newWindow=newWindow}break;case\"GoToE\":const target=action.get(\"T\");let attachment;if(docAttachments&&target instanceof Dict){const relationship=target.get(\"R\");const name=target.get(\"N\");if(isName(relationship,\"C\")&&typeof name===\"string\"){attachment=docAttachments[stringToPDFString(name,true)]}}if(attachment){resultObj.attachment=attachment;const attachmentDest=fetchRemoteDest(action);if(attachmentDest){resultObj.attachmentDest=attachmentDest}}else{warn(`parseDestDictionary - unimplemented \"GoToE\" action.`)}break;case\"Named\":const namedAction=action.get(\"N\");if(namedAction instanceof Name){resultObj.action=namedAction.name}break;case\"SetOCGState\":const state=action.get(\"State\");const preserveRB=action.get(\"PreserveRB\");if(!Array.isArray(state)||state.length===0){break}const stateArr=[];for(const elem of state){if(elem instanceof Name){switch(elem.name){case\"ON\":case\"OFF\":case\"Toggle\":stateArr.push(elem.name);break}}else if(elem instanceof Ref){stateArr.push(elem.toString())}}if(stateArr.length!==state.length){break}resultObj.setOCGState={state:stateArr,preserveRB:typeof preserveRB===\"boolean\"?preserveRB:true};break;case\"JavaScript\":const jsAction=action.get(\"JS\");let js;if(jsAction instanceof BaseStream){js=jsAction.getString()}else if(typeof jsAction===\"string\"){js=jsAction}const jsURL=js&&recoverJsURL(stringToPDFString(js,true));if(jsURL){url=jsURL.url;resultObj.newWindow=jsURL.newWindow;break}default:if(actionName===\"JavaScript\"||actionName===\"SubmitForm\"){break}warn(`parseDestDictionary - unsupported action: \"${actionName}\".`);break}}else if(destDict.has(\"Dest\")){dest=destDict.get(\"Dest\")}if(typeof url===\"string\"){const absoluteUrl=createValidAbsoluteUrl(url,docBaseUrl,{addDefaultProtocol:true,tryConvertEncoding:true});if(absoluteUrl){resultObj.url=absoluteUrl.href}resultObj.unsafeUrl=url}if(dest){if(dest instanceof Name){dest=dest.name}if(typeof dest===\"string\"){resultObj.dest=stringToPDFString(dest,true)}else if(isValidExplicitDest(dest)){resultObj.dest=dest}}}}function mayHaveChildren(value){return value instanceof Ref||value instanceof Dict||value instanceof BaseStream||Array.isArray(value)}function addChildren(node,nodesToVisit){if(node instanceof Dict){node=node.getRawValues()}else if(node instanceof BaseStream){node=node.dict.getRawValues()}else if(!Array.isArray(node)){return}for(const rawValue of node){if(mayHaveChildren(rawValue)){nodesToVisit.push(rawValue)}}}class ObjectLoader{refSet=new RefSet;constructor(dict,keys,xref){this.dict=dict;this.keys=keys;this.xref=xref}async load(){const{keys:keys,dict:dict}=this;const nodesToVisit=[];for(const key of keys){const rawValue=dict.getRaw(key);if(rawValue!==undefined){nodesToVisit.push(rawValue)}}await this.#walk(nodesToVisit);this.refSet=null}async#walk(nodesToVisit){const nodesToRevisit=[];const pendingRequests=[];while(nodesToVisit.length){let currentNode=nodesToVisit.pop();if(currentNode instanceof Ref){if(this.refSet.has(currentNode)){continue}try{this.refSet.put(currentNode);currentNode=this.xref.fetch(currentNode)}catch(ex){if(!(ex instanceof MissingDataException)){warn(`ObjectLoader.#walk - requesting all data: \"${ex}\".`);await this.xref.stream.manager.requestAllChunks();return}nodesToRevisit.push(currentNode);pendingRequests.push({begin:ex.begin,end:ex.end})}}if(currentNode instanceof BaseStream){const baseStreams=currentNode.getBaseStreams();if(baseStreams){let foundMissingData=false;for(const stream of baseStreams){if(stream.isDataLoaded){continue}foundMissingData=true;pendingRequests.push({begin:stream.start,end:stream.end})}if(foundMissingData){nodesToRevisit.push(currentNode)}}}addChildren(currentNode,nodesToVisit)}if(pendingRequests.length){await this.xref.stream.manager.requestRanges(pendingRequests);for(const node of nodesToRevisit){if(node instanceof Ref){this.refSet.remove(node)}}await this.#walk(nodesToRevisit)}}static async load(obj,keys,xref){if(xref.stream.isDataLoaded){return}const objLoader=new ObjectLoader(obj,keys,xref);await objLoader.load()}}const $acceptWhitespace=Symbol();const $addHTML=Symbol();const $appendChild=Symbol();const $childrenToHTML=Symbol();const $clean=Symbol();const $cleanPage=Symbol();const $cleanup=Symbol();const $clone=Symbol();const $consumed=Symbol();const $content=Symbol(\"content\");const $data=Symbol(\"data\");const $dump=Symbol();const $extra=Symbol(\"extra\");const $finalize=Symbol();const $flushHTML=Symbol();const $getAttributeIt=Symbol();const $getAttributes=Symbol();const $getAvailableSpace=Symbol();const $getChildrenByClass=Symbol();const $getChildrenByName=Symbol();const $getChildrenByNameIt=Symbol();const $getDataValue=Symbol();const $getExtra=Symbol();const $getRealChildrenByNameIt=Symbol();const $getChildren=Symbol();const $getContainedChildren=Symbol();const $getNextPage=Symbol();const $getSubformParent=Symbol();const $getParent=Symbol();const $getTemplateRoot=Symbol();const $globalData=Symbol();const $hasSettableValue=Symbol();const $ids=Symbol();const $indexOf=Symbol();const $insertAt=Symbol();const $isCDATAXml=Symbol();const $isBindable=Symbol();const $isDataValue=Symbol();const $isDescendent=Symbol();const $isNsAgnostic=Symbol();const $isSplittable=Symbol();const $isThereMoreWidth=Symbol();const $isTransparent=Symbol();const $isUsable=Symbol();const $lastAttribute=Symbol();const $namespaceId=Symbol(\"namespaceId\");const $nodeName=Symbol(\"nodeName\");const $nsAttributes=Symbol();const $onChild=Symbol();const $onChildCheck=Symbol();const $onText=Symbol();const $pushGlyphs=Symbol();const $popPara=Symbol();const $pushPara=Symbol();const $removeChild=Symbol();const $root=Symbol(\"root\");const $resolvePrototypes=Symbol();const $searchNode=Symbol();const $setId=Symbol();const $setSetAttributes=Symbol();const $setValue=Symbol();const $tabIndex=Symbol();const $text=Symbol();const $toPages=Symbol();const $toHTML=Symbol();const $toString=Symbol();const $toStyle=Symbol();const $uid=Symbol(\"uid\");const $buildXFAObject=Symbol();const NamespaceIds={config:{id:0,check:ns=>ns.startsWith(\"http://www.xfa.org/schema/xci/\")},connectionSet:{id:1,check:ns=>ns.startsWith(\"http://www.xfa.org/schema/xfa-connection-set/\")},datasets:{id:2,check:ns=>ns.startsWith(\"http://www.xfa.org/schema/xfa-data/\")},form:{id:3,check:ns=>ns.startsWith(\"http://www.xfa.org/schema/xfa-form/\")},localeSet:{id:4,check:ns=>ns.startsWith(\"http://www.xfa.org/schema/xfa-locale-set/\")},pdf:{id:5,check:ns=>ns===\"http://ns.adobe.com/xdp/pdf/\"},signature:{id:6,check:ns=>ns===\"http://www.w3.org/2000/09/xmldsig#\"},sourceSet:{id:7,check:ns=>ns.startsWith(\"http://www.xfa.org/schema/xfa-source-set/\")},stylesheet:{id:8,check:ns=>ns===\"http://www.w3.org/1999/XSL/Transform\"},template:{id:9,check:ns=>ns.startsWith(\"http://www.xfa.org/schema/xfa-template/\")},xdc:{id:10,check:ns=>ns.startsWith(\"http://www.xfa.org/schema/xdc/\")},xdp:{id:11,check:ns=>ns===\"http://ns.adobe.com/xdp/\"},xfdf:{id:12,check:ns=>ns===\"http://ns.adobe.com/xfdf/\"},xhtml:{id:13,check:ns=>ns===\"http://www.w3.org/1999/xhtml\"},xmpmeta:{id:14,check:ns=>ns===\"http://ns.adobe.com/xmpmeta/\"}};const dimConverters={pt:x=>x,cm:x=>x/2.54*72,mm:x=>x/(10*2.54)*72,in:x=>x*72,px:x=>x};const measurementPattern=/([+-]?\\d+\\.?\\d*)(.*)/;function stripQuotes(str){if(str.startsWith(\"'\")||str.startsWith('\"')){return str.slice(1,-1)}return str}function getInteger({data:data,defaultValue:defaultValue,validate:validate}){if(!data){return defaultValue}data=data.trim();const n=parseInt(data,10);if(!isNaN(n)&&validate(n)){return n}return defaultValue}function getFloat({data:data,defaultValue:defaultValue,validate:validate}){if(!data){return defaultValue}data=data.trim();const n=parseFloat(data);if(!isNaN(n)&&validate(n)){return n}return defaultValue}function getKeyword({data:data,defaultValue:defaultValue,validate:validate}){if(!data){return defaultValue}data=data.trim();if(validate(data)){return data}return defaultValue}function getStringOption(data,options){return getKeyword({data:data,defaultValue:options[0],validate:k=>options.includes(k)})}function getMeasurement(str,def=\"0\"){def||=\"0\";if(!str){return getMeasurement(def)}const match=str.trim().match(measurementPattern);if(!match){return getMeasurement(def)}const[,valueStr,unit]=match;const value=parseFloat(valueStr);if(isNaN(value)){return getMeasurement(def)}if(value===0){return 0}const conv=dimConverters[unit];if(conv){return conv(value)}return value}function getRatio(data){if(!data){return{num:1,den:1}}const ratio=data.split(\":\",2).map((x=>parseFloat(x.trim()))).filter((x=>!isNaN(x)));if(ratio.length===1){ratio.push(1)}if(ratio.length===0){return{num:1,den:1}}const[num,den]=ratio;return{num:num,den:den}}function getRelevant(data){if(!data){return[]}return data.trim().split(/\\s+/).map((e=>({excluded:e[0]===\"-\",viewname:e.substring(1)})))}function getColor(data,def=[0,0,0]){let[r,g,b]=def;if(!data){return{r:r,g:g,b:b}}const color=data.split(\",\",3).map((c=>MathClamp(parseInt(c.trim(),10),0,255))).map((c=>isNaN(c)?0:c));if(color.length<3){return{r:r,g:g,b:b}}[r,g,b]=color;return{r:r,g:g,b:b}}function getBBox(data){const def=-1;if(!data){return{x:def,y:def,width:def,height:def}}const bbox=data.split(\",\",4).map((m=>getMeasurement(m.trim(),\"-1\")));if(bbox.length<4||bbox[2]<0||bbox[3]<0){return{x:def,y:def,width:def,height:def}}const[x,y,width,height]=bbox;return{x:x,y:y,width:width,height:height}}class HTMLResult{static get FAILURE(){return shadow(this,\"FAILURE\",new HTMLResult(false,null,null,null))}static get EMPTY(){return shadow(this,\"EMPTY\",new HTMLResult(true,null,null,null))}constructor(success,html,bbox,breakNode){this.success=success;this.html=html;this.bbox=bbox;this.breakNode=breakNode}isBreak(){return!!this.breakNode}static breakNode(node){return new HTMLResult(false,null,null,node)}static success(html,bbox=null){return new HTMLResult(true,html,bbox,null)}}class FontFinder{constructor(pdfFonts){this.fonts=new Map;this.cache=new Map;this.warned=new Set;this.defaultFont=null;this.add(pdfFonts)}add(pdfFonts,reallyMissingFonts=null){for(const pdfFont of pdfFonts){this.addPdfFont(pdfFont)}for(const pdfFont of this.fonts.values()){if(!pdfFont.regular){pdfFont.regular=pdfFont.italic||pdfFont.bold||pdfFont.bolditalic}}if(!reallyMissingFonts||reallyMissingFonts.size===0){return}const myriad=this.fonts.get(\"PdfJS-Fallback-PdfJS-XFA\");for(const missing of reallyMissingFonts){this.fonts.set(missing,myriad)}}addPdfFont(pdfFont){const cssFontInfo=pdfFont.cssFontInfo;const name=cssFontInfo.fontFamily;let font=this.fonts.get(name);if(!font){font=Object.create(null);this.fonts.set(name,font);if(!this.defaultFont){this.defaultFont=font}}let property=\"\";const fontWeight=parseFloat(cssFontInfo.fontWeight);if(parseFloat(cssFontInfo.italicAngle)!==0){property=fontWeight>=700?\"bolditalic\":\"italic\"}else if(fontWeight>=700){property=\"bold\"}if(!property){if(pdfFont.name.includes(\"Bold\")||pdfFont.psName?.includes(\"Bold\")){property=\"bold\"}if(pdfFont.name.includes(\"Italic\")||pdfFont.name.endsWith(\"It\")||pdfFont.psName?.includes(\"Italic\")||pdfFont.psName?.endsWith(\"It\")){property+=\"italic\"}}if(!property){property=\"regular\"}font[property]=pdfFont}getDefault(){return this.defaultFont}find(fontName,mustWarn=true){let font=this.fonts.get(fontName)||this.cache.get(fontName);if(font){return font}const pattern=/,|-|_| |bolditalic|bold|italic|regular|it/gi;let name=fontName.replaceAll(pattern,\"\");font=this.fonts.get(name);if(font){this.cache.set(fontName,font);return font}name=name.toLowerCase();const maybe=[];for(const[family,pdfFont]of this.fonts.entries()){if(family.replaceAll(pattern,\"\").toLowerCase().startsWith(name)){maybe.push(pdfFont)}}if(maybe.length===0){for(const[,pdfFont]of this.fonts.entries()){if(pdfFont.regular.name?.replaceAll(pattern,\"\").toLowerCase().startsWith(name)){maybe.push(pdfFont)}}}if(maybe.length===0){name=name.replaceAll(/psmt|mt/gi,\"\");for(const[family,pdfFont]of this.fonts.entries()){if(family.replaceAll(pattern,\"\").toLowerCase().startsWith(name)){maybe.push(pdfFont)}}}if(maybe.length===0){for(const pdfFont of this.fonts.values()){if(pdfFont.regular.name?.replaceAll(pattern,\"\").toLowerCase().startsWith(name)){maybe.push(pdfFont)}}}if(maybe.length>=1){if(maybe.length!==1&&mustWarn){warn(`XFA - Too many choices to guess the correct font: ${fontName}`)}this.cache.set(fontName,maybe[0]);return maybe[0]}if(mustWarn&&!this.warned.has(fontName)){this.warned.add(fontName);warn(`XFA - Cannot find the font: ${fontName}`)}return null}}function selectFont(xfaFont,typeface){if(xfaFont.posture===\"italic\"){if(xfaFont.weight===\"bold\"){return typeface.bolditalic}return typeface.italic}else if(xfaFont.weight===\"bold\"){return typeface.bold}return typeface.regular}function fonts_getMetrics(xfaFont,real=false){let pdfFont=null;if(xfaFont){const name=stripQuotes(xfaFont.typeface);const typeface=xfaFont[$globalData].fontFinder.find(name);pdfFont=selectFont(xfaFont,typeface)}if(!pdfFont){return{lineHeight:12,lineGap:2,lineNoGap:10}}const size=xfaFont.size||10;const lineHeight=pdfFont.lineHeight?Math.max(real?0:1.2,pdfFont.lineHeight):1.2;const lineGap=pdfFont.lineGap===undefined?.2:pdfFont.lineGap;return{lineHeight:lineHeight*size,lineGap:lineGap*size,lineNoGap:Math.max(1,lineHeight-lineGap)*size}}const WIDTH_FACTOR=1.02;class FontInfo{constructor(xfaFont,margin,lineHeight,fontFinder){this.lineHeight=lineHeight;this.paraMargin=margin||{top:0,bottom:0,left:0,right:0};if(!xfaFont){[this.pdfFont,this.xfaFont]=this.defaultFont(fontFinder);return}this.xfaFont={typeface:xfaFont.typeface,posture:xfaFont.posture,weight:xfaFont.weight,size:xfaFont.size,letterSpacing:xfaFont.letterSpacing};const typeface=fontFinder.find(xfaFont.typeface);if(!typeface){[this.pdfFont,this.xfaFont]=this.defaultFont(fontFinder);return}this.pdfFont=selectFont(xfaFont,typeface);if(!this.pdfFont){[this.pdfFont,this.xfaFont]=this.defaultFont(fontFinder)}}defaultFont(fontFinder){const font=fontFinder.find(\"Helvetica\",false)||fontFinder.find(\"Myriad Pro\",false)||fontFinder.find(\"Arial\",false)||fontFinder.getDefault();if(font?.regular){const pdfFont=font.regular;const info=pdfFont.cssFontInfo;const xfaFont={typeface:info.fontFamily,posture:\"normal\",weight:\"normal\",size:10,letterSpacing:0};return[pdfFont,xfaFont]}const xfaFont={typeface:\"Courier\",posture:\"normal\",weight:\"normal\",size:10,letterSpacing:0};return[null,xfaFont]}}class FontSelector{constructor(defaultXfaFont,defaultParaMargin,defaultLineHeight,fontFinder){this.fontFinder=fontFinder;this.stack=[new FontInfo(defaultXfaFont,defaultParaMargin,defaultLineHeight,fontFinder)]}pushData(xfaFont,margin,lineHeight){const lastFont=this.stack.at(-1);for(const name of[\"typeface\",\"posture\",\"weight\",\"size\",\"letterSpacing\"]){if(!xfaFont[name]){xfaFont[name]=lastFont.xfaFont[name]}}for(const name of[\"top\",\"bottom\",\"left\",\"right\"]){if(isNaN(margin[name])){margin[name]=lastFont.paraMargin[name]}}const fontInfo=new FontInfo(xfaFont,margin,lineHeight||lastFont.lineHeight,this.fontFinder);if(!fontInfo.pdfFont){fontInfo.pdfFont=lastFont.pdfFont}this.stack.push(fontInfo)}popFont(){this.stack.pop()}topFont(){return this.stack.at(-1)}}class TextMeasure{constructor(defaultXfaFont,defaultParaMargin,defaultLineHeight,fonts){this.glyphs=[];this.fontSelector=new FontSelector(defaultXfaFont,defaultParaMargin,defaultLineHeight,fonts);this.extraHeight=0}pushData(xfaFont,margin,lineHeight){this.fontSelector.pushData(xfaFont,margin,lineHeight)}popFont(xfaFont){return this.fontSelector.popFont()}addPara(){const lastFont=this.fontSelector.topFont();this.extraHeight+=lastFont.paraMargin.top+lastFont.paraMargin.bottom}addString(str){if(!str){return}const lastFont=this.fontSelector.topFont();const fontSize=lastFont.xfaFont.size;if(lastFont.pdfFont){const letterSpacing=lastFont.xfaFont.letterSpacing;const pdfFont=lastFont.pdfFont;const fontLineHeight=pdfFont.lineHeight||1.2;const lineHeight=lastFont.lineHeight||Math.max(1.2,fontLineHeight)*fontSize;const lineGap=pdfFont.lineGap===undefined?.2:pdfFont.lineGap;const noGap=fontLineHeight-lineGap;const firstLineHeight=Math.max(1,noGap)*fontSize;const scale=fontSize/1e3;const fallbackWidth=pdfFont.defaultWidth||pdfFont.charsToGlyphs(\" \")[0].width;for(const line of str.split(/[\\u2029\\n]/)){const encodedLine=pdfFont.encodeString(line).join(\"\");const glyphs=pdfFont.charsToGlyphs(encodedLine);for(const glyph of glyphs){const width=glyph.width||fallbackWidth;this.glyphs.push([width*scale+letterSpacing,lineHeight,firstLineHeight,glyph.unicode,false])}this.glyphs.push([0,0,0,\"\\n\",true])}this.glyphs.pop();return}for(const line of str.split(/[\\u2029\\n]/)){for(const char of line.split(\"\")){this.glyphs.push([fontSize,1.2*fontSize,fontSize,char,false])}this.glyphs.push([0,0,0,\"\\n\",true])}this.glyphs.pop()}compute(maxWidth){let lastSpacePos=-1,lastSpaceWidth=0,width=0,height=0,currentLineWidth=0,currentLineHeight=0;let isBroken=false;let isFirstLine=true;for(let i=0,ii=this.glyphs.length;i<ii;i++){const[glyphWidth,lineHeight,firstLineHeight,char,isEOL]=this.glyphs[i];const isSpace=char===\" \";const glyphHeight=isFirstLine?firstLineHeight:lineHeight;if(isEOL){width=Math.max(width,currentLineWidth);currentLineWidth=0;height+=currentLineHeight;currentLineHeight=glyphHeight;lastSpacePos=-1;lastSpaceWidth=0;isFirstLine=false;continue}if(isSpace){if(currentLineWidth+glyphWidth>maxWidth){width=Math.max(width,currentLineWidth);currentLineWidth=0;height+=currentLineHeight;currentLineHeight=glyphHeight;lastSpacePos=-1;lastSpaceWidth=0;isBroken=true;isFirstLine=false}else{currentLineHeight=Math.max(glyphHeight,currentLineHeight);lastSpaceWidth=currentLineWidth;currentLineWidth+=glyphWidth;lastSpacePos=i}continue}if(currentLineWidth+glyphWidth>maxWidth){height+=currentLineHeight;currentLineHeight=glyphHeight;if(lastSpacePos!==-1){i=lastSpacePos;width=Math.max(width,lastSpaceWidth);currentLineWidth=0;lastSpacePos=-1;lastSpaceWidth=0}else{width=Math.max(width,currentLineWidth);currentLineWidth=glyphWidth}isBroken=true;isFirstLine=false;continue}currentLineWidth+=glyphWidth;currentLineHeight=Math.max(glyphHeight,currentLineHeight)}width=Math.max(width,currentLineWidth);height+=currentLineHeight+this.extraHeight;return{width:WIDTH_FACTOR*width,height:height,isBroken:isBroken}}}const namePattern=/^[^.[]+/;const indexPattern=/^[^\\]]+/;const operators={dot:0,dotDot:1,dotHash:2,dotBracket:3,dotParen:4};const shortcuts=new Map([[\"$data\",(root,current)=>root.datasets?root.datasets.data:root],[\"$record\",(root,current)=>(root.datasets?root.datasets.data:root)[$getChildren]()[0]],[\"$template\",(root,current)=>root.template],[\"$connectionSet\",(root,current)=>root.connectionSet],[\"$form\",(root,current)=>root.form],[\"$layout\",(root,current)=>root.layout],[\"$host\",(root,current)=>root.host],[\"$dataWindow\",(root,current)=>root.dataWindow],[\"$event\",(root,current)=>root.event],[\"!\",(root,current)=>root.datasets],[\"$xfa\",(root,current)=>root],[\"xfa\",(root,current)=>root],[\"$\",(root,current)=>current]]);const somCache=new WeakMap;function parseIndex(index){index=index.trim();if(index===\"*\"){return Infinity}return parseInt(index,10)||0}function parseExpression(expr,dotDotAllowed,noExpr=true){let match=expr.match(namePattern);if(!match){return null}let[name]=match;const parsed=[{name:name,cacheName:\".\"+name,index:0,js:null,formCalc:null,operator:operators.dot}];let pos=name.length;while(pos<expr.length){const spos=pos;const char=expr.charAt(pos++);if(char===\"[\"){match=expr.slice(pos).match(indexPattern);if(!match){warn(\"XFA - Invalid index in SOM expression\");return null}parsed.at(-1).index=parseIndex(match[0]);pos+=match[0].length+1;continue}let operator;switch(expr.charAt(pos)){case\".\":if(!dotDotAllowed){return null}pos++;operator=operators.dotDot;break;case\"#\":pos++;operator=operators.dotHash;break;case\"[\":if(noExpr){warn(\"XFA - SOM expression contains a FormCalc subexpression which is not supported for now.\");return null}operator=operators.dotBracket;break;case\"(\":if(noExpr){warn(\"XFA - SOM expression contains a JavaScript subexpression which is not supported for now.\");return null}operator=operators.dotParen;break;default:operator=operators.dot;break}match=expr.slice(pos).match(namePattern);if(!match){break}[name]=match;pos+=name.length;parsed.push({name:name,cacheName:expr.slice(spos,pos),operator:operator,index:0,js:null,formCalc:null})}return parsed}function searchNode(root,container,expr,dotDotAllowed=true,useCache=true){const parsed=parseExpression(expr,dotDotAllowed);if(!parsed){return null}const fn=shortcuts.get(parsed[0].name);let i=0;let isQualified;if(fn){isQualified=true;root=[fn(root,container)];i=1}else{isQualified=container===null;root=[container||root]}for(let ii=parsed.length;i<ii;i++){const{name:name,cacheName:cacheName,operator:operator,index:index}=parsed[i];const nodes=[];for(const node of root){if(!node.isXFAObject){continue}let children,cached;if(useCache){cached=somCache.get(node);if(!cached){cached=new Map;somCache.set(node,cached)}children=cached.get(cacheName)}if(!children){switch(operator){case operators.dot:children=node[$getChildrenByName](name,false);break;case operators.dotDot:children=node[$getChildrenByName](name,true);break;case operators.dotHash:children=node[$getChildrenByClass](name);children=children.isXFAObjectArray?children.children:[children];break;default:break}if(useCache){cached.set(cacheName,children)}}if(children.length>0){nodes.push(children)}}if(nodes.length===0&&!isQualified&&i===0){const parent=container[$getParent]();container=parent;if(!container){return null}i=-1;root=[container];continue}root=isFinite(index)?nodes.filter((node=>index<node.length)).map((node=>node[index])):nodes.flat()}if(root.length===0){return null}return root}function createDataNode(root,container,expr){const parsed=parseExpression(expr);if(!parsed){return null}if(parsed.some((x=>x.operator===operators.dotDot))){return null}const fn=shortcuts.get(parsed[0].name);let i=0;if(fn){root=fn(root,container);i=1}else{root=container||root}for(let ii=parsed.length;i<ii;i++){const{name:name,operator:operator,index:index}=parsed[i];if(!isFinite(index)){parsed[i].index=0;return root.createNodes(parsed.slice(i))}let children;switch(operator){case operators.dot:children=root[$getChildrenByName](name,false);break;case operators.dotDot:children=root[$getChildrenByName](name,true);break;case operators.dotHash:children=root[$getChildrenByClass](name);children=children.isXFAObjectArray?children.children:[children];break;default:break}if(children.length===0){return root.createNodes(parsed.slice(i))}if(index<children.length){const child=children[index];if(!child.isXFAObject){warn(`XFA - Cannot create a node.`);return null}root=child}else{parsed[i].index=index-children.length;return root.createNodes(parsed.slice(i))}}return null}const _applyPrototype=Symbol();const _attributes=Symbol();const _attributeNames=Symbol();const _children=Symbol(\"_children\");const _cloneAttribute=Symbol();const _dataValue=Symbol();const _defaultValue=Symbol();const _filteredChildrenGenerator=Symbol();const _getPrototype=Symbol();const _getUnsetAttributes=Symbol();const _hasChildren=Symbol();const _max=Symbol();const _options=Symbol();const _parent=Symbol(\"parent\");const _resolvePrototypesHelper=Symbol();const _setAttributes=Symbol();const _validator=Symbol();let uid=0;const NS_DATASETS=NamespaceIds.datasets.id;class XFAObject{constructor(nsId,name,hasChildren=false){this[$namespaceId]=nsId;this[$nodeName]=name;this[_hasChildren]=hasChildren;this[_parent]=null;this[_children]=[];this[$uid]=`${name}${uid++}`;this[$globalData]=null}get isXFAObject(){return true}get isXFAObjectArray(){return false}createNodes(path){let root=this,node=null;for(const{name:name,index:index}of path){for(let i=0,ii=isFinite(index)?index:0;i<=ii;i++){const nsId=root[$namespaceId]===NS_DATASETS?-1:root[$namespaceId];node=new XmlObject(nsId,name);root[$appendChild](node)}root=node}return node}[$onChild](child){if(!this[_hasChildren]||!this[$onChildCheck](child)){return false}const name=child[$nodeName];const node=this[name];if(node instanceof XFAObjectArray){if(node.push(child)){this[$appendChild](child);return true}}else{if(node!==null){this[$removeChild](node)}this[name]=child;this[$appendChild](child);return true}let id=\"\";if(this.id){id=` (id: ${this.id})`}else if(this.name){id=` (name: ${this.name} ${this.h.value})`}warn(`XFA - node \"${this[$nodeName]}\"${id} has already enough \"${name}\"!`);return false}[$onChildCheck](child){return this.hasOwnProperty(child[$nodeName])&&child[$namespaceId]===this[$namespaceId]}[$isNsAgnostic](){return false}[$acceptWhitespace](){return false}[$isCDATAXml](){return false}[$isBindable](){return false}[$popPara](){if(this.para){this[$getTemplateRoot]()[$extra].paraStack.pop()}}[$pushPara](){this[$getTemplateRoot]()[$extra].paraStack.push(this.para)}[$setId](ids){if(this.id&&this[$namespaceId]===NamespaceIds.template.id){ids.set(this.id,this)}}[$getTemplateRoot](){return this[$globalData].template}[$isSplittable](){return false}[$isThereMoreWidth](){return false}[$appendChild](child){child[_parent]=this;this[_children].push(child);if(!child[$globalData]&&this[$globalData]){child[$globalData]=this[$globalData]}}[$removeChild](child){const i=this[_children].indexOf(child);this[_children].splice(i,1)}[$hasSettableValue](){return this.hasOwnProperty(\"value\")}[$setValue](_){}[$onText](_){}[$finalize](){}[$clean](builder){delete this[_hasChildren];if(this[$cleanup]){builder.clean(this[$cleanup]);delete this[$cleanup]}}[$indexOf](child){return this[_children].indexOf(child)}[$insertAt](i,child){child[_parent]=this;this[_children].splice(i,0,child);if(!child[$globalData]&&this[$globalData]){child[$globalData]=this[$globalData]}}[$isTransparent](){return!this.name}[$lastAttribute](){return\"\"}[$text](){if(this[_children].length===0){return this[$content]}return this[_children].map((c=>c[$text]())).join(\"\")}get[_attributeNames](){const proto=Object.getPrototypeOf(this);if(!proto._attributes){const attributes=proto._attributes=new Set;for(const name of Object.getOwnPropertyNames(this)){if(this[name]===null||this[name]instanceof XFAObject||this[name]instanceof XFAObjectArray){break}attributes.add(name)}}return shadow(this,_attributeNames,proto._attributes)}[$isDescendent](parent){let node=this;while(node){if(node===parent){return true}node=node[$getParent]()}return false}[$getParent](){return this[_parent]}[$getSubformParent](){return this[$getParent]()}[$getChildren](name=null){if(!name){return this[_children]}return this[name]}[$dump](){const dumped=Object.create(null);if(this[$content]){dumped.$content=this[$content]}for(const name of Object.getOwnPropertyNames(this)){const value=this[name];if(value===null){continue}if(value instanceof XFAObject){dumped[name]=value[$dump]()}else if(value instanceof XFAObjectArray){if(!value.isEmpty()){dumped[name]=value.dump()}}else{dumped[name]=value}}return dumped}[$toStyle](){return null}[$toHTML](){return HTMLResult.EMPTY}*[$getContainedChildren](){for(const node of this[$getChildren]()){yield node}}*[_filteredChildrenGenerator](filter,include){for(const node of this[$getContainedChildren]()){if(!filter||include===filter.has(node[$nodeName])){const availableSpace=this[$getAvailableSpace]();const res=node[$toHTML](availableSpace);if(!res.success){this[$extra].failingNode=node}yield res}}}[$flushHTML](){return null}[$addHTML](html,bbox){this[$extra].children.push(html)}[$getAvailableSpace](){}[$childrenToHTML]({filter:filter=null,include:include=true}){if(!this[$extra].generator){this[$extra].generator=this[_filteredChildrenGenerator](filter,include)}else{const availableSpace=this[$getAvailableSpace]();const res=this[$extra].failingNode[$toHTML](availableSpace);if(!res.success){return res}if(res.html){this[$addHTML](res.html,res.bbox)}delete this[$extra].failingNode}while(true){const gen=this[$extra].generator.next();if(gen.done){break}const res=gen.value;if(!res.success){return res}if(res.html){this[$addHTML](res.html,res.bbox)}}this[$extra].generator=null;return HTMLResult.EMPTY}[$setSetAttributes](attributes){this[_setAttributes]=new Set(Object.keys(attributes))}[_getUnsetAttributes](protoAttributes){const allAttr=this[_attributeNames];const setAttr=this[_setAttributes];return[...protoAttributes].filter((x=>allAttr.has(x)&&!setAttr.has(x)))}[$resolvePrototypes](ids,ancestors=new Set){for(const child of this[_children]){child[_resolvePrototypesHelper](ids,ancestors)}}[_resolvePrototypesHelper](ids,ancestors){const proto=this[_getPrototype](ids,ancestors);if(proto){this[_applyPrototype](proto,ids,ancestors)}else{this[$resolvePrototypes](ids,ancestors)}}[_getPrototype](ids,ancestors){const{use:use,usehref:usehref}=this;if(!use&&!usehref){return null}let proto=null;let somExpression=null;let id=null;let ref=use;if(usehref){ref=usehref;if(usehref.startsWith(\"#som(\")&&usehref.endsWith(\")\")){somExpression=usehref.slice(\"#som(\".length,-1)}else if(usehref.startsWith(\".#som(\")&&usehref.endsWith(\")\")){somExpression=usehref.slice(\".#som(\".length,-1)}else if(usehref.startsWith(\"#\")){id=usehref.slice(1)}else if(usehref.startsWith(\".#\")){id=usehref.slice(2)}}else if(use.startsWith(\"#\")){id=use.slice(1)}else{somExpression=use}this.use=this.usehref=\"\";if(id){proto=ids.get(id)}else{proto=searchNode(ids.get($root),this,somExpression,true,false);if(proto){proto=proto[0]}}if(!proto){warn(`XFA - Invalid prototype reference: ${ref}.`);return null}if(proto[$nodeName]!==this[$nodeName]){warn(`XFA - Incompatible prototype: ${proto[$nodeName]} !== ${this[$nodeName]}.`);return null}if(ancestors.has(proto)){warn(`XFA - Cycle detected in prototypes use.`);return null}ancestors.add(proto);const protoProto=proto[_getPrototype](ids,ancestors);if(protoProto){proto[_applyPrototype](protoProto,ids,ancestors)}proto[$resolvePrototypes](ids,ancestors);ancestors.delete(proto);return proto}[_applyPrototype](proto,ids,ancestors){if(ancestors.has(proto)){warn(`XFA - Cycle detected in prototypes use.`);return}if(!this[$content]&&proto[$content]){this[$content]=proto[$content]}const newAncestors=new Set(ancestors);newAncestors.add(proto);for(const unsetAttrName of this[_getUnsetAttributes](proto[_setAttributes])){this[unsetAttrName]=proto[unsetAttrName];if(this[_setAttributes]){this[_setAttributes].add(unsetAttrName)}}for(const name of Object.getOwnPropertyNames(this)){if(this[_attributeNames].has(name)){continue}const value=this[name];const protoValue=proto[name];if(value instanceof XFAObjectArray){for(const child of value[_children]){child[_resolvePrototypesHelper](ids,ancestors)}for(let i=value[_children].length,ii=protoValue[_children].length;i<ii;i++){const child=proto[_children][i][$clone]();if(value.push(child)){child[_parent]=this;this[_children].push(child);child[_resolvePrototypesHelper](ids,ancestors)}else{break}}continue}if(value!==null){value[$resolvePrototypes](ids,ancestors);if(protoValue){value[_applyPrototype](protoValue,ids,ancestors)}continue}if(protoValue!==null){const child=protoValue[$clone]();child[_parent]=this;this[name]=child;this[_children].push(child);child[_resolvePrototypesHelper](ids,ancestors)}}}static[_cloneAttribute](obj){if(Array.isArray(obj)){return obj.map((x=>XFAObject[_cloneAttribute](x)))}if(typeof obj===\"object\"&&obj!==null){return Object.assign({},obj)}return obj}[$clone](){const clone=Object.create(Object.getPrototypeOf(this));for(const $symbol of Object.getOwnPropertySymbols(this)){try{clone[$symbol]=this[$symbol]}catch{shadow(clone,$symbol,this[$symbol])}}clone[$uid]=`${clone[$nodeName]}${uid++}`;clone[_children]=[];for(const name of Object.getOwnPropertyNames(this)){if(this[_attributeNames].has(name)){clone[name]=XFAObject[_cloneAttribute](this[name]);continue}const value=this[name];clone[name]=value instanceof XFAObjectArray?new XFAObjectArray(value[_max]):null}for(const child of this[_children]){const name=child[$nodeName];const clonedChild=child[$clone]();clone[_children].push(clonedChild);clonedChild[_parent]=clone;if(clone[name]===null){clone[name]=clonedChild}else{clone[name][_children].push(clonedChild)}}return clone}[$getChildren](name=null){if(!name){return this[_children]}return this[_children].filter((c=>c[$nodeName]===name))}[$getChildrenByClass](name){return this[name]}[$getChildrenByName](name,allTransparent,first=true){return Array.from(this[$getChildrenByNameIt](name,allTransparent,first))}*[$getChildrenByNameIt](name,allTransparent,first=true){if(name===\"parent\"){yield this[_parent];return}for(const child of this[_children]){if(child[$nodeName]===name){yield child}if(child.name===name){yield child}if(allTransparent||child[$isTransparent]()){yield*child[$getChildrenByNameIt](name,allTransparent,false)}}if(first&&this[_attributeNames].has(name)){yield new XFAAttribute(this,name,this[name])}}}class XFAObjectArray{constructor(max=Infinity){this[_max]=max;this[_children]=[]}get isXFAObject(){return false}get isXFAObjectArray(){return true}push(child){const len=this[_children].length;if(len<=this[_max]){this[_children].push(child);return true}warn(`XFA - node \"${child[$nodeName]}\" accepts no more than ${this[_max]} children`);return false}isEmpty(){return this[_children].length===0}dump(){return this[_children].length===1?this[_children][0][$dump]():this[_children].map((x=>x[$dump]()))}[$clone](){const clone=new XFAObjectArray(this[_max]);clone[_children]=this[_children].map((c=>c[$clone]()));return clone}get children(){return this[_children]}clear(){this[_children].length=0}}class XFAAttribute{constructor(node,name,value){this[_parent]=node;this[$nodeName]=name;this[$content]=value;this[$consumed]=false;this[$uid]=`attribute${uid++}`}[$getParent](){return this[_parent]}[$isDataValue](){return true}[$getDataValue](){return this[$content].trim()}[$setValue](value){value=value.value||\"\";this[$content]=value.toString()}[$text](){return this[$content]}[$isDescendent](parent){return this[_parent]===parent||this[_parent][$isDescendent](parent)}}class XmlObject extends XFAObject{constructor(nsId,name,attributes={}){super(nsId,name);this[$content]=\"\";this[_dataValue]=null;if(name!==\"#text\"){const map=new Map;this[_attributes]=map;for(const[attrName,value]of Object.entries(attributes)){map.set(attrName,new XFAAttribute(this,attrName,value))}if(attributes.hasOwnProperty($nsAttributes)){const dataNode=attributes[$nsAttributes].xfa.dataNode;if(dataNode!==undefined){if(dataNode===\"dataGroup\"){this[_dataValue]=false}else if(dataNode===\"dataValue\"){this[_dataValue]=true}}}}this[$consumed]=false}[$toString](buf){const tagName=this[$nodeName];if(tagName===\"#text\"){buf.push(encodeToXmlString(this[$content]));return}const utf8TagName=utf8StringToString(tagName);const prefix=this[$namespaceId]===NS_DATASETS?\"xfa:\":\"\";buf.push(`<${prefix}${utf8TagName}`);for(const[name,value]of this[_attributes].entries()){const utf8Name=utf8StringToString(name);buf.push(` ${utf8Name}=\"${encodeToXmlString(value[$content])}\"`)}if(this[_dataValue]!==null){if(this[_dataValue]){buf.push(` xfa:dataNode=\"dataValue\"`)}else{buf.push(` xfa:dataNode=\"dataGroup\"`)}}if(!this[$content]&&this[_children].length===0){buf.push(\"/>\");return}buf.push(\">\");if(this[$content]){if(typeof this[$content]===\"string\"){buf.push(encodeToXmlString(this[$content]))}else{this[$content][$toString](buf)}}else{for(const child of this[_children]){child[$toString](buf)}}buf.push(`</${prefix}${utf8TagName}>`)}[$onChild](child){if(this[$content]){const node=new XmlObject(this[$namespaceId],\"#text\");this[$appendChild](node);node[$content]=this[$content];this[$content]=\"\"}this[$appendChild](child);return true}[$onText](str){this[$content]+=str}[$finalize](){if(this[$content]&&this[_children].length>0){const node=new XmlObject(this[$namespaceId],\"#text\");this[$appendChild](node);node[$content]=this[$content];delete this[$content]}}[$toHTML](){if(this[$nodeName]===\"#text\"){return HTMLResult.success({name:\"#text\",value:this[$content]})}return HTMLResult.EMPTY}[$getChildren](name=null){if(!name){return this[_children]}return this[_children].filter((c=>c[$nodeName]===name))}[$getAttributes](){return this[_attributes]}[$getChildrenByClass](name){const value=this[_attributes].get(name);if(value!==undefined){return value}return this[$getChildren](name)}*[$getChildrenByNameIt](name,allTransparent){const value=this[_attributes].get(name);if(value){yield value}for(const child of this[_children]){if(child[$nodeName]===name){yield child}if(allTransparent){yield*child[$getChildrenByNameIt](name,allTransparent)}}}*[$getAttributeIt](name,skipConsumed){const value=this[_attributes].get(name);if(value&&(!skipConsumed||!value[$consumed])){yield value}for(const child of this[_children]){yield*child[$getAttributeIt](name,skipConsumed)}}*[$getRealChildrenByNameIt](name,allTransparent,skipConsumed){for(const child of this[_children]){if(child[$nodeName]===name&&(!skipConsumed||!child[$consumed])){yield child}if(allTransparent){yield*child[$getRealChildrenByNameIt](name,allTransparent,skipConsumed)}}}[$isDataValue](){if(this[_dataValue]===null){return this[_children].length===0||this[_children][0][$namespaceId]===NamespaceIds.xhtml.id}return this[_dataValue]}[$getDataValue](){if(this[_dataValue]===null){if(this[_children].length===0){return this[$content].trim()}if(this[_children][0][$namespaceId]===NamespaceIds.xhtml.id){return this[_children][0][$text]().trim()}return null}return this[$content].trim()}[$setValue](value){value=value.value||\"\";this[$content]=value.toString()}[$dump](hasNS=false){const dumped=Object.create(null);if(hasNS){dumped.$ns=this[$namespaceId]}if(this[$content]){dumped.$content=this[$content]}dumped.$name=this[$nodeName];dumped.children=[];for(const child of this[_children]){dumped.children.push(child[$dump](hasNS))}dumped.attributes=Object.create(null);for(const[name,value]of this[_attributes]){dumped.attributes[name]=value[$content]}return dumped}}class ContentObject extends XFAObject{constructor(nsId,name){super(nsId,name);this[$content]=\"\"}[$onText](text){this[$content]+=text}[$finalize](){}}class OptionObject extends ContentObject{constructor(nsId,name,options){super(nsId,name);this[_options]=options}[$finalize](){this[$content]=getKeyword({data:this[$content],defaultValue:this[_options][0],validate:k=>this[_options].includes(k)})}[$clean](builder){super[$clean](builder);delete this[_options]}}class StringObject extends ContentObject{[$finalize](){this[$content]=this[$content].trim()}}class IntegerObject extends ContentObject{constructor(nsId,name,defaultValue,validator){super(nsId,name);this[_defaultValue]=defaultValue;this[_validator]=validator}[$finalize](){this[$content]=getInteger({data:this[$content],defaultValue:this[_defaultValue],validate:this[_validator]})}[$clean](builder){super[$clean](builder);delete this[_defaultValue];delete this[_validator]}}class Option01 extends IntegerObject{constructor(nsId,name){super(nsId,name,0,(n=>n===1))}}class Option10 extends IntegerObject{constructor(nsId,name){super(nsId,name,1,(n=>n===0))}}function measureToString(m){if(typeof m===\"string\"){return\"0px\"}return Number.isInteger(m)?`${m}px`:`${m.toFixed(2)}px`}const converters={anchorType(node,style){const parent=node[$getSubformParent]();if(!parent||parent.layout&&parent.layout!==\"position\"){return}if(!(\"transform\"in style)){style.transform=\"\"}switch(node.anchorType){case\"bottomCenter\":style.transform+=\"translate(-50%, -100%)\";break;case\"bottomLeft\":style.transform+=\"translate(0,-100%)\";break;case\"bottomRight\":style.transform+=\"translate(-100%,-100%)\";break;case\"middleCenter\":style.transform+=\"translate(-50%,-50%)\";break;case\"middleLeft\":style.transform+=\"translate(0,-50%)\";break;case\"middleRight\":style.transform+=\"translate(-100%,-50%)\";break;case\"topCenter\":style.transform+=\"translate(-50%,0)\";break;case\"topRight\":style.transform+=\"translate(-100%,0)\";break}},dimensions(node,style){const parent=node[$getSubformParent]();let width=node.w;const height=node.h;if(parent.layout?.includes(\"row\")){const extra=parent[$extra];const colSpan=node.colSpan;let w;if(colSpan===-1){w=Math.sumPrecise(extra.columnWidths.slice(extra.currentColumn));extra.currentColumn=0}else{w=Math.sumPrecise(extra.columnWidths.slice(extra.currentColumn,extra.currentColumn+colSpan));extra.currentColumn=(extra.currentColumn+node.colSpan)%extra.columnWidths.length}if(!isNaN(w)){width=node.w=w}}style.width=width!==\"\"?measureToString(width):\"auto\";style.height=height!==\"\"?measureToString(height):\"auto\"},position(node,style){const parent=node[$getSubformParent]();if(parent?.layout&&parent.layout!==\"position\"){return}style.position=\"absolute\";style.left=measureToString(node.x);style.top=measureToString(node.y)},rotate(node,style){if(node.rotate){if(!(\"transform\"in style)){style.transform=\"\"}style.transform+=`rotate(-${node.rotate}deg)`;style.transformOrigin=\"top left\"}},presence(node,style){switch(node.presence){case\"invisible\":style.visibility=\"hidden\";break;case\"hidden\":case\"inactive\":style.display=\"none\";break}},hAlign(node,style){if(node[$nodeName]===\"para\"){switch(node.hAlign){case\"justifyAll\":style.textAlign=\"justify-all\";break;case\"radix\":style.textAlign=\"left\";break;default:style.textAlign=node.hAlign}}else{switch(node.hAlign){case\"left\":style.alignSelf=\"start\";break;case\"center\":style.alignSelf=\"center\";break;case\"right\":style.alignSelf=\"end\";break}}},margin(node,style){if(node.margin){style.margin=node.margin[$toStyle]().margin}}};function setMinMaxDimensions(node,style){const parent=node[$getSubformParent]();if(parent.layout===\"position\"){if(node.minW>0){style.minWidth=measureToString(node.minW)}if(node.maxW>0){style.maxWidth=measureToString(node.maxW)}if(node.minH>0){style.minHeight=measureToString(node.minH)}if(node.maxH>0){style.maxHeight=measureToString(node.maxH)}}}function layoutText(text,xfaFont,margin,lineHeight,fontFinder,width){const measure=new TextMeasure(xfaFont,margin,lineHeight,fontFinder);if(typeof text===\"string\"){measure.addString(text)}else{text[$pushGlyphs](measure)}return measure.compute(width)}function layoutNode(node,availableSpace){let height=null;let width=null;let isBroken=false;if((!node.w||!node.h)&&node.value){let marginH=0;let marginV=0;if(node.margin){marginH=node.margin.leftInset+node.margin.rightInset;marginV=node.margin.topInset+node.margin.bottomInset}let lineHeight=null;let margin=null;if(node.para){margin=Object.create(null);lineHeight=node.para.lineHeight===\"\"?null:node.para.lineHeight;margin.top=node.para.spaceAbove===\"\"?0:node.para.spaceAbove;margin.bottom=node.para.spaceBelow===\"\"?0:node.para.spaceBelow;margin.left=node.para.marginLeft===\"\"?0:node.para.marginLeft;margin.right=node.para.marginRight===\"\"?0:node.para.marginRight}let font=node.font;if(!font){const root=node[$getTemplateRoot]();let parent=node[$getParent]();while(parent&&parent!==root){if(parent.font){font=parent.font;break}parent=parent[$getParent]()}}const maxWidth=(node.w||availableSpace.width)-marginH;const fontFinder=node[$globalData].fontFinder;if(node.value.exData&&node.value.exData[$content]&&node.value.exData.contentType===\"text/html\"){const res=layoutText(node.value.exData[$content],font,margin,lineHeight,fontFinder,maxWidth);width=res.width;height=res.height;isBroken=res.isBroken}else{const text=node.value[$text]();if(text){const res=layoutText(text,font,margin,lineHeight,fontFinder,maxWidth);width=res.width;height=res.height;isBroken=res.isBroken}}if(width!==null&&!node.w){width+=marginH}if(height!==null&&!node.h){height+=marginV}}return{w:width,h:height,isBroken:isBroken}}function computeBbox(node,html,availableSpace){let bbox;if(node.w!==\"\"&&node.h!==\"\"){bbox=[node.x,node.y,node.w,node.h]}else{if(!availableSpace){return null}let width=node.w;if(width===\"\"){if(node.maxW===0){const parent=node[$getSubformParent]();width=parent.layout===\"position\"&&parent.w!==\"\"?0:node.minW}else{width=Math.min(node.maxW,availableSpace.width)}html.attributes.style.width=measureToString(width)}let height=node.h;if(height===\"\"){if(node.maxH===0){const parent=node[$getSubformParent]();height=parent.layout===\"position\"&&parent.h!==\"\"?0:node.minH}else{height=Math.min(node.maxH,availableSpace.height)}html.attributes.style.height=measureToString(height)}bbox=[node.x,node.y,width,height]}return bbox}function fixDimensions(node){const parent=node[$getSubformParent]();if(parent.layout?.includes(\"row\")){const extra=parent[$extra];const colSpan=node.colSpan;let width;if(colSpan===-1){width=Math.sumPrecise(extra.columnWidths.slice(extra.currentColumn))}else{width=Math.sumPrecise(extra.columnWidths.slice(extra.currentColumn,extra.currentColumn+colSpan))}if(!isNaN(width)){node.w=width}}if(parent.layout&&parent.layout!==\"position\"){node.x=node.y=0}if(node.layout===\"table\"){if(node.w===\"\"&&Array.isArray(node.columnWidths)){node.w=Math.sumPrecise(node.columnWidths)}}}function layoutClass(node){switch(node.layout){case\"position\":return\"xfaPosition\";case\"lr-tb\":return\"xfaLrTb\";case\"rl-row\":return\"xfaRlRow\";case\"rl-tb\":return\"xfaRlTb\";case\"row\":return\"xfaRow\";case\"table\":return\"xfaTable\";case\"tb\":return\"xfaTb\";default:return\"xfaPosition\"}}function toStyle(node,...names){const style=Object.create(null);for(const name of names){const value=node[name];if(value===null){continue}if(converters.hasOwnProperty(name)){converters[name](node,style);continue}if(value instanceof XFAObject){const newStyle=value[$toStyle]();if(newStyle){Object.assign(style,newStyle)}else{warn(`(DEBUG) - XFA - style for ${name} not implemented yet`)}}}return style}function createWrapper(node,html){const{attributes:attributes}=html;const{style:style}=attributes;const wrapper={name:\"div\",attributes:{class:[\"xfaWrapper\"],style:Object.create(null)},children:[]};attributes.class.push(\"xfaWrapped\");if(node.border){const{widths:widths,insets:insets}=node.border[$extra];let width,height;let top=insets[0];let left=insets[3];const insetsH=insets[0]+insets[2];const insetsW=insets[1]+insets[3];switch(node.border.hand){case\"even\":top-=widths[0]/2;left-=widths[3]/2;width=`calc(100% + ${(widths[1]+widths[3])/2-insetsW}px)`;height=`calc(100% + ${(widths[0]+widths[2])/2-insetsH}px)`;break;case\"left\":top-=widths[0];left-=widths[3];width=`calc(100% + ${widths[1]+widths[3]-insetsW}px)`;height=`calc(100% + ${widths[0]+widths[2]-insetsH}px)`;break;case\"right\":width=insetsW?`calc(100% - ${insetsW}px)`:\"100%\";height=insetsH?`calc(100% - ${insetsH}px)`:\"100%\";break}const classNames=[\"xfaBorder\"];if(isPrintOnly(node.border)){classNames.push(\"xfaPrintOnly\")}const border={name:\"div\",attributes:{class:classNames,style:{top:`${top}px`,left:`${left}px`,width:width,height:height}},children:[]};for(const key of[\"border\",\"borderWidth\",\"borderColor\",\"borderRadius\",\"borderStyle\"]){if(style[key]!==undefined){border.attributes.style[key]=style[key];delete style[key]}}wrapper.children.push(border,html)}else{wrapper.children.push(html)}for(const key of[\"background\",\"backgroundClip\",\"top\",\"left\",\"width\",\"height\",\"minWidth\",\"minHeight\",\"maxWidth\",\"maxHeight\",\"transform\",\"transformOrigin\",\"visibility\"]){if(style[key]!==undefined){wrapper.attributes.style[key]=style[key];delete style[key]}}wrapper.attributes.style.position=style.position===\"absolute\"?\"absolute\":\"relative\";delete style.position;if(style.alignSelf){wrapper.attributes.style.alignSelf=style.alignSelf;delete style.alignSelf}return wrapper}function fixTextIndent(styles){const indent=getMeasurement(styles.textIndent,\"0px\");if(indent>=0){return}const align=styles.textAlign===\"right\"?\"right\":\"left\";const name=\"padding\"+(align===\"left\"?\"Left\":\"Right\");const padding=getMeasurement(styles[name],\"0px\");styles[name]=`${padding-indent}px`}function setAccess(node,classNames){switch(node.access){case\"nonInteractive\":classNames.push(\"xfaNonInteractive\");break;case\"readOnly\":classNames.push(\"xfaReadOnly\");break;case\"protected\":classNames.push(\"xfaDisabled\");break}}function isPrintOnly(node){return node.relevant.length>0&&!node.relevant[0].excluded&&node.relevant[0].viewname===\"print\"}function getCurrentPara(node){const stack=node[$getTemplateRoot]()[$extra].paraStack;return stack.length?stack.at(-1):null}function setPara(node,nodeStyle,value){if(value.attributes.class?.includes(\"xfaRich\")){if(nodeStyle){if(node.h===\"\"){nodeStyle.height=\"auto\"}if(node.w===\"\"){nodeStyle.width=\"auto\"}}const para=getCurrentPara(node);if(para){const valueStyle=value.attributes.style;valueStyle.display=\"flex\";valueStyle.flexDirection=\"column\";switch(para.vAlign){case\"top\":valueStyle.justifyContent=\"start\";break;case\"bottom\":valueStyle.justifyContent=\"end\";break;case\"middle\":valueStyle.justifyContent=\"center\";break}const paraStyle=para[$toStyle]();for(const[key,val]of Object.entries(paraStyle)){if(!(key in valueStyle)){valueStyle[key]=val}}}}}function setFontFamily(xfaFont,node,fontFinder,style){if(!fontFinder){delete style.fontFamily;return}const name=stripQuotes(xfaFont.typeface);style.fontFamily=`\"${name}\"`;const typeface=fontFinder.find(name);if(typeface){const{fontFamily:fontFamily}=typeface.regular.cssFontInfo;if(fontFamily!==name){style.fontFamily=`\"${fontFamily}\"`}const para=getCurrentPara(node);if(para&&para.lineHeight!==\"\"){return}if(style.lineHeight){return}const pdfFont=selectFont(xfaFont,typeface);if(pdfFont){style.lineHeight=Math.max(1.2,pdfFont.lineHeight)}}}function fixURL(str){const absoluteUrl=createValidAbsoluteUrl(str,null,{addDefaultProtocol:true,tryConvertEncoding:true});return absoluteUrl?absoluteUrl.href:null}function createLine(node,children){return{name:\"div\",attributes:{class:[node.layout===\"lr-tb\"?\"xfaLr\":\"xfaRl\"]},children:children}}function flushHTML(node){if(!node[$extra]){return null}const attributes=node[$extra].attributes;const html={name:\"div\",attributes:attributes,children:node[$extra].children};if(node[$extra].failingNode){const htmlFromFailing=node[$extra].failingNode[$flushHTML]();if(htmlFromFailing){if(node.layout.endsWith(\"-tb\")){html.children.push(createLine(node,[htmlFromFailing]))}else{html.children.push(htmlFromFailing)}}}if(html.children.length===0){return null}return html}function addHTML(node,html,bbox){const extra=node[$extra];const availableSpace=extra.availableSpace;const[x,y,w,h]=bbox;switch(node.layout){case\"position\":{extra.width=Math.max(extra.width,x+w);extra.height=Math.max(extra.height,y+h);extra.children.push(html);break}case\"lr-tb\":case\"rl-tb\":if(!extra.line||extra.attempt===1){extra.line=createLine(node,[]);extra.children.push(extra.line);extra.numberInLine=0}extra.numberInLine+=1;extra.line.children.push(html);if(extra.attempt===0){extra.currentWidth+=w;extra.height=Math.max(extra.height,extra.prevHeight+h)}else{extra.currentWidth=w;extra.prevHeight=extra.height;extra.height+=h;extra.attempt=0}extra.width=Math.max(extra.width,extra.currentWidth);break;case\"rl-row\":case\"row\":{extra.children.push(html);extra.width+=w;extra.height=Math.max(extra.height,h);const height=measureToString(extra.height);for(const child of extra.children){child.attributes.style.height=height}break}case\"table\":{extra.width=MathClamp(w,extra.width,availableSpace.width);extra.height+=h;extra.children.push(html);break}case\"tb\":{extra.width=MathClamp(w,extra.width,availableSpace.width);extra.height+=h;extra.children.push(html);break}}}function getAvailableSpace(node){const availableSpace=node[$extra].availableSpace;const marginV=node.margin?node.margin.topInset+node.margin.bottomInset:0;const marginH=node.margin?node.margin.leftInset+node.margin.rightInset:0;switch(node.layout){case\"lr-tb\":case\"rl-tb\":if(node[$extra].attempt===0){return{width:availableSpace.width-marginH-node[$extra].currentWidth,height:availableSpace.height-marginV-node[$extra].prevHeight}}return{width:availableSpace.width-marginH,height:availableSpace.height-marginV-node[$extra].height};case\"rl-row\":case\"row\":const width=Math.sumPrecise(node[$extra].columnWidths.slice(node[$extra].currentColumn));return{width:width,height:availableSpace.height-marginH};case\"table\":case\"tb\":return{width:availableSpace.width-marginH,height:availableSpace.height-marginV-node[$extra].height};case\"position\":default:return availableSpace}}function getTransformedBBox(node){let w=node.w===\"\"?NaN:node.w;let h=node.h===\"\"?NaN:node.h;let[centerX,centerY]=[0,0];switch(node.anchorType||\"\"){case\"bottomCenter\":[centerX,centerY]=[w/2,h];break;case\"bottomLeft\":[centerX,centerY]=[0,h];break;case\"bottomRight\":[centerX,centerY]=[w,h];break;case\"middleCenter\":[centerX,centerY]=[w/2,h/2];break;case\"middleLeft\":[centerX,centerY]=[0,h/2];break;case\"middleRight\":[centerX,centerY]=[w,h/2];break;case\"topCenter\":[centerX,centerY]=[w/2,0];break;case\"topRight\":[centerX,centerY]=[w,0];break}let x,y;switch(node.rotate||0){case 0:[x,y]=[-centerX,-centerY];break;case 90:[x,y]=[-centerY,centerX];[w,h]=[h,-w];break;case 180:[x,y]=[centerX,centerY];[w,h]=[-w,-h];break;case 270:[x,y]=[centerY,-centerX];[w,h]=[-h,w];break}return[node.x+x+Math.min(0,w),node.y+y+Math.min(0,h),Math.abs(w),Math.abs(h)]}function checkDimensions(node,space){if(node[$getTemplateRoot]()[$extra].firstUnsplittable===null){return true}if(node.w===0||node.h===0){return true}const ERROR=2;const parent=node[$getSubformParent]();const attempt=parent[$extra]?.attempt||0;const[,y,w,h]=getTransformedBBox(node);switch(parent.layout){case\"lr-tb\":case\"rl-tb\":if(attempt===0){if(!node[$getTemplateRoot]()[$extra].noLayoutFailure){if(node.h!==\"\"&&Math.round(h-space.height)>ERROR){return false}if(node.w!==\"\"){if(Math.round(w-space.width)<=ERROR){return true}if(parent[$extra].numberInLine===0){return space.height>ERROR}return false}return space.width>ERROR}if(node.w!==\"\"){return Math.round(w-space.width)<=ERROR}return space.width>ERROR}if(node[$getTemplateRoot]()[$extra].noLayoutFailure){return true}if(node.h!==\"\"&&Math.round(h-space.height)>ERROR){return false}if(node.w===\"\"||Math.round(w-space.width)<=ERROR){return space.height>ERROR}if(parent[$isThereMoreWidth]()){return false}return space.height>ERROR;case\"table\":case\"tb\":if(node[$getTemplateRoot]()[$extra].noLayoutFailure){return true}if(node.h!==\"\"&&!node[$isSplittable]()){return Math.round(h-space.height)<=ERROR}if(node.w===\"\"||Math.round(w-space.width)<=ERROR){return space.height>ERROR}if(parent[$isThereMoreWidth]()){return false}return space.height>ERROR;case\"position\":if(node[$getTemplateRoot]()[$extra].noLayoutFailure){return true}if(node.h===\"\"||Math.round(h+y-space.height)<=ERROR){return true}const area=node[$getTemplateRoot]()[$extra].currentContentArea;return h+y>area.h;case\"rl-row\":case\"row\":if(node[$getTemplateRoot]()[$extra].noLayoutFailure){return true}if(node.h!==\"\"){return Math.round(h-space.height)<=ERROR}return true;default:return true}}const TEMPLATE_NS_ID=NamespaceIds.template.id;const SVG_NS=\"http://www.w3.org/2000/svg\";const MAX_ATTEMPTS_FOR_LRTB_LAYOUT=2;const MAX_EMPTY_PAGES=3;const DEFAULT_TAB_INDEX=5e3;const HEADING_PATTERN=/^H(\\d+)$/;const MIMES=new Set([\"image/gif\",\"image/jpeg\",\"image/jpg\",\"image/pjpeg\",\"image/png\",\"image/apng\",\"image/x-png\",\"image/bmp\",\"image/x-ms-bmp\",\"image/tiff\",\"image/tif\",\"application/octet-stream\"]);const IMAGES_HEADERS=[[[66,77],\"image/bmp\"],[[255,216,255],\"image/jpeg\"],[[73,73,42,0],\"image/tiff\"],[[77,77,0,42],\"image/tiff\"],[[71,73,70,56,57,97],\"image/gif\"],[[137,80,78,71,13,10,26,10],\"image/png\"]];function getBorderDims(node){if(!node||!node.border){return{w:0,h:0}}const borderExtra=node.border[$getExtra]();if(!borderExtra){return{w:0,h:0}}return{w:borderExtra.widths[0]+borderExtra.widths[2]+borderExtra.insets[0]+borderExtra.insets[2],h:borderExtra.widths[1]+borderExtra.widths[3]+borderExtra.insets[1]+borderExtra.insets[3]}}function hasMargin(node){return node.margin&&(node.margin.topInset||node.margin.rightInset||node.margin.bottomInset||node.margin.leftInset)}function _setValue(templateNode,value){if(!templateNode.value){const nodeValue=new Value({});templateNode[$appendChild](nodeValue);templateNode.value=nodeValue}templateNode.value[$setValue](value)}function*getContainedChildren(node){for(const child of node[$getChildren]()){if(child instanceof SubformSet){yield*child[$getContainedChildren]();continue}yield child}}function isRequired(node){return node.validate?.nullTest===\"error\"}function setTabIndex(node){while(node){if(!node.traversal){node[$tabIndex]=node[$getParent]()[$tabIndex];return}if(node[$tabIndex]){return}let next=null;for(const child of node.traversal[$getChildren]()){if(child.operation===\"next\"){next=child;break}}if(!next||!next.ref){node[$tabIndex]=node[$getParent]()[$tabIndex];return}const root=node[$getTemplateRoot]();node[$tabIndex]=++root[$tabIndex];const ref=root[$searchNode](next.ref,node);if(!ref){return}node=ref[0]}}function applyAssist(obj,attributes){const assist=obj.assist;if(assist){const assistTitle=assist[$toHTML]();if(assistTitle){attributes.title=assistTitle}const role=assist.role;const match=role.match(HEADING_PATTERN);if(match){const ariaRole=\"heading\";const ariaLevel=match[1];attributes.role=ariaRole;attributes[\"aria-level\"]=ariaLevel}}if(obj.layout===\"table\"){attributes.role=\"table\"}else if(obj.layout===\"row\"){attributes.role=\"row\"}else{const parent=obj[$getParent]();if(parent.layout===\"row\"){attributes.role=parent.assist?.role===\"TH\"?\"columnheader\":\"cell\"}}}function ariaLabel(obj){if(!obj.assist){return null}const assist=obj.assist;if(assist.speak&&assist.speak[$content]!==\"\"){return assist.speak[$content]}if(assist.toolTip){return assist.toolTip[$content]}return null}function valueToHtml(value){return HTMLResult.success({name:\"div\",attributes:{class:[\"xfaRich\"],style:Object.create(null)},children:[{name:\"span\",attributes:{style:Object.create(null)},value:value}]})}function setFirstUnsplittable(node){const root=node[$getTemplateRoot]();if(root[$extra].firstUnsplittable===null){root[$extra].firstUnsplittable=node;root[$extra].noLayoutFailure=true}}function unsetFirstUnsplittable(node){const root=node[$getTemplateRoot]();if(root[$extra].firstUnsplittable===node){root[$extra].noLayoutFailure=false}}function handleBreak(node){if(node[$extra]){return false}node[$extra]=Object.create(null);if(node.targetType===\"auto\"){return false}const root=node[$getTemplateRoot]();let target=null;if(node.target){target=root[$searchNode](node.target,node[$getParent]());if(!target){return false}target=target[0]}const{currentPageArea:currentPageArea,currentContentArea:currentContentArea}=root[$extra];if(node.targetType===\"pageArea\"){if(!(target instanceof PageArea)){target=null}if(node.startNew){node[$extra].target=target||currentPageArea;return true}else if(target&&target!==currentPageArea){node[$extra].target=target;return true}return false}if(!(target instanceof ContentArea)){target=null}const pageArea=target&&target[$getParent]();let index;let nextPageArea=pageArea;if(node.startNew){if(target){const contentAreas=pageArea.contentArea.children;const indexForCurrent=contentAreas.indexOf(currentContentArea);const indexForTarget=contentAreas.indexOf(target);if(indexForCurrent!==-1&&indexForCurrent<indexForTarget){nextPageArea=null}index=indexForTarget-1}else{index=currentPageArea.contentArea.children.indexOf(currentContentArea)}}else if(target&&target!==currentContentArea){const contentAreas=pageArea.contentArea.children;index=contentAreas.indexOf(target)-1;nextPageArea=pageArea===currentPageArea?null:pageArea}else{return false}node[$extra].target=nextPageArea;node[$extra].index=index;return true}function handleOverflow(node,extraNode,space){const root=node[$getTemplateRoot]();const saved=root[$extra].noLayoutFailure;const savedMethod=extraNode[$getSubformParent];extraNode[$getSubformParent]=()=>node;root[$extra].noLayoutFailure=true;const res=extraNode[$toHTML](space);node[$addHTML](res.html,res.bbox);root[$extra].noLayoutFailure=saved;extraNode[$getSubformParent]=savedMethod}class AppearanceFilter extends StringObject{constructor(attributes){super(TEMPLATE_NS_ID,\"appearanceFilter\");this.id=attributes.id||\"\";this.type=getStringOption(attributes.type,[\"optional\",\"required\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class Arc extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"arc\",true);this.circular=getInteger({data:attributes.circular,defaultValue:0,validate:x=>x===1});this.hand=getStringOption(attributes.hand,[\"even\",\"left\",\"right\"]);this.id=attributes.id||\"\";this.startAngle=getFloat({data:attributes.startAngle,defaultValue:0,validate:x=>true});this.sweepAngle=getFloat({data:attributes.sweepAngle,defaultValue:360,validate:x=>true});this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.edge=null;this.fill=null}[$toHTML](){const edge=this.edge||new Edge({});const edgeStyle=edge[$toStyle]();const style=Object.create(null);if(this.fill?.presence===\"visible\"){Object.assign(style,this.fill[$toStyle]())}else{style.fill=\"transparent\"}style.strokeWidth=measureToString(edge.presence===\"visible\"?edge.thickness:0);style.stroke=edgeStyle.color;let arc;const attributes={xmlns:SVG_NS,style:{width:\"100%\",height:\"100%\",overflow:\"visible\"}};if(this.sweepAngle===360){arc={name:\"ellipse\",attributes:{xmlns:SVG_NS,cx:\"50%\",cy:\"50%\",rx:\"50%\",ry:\"50%\",style:style}}}else{const startAngle=this.startAngle*Math.PI/180;const sweepAngle=this.sweepAngle*Math.PI/180;const largeArc=this.sweepAngle>180?1:0;const[x1,y1,x2,y2]=[50*(1+Math.cos(startAngle)),50*(1-Math.sin(startAngle)),50*(1+Math.cos(startAngle+sweepAngle)),50*(1-Math.sin(startAngle+sweepAngle))];arc={name:\"path\",attributes:{xmlns:SVG_NS,d:`M ${x1} ${y1} A 50 50 0 ${largeArc} 0 ${x2} ${y2}`,vectorEffect:\"non-scaling-stroke\",style:style}};Object.assign(attributes,{viewBox:\"0 0 100 100\",preserveAspectRatio:\"none\"})}const svg={name:\"svg\",children:[arc],attributes:attributes};const parent=this[$getParent]()[$getParent]();if(hasMargin(parent)){return HTMLResult.success({name:\"div\",attributes:{style:{display:\"inline\",width:\"100%\",height:\"100%\"}},children:[svg]})}svg.attributes.style.position=\"absolute\";return HTMLResult.success(svg)}}class Area extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"area\",true);this.colSpan=getInteger({data:attributes.colSpan,defaultValue:1,validate:n=>n>=1||n===-1});this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.relevant=getRelevant(attributes.relevant);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.x=getMeasurement(attributes.x,\"0pt\");this.y=getMeasurement(attributes.y,\"0pt\");this.desc=null;this.extras=null;this.area=new XFAObjectArray;this.draw=new XFAObjectArray;this.exObject=new XFAObjectArray;this.exclGroup=new XFAObjectArray;this.field=new XFAObjectArray;this.subform=new XFAObjectArray;this.subformSet=new XFAObjectArray}*[$getContainedChildren](){yield*getContainedChildren(this)}[$isTransparent](){return true}[$isBindable](){return true}[$addHTML](html,bbox){const[x,y,w,h]=bbox;this[$extra].width=Math.max(this[$extra].width,x+w);this[$extra].height=Math.max(this[$extra].height,y+h);this[$extra].children.push(html)}[$getAvailableSpace](){return this[$extra].availableSpace}[$toHTML](availableSpace){const style=toStyle(this,\"position\");const attributes={style:style,id:this[$uid],class:[\"xfaArea\"]};if(isPrintOnly(this)){attributes.class.push(\"xfaPrintOnly\")}if(this.name){attributes.xfaName=this.name}const children=[];this[$extra]={children:children,width:0,height:0,availableSpace:availableSpace};const result=this[$childrenToHTML]({filter:new Set([\"area\",\"draw\",\"field\",\"exclGroup\",\"subform\",\"subformSet\"]),include:true});if(!result.success){if(result.isBreak()){return result}delete this[$extra];return HTMLResult.FAILURE}style.width=measureToString(this[$extra].width);style.height=measureToString(this[$extra].height);const html={name:\"div\",attributes:attributes,children:children};const bbox=[this.x,this.y,this[$extra].width,this[$extra].height];delete this[$extra];return HTMLResult.success(html,bbox)}}class Assist extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"assist\",true);this.id=attributes.id||\"\";this.role=attributes.role||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.speak=null;this.toolTip=null}[$toHTML](){return this.toolTip?.[$content]||null}}class Barcode extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"barcode\",true);this.charEncoding=getKeyword({data:attributes.charEncoding?attributes.charEncoding.toLowerCase():\"\",defaultValue:\"\",validate:k=>[\"utf-8\",\"big-five\",\"fontspecific\",\"gbk\",\"gb-18030\",\"gb-2312\",\"ksc-5601\",\"none\",\"shift-jis\",\"ucs-2\",\"utf-16\"].includes(k)||k.match(/iso-8859-\\d{2}/)});this.checksum=getStringOption(attributes.checksum,[\"none\",\"1mod10\",\"1mod10_1mod11\",\"2mod10\",\"auto\"]);this.dataColumnCount=getInteger({data:attributes.dataColumnCount,defaultValue:-1,validate:x=>x>=0});this.dataLength=getInteger({data:attributes.dataLength,defaultValue:-1,validate:x=>x>=0});this.dataPrep=getStringOption(attributes.dataPrep,[\"none\",\"flateCompress\"]);this.dataRowCount=getInteger({data:attributes.dataRowCount,defaultValue:-1,validate:x=>x>=0});this.endChar=attributes.endChar||\"\";this.errorCorrectionLevel=getInteger({data:attributes.errorCorrectionLevel,defaultValue:-1,validate:x=>x>=0&&x<=8});this.id=attributes.id||\"\";this.moduleHeight=getMeasurement(attributes.moduleHeight,\"5mm\");this.moduleWidth=getMeasurement(attributes.moduleWidth,\"0.25mm\");this.printCheckDigit=getInteger({data:attributes.printCheckDigit,defaultValue:0,validate:x=>x===1});this.rowColumnRatio=getRatio(attributes.rowColumnRatio);this.startChar=attributes.startChar||\"\";this.textLocation=getStringOption(attributes.textLocation,[\"below\",\"above\",\"aboveEmbedded\",\"belowEmbedded\",\"none\"]);this.truncate=getInteger({data:attributes.truncate,defaultValue:0,validate:x=>x===1});this.type=getStringOption(attributes.type?attributes.type.toLowerCase():\"\",[\"aztec\",\"codabar\",\"code2of5industrial\",\"code2of5interleaved\",\"code2of5matrix\",\"code2of5standard\",\"code3of9\",\"code3of9extended\",\"code11\",\"code49\",\"code93\",\"code128\",\"code128a\",\"code128b\",\"code128c\",\"code128sscc\",\"datamatrix\",\"ean8\",\"ean8add2\",\"ean8add5\",\"ean13\",\"ean13add2\",\"ean13add5\",\"ean13pwcd\",\"fim\",\"logmars\",\"maxicode\",\"msi\",\"pdf417\",\"pdf417macro\",\"plessey\",\"postauscust2\",\"postauscust3\",\"postausreplypaid\",\"postausstandard\",\"postukrm4scc\",\"postusdpbc\",\"postusimb\",\"postusstandard\",\"postus5zip\",\"qrcode\",\"rfid\",\"rss14\",\"rss14expanded\",\"rss14limited\",\"rss14stacked\",\"rss14stackedomni\",\"rss14truncated\",\"telepen\",\"ucc128\",\"ucc128random\",\"ucc128sscc\",\"upca\",\"upcaadd2\",\"upcaadd5\",\"upcapwcd\",\"upce\",\"upceadd2\",\"upceadd5\",\"upcean2\",\"upcean5\",\"upsmaxicode\"]);this.upsMode=getStringOption(attributes.upsMode,[\"usCarrier\",\"internationalCarrier\",\"secureSymbol\",\"standardSymbol\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.wideNarrowRatio=getRatio(attributes.wideNarrowRatio);this.encrypt=null;this.extras=null}}class Bind extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"bind\",true);this.match=getStringOption(attributes.match,[\"once\",\"dataRef\",\"global\",\"none\"]);this.ref=attributes.ref||\"\";this.picture=null}}class BindItems extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"bindItems\");this.connection=attributes.connection||\"\";this.labelRef=attributes.labelRef||\"\";this.ref=attributes.ref||\"\";this.valueRef=attributes.valueRef||\"\"}}class Bookend extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"bookend\");this.id=attributes.id||\"\";this.leader=attributes.leader||\"\";this.trailer=attributes.trailer||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class BooleanElement extends Option01{constructor(attributes){super(TEMPLATE_NS_ID,\"boolean\");this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}[$toHTML](availableSpace){return valueToHtml(this[$content]===1?\"1\":\"0\")}}class Border extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"border\",true);this.break=getStringOption(attributes.break,[\"close\",\"open\"]);this.hand=getStringOption(attributes.hand,[\"even\",\"left\",\"right\"]);this.id=attributes.id||\"\";this.presence=getStringOption(attributes.presence,[\"visible\",\"hidden\",\"inactive\",\"invisible\"]);this.relevant=getRelevant(attributes.relevant);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.corner=new XFAObjectArray(4);this.edge=new XFAObjectArray(4);this.extras=null;this.fill=null;this.margin=null}[$getExtra](){if(!this[$extra]){const edges=this.edge.children.slice();if(edges.length<4){const defaultEdge=edges.at(-1)||new Edge({});for(let i=edges.length;i<4;i++){edges.push(defaultEdge)}}const widths=edges.map((edge=>edge.thickness));const insets=[0,0,0,0];if(this.margin){insets[0]=this.margin.topInset;insets[1]=this.margin.rightInset;insets[2]=this.margin.bottomInset;insets[3]=this.margin.leftInset}this[$extra]={widths:widths,insets:insets,edges:edges}}return this[$extra]}[$toStyle](){const{edges:edges}=this[$getExtra]();const edgeStyles=edges.map((node=>{const style=node[$toStyle]();style.color||=\"#000000\";return style}));const style=Object.create(null);if(this.margin){Object.assign(style,this.margin[$toStyle]())}if(this.fill?.presence===\"visible\"){Object.assign(style,this.fill[$toStyle]())}if(this.corner.children.some((node=>node.radius!==0))){const cornerStyles=this.corner.children.map((node=>node[$toStyle]()));if(cornerStyles.length===2||cornerStyles.length===3){const last=cornerStyles.at(-1);for(let i=cornerStyles.length;i<4;i++){cornerStyles.push(last)}}style.borderRadius=cornerStyles.map((s=>s.radius)).join(\" \")}switch(this.presence){case\"invisible\":case\"hidden\":style.borderStyle=\"\";break;case\"inactive\":style.borderStyle=\"none\";break;default:style.borderStyle=edgeStyles.map((s=>s.style)).join(\" \");break}style.borderWidth=edgeStyles.map((s=>s.width)).join(\" \");style.borderColor=edgeStyles.map((s=>s.color)).join(\" \");return style}}class Break extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"break\",true);this.after=getStringOption(attributes.after,[\"auto\",\"contentArea\",\"pageArea\",\"pageEven\",\"pageOdd\"]);this.afterTarget=attributes.afterTarget||\"\";this.before=getStringOption(attributes.before,[\"auto\",\"contentArea\",\"pageArea\",\"pageEven\",\"pageOdd\"]);this.beforeTarget=attributes.beforeTarget||\"\";this.bookendLeader=attributes.bookendLeader||\"\";this.bookendTrailer=attributes.bookendTrailer||\"\";this.id=attributes.id||\"\";this.overflowLeader=attributes.overflowLeader||\"\";this.overflowTarget=attributes.overflowTarget||\"\";this.overflowTrailer=attributes.overflowTrailer||\"\";this.startNew=getInteger({data:attributes.startNew,defaultValue:0,validate:x=>x===1});this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.extras=null}}class BreakAfter extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"breakAfter\",true);this.id=attributes.id||\"\";this.leader=attributes.leader||\"\";this.startNew=getInteger({data:attributes.startNew,defaultValue:0,validate:x=>x===1});this.target=attributes.target||\"\";this.targetType=getStringOption(attributes.targetType,[\"auto\",\"contentArea\",\"pageArea\"]);this.trailer=attributes.trailer||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.script=null}}class BreakBefore extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"breakBefore\",true);this.id=attributes.id||\"\";this.leader=attributes.leader||\"\";this.startNew=getInteger({data:attributes.startNew,defaultValue:0,validate:x=>x===1});this.target=attributes.target||\"\";this.targetType=getStringOption(attributes.targetType,[\"auto\",\"contentArea\",\"pageArea\"]);this.trailer=attributes.trailer||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.script=null}[$toHTML](availableSpace){this[$extra]={};return HTMLResult.FAILURE}}class Button extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"button\",true);this.highlight=getStringOption(attributes.highlight,[\"inverted\",\"none\",\"outline\",\"push\"]);this.id=attributes.id||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.extras=null}[$toHTML](availableSpace){const parent=this[$getParent]();const grandpa=parent[$getParent]();const htmlButton={name:\"button\",attributes:{id:this[$uid],class:[\"xfaButton\"],style:{}},children:[]};for(const event of grandpa.event.children){if(event.activity!==\"click\"||!event.script){continue}const jsURL=recoverJsURL(event.script[$content]);if(!jsURL){continue}const href=fixURL(jsURL.url);if(!href){continue}htmlButton.children.push({name:\"a\",attributes:{id:\"link\"+this[$uid],href:href,newWindow:jsURL.newWindow,class:[\"xfaLink\"],style:{}},children:[]})}return HTMLResult.success(htmlButton)}}class Calculate extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"calculate\",true);this.id=attributes.id||\"\";this.override=getStringOption(attributes.override,[\"disabled\",\"error\",\"ignore\",\"warning\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.extras=null;this.message=null;this.script=null}}class Caption extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"caption\",true);this.id=attributes.id||\"\";this.placement=getStringOption(attributes.placement,[\"left\",\"bottom\",\"inline\",\"right\",\"top\"]);this.presence=getStringOption(attributes.presence,[\"visible\",\"hidden\",\"inactive\",\"invisible\"]);this.reserve=Math.ceil(getMeasurement(attributes.reserve));this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.extras=null;this.font=null;this.margin=null;this.para=null;this.value=null}[$setValue](value){_setValue(this,value)}[$getExtra](availableSpace){if(!this[$extra]){let{width:width,height:height}=availableSpace;switch(this.placement){case\"left\":case\"right\":case\"inline\":width=this.reserve<=0?width:this.reserve;break;case\"top\":case\"bottom\":height=this.reserve<=0?height:this.reserve;break}this[$extra]=layoutNode(this,{width:width,height:height})}return this[$extra]}[$toHTML](availableSpace){if(!this.value){return HTMLResult.EMPTY}this[$pushPara]();const value=this.value[$toHTML](availableSpace).html;if(!value){this[$popPara]();return HTMLResult.EMPTY}const savedReserve=this.reserve;if(this.reserve<=0){const{w:w,h:h}=this[$getExtra](availableSpace);switch(this.placement){case\"left\":case\"right\":case\"inline\":this.reserve=w;break;case\"top\":case\"bottom\":this.reserve=h;break}}const children=[];if(typeof value===\"string\"){children.push({name:\"#text\",value:value})}else{children.push(value)}const style=toStyle(this,\"font\",\"margin\",\"visibility\");switch(this.placement){case\"left\":case\"right\":if(this.reserve>0){style.width=measureToString(this.reserve)}break;case\"top\":case\"bottom\":if(this.reserve>0){style.height=measureToString(this.reserve)}break}setPara(this,null,value);this[$popPara]();this.reserve=savedReserve;return HTMLResult.success({name:\"div\",attributes:{style:style,class:[\"xfaCaption\"]},children:children})}}class Certificate extends StringObject{constructor(attributes){super(TEMPLATE_NS_ID,\"certificate\");this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class Certificates extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"certificates\",true);this.credentialServerPolicy=getStringOption(attributes.credentialServerPolicy,[\"optional\",\"required\"]);this.id=attributes.id||\"\";this.url=attributes.url||\"\";this.urlPolicy=attributes.urlPolicy||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.encryption=null;this.issuers=null;this.keyUsage=null;this.oids=null;this.signing=null;this.subjectDNs=null}}class CheckButton extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"checkButton\",true);this.id=attributes.id||\"\";this.mark=getStringOption(attributes.mark,[\"default\",\"check\",\"circle\",\"cross\",\"diamond\",\"square\",\"star\"]);this.shape=getStringOption(attributes.shape,[\"square\",\"round\"]);this.size=getMeasurement(attributes.size,\"10pt\");this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.border=null;this.extras=null;this.margin=null}[$toHTML](availableSpace){const style=toStyle(this,\"margin\");const size=measureToString(this.size);style.width=style.height=size;let type;let className;let groupId;const field=this[$getParent]()[$getParent]();const items=field.items.children.length&&field.items.children[0][$toHTML]().html||[];const exportedValue={on:(items[0]!==undefined?items[0]:\"on\").toString(),off:(items[1]!==undefined?items[1]:\"off\").toString()};const value=field.value?.[$text]()||\"off\";const checked=value===exportedValue.on||undefined;const container=field[$getSubformParent]();const fieldId=field[$uid];let dataId;if(container instanceof ExclGroup){groupId=container[$uid];type=\"radio\";className=\"xfaRadio\";dataId=container[$data]?.[$uid]||container[$uid]}else{type=\"checkbox\";className=\"xfaCheckbox\";dataId=field[$data]?.[$uid]||field[$uid]}const input={name:\"input\",attributes:{class:[className],style:style,fieldId:fieldId,dataId:dataId,type:type,checked:checked,xfaOn:exportedValue.on,xfaOff:exportedValue.off,\"aria-label\":ariaLabel(field),\"aria-required\":false}};if(groupId){input.attributes.name=groupId}if(isRequired(field)){input.attributes[\"aria-required\"]=true;input.attributes.required=true}return HTMLResult.success({name:\"label\",attributes:{class:[\"xfaLabel\"]},children:[input]})}}class ChoiceList extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"choiceList\",true);this.commitOn=getStringOption(attributes.commitOn,[\"select\",\"exit\"]);this.id=attributes.id||\"\";this.open=getStringOption(attributes.open,[\"userControl\",\"always\",\"multiSelect\",\"onEntry\"]);this.textEntry=getInteger({data:attributes.textEntry,defaultValue:0,validate:x=>x===1});this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.border=null;this.extras=null;this.margin=null}[$toHTML](availableSpace){const style=toStyle(this,\"border\",\"margin\");const ui=this[$getParent]();const field=ui[$getParent]();const fontSize=field.font?.size||10;const optionStyle={fontSize:`calc(${fontSize}px * var(--total-scale-factor))`};const children=[];if(field.items.children.length>0){const items=field.items;let displayedIndex=0;let saveIndex=0;if(items.children.length===2){displayedIndex=items.children[0].save;saveIndex=1-displayedIndex}const displayed=items.children[displayedIndex][$toHTML]().html;const values=items.children[saveIndex][$toHTML]().html;let selected=false;const value=field.value?.[$text]()||\"\";for(let i=0,ii=displayed.length;i<ii;i++){const option={name:\"option\",attributes:{value:values[i]||displayed[i],style:optionStyle},value:displayed[i]};if(values[i]===value){option.attributes.selected=selected=true}children.push(option)}if(!selected){children.splice(0,0,{name:\"option\",attributes:{hidden:true,selected:true},value:\" \"})}}const selectAttributes={class:[\"xfaSelect\"],fieldId:field[$uid],dataId:field[$data]?.[$uid]||field[$uid],style:style,\"aria-label\":ariaLabel(field),\"aria-required\":false};if(isRequired(field)){selectAttributes[\"aria-required\"]=true;selectAttributes.required=true}if(this.open===\"multiSelect\"){selectAttributes.multiple=true}return HTMLResult.success({name:\"label\",attributes:{class:[\"xfaLabel\"]},children:[{name:\"select\",children:children,attributes:selectAttributes}]})}}class Color extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"color\",true);this.cSpace=getStringOption(attributes.cSpace,[\"SRGB\"]);this.id=attributes.id||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.value=attributes.value?getColor(attributes.value):\"\";this.extras=null}[$hasSettableValue](){return false}[$toStyle](){return this.value?Util.makeHexColor(this.value.r,this.value.g,this.value.b):null}}class Comb extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"comb\");this.id=attributes.id||\"\";this.numberOfCells=getInteger({data:attributes.numberOfCells,defaultValue:0,validate:x=>x>=0});this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class Connect extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"connect\",true);this.connection=attributes.connection||\"\";this.id=attributes.id||\"\";this.ref=attributes.ref||\"\";this.usage=getStringOption(attributes.usage,[\"exportAndImport\",\"exportOnly\",\"importOnly\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.picture=null}}class ContentArea extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"contentArea\",true);this.h=getMeasurement(attributes.h);this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.relevant=getRelevant(attributes.relevant);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.w=getMeasurement(attributes.w);this.x=getMeasurement(attributes.x,\"0pt\");this.y=getMeasurement(attributes.y,\"0pt\");this.desc=null;this.extras=null}[$toHTML](availableSpace){const left=measureToString(this.x);const top=measureToString(this.y);const style={left:left,top:top,width:measureToString(this.w),height:measureToString(this.h)};const classNames=[\"xfaContentarea\"];if(isPrintOnly(this)){classNames.push(\"xfaPrintOnly\")}return HTMLResult.success({name:\"div\",children:[],attributes:{style:style,class:classNames,id:this[$uid]}})}}class Corner extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"corner\",true);this.id=attributes.id||\"\";this.inverted=getInteger({data:attributes.inverted,defaultValue:0,validate:x=>x===1});this.join=getStringOption(attributes.join,[\"square\",\"round\"]);this.presence=getStringOption(attributes.presence,[\"visible\",\"hidden\",\"inactive\",\"invisible\"]);this.radius=getMeasurement(attributes.radius);this.stroke=getStringOption(attributes.stroke,[\"solid\",\"dashDot\",\"dashDotDot\",\"dashed\",\"dotted\",\"embossed\",\"etched\",\"lowered\",\"raised\"]);this.thickness=getMeasurement(attributes.thickness,\"0.5pt\");this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.color=null;this.extras=null}[$toStyle](){const style=toStyle(this,\"visibility\");style.radius=measureToString(this.join===\"square\"?0:this.radius);return style}}class DateElement extends ContentObject{constructor(attributes){super(TEMPLATE_NS_ID,\"date\");this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}[$finalize](){const date=this[$content].trim();this[$content]=date?new Date(date):null}[$toHTML](availableSpace){return valueToHtml(this[$content]?this[$content].toString():\"\")}}class DateTime extends ContentObject{constructor(attributes){super(TEMPLATE_NS_ID,\"dateTime\");this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}[$finalize](){const date=this[$content].trim();this[$content]=date?new Date(date):null}[$toHTML](availableSpace){return valueToHtml(this[$content]?this[$content].toString():\"\")}}class DateTimeEdit extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"dateTimeEdit\",true);this.hScrollPolicy=getStringOption(attributes.hScrollPolicy,[\"auto\",\"off\",\"on\"]);this.id=attributes.id||\"\";this.picker=getStringOption(attributes.picker,[\"host\",\"none\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.border=null;this.comb=null;this.extras=null;this.margin=null}[$toHTML](availableSpace){const style=toStyle(this,\"border\",\"font\",\"margin\");const field=this[$getParent]()[$getParent]();const html={name:\"input\",attributes:{type:\"text\",fieldId:field[$uid],dataId:field[$data]?.[$uid]||field[$uid],class:[\"xfaTextfield\"],style:style,\"aria-label\":ariaLabel(field),\"aria-required\":false}};if(isRequired(field)){html.attributes[\"aria-required\"]=true;html.attributes.required=true}return HTMLResult.success({name:\"label\",attributes:{class:[\"xfaLabel\"]},children:[html]})}}class Decimal extends ContentObject{constructor(attributes){super(TEMPLATE_NS_ID,\"decimal\");this.fracDigits=getInteger({data:attributes.fracDigits,defaultValue:2,validate:x=>true});this.id=attributes.id||\"\";this.leadDigits=getInteger({data:attributes.leadDigits,defaultValue:-1,validate:x=>true});this.name=attributes.name||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}[$finalize](){const number=parseFloat(this[$content].trim());this[$content]=isNaN(number)?null:number}[$toHTML](availableSpace){return valueToHtml(this[$content]!==null?this[$content].toString():\"\")}}class DefaultUi extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"defaultUi\",true);this.id=attributes.id||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.extras=null}}class Desc extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"desc\",true);this.id=attributes.id||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.boolean=new XFAObjectArray;this.date=new XFAObjectArray;this.dateTime=new XFAObjectArray;this.decimal=new XFAObjectArray;this.exData=new XFAObjectArray;this.float=new XFAObjectArray;this.image=new XFAObjectArray;this.integer=new XFAObjectArray;this.text=new XFAObjectArray;this.time=new XFAObjectArray}}class DigestMethod extends OptionObject{constructor(attributes){super(TEMPLATE_NS_ID,\"digestMethod\",[\"\",\"SHA1\",\"SHA256\",\"SHA512\",\"RIPEMD160\"]);this.id=attributes.id||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class DigestMethods extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"digestMethods\",true);this.id=attributes.id||\"\";this.type=getStringOption(attributes.type,[\"optional\",\"required\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.digestMethod=new XFAObjectArray}}class Draw extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"draw\",true);this.anchorType=getStringOption(attributes.anchorType,[\"topLeft\",\"bottomCenter\",\"bottomLeft\",\"bottomRight\",\"middleCenter\",\"middleLeft\",\"middleRight\",\"topCenter\",\"topRight\"]);this.colSpan=getInteger({data:attributes.colSpan,defaultValue:1,validate:n=>n>=1||n===-1});this.h=attributes.h?getMeasurement(attributes.h):\"\";this.hAlign=getStringOption(attributes.hAlign,[\"left\",\"center\",\"justify\",\"justifyAll\",\"radix\",\"right\"]);this.id=attributes.id||\"\";this.locale=attributes.locale||\"\";this.maxH=getMeasurement(attributes.maxH,\"0pt\");this.maxW=getMeasurement(attributes.maxW,\"0pt\");this.minH=getMeasurement(attributes.minH,\"0pt\");this.minW=getMeasurement(attributes.minW,\"0pt\");this.name=attributes.name||\"\";this.presence=getStringOption(attributes.presence,[\"visible\",\"hidden\",\"inactive\",\"invisible\"]);this.relevant=getRelevant(attributes.relevant);this.rotate=getInteger({data:attributes.rotate,defaultValue:0,validate:x=>x%90===0});this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.w=attributes.w?getMeasurement(attributes.w):\"\";this.x=getMeasurement(attributes.x,\"0pt\");this.y=getMeasurement(attributes.y,\"0pt\");this.assist=null;this.border=null;this.caption=null;this.desc=null;this.extras=null;this.font=null;this.keep=null;this.margin=null;this.para=null;this.traversal=null;this.ui=null;this.value=null;this.setProperty=new XFAObjectArray}[$setValue](value){_setValue(this,value)}[$toHTML](availableSpace){setTabIndex(this);if(this.presence===\"hidden\"||this.presence===\"inactive\"){return HTMLResult.EMPTY}fixDimensions(this);this[$pushPara]();const savedW=this.w;const savedH=this.h;const{w:w,h:h,isBroken:isBroken}=layoutNode(this,availableSpace);if(w&&this.w===\"\"){if(isBroken&&this[$getSubformParent]()[$isThereMoreWidth]()){this[$popPara]();return HTMLResult.FAILURE}this.w=w}if(h&&this.h===\"\"){this.h=h}setFirstUnsplittable(this);if(!checkDimensions(this,availableSpace)){this.w=savedW;this.h=savedH;this[$popPara]();return HTMLResult.FAILURE}unsetFirstUnsplittable(this);const style=toStyle(this,\"font\",\"hAlign\",\"dimensions\",\"position\",\"presence\",\"rotate\",\"anchorType\",\"border\",\"margin\");setMinMaxDimensions(this,style);if(style.margin){style.padding=style.margin;delete style.margin}const classNames=[\"xfaDraw\"];if(this.font){classNames.push(\"xfaFont\")}if(isPrintOnly(this)){classNames.push(\"xfaPrintOnly\")}const attributes={style:style,id:this[$uid],class:classNames};if(this.name){attributes.xfaName=this.name}const html={name:\"div\",attributes:attributes,children:[]};applyAssist(this,attributes);const bbox=computeBbox(this,html,availableSpace);const value=this.value?this.value[$toHTML](availableSpace).html:null;if(value===null){this.w=savedW;this.h=savedH;this[$popPara]();return HTMLResult.success(createWrapper(this,html),bbox)}html.children.push(value);setPara(this,style,value);this.w=savedW;this.h=savedH;this[$popPara]();return HTMLResult.success(createWrapper(this,html),bbox)}}class Edge extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"edge\",true);this.cap=getStringOption(attributes.cap,[\"square\",\"butt\",\"round\"]);this.id=attributes.id||\"\";this.presence=getStringOption(attributes.presence,[\"visible\",\"hidden\",\"inactive\",\"invisible\"]);this.stroke=getStringOption(attributes.stroke,[\"solid\",\"dashDot\",\"dashDotDot\",\"dashed\",\"dotted\",\"embossed\",\"etched\",\"lowered\",\"raised\"]);this.thickness=getMeasurement(attributes.thickness,\"0.5pt\");this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.color=null;this.extras=null}[$toStyle](){const style=toStyle(this,\"visibility\");Object.assign(style,{linecap:this.cap,width:measureToString(this.thickness),color:this.color?this.color[$toStyle]():\"#000000\",style:\"\"});if(this.presence!==\"visible\"){style.style=\"none\"}else{switch(this.stroke){case\"solid\":style.style=\"solid\";break;case\"dashDot\":style.style=\"dashed\";break;case\"dashDotDot\":style.style=\"dashed\";break;case\"dashed\":style.style=\"dashed\";break;case\"dotted\":style.style=\"dotted\";break;case\"embossed\":style.style=\"ridge\";break;case\"etched\":style.style=\"groove\";break;case\"lowered\":style.style=\"inset\";break;case\"raised\":style.style=\"outset\";break}}return style}}class Encoding extends OptionObject{constructor(attributes){super(TEMPLATE_NS_ID,\"encoding\",[\"adbe.x509.rsa_sha1\",\"adbe.pkcs7.detached\",\"adbe.pkcs7.sha1\"]);this.id=attributes.id||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class Encodings extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"encodings\",true);this.id=attributes.id||\"\";this.type=getStringOption(attributes.type,[\"optional\",\"required\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.encoding=new XFAObjectArray}}class Encrypt extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"encrypt\",true);this.id=attributes.id||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.certificate=null}}class EncryptData extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"encryptData\",true);this.id=attributes.id||\"\";this.operation=getStringOption(attributes.operation,[\"encrypt\",\"decrypt\"]);this.target=attributes.target||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.filter=null;this.manifest=null}}class Encryption extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"encryption\",true);this.id=attributes.id||\"\";this.type=getStringOption(attributes.type,[\"optional\",\"required\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.certificate=new XFAObjectArray}}class EncryptionMethod extends OptionObject{constructor(attributes){super(TEMPLATE_NS_ID,\"encryptionMethod\",[\"\",\"AES256-CBC\",\"TRIPLEDES-CBC\",\"AES128-CBC\",\"AES192-CBC\"]);this.id=attributes.id||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class EncryptionMethods extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"encryptionMethods\",true);this.id=attributes.id||\"\";this.type=getStringOption(attributes.type,[\"optional\",\"required\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.encryptionMethod=new XFAObjectArray}}class Event extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"event\",true);this.activity=getStringOption(attributes.activity,[\"click\",\"change\",\"docClose\",\"docReady\",\"enter\",\"exit\",\"full\",\"indexChange\",\"initialize\",\"mouseDown\",\"mouseEnter\",\"mouseExit\",\"mouseUp\",\"postExecute\",\"postOpen\",\"postPrint\",\"postSave\",\"postSign\",\"postSubmit\",\"preExecute\",\"preOpen\",\"prePrint\",\"preSave\",\"preSign\",\"preSubmit\",\"ready\",\"validationState\"]);this.id=attributes.id||\"\";this.listen=getStringOption(attributes.listen,[\"refOnly\",\"refAndDescendents\"]);this.name=attributes.name||\"\";this.ref=attributes.ref||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.extras=null;this.encryptData=null;this.execute=null;this.script=null;this.signData=null;this.submit=null}}class ExData extends ContentObject{constructor(attributes){super(TEMPLATE_NS_ID,\"exData\");this.contentType=attributes.contentType||\"\";this.href=attributes.href||\"\";this.id=attributes.id||\"\";this.maxLength=getInteger({data:attributes.maxLength,defaultValue:-1,validate:x=>x>=-1});this.name=attributes.name||\"\";this.rid=attributes.rid||\"\";this.transferEncoding=getStringOption(attributes.transferEncoding,[\"none\",\"base64\",\"package\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}[$isCDATAXml](){return this.contentType===\"text/html\"}[$onChild](child){if(this.contentType===\"text/html\"&&child[$namespaceId]===NamespaceIds.xhtml.id){this[$content]=child;return true}if(this.contentType===\"text/xml\"){this[$content]=child;return true}return false}[$toHTML](availableSpace){if(this.contentType!==\"text/html\"||!this[$content]){return HTMLResult.EMPTY}return this[$content][$toHTML](availableSpace)}}class ExObject extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"exObject\",true);this.archive=attributes.archive||\"\";this.classId=attributes.classId||\"\";this.codeBase=attributes.codeBase||\"\";this.codeType=attributes.codeType||\"\";this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.extras=null;this.boolean=new XFAObjectArray;this.date=new XFAObjectArray;this.dateTime=new XFAObjectArray;this.decimal=new XFAObjectArray;this.exData=new XFAObjectArray;this.exObject=new XFAObjectArray;this.float=new XFAObjectArray;this.image=new XFAObjectArray;this.integer=new XFAObjectArray;this.text=new XFAObjectArray;this.time=new XFAObjectArray}}class ExclGroup extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"exclGroup\",true);this.access=getStringOption(attributes.access,[\"open\",\"nonInteractive\",\"protected\",\"readOnly\"]);this.accessKey=attributes.accessKey||\"\";this.anchorType=getStringOption(attributes.anchorType,[\"topLeft\",\"bottomCenter\",\"bottomLeft\",\"bottomRight\",\"middleCenter\",\"middleLeft\",\"middleRight\",\"topCenter\",\"topRight\"]);this.colSpan=getInteger({data:attributes.colSpan,defaultValue:1,validate:n=>n>=1||n===-1});this.h=attributes.h?getMeasurement(attributes.h):\"\";this.hAlign=getStringOption(attributes.hAlign,[\"left\",\"center\",\"justify\",\"justifyAll\",\"radix\",\"right\"]);this.id=attributes.id||\"\";this.layout=getStringOption(attributes.layout,[\"position\",\"lr-tb\",\"rl-row\",\"rl-tb\",\"row\",\"table\",\"tb\"]);this.maxH=getMeasurement(attributes.maxH,\"0pt\");this.maxW=getMeasurement(attributes.maxW,\"0pt\");this.minH=getMeasurement(attributes.minH,\"0pt\");this.minW=getMeasurement(attributes.minW,\"0pt\");this.name=attributes.name||\"\";this.presence=getStringOption(attributes.presence,[\"visible\",\"hidden\",\"inactive\",\"invisible\"]);this.relevant=getRelevant(attributes.relevant);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.w=attributes.w?getMeasurement(attributes.w):\"\";this.x=getMeasurement(attributes.x,\"0pt\");this.y=getMeasurement(attributes.y,\"0pt\");this.assist=null;this.bind=null;this.border=null;this.calculate=null;this.caption=null;this.desc=null;this.extras=null;this.margin=null;this.para=null;this.traversal=null;this.validate=null;this.connect=new XFAObjectArray;this.event=new XFAObjectArray;this.field=new XFAObjectArray;this.setProperty=new XFAObjectArray}[$isBindable](){return true}[$hasSettableValue](){return true}[$setValue](value){for(const field of this.field.children){if(!field.value){const nodeValue=new Value({});field[$appendChild](nodeValue);field.value=nodeValue}field.value[$setValue](value)}}[$isThereMoreWidth](){return this.layout.endsWith(\"-tb\")&&this[$extra].attempt===0&&this[$extra].numberInLine>0||this[$getParent]()[$isThereMoreWidth]()}[$isSplittable](){const parent=this[$getSubformParent]();if(!parent[$isSplittable]()){return false}if(this[$extra]._isSplittable!==undefined){return this[$extra]._isSplittable}if(this.layout===\"position\"||this.layout.includes(\"row\")){this[$extra]._isSplittable=false;return false}if(parent.layout?.endsWith(\"-tb\")&&parent[$extra].numberInLine!==0){return false}this[$extra]._isSplittable=true;return true}[$flushHTML](){return flushHTML(this)}[$addHTML](html,bbox){addHTML(this,html,bbox)}[$getAvailableSpace](){return getAvailableSpace(this)}[$toHTML](availableSpace){setTabIndex(this);if(this.presence===\"hidden\"||this.presence===\"inactive\"||this.h===0||this.w===0){return HTMLResult.EMPTY}fixDimensions(this);const children=[];const attributes={id:this[$uid],class:[]};setAccess(this,attributes.class);this[$extra]||=Object.create(null);Object.assign(this[$extra],{children:children,attributes:attributes,attempt:0,line:null,numberInLine:0,availableSpace:{width:Math.min(this.w||Infinity,availableSpace.width),height:Math.min(this.h||Infinity,availableSpace.height)},width:0,height:0,prevHeight:0,currentWidth:0});const isSplittable=this[$isSplittable]();if(!isSplittable){setFirstUnsplittable(this)}if(!checkDimensions(this,availableSpace)){return HTMLResult.FAILURE}const filter=new Set([\"field\"]);if(this.layout.includes(\"row\")){const columnWidths=this[$getSubformParent]().columnWidths;if(Array.isArray(columnWidths)&&columnWidths.length>0){this[$extra].columnWidths=columnWidths;this[$extra].currentColumn=0}}const style=toStyle(this,\"anchorType\",\"dimensions\",\"position\",\"presence\",\"border\",\"margin\",\"hAlign\");const classNames=[\"xfaExclgroup\"];const cl=layoutClass(this);if(cl){classNames.push(cl)}if(isPrintOnly(this)){classNames.push(\"xfaPrintOnly\")}attributes.style=style;attributes.class=classNames;if(this.name){attributes.xfaName=this.name}this[$pushPara]();const isLrTb=this.layout===\"lr-tb\"||this.layout===\"rl-tb\";const maxRun=isLrTb?MAX_ATTEMPTS_FOR_LRTB_LAYOUT:1;for(;this[$extra].attempt<maxRun;this[$extra].attempt++){if(isLrTb&&this[$extra].attempt===MAX_ATTEMPTS_FOR_LRTB_LAYOUT-1){this[$extra].numberInLine=0}const result=this[$childrenToHTML]({filter:filter,include:true});if(result.success){break}if(result.isBreak()){this[$popPara]();return result}if(isLrTb&&this[$extra].attempt===0&&this[$extra].numberInLine===0&&!this[$getTemplateRoot]()[$extra].noLayoutFailure){this[$extra].attempt=maxRun;break}}this[$popPara]();if(!isSplittable){unsetFirstUnsplittable(this)}if(this[$extra].attempt===maxRun){if(!isSplittable){delete this[$extra]}return HTMLResult.FAILURE}let marginH=0;let marginV=0;if(this.margin){marginH=this.margin.leftInset+this.margin.rightInset;marginV=this.margin.topInset+this.margin.bottomInset}const width=Math.max(this[$extra].width+marginH,this.w||0);const height=Math.max(this[$extra].height+marginV,this.h||0);const bbox=[this.x,this.y,width,height];if(this.w===\"\"){style.width=measureToString(width)}if(this.h===\"\"){style.height=measureToString(height)}const html={name:\"div\",attributes:attributes,children:children};applyAssist(this,attributes);delete this[$extra];return HTMLResult.success(createWrapper(this,html),bbox)}}class Execute extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"execute\");this.connection=attributes.connection||\"\";this.executeType=getStringOption(attributes.executeType,[\"import\",\"remerge\"]);this.id=attributes.id||\"\";this.runAt=getStringOption(attributes.runAt,[\"client\",\"both\",\"server\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class Extras extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"extras\",true);this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.boolean=new XFAObjectArray;this.date=new XFAObjectArray;this.dateTime=new XFAObjectArray;this.decimal=new XFAObjectArray;this.exData=new XFAObjectArray;this.extras=new XFAObjectArray;this.float=new XFAObjectArray;this.image=new XFAObjectArray;this.integer=new XFAObjectArray;this.text=new XFAObjectArray;this.time=new XFAObjectArray}}class Field extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"field\",true);this.access=getStringOption(attributes.access,[\"open\",\"nonInteractive\",\"protected\",\"readOnly\"]);this.accessKey=attributes.accessKey||\"\";this.anchorType=getStringOption(attributes.anchorType,[\"topLeft\",\"bottomCenter\",\"bottomLeft\",\"bottomRight\",\"middleCenter\",\"middleLeft\",\"middleRight\",\"topCenter\",\"topRight\"]);this.colSpan=getInteger({data:attributes.colSpan,defaultValue:1,validate:n=>n>=1||n===-1});this.h=attributes.h?getMeasurement(attributes.h):\"\";this.hAlign=getStringOption(attributes.hAlign,[\"left\",\"center\",\"justify\",\"justifyAll\",\"radix\",\"right\"]);this.id=attributes.id||\"\";this.locale=attributes.locale||\"\";this.maxH=getMeasurement(attributes.maxH,\"0pt\");this.maxW=getMeasurement(attributes.maxW,\"0pt\");this.minH=getMeasurement(attributes.minH,\"0pt\");this.minW=getMeasurement(attributes.minW,\"0pt\");this.name=attributes.name||\"\";this.presence=getStringOption(attributes.presence,[\"visible\",\"hidden\",\"inactive\",\"invisible\"]);this.relevant=getRelevant(attributes.relevant);this.rotate=getInteger({data:attributes.rotate,defaultValue:0,validate:x=>x%90===0});this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.w=attributes.w?getMeasurement(attributes.w):\"\";this.x=getMeasurement(attributes.x,\"0pt\");this.y=getMeasurement(attributes.y,\"0pt\");this.assist=null;this.bind=null;this.border=null;this.calculate=null;this.caption=null;this.desc=null;this.extras=null;this.font=null;this.format=null;this.items=new XFAObjectArray(2);this.keep=null;this.margin=null;this.para=null;this.traversal=null;this.ui=null;this.validate=null;this.value=null;this.bindItems=new XFAObjectArray;this.connect=new XFAObjectArray;this.event=new XFAObjectArray;this.setProperty=new XFAObjectArray}[$isBindable](){return true}[$setValue](value){_setValue(this,value)}[$toHTML](availableSpace){setTabIndex(this);if(!this.ui){this.ui=new Ui({});this.ui[$globalData]=this[$globalData];this[$appendChild](this.ui);let node;switch(this.items.children.length){case 0:node=new TextEdit({});this.ui.textEdit=node;break;case 1:node=new CheckButton({});this.ui.checkButton=node;break;case 2:node=new ChoiceList({});this.ui.choiceList=node;break}this.ui[$appendChild](node)}if(!this.ui||this.presence===\"hidden\"||this.presence===\"inactive\"||this.h===0||this.w===0){return HTMLResult.EMPTY}if(this.caption){delete this.caption[$extra]}this[$pushPara]();const caption=this.caption?this.caption[$toHTML](availableSpace).html:null;const savedW=this.w;const savedH=this.h;let marginH=0;let marginV=0;if(this.margin){marginH=this.margin.leftInset+this.margin.rightInset;marginV=this.margin.topInset+this.margin.bottomInset}let borderDims=null;if(this.w===\"\"||this.h===\"\"){let width=null;let height=null;let uiW=0;let uiH=0;if(this.ui.checkButton){uiW=uiH=this.ui.checkButton.size}else{const{w:w,h:h}=layoutNode(this,availableSpace);if(w!==null){uiW=w;uiH=h}else{uiH=fonts_getMetrics(this.font,true).lineNoGap}}borderDims=getBorderDims(this.ui[$getExtra]());uiW+=borderDims.w;uiH+=borderDims.h;if(this.caption){const{w:w,h:h,isBroken:isBroken}=this.caption[$getExtra](availableSpace);if(isBroken&&this[$getSubformParent]()[$isThereMoreWidth]()){this[$popPara]();return HTMLResult.FAILURE}width=w;height=h;switch(this.caption.placement){case\"left\":case\"right\":case\"inline\":width+=uiW;break;case\"top\":case\"bottom\":height+=uiH;break}}else{width=uiW;height=uiH}if(width&&this.w===\"\"){width+=marginH;this.w=Math.min(this.maxW<=0?Infinity:this.maxW,this.minW+1<width?width:this.minW)}if(height&&this.h===\"\"){height+=marginV;this.h=Math.min(this.maxH<=0?Infinity:this.maxH,this.minH+1<height?height:this.minH)}}this[$popPara]();fixDimensions(this);setFirstUnsplittable(this);if(!checkDimensions(this,availableSpace)){this.w=savedW;this.h=savedH;this[$popPara]();return HTMLResult.FAILURE}unsetFirstUnsplittable(this);const style=toStyle(this,\"font\",\"dimensions\",\"position\",\"rotate\",\"anchorType\",\"presence\",\"margin\",\"hAlign\");setMinMaxDimensions(this,style);const classNames=[\"xfaField\"];if(this.font){classNames.push(\"xfaFont\")}if(isPrintOnly(this)){classNames.push(\"xfaPrintOnly\")}const attributes={style:style,id:this[$uid],class:classNames};if(style.margin){style.padding=style.margin;delete style.margin}setAccess(this,classNames);if(this.name){attributes.xfaName=this.name}const children=[];const html={name:\"div\",attributes:attributes,children:children};applyAssist(this,attributes);const borderStyle=this.border?this.border[$toStyle]():null;const bbox=computeBbox(this,html,availableSpace);const ui=this.ui[$toHTML]().html;if(!ui){Object.assign(style,borderStyle);return HTMLResult.success(createWrapper(this,html),bbox)}if(this[$tabIndex]){if(ui.children?.[0]){ui.children[0].attributes.tabindex=this[$tabIndex]}else{ui.attributes.tabindex=this[$tabIndex]}}ui.attributes.style||=Object.create(null);let aElement=null;if(this.ui.button){if(ui.children.length===1){[aElement]=ui.children.splice(0,1)}Object.assign(ui.attributes.style,borderStyle)}else{Object.assign(style,borderStyle)}children.push(ui);if(this.value){if(this.ui.imageEdit){ui.children.push(this.value[$toHTML]().html)}else if(!this.ui.button){let value=\"\";if(this.value.exData){value=this.value.exData[$text]()}else if(this.value.text){value=this.value.text[$getExtra]()}else{const htmlValue=this.value[$toHTML]().html;if(htmlValue!==null){value=htmlValue.children[0].value}}if(this.ui.textEdit&&this.value.text?.maxChars){ui.children[0].attributes.maxLength=this.value.text.maxChars}if(value){if(this.ui.numericEdit){value=parseFloat(value);value=isNaN(value)?\"\":value.toString()}if(ui.children[0].name===\"textarea\"){ui.children[0].attributes.textContent=value}else{ui.children[0].attributes.value=value}}}}if(!this.ui.imageEdit&&ui.children?.[0]&&this.h){borderDims=borderDims||getBorderDims(this.ui[$getExtra]());let captionHeight=0;if(this.caption&&[\"top\",\"bottom\"].includes(this.caption.placement)){captionHeight=this.caption.reserve;if(captionHeight<=0){captionHeight=this.caption[$getExtra](availableSpace).h}const inputHeight=this.h-captionHeight-marginV-borderDims.h;ui.children[0].attributes.style.height=measureToString(inputHeight)}else{ui.children[0].attributes.style.height=\"100%\"}}if(aElement){ui.children.push(aElement)}if(!caption){if(ui.attributes.class){ui.attributes.class.push(\"xfaLeft\")}this.w=savedW;this.h=savedH;return HTMLResult.success(createWrapper(this,html),bbox)}if(this.ui.button){if(style.padding){delete style.padding}if(caption.name===\"div\"){caption.name=\"span\"}ui.children.push(caption);return HTMLResult.success(html,bbox)}else if(this.ui.checkButton){caption.attributes.class[0]=\"xfaCaptionForCheckButton\"}ui.attributes.class||=[];ui.children.splice(0,0,caption);switch(this.caption.placement){case\"left\":ui.attributes.class.push(\"xfaLeft\");break;case\"right\":ui.attributes.class.push(\"xfaRight\");break;case\"top\":ui.attributes.class.push(\"xfaTop\");break;case\"bottom\":ui.attributes.class.push(\"xfaBottom\");break;case\"inline\":ui.attributes.class.push(\"xfaLeft\");break}this.w=savedW;this.h=savedH;return HTMLResult.success(createWrapper(this,html),bbox)}}class Fill extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"fill\",true);this.id=attributes.id||\"\";this.presence=getStringOption(attributes.presence,[\"visible\",\"hidden\",\"inactive\",\"invisible\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.color=null;this.extras=null;this.linear=null;this.pattern=null;this.radial=null;this.solid=null;this.stipple=null}[$toStyle](){const parent=this[$getParent]();const grandpa=parent[$getParent]();const ggrandpa=grandpa[$getParent]();const style=Object.create(null);let propName=\"color\";let altPropName=propName;if(parent instanceof Border){propName=\"background-color\";altPropName=\"background\";if(ggrandpa instanceof Ui){style.backgroundColor=\"white\"}}if(parent instanceof Rectangle||parent instanceof Arc){propName=altPropName=\"fill\";style.fill=\"white\"}for(const name of Object.getOwnPropertyNames(this)){if(name===\"extras\"||name===\"color\"){continue}const obj=this[name];if(!(obj instanceof XFAObject)){continue}const color=obj[$toStyle](this.color);if(color){style[color.startsWith(\"#\")?propName:altPropName]=color}return style}if(this.color?.value){const color=this.color[$toStyle]();style[color.startsWith(\"#\")?propName:altPropName]=color}return style}}class Filter extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"filter\",true);this.addRevocationInfo=getStringOption(attributes.addRevocationInfo,[\"\",\"required\",\"optional\",\"none\"]);this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.version=getInteger({data:this.version,defaultValue:5,validate:x=>x>=1&&x<=5});this.appearanceFilter=null;this.certificates=null;this.digestMethods=null;this.encodings=null;this.encryptionMethods=null;this.handler=null;this.lockDocument=null;this.mdp=null;this.reasons=null;this.timeStamp=null}}class Float extends ContentObject{constructor(attributes){super(TEMPLATE_NS_ID,\"float\");this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}[$finalize](){const number=parseFloat(this[$content].trim());this[$content]=isNaN(number)?null:number}[$toHTML](availableSpace){return valueToHtml(this[$content]!==null?this[$content].toString():\"\")}}class template_Font extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"font\",true);this.baselineShift=getMeasurement(attributes.baselineShift);this.fontHorizontalScale=getFloat({data:attributes.fontHorizontalScale,defaultValue:100,validate:x=>x>=0});this.fontVerticalScale=getFloat({data:attributes.fontVerticalScale,defaultValue:100,validate:x=>x>=0});this.id=attributes.id||\"\";this.kerningMode=getStringOption(attributes.kerningMode,[\"none\",\"pair\"]);this.letterSpacing=getMeasurement(attributes.letterSpacing,\"0\");this.lineThrough=getInteger({data:attributes.lineThrough,defaultValue:0,validate:x=>x===1||x===2});this.lineThroughPeriod=getStringOption(attributes.lineThroughPeriod,[\"all\",\"word\"]);this.overline=getInteger({data:attributes.overline,defaultValue:0,validate:x=>x===1||x===2});this.overlinePeriod=getStringOption(attributes.overlinePeriod,[\"all\",\"word\"]);this.posture=getStringOption(attributes.posture,[\"normal\",\"italic\"]);this.size=getMeasurement(attributes.size,\"10pt\");this.typeface=attributes.typeface||\"Courier\";this.underline=getInteger({data:attributes.underline,defaultValue:0,validate:x=>x===1||x===2});this.underlinePeriod=getStringOption(attributes.underlinePeriod,[\"all\",\"word\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.weight=getStringOption(attributes.weight,[\"normal\",\"bold\"]);this.extras=null;this.fill=null}[$clean](builder){super[$clean](builder);this[$globalData].usedTypefaces.add(this.typeface)}[$toStyle](){const style=toStyle(this,\"fill\");const color=style.color;if(color){if(color===\"#000000\"){delete style.color}else if(!color.startsWith(\"#\")){style.background=color;style.backgroundClip=\"text\";style.color=\"transparent\"}}if(this.baselineShift){style.verticalAlign=measureToString(this.baselineShift)}style.fontKerning=this.kerningMode===\"none\"?\"none\":\"normal\";style.letterSpacing=measureToString(this.letterSpacing);if(this.lineThrough!==0){style.textDecoration=\"line-through\";if(this.lineThrough===2){style.textDecorationStyle=\"double\"}}if(this.overline!==0){style.textDecoration=\"overline\";if(this.overline===2){style.textDecorationStyle=\"double\"}}style.fontStyle=this.posture;style.fontSize=measureToString(.99*this.size);setFontFamily(this,this,this[$globalData].fontFinder,style);if(this.underline!==0){style.textDecoration=\"underline\";if(this.underline===2){style.textDecorationStyle=\"double\"}}style.fontWeight=this.weight;return style}}class Format extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"format\",true);this.id=attributes.id||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.extras=null;this.picture=null}}class Handler extends StringObject{constructor(attributes){super(TEMPLATE_NS_ID,\"handler\");this.id=attributes.id||\"\";this.type=getStringOption(attributes.type,[\"optional\",\"required\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class Hyphenation extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"hyphenation\");this.excludeAllCaps=getInteger({data:attributes.excludeAllCaps,defaultValue:0,validate:x=>x===1});this.excludeInitialCap=getInteger({data:attributes.excludeInitialCap,defaultValue:0,validate:x=>x===1});this.hyphenate=getInteger({data:attributes.hyphenate,defaultValue:0,validate:x=>x===1});this.id=attributes.id||\"\";this.pushCharacterCount=getInteger({data:attributes.pushCharacterCount,defaultValue:3,validate:x=>x>=0});this.remainCharacterCount=getInteger({data:attributes.remainCharacterCount,defaultValue:3,validate:x=>x>=0});this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.wordCharacterCount=getInteger({data:attributes.wordCharacterCount,defaultValue:7,validate:x=>x>=0})}}class Image extends StringObject{constructor(attributes){super(TEMPLATE_NS_ID,\"image\");this.aspect=getStringOption(attributes.aspect,[\"fit\",\"actual\",\"height\",\"none\",\"width\"]);this.contentType=attributes.contentType||\"\";this.href=attributes.href||\"\";this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.transferEncoding=getStringOption(attributes.transferEncoding,[\"base64\",\"none\",\"package\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}[$toHTML](){if(this.contentType&&!MIMES.has(this.contentType.toLowerCase())){return HTMLResult.EMPTY}let buffer=this[$globalData].images?.get(this.href);if(!buffer&&(this.href||!this[$content])){return HTMLResult.EMPTY}if(!buffer&&this.transferEncoding===\"base64\"){buffer=fromBase64Util(this[$content])}if(!buffer){return HTMLResult.EMPTY}if(!this.contentType){for(const[header,type]of IMAGES_HEADERS){if(buffer.length>header.length&&header.every(((x,i)=>x===buffer[i]))){this.contentType=type;break}}if(!this.contentType){return HTMLResult.EMPTY}}const blob=new Blob([buffer],{type:this.contentType});let style;switch(this.aspect){case\"fit\":case\"actual\":break;case\"height\":style={height:\"100%\",objectFit:\"fill\"};break;case\"none\":style={width:\"100%\",height:\"100%\",objectFit:\"fill\"};break;case\"width\":style={width:\"100%\",objectFit:\"fill\"};break}const parent=this[$getParent]();return HTMLResult.success({name:\"img\",attributes:{class:[\"xfaImage\"],style:style,src:URL.createObjectURL(blob),alt:parent?ariaLabel(parent[$getParent]()):null}})}}class ImageEdit extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"imageEdit\",true);this.data=getStringOption(attributes.data,[\"link\",\"embed\"]);this.id=attributes.id||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.border=null;this.extras=null;this.margin=null}[$toHTML](availableSpace){if(this.data===\"embed\"){return HTMLResult.success({name:\"div\",children:[],attributes:{}})}return HTMLResult.EMPTY}}class Integer extends ContentObject{constructor(attributes){super(TEMPLATE_NS_ID,\"integer\");this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}[$finalize](){const number=parseInt(this[$content].trim(),10);this[$content]=isNaN(number)?null:number}[$toHTML](availableSpace){return valueToHtml(this[$content]!==null?this[$content].toString():\"\")}}class Issuers extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"issuers\",true);this.id=attributes.id||\"\";this.type=getStringOption(attributes.type,[\"optional\",\"required\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.certificate=new XFAObjectArray}}class Items extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"items\",true);this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.presence=getStringOption(attributes.presence,[\"visible\",\"hidden\",\"inactive\",\"invisible\"]);this.ref=attributes.ref||\"\";this.save=getInteger({data:attributes.save,defaultValue:0,validate:x=>x===1});this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.boolean=new XFAObjectArray;this.date=new XFAObjectArray;this.dateTime=new XFAObjectArray;this.decimal=new XFAObjectArray;this.exData=new XFAObjectArray;this.float=new XFAObjectArray;this.image=new XFAObjectArray;this.integer=new XFAObjectArray;this.text=new XFAObjectArray;this.time=new XFAObjectArray}[$toHTML](){const output=[];for(const child of this[$getChildren]()){output.push(child[$text]())}return HTMLResult.success(output)}}class Keep extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"keep\",true);this.id=attributes.id||\"\";const options=[\"none\",\"contentArea\",\"pageArea\"];this.intact=getStringOption(attributes.intact,options);this.next=getStringOption(attributes.next,options);this.previous=getStringOption(attributes.previous,options);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.extras=null}}class KeyUsage extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"keyUsage\");const options=[\"\",\"yes\",\"no\"];this.crlSign=getStringOption(attributes.crlSign,options);this.dataEncipherment=getStringOption(attributes.dataEncipherment,options);this.decipherOnly=getStringOption(attributes.decipherOnly,options);this.digitalSignature=getStringOption(attributes.digitalSignature,options);this.encipherOnly=getStringOption(attributes.encipherOnly,options);this.id=attributes.id||\"\";this.keyAgreement=getStringOption(attributes.keyAgreement,options);this.keyCertSign=getStringOption(attributes.keyCertSign,options);this.keyEncipherment=getStringOption(attributes.keyEncipherment,options);this.nonRepudiation=getStringOption(attributes.nonRepudiation,options);this.type=getStringOption(attributes.type,[\"optional\",\"required\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class Line extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"line\",true);this.hand=getStringOption(attributes.hand,[\"even\",\"left\",\"right\"]);this.id=attributes.id||\"\";this.slope=getStringOption(attributes.slope,[\"\\\\\",\"/\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.edge=null}[$toHTML](){const parent=this[$getParent]()[$getParent]();const edge=this.edge||new Edge({});const edgeStyle=edge[$toStyle]();const style=Object.create(null);const thickness=edge.presence===\"visible\"?edge.thickness:0;style.strokeWidth=measureToString(thickness);style.stroke=edgeStyle.color;let x1,y1,x2,y2;let width=\"100%\";let height=\"100%\";if(parent.w<=thickness){[x1,y1,x2,y2]=[\"50%\",0,\"50%\",\"100%\"];width=style.strokeWidth}else if(parent.h<=thickness){[x1,y1,x2,y2]=[0,\"50%\",\"100%\",\"50%\"];height=style.strokeWidth}else if(this.slope===\"\\\\\"){[x1,y1,x2,y2]=[0,0,\"100%\",\"100%\"]}else{[x1,y1,x2,y2]=[0,\"100%\",\"100%\",0]}const line={name:\"line\",attributes:{xmlns:SVG_NS,x1:x1,y1:y1,x2:x2,y2:y2,style:style}};const svg={name:\"svg\",children:[line],attributes:{xmlns:SVG_NS,width:width,height:height,style:{overflow:\"visible\"}}};if(hasMargin(parent)){return HTMLResult.success({name:\"div\",attributes:{style:{display:\"inline\",width:\"100%\",height:\"100%\"}},children:[svg]})}svg.attributes.style.position=\"absolute\";return HTMLResult.success(svg)}}class Linear extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"linear\",true);this.id=attributes.id||\"\";this.type=getStringOption(attributes.type,[\"toRight\",\"toBottom\",\"toLeft\",\"toTop\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.color=null;this.extras=null}[$toStyle](startColor){startColor=startColor?startColor[$toStyle]():\"#FFFFFF\";const transf=this.type.replace(/([RBLT])/,\" $1\").toLowerCase();const endColor=this.color?this.color[$toStyle]():\"#000000\";return`linear-gradient(${transf}, ${startColor}, ${endColor})`}}class LockDocument extends ContentObject{constructor(attributes){super(TEMPLATE_NS_ID,\"lockDocument\");this.id=attributes.id||\"\";this.type=getStringOption(attributes.type,[\"optional\",\"required\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}[$finalize](){this[$content]=getStringOption(this[$content],[\"auto\",\"0\",\"1\"])}}class Manifest extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"manifest\",true);this.action=getStringOption(attributes.action,[\"include\",\"all\",\"exclude\"]);this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.extras=null;this.ref=new XFAObjectArray}}class Margin extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"margin\",true);this.bottomInset=getMeasurement(attributes.bottomInset,\"0\");this.id=attributes.id||\"\";this.leftInset=getMeasurement(attributes.leftInset,\"0\");this.rightInset=getMeasurement(attributes.rightInset,\"0\");this.topInset=getMeasurement(attributes.topInset,\"0\");this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.extras=null}[$toStyle](){return{margin:measureToString(this.topInset)+\" \"+measureToString(this.rightInset)+\" \"+measureToString(this.bottomInset)+\" \"+measureToString(this.leftInset)}}}class Mdp extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"mdp\");this.id=attributes.id||\"\";this.permissions=getInteger({data:attributes.permissions,defaultValue:2,validate:x=>x===1||x===3});this.signatureType=getStringOption(attributes.signatureType,[\"filler\",\"author\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class Medium extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"medium\");this.id=attributes.id||\"\";this.imagingBBox=getBBox(attributes.imagingBBox);this.long=getMeasurement(attributes.long);this.orientation=getStringOption(attributes.orientation,[\"portrait\",\"landscape\"]);this.short=getMeasurement(attributes.short);this.stock=attributes.stock||\"\";this.trayIn=getStringOption(attributes.trayIn,[\"auto\",\"delegate\",\"pageFront\"]);this.trayOut=getStringOption(attributes.trayOut,[\"auto\",\"delegate\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class Message extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"message\",true);this.id=attributes.id||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.text=new XFAObjectArray}}class NumericEdit extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"numericEdit\",true);this.hScrollPolicy=getStringOption(attributes.hScrollPolicy,[\"auto\",\"off\",\"on\"]);this.id=attributes.id||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.border=null;this.comb=null;this.extras=null;this.margin=null}[$toHTML](availableSpace){const style=toStyle(this,\"border\",\"font\",\"margin\");const field=this[$getParent]()[$getParent]();const html={name:\"input\",attributes:{type:\"text\",fieldId:field[$uid],dataId:field[$data]?.[$uid]||field[$uid],class:[\"xfaTextfield\"],style:style,\"aria-label\":ariaLabel(field),\"aria-required\":false}};if(isRequired(field)){html.attributes[\"aria-required\"]=true;html.attributes.required=true}return HTMLResult.success({name:\"label\",attributes:{class:[\"xfaLabel\"]},children:[html]})}}class Occur extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"occur\",true);this.id=attributes.id||\"\";this.initial=attributes.initial!==\"\"?getInteger({data:attributes.initial,defaultValue:\"\",validate:x=>true}):\"\";this.max=attributes.max!==\"\"?getInteger({data:attributes.max,defaultValue:1,validate:x=>true}):\"\";this.min=attributes.min!==\"\"?getInteger({data:attributes.min,defaultValue:1,validate:x=>true}):\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.extras=null}[$clean](){const parent=this[$getParent]();const originalMin=this.min;if(this.min===\"\"){this.min=parent instanceof PageArea||parent instanceof PageSet?0:1}if(this.max===\"\"){if(originalMin===\"\"){this.max=parent instanceof PageArea||parent instanceof PageSet?-1:1}else{this.max=this.min}}if(this.max!==-1&&this.max<this.min){this.max=this.min}if(this.initial===\"\"){this.initial=parent instanceof Template?1:this.min}}}class Oid extends StringObject{constructor(attributes){super(TEMPLATE_NS_ID,\"oid\");this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class Oids extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"oids\",true);this.id=attributes.id||\"\";this.type=getStringOption(attributes.type,[\"optional\",\"required\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.oid=new XFAObjectArray}}class Overflow extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"overflow\");this.id=attributes.id||\"\";this.leader=attributes.leader||\"\";this.target=attributes.target||\"\";this.trailer=attributes.trailer||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}[$getExtra](){if(!this[$extra]){const parent=this[$getParent]();const root=this[$getTemplateRoot]();const target=root[$searchNode](this.target,parent);const leader=root[$searchNode](this.leader,parent);const trailer=root[$searchNode](this.trailer,parent);this[$extra]={target:target?.[0]||null,leader:leader?.[0]||null,trailer:trailer?.[0]||null,addLeader:false,addTrailer:false}}return this[$extra]}}class PageArea extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"pageArea\",true);this.blankOrNotBlank=getStringOption(attributes.blankOrNotBlank,[\"any\",\"blank\",\"notBlank\"]);this.id=attributes.id||\"\";this.initialNumber=getInteger({data:attributes.initialNumber,defaultValue:1,validate:x=>true});this.name=attributes.name||\"\";this.numbered=getInteger({data:attributes.numbered,defaultValue:1,validate:x=>true});this.oddOrEven=getStringOption(attributes.oddOrEven,[\"any\",\"even\",\"odd\"]);this.pagePosition=getStringOption(attributes.pagePosition,[\"any\",\"first\",\"last\",\"only\",\"rest\"]);this.relevant=getRelevant(attributes.relevant);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.desc=null;this.extras=null;this.medium=null;this.occur=null;this.area=new XFAObjectArray;this.contentArea=new XFAObjectArray;this.draw=new XFAObjectArray;this.exclGroup=new XFAObjectArray;this.field=new XFAObjectArray;this.subform=new XFAObjectArray}[$isUsable](){if(!this[$extra]){this[$extra]={numberOfUse:0};return true}return!this.occur||this.occur.max===-1||this[$extra].numberOfUse<this.occur.max}[$cleanPage](){delete this[$extra]}[$getNextPage](){this[$extra]||={numberOfUse:0};const parent=this[$getParent]();if(parent.relation===\"orderedOccurrence\"){if(this[$isUsable]()){this[$extra].numberOfUse+=1;return this}}return parent[$getNextPage]()}[$getAvailableSpace](){return this[$extra].space||{width:0,height:0}}[$toHTML](){this[$extra]||={numberOfUse:1};const children=[];this[$extra].children=children;const style=Object.create(null);if(this.medium&&this.medium.short&&this.medium.long){style.width=measureToString(this.medium.short);style.height=measureToString(this.medium.long);this[$extra].space={width:this.medium.short,height:this.medium.long};if(this.medium.orientation===\"landscape\"){const x=style.width;style.width=style.height;style.height=x;this[$extra].space={width:this.medium.long,height:this.medium.short}}}else{warn(\"XFA - No medium specified in pageArea: please file a bug.\")}this[$childrenToHTML]({filter:new Set([\"area\",\"draw\",\"field\",\"subform\"]),include:true});this[$childrenToHTML]({filter:new Set([\"contentArea\"]),include:true});return HTMLResult.success({name:\"div\",children:children,attributes:{class:[\"xfaPage\"],id:this[$uid],style:style,xfaName:this.name}})}}class PageSet extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"pageSet\",true);this.duplexImposition=getStringOption(attributes.duplexImposition,[\"longEdge\",\"shortEdge\"]);this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.relation=getStringOption(attributes.relation,[\"orderedOccurrence\",\"duplexPaginated\",\"simplexPaginated\"]);this.relevant=getRelevant(attributes.relevant);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.extras=null;this.occur=null;this.pageArea=new XFAObjectArray;this.pageSet=new XFAObjectArray}[$cleanPage](){for(const page of this.pageArea.children){page[$cleanPage]()}for(const page of this.pageSet.children){page[$cleanPage]()}}[$isUsable](){return!this.occur||this.occur.max===-1||this[$extra].numberOfUse<this.occur.max}[$getNextPage](){this[$extra]||={numberOfUse:1,pageIndex:-1,pageSetIndex:-1};if(this.relation===\"orderedOccurrence\"){if(this[$extra].pageIndex+1<this.pageArea.children.length){this[$extra].pageIndex+=1;const pageArea=this.pageArea.children[this[$extra].pageIndex];return pageArea[$getNextPage]()}if(this[$extra].pageSetIndex+1<this.pageSet.children.length){this[$extra].pageSetIndex+=1;return this.pageSet.children[this[$extra].pageSetIndex][$getNextPage]()}if(this[$isUsable]()){this[$extra].numberOfUse+=1;this[$extra].pageIndex=-1;this[$extra].pageSetIndex=-1;return this[$getNextPage]()}const parent=this[$getParent]();if(parent instanceof PageSet){return parent[$getNextPage]()}this[$cleanPage]();return this[$getNextPage]()}const pageNumber=this[$getTemplateRoot]()[$extra].pageNumber;const parity=pageNumber%2===0?\"even\":\"odd\";const position=pageNumber===0?\"first\":\"rest\";let page=this.pageArea.children.find((p=>p.oddOrEven===parity&&p.pagePosition===position));if(page){return page}page=this.pageArea.children.find((p=>p.oddOrEven===\"any\"&&p.pagePosition===position));if(page){return page}page=this.pageArea.children.find((p=>p.oddOrEven===\"any\"&&p.pagePosition===\"any\"));if(page){return page}return this.pageArea.children[0]}}class Para extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"para\",true);this.hAlign=getStringOption(attributes.hAlign,[\"left\",\"center\",\"justify\",\"justifyAll\",\"radix\",\"right\"]);this.id=attributes.id||\"\";this.lineHeight=attributes.lineHeight?getMeasurement(attributes.lineHeight,\"0pt\"):\"\";this.marginLeft=attributes.marginLeft?getMeasurement(attributes.marginLeft,\"0pt\"):\"\";this.marginRight=attributes.marginRight?getMeasurement(attributes.marginRight,\"0pt\"):\"\";this.orphans=getInteger({data:attributes.orphans,defaultValue:0,validate:x=>x>=0});this.preserve=attributes.preserve||\"\";this.radixOffset=attributes.radixOffset?getMeasurement(attributes.radixOffset,\"0pt\"):\"\";this.spaceAbove=attributes.spaceAbove?getMeasurement(attributes.spaceAbove,\"0pt\"):\"\";this.spaceBelow=attributes.spaceBelow?getMeasurement(attributes.spaceBelow,\"0pt\"):\"\";this.tabDefault=attributes.tabDefault?getMeasurement(this.tabDefault):\"\";this.tabStops=(attributes.tabStops||\"\").trim().split(/\\s+/).map(((x,i)=>i%2===1?getMeasurement(x):x));this.textIndent=attributes.textIndent?getMeasurement(attributes.textIndent,\"0pt\"):\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.vAlign=getStringOption(attributes.vAlign,[\"top\",\"bottom\",\"middle\"]);this.widows=getInteger({data:attributes.widows,defaultValue:0,validate:x=>x>=0});this.hyphenation=null}[$toStyle](){const style=toStyle(this,\"hAlign\");if(this.marginLeft!==\"\"){style.paddingLeft=measureToString(this.marginLeft)}if(this.marginRight!==\"\"){style.paddingRight=measureToString(this.marginRight)}if(this.spaceAbove!==\"\"){style.paddingTop=measureToString(this.spaceAbove)}if(this.spaceBelow!==\"\"){style.paddingBottom=measureToString(this.spaceBelow)}if(this.textIndent!==\"\"){style.textIndent=measureToString(this.textIndent);fixTextIndent(style)}if(this.lineHeight>0){style.lineHeight=measureToString(this.lineHeight)}if(this.tabDefault!==\"\"){style.tabSize=measureToString(this.tabDefault)}if(this.tabStops.length>0){}if(this.hyphenatation){Object.assign(style,this.hyphenatation[$toStyle]())}return style}}class PasswordEdit extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"passwordEdit\",true);this.hScrollPolicy=getStringOption(attributes.hScrollPolicy,[\"auto\",\"off\",\"on\"]);this.id=attributes.id||\"\";this.passwordChar=attributes.passwordChar||\"*\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.border=null;this.extras=null;this.margin=null}}class template_Pattern extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"pattern\",true);this.id=attributes.id||\"\";this.type=getStringOption(attributes.type,[\"crossHatch\",\"crossDiagonal\",\"diagonalLeft\",\"diagonalRight\",\"horizontal\",\"vertical\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.color=null;this.extras=null}[$toStyle](startColor){startColor=startColor?startColor[$toStyle]():\"#FFFFFF\";const endColor=this.color?this.color[$toStyle]():\"#000000\";const width=5;const cmd=\"repeating-linear-gradient\";const colors=`${startColor},${startColor} ${width}px,${endColor} ${width}px,${endColor} ${2*width}px`;switch(this.type){case\"crossHatch\":return`${cmd}(to top,${colors}) ${cmd}(to right,${colors})`;case\"crossDiagonal\":return`${cmd}(45deg,${colors}) ${cmd}(-45deg,${colors})`;case\"diagonalLeft\":return`${cmd}(45deg,${colors})`;case\"diagonalRight\":return`${cmd}(-45deg,${colors})`;case\"horizontal\":return`${cmd}(to top,${colors})`;case\"vertical\":return`${cmd}(to right,${colors})`}return\"\"}}class Picture extends StringObject{constructor(attributes){super(TEMPLATE_NS_ID,\"picture\");this.id=attributes.id||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class Proto extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"proto\",true);this.appearanceFilter=new XFAObjectArray;this.arc=new XFAObjectArray;this.area=new XFAObjectArray;this.assist=new XFAObjectArray;this.barcode=new XFAObjectArray;this.bindItems=new XFAObjectArray;this.bookend=new XFAObjectArray;this.boolean=new XFAObjectArray;this.border=new XFAObjectArray;this.break=new XFAObjectArray;this.breakAfter=new XFAObjectArray;this.breakBefore=new XFAObjectArray;this.button=new XFAObjectArray;this.calculate=new XFAObjectArray;this.caption=new XFAObjectArray;this.certificate=new XFAObjectArray;this.certificates=new XFAObjectArray;this.checkButton=new XFAObjectArray;this.choiceList=new XFAObjectArray;this.color=new XFAObjectArray;this.comb=new XFAObjectArray;this.connect=new XFAObjectArray;this.contentArea=new XFAObjectArray;this.corner=new XFAObjectArray;this.date=new XFAObjectArray;this.dateTime=new XFAObjectArray;this.dateTimeEdit=new XFAObjectArray;this.decimal=new XFAObjectArray;this.defaultUi=new XFAObjectArray;this.desc=new XFAObjectArray;this.digestMethod=new XFAObjectArray;this.digestMethods=new XFAObjectArray;this.draw=new XFAObjectArray;this.edge=new XFAObjectArray;this.encoding=new XFAObjectArray;this.encodings=new XFAObjectArray;this.encrypt=new XFAObjectArray;this.encryptData=new XFAObjectArray;this.encryption=new XFAObjectArray;this.encryptionMethod=new XFAObjectArray;this.encryptionMethods=new XFAObjectArray;this.event=new XFAObjectArray;this.exData=new XFAObjectArray;this.exObject=new XFAObjectArray;this.exclGroup=new XFAObjectArray;this.execute=new XFAObjectArray;this.extras=new XFAObjectArray;this.field=new XFAObjectArray;this.fill=new XFAObjectArray;this.filter=new XFAObjectArray;this.float=new XFAObjectArray;this.font=new XFAObjectArray;this.format=new XFAObjectArray;this.handler=new XFAObjectArray;this.hyphenation=new XFAObjectArray;this.image=new XFAObjectArray;this.imageEdit=new XFAObjectArray;this.integer=new XFAObjectArray;this.issuers=new XFAObjectArray;this.items=new XFAObjectArray;this.keep=new XFAObjectArray;this.keyUsage=new XFAObjectArray;this.line=new XFAObjectArray;this.linear=new XFAObjectArray;this.lockDocument=new XFAObjectArray;this.manifest=new XFAObjectArray;this.margin=new XFAObjectArray;this.mdp=new XFAObjectArray;this.medium=new XFAObjectArray;this.message=new XFAObjectArray;this.numericEdit=new XFAObjectArray;this.occur=new XFAObjectArray;this.oid=new XFAObjectArray;this.oids=new XFAObjectArray;this.overflow=new XFAObjectArray;this.pageArea=new XFAObjectArray;this.pageSet=new XFAObjectArray;this.para=new XFAObjectArray;this.passwordEdit=new XFAObjectArray;this.pattern=new XFAObjectArray;this.picture=new XFAObjectArray;this.radial=new XFAObjectArray;this.reason=new XFAObjectArray;this.reasons=new XFAObjectArray;this.rectangle=new XFAObjectArray;this.ref=new XFAObjectArray;this.script=new XFAObjectArray;this.setProperty=new XFAObjectArray;this.signData=new XFAObjectArray;this.signature=new XFAObjectArray;this.signing=new XFAObjectArray;this.solid=new XFAObjectArray;this.speak=new XFAObjectArray;this.stipple=new XFAObjectArray;this.subform=new XFAObjectArray;this.subformSet=new XFAObjectArray;this.subjectDN=new XFAObjectArray;this.subjectDNs=new XFAObjectArray;this.submit=new XFAObjectArray;this.text=new XFAObjectArray;this.textEdit=new XFAObjectArray;this.time=new XFAObjectArray;this.timeStamp=new XFAObjectArray;this.toolTip=new XFAObjectArray;this.traversal=new XFAObjectArray;this.traverse=new XFAObjectArray;this.ui=new XFAObjectArray;this.validate=new XFAObjectArray;this.value=new XFAObjectArray;this.variables=new XFAObjectArray}}class Radial extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"radial\",true);this.id=attributes.id||\"\";this.type=getStringOption(attributes.type,[\"toEdge\",\"toCenter\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.color=null;this.extras=null}[$toStyle](startColor){startColor=startColor?startColor[$toStyle]():\"#FFFFFF\";const endColor=this.color?this.color[$toStyle]():\"#000000\";const colors=this.type===\"toEdge\"?`${startColor},${endColor}`:`${endColor},${startColor}`;return`radial-gradient(circle at center, ${colors})`}}class Reason extends StringObject{constructor(attributes){super(TEMPLATE_NS_ID,\"reason\");this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class Reasons extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"reasons\",true);this.id=attributes.id||\"\";this.type=getStringOption(attributes.type,[\"optional\",\"required\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.reason=new XFAObjectArray}}class Rectangle extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"rectangle\",true);this.hand=getStringOption(attributes.hand,[\"even\",\"left\",\"right\"]);this.id=attributes.id||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.corner=new XFAObjectArray(4);this.edge=new XFAObjectArray(4);this.fill=null}[$toHTML](){const edge=this.edge.children.length?this.edge.children[0]:new Edge({});const edgeStyle=edge[$toStyle]();const style=Object.create(null);if(this.fill?.presence===\"visible\"){Object.assign(style,this.fill[$toStyle]())}else{style.fill=\"transparent\"}style.strokeWidth=measureToString(edge.presence===\"visible\"?edge.thickness:0);style.stroke=edgeStyle.color;const corner=this.corner.children.length?this.corner.children[0]:new Corner({});const cornerStyle=corner[$toStyle]();const rect={name:\"rect\",attributes:{xmlns:SVG_NS,width:\"100%\",height:\"100%\",x:0,y:0,rx:cornerStyle.radius,ry:cornerStyle.radius,style:style}};const svg={name:\"svg\",children:[rect],attributes:{xmlns:SVG_NS,style:{overflow:\"visible\"},width:\"100%\",height:\"100%\"}};const parent=this[$getParent]()[$getParent]();if(hasMargin(parent)){return HTMLResult.success({name:\"div\",attributes:{style:{display:\"inline\",width:\"100%\",height:\"100%\"}},children:[svg]})}svg.attributes.style.position=\"absolute\";return HTMLResult.success(svg)}}class RefElement extends StringObject{constructor(attributes){super(TEMPLATE_NS_ID,\"ref\");this.id=attributes.id||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class Script extends StringObject{constructor(attributes){super(TEMPLATE_NS_ID,\"script\");this.binding=attributes.binding||\"\";this.contentType=attributes.contentType||\"\";this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.runAt=getStringOption(attributes.runAt,[\"client\",\"both\",\"server\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class SetProperty extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"setProperty\");this.connection=attributes.connection||\"\";this.ref=attributes.ref||\"\";this.target=attributes.target||\"\"}}class SignData extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"signData\",true);this.id=attributes.id||\"\";this.operation=getStringOption(attributes.operation,[\"sign\",\"clear\",\"verify\"]);this.ref=attributes.ref||\"\";this.target=attributes.target||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.filter=null;this.manifest=null}}class Signature extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"signature\",true);this.id=attributes.id||\"\";this.type=getStringOption(attributes.type,[\"PDF1.3\",\"PDF1.6\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.border=null;this.extras=null;this.filter=null;this.manifest=null;this.margin=null}}class Signing extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"signing\",true);this.id=attributes.id||\"\";this.type=getStringOption(attributes.type,[\"optional\",\"required\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.certificate=new XFAObjectArray}}class Solid extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"solid\",true);this.id=attributes.id||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.extras=null}[$toStyle](startColor){return startColor?startColor[$toStyle]():\"#FFFFFF\"}}class Speak extends StringObject{constructor(attributes){super(TEMPLATE_NS_ID,\"speak\");this.disable=getInteger({data:attributes.disable,defaultValue:0,validate:x=>x===1});this.id=attributes.id||\"\";this.priority=getStringOption(attributes.priority,[\"custom\",\"caption\",\"name\",\"toolTip\"]);this.rid=attributes.rid||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class Stipple extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"stipple\",true);this.id=attributes.id||\"\";this.rate=getInteger({data:attributes.rate,defaultValue:50,validate:x=>x>=0&&x<=100});this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.color=null;this.extras=null}[$toStyle](bgColor){const alpha=this.rate/100;return Util.makeHexColor(Math.round(bgColor.value.r*(1-alpha)+this.value.r*alpha),Math.round(bgColor.value.g*(1-alpha)+this.value.g*alpha),Math.round(bgColor.value.b*(1-alpha)+this.value.b*alpha))}}class Subform extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"subform\",true);this.access=getStringOption(attributes.access,[\"open\",\"nonInteractive\",\"protected\",\"readOnly\"]);this.allowMacro=getInteger({data:attributes.allowMacro,defaultValue:0,validate:x=>x===1});this.anchorType=getStringOption(attributes.anchorType,[\"topLeft\",\"bottomCenter\",\"bottomLeft\",\"bottomRight\",\"middleCenter\",\"middleLeft\",\"middleRight\",\"topCenter\",\"topRight\"]);this.colSpan=getInteger({data:attributes.colSpan,defaultValue:1,validate:n=>n>=1||n===-1});this.columnWidths=(attributes.columnWidths||\"\").trim().split(/\\s+/).map((x=>x===\"-1\"?-1:getMeasurement(x)));this.h=attributes.h?getMeasurement(attributes.h):\"\";this.hAlign=getStringOption(attributes.hAlign,[\"left\",\"center\",\"justify\",\"justifyAll\",\"radix\",\"right\"]);this.id=attributes.id||\"\";this.layout=getStringOption(attributes.layout,[\"position\",\"lr-tb\",\"rl-row\",\"rl-tb\",\"row\",\"table\",\"tb\"]);this.locale=attributes.locale||\"\";this.maxH=getMeasurement(attributes.maxH,\"0pt\");this.maxW=getMeasurement(attributes.maxW,\"0pt\");this.mergeMode=getStringOption(attributes.mergeMode,[\"consumeData\",\"matchTemplate\"]);this.minH=getMeasurement(attributes.minH,\"0pt\");this.minW=getMeasurement(attributes.minW,\"0pt\");this.name=attributes.name||\"\";this.presence=getStringOption(attributes.presence,[\"visible\",\"hidden\",\"inactive\",\"invisible\"]);this.relevant=getRelevant(attributes.relevant);this.restoreState=getStringOption(attributes.restoreState,[\"manual\",\"auto\"]);this.scope=getStringOption(attributes.scope,[\"name\",\"none\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.w=attributes.w?getMeasurement(attributes.w):\"\";this.x=getMeasurement(attributes.x,\"0pt\");this.y=getMeasurement(attributes.y,\"0pt\");this.assist=null;this.bind=null;this.bookend=null;this.border=null;this.break=null;this.calculate=null;this.desc=null;this.extras=null;this.keep=null;this.margin=null;this.occur=null;this.overflow=null;this.pageSet=null;this.para=null;this.traversal=null;this.validate=null;this.variables=null;this.area=new XFAObjectArray;this.breakAfter=new XFAObjectArray;this.breakBefore=new XFAObjectArray;this.connect=new XFAObjectArray;this.draw=new XFAObjectArray;this.event=new XFAObjectArray;this.exObject=new XFAObjectArray;this.exclGroup=new XFAObjectArray;this.field=new XFAObjectArray;this.proto=new XFAObjectArray;this.setProperty=new XFAObjectArray;this.subform=new XFAObjectArray;this.subformSet=new XFAObjectArray}[$getSubformParent](){const parent=this[$getParent]();if(parent instanceof SubformSet){return parent[$getSubformParent]()}return parent}[$isBindable](){return true}[$isThereMoreWidth](){return this.layout.endsWith(\"-tb\")&&this[$extra].attempt===0&&this[$extra].numberInLine>0||this[$getParent]()[$isThereMoreWidth]()}*[$getContainedChildren](){yield*getContainedChildren(this)}[$flushHTML](){return flushHTML(this)}[$addHTML](html,bbox){addHTML(this,html,bbox)}[$getAvailableSpace](){return getAvailableSpace(this)}[$isSplittable](){const parent=this[$getSubformParent]();if(!parent[$isSplittable]()){return false}if(this[$extra]._isSplittable!==undefined){return this[$extra]._isSplittable}if(this.layout===\"position\"||this.layout.includes(\"row\")){this[$extra]._isSplittable=false;return false}if(this.keep&&this.keep.intact!==\"none\"){this[$extra]._isSplittable=false;return false}if(parent.layout?.endsWith(\"-tb\")&&parent[$extra].numberInLine!==0){return false}this[$extra]._isSplittable=true;return true}[$toHTML](availableSpace){setTabIndex(this);if(this.break){if(this.break.after!==\"auto\"||this.break.afterTarget!==\"\"){const node=new BreakAfter({targetType:this.break.after,target:this.break.afterTarget,startNew:this.break.startNew.toString()});node[$globalData]=this[$globalData];this[$appendChild](node);this.breakAfter.push(node)}if(this.break.before!==\"auto\"||this.break.beforeTarget!==\"\"){const node=new BreakBefore({targetType:this.break.before,target:this.break.beforeTarget,startNew:this.break.startNew.toString()});node[$globalData]=this[$globalData];this[$appendChild](node);this.breakBefore.push(node)}if(this.break.overflowTarget!==\"\"){const node=new Overflow({target:this.break.overflowTarget,leader:this.break.overflowLeader,trailer:this.break.overflowTrailer});node[$globalData]=this[$globalData];this[$appendChild](node);this.overflow.push(node)}this[$removeChild](this.break);this.break=null}if(this.presence===\"hidden\"||this.presence===\"inactive\"){return HTMLResult.EMPTY}if(this.breakBefore.children.length>1||this.breakAfter.children.length>1){warn(\"XFA - Several breakBefore or breakAfter in subforms: please file a bug.\")}if(this.breakBefore.children.length>=1){const breakBefore=this.breakBefore.children[0];if(handleBreak(breakBefore)){return HTMLResult.breakNode(breakBefore)}}if(this[$extra]?.afterBreakAfter){return HTMLResult.EMPTY}fixDimensions(this);const children=[];const attributes={id:this[$uid],class:[]};setAccess(this,attributes.class);this[$extra]||=Object.create(null);Object.assign(this[$extra],{children:children,line:null,attributes:attributes,attempt:0,numberInLine:0,availableSpace:{width:Math.min(this.w||Infinity,availableSpace.width),height:Math.min(this.h||Infinity,availableSpace.height)},width:0,height:0,prevHeight:0,currentWidth:0});const root=this[$getTemplateRoot]();const savedNoLayoutFailure=root[$extra].noLayoutFailure;const isSplittable=this[$isSplittable]();if(!isSplittable){setFirstUnsplittable(this)}if(!checkDimensions(this,availableSpace)){return HTMLResult.FAILURE}const filter=new Set([\"area\",\"draw\",\"exclGroup\",\"field\",\"subform\",\"subformSet\"]);if(this.layout.includes(\"row\")){const columnWidths=this[$getSubformParent]().columnWidths;if(Array.isArray(columnWidths)&&columnWidths.length>0){this[$extra].columnWidths=columnWidths;this[$extra].currentColumn=0}}const style=toStyle(this,\"anchorType\",\"dimensions\",\"position\",\"presence\",\"border\",\"margin\",\"hAlign\");const classNames=[\"xfaSubform\"];const cl=layoutClass(this);if(cl){classNames.push(cl)}attributes.style=style;attributes.class=classNames;if(this.name){attributes.xfaName=this.name}if(this.overflow){const overflowExtra=this.overflow[$getExtra]();if(overflowExtra.addLeader){overflowExtra.addLeader=false;handleOverflow(this,overflowExtra.leader,availableSpace)}}this[$pushPara]();const isLrTb=this.layout===\"lr-tb\"||this.layout===\"rl-tb\";const maxRun=isLrTb?MAX_ATTEMPTS_FOR_LRTB_LAYOUT:1;for(;this[$extra].attempt<maxRun;this[$extra].attempt++){if(isLrTb&&this[$extra].attempt===MAX_ATTEMPTS_FOR_LRTB_LAYOUT-1){this[$extra].numberInLine=0}const result=this[$childrenToHTML]({filter:filter,include:true});if(result.success){break}if(result.isBreak()){this[$popPara]();return result}if(isLrTb&&this[$extra].attempt===0&&this[$extra].numberInLine===0&&!root[$extra].noLayoutFailure){this[$extra].attempt=maxRun;break}}this[$popPara]();if(!isSplittable){unsetFirstUnsplittable(this)}root[$extra].noLayoutFailure=savedNoLayoutFailure;if(this[$extra].attempt===maxRun){if(this.overflow){this[$getTemplateRoot]()[$extra].overflowNode=this.overflow}if(!isSplittable){delete this[$extra]}return HTMLResult.FAILURE}if(this.overflow){const overflowExtra=this.overflow[$getExtra]();if(overflowExtra.addTrailer){overflowExtra.addTrailer=false;handleOverflow(this,overflowExtra.trailer,availableSpace)}}let marginH=0;let marginV=0;if(this.margin){marginH=this.margin.leftInset+this.margin.rightInset;marginV=this.margin.topInset+this.margin.bottomInset}const width=Math.max(this[$extra].width+marginH,this.w||0);const height=Math.max(this[$extra].height+marginV,this.h||0);const bbox=[this.x,this.y,width,height];if(this.w===\"\"){style.width=measureToString(width)}if(this.h===\"\"){style.height=measureToString(height)}if((style.width===\"0px\"||style.height===\"0px\")&&children.length===0){return HTMLResult.EMPTY}const html={name:\"div\",attributes:attributes,children:children};applyAssist(this,attributes);const result=HTMLResult.success(createWrapper(this,html),bbox);if(this.breakAfter.children.length>=1){const breakAfter=this.breakAfter.children[0];if(handleBreak(breakAfter)){this[$extra].afterBreakAfter=result;return HTMLResult.breakNode(breakAfter)}}delete this[$extra];return result}}class SubformSet extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"subformSet\",true);this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.relation=getStringOption(attributes.relation,[\"ordered\",\"choice\",\"unordered\"]);this.relevant=getRelevant(attributes.relevant);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.bookend=null;this.break=null;this.desc=null;this.extras=null;this.occur=null;this.overflow=null;this.breakAfter=new XFAObjectArray;this.breakBefore=new XFAObjectArray;this.subform=new XFAObjectArray;this.subformSet=new XFAObjectArray}*[$getContainedChildren](){yield*getContainedChildren(this)}[$getSubformParent](){let parent=this[$getParent]();while(!(parent instanceof Subform)){parent=parent[$getParent]()}return parent}[$isBindable](){return true}}class SubjectDN extends ContentObject{constructor(attributes){super(TEMPLATE_NS_ID,\"subjectDN\");this.delimiter=attributes.delimiter||\",\";this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}[$finalize](){this[$content]=new Map(this[$content].split(this.delimiter).map((kv=>{kv=kv.split(\"=\",2);kv[0]=kv[0].trim();return kv})))}}class SubjectDNs extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"subjectDNs\",true);this.id=attributes.id||\"\";this.type=getStringOption(attributes.type,[\"optional\",\"required\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.subjectDN=new XFAObjectArray}}class Submit extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"submit\",true);this.embedPDF=getInteger({data:attributes.embedPDF,defaultValue:0,validate:x=>x===1});this.format=getStringOption(attributes.format,[\"xdp\",\"formdata\",\"pdf\",\"urlencoded\",\"xfd\",\"xml\"]);this.id=attributes.id||\"\";this.target=attributes.target||\"\";this.textEncoding=getKeyword({data:attributes.textEncoding?attributes.textEncoding.toLowerCase():\"\",defaultValue:\"\",validate:k=>[\"utf-8\",\"big-five\",\"fontspecific\",\"gbk\",\"gb-18030\",\"gb-2312\",\"ksc-5601\",\"none\",\"shift-jis\",\"ucs-2\",\"utf-16\"].includes(k)||k.match(/iso-8859-\\d{2}/)});this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.xdpContent=attributes.xdpContent||\"\";this.encrypt=null;this.encryptData=new XFAObjectArray;this.signData=new XFAObjectArray}}class Template extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"template\",true);this.baseProfile=getStringOption(attributes.baseProfile,[\"full\",\"interactiveForms\"]);this.extras=null;this.subform=new XFAObjectArray}[$finalize](){if(this.subform.children.length===0){warn(\"XFA - No subforms in template node.\")}if(this.subform.children.length>=2){warn(\"XFA - Several subforms in template node: please file a bug.\")}this[$tabIndex]=DEFAULT_TAB_INDEX}[$isSplittable](){return true}[$searchNode](expr,container){if(expr.startsWith(\"#\")){return[this[$ids].get(expr.slice(1))]}return searchNode(this,container,expr,true,true)}*[$toPages](){if(!this.subform.children.length){return HTMLResult.success({name:\"div\",children:[]})}this[$extra]={overflowNode:null,firstUnsplittable:null,currentContentArea:null,currentPageArea:null,noLayoutFailure:false,pageNumber:1,pagePosition:\"first\",oddOrEven:\"odd\",blankOrNotBlank:\"nonBlank\",paraStack:[]};const root=this.subform.children[0];root.pageSet[$cleanPage]();const pageAreas=root.pageSet.pageArea.children;const mainHtml={name:\"div\",children:[]};let pageArea=null;let breakBefore=null;let breakBeforeTarget=null;if(root.breakBefore.children.length>=1){breakBefore=root.breakBefore.children[0];breakBeforeTarget=breakBefore.target}else if(root.subform.children.length>=1&&root.subform.children[0].breakBefore.children.length>=1){breakBefore=root.subform.children[0].breakBefore.children[0];breakBeforeTarget=breakBefore.target}else if(root.break?.beforeTarget){breakBefore=root.break;breakBeforeTarget=breakBefore.beforeTarget}else if(root.subform.children.length>=1&&root.subform.children[0].break?.beforeTarget){breakBefore=root.subform.children[0].break;breakBeforeTarget=breakBefore.beforeTarget}if(breakBefore){const target=this[$searchNode](breakBeforeTarget,breakBefore[$getParent]());if(target instanceof PageArea){pageArea=target;breakBefore[$extra]={}}}pageArea||=pageAreas[0];pageArea[$extra]={numberOfUse:1};const pageAreaParent=pageArea[$getParent]();pageAreaParent[$extra]={numberOfUse:1,pageIndex:pageAreaParent.pageArea.children.indexOf(pageArea),pageSetIndex:0};let targetPageArea;let leader=null;let trailer=null;let hasSomething=true;let hasSomethingCounter=0;let startIndex=0;while(true){if(!hasSomething){mainHtml.children.pop();if(++hasSomethingCounter===MAX_EMPTY_PAGES){warn(\"XFA - Something goes wrong: please file a bug.\");return mainHtml}}else{hasSomethingCounter=0}targetPageArea=null;this[$extra].currentPageArea=pageArea;const page=pageArea[$toHTML]().html;mainHtml.children.push(page);if(leader){this[$extra].noLayoutFailure=true;page.children.push(leader[$toHTML](pageArea[$extra].space).html);leader=null}if(trailer){this[$extra].noLayoutFailure=true;page.children.push(trailer[$toHTML](pageArea[$extra].space).html);trailer=null}const contentAreas=pageArea.contentArea.children;const htmlContentAreas=page.children.filter((node=>node.attributes.class.includes(\"xfaContentarea\")));hasSomething=false;this[$extra].firstUnsplittable=null;this[$extra].noLayoutFailure=false;const flush=index=>{const html=root[$flushHTML]();if(html){hasSomething||=html.children?.length>0;htmlContentAreas[index].children.push(html)}};for(let i=startIndex,ii=contentAreas.length;i<ii;i++){const contentArea=this[$extra].currentContentArea=contentAreas[i];const space={width:contentArea.w,height:contentArea.h};startIndex=0;if(leader){htmlContentAreas[i].children.push(leader[$toHTML](space).html);leader=null}if(trailer){htmlContentAreas[i].children.push(trailer[$toHTML](space).html);trailer=null}const html=root[$toHTML](space);if(html.success){if(html.html){hasSomething||=html.html.children?.length>0;htmlContentAreas[i].children.push(html.html)}else if(!hasSomething&&mainHtml.children.length>1){mainHtml.children.pop()}return mainHtml}if(html.isBreak()){const node=html.breakNode;flush(i);if(node.targetType===\"auto\"){continue}if(node.leader){leader=this[$searchNode](node.leader,node[$getParent]());leader=leader?leader[0]:null}if(node.trailer){trailer=this[$searchNode](node.trailer,node[$getParent]());trailer=trailer?trailer[0]:null}if(node.targetType===\"pageArea\"){targetPageArea=node[$extra].target;i=Infinity}else if(!node[$extra].target){i=node[$extra].index}else{targetPageArea=node[$extra].target;startIndex=node[$extra].index+1;i=Infinity}continue}if(this[$extra].overflowNode){const node=this[$extra].overflowNode;this[$extra].overflowNode=null;const overflowExtra=node[$getExtra]();const target=overflowExtra.target;overflowExtra.addLeader=overflowExtra.leader!==null;overflowExtra.addTrailer=overflowExtra.trailer!==null;flush(i);const currentIndex=i;i=Infinity;if(target instanceof PageArea){targetPageArea=target}else if(target instanceof ContentArea){const index=contentAreas.indexOf(target);if(index!==-1){if(index>currentIndex){i=index-1}else{startIndex=index}}else{targetPageArea=target[$getParent]();startIndex=targetPageArea.contentArea.children.indexOf(target)}}continue}flush(i)}this[$extra].pageNumber+=1;if(targetPageArea){if(targetPageArea[$isUsable]()){targetPageArea[$extra].numberOfUse+=1}else{targetPageArea=null}}pageArea=targetPageArea||pageArea[$getNextPage]();yield null}}}class Text extends ContentObject{constructor(attributes){super(TEMPLATE_NS_ID,\"text\");this.id=attributes.id||\"\";this.maxChars=getInteger({data:attributes.maxChars,defaultValue:0,validate:x=>x>=0});this.name=attributes.name||\"\";this.rid=attributes.rid||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}[$acceptWhitespace](){return true}[$onChild](child){if(child[$namespaceId]===NamespaceIds.xhtml.id){this[$content]=child;return true}warn(`XFA - Invalid content in Text: ${child[$nodeName]}.`);return false}[$onText](str){if(this[$content]instanceof XFAObject){return}super[$onText](str)}[$finalize](){if(typeof this[$content]===\"string\"){this[$content]=this[$content].replaceAll(\"\\r\\n\",\"\\n\")}}[$getExtra](){if(typeof this[$content]===\"string\"){return this[$content].split(/[\\u2029\\u2028\\n]/).filter((line=>!!line)).join(\"\\n\")}return this[$content][$text]()}[$toHTML](availableSpace){if(typeof this[$content]===\"string\"){const html=valueToHtml(this[$content]).html;if(this[$content].includes(\"\\u2029\")){html.name=\"div\";html.children=[];this[$content].split(\"\\u2029\").map((para=>para.split(/[\\u2028\\n]/).flatMap((line=>[{name:\"span\",value:line},{name:\"br\"}])))).forEach((lines=>{html.children.push({name:\"p\",children:lines})}))}else if(/[\\u2028\\n]/.test(this[$content])){html.name=\"div\";html.children=[];this[$content].split(/[\\u2028\\n]/).forEach((line=>{html.children.push({name:\"span\",value:line},{name:\"br\"})}))}return HTMLResult.success(html)}return this[$content][$toHTML](availableSpace)}}class TextEdit extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"textEdit\",true);this.allowRichText=getInteger({data:attributes.allowRichText,defaultValue:0,validate:x=>x===1});this.hScrollPolicy=getStringOption(attributes.hScrollPolicy,[\"auto\",\"off\",\"on\"]);this.id=attributes.id||\"\";this.multiLine=getInteger({data:attributes.multiLine,defaultValue:\"\",validate:x=>x===0||x===1});this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.vScrollPolicy=getStringOption(attributes.vScrollPolicy,[\"auto\",\"off\",\"on\"]);this.border=null;this.comb=null;this.extras=null;this.margin=null}[$toHTML](availableSpace){const style=toStyle(this,\"border\",\"font\",\"margin\");let html;const field=this[$getParent]()[$getParent]();if(this.multiLine===\"\"){this.multiLine=field instanceof Draw?1:0}if(this.multiLine===1){html={name:\"textarea\",attributes:{dataId:field[$data]?.[$uid]||field[$uid],fieldId:field[$uid],class:[\"xfaTextfield\"],style:style,\"aria-label\":ariaLabel(field),\"aria-required\":false}}}else{html={name:\"input\",attributes:{type:\"text\",dataId:field[$data]?.[$uid]||field[$uid],fieldId:field[$uid],class:[\"xfaTextfield\"],style:style,\"aria-label\":ariaLabel(field),\"aria-required\":false}}}if(isRequired(field)){html.attributes[\"aria-required\"]=true;html.attributes.required=true}return HTMLResult.success({name:\"label\",attributes:{class:[\"xfaLabel\"]},children:[html]})}}class Time extends StringObject{constructor(attributes){super(TEMPLATE_NS_ID,\"time\");this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}[$finalize](){const date=this[$content].trim();this[$content]=date?new Date(date):null}[$toHTML](availableSpace){return valueToHtml(this[$content]?this[$content].toString():\"\")}}class TimeStamp extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"timeStamp\");this.id=attributes.id||\"\";this.server=attributes.server||\"\";this.type=getStringOption(attributes.type,[\"optional\",\"required\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class ToolTip extends StringObject{constructor(attributes){super(TEMPLATE_NS_ID,\"toolTip\");this.id=attributes.id||\"\";this.rid=attributes.rid||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class Traversal extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"traversal\",true);this.id=attributes.id||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.extras=null;this.traverse=new XFAObjectArray}}class Traverse extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"traverse\",true);this.id=attributes.id||\"\";this.operation=getStringOption(attributes.operation,[\"next\",\"back\",\"down\",\"first\",\"left\",\"right\",\"up\"]);this.ref=attributes.ref||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.extras=null;this.script=null}get name(){return this.operation}[$isTransparent](){return false}}class Ui extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"ui\",true);this.id=attributes.id||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.extras=null;this.picture=null;this.barcode=null;this.button=null;this.checkButton=null;this.choiceList=null;this.dateTimeEdit=null;this.defaultUi=null;this.imageEdit=null;this.numericEdit=null;this.passwordEdit=null;this.signature=null;this.textEdit=null}[$getExtra](){if(this[$extra]===undefined){for(const name of Object.getOwnPropertyNames(this)){if(name===\"extras\"||name===\"picture\"){continue}const obj=this[name];if(!(obj instanceof XFAObject)){continue}this[$extra]=obj;return obj}this[$extra]=null}return this[$extra]}[$toHTML](availableSpace){const obj=this[$getExtra]();if(obj){return obj[$toHTML](availableSpace)}return HTMLResult.EMPTY}}class Validate extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"validate\",true);this.formatTest=getStringOption(attributes.formatTest,[\"warning\",\"disabled\",\"error\"]);this.id=attributes.id||\"\";this.nullTest=getStringOption(attributes.nullTest,[\"disabled\",\"error\",\"warning\"]);this.scriptTest=getStringOption(attributes.scriptTest,[\"error\",\"disabled\",\"warning\"]);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.extras=null;this.message=null;this.picture=null;this.script=null}}class Value extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"value\",true);this.id=attributes.id||\"\";this.override=getInteger({data:attributes.override,defaultValue:0,validate:x=>x===1});this.relevant=getRelevant(attributes.relevant);this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.arc=null;this.boolean=null;this.date=null;this.dateTime=null;this.decimal=null;this.exData=null;this.float=null;this.image=null;this.integer=null;this.line=null;this.rectangle=null;this.text=null;this.time=null}[$setValue](value){const parent=this[$getParent]();if(parent instanceof Field){if(parent.ui?.imageEdit){if(!this.image){this.image=new Image({});this[$appendChild](this.image)}this.image[$content]=value[$content];return}}const valueName=value[$nodeName];if(this[valueName]!==null){this[valueName][$content]=value[$content];return}for(const name of Object.getOwnPropertyNames(this)){const obj=this[name];if(obj instanceof XFAObject){this[name]=null;this[$removeChild](obj)}}this[value[$nodeName]]=value;this[$appendChild](value)}[$text](){if(this.exData){if(typeof this.exData[$content]===\"string\"){return this.exData[$content].trim()}return this.exData[$content][$text]().trim()}for(const name of Object.getOwnPropertyNames(this)){if(name===\"image\"){continue}const obj=this[name];if(obj instanceof XFAObject){return(obj[$content]||\"\").toString().trim()}}return null}[$toHTML](availableSpace){for(const name of Object.getOwnPropertyNames(this)){const obj=this[name];if(!(obj instanceof XFAObject)){continue}return obj[$toHTML](availableSpace)}return HTMLResult.EMPTY}}class Variables extends XFAObject{constructor(attributes){super(TEMPLATE_NS_ID,\"variables\",true);this.id=attributes.id||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\";this.boolean=new XFAObjectArray;this.date=new XFAObjectArray;this.dateTime=new XFAObjectArray;this.decimal=new XFAObjectArray;this.exData=new XFAObjectArray;this.float=new XFAObjectArray;this.image=new XFAObjectArray;this.integer=new XFAObjectArray;this.manifest=new XFAObjectArray;this.script=new XFAObjectArray;this.text=new XFAObjectArray;this.time=new XFAObjectArray}[$isTransparent](){return true}}class TemplateNamespace{static[$buildXFAObject](name,attributes){if(TemplateNamespace.hasOwnProperty(name)){const node=TemplateNamespace[name](attributes);node[$setSetAttributes](attributes);return node}return undefined}static appearanceFilter(attrs){return new AppearanceFilter(attrs)}static arc(attrs){return new Arc(attrs)}static area(attrs){return new Area(attrs)}static assist(attrs){return new Assist(attrs)}static barcode(attrs){return new Barcode(attrs)}static bind(attrs){return new Bind(attrs)}static bindItems(attrs){return new BindItems(attrs)}static bookend(attrs){return new Bookend(attrs)}static boolean(attrs){return new BooleanElement(attrs)}static border(attrs){return new Border(attrs)}static break(attrs){return new Break(attrs)}static breakAfter(attrs){return new BreakAfter(attrs)}static breakBefore(attrs){return new BreakBefore(attrs)}static button(attrs){return new Button(attrs)}static calculate(attrs){return new Calculate(attrs)}static caption(attrs){return new Caption(attrs)}static certificate(attrs){return new Certificate(attrs)}static certificates(attrs){return new Certificates(attrs)}static checkButton(attrs){return new CheckButton(attrs)}static choiceList(attrs){return new ChoiceList(attrs)}static color(attrs){return new Color(attrs)}static comb(attrs){return new Comb(attrs)}static connect(attrs){return new Connect(attrs)}static contentArea(attrs){return new ContentArea(attrs)}static corner(attrs){return new Corner(attrs)}static date(attrs){return new DateElement(attrs)}static dateTime(attrs){return new DateTime(attrs)}static dateTimeEdit(attrs){return new DateTimeEdit(attrs)}static decimal(attrs){return new Decimal(attrs)}static defaultUi(attrs){return new DefaultUi(attrs)}static desc(attrs){return new Desc(attrs)}static digestMethod(attrs){return new DigestMethod(attrs)}static digestMethods(attrs){return new DigestMethods(attrs)}static draw(attrs){return new Draw(attrs)}static edge(attrs){return new Edge(attrs)}static encoding(attrs){return new Encoding(attrs)}static encodings(attrs){return new Encodings(attrs)}static encrypt(attrs){return new Encrypt(attrs)}static encryptData(attrs){return new EncryptData(attrs)}static encryption(attrs){return new Encryption(attrs)}static encryptionMethod(attrs){return new EncryptionMethod(attrs)}static encryptionMethods(attrs){return new EncryptionMethods(attrs)}static event(attrs){return new Event(attrs)}static exData(attrs){return new ExData(attrs)}static exObject(attrs){return new ExObject(attrs)}static exclGroup(attrs){return new ExclGroup(attrs)}static execute(attrs){return new Execute(attrs)}static extras(attrs){return new Extras(attrs)}static field(attrs){return new Field(attrs)}static fill(attrs){return new Fill(attrs)}static filter(attrs){return new Filter(attrs)}static float(attrs){return new Float(attrs)}static font(attrs){return new template_Font(attrs)}static format(attrs){return new Format(attrs)}static handler(attrs){return new Handler(attrs)}static hyphenation(attrs){return new Hyphenation(attrs)}static image(attrs){return new Image(attrs)}static imageEdit(attrs){return new ImageEdit(attrs)}static integer(attrs){return new Integer(attrs)}static issuers(attrs){return new Issuers(attrs)}static items(attrs){return new Items(attrs)}static keep(attrs){return new Keep(attrs)}static keyUsage(attrs){return new KeyUsage(attrs)}static line(attrs){return new Line(attrs)}static linear(attrs){return new Linear(attrs)}static lockDocument(attrs){return new LockDocument(attrs)}static manifest(attrs){return new Manifest(attrs)}static margin(attrs){return new Margin(attrs)}static mdp(attrs){return new Mdp(attrs)}static medium(attrs){return new Medium(attrs)}static message(attrs){return new Message(attrs)}static numericEdit(attrs){return new NumericEdit(attrs)}static occur(attrs){return new Occur(attrs)}static oid(attrs){return new Oid(attrs)}static oids(attrs){return new Oids(attrs)}static overflow(attrs){return new Overflow(attrs)}static pageArea(attrs){return new PageArea(attrs)}static pageSet(attrs){return new PageSet(attrs)}static para(attrs){return new Para(attrs)}static passwordEdit(attrs){return new PasswordEdit(attrs)}static pattern(attrs){return new template_Pattern(attrs)}static picture(attrs){return new Picture(attrs)}static proto(attrs){return new Proto(attrs)}static radial(attrs){return new Radial(attrs)}static reason(attrs){return new Reason(attrs)}static reasons(attrs){return new Reasons(attrs)}static rectangle(attrs){return new Rectangle(attrs)}static ref(attrs){return new RefElement(attrs)}static script(attrs){return new Script(attrs)}static setProperty(attrs){return new SetProperty(attrs)}static signData(attrs){return new SignData(attrs)}static signature(attrs){return new Signature(attrs)}static signing(attrs){return new Signing(attrs)}static solid(attrs){return new Solid(attrs)}static speak(attrs){return new Speak(attrs)}static stipple(attrs){return new Stipple(attrs)}static subform(attrs){return new Subform(attrs)}static subformSet(attrs){return new SubformSet(attrs)}static subjectDN(attrs){return new SubjectDN(attrs)}static subjectDNs(attrs){return new SubjectDNs(attrs)}static submit(attrs){return new Submit(attrs)}static template(attrs){return new Template(attrs)}static text(attrs){return new Text(attrs)}static textEdit(attrs){return new TextEdit(attrs)}static time(attrs){return new Time(attrs)}static timeStamp(attrs){return new TimeStamp(attrs)}static toolTip(attrs){return new ToolTip(attrs)}static traversal(attrs){return new Traversal(attrs)}static traverse(attrs){return new Traverse(attrs)}static ui(attrs){return new Ui(attrs)}static validate(attrs){return new Validate(attrs)}static value(attrs){return new Value(attrs)}static variables(attrs){return new Variables(attrs)}}const bind_NS_DATASETS=NamespaceIds.datasets.id;function createText(content){const node=new Text({});node[$content]=content;return node}class Binder{constructor(root){this.root=root;this.datasets=root.datasets;this.data=root.datasets?.data||new XmlObject(NamespaceIds.datasets.id,\"data\");this.emptyMerge=this.data[$getChildren]().length===0;this.root.form=this.form=root.template[$clone]()}_isConsumeData(){return!this.emptyMerge&&this._mergeMode}_isMatchTemplate(){return!this._isConsumeData()}bind(){this._bindElement(this.form,this.data);return this.form}getData(){return this.data}_bindValue(formNode,data,picture){formNode[$data]=data;if(formNode[$hasSettableValue]()){if(data[$isDataValue]()){const value=data[$getDataValue]();formNode[$setValue](createText(value))}else if(formNode instanceof Field&&formNode.ui?.choiceList?.open===\"multiSelect\"){const value=data[$getChildren]().map((child=>child[$content].trim())).join(\"\\n\");formNode[$setValue](createText(value))}else if(this._isConsumeData()){warn(`XFA - Nodes haven't the same type.`)}}else if(!data[$isDataValue]()||this._isMatchTemplate()){this._bindElement(formNode,data)}else{warn(`XFA - Nodes haven't the same type.`)}}_findDataByNameToConsume(name,isValue,dataNode,global){if(!name){return null}let generator,match;for(let i=0;i<3;i++){generator=dataNode[$getRealChildrenByNameIt](name,false,true);while(true){match=generator.next().value;if(!match){break}if(isValue===match[$isDataValue]()){return match}}if(dataNode[$namespaceId]===NamespaceIds.datasets.id&&dataNode[$nodeName]===\"data\"){break}dataNode=dataNode[$getParent]()}if(!global){return null}generator=this.data[$getRealChildrenByNameIt](name,true,false);match=generator.next().value;if(match){return match}generator=this.data[$getAttributeIt](name,true);match=generator.next().value;if(match?.[$isDataValue]()){return match}return null}_setProperties(formNode,dataNode){if(!formNode.hasOwnProperty(\"setProperty\")){return}for(const{ref:ref,target:target,connection:connection}of formNode.setProperty.children){if(connection){continue}if(!ref){continue}const nodes=searchNode(this.root,dataNode,ref,false,false);if(!nodes){warn(`XFA - Invalid reference: ${ref}.`);continue}const[node]=nodes;if(!node[$isDescendent](this.data)){warn(`XFA - Invalid node: must be a data node.`);continue}const targetNodes=searchNode(this.root,formNode,target,false,false);if(!targetNodes){warn(`XFA - Invalid target: ${target}.`);continue}const[targetNode]=targetNodes;if(!targetNode[$isDescendent](formNode)){warn(`XFA - Invalid target: must be a property or subproperty.`);continue}const targetParent=targetNode[$getParent]();if(targetNode instanceof SetProperty||targetParent instanceof SetProperty){warn(`XFA - Invalid target: cannot be a setProperty or one of its properties.`);continue}if(targetNode instanceof BindItems||targetParent instanceof BindItems){warn(`XFA - Invalid target: cannot be a bindItems or one of its properties.`);continue}const content=node[$text]();const name=targetNode[$nodeName];if(targetNode instanceof XFAAttribute){const attrs=Object.create(null);attrs[name]=content;const obj=Reflect.construct(Object.getPrototypeOf(targetParent).constructor,[attrs]);targetParent[name]=obj[name];continue}if(!targetNode.hasOwnProperty($content)){warn(`XFA - Invalid node to use in setProperty`);continue}targetNode[$data]=node;targetNode[$content]=content;targetNode[$finalize]()}}_bindItems(formNode,dataNode){if(!formNode.hasOwnProperty(\"items\")||!formNode.hasOwnProperty(\"bindItems\")||formNode.bindItems.isEmpty()){return}for(const item of formNode.items.children){formNode[$removeChild](item)}formNode.items.clear();const labels=new Items({});const values=new Items({});formNode[$appendChild](labels);formNode.items.push(labels);formNode[$appendChild](values);formNode.items.push(values);for(const{ref:ref,labelRef:labelRef,valueRef:valueRef,connection:connection}of formNode.bindItems.children){if(connection){continue}if(!ref){continue}const nodes=searchNode(this.root,dataNode,ref,false,false);if(!nodes){warn(`XFA - Invalid reference: ${ref}.`);continue}for(const node of nodes){if(!node[$isDescendent](this.datasets)){warn(`XFA - Invalid ref (${ref}): must be a datasets child.`);continue}const labelNodes=searchNode(this.root,node,labelRef,true,false);if(!labelNodes){warn(`XFA - Invalid label: ${labelRef}.`);continue}const[labelNode]=labelNodes;if(!labelNode[$isDescendent](this.datasets)){warn(`XFA - Invalid label: must be a datasets child.`);continue}const valueNodes=searchNode(this.root,node,valueRef,true,false);if(!valueNodes){warn(`XFA - Invalid value: ${valueRef}.`);continue}const[valueNode]=valueNodes;if(!valueNode[$isDescendent](this.datasets)){warn(`XFA - Invalid value: must be a datasets child.`);continue}const label=createText(labelNode[$text]());const value=createText(valueNode[$text]());labels[$appendChild](label);labels.text.push(label);values[$appendChild](value);values.text.push(value)}}}_bindOccurrences(formNode,matches,picture){let baseClone;if(matches.length>1){baseClone=formNode[$clone]();baseClone[$removeChild](baseClone.occur);baseClone.occur=null}this._bindValue(formNode,matches[0],picture);this._setProperties(formNode,matches[0]);this._bindItems(formNode,matches[0]);if(matches.length===1){return}const parent=formNode[$getParent]();const name=formNode[$nodeName];const pos=parent[$indexOf](formNode);for(let i=1,ii=matches.length;i<ii;i++){const match=matches[i];const clone=baseClone[$clone]();parent[name].push(clone);parent[$insertAt](pos+i,clone);this._bindValue(clone,match,picture);this._setProperties(clone,match);this._bindItems(clone,match)}}_createOccurrences(formNode){if(!this.emptyMerge){return}const{occur:occur}=formNode;if(!occur||occur.initial<=1){return}const parent=formNode[$getParent]();const name=formNode[$nodeName];if(!(parent[name]instanceof XFAObjectArray)){return}let currentNumber;if(formNode.name){currentNumber=parent[name].children.filter((e=>e.name===formNode.name)).length}else{currentNumber=parent[name].children.length}const pos=parent[$indexOf](formNode)+1;const ii=occur.initial-currentNumber;if(ii){const nodeClone=formNode[$clone]();nodeClone[$removeChild](nodeClone.occur);nodeClone.occur=null;parent[name].push(nodeClone);parent[$insertAt](pos,nodeClone);for(let i=1;i<ii;i++){const clone=nodeClone[$clone]();parent[name].push(clone);parent[$insertAt](pos+i,clone)}}}_getOccurInfo(formNode){const{name:name,occur:occur}=formNode;if(!occur||!name){return[1,1]}const max=occur.max===-1?Infinity:occur.max;return[occur.min,max]}_setAndBind(formNode,dataNode){this._setProperties(formNode,dataNode);this._bindItems(formNode,dataNode);this._bindElement(formNode,dataNode)}_bindElement(formNode,dataNode){const uselessNodes=[];this._createOccurrences(formNode);for(const child of formNode[$getChildren]()){if(child[$data]){continue}if(this._mergeMode===undefined&&child[$nodeName]===\"subform\"){this._mergeMode=child.mergeMode===\"consumeData\";const dataChildren=dataNode[$getChildren]();if(dataChildren.length>0){this._bindOccurrences(child,[dataChildren[0]],null)}else if(this.emptyMerge){const nsId=dataNode[$namespaceId]===bind_NS_DATASETS?-1:dataNode[$namespaceId];const dataChild=child[$data]=new XmlObject(nsId,child.name||\"root\");dataNode[$appendChild](dataChild);this._bindElement(child,dataChild)}continue}if(!child[$isBindable]()){continue}let global=false;let picture=null;let ref=null;let match=null;if(child.bind){switch(child.bind.match){case\"none\":this._setAndBind(child,dataNode);continue;case\"global\":global=true;break;case\"dataRef\":if(!child.bind.ref){warn(`XFA - ref is empty in node ${child[$nodeName]}.`);this._setAndBind(child,dataNode);continue}ref=child.bind.ref;break;default:break}if(child.bind.picture){picture=child.bind.picture[$content]}}const[min,max]=this._getOccurInfo(child);if(ref){match=searchNode(this.root,dataNode,ref,true,false);if(match===null){match=createDataNode(this.data,dataNode,ref);if(!match){continue}if(this._isConsumeData()){match[$consumed]=true}this._setAndBind(child,match);continue}else{if(this._isConsumeData()){match=match.filter((node=>!node[$consumed]))}if(match.length>max){match=match.slice(0,max)}else if(match.length===0){match=null}if(match&&this._isConsumeData()){match.forEach((node=>{node[$consumed]=true}))}}}else{if(!child.name){this._setAndBind(child,dataNode);continue}if(this._isConsumeData()){const matches=[];while(matches.length<max){const found=this._findDataByNameToConsume(child.name,child[$hasSettableValue](),dataNode,global);if(!found){break}found[$consumed]=true;matches.push(found)}match=matches.length>0?matches:null}else{match=dataNode[$getRealChildrenByNameIt](child.name,false,this.emptyMerge).next().value;if(!match){if(min===0){uselessNodes.push(child);continue}const nsId=dataNode[$namespaceId]===bind_NS_DATASETS?-1:dataNode[$namespaceId];match=child[$data]=new XmlObject(nsId,child.name);if(this.emptyMerge){match[$consumed]=true}dataNode[$appendChild](match);this._setAndBind(child,match);continue}if(this.emptyMerge){match[$consumed]=true}match=[match]}}if(match){this._bindOccurrences(child,match,picture)}else if(min>0){this._setAndBind(child,dataNode)}else{uselessNodes.push(child)}}uselessNodes.forEach((node=>node[$getParent]()[$removeChild](node)))}}class DataHandler{constructor(root,data){this.data=data;this.dataset=root.datasets||null}serialize(storage){const stack=[[-1,this.data[$getChildren]()]];while(stack.length>0){const last=stack.at(-1);const[i,children]=last;if(i+1===children.length){stack.pop();continue}const child=children[++last[0]];const storageEntry=storage.get(child[$uid]);if(storageEntry){child[$setValue](storageEntry)}else{const attributes=child[$getAttributes]();for(const value of attributes.values()){const entry=storage.get(value[$uid]);if(entry){value[$setValue](entry);break}}}const nodes=child[$getChildren]();if(nodes.length>0){stack.push([-1,nodes])}}const buf=[`<xfa:datasets xmlns:xfa=\"http://www.xfa.org/schema/xfa-data/1.0/\">`];if(this.dataset){for(const child of this.dataset[$getChildren]()){if(child[$nodeName]!==\"data\"){child[$toString](buf)}}}this.data[$toString](buf);buf.push(\"</xfa:datasets>\");return buf.join(\"\")}}const CONFIG_NS_ID=NamespaceIds.config.id;class Acrobat extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"acrobat\",true);this.acrobat7=null;this.autoSave=null;this.common=null;this.validate=null;this.validateApprovalSignatures=null;this.submitUrl=new XFAObjectArray}}class Acrobat7 extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"acrobat7\",true);this.dynamicRender=null}}class ADBE_JSConsole extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"ADBE_JSConsole\",[\"delegate\",\"Enable\",\"Disable\"])}}class ADBE_JSDebugger extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"ADBE_JSDebugger\",[\"delegate\",\"Enable\",\"Disable\"])}}class AddSilentPrint extends Option01{constructor(attributes){super(CONFIG_NS_ID,\"addSilentPrint\")}}class AddViewerPreferences extends Option01{constructor(attributes){super(CONFIG_NS_ID,\"addViewerPreferences\")}}class AdjustData extends Option10{constructor(attributes){super(CONFIG_NS_ID,\"adjustData\")}}class AdobeExtensionLevel extends IntegerObject{constructor(attributes){super(CONFIG_NS_ID,\"adobeExtensionLevel\",0,(n=>n>=1&&n<=8))}}class Agent extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"agent\",true);this.name=attributes.name?attributes.name.trim():\"\";this.common=new XFAObjectArray}}class AlwaysEmbed extends ContentObject{constructor(attributes){super(CONFIG_NS_ID,\"alwaysEmbed\")}}class Amd extends StringObject{constructor(attributes){super(CONFIG_NS_ID,\"amd\")}}class config_Area extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"area\");this.level=getInteger({data:attributes.level,defaultValue:0,validate:n=>n>=1&&n<=3});this.name=getStringOption(attributes.name,[\"\",\"barcode\",\"coreinit\",\"deviceDriver\",\"font\",\"general\",\"layout\",\"merge\",\"script\",\"signature\",\"sourceSet\",\"templateCache\"])}}class Attributes extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"attributes\",[\"preserve\",\"delegate\",\"ignore\"])}}class AutoSave extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"autoSave\",[\"disabled\",\"enabled\"])}}class Base extends StringObject{constructor(attributes){super(CONFIG_NS_ID,\"base\")}}class BatchOutput extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"batchOutput\");this.format=getStringOption(attributes.format,[\"none\",\"concat\",\"zip\",\"zipCompress\"])}}class BehaviorOverride extends ContentObject{constructor(attributes){super(CONFIG_NS_ID,\"behaviorOverride\")}[$finalize](){this[$content]=new Map(this[$content].trim().split(/\\s+/).filter((x=>x.includes(\":\"))).map((x=>x.split(\":\",2))))}}class Cache extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"cache\",true);this.templateCache=null}}class Change extends Option01{constructor(attributes){super(CONFIG_NS_ID,\"change\")}}class Common extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"common\",true);this.data=null;this.locale=null;this.localeSet=null;this.messaging=null;this.suppressBanner=null;this.template=null;this.validationMessaging=null;this.versionControl=null;this.log=new XFAObjectArray}}class Compress extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"compress\");this.scope=getStringOption(attributes.scope,[\"imageOnly\",\"document\"])}}class CompressLogicalStructure extends Option01{constructor(attributes){super(CONFIG_NS_ID,\"compressLogicalStructure\")}}class CompressObjectStream extends Option10{constructor(attributes){super(CONFIG_NS_ID,\"compressObjectStream\")}}class Compression extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"compression\",true);this.compressLogicalStructure=null;this.compressObjectStream=null;this.level=null;this.type=null}}class Config extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"config\",true);this.acrobat=null;this.present=null;this.trace=null;this.agent=new XFAObjectArray}}class Conformance extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"conformance\",[\"A\",\"B\"])}}class ContentCopy extends Option01{constructor(attributes){super(CONFIG_NS_ID,\"contentCopy\")}}class Copies extends IntegerObject{constructor(attributes){super(CONFIG_NS_ID,\"copies\",1,(n=>n>=1))}}class Creator extends StringObject{constructor(attributes){super(CONFIG_NS_ID,\"creator\")}}class CurrentPage extends IntegerObject{constructor(attributes){super(CONFIG_NS_ID,\"currentPage\",0,(n=>n>=0))}}class Data extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"data\",true);this.adjustData=null;this.attributes=null;this.incrementalLoad=null;this.outputXSL=null;this.range=null;this.record=null;this.startNode=null;this.uri=null;this.window=null;this.xsl=null;this.excludeNS=new XFAObjectArray;this.transform=new XFAObjectArray}}class Debug extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"debug\",true);this.uri=null}}class DefaultTypeface extends ContentObject{constructor(attributes){super(CONFIG_NS_ID,\"defaultTypeface\");this.writingScript=getStringOption(attributes.writingScript,[\"*\",\"Arabic\",\"Cyrillic\",\"EastEuropeanRoman\",\"Greek\",\"Hebrew\",\"Japanese\",\"Korean\",\"Roman\",\"SimplifiedChinese\",\"Thai\",\"TraditionalChinese\",\"Vietnamese\"])}}class Destination extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"destination\",[\"pdf\",\"pcl\",\"ps\",\"webClient\",\"zpl\"])}}class DocumentAssembly extends Option01{constructor(attributes){super(CONFIG_NS_ID,\"documentAssembly\")}}class Driver extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"driver\",true);this.name=attributes.name?attributes.name.trim():\"\";this.fontInfo=null;this.xdc=null}}class DuplexOption extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"duplexOption\",[\"simplex\",\"duplexFlipLongEdge\",\"duplexFlipShortEdge\"])}}class DynamicRender extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"dynamicRender\",[\"forbidden\",\"required\"])}}class Embed extends Option01{constructor(attributes){super(CONFIG_NS_ID,\"embed\")}}class config_Encrypt extends Option01{constructor(attributes){super(CONFIG_NS_ID,\"encrypt\")}}class config_Encryption extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"encryption\",true);this.encrypt=null;this.encryptionLevel=null;this.permissions=null}}class EncryptionLevel extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"encryptionLevel\",[\"40bit\",\"128bit\"])}}class Enforce extends StringObject{constructor(attributes){super(CONFIG_NS_ID,\"enforce\")}}class Equate extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"equate\");this.force=getInteger({data:attributes.force,defaultValue:1,validate:n=>n===0});this.from=attributes.from||\"\";this.to=attributes.to||\"\"}}class EquateRange extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"equateRange\");this.from=attributes.from||\"\";this.to=attributes.to||\"\";this._unicodeRange=attributes.unicodeRange||\"\"}get unicodeRange(){const ranges=[];const unicodeRegex=/U\\+([0-9a-fA-F]+)/;const unicodeRange=this._unicodeRange;for(let range of unicodeRange.split(\",\").map((x=>x.trim())).filter((x=>!!x))){range=range.split(\"-\",2).map((x=>{const found=x.match(unicodeRegex);if(!found){return 0}return parseInt(found[1],16)}));if(range.length===1){range.push(range[0])}ranges.push(range)}return shadow(this,\"unicodeRange\",ranges)}}class Exclude extends ContentObject{constructor(attributes){super(CONFIG_NS_ID,\"exclude\")}[$finalize](){this[$content]=this[$content].trim().split(/\\s+/).filter((x=>x&&[\"calculate\",\"close\",\"enter\",\"exit\",\"initialize\",\"ready\",\"validate\"].includes(x)))}}class ExcludeNS extends StringObject{constructor(attributes){super(CONFIG_NS_ID,\"excludeNS\")}}class FlipLabel extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"flipLabel\",[\"usePrinterSetting\",\"on\",\"off\"])}}class config_FontInfo extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"fontInfo\",true);this.embed=null;this.map=null;this.subsetBelow=null;this.alwaysEmbed=new XFAObjectArray;this.defaultTypeface=new XFAObjectArray;this.neverEmbed=new XFAObjectArray}}class FormFieldFilling extends Option01{constructor(attributes){super(CONFIG_NS_ID,\"formFieldFilling\")}}class GroupParent extends StringObject{constructor(attributes){super(CONFIG_NS_ID,\"groupParent\")}}class IfEmpty extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"ifEmpty\",[\"dataValue\",\"dataGroup\",\"ignore\",\"remove\"])}}class IncludeXDPContent extends StringObject{constructor(attributes){super(CONFIG_NS_ID,\"includeXDPContent\")}}class IncrementalLoad extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"incrementalLoad\",[\"none\",\"forwardOnly\"])}}class IncrementalMerge extends Option01{constructor(attributes){super(CONFIG_NS_ID,\"incrementalMerge\")}}class Interactive extends Option01{constructor(attributes){super(CONFIG_NS_ID,\"interactive\")}}class Jog extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"jog\",[\"usePrinterSetting\",\"none\",\"pageSet\"])}}class LabelPrinter extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"labelPrinter\",true);this.name=getStringOption(attributes.name,[\"zpl\",\"dpl\",\"ipl\",\"tcpl\"]);this.batchOutput=null;this.flipLabel=null;this.fontInfo=null;this.xdc=null}}class Layout extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"layout\",[\"paginate\",\"panel\"])}}class Level extends IntegerObject{constructor(attributes){super(CONFIG_NS_ID,\"level\",0,(n=>n>0))}}class Linearized extends Option01{constructor(attributes){super(CONFIG_NS_ID,\"linearized\")}}class Locale extends StringObject{constructor(attributes){super(CONFIG_NS_ID,\"locale\")}}class LocaleSet extends StringObject{constructor(attributes){super(CONFIG_NS_ID,\"localeSet\")}}class Log extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"log\",true);this.mode=null;this.threshold=null;this.to=null;this.uri=null}}class MapElement extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"map\",true);this.equate=new XFAObjectArray;this.equateRange=new XFAObjectArray}}class MediumInfo extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"mediumInfo\",true);this.map=null}}class config_Message extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"message\",true);this.msgId=null;this.severity=null}}class Messaging extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"messaging\",true);this.message=new XFAObjectArray}}class Mode extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"mode\",[\"append\",\"overwrite\"])}}class ModifyAnnots extends Option01{constructor(attributes){super(CONFIG_NS_ID,\"modifyAnnots\")}}class MsgId extends IntegerObject{constructor(attributes){super(CONFIG_NS_ID,\"msgId\",1,(n=>n>=1))}}class NameAttr extends StringObject{constructor(attributes){super(CONFIG_NS_ID,\"nameAttr\")}}class NeverEmbed extends ContentObject{constructor(attributes){super(CONFIG_NS_ID,\"neverEmbed\")}}class NumberOfCopies extends IntegerObject{constructor(attributes){super(CONFIG_NS_ID,\"numberOfCopies\",null,(n=>n>=2&&n<=5))}}class OpenAction extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"openAction\",true);this.destination=null}}class Output extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"output\",true);this.to=null;this.type=null;this.uri=null}}class OutputBin extends StringObject{constructor(attributes){super(CONFIG_NS_ID,\"outputBin\")}}class OutputXSL extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"outputXSL\",true);this.uri=null}}class Overprint extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"overprint\",[\"none\",\"both\",\"draw\",\"field\"])}}class Packets extends StringObject{constructor(attributes){super(CONFIG_NS_ID,\"packets\")}[$finalize](){if(this[$content]===\"*\"){return}this[$content]=this[$content].trim().split(/\\s+/).filter((x=>[\"config\",\"datasets\",\"template\",\"xfdf\",\"xslt\"].includes(x)))}}class PageOffset extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"pageOffset\");this.x=getInteger({data:attributes.x,defaultValue:\"useXDCSetting\",validate:n=>true});this.y=getInteger({data:attributes.y,defaultValue:\"useXDCSetting\",validate:n=>true})}}class PageRange extends StringObject{constructor(attributes){super(CONFIG_NS_ID,\"pageRange\")}[$finalize](){const numbers=this[$content].trim().split(/\\s+/).map((x=>parseInt(x,10)));const ranges=[];for(let i=0,ii=numbers.length;i<ii;i+=2){ranges.push(numbers.slice(i,i+2))}this[$content]=ranges}}class Pagination extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"pagination\",[\"simplex\",\"duplexShortEdge\",\"duplexLongEdge\"])}}class PaginationOverride extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"paginationOverride\",[\"none\",\"forceDuplex\",\"forceDuplexLongEdge\",\"forceDuplexShortEdge\",\"forceSimplex\"])}}class Part extends IntegerObject{constructor(attributes){super(CONFIG_NS_ID,\"part\",1,(n=>false))}}class Pcl extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"pcl\",true);this.name=attributes.name||\"\";this.batchOutput=null;this.fontInfo=null;this.jog=null;this.mediumInfo=null;this.outputBin=null;this.pageOffset=null;this.staple=null;this.xdc=null}}class Pdf extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"pdf\",true);this.name=attributes.name||\"\";this.adobeExtensionLevel=null;this.batchOutput=null;this.compression=null;this.creator=null;this.encryption=null;this.fontInfo=null;this.interactive=null;this.linearized=null;this.openAction=null;this.pdfa=null;this.producer=null;this.renderPolicy=null;this.scriptModel=null;this.silentPrint=null;this.submitFormat=null;this.tagged=null;this.version=null;this.viewerPreferences=null;this.xdc=null}}class Pdfa extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"pdfa\",true);this.amd=null;this.conformance=null;this.includeXDPContent=null;this.part=null}}class Permissions extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"permissions\",true);this.accessibleContent=null;this.change=null;this.contentCopy=null;this.documentAssembly=null;this.formFieldFilling=null;this.modifyAnnots=null;this.plaintextMetadata=null;this.print=null;this.printHighQuality=null}}class PickTrayByPDFSize extends Option01{constructor(attributes){super(CONFIG_NS_ID,\"pickTrayByPDFSize\")}}class config_Picture extends StringObject{constructor(attributes){super(CONFIG_NS_ID,\"picture\")}}class PlaintextMetadata extends Option01{constructor(attributes){super(CONFIG_NS_ID,\"plaintextMetadata\")}}class Presence extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"presence\",[\"preserve\",\"dissolve\",\"dissolveStructure\",\"ignore\",\"remove\"])}}class Present extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"present\",true);this.behaviorOverride=null;this.cache=null;this.common=null;this.copies=null;this.destination=null;this.incrementalMerge=null;this.layout=null;this.output=null;this.overprint=null;this.pagination=null;this.paginationOverride=null;this.script=null;this.validate=null;this.xdp=null;this.driver=new XFAObjectArray;this.labelPrinter=new XFAObjectArray;this.pcl=new XFAObjectArray;this.pdf=new XFAObjectArray;this.ps=new XFAObjectArray;this.submitUrl=new XFAObjectArray;this.webClient=new XFAObjectArray;this.zpl=new XFAObjectArray}}class Print extends Option01{constructor(attributes){super(CONFIG_NS_ID,\"print\")}}class PrintHighQuality extends Option01{constructor(attributes){super(CONFIG_NS_ID,\"printHighQuality\")}}class PrintScaling extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"printScaling\",[\"appdefault\",\"noScaling\"])}}class PrinterName extends StringObject{constructor(attributes){super(CONFIG_NS_ID,\"printerName\")}}class Producer extends StringObject{constructor(attributes){super(CONFIG_NS_ID,\"producer\")}}class Ps extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"ps\",true);this.name=attributes.name||\"\";this.batchOutput=null;this.fontInfo=null;this.jog=null;this.mediumInfo=null;this.outputBin=null;this.staple=null;this.xdc=null}}class Range extends ContentObject{constructor(attributes){super(CONFIG_NS_ID,\"range\")}[$finalize](){this[$content]=this[$content].split(\",\",2).map((range=>range.split(\"-\").map((x=>parseInt(x.trim(),10))))).filter((range=>range.every((x=>!isNaN(x))))).map((range=>{if(range.length===1){range.push(range[0])}return range}))}}class Record extends ContentObject{constructor(attributes){super(CONFIG_NS_ID,\"record\")}[$finalize](){this[$content]=this[$content].trim();const n=parseInt(this[$content],10);if(!isNaN(n)&&n>=0){this[$content]=n}}}class Relevant extends ContentObject{constructor(attributes){super(CONFIG_NS_ID,\"relevant\")}[$finalize](){this[$content]=this[$content].trim().split(/\\s+/)}}class Rename extends ContentObject{constructor(attributes){super(CONFIG_NS_ID,\"rename\")}[$finalize](){this[$content]=this[$content].trim();if(this[$content].toLowerCase().startsWith(\"xml\")||new RegExp(\"[\\\\p{L}_][\\\\p{L}\\\\d._\\\\p{M}-]*\",\"u\").test(this[$content])){warn(\"XFA - Rename: invalid XFA name\")}}}class RenderPolicy extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"renderPolicy\",[\"server\",\"client\"])}}class RunScripts extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"runScripts\",[\"both\",\"client\",\"none\",\"server\"])}}class config_Script extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"script\",true);this.currentPage=null;this.exclude=null;this.runScripts=null}}class ScriptModel extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"scriptModel\",[\"XFA\",\"none\"])}}class Severity extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"severity\",[\"ignore\",\"error\",\"information\",\"trace\",\"warning\"])}}class SilentPrint extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"silentPrint\",true);this.addSilentPrint=null;this.printerName=null}}class Staple extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"staple\");this.mode=getStringOption(attributes.mode,[\"usePrinterSetting\",\"on\",\"off\"])}}class StartNode extends StringObject{constructor(attributes){super(CONFIG_NS_ID,\"startNode\")}}class StartPage extends IntegerObject{constructor(attributes){super(CONFIG_NS_ID,\"startPage\",0,(n=>true))}}class SubmitFormat extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"submitFormat\",[\"html\",\"delegate\",\"fdf\",\"xml\",\"pdf\"])}}class SubmitUrl extends StringObject{constructor(attributes){super(CONFIG_NS_ID,\"submitUrl\")}}class SubsetBelow extends IntegerObject{constructor(attributes){super(CONFIG_NS_ID,\"subsetBelow\",100,(n=>n>=0&&n<=100))}}class SuppressBanner extends Option01{constructor(attributes){super(CONFIG_NS_ID,\"suppressBanner\")}}class Tagged extends Option01{constructor(attributes){super(CONFIG_NS_ID,\"tagged\")}}class config_Template extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"template\",true);this.base=null;this.relevant=null;this.startPage=null;this.uri=null;this.xsl=null}}class Threshold extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"threshold\",[\"trace\",\"error\",\"information\",\"warning\"])}}class To extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"to\",[\"null\",\"memory\",\"stderr\",\"stdout\",\"system\",\"uri\"])}}class TemplateCache extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"templateCache\");this.maxEntries=getInteger({data:attributes.maxEntries,defaultValue:5,validate:n=>n>=0})}}class Trace extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"trace\",true);this.area=new XFAObjectArray}}class Transform extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"transform\",true);this.groupParent=null;this.ifEmpty=null;this.nameAttr=null;this.picture=null;this.presence=null;this.rename=null;this.whitespace=null}}class Type extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"type\",[\"none\",\"ascii85\",\"asciiHex\",\"ccittfax\",\"flate\",\"lzw\",\"runLength\",\"native\",\"xdp\",\"mergedXDP\"])}}class Uri extends StringObject{constructor(attributes){super(CONFIG_NS_ID,\"uri\")}}class config_Validate extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"validate\",[\"preSubmit\",\"prePrint\",\"preExecute\",\"preSave\"])}}class ValidateApprovalSignatures extends ContentObject{constructor(attributes){super(CONFIG_NS_ID,\"validateApprovalSignatures\")}[$finalize](){this[$content]=this[$content].trim().split(/\\s+/).filter((x=>[\"docReady\",\"postSign\"].includes(x)))}}class ValidationMessaging extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"validationMessaging\",[\"allMessagesIndividually\",\"allMessagesTogether\",\"firstMessageOnly\",\"noMessages\"])}}class Version extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"version\",[\"1.7\",\"1.6\",\"1.5\",\"1.4\",\"1.3\",\"1.2\"])}}class VersionControl extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"VersionControl\");this.outputBelow=getStringOption(attributes.outputBelow,[\"warn\",\"error\",\"update\"]);this.sourceAbove=getStringOption(attributes.sourceAbove,[\"warn\",\"error\"]);this.sourceBelow=getStringOption(attributes.sourceBelow,[\"update\",\"maintain\"])}}class ViewerPreferences extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"viewerPreferences\",true);this.ADBE_JSConsole=null;this.ADBE_JSDebugger=null;this.addViewerPreferences=null;this.duplexOption=null;this.enforce=null;this.numberOfCopies=null;this.pageRange=null;this.pickTrayByPDFSize=null;this.printScaling=null}}class WebClient extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"webClient\",true);this.name=attributes.name?attributes.name.trim():\"\";this.fontInfo=null;this.xdc=null}}class Whitespace extends OptionObject{constructor(attributes){super(CONFIG_NS_ID,\"whitespace\",[\"preserve\",\"ltrim\",\"normalize\",\"rtrim\",\"trim\"])}}class Window extends ContentObject{constructor(attributes){super(CONFIG_NS_ID,\"window\")}[$finalize](){const pair=this[$content].split(\",\",2).map((x=>parseInt(x.trim(),10)));if(pair.some((x=>isNaN(x)))){this[$content]=[0,0];return}if(pair.length===1){pair.push(pair[0])}this[$content]=pair}}class Xdc extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"xdc\",true);this.uri=new XFAObjectArray;this.xsl=new XFAObjectArray}}class Xdp extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"xdp\",true);this.packets=null}}class Xsl extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"xsl\",true);this.debug=null;this.uri=null}}class Zpl extends XFAObject{constructor(attributes){super(CONFIG_NS_ID,\"zpl\",true);this.name=attributes.name?attributes.name.trim():\"\";this.batchOutput=null;this.flipLabel=null;this.fontInfo=null;this.xdc=null}}class ConfigNamespace{static[$buildXFAObject](name,attributes){if(ConfigNamespace.hasOwnProperty(name)){return ConfigNamespace[name](attributes)}return undefined}static acrobat(attrs){return new Acrobat(attrs)}static acrobat7(attrs){return new Acrobat7(attrs)}static ADBE_JSConsole(attrs){return new ADBE_JSConsole(attrs)}static ADBE_JSDebugger(attrs){return new ADBE_JSDebugger(attrs)}static addSilentPrint(attrs){return new AddSilentPrint(attrs)}static addViewerPreferences(attrs){return new AddViewerPreferences(attrs)}static adjustData(attrs){return new AdjustData(attrs)}static adobeExtensionLevel(attrs){return new AdobeExtensionLevel(attrs)}static agent(attrs){return new Agent(attrs)}static alwaysEmbed(attrs){return new AlwaysEmbed(attrs)}static amd(attrs){return new Amd(attrs)}static area(attrs){return new config_Area(attrs)}static attributes(attrs){return new Attributes(attrs)}static autoSave(attrs){return new AutoSave(attrs)}static base(attrs){return new Base(attrs)}static batchOutput(attrs){return new BatchOutput(attrs)}static behaviorOverride(attrs){return new BehaviorOverride(attrs)}static cache(attrs){return new Cache(attrs)}static change(attrs){return new Change(attrs)}static common(attrs){return new Common(attrs)}static compress(attrs){return new Compress(attrs)}static compressLogicalStructure(attrs){return new CompressLogicalStructure(attrs)}static compressObjectStream(attrs){return new CompressObjectStream(attrs)}static compression(attrs){return new Compression(attrs)}static config(attrs){return new Config(attrs)}static conformance(attrs){return new Conformance(attrs)}static contentCopy(attrs){return new ContentCopy(attrs)}static copies(attrs){return new Copies(attrs)}static creator(attrs){return new Creator(attrs)}static currentPage(attrs){return new CurrentPage(attrs)}static data(attrs){return new Data(attrs)}static debug(attrs){return new Debug(attrs)}static defaultTypeface(attrs){return new DefaultTypeface(attrs)}static destination(attrs){return new Destination(attrs)}static documentAssembly(attrs){return new DocumentAssembly(attrs)}static driver(attrs){return new Driver(attrs)}static duplexOption(attrs){return new DuplexOption(attrs)}static dynamicRender(attrs){return new DynamicRender(attrs)}static embed(attrs){return new Embed(attrs)}static encrypt(attrs){return new config_Encrypt(attrs)}static encryption(attrs){return new config_Encryption(attrs)}static encryptionLevel(attrs){return new EncryptionLevel(attrs)}static enforce(attrs){return new Enforce(attrs)}static equate(attrs){return new Equate(attrs)}static equateRange(attrs){return new EquateRange(attrs)}static exclude(attrs){return new Exclude(attrs)}static excludeNS(attrs){return new ExcludeNS(attrs)}static flipLabel(attrs){return new FlipLabel(attrs)}static fontInfo(attrs){return new config_FontInfo(attrs)}static formFieldFilling(attrs){return new FormFieldFilling(attrs)}static groupParent(attrs){return new GroupParent(attrs)}static ifEmpty(attrs){return new IfEmpty(attrs)}static includeXDPContent(attrs){return new IncludeXDPContent(attrs)}static incrementalLoad(attrs){return new IncrementalLoad(attrs)}static incrementalMerge(attrs){return new IncrementalMerge(attrs)}static interactive(attrs){return new Interactive(attrs)}static jog(attrs){return new Jog(attrs)}static labelPrinter(attrs){return new LabelPrinter(attrs)}static layout(attrs){return new Layout(attrs)}static level(attrs){return new Level(attrs)}static linearized(attrs){return new Linearized(attrs)}static locale(attrs){return new Locale(attrs)}static localeSet(attrs){return new LocaleSet(attrs)}static log(attrs){return new Log(attrs)}static map(attrs){return new MapElement(attrs)}static mediumInfo(attrs){return new MediumInfo(attrs)}static message(attrs){return new config_Message(attrs)}static messaging(attrs){return new Messaging(attrs)}static mode(attrs){return new Mode(attrs)}static modifyAnnots(attrs){return new ModifyAnnots(attrs)}static msgId(attrs){return new MsgId(attrs)}static nameAttr(attrs){return new NameAttr(attrs)}static neverEmbed(attrs){return new NeverEmbed(attrs)}static numberOfCopies(attrs){return new NumberOfCopies(attrs)}static openAction(attrs){return new OpenAction(attrs)}static output(attrs){return new Output(attrs)}static outputBin(attrs){return new OutputBin(attrs)}static outputXSL(attrs){return new OutputXSL(attrs)}static overprint(attrs){return new Overprint(attrs)}static packets(attrs){return new Packets(attrs)}static pageOffset(attrs){return new PageOffset(attrs)}static pageRange(attrs){return new PageRange(attrs)}static pagination(attrs){return new Pagination(attrs)}static paginationOverride(attrs){return new PaginationOverride(attrs)}static part(attrs){return new Part(attrs)}static pcl(attrs){return new Pcl(attrs)}static pdf(attrs){return new Pdf(attrs)}static pdfa(attrs){return new Pdfa(attrs)}static permissions(attrs){return new Permissions(attrs)}static pickTrayByPDFSize(attrs){return new PickTrayByPDFSize(attrs)}static picture(attrs){return new config_Picture(attrs)}static plaintextMetadata(attrs){return new PlaintextMetadata(attrs)}static presence(attrs){return new Presence(attrs)}static present(attrs){return new Present(attrs)}static print(attrs){return new Print(attrs)}static printHighQuality(attrs){return new PrintHighQuality(attrs)}static printScaling(attrs){return new PrintScaling(attrs)}static printerName(attrs){return new PrinterName(attrs)}static producer(attrs){return new Producer(attrs)}static ps(attrs){return new Ps(attrs)}static range(attrs){return new Range(attrs)}static record(attrs){return new Record(attrs)}static relevant(attrs){return new Relevant(attrs)}static rename(attrs){return new Rename(attrs)}static renderPolicy(attrs){return new RenderPolicy(attrs)}static runScripts(attrs){return new RunScripts(attrs)}static script(attrs){return new config_Script(attrs)}static scriptModel(attrs){return new ScriptModel(attrs)}static severity(attrs){return new Severity(attrs)}static silentPrint(attrs){return new SilentPrint(attrs)}static staple(attrs){return new Staple(attrs)}static startNode(attrs){return new StartNode(attrs)}static startPage(attrs){return new StartPage(attrs)}static submitFormat(attrs){return new SubmitFormat(attrs)}static submitUrl(attrs){return new SubmitUrl(attrs)}static subsetBelow(attrs){return new SubsetBelow(attrs)}static suppressBanner(attrs){return new SuppressBanner(attrs)}static tagged(attrs){return new Tagged(attrs)}static template(attrs){return new config_Template(attrs)}static templateCache(attrs){return new TemplateCache(attrs)}static threshold(attrs){return new Threshold(attrs)}static to(attrs){return new To(attrs)}static trace(attrs){return new Trace(attrs)}static transform(attrs){return new Transform(attrs)}static type(attrs){return new Type(attrs)}static uri(attrs){return new Uri(attrs)}static validate(attrs){return new config_Validate(attrs)}static validateApprovalSignatures(attrs){return new ValidateApprovalSignatures(attrs)}static validationMessaging(attrs){return new ValidationMessaging(attrs)}static version(attrs){return new Version(attrs)}static versionControl(attrs){return new VersionControl(attrs)}static viewerPreferences(attrs){return new ViewerPreferences(attrs)}static webClient(attrs){return new WebClient(attrs)}static whitespace(attrs){return new Whitespace(attrs)}static window(attrs){return new Window(attrs)}static xdc(attrs){return new Xdc(attrs)}static xdp(attrs){return new Xdp(attrs)}static xsl(attrs){return new Xsl(attrs)}static zpl(attrs){return new Zpl(attrs)}}const CONNECTION_SET_NS_ID=NamespaceIds.connectionSet.id;class ConnectionSet extends XFAObject{constructor(attributes){super(CONNECTION_SET_NS_ID,\"connectionSet\",true);this.wsdlConnection=new XFAObjectArray;this.xmlConnection=new XFAObjectArray;this.xsdConnection=new XFAObjectArray}}class EffectiveInputPolicy extends XFAObject{constructor(attributes){super(CONNECTION_SET_NS_ID,\"effectiveInputPolicy\");this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class EffectiveOutputPolicy extends XFAObject{constructor(attributes){super(CONNECTION_SET_NS_ID,\"effectiveOutputPolicy\");this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class Operation extends StringObject{constructor(attributes){super(CONNECTION_SET_NS_ID,\"operation\");this.id=attributes.id||\"\";this.input=attributes.input||\"\";this.name=attributes.name||\"\";this.output=attributes.output||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class RootElement extends StringObject{constructor(attributes){super(CONNECTION_SET_NS_ID,\"rootElement\");this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class SoapAction extends StringObject{constructor(attributes){super(CONNECTION_SET_NS_ID,\"soapAction\");this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class SoapAddress extends StringObject{constructor(attributes){super(CONNECTION_SET_NS_ID,\"soapAddress\");this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class connection_set_Uri extends StringObject{constructor(attributes){super(CONNECTION_SET_NS_ID,\"uri\");this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class WsdlAddress extends StringObject{constructor(attributes){super(CONNECTION_SET_NS_ID,\"wsdlAddress\");this.id=attributes.id||\"\";this.name=attributes.name||\"\";this.use=attributes.use||\"\";this.usehref=attributes.usehref||\"\"}}class WsdlConnection extends XFAObject{constructor(attributes){super(CONNECTION_SET_NS_ID,\"wsdlConnection\",true);this.dataDescription=attributes.dataDescription||\"\";this.name=attributes.name||\"\";this.effectiveInputPolicy=null;this.effectiveOutputPolicy=null;this.operation=null;this.soapAction=null;this.soapAddress=null;this.wsdlAddress=null}}class XmlConnection extends XFAObject{constructor(attributes){super(CONNECTION_SET_NS_ID,\"xmlConnection\",true);this.dataDescription=attributes.dataDescription||\"\";this.name=attributes.name||\"\";this.uri=null}}class XsdConnection extends XFAObject{constructor(attributes){super(CONNECTION_SET_NS_ID,\"xsdConnection\",true);this.dataDescription=attributes.dataDescription||\"\";this.name=attributes.name||\"\";this.rootElement=null;this.uri=null}}class ConnectionSetNamespace{static[$buildXFAObject](name,attributes){if(ConnectionSetNamespace.hasOwnProperty(name)){return ConnectionSetNamespace[name](attributes)}return undefined}static connectionSet(attrs){return new ConnectionSet(attrs)}static effectiveInputPolicy(attrs){return new EffectiveInputPolicy(attrs)}static effectiveOutputPolicy(attrs){return new EffectiveOutputPolicy(attrs)}static operation(attrs){return new Operation(attrs)}static rootElement(attrs){return new RootElement(attrs)}static soapAction(attrs){return new SoapAction(attrs)}static soapAddress(attrs){return new SoapAddress(attrs)}static uri(attrs){return new connection_set_Uri(attrs)}static wsdlAddress(attrs){return new WsdlAddress(attrs)}static wsdlConnection(attrs){return new WsdlConnection(attrs)}static xmlConnection(attrs){return new XmlConnection(attrs)}static xsdConnection(attrs){return new XsdConnection(attrs)}}const DATASETS_NS_ID=NamespaceIds.datasets.id;class datasets_Data extends XmlObject{constructor(attributes){super(DATASETS_NS_ID,\"data\",attributes)}[$isNsAgnostic](){return true}}class Datasets extends XFAObject{constructor(attributes){super(DATASETS_NS_ID,\"datasets\",true);this.data=null;this.Signature=null}[$onChild](child){const name=child[$nodeName];if(name===\"data\"&&child[$namespaceId]===DATASETS_NS_ID||name===\"Signature\"&&child[$namespaceId]===NamespaceIds.signature.id){this[name]=child}this[$appendChild](child)}}class DatasetsNamespace{static[$buildXFAObject](name,attributes){if(DatasetsNamespace.hasOwnProperty(name)){return DatasetsNamespace[name](attributes)}return undefined}static datasets(attributes){return new Datasets(attributes)}static data(attributes){return new datasets_Data(attributes)}}const LOCALE_SET_NS_ID=NamespaceIds.localeSet.id;class CalendarSymbols extends XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,\"calendarSymbols\",true);this.name=\"gregorian\";this.dayNames=new XFAObjectArray(2);this.eraNames=null;this.meridiemNames=null;this.monthNames=new XFAObjectArray(2)}}class CurrencySymbol extends StringObject{constructor(attributes){super(LOCALE_SET_NS_ID,\"currencySymbol\");this.name=getStringOption(attributes.name,[\"symbol\",\"isoname\",\"decimal\"])}}class CurrencySymbols extends XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,\"currencySymbols\",true);this.currencySymbol=new XFAObjectArray(3)}}class DatePattern extends StringObject{constructor(attributes){super(LOCALE_SET_NS_ID,\"datePattern\");this.name=getStringOption(attributes.name,[\"full\",\"long\",\"med\",\"short\"])}}class DatePatterns extends XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,\"datePatterns\",true);this.datePattern=new XFAObjectArray(4)}}class DateTimeSymbols extends ContentObject{constructor(attributes){super(LOCALE_SET_NS_ID,\"dateTimeSymbols\")}}class Day extends StringObject{constructor(attributes){super(LOCALE_SET_NS_ID,\"day\")}}class DayNames extends XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,\"dayNames\",true);this.abbr=getInteger({data:attributes.abbr,defaultValue:0,validate:x=>x===1});this.day=new XFAObjectArray(7)}}class Era extends StringObject{constructor(attributes){super(LOCALE_SET_NS_ID,\"era\")}}class EraNames extends XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,\"eraNames\",true);this.era=new XFAObjectArray(2)}}class locale_set_Locale extends XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,\"locale\",true);this.desc=attributes.desc||\"\";this.name=\"isoname\";this.calendarSymbols=null;this.currencySymbols=null;this.datePatterns=null;this.dateTimeSymbols=null;this.numberPatterns=null;this.numberSymbols=null;this.timePatterns=null;this.typeFaces=null}}class locale_set_LocaleSet extends XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,\"localeSet\",true);this.locale=new XFAObjectArray}}class Meridiem extends StringObject{constructor(attributes){super(LOCALE_SET_NS_ID,\"meridiem\")}}class MeridiemNames extends XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,\"meridiemNames\",true);this.meridiem=new XFAObjectArray(2)}}class Month extends StringObject{constructor(attributes){super(LOCALE_SET_NS_ID,\"month\")}}class MonthNames extends XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,\"monthNames\",true);this.abbr=getInteger({data:attributes.abbr,defaultValue:0,validate:x=>x===1});this.month=new XFAObjectArray(12)}}class NumberPattern extends StringObject{constructor(attributes){super(LOCALE_SET_NS_ID,\"numberPattern\");this.name=getStringOption(attributes.name,[\"full\",\"long\",\"med\",\"short\"])}}class NumberPatterns extends XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,\"numberPatterns\",true);this.numberPattern=new XFAObjectArray(4)}}class NumberSymbol extends StringObject{constructor(attributes){super(LOCALE_SET_NS_ID,\"numberSymbol\");this.name=getStringOption(attributes.name,[\"decimal\",\"grouping\",\"percent\",\"minus\",\"zero\"])}}class NumberSymbols extends XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,\"numberSymbols\",true);this.numberSymbol=new XFAObjectArray(5)}}class TimePattern extends StringObject{constructor(attributes){super(LOCALE_SET_NS_ID,\"timePattern\");this.name=getStringOption(attributes.name,[\"full\",\"long\",\"med\",\"short\"])}}class TimePatterns extends XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,\"timePatterns\",true);this.timePattern=new XFAObjectArray(4)}}class TypeFace extends XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,\"typeFace\",true);this.name=attributes.name|\"\"}}class TypeFaces extends XFAObject{constructor(attributes){super(LOCALE_SET_NS_ID,\"typeFaces\",true);this.typeFace=new XFAObjectArray}}class LocaleSetNamespace{static[$buildXFAObject](name,attributes){if(LocaleSetNamespace.hasOwnProperty(name)){return LocaleSetNamespace[name](attributes)}return undefined}static calendarSymbols(attrs){return new CalendarSymbols(attrs)}static currencySymbol(attrs){return new CurrencySymbol(attrs)}static currencySymbols(attrs){return new CurrencySymbols(attrs)}static datePattern(attrs){return new DatePattern(attrs)}static datePatterns(attrs){return new DatePatterns(attrs)}static dateTimeSymbols(attrs){return new DateTimeSymbols(attrs)}static day(attrs){return new Day(attrs)}static dayNames(attrs){return new DayNames(attrs)}static era(attrs){return new Era(attrs)}static eraNames(attrs){return new EraNames(attrs)}static locale(attrs){return new locale_set_Locale(attrs)}static localeSet(attrs){return new locale_set_LocaleSet(attrs)}static meridiem(attrs){return new Meridiem(attrs)}static meridiemNames(attrs){return new MeridiemNames(attrs)}static month(attrs){return new Month(attrs)}static monthNames(attrs){return new MonthNames(attrs)}static numberPattern(attrs){return new NumberPattern(attrs)}static numberPatterns(attrs){return new NumberPatterns(attrs)}static numberSymbol(attrs){return new NumberSymbol(attrs)}static numberSymbols(attrs){return new NumberSymbols(attrs)}static timePattern(attrs){return new TimePattern(attrs)}static timePatterns(attrs){return new TimePatterns(attrs)}static typeFace(attrs){return new TypeFace(attrs)}static typeFaces(attrs){return new TypeFaces(attrs)}}const SIGNATURE_NS_ID=NamespaceIds.signature.id;class signature_Signature extends XFAObject{constructor(attributes){super(SIGNATURE_NS_ID,\"signature\",true)}}class SignatureNamespace{static[$buildXFAObject](name,attributes){if(SignatureNamespace.hasOwnProperty(name)){return SignatureNamespace[name](attributes)}return undefined}static signature(attributes){return new signature_Signature(attributes)}}const STYLESHEET_NS_ID=NamespaceIds.stylesheet.id;class Stylesheet extends XFAObject{constructor(attributes){super(STYLESHEET_NS_ID,\"stylesheet\",true)}}class StylesheetNamespace{static[$buildXFAObject](name,attributes){if(StylesheetNamespace.hasOwnProperty(name)){return StylesheetNamespace[name](attributes)}return undefined}static stylesheet(attributes){return new Stylesheet(attributes)}}const XDP_NS_ID=NamespaceIds.xdp.id;class xdp_Xdp extends XFAObject{constructor(attributes){super(XDP_NS_ID,\"xdp\",true);this.uuid=attributes.uuid||\"\";this.timeStamp=attributes.timeStamp||\"\";this.config=null;this.connectionSet=null;this.datasets=null;this.localeSet=null;this.stylesheet=new XFAObjectArray;this.template=null}[$onChildCheck](child){const ns=NamespaceIds[child[$nodeName]];return ns&&child[$namespaceId]===ns.id}}class XdpNamespace{static[$buildXFAObject](name,attributes){if(XdpNamespace.hasOwnProperty(name)){return XdpNamespace[name](attributes)}return undefined}static xdp(attributes){return new xdp_Xdp(attributes)}}const XHTML_NS_ID=NamespaceIds.xhtml.id;const $richText=Symbol();const VALID_STYLES=new Set([\"color\",\"font\",\"font-family\",\"font-size\",\"font-stretch\",\"font-style\",\"font-weight\",\"margin\",\"margin-bottom\",\"margin-left\",\"margin-right\",\"margin-top\",\"letter-spacing\",\"line-height\",\"orphans\",\"page-break-after\",\"page-break-before\",\"page-break-inside\",\"tab-interval\",\"tab-stop\",\"text-align\",\"text-decoration\",\"text-indent\",\"vertical-align\",\"widows\",\"kerning-mode\",\"xfa-font-horizontal-scale\",\"xfa-font-vertical-scale\",\"xfa-spacerun\",\"xfa-tab-stops\"]);const StyleMapping=new Map([[\"page-break-after\",\"breakAfter\"],[\"page-break-before\",\"breakBefore\"],[\"page-break-inside\",\"breakInside\"],[\"kerning-mode\",value=>value===\"none\"?\"none\":\"normal\"],[\"xfa-font-horizontal-scale\",value=>`scaleX(${Math.max(0,parseInt(value)/100).toFixed(2)})`],[\"xfa-font-vertical-scale\",value=>`scaleY(${Math.max(0,parseInt(value)/100).toFixed(2)})`],[\"xfa-spacerun\",\"\"],[\"xfa-tab-stops\",\"\"],[\"font-size\",(value,original)=>{value=original.fontSize=Math.abs(getMeasurement(value));return measureToString(.99*value)}],[\"letter-spacing\",value=>measureToString(getMeasurement(value))],[\"line-height\",value=>measureToString(getMeasurement(value))],[\"margin\",value=>measureToString(getMeasurement(value))],[\"margin-bottom\",value=>measureToString(getMeasurement(value))],[\"margin-left\",value=>measureToString(getMeasurement(value))],[\"margin-right\",value=>measureToString(getMeasurement(value))],[\"margin-top\",value=>measureToString(getMeasurement(value))],[\"text-indent\",value=>measureToString(getMeasurement(value))],[\"font-family\",value=>value],[\"vertical-align\",value=>measureToString(getMeasurement(value))]]);const spacesRegExp=/\\s+/g;const crlfRegExp=/[\\r\\n]+/g;const crlfForRichTextRegExp=/\\r\\n?/g;function mapStyle(styleStr,node,richText){const style=Object.create(null);if(!styleStr){return style}const original=Object.create(null);for(const[key,value]of styleStr.split(\";\").map((s=>s.split(\":\",2)))){const mapping=StyleMapping.get(key);if(mapping===\"\"){continue}let newValue=value;if(mapping){newValue=typeof mapping===\"string\"?mapping:mapping(value,original)}if(key.endsWith(\"scale\")){style.transform=style.transform?`${style[key]} ${newValue}`:newValue}else{style[key.replaceAll(/-([a-zA-Z])/g,((_,x)=>x.toUpperCase()))]=newValue}}if(style.fontFamily){setFontFamily({typeface:style.fontFamily,weight:style.fontWeight||\"normal\",posture:style.fontStyle||\"normal\",size:original.fontSize||0},node,node[$globalData].fontFinder,style)}if(richText&&style.verticalAlign&&style.verticalAlign!==\"0px\"&&style.fontSize){const SUB_SUPER_SCRIPT_FACTOR=.583;const VERTICAL_FACTOR=.333;const fontSize=getMeasurement(style.fontSize);style.fontSize=measureToString(fontSize*SUB_SUPER_SCRIPT_FACTOR);style.verticalAlign=measureToString(Math.sign(getMeasurement(style.verticalAlign))*fontSize*VERTICAL_FACTOR)}if(richText&&style.fontSize){style.fontSize=`calc(${style.fontSize} * var(--total-scale-factor))`}fixTextIndent(style);return style}function checkStyle(node){if(!node.style){return\"\"}return node.style.split(\";\").filter((s=>!!s.trim())).map((s=>s.split(\":\",2).map((t=>t.trim())))).filter((([key,value])=>{if(key===\"font-family\"){node[$globalData].usedTypefaces.add(value)}return VALID_STYLES.has(key)})).map((kv=>kv.join(\":\"))).join(\";\")}const NoWhites=new Set([\"body\",\"html\"]);class XhtmlObject extends XmlObject{constructor(attributes,name){super(XHTML_NS_ID,name);this[$richText]=false;this.style=attributes.style||\"\"}[$clean](builder){super[$clean](builder);this.style=checkStyle(this)}[$acceptWhitespace](){return!NoWhites.has(this[$nodeName])}[$onText](str,richText=false){if(!richText){str=str.replaceAll(crlfRegExp,\"\");if(!this.style.includes(\"xfa-spacerun:yes\")){str=str.replaceAll(spacesRegExp,\" \")}}else{this[$richText]=true}if(str){this[$content]+=str}}[$pushGlyphs](measure,mustPop=true){const xfaFont=Object.create(null);const margin={top:NaN,bottom:NaN,left:NaN,right:NaN};let lineHeight=null;for(const[key,value]of this.style.split(\";\").map((s=>s.split(\":\",2)))){switch(key){case\"font-family\":xfaFont.typeface=stripQuotes(value);break;case\"font-size\":xfaFont.size=getMeasurement(value);break;case\"font-weight\":xfaFont.weight=value;break;case\"font-style\":xfaFont.posture=value;break;case\"letter-spacing\":xfaFont.letterSpacing=getMeasurement(value);break;case\"margin\":const values=value.split(/ \\t/).map((x=>getMeasurement(x)));switch(values.length){case 1:margin.top=margin.bottom=margin.left=margin.right=values[0];break;case 2:margin.top=margin.bottom=values[0];margin.left=margin.right=values[1];break;case 3:margin.top=values[0];margin.bottom=values[2];margin.left=margin.right=values[1];break;case 4:margin.top=values[0];margin.left=values[1];margin.bottom=values[2];margin.right=values[3];break}break;case\"margin-top\":margin.top=getMeasurement(value);break;case\"margin-bottom\":margin.bottom=getMeasurement(value);break;case\"margin-left\":margin.left=getMeasurement(value);break;case\"margin-right\":margin.right=getMeasurement(value);break;case\"line-height\":lineHeight=getMeasurement(value);break}}measure.pushData(xfaFont,margin,lineHeight);if(this[$content]){measure.addString(this[$content])}else{for(const child of this[$getChildren]()){if(child[$nodeName]===\"#text\"){measure.addString(child[$content]);continue}child[$pushGlyphs](measure)}}if(mustPop){measure.popFont()}}[$toHTML](availableSpace){const children=[];this[$extra]={children:children};this[$childrenToHTML]({});if(children.length===0&&!this[$content]){return HTMLResult.EMPTY}let value;if(this[$richText]){value=this[$content]?this[$content].replaceAll(crlfForRichTextRegExp,\"\\n\"):undefined}else{value=this[$content]||undefined}return HTMLResult.success({name:this[$nodeName],attributes:{href:this.href,style:mapStyle(this.style,this,this[$richText])},children:children,value:value})}}class A extends XhtmlObject{constructor(attributes){super(attributes,\"a\");this.href=fixURL(attributes.href)||\"\"}}class B extends XhtmlObject{constructor(attributes){super(attributes,\"b\")}[$pushGlyphs](measure){measure.pushFont({weight:\"bold\"});super[$pushGlyphs](measure);measure.popFont()}}class Body extends XhtmlObject{constructor(attributes){super(attributes,\"body\")}[$toHTML](availableSpace){const res=super[$toHTML](availableSpace);const{html:html}=res;if(!html){return HTMLResult.EMPTY}html.name=\"div\";html.attributes.class=[\"xfaRich\"];return res}}class Br extends XhtmlObject{constructor(attributes){super(attributes,\"br\")}[$text](){return\"\\n\"}[$pushGlyphs](measure){measure.addString(\"\\n\")}[$toHTML](availableSpace){return HTMLResult.success({name:\"br\"})}}class Html extends XhtmlObject{constructor(attributes){super(attributes,\"html\")}[$toHTML](availableSpace){const children=[];this[$extra]={children:children};this[$childrenToHTML]({});if(children.length===0){return HTMLResult.success({name:\"div\",attributes:{class:[\"xfaRich\"],style:{}},value:this[$content]||\"\"})}if(children.length===1){const child=children[0];if(child.attributes?.class.includes(\"xfaRich\")){return HTMLResult.success(child)}}return HTMLResult.success({name:\"div\",attributes:{class:[\"xfaRich\"],style:{}},children:children})}}class I extends XhtmlObject{constructor(attributes){super(attributes,\"i\")}[$pushGlyphs](measure){measure.pushFont({posture:\"italic\"});super[$pushGlyphs](measure);measure.popFont()}}class Li extends XhtmlObject{constructor(attributes){super(attributes,\"li\")}}class Ol extends XhtmlObject{constructor(attributes){super(attributes,\"ol\")}}class P extends XhtmlObject{constructor(attributes){super(attributes,\"p\")}[$pushGlyphs](measure){super[$pushGlyphs](measure,false);measure.addString(\"\\n\");measure.addPara();measure.popFont()}[$text](){const siblings=this[$getParent]()[$getChildren]();if(siblings.at(-1)===this){return super[$text]()}return super[$text]()+\"\\n\"}}class Span extends XhtmlObject{constructor(attributes){super(attributes,\"span\")}}class Sub extends XhtmlObject{constructor(attributes){super(attributes,\"sub\")}}class Sup extends XhtmlObject{constructor(attributes){super(attributes,\"sup\")}}class Ul extends XhtmlObject{constructor(attributes){super(attributes,\"ul\")}}class XhtmlNamespace{static[$buildXFAObject](name,attributes){if(XhtmlNamespace.hasOwnProperty(name)){return XhtmlNamespace[name](attributes)}return undefined}static a(attributes){return new A(attributes)}static b(attributes){return new B(attributes)}static body(attributes){return new Body(attributes)}static br(attributes){return new Br(attributes)}static html(attributes){return new Html(attributes)}static i(attributes){return new I(attributes)}static li(attributes){return new Li(attributes)}static ol(attributes){return new Ol(attributes)}static p(attributes){return new P(attributes)}static span(attributes){return new Span(attributes)}static sub(attributes){return new Sub(attributes)}static sup(attributes){return new Sup(attributes)}static ul(attributes){return new Ul(attributes)}}const NamespaceSetUp={config:ConfigNamespace,connection:ConnectionSetNamespace,datasets:DatasetsNamespace,localeSet:LocaleSetNamespace,signature:SignatureNamespace,stylesheet:StylesheetNamespace,template:TemplateNamespace,xdp:XdpNamespace,xhtml:XhtmlNamespace};class UnknownNamespace{constructor(nsId){this.namespaceId=nsId}[$buildXFAObject](name,attributes){return new XmlObject(this.namespaceId,name,attributes)}}class Root extends XFAObject{constructor(ids){super(-1,\"root\",Object.create(null));this.element=null;this[$ids]=ids}[$onChild](child){this.element=child;return true}[$finalize](){super[$finalize]();if(this.element.template instanceof Template){this[$ids].set($root,this.element);this.element.template[$resolvePrototypes](this[$ids]);this.element.template[$ids]=this[$ids]}}}class Empty extends XFAObject{constructor(){super(-1,\"\",Object.create(null))}[$onChild](_){return false}}class Builder{constructor(rootNameSpace=null){this._namespaceStack=[];this._nsAgnosticLevel=0;this._namespacePrefixes=new Map;this._namespaces=new Map;this._nextNsId=Math.max(...Object.values(NamespaceIds).map((({id:id})=>id)));this._currentNamespace=rootNameSpace||new UnknownNamespace(++this._nextNsId)}buildRoot(ids){return new Root(ids)}build({nsPrefix:nsPrefix,name:name,attributes:attributes,namespace:namespace,prefixes:prefixes}){const hasNamespaceDef=namespace!==null;if(hasNamespaceDef){this._namespaceStack.push(this._currentNamespace);this._currentNamespace=this._searchNamespace(namespace)}if(prefixes){this._addNamespacePrefix(prefixes)}if(attributes.hasOwnProperty($nsAttributes)){const dataTemplate=NamespaceSetUp.datasets;const nsAttrs=attributes[$nsAttributes];let xfaAttrs=null;for(const[ns,attrs]of Object.entries(nsAttrs)){const nsToUse=this._getNamespaceToUse(ns);if(nsToUse===dataTemplate){xfaAttrs={xfa:attrs};break}}if(xfaAttrs){attributes[$nsAttributes]=xfaAttrs}else{delete attributes[$nsAttributes]}}const namespaceToUse=this._getNamespaceToUse(nsPrefix);const node=namespaceToUse?.[$buildXFAObject](name,attributes)||new Empty;if(node[$isNsAgnostic]()){this._nsAgnosticLevel++}if(hasNamespaceDef||prefixes||node[$isNsAgnostic]()){node[$cleanup]={hasNamespace:hasNamespaceDef,prefixes:prefixes,nsAgnostic:node[$isNsAgnostic]()}}return node}isNsAgnostic(){return this._nsAgnosticLevel>0}_searchNamespace(nsName){let ns=this._namespaces.get(nsName);if(ns){return ns}for(const[name,{check:check}]of Object.entries(NamespaceIds)){if(check(nsName)){ns=NamespaceSetUp[name];if(ns){this._namespaces.set(nsName,ns);return ns}break}}ns=new UnknownNamespace(++this._nextNsId);this._namespaces.set(nsName,ns);return ns}_addNamespacePrefix(prefixes){for(const{prefix:prefix,value:value}of prefixes){const namespace=this._searchNamespace(value);let prefixStack=this._namespacePrefixes.get(prefix);if(!prefixStack){prefixStack=[];this._namespacePrefixes.set(prefix,prefixStack)}prefixStack.push(namespace)}}_getNamespaceToUse(prefix){if(!prefix){return this._currentNamespace}const prefixStack=this._namespacePrefixes.get(prefix);if(prefixStack?.length>0){return prefixStack.at(-1)}warn(`Unknown namespace prefix: ${prefix}.`);return null}clean(data){const{hasNamespace:hasNamespace,prefixes:prefixes,nsAgnostic:nsAgnostic}=data;if(hasNamespace){this._currentNamespace=this._namespaceStack.pop()}if(prefixes){prefixes.forEach((({prefix:prefix})=>{this._namespacePrefixes.get(prefix).pop()}))}if(nsAgnostic){this._nsAgnosticLevel--}}}class XFAParser extends XMLParserBase{constructor(rootNameSpace=null,richText=false){super();this._builder=new Builder(rootNameSpace);this._stack=[];this._globalData={usedTypefaces:new Set};this._ids=new Map;this._current=this._builder.buildRoot(this._ids);this._errorCode=XMLParserErrorCode.NoError;this._whiteRegex=/^\\s+$/;this._nbsps=/\\xa0+/g;this._richText=richText}parse(data){this.parseXml(data);if(this._errorCode!==XMLParserErrorCode.NoError){return undefined}this._current[$finalize]();return this._current.element}onText(text){text=text.replace(this._nbsps,(match=>match.slice(1)+\" \"));if(this._richText||this._current[$acceptWhitespace]()){this._current[$onText](text,this._richText);return}if(this._whiteRegex.test(text)){return}this._current[$onText](text.trim())}onCdata(text){this._current[$onText](text)}_mkAttributes(attributes,tagName){let namespace=null;let prefixes=null;const attributeObj=Object.create({});for(const{name:name,value:value}of attributes){if(name===\"xmlns\"){if(!namespace){namespace=value}else{warn(`XFA - multiple namespace definition in <${tagName}>`)}}else if(name.startsWith(\"xmlns:\")){const prefix=name.substring(\"xmlns:\".length);prefixes??=[];prefixes.push({prefix:prefix,value:value})}else{const i=name.indexOf(\":\");if(i===-1){attributeObj[name]=value}else{const nsAttrs=attributeObj[$nsAttributes]??=Object.create(null);const[ns,attrName]=[name.slice(0,i),name.slice(i+1)];const attrs=nsAttrs[ns]||=Object.create(null);attrs[attrName]=value}}}return[namespace,prefixes,attributeObj]}_getNameAndPrefix(name,nsAgnostic){const i=name.indexOf(\":\");if(i===-1){return[name,null]}return[name.substring(i+1),nsAgnostic?\"\":name.substring(0,i)]}onBeginElement(tagName,attributes,isEmpty){const[namespace,prefixes,attributesObj]=this._mkAttributes(attributes,tagName);const[name,nsPrefix]=this._getNameAndPrefix(tagName,this._builder.isNsAgnostic());const node=this._builder.build({nsPrefix:nsPrefix,name:name,attributes:attributesObj,namespace:namespace,prefixes:prefixes});node[$globalData]=this._globalData;if(isEmpty){node[$finalize]();if(this._current[$onChild](node)){node[$setId](this._ids)}node[$clean](this._builder);return}this._stack.push(this._current);this._current=node}onEndElement(name){const node=this._current;if(node[$isCDATAXml]()&&typeof node[$content]===\"string\"){const parser=new XFAParser;parser._globalData=this._globalData;const root=parser.parse(node[$content]);node[$content]=null;node[$onChild](root)}node[$finalize]();this._current=this._stack.pop();if(this._current[$onChild](node)){node[$setId](this._ids)}node[$clean](this._builder)}onError(code){this._errorCode=code}}class XFAFactory{constructor(data){try{this.root=(new XFAParser).parse(XFAFactory._createDocument(data));const binder=new Binder(this.root);this.form=binder.bind();this.dataHandler=new DataHandler(this.root,binder.getData());this.form[$globalData].template=this.form}catch(e){warn(`XFA - an error occurred during parsing and binding: ${e}`)}}isValid(){return!!(this.root&&this.form)}_createPagesHelper(){const iterator=this.form[$toPages]();return new Promise(((resolve,reject)=>{const nextIteration=()=>{try{const value=iterator.next();if(value.done){resolve(value.value)}else{setTimeout(nextIteration,0)}}catch(e){reject(e)}};setTimeout(nextIteration,0)}))}async _createPages(){try{this.pages=await this._createPagesHelper();this.dims=this.pages.children.map((c=>{const{width:width,height:height}=c.attributes.style;return[0,0,parseInt(width),parseInt(height)]}))}catch(e){warn(`XFA - an error occurred during layout: ${e}`)}}getBoundingBox(pageIndex){return this.dims[pageIndex]}async getNumPages(){if(!this.pages){await this._createPages()}return this.dims.length}setImages(images){this.form[$globalData].images=images}setFonts(fonts){this.form[$globalData].fontFinder=new FontFinder(fonts);const missingFonts=[];for(let typeface of this.form[$globalData].usedTypefaces){typeface=stripQuotes(typeface);const font=this.form[$globalData].fontFinder.find(typeface);if(!font){missingFonts.push(typeface)}}if(missingFonts.length>0){return missingFonts}return null}appendFonts(fonts,reallyMissingFonts){this.form[$globalData].fontFinder.add(fonts,reallyMissingFonts)}async getPages(){if(!this.pages){await this._createPages()}const pages=this.pages;this.pages=null;return pages}serializeData(storage){return this.dataHandler.serialize(storage)}static _createDocument(data){if(!data[\"/xdp:xdp\"]){return data[\"xdp:xdp\"]}return Object.values(data).join(\"\")}static getRichTextAsHtml(rc){if(!rc||typeof rc!==\"string\"){return null}try{let root=new XFAParser(XhtmlNamespace,true).parse(rc);if(![\"body\",\"xhtml\"].includes(root[$nodeName])){const newRoot=XhtmlNamespace.body({});newRoot[$appendChild](root);root=newRoot}const result=root[$toHTML]();if(!result.success){return null}const{html:html}=result;const{attributes:attributes}=html;if(attributes){if(attributes.class){attributes.class=attributes.class.filter((attr=>!attr.startsWith(\"xfa\")))}attributes.dir=\"auto\"}return{html:html,str:root[$text]()}}catch(e){warn(`XFA - an error occurred during parsing of rich text: ${e}`)}return null}}class AnnotationFactory{static createGlobals(pdfManager){return Promise.all([pdfManager.ensureCatalog(\"acroForm\"),pdfManager.ensureDoc(\"xfaDatasets\"),pdfManager.ensureCatalog(\"structTreeRoot\"),pdfManager.ensureCatalog(\"baseUrl\"),pdfManager.ensureCatalog(\"attachments\"),pdfManager.ensureCatalog(\"globalColorSpaceCache\")]).then((([acroForm,xfaDatasets,structTreeRoot,baseUrl,attachments,globalColorSpaceCache])=>({pdfManager:pdfManager,acroForm:acroForm instanceof Dict?acroForm:Dict.empty,xfaDatasets:xfaDatasets,structTreeRoot:structTreeRoot,baseUrl:baseUrl,attachments:attachments,globalColorSpaceCache:globalColorSpaceCache})),(reason=>{warn(`createGlobals: \"${reason}\".`);return null}))}static async create(xref,ref,annotationGlobals,idFactory,collectFields,orphanFields,pageRef){const pageIndex=collectFields?await this._getPageIndex(xref,ref,annotationGlobals.pdfManager):null;return annotationGlobals.pdfManager.ensure(this,\"_create\",[xref,ref,annotationGlobals,idFactory,collectFields,orphanFields,pageIndex,pageRef])}static _create(xref,ref,annotationGlobals,idFactory,collectFields=false,orphanFields=null,pageIndex=null,pageRef=null){const dict=xref.fetchIfRef(ref);if(!(dict instanceof Dict)){return undefined}const{acroForm:acroForm,pdfManager:pdfManager}=annotationGlobals;const id=ref instanceof Ref?ref.toString():`annot_${idFactory.createObjId()}`;let subtype=dict.get(\"Subtype\");subtype=subtype instanceof Name?subtype.name:null;const parameters={xref:xref,ref:ref,dict:dict,subtype:subtype,id:id,annotationGlobals:annotationGlobals,collectFields:collectFields,orphanFields:orphanFields,needAppearances:!collectFields&&acroForm.get(\"NeedAppearances\")===true,pageIndex:pageIndex,evaluatorOptions:pdfManager.evaluatorOptions,pageRef:pageRef};switch(subtype){case\"Link\":return new LinkAnnotation(parameters);case\"Text\":return new TextAnnotation(parameters);case\"Widget\":let fieldType=getInheritableProperty({dict:dict,key:\"FT\"});fieldType=fieldType instanceof Name?fieldType.name:null;switch(fieldType){case\"Tx\":return new TextWidgetAnnotation(parameters);case\"Btn\":return new ButtonWidgetAnnotation(parameters);case\"Ch\":return new ChoiceWidgetAnnotation(parameters);case\"Sig\":return new SignatureWidgetAnnotation(parameters)}warn(`Unimplemented widget field type \"${fieldType}\", `+\"falling back to base field type.\");return new WidgetAnnotation(parameters);case\"Popup\":return new PopupAnnotation(parameters);case\"FreeText\":return new FreeTextAnnotation(parameters);case\"Line\":return new LineAnnotation(parameters);case\"Square\":return new SquareAnnotation(parameters);case\"Circle\":return new CircleAnnotation(parameters);case\"PolyLine\":return new PolylineAnnotation(parameters);case\"Polygon\":return new PolygonAnnotation(parameters);case\"Caret\":return new CaretAnnotation(parameters);case\"Ink\":return new InkAnnotation(parameters);case\"Highlight\":return new HighlightAnnotation(parameters);case\"Underline\":return new UnderlineAnnotation(parameters);case\"Squiggly\":return new SquigglyAnnotation(parameters);case\"StrikeOut\":return new StrikeOutAnnotation(parameters);case\"Stamp\":return new StampAnnotation(parameters);case\"FileAttachment\":return new FileAttachmentAnnotation(parameters);default:if(!collectFields){if(!subtype){warn(\"Annotation is missing the required /Subtype.\")}else{warn(`Unimplemented annotation type \"${subtype}\", `+\"falling back to base annotation.\")}}return new Annotation(parameters)}}static async _getPageIndex(xref,ref,pdfManager){try{const annotDict=await xref.fetchIfRefAsync(ref);if(!(annotDict instanceof Dict)){return-1}const pageRef=annotDict.getRaw(\"P\");if(pageRef instanceof Ref){try{const pageIndex=await pdfManager.ensureCatalog(\"getPageIndex\",[pageRef]);return pageIndex}catch(ex){info(`_getPageIndex -- not a valid page reference: \"${ex}\".`)}}if(annotDict.has(\"Kids\")){return-1}const numPages=await pdfManager.ensureDoc(\"numPages\");for(let pageIndex=0;pageIndex<numPages;pageIndex++){const page=await pdfManager.getPage(pageIndex);const annotations=await pdfManager.ensure(page,\"annotations\");for(const annotRef of annotations){if(annotRef instanceof Ref&&isRefsEqual(annotRef,ref)){return pageIndex}}}}catch(ex){warn(`_getPageIndex: \"${ex}\".`)}return-1}static generateImages(annotations,xref,isOffscreenCanvasSupported){if(!isOffscreenCanvasSupported){warn(\"generateImages: OffscreenCanvas is not supported, cannot save or print some annotations with images.\");return null}let imagePromises;for(const{bitmapId:bitmapId,bitmap:bitmap}of annotations){if(!bitmap){continue}imagePromises||=new Map;imagePromises.set(bitmapId,StampAnnotation.createImage(bitmap,xref))}return imagePromises}static async saveNewAnnotations(evaluator,task,annotations,imagePromises,changes){const xref=evaluator.xref;let baseFontRef;const promises=[];const{isOffscreenCanvasSupported:isOffscreenCanvasSupported}=evaluator.options;for(const annotation of annotations){if(annotation.deleted){continue}switch(annotation.annotationType){case AnnotationEditorType.FREETEXT:if(!baseFontRef){const baseFont=new Dict(xref);baseFont.set(\"BaseFont\",Name.get(\"Helvetica\"));baseFont.set(\"Type\",Name.get(\"Font\"));baseFont.set(\"Subtype\",Name.get(\"Type1\"));baseFont.set(\"Encoding\",Name.get(\"WinAnsiEncoding\"));baseFontRef=xref.getNewTemporaryRef();changes.put(baseFontRef,{data:baseFont})}promises.push(FreeTextAnnotation.createNewAnnotation(xref,annotation,changes,{evaluator:evaluator,task:task,baseFontRef:baseFontRef}));break;case AnnotationEditorType.HIGHLIGHT:if(annotation.quadPoints){promises.push(HighlightAnnotation.createNewAnnotation(xref,annotation,changes))}else{promises.push(InkAnnotation.createNewAnnotation(xref,annotation,changes))}break;case AnnotationEditorType.INK:promises.push(InkAnnotation.createNewAnnotation(xref,annotation,changes));break;case AnnotationEditorType.STAMP:const image=isOffscreenCanvasSupported?await(imagePromises?.get(annotation.bitmapId)):null;if(image?.imageStream){const{imageStream:imageStream,smaskStream:smaskStream}=image;if(smaskStream){const smaskRef=xref.getNewTemporaryRef();changes.put(smaskRef,{data:smaskStream});imageStream.dict.set(\"SMask\",smaskRef)}const imageRef=image.imageRef=xref.getNewTemporaryRef();changes.put(imageRef,{data:imageStream});image.imageStream=image.smaskStream=null}promises.push(StampAnnotation.createNewAnnotation(xref,annotation,changes,{image:image}));break;case AnnotationEditorType.SIGNATURE:promises.push(StampAnnotation.createNewAnnotation(xref,annotation,changes,{}));break}}return{annotations:await Promise.all(promises)}}static async printNewAnnotations(annotationGlobals,evaluator,task,annotations,imagePromises){if(!annotations){return null}const{options:options,xref:xref}=evaluator;const promises=[];for(const annotation of annotations){if(annotation.deleted){continue}switch(annotation.annotationType){case AnnotationEditorType.FREETEXT:promises.push(FreeTextAnnotation.createNewPrintAnnotation(annotationGlobals,xref,annotation,{evaluator:evaluator,task:task,evaluatorOptions:options}));break;case AnnotationEditorType.HIGHLIGHT:if(annotation.quadPoints){promises.push(HighlightAnnotation.createNewPrintAnnotation(annotationGlobals,xref,annotation,{evaluatorOptions:options}))}else{promises.push(InkAnnotation.createNewPrintAnnotation(annotationGlobals,xref,annotation,{evaluatorOptions:options}))}break;case AnnotationEditorType.INK:promises.push(InkAnnotation.createNewPrintAnnotation(annotationGlobals,xref,annotation,{evaluatorOptions:options}));break;case AnnotationEditorType.STAMP:const image=options.isOffscreenCanvasSupported?await(imagePromises?.get(annotation.bitmapId)):null;if(image?.imageStream){const{imageStream:imageStream,smaskStream:smaskStream}=image;if(smaskStream){imageStream.dict.set(\"SMask\",smaskStream)}image.imageRef=new JpegStream(imageStream,imageStream.length);image.imageStream=image.smaskStream=null}promises.push(StampAnnotation.createNewPrintAnnotation(annotationGlobals,xref,annotation,{image:image,evaluatorOptions:options}));break;case AnnotationEditorType.SIGNATURE:promises.push(StampAnnotation.createNewPrintAnnotation(annotationGlobals,xref,annotation,{evaluatorOptions:options}));break}}return Promise.all(promises)}}function getRgbColor(color,defaultColor=new Uint8ClampedArray(3)){if(!Array.isArray(color)){return defaultColor}const rgbColor=defaultColor||new Uint8ClampedArray(3);switch(color.length){case 0:return null;case 1:ColorSpaceUtils.gray.getRgbItem(color,0,rgbColor,0);return rgbColor;case 3:ColorSpaceUtils.rgb.getRgbItem(color,0,rgbColor,0);return rgbColor;case 4:ColorSpaceUtils.cmyk.getRgbItem(color,0,rgbColor,0);return rgbColor;default:return defaultColor}}function getPdfColorArray(color){return Array.from(color,(c=>c/255))}function getQuadPoints(dict,rect){const quadPoints=dict.getArray(\"QuadPoints\");if(!isNumberArray(quadPoints,null)||quadPoints.length===0||quadPoints.length%8>0){return null}const newQuadPoints=new Float32Array(quadPoints.length);for(let i=0,ii=quadPoints.length;i<ii;i+=8){const[x1,y1,x2,y2,x3,y3,x4,y4]=quadPoints.slice(i,i+8);const minX=Math.min(x1,x2,x3,x4);const maxX=Math.max(x1,x2,x3,x4);const minY=Math.min(y1,y2,y3,y4);const maxY=Math.max(y1,y2,y3,y4);if(rect!==null&&(minX<rect[0]||maxX>rect[2]||minY<rect[1]||maxY>rect[3])){return null}newQuadPoints.set([minX,maxY,maxX,maxY,minX,minY,maxX,minY],i)}return newQuadPoints}function getTransformMatrix(rect,bbox,matrix){const minMax=new Float32Array([Infinity,Infinity,-Infinity,-Infinity]);Util.axialAlignedBoundingBox(bbox,matrix,minMax);const[minX,minY,maxX,maxY]=minMax;if(minX===maxX||minY===maxY){return[1,0,0,1,rect[0],rect[1]]}const xRatio=(rect[2]-rect[0])/(maxX-minX);const yRatio=(rect[3]-rect[1])/(maxY-minY);return[xRatio,0,0,yRatio,rect[0]-minX*xRatio,rect[1]-minY*yRatio]}class Annotation{constructor(params){const{dict:dict,xref:xref,annotationGlobals:annotationGlobals,ref:ref,orphanFields:orphanFields}=params;const parentRef=orphanFields?.get(ref);if(parentRef){dict.set(\"Parent\",parentRef)}this.setTitle(dict.get(\"T\"));this.setContents(dict.get(\"Contents\"));this.setModificationDate(dict.get(\"M\"));this.setFlags(dict.get(\"F\"));this.setRectangle(dict.getArray(\"Rect\"));this.setColor(dict.getArray(\"C\"));this.setBorderStyle(dict);this.setAppearance(dict);this.setOptionalContent(dict);const MK=dict.get(\"MK\");this.setBorderAndBackgroundColors(MK);this.setRotation(MK,dict);this.ref=params.ref instanceof Ref?params.ref:null;this._streams=[];if(this.appearance){this._streams.push(this.appearance)}const isLocked=!!(this.flags&AnnotationFlag.LOCKED);const isContentLocked=!!(this.flags&AnnotationFlag.LOCKEDCONTENTS);this.data={annotationFlags:this.flags,borderStyle:this.borderStyle,color:this.color,backgroundColor:this.backgroundColor,borderColor:this.borderColor,rotation:this.rotation,contentsObj:this._contents,hasAppearance:!!this.appearance,id:params.id,modificationDate:this.modificationDate,rect:this.rectangle,subtype:params.subtype,hasOwnCanvas:false,noRotate:!!(this.flags&AnnotationFlag.NOROTATE),noHTML:isLocked&&isContentLocked,isEditable:false,structParent:-1};if(annotationGlobals.structTreeRoot){let structParent=dict.get(\"StructParent\");this.data.structParent=structParent=Number.isInteger(structParent)&&structParent>=0?structParent:-1;annotationGlobals.structTreeRoot.addAnnotationIdToPage(params.pageRef,structParent)}if(params.collectFields){const kids=dict.get(\"Kids\");if(Array.isArray(kids)){const kidIds=[];for(const kid of kids){if(kid instanceof Ref){kidIds.push(kid.toString())}}if(kidIds.length!==0){this.data.kidIds=kidIds}}this.data.actions=collectActions(xref,dict,AnnotationActionEventType);this.data.fieldName=this._constructFieldName(dict);this.data.pageIndex=params.pageIndex}const it=dict.get(\"IT\");if(it instanceof Name){this.data.it=it.name}this._isOffscreenCanvasSupported=params.evaluatorOptions.isOffscreenCanvasSupported;this._fallbackFontDict=null;this._needAppearances=false}_hasFlag(flags,flag){return!!(flags&flag)}_buildFlags(noView,noPrint){let{flags:flags}=this;if(noView===undefined){if(noPrint===undefined){return undefined}if(noPrint){return flags&~AnnotationFlag.PRINT}return flags&~AnnotationFlag.HIDDEN|AnnotationFlag.PRINT}if(noView){flags|=AnnotationFlag.PRINT;if(noPrint){return flags&~AnnotationFlag.NOVIEW|AnnotationFlag.HIDDEN}return flags&~AnnotationFlag.HIDDEN|AnnotationFlag.NOVIEW}flags&=~(AnnotationFlag.HIDDEN|AnnotationFlag.NOVIEW);if(noPrint){return flags&~AnnotationFlag.PRINT}return flags|AnnotationFlag.PRINT}_isViewable(flags){return!this._hasFlag(flags,AnnotationFlag.INVISIBLE)&&!this._hasFlag(flags,AnnotationFlag.NOVIEW)}_isPrintable(flags){return this._hasFlag(flags,AnnotationFlag.PRINT)&&!this._hasFlag(flags,AnnotationFlag.HIDDEN)&&!this._hasFlag(flags,AnnotationFlag.INVISIBLE)}mustBeViewed(annotationStorage,_renderForms){const noView=annotationStorage?.get(this.data.id)?.noView;if(noView!==undefined){return!noView}return this.viewable&&!this._hasFlag(this.flags,AnnotationFlag.HIDDEN)}mustBePrinted(annotationStorage){const noPrint=annotationStorage?.get(this.data.id)?.noPrint;if(noPrint!==undefined){return!noPrint}return this.printable}mustBeViewedWhenEditing(isEditing,modifiedIds=null){return isEditing?!this.data.isEditable:!modifiedIds?.has(this.data.id)}get viewable(){if(this.data.quadPoints===null){return false}if(this.flags===0){return true}return this._isViewable(this.flags)}get printable(){if(this.data.quadPoints===null){return false}if(this.flags===0){return false}return this._isPrintable(this.flags)}_parseStringHelper(data){const str=typeof data===\"string\"?stringToPDFString(data):\"\";const dir=str&&bidi(str).dir===\"rtl\"?\"rtl\":\"ltr\";return{str:str,dir:dir}}setDefaultAppearance(params){const{dict:dict,annotationGlobals:annotationGlobals}=params;const defaultAppearance=getInheritableProperty({dict:dict,key:\"DA\"})||annotationGlobals.acroForm.get(\"DA\");this._defaultAppearance=typeof defaultAppearance===\"string\"?defaultAppearance:\"\";this.data.defaultAppearanceData=parseDefaultAppearance(this._defaultAppearance)}setTitle(title){this._title=this._parseStringHelper(title)}setContents(contents){this._contents=this._parseStringHelper(contents)}setModificationDate(modificationDate){this.modificationDate=typeof modificationDate===\"string\"?modificationDate:null}setFlags(flags){this.flags=Number.isInteger(flags)&&flags>0?flags:0;if(this.flags&AnnotationFlag.INVISIBLE&&this.constructor.name!==\"Annotation\"){this.flags^=AnnotationFlag.INVISIBLE}}hasFlag(flag){return this._hasFlag(this.flags,flag)}setRectangle(rectangle){this.rectangle=lookupNormalRect(rectangle,[0,0,0,0])}setColor(color){this.color=getRgbColor(color)}setLineEndings(lineEndings){this.lineEndings=[\"None\",\"None\"];if(Array.isArray(lineEndings)&&lineEndings.length===2){for(let i=0;i<2;i++){const obj=lineEndings[i];if(obj instanceof Name){switch(obj.name){case\"None\":continue;case\"Square\":case\"Circle\":case\"Diamond\":case\"OpenArrow\":case\"ClosedArrow\":case\"Butt\":case\"ROpenArrow\":case\"RClosedArrow\":case\"Slash\":this.lineEndings[i]=obj.name;continue}}warn(`Ignoring invalid lineEnding: ${obj}`)}}}setRotation(mk,dict){this.rotation=0;let angle=mk instanceof Dict?mk.get(\"R\")||0:dict.get(\"Rotate\")||0;if(Number.isInteger(angle)&&angle!==0){angle%=360;if(angle<0){angle+=360}if(angle%90===0){this.rotation=angle}}}setBorderAndBackgroundColors(mk){if(mk instanceof Dict){this.borderColor=getRgbColor(mk.getArray(\"BC\"),null);this.backgroundColor=getRgbColor(mk.getArray(\"BG\"),null)}else{this.borderColor=this.backgroundColor=null}}setBorderStyle(borderStyle){this.borderStyle=new AnnotationBorderStyle;if(!(borderStyle instanceof Dict)){return}if(borderStyle.has(\"BS\")){const dict=borderStyle.get(\"BS\");if(dict instanceof Dict){const dictType=dict.get(\"Type\");if(!dictType||isName(dictType,\"Border\")){this.borderStyle.setWidth(dict.get(\"W\"),this.rectangle);this.borderStyle.setStyle(dict.get(\"S\"));this.borderStyle.setDashArray(dict.getArray(\"D\"))}}}else if(borderStyle.has(\"Border\")){const array=borderStyle.getArray(\"Border\");if(Array.isArray(array)&&array.length>=3){this.borderStyle.setHorizontalCornerRadius(array[0]);this.borderStyle.setVerticalCornerRadius(array[1]);this.borderStyle.setWidth(array[2],this.rectangle);if(array.length===4){this.borderStyle.setDashArray(array[3],true)}}}else{this.borderStyle.setWidth(0)}}setAppearance(dict){this.appearance=null;const appearanceStates=dict.get(\"AP\");if(!(appearanceStates instanceof Dict)){return}const normalAppearanceState=appearanceStates.get(\"N\");if(normalAppearanceState instanceof BaseStream){this.appearance=normalAppearanceState;return}if(!(normalAppearanceState instanceof Dict)){return}const as=dict.get(\"AS\");if(!(as instanceof Name)||!normalAppearanceState.has(as.name)){return}const appearance=normalAppearanceState.get(as.name);if(appearance instanceof BaseStream){this.appearance=appearance}}setOptionalContent(dict){this.oc=null;const oc=dict.get(\"OC\");if(oc instanceof Name){warn(\"setOptionalContent: Support for /Name-entry is not implemented.\")}else if(oc instanceof Dict){this.oc=oc}}async loadResources(keys,appearance){const resources=await appearance.dict.getAsync(\"Resources\");if(resources){await ObjectLoader.load(resources,keys,resources.xref)}return resources}async getOperatorList(evaluator,task,intent,annotationStorage){const{hasOwnCanvas:hasOwnCanvas,id:id,rect:rect}=this.data;let appearance=this.appearance;const isUsingOwnCanvas=!!(hasOwnCanvas&&intent&RenderingIntentFlag.DISPLAY);if(isUsingOwnCanvas&&(this.width===0||this.height===0)){this.data.hasOwnCanvas=false;return{opList:new OperatorList,separateForm:false,separateCanvas:false}}if(!appearance){if(!isUsingOwnCanvas){return{opList:new OperatorList,separateForm:false,separateCanvas:false}}appearance=new StringStream(\"\");appearance.dict=new Dict}const appearanceDict=appearance.dict;const resources=await this.loadResources(RESOURCES_KEYS_OPERATOR_LIST,appearance);const bbox=lookupRect(appearanceDict.getArray(\"BBox\"),[0,0,1,1]);const matrix=lookupMatrix(appearanceDict.getArray(\"Matrix\"),IDENTITY_MATRIX);const transform=getTransformMatrix(rect,bbox,matrix);const opList=new OperatorList;let optionalContent;if(this.oc){optionalContent=await evaluator.parseMarkedContentProps(this.oc,null)}if(optionalContent!==undefined){opList.addOp(OPS.beginMarkedContentProps,[\"OC\",optionalContent])}opList.addOp(OPS.beginAnnotation,[id,rect,transform,matrix,isUsingOwnCanvas]);await evaluator.getOperatorList({stream:appearance,task:task,resources:resources,operatorList:opList,fallbackFontDict:this._fallbackFontDict});opList.addOp(OPS.endAnnotation,[]);if(optionalContent!==undefined){opList.addOp(OPS.endMarkedContent,[])}this.reset();return{opList:opList,separateForm:false,separateCanvas:isUsingOwnCanvas}}async save(evaluator,task,annotationStorage,changes){return null}get hasTextContent(){return false}async extractTextContent(evaluator,task,viewBox){if(!this.appearance){return}const resources=await this.loadResources(RESOURCES_KEYS_TEXT_CONTENT,this.appearance);const text=[];const buffer=[];let firstPosition=null;const sink={desiredSize:Math.Infinity,ready:true,enqueue(chunk,size){for(const item of chunk.items){if(item.str===undefined){continue}firstPosition||=item.transform.slice(-2);buffer.push(item.str);if(item.hasEOL){text.push(buffer.join(\"\").trimEnd());buffer.length=0}}}};await evaluator.getTextContent({stream:this.appearance,task:task,resources:resources,includeMarkedContent:true,keepWhiteSpace:true,sink:sink,viewBox:viewBox});this.reset();if(buffer.length){text.push(buffer.join(\"\").trimEnd())}if(text.length>1||text[0]){const appearanceDict=this.appearance.dict;const bbox=lookupRect(appearanceDict.getArray(\"BBox\"),null);const matrix=lookupMatrix(appearanceDict.getArray(\"Matrix\"),null);this.data.textPosition=this._transformPoint(firstPosition,bbox,matrix);this.data.textContent=text}}_transformPoint(coords,bbox,matrix){const{rect:rect}=this.data;bbox||=[0,0,1,1];matrix||=[1,0,0,1,0,0];const transform=getTransformMatrix(rect,bbox,matrix);transform[4]-=rect[0];transform[5]-=rect[1];const p=coords.slice();Util.applyTransform(p,transform);Util.applyTransform(p,matrix);return p}getFieldObject(){if(this.data.kidIds){return{id:this.data.id,actions:this.data.actions,name:this.data.fieldName,strokeColor:this.data.borderColor,fillColor:this.data.backgroundColor,type:\"\",kidIds:this.data.kidIds,page:this.data.pageIndex,rotation:this.rotation}}return null}reset(){for(const stream of this._streams){stream.reset()}}_constructFieldName(dict){if(!dict.has(\"T\")&&!dict.has(\"Parent\")){warn(\"Unknown field name, falling back to empty field name.\");return\"\"}if(!dict.has(\"Parent\")){return stringToPDFString(dict.get(\"T\"))}const fieldName=[];if(dict.has(\"T\")){fieldName.unshift(stringToPDFString(dict.get(\"T\")))}let loopDict=dict;const visited=new RefSet;if(dict.objId){visited.put(dict.objId)}while(loopDict.has(\"Parent\")){loopDict=loopDict.get(\"Parent\");if(!(loopDict instanceof Dict)||loopDict.objId&&visited.has(loopDict.objId)){break}if(loopDict.objId){visited.put(loopDict.objId)}if(loopDict.has(\"T\")){fieldName.unshift(stringToPDFString(loopDict.get(\"T\")))}}return fieldName.join(\".\")}get width(){return this.data.rect[2]-this.data.rect[0]}get height(){return this.data.rect[3]-this.data.rect[1]}}class AnnotationBorderStyle{constructor(){this.width=1;this.rawWidth=1;this.style=AnnotationBorderStyleType.SOLID;this.dashArray=[3];this.horizontalCornerRadius=0;this.verticalCornerRadius=0}setWidth(width,rect=[0,0,0,0]){if(width instanceof Name){this.width=0;return}if(typeof width===\"number\"){if(width>0){this.rawWidth=width;const maxWidth=(rect[2]-rect[0])/2;const maxHeight=(rect[3]-rect[1])/2;if(maxWidth>0&&maxHeight>0&&(width>maxWidth||width>maxHeight)){warn(`AnnotationBorderStyle.setWidth - ignoring width: ${width}`);width=1}}this.width=width}}setStyle(style){if(!(style instanceof Name)){return}switch(style.name){case\"S\":this.style=AnnotationBorderStyleType.SOLID;break;case\"D\":this.style=AnnotationBorderStyleType.DASHED;break;case\"B\":this.style=AnnotationBorderStyleType.BEVELED;break;case\"I\":this.style=AnnotationBorderStyleType.INSET;break;case\"U\":this.style=AnnotationBorderStyleType.UNDERLINE;break;default:break}}setDashArray(dashArray,forceStyle=false){if(Array.isArray(dashArray)){let isValid=true;let allZeros=true;for(const element of dashArray){const validNumber=+element>=0;if(!validNumber){isValid=false;break}else if(element>0){allZeros=false}}if(dashArray.length===0||isValid&&!allZeros){this.dashArray=dashArray;if(forceStyle){this.setStyle(Name.get(\"D\"))}}else{this.width=0}}else if(dashArray){this.width=0}}setHorizontalCornerRadius(radius){if(Number.isInteger(radius)){this.horizontalCornerRadius=radius}}setVerticalCornerRadius(radius){if(Number.isInteger(radius)){this.verticalCornerRadius=radius}}}class MarkupAnnotation extends Annotation{constructor(params){super(params);const{dict:dict}=params;if(dict.has(\"IRT\")){const rawIRT=dict.getRaw(\"IRT\");this.data.inReplyTo=rawIRT instanceof Ref?rawIRT.toString():null;const rt=dict.get(\"RT\");this.data.replyType=rt instanceof Name?rt.name:AnnotationReplyType.REPLY}let popupRef=null;if(this.data.replyType===AnnotationReplyType.GROUP){const parent=dict.get(\"IRT\");this.setTitle(parent.get(\"T\"));this.data.titleObj=this._title;this.setContents(parent.get(\"Contents\"));this.data.contentsObj=this._contents;if(!parent.has(\"CreationDate\")){this.data.creationDate=null}else{this.setCreationDate(parent.get(\"CreationDate\"));this.data.creationDate=this.creationDate}if(!parent.has(\"M\")){this.data.modificationDate=null}else{this.setModificationDate(parent.get(\"M\"));this.data.modificationDate=this.modificationDate}popupRef=parent.getRaw(\"Popup\");if(!parent.has(\"C\")){this.data.color=null}else{this.setColor(parent.getArray(\"C\"));this.data.color=this.color}}else{this.data.titleObj=this._title;this.setCreationDate(dict.get(\"CreationDate\"));this.data.creationDate=this.creationDate;popupRef=dict.getRaw(\"Popup\");if(!dict.has(\"C\")){this.data.color=null}}this.data.popupRef=popupRef instanceof Ref?popupRef.toString():null;if(dict.has(\"RC\")){this.data.richText=XFAFactory.getRichTextAsHtml(dict.get(\"RC\"))}}setCreationDate(creationDate){this.creationDate=typeof creationDate===\"string\"?creationDate:null}_setDefaultAppearance({xref:xref,extra:extra,strokeColor:strokeColor,fillColor:fillColor,blendMode:blendMode,strokeAlpha:strokeAlpha,fillAlpha:fillAlpha,pointsCallback:pointsCallback}){const bbox=this.data.rect=[Infinity,Infinity,-Infinity,-Infinity];const buffer=[\"q\"];if(extra){buffer.push(extra)}if(strokeColor){buffer.push(`${strokeColor[0]} ${strokeColor[1]} ${strokeColor[2]} RG`)}if(fillColor){buffer.push(`${fillColor[0]} ${fillColor[1]} ${fillColor[2]} rg`)}const pointsArray=this.data.quadPoints||Float32Array.from([this.rectangle[0],this.rectangle[3],this.rectangle[2],this.rectangle[3],this.rectangle[0],this.rectangle[1],this.rectangle[2],this.rectangle[1]]);for(let i=0,ii=pointsArray.length;i<ii;i+=8){const points=pointsCallback(buffer,pointsArray.subarray(i,i+8));Util.rectBoundingBox(...points,bbox)}buffer.push(\"Q\");const formDict=new Dict(xref);const appearanceStreamDict=new Dict(xref);appearanceStreamDict.set(\"Subtype\",Name.get(\"Form\"));const appearanceStream=new StringStream(buffer.join(\" \"));appearanceStream.dict=appearanceStreamDict;formDict.set(\"Fm0\",appearanceStream);const gsDict=new Dict(xref);if(blendMode){gsDict.set(\"BM\",Name.get(blendMode))}if(typeof strokeAlpha===\"number\"){gsDict.set(\"CA\",strokeAlpha)}if(typeof fillAlpha===\"number\"){gsDict.set(\"ca\",fillAlpha)}const stateDict=new Dict(xref);stateDict.set(\"GS0\",gsDict);const resources=new Dict(xref);resources.set(\"ExtGState\",stateDict);resources.set(\"XObject\",formDict);const appearanceDict=new Dict(xref);appearanceDict.set(\"Resources\",resources);appearanceDict.set(\"BBox\",bbox);this.appearance=new StringStream(\"/GS0 gs /Fm0 Do\");this.appearance.dict=appearanceDict;this._streams.push(this.appearance,appearanceStream)}static async createNewAnnotation(xref,annotation,changes,params){const annotationRef=annotation.ref||=xref.getNewTemporaryRef();const ap=await this.createNewAppearanceStream(annotation,xref,params);let annotationDict;if(ap){const apRef=xref.getNewTemporaryRef();annotationDict=this.createNewDict(annotation,xref,{apRef:apRef});changes.put(apRef,{data:ap})}else{annotationDict=this.createNewDict(annotation,xref,{})}if(Number.isInteger(annotation.parentTreeId)){annotationDict.set(\"StructParent\",annotation.parentTreeId)}changes.put(annotationRef,{data:annotationDict});return{ref:annotationRef}}static async createNewPrintAnnotation(annotationGlobals,xref,annotation,params){const ap=await this.createNewAppearanceStream(annotation,xref,params);const annotationDict=this.createNewDict(annotation,xref,ap?{ap:ap}:{});const newAnnotation=new this.prototype.constructor({dict:annotationDict,xref:xref,annotationGlobals:annotationGlobals,evaluatorOptions:params.evaluatorOptions});if(annotation.ref){newAnnotation.ref=newAnnotation.refToReplace=annotation.ref}return newAnnotation}}class WidgetAnnotation extends Annotation{constructor(params){super(params);const{dict:dict,xref:xref,annotationGlobals:annotationGlobals}=params;const data=this.data;this._needAppearances=params.needAppearances;data.annotationType=AnnotationType.WIDGET;if(data.fieldName===undefined){data.fieldName=this._constructFieldName(dict)}if(data.actions===undefined){data.actions=collectActions(xref,dict,AnnotationActionEventType)}let fieldValue=getInheritableProperty({dict:dict,key:\"V\",getArray:true});data.fieldValue=this._decodeFormValue(fieldValue);const defaultFieldValue=getInheritableProperty({dict:dict,key:\"DV\",getArray:true});data.defaultFieldValue=this._decodeFormValue(defaultFieldValue);if(fieldValue===undefined&&annotationGlobals.xfaDatasets){const path=this._title.str;if(path){this._hasValueFromXFA=true;data.fieldValue=fieldValue=annotationGlobals.xfaDatasets.getValue(path)}}if(fieldValue===undefined&&data.defaultFieldValue!==null){data.fieldValue=data.defaultFieldValue}data.alternativeText=stringToPDFString(dict.get(\"TU\")||\"\");this.setDefaultAppearance(params);data.hasAppearance||=this._needAppearances&&data.fieldValue!==undefined&&data.fieldValue!==null;const fieldType=getInheritableProperty({dict:dict,key:\"FT\"});data.fieldType=fieldType instanceof Name?fieldType.name:null;const localResources=getInheritableProperty({dict:dict,key:\"DR\"});const acroFormResources=annotationGlobals.acroForm.get(\"DR\");const appearanceResources=this.appearance?.dict.get(\"Resources\");this._fieldResources={localResources:localResources,acroFormResources:acroFormResources,appearanceResources:appearanceResources,mergedResources:Dict.merge({xref:xref,dictArray:[localResources,appearanceResources,acroFormResources],mergeSubDicts:true})};data.fieldFlags=getInheritableProperty({dict:dict,key:\"Ff\"});if(!Number.isInteger(data.fieldFlags)||data.fieldFlags<0){data.fieldFlags=0}data.password=this.hasFieldFlag(AnnotationFieldFlag.PASSWORD);data.readOnly=this.hasFieldFlag(AnnotationFieldFlag.READONLY);data.required=this.hasFieldFlag(AnnotationFieldFlag.REQUIRED);data.hidden=this._hasFlag(data.annotationFlags,AnnotationFlag.HIDDEN)||this._hasFlag(data.annotationFlags,AnnotationFlag.NOVIEW)}_decodeFormValue(formValue){if(Array.isArray(formValue)){return formValue.filter((item=>typeof item===\"string\")).map((item=>stringToPDFString(item)))}else if(formValue instanceof Name){return stringToPDFString(formValue.name)}else if(typeof formValue===\"string\"){return stringToPDFString(formValue)}return null}hasFieldFlag(flag){return!!(this.data.fieldFlags&flag)}_isViewable(flags){return true}mustBeViewed(annotationStorage,renderForms){if(renderForms){return this.viewable}return super.mustBeViewed(annotationStorage,renderForms)&&!this._hasFlag(this.flags,AnnotationFlag.NOVIEW)}getRotationMatrix(annotationStorage){let rotation=annotationStorage?.get(this.data.id)?.rotation;if(rotation===undefined){rotation=this.rotation}return rotation===0?IDENTITY_MATRIX:getRotationMatrix(rotation,this.width,this.height)}getBorderAndBackgroundAppearances(annotationStorage){let rotation=annotationStorage?.get(this.data.id)?.rotation;if(rotation===undefined){rotation=this.rotation}if(!this.backgroundColor&&!this.borderColor){return\"\"}const rect=rotation===0||rotation===180?`0 0 ${this.width} ${this.height} re`:`0 0 ${this.height} ${this.width} re`;let str=\"\";if(this.backgroundColor){str=`${getPdfColor(this.backgroundColor,true)} ${rect} f `}if(this.borderColor){const borderWidth=this.borderStyle.width||1;str+=`${borderWidth} w ${getPdfColor(this.borderColor,false)} ${rect} S `}return str}async getOperatorList(evaluator,task,intent,annotationStorage){if(intent&RenderingIntentFlag.ANNOTATIONS_FORMS&&!(this instanceof SignatureWidgetAnnotation)&&!this.data.noHTML&&!this.data.hasOwnCanvas){return{opList:new OperatorList,separateForm:true,separateCanvas:false}}if(!this._hasText){return super.getOperatorList(evaluator,task,intent,annotationStorage)}const content=await this._getAppearance(evaluator,task,intent,annotationStorage);if(this.appearance&&content===null){return super.getOperatorList(evaluator,task,intent,annotationStorage)}const opList=new OperatorList;if(!this._defaultAppearance||content===null){return{opList:opList,separateForm:false,separateCanvas:false}}const isUsingOwnCanvas=!!(this.data.hasOwnCanvas&&intent&RenderingIntentFlag.DISPLAY);const matrix=[1,0,0,1,0,0];const bbox=[0,0,this.width,this.height];const transform=getTransformMatrix(this.data.rect,bbox,matrix);let optionalContent;if(this.oc){optionalContent=await evaluator.parseMarkedContentProps(this.oc,null)}if(optionalContent!==undefined){opList.addOp(OPS.beginMarkedContentProps,[\"OC\",optionalContent])}opList.addOp(OPS.beginAnnotation,[this.data.id,this.data.rect,transform,this.getRotationMatrix(annotationStorage),isUsingOwnCanvas]);const stream=new StringStream(content);await evaluator.getOperatorList({stream:stream,task:task,resources:this._fieldResources.mergedResources,operatorList:opList});opList.addOp(OPS.endAnnotation,[]);if(optionalContent!==undefined){opList.addOp(OPS.endMarkedContent,[])}return{opList:opList,separateForm:false,separateCanvas:isUsingOwnCanvas}}_getMKDict(rotation){const mk=new Dict(null);if(rotation){mk.set(\"R\",rotation)}if(this.borderColor){mk.set(\"BC\",getPdfColorArray(this.borderColor))}if(this.backgroundColor){mk.set(\"BG\",getPdfColorArray(this.backgroundColor))}return mk.size>0?mk:null}amendSavedDict(annotationStorage,dict){}setValue(dict,value,xref,changes){const{dict:parentDict,ref:parentRef}=getParentToUpdate(dict,this.ref,xref);if(!parentDict){dict.set(\"V\",value)}else if(!changes.has(parentRef)){const newParentDict=parentDict.clone();newParentDict.set(\"V\",value);changes.put(parentRef,{data:newParentDict});return newParentDict}return null}async save(evaluator,task,annotationStorage,changes){const storageEntry=annotationStorage?.get(this.data.id);const flags=this._buildFlags(storageEntry?.noView,storageEntry?.noPrint);let value=storageEntry?.value,rotation=storageEntry?.rotation;if(value===this.data.fieldValue||value===undefined){if(!this._hasValueFromXFA&&rotation===undefined&&flags===undefined){return}value||=this.data.fieldValue}if(rotation===undefined&&!this._hasValueFromXFA&&Array.isArray(value)&&Array.isArray(this.data.fieldValue)&&isArrayEqual(value,this.data.fieldValue)&&flags===undefined){return}if(rotation===undefined){rotation=this.rotation}let appearance=null;if(!this._needAppearances){appearance=await this._getAppearance(evaluator,task,RenderingIntentFlag.SAVE,annotationStorage);if(appearance===null&&flags===undefined){return}}else{}let needAppearances=false;if(appearance?.needAppearances){needAppearances=true;appearance=null}const{xref:xref}=evaluator;const originalDict=xref.fetchIfRef(this.ref);if(!(originalDict instanceof Dict)){return}const dict=new Dict(xref);for(const key of originalDict.getKeys()){if(key!==\"AP\"){dict.set(key,originalDict.getRaw(key))}}if(flags!==undefined){dict.set(\"F\",flags);if(appearance===null&&!needAppearances){const ap=originalDict.getRaw(\"AP\");if(ap){dict.set(\"AP\",ap)}}}const xfa={path:this.data.fieldName,value:value};const newParentDict=this.setValue(dict,Array.isArray(value)?value.map(stringToAsciiOrUTF16BE):stringToAsciiOrUTF16BE(value),xref,changes);this.amendSavedDict(annotationStorage,newParentDict||dict);const maybeMK=this._getMKDict(rotation);if(maybeMK){dict.set(\"MK\",maybeMK)}changes.put(this.ref,{data:dict,xfa:xfa,needAppearances:needAppearances});if(appearance!==null){const newRef=xref.getNewTemporaryRef();const AP=new Dict(xref);dict.set(\"AP\",AP);AP.set(\"N\",newRef);const resources=this._getSaveFieldResources(xref);const appearanceStream=new StringStream(appearance);const appearanceDict=appearanceStream.dict=new Dict(xref);appearanceDict.set(\"Subtype\",Name.get(\"Form\"));appearanceDict.set(\"Resources\",resources);const bbox=rotation%180===0?[0,0,this.width,this.height]:[0,0,this.height,this.width];appearanceDict.set(\"BBox\",bbox);const rotationMatrix=this.getRotationMatrix(annotationStorage);if(rotationMatrix!==IDENTITY_MATRIX){appearanceDict.set(\"Matrix\",rotationMatrix)}changes.put(newRef,{data:appearanceStream,xfa:null,needAppearances:false})}dict.set(\"M\",`D:${getModificationDate()}`)}async _getAppearance(evaluator,task,intent,annotationStorage){if(this.data.password){return null}const storageEntry=annotationStorage?.get(this.data.id);let value,rotation;if(storageEntry){value=storageEntry.formattedValue||storageEntry.value;rotation=storageEntry.rotation}if(rotation===undefined&&value===undefined&&!this._needAppearances){if(!this._hasValueFromXFA||this.appearance){return null}}const colors=this.getBorderAndBackgroundAppearances(annotationStorage);if(value===undefined){value=this.data.fieldValue;if(!value){return`/Tx BMC q ${colors}Q EMC`}}if(Array.isArray(value)&&value.length===1){value=value[0]}assert(typeof value===\"string\",\"Expected `value` to be a string.\");value=value.trimEnd();if(this.data.combo){const option=this.data.options.find((({exportValue:exportValue})=>value===exportValue));value=option?.displayValue||value}if(value===\"\"){return`/Tx BMC q ${colors}Q EMC`}if(rotation===undefined){rotation=this.rotation}let lineCount=-1;let lines;if(this.data.multiLine){lines=value.split(/\\r\\n?|\\n/).map((line=>line.normalize(\"NFC\")));lineCount=lines.length}else{lines=[value.replace(/\\r\\n?|\\n/,\"\").normalize(\"NFC\")]}const defaultPadding=1;const defaultHPadding=2;let{width:totalWidth,height:totalHeight}=this;if(rotation===90||rotation===270){[totalWidth,totalHeight]=[totalHeight,totalWidth]}if(!this._defaultAppearance){this.data.defaultAppearanceData=parseDefaultAppearance(this._defaultAppearance=\"/Helvetica 0 Tf 0 g\")}let font=await WidgetAnnotation._getFontData(evaluator,task,this.data.defaultAppearanceData,this._fieldResources.mergedResources);let defaultAppearance,fontSize,lineHeight;const encodedLines=[];let encodingError=false;for(const line of lines){const encodedString=font.encodeString(line);if(encodedString.length>1){encodingError=true}encodedLines.push(encodedString.join(\"\"))}if(encodingError&&intent&RenderingIntentFlag.SAVE){return{needAppearances:true}}if(encodingError&&this._isOffscreenCanvasSupported){const fontFamily=this.data.comb?\"monospace\":\"sans-serif\";const fakeUnicodeFont=new FakeUnicodeFont(evaluator.xref,fontFamily);const resources=fakeUnicodeFont.createFontResources(lines.join(\"\"));const newFont=resources.getRaw(\"Font\");if(this._fieldResources.mergedResources.has(\"Font\")){const oldFont=this._fieldResources.mergedResources.get(\"Font\");for(const key of newFont.getKeys()){oldFont.set(key,newFont.getRaw(key))}}else{this._fieldResources.mergedResources.set(\"Font\",newFont)}const fontName=fakeUnicodeFont.fontName.name;font=await WidgetAnnotation._getFontData(evaluator,task,{fontName:fontName,fontSize:0},resources);for(let i=0,ii=encodedLines.length;i<ii;i++){encodedLines[i]=stringToUTF16String(lines[i])}const savedDefaultAppearance=Object.assign(Object.create(null),this.data.defaultAppearanceData);this.data.defaultAppearanceData.fontSize=0;this.data.defaultAppearanceData.fontName=fontName;[defaultAppearance,fontSize,lineHeight]=this._computeFontSize(totalHeight-2*defaultPadding,totalWidth-2*defaultHPadding,value,font,lineCount);this.data.defaultAppearanceData=savedDefaultAppearance}else{if(!this._isOffscreenCanvasSupported){warn(\"_getAppearance: OffscreenCanvas is not supported, annotation may not render correctly.\")}[defaultAppearance,fontSize,lineHeight]=this._computeFontSize(totalHeight-2*defaultPadding,totalWidth-2*defaultHPadding,value,font,lineCount)}let descent=font.descent;if(isNaN(descent)){descent=BASELINE_FACTOR*lineHeight}else{descent=Math.max(BASELINE_FACTOR*lineHeight,Math.abs(descent)*fontSize)}const defaultVPadding=Math.min(Math.floor((totalHeight-fontSize)/2),defaultPadding);const alignment=this.data.textAlignment;if(this.data.multiLine){return this._getMultilineAppearance(defaultAppearance,encodedLines,font,fontSize,totalWidth,totalHeight,alignment,defaultHPadding,defaultVPadding,descent,lineHeight,annotationStorage)}if(this.data.comb){return this._getCombAppearance(defaultAppearance,font,encodedLines[0],fontSize,totalWidth,totalHeight,defaultHPadding,defaultVPadding,descent,lineHeight,annotationStorage)}const bottomPadding=defaultVPadding+descent;if(alignment===0||alignment>2){return`/Tx BMC q ${colors}BT `+defaultAppearance+` 1 0 0 1 ${numberToString(defaultHPadding)} ${numberToString(bottomPadding)} Tm (${escapeString(encodedLines[0])}) Tj`+\" ET Q EMC\"}const prevInfo={shift:0};const renderedText=this._renderText(encodedLines[0],font,fontSize,totalWidth,alignment,prevInfo,defaultHPadding,bottomPadding);return`/Tx BMC q ${colors}BT `+defaultAppearance+` 1 0 0 1 0 0 Tm ${renderedText}`+\" ET Q EMC\"}static async _getFontData(evaluator,task,appearanceData,resources){const operatorList=new OperatorList;const initialState={font:null,clone(){return this}};const{fontName:fontName,fontSize:fontSize}=appearanceData;await evaluator.handleSetFont(resources,[fontName&&Name.get(fontName),fontSize],null,operatorList,task,initialState,null);return initialState.font}_getTextWidth(text,font){return Math.sumPrecise(font.charsToGlyphs(text).map((g=>g.width)))/1e3}_computeFontSize(height,width,text,font,lineCount){let{fontSize:fontSize}=this.data.defaultAppearanceData;let lineHeight=(fontSize||12)*LINE_FACTOR,numberOfLines=Math.round(height/lineHeight);if(!fontSize){const roundWithTwoDigits=x=>Math.floor(x*100)/100;if(lineCount===-1){const textWidth=this._getTextWidth(text,font);fontSize=roundWithTwoDigits(Math.min(height/LINE_FACTOR,width/textWidth));numberOfLines=1}else{const lines=text.split(/\\r\\n?|\\n/);const cachedLines=[];for(const line of lines){const encoded=font.encodeString(line).join(\"\");const glyphs=font.charsToGlyphs(encoded);const positions=font.getCharPositions(encoded);cachedLines.push({line:encoded,glyphs:glyphs,positions:positions})}const isTooBig=fsize=>{let totalHeight=0;for(const cache of cachedLines){const chunks=this._splitLine(null,font,fsize,width,cache);totalHeight+=chunks.length*fsize;if(totalHeight>height){return true}}return false};numberOfLines=Math.max(numberOfLines,lineCount);while(true){lineHeight=height/numberOfLines;fontSize=roundWithTwoDigits(lineHeight/LINE_FACTOR);if(isTooBig(fontSize)){numberOfLines++;continue}break}}const{fontName:fontName,fontColor:fontColor}=this.data.defaultAppearanceData;this._defaultAppearance=createDefaultAppearance({fontSize:fontSize,fontName:fontName,fontColor:fontColor})}return[this._defaultAppearance,fontSize,height/numberOfLines]}_renderText(text,font,fontSize,totalWidth,alignment,prevInfo,hPadding,vPadding){let shift;if(alignment===1){const width=this._getTextWidth(text,font)*fontSize;shift=(totalWidth-width)/2}else if(alignment===2){const width=this._getTextWidth(text,font)*fontSize;shift=totalWidth-width-hPadding}else{shift=hPadding}const shiftStr=numberToString(shift-prevInfo.shift);prevInfo.shift=shift;vPadding=numberToString(vPadding);return`${shiftStr} ${vPadding} Td (${escapeString(text)}) Tj`}_getSaveFieldResources(xref){const{localResources:localResources,appearanceResources:appearanceResources,acroFormResources:acroFormResources}=this._fieldResources;const fontName=this.data.defaultAppearanceData?.fontName;if(!fontName){return localResources||Dict.empty}for(const resources of[localResources,appearanceResources]){if(resources instanceof Dict){const localFont=resources.get(\"Font\");if(localFont instanceof Dict&&localFont.has(fontName)){return resources}}}if(acroFormResources instanceof Dict){const acroFormFont=acroFormResources.get(\"Font\");if(acroFormFont instanceof Dict&&acroFormFont.has(fontName)){const subFontDict=new Dict(xref);subFontDict.set(fontName,acroFormFont.getRaw(fontName));const subResourcesDict=new Dict(xref);subResourcesDict.set(\"Font\",subFontDict);return Dict.merge({xref:xref,dictArray:[subResourcesDict,localResources],mergeSubDicts:true})}}return localResources||Dict.empty}getFieldObject(){return null}}class TextWidgetAnnotation extends WidgetAnnotation{constructor(params){super(params);const{dict:dict}=params;if(dict.has(\"PMD\")){this.flags|=AnnotationFlag.HIDDEN;this.data.hidden=true;warn(\"Barcodes are not supported\")}this.data.hasOwnCanvas=this.data.readOnly&&!this.data.noHTML;this._hasText=true;if(typeof this.data.fieldValue!==\"string\"){this.data.fieldValue=\"\"}let alignment=getInheritableProperty({dict:dict,key:\"Q\"});if(!Number.isInteger(alignment)||alignment<0||alignment>2){alignment=null}this.data.textAlignment=alignment;let maximumLength=getInheritableProperty({dict:dict,key:\"MaxLen\"});if(!Number.isInteger(maximumLength)||maximumLength<0){maximumLength=0}this.data.maxLen=maximumLength;this.data.multiLine=this.hasFieldFlag(AnnotationFieldFlag.MULTILINE);this.data.comb=this.hasFieldFlag(AnnotationFieldFlag.COMB)&&!this.data.multiLine&&!this.data.password&&!this.hasFieldFlag(AnnotationFieldFlag.FILESELECT)&&this.data.maxLen!==0;this.data.doNotScroll=this.hasFieldFlag(AnnotationFieldFlag.DONOTSCROLL)}get hasTextContent(){return!!this.appearance&&!this._needAppearances}_getCombAppearance(defaultAppearance,font,text,fontSize,width,height,hPadding,vPadding,descent,lineHeight,annotationStorage){const combWidth=width/this.data.maxLen;const colors=this.getBorderAndBackgroundAppearances(annotationStorage);const buf=[];const positions=font.getCharPositions(text);for(const[start,end]of positions){buf.push(`(${escapeString(text.substring(start,end))}) Tj`)}const renderedComb=buf.join(` ${numberToString(combWidth)} 0 Td `);return`/Tx BMC q ${colors}BT `+defaultAppearance+` 1 0 0 1 ${numberToString(hPadding)} ${numberToString(vPadding+descent)} Tm ${renderedComb}`+\" ET Q EMC\"}_getMultilineAppearance(defaultAppearance,lines,font,fontSize,width,height,alignment,hPadding,vPadding,descent,lineHeight,annotationStorage){const buf=[];const totalWidth=width-2*hPadding;const prevInfo={shift:0};for(let i=0,ii=lines.length;i<ii;i++){const line=lines[i];const chunks=this._splitLine(line,font,fontSize,totalWidth);for(let j=0,jj=chunks.length;j<jj;j++){const chunk=chunks[j];const vShift=i===0&&j===0?-vPadding-(lineHeight-descent):-lineHeight;buf.push(this._renderText(chunk,font,fontSize,width,alignment,prevInfo,hPadding,vShift))}}const colors=this.getBorderAndBackgroundAppearances(annotationStorage);const renderedText=buf.join(\"\\n\");return`/Tx BMC q ${colors}BT `+defaultAppearance+` 1 0 0 1 0 ${numberToString(height)} Tm ${renderedText}`+\" ET Q EMC\"}_splitLine(line,font,fontSize,width,cache={}){line=cache.line||line;const glyphs=cache.glyphs||font.charsToGlyphs(line);if(glyphs.length<=1){return[line]}const positions=cache.positions||font.getCharPositions(line);const scale=fontSize/1e3;const chunks=[];let lastSpacePosInStringStart=-1,lastSpacePosInStringEnd=-1,lastSpacePos=-1,startChunk=0,currentWidth=0;for(let i=0,ii=glyphs.length;i<ii;i++){const[start,end]=positions[i];const glyph=glyphs[i];const glyphWidth=glyph.width*scale;if(glyph.unicode===\" \"){if(currentWidth+glyphWidth>width){chunks.push(line.substring(startChunk,start));startChunk=start;currentWidth=glyphWidth;lastSpacePosInStringStart=-1;lastSpacePos=-1}else{currentWidth+=glyphWidth;lastSpacePosInStringStart=start;lastSpacePosInStringEnd=end;lastSpacePos=i}}else if(currentWidth+glyphWidth>width){if(lastSpacePosInStringStart!==-1){chunks.push(line.substring(startChunk,lastSpacePosInStringEnd));startChunk=lastSpacePosInStringEnd;i=lastSpacePos+1;lastSpacePosInStringStart=-1;currentWidth=0}else{chunks.push(line.substring(startChunk,start));startChunk=start;currentWidth=glyphWidth}}else{currentWidth+=glyphWidth}}if(startChunk<line.length){chunks.push(line.substring(startChunk,line.length))}return chunks}async extractTextContent(evaluator,task,viewBox){await super.extractTextContent(evaluator,task,viewBox);const text=this.data.textContent;if(!text){return}const allText=text.join(\"\\n\");if(allText===this.data.fieldValue){return}const regex=allText.replaceAll(/([.*+?^${}()|[\\]\\\\])|(\\s+)/g,((_m,p1)=>p1?`\\\\${p1}`:\"\\\\s+\"));if(new RegExp(`^\\\\s*${regex}\\\\s*$`).test(this.data.fieldValue)){this.data.textContent=this.data.fieldValue.split(\"\\n\")}}getFieldObject(){return{id:this.data.id,value:this.data.fieldValue,defaultValue:this.data.defaultFieldValue||\"\",multiline:this.data.multiLine,password:this.data.password,charLimit:this.data.maxLen,comb:this.data.comb,editable:!this.data.readOnly,hidden:this.data.hidden,name:this.data.fieldName,rect:this.data.rect,actions:this.data.actions,page:this.data.pageIndex,strokeColor:this.data.borderColor,fillColor:this.data.backgroundColor,rotation:this.rotation,type:\"text\"}}}class ButtonWidgetAnnotation extends WidgetAnnotation{constructor(params){super(params);this.checkedAppearance=null;this.uncheckedAppearance=null;const isRadio=this.hasFieldFlag(AnnotationFieldFlag.RADIO),isPushButton=this.hasFieldFlag(AnnotationFieldFlag.PUSHBUTTON);this.data.checkBox=!isRadio&&!isPushButton;this.data.radioButton=isRadio&&!isPushButton;this.data.pushButton=isPushButton;this.data.isTooltipOnly=false;if(this.data.checkBox){this._processCheckBox(params)}else if(this.data.radioButton){this._processRadioButton(params)}else if(this.data.pushButton){this.data.hasOwnCanvas=true;this.data.noHTML=false;this._processPushButton(params)}else{warn(\"Invalid field flags for button widget annotation\")}}async getOperatorList(evaluator,task,intent,annotationStorage){if(this.data.pushButton){return super.getOperatorList(evaluator,task,intent,false,annotationStorage)}let value=null;let rotation=null;if(annotationStorage){const storageEntry=annotationStorage.get(this.data.id);value=storageEntry?storageEntry.value:null;rotation=storageEntry?storageEntry.rotation:null}if(value===null&&this.appearance){return super.getOperatorList(evaluator,task,intent,annotationStorage)}if(value===null||value===undefined){value=this.data.checkBox?this.data.fieldValue===this.data.exportValue:this.data.fieldValue===this.data.buttonValue}const appearance=value?this.checkedAppearance:this.uncheckedAppearance;if(appearance){const savedAppearance=this.appearance;const savedMatrix=lookupMatrix(appearance.dict.getArray(\"Matrix\"),IDENTITY_MATRIX);if(rotation){appearance.dict.set(\"Matrix\",this.getRotationMatrix(annotationStorage))}this.appearance=appearance;const operatorList=super.getOperatorList(evaluator,task,intent,annotationStorage);this.appearance=savedAppearance;appearance.dict.set(\"Matrix\",savedMatrix);return operatorList}return{opList:new OperatorList,separateForm:false,separateCanvas:false}}async save(evaluator,task,annotationStorage,changes){if(this.data.checkBox){this._saveCheckbox(evaluator,task,annotationStorage,changes);return}if(this.data.radioButton){this._saveRadioButton(evaluator,task,annotationStorage,changes)}}async _saveCheckbox(evaluator,task,annotationStorage,changes){if(!annotationStorage){return}const storageEntry=annotationStorage.get(this.data.id);const flags=this._buildFlags(storageEntry?.noView,storageEntry?.noPrint);let rotation=storageEntry?.rotation,value=storageEntry?.value;if(rotation===undefined&&flags===undefined){if(value===undefined){return}const defaultValue=this.data.fieldValue===this.data.exportValue;if(defaultValue===value){return}}let dict=evaluator.xref.fetchIfRef(this.ref);if(!(dict instanceof Dict)){return}dict=dict.clone();if(rotation===undefined){rotation=this.rotation}if(value===undefined){value=this.data.fieldValue===this.data.exportValue}const xfa={path:this.data.fieldName,value:value?this.data.exportValue:\"\"};const name=Name.get(value?this.data.exportValue:\"Off\");this.setValue(dict,name,evaluator.xref,changes);dict.set(\"AS\",name);dict.set(\"M\",`D:${getModificationDate()}`);if(flags!==undefined){dict.set(\"F\",flags)}const maybeMK=this._getMKDict(rotation);if(maybeMK){dict.set(\"MK\",maybeMK)}changes.put(this.ref,{data:dict,xfa:xfa,needAppearances:false})}async _saveRadioButton(evaluator,task,annotationStorage,changes){if(!annotationStorage){return}const storageEntry=annotationStorage.get(this.data.id);const flags=this._buildFlags(storageEntry?.noView,storageEntry?.noPrint);let rotation=storageEntry?.rotation,value=storageEntry?.value;if(rotation===undefined&&flags===undefined){if(value===undefined){return}const defaultValue=this.data.fieldValue===this.data.buttonValue;if(defaultValue===value){return}}let dict=evaluator.xref.fetchIfRef(this.ref);if(!(dict instanceof Dict)){return}dict=dict.clone();if(value===undefined){value=this.data.fieldValue===this.data.buttonValue}if(rotation===undefined){rotation=this.rotation}const xfa={path:this.data.fieldName,value:value?this.data.buttonValue:\"\"};const name=Name.get(value?this.data.buttonValue:\"Off\");if(value){this.setValue(dict,name,evaluator.xref,changes)}dict.set(\"AS\",name);dict.set(\"M\",`D:${getModificationDate()}`);if(flags!==undefined){dict.set(\"F\",flags)}const maybeMK=this._getMKDict(rotation);if(maybeMK){dict.set(\"MK\",maybeMK)}changes.put(this.ref,{data:dict,xfa:xfa,needAppearances:false})}_getDefaultCheckedAppearance(params,type){const{width:width,height:height}=this;const bbox=[0,0,width,height];const FONT_RATIO=.8;const fontSize=Math.min(width,height)*FONT_RATIO;let metrics,char;if(type===\"check\"){metrics={width:.755*fontSize,height:.705*fontSize};char=\"3\"}else if(type===\"disc\"){metrics={width:.791*fontSize,height:.705*fontSize};char=\"l\"}else{unreachable(`_getDefaultCheckedAppearance - unsupported type: ${type}`)}const xShift=numberToString((width-metrics.width)/2);const yShift=numberToString((height-metrics.height)/2);const appearance=`q BT /PdfJsZaDb ${fontSize} Tf 0 g ${xShift} ${yShift} Td (${char}) Tj ET Q`;const appearanceStreamDict=new Dict(params.xref);appearanceStreamDict.set(\"FormType\",1);appearanceStreamDict.set(\"Subtype\",Name.get(\"Form\"));appearanceStreamDict.set(\"Type\",Name.get(\"XObject\"));appearanceStreamDict.set(\"BBox\",bbox);appearanceStreamDict.set(\"Matrix\",[1,0,0,1,0,0]);appearanceStreamDict.set(\"Length\",appearance.length);const resources=new Dict(params.xref);const font=new Dict(params.xref);font.set(\"PdfJsZaDb\",this.fallbackFontDict);resources.set(\"Font\",font);appearanceStreamDict.set(\"Resources\",resources);this.checkedAppearance=new StringStream(appearance);this.checkedAppearance.dict=appearanceStreamDict;this._streams.push(this.checkedAppearance)}_processCheckBox(params){const customAppearance=params.dict.get(\"AP\");if(!(customAppearance instanceof Dict)){return}const normalAppearance=customAppearance.get(\"N\");if(!(normalAppearance instanceof Dict)){return}const asValue=this._decodeFormValue(params.dict.get(\"AS\"));if(typeof asValue===\"string\"){this.data.fieldValue=asValue}const yes=this.data.fieldValue!==null&&this.data.fieldValue!==\"Off\"?this.data.fieldValue:\"Yes\";const exportValues=normalAppearance.getKeys();if(exportValues.length===0){exportValues.push(\"Off\",yes)}else if(exportValues.length===1){if(exportValues[0]===\"Off\"){exportValues.push(yes)}else{exportValues.unshift(\"Off\")}}else if(exportValues.includes(yes)){exportValues.length=0;exportValues.push(\"Off\",yes)}else{const otherYes=exportValues.find((v=>v!==\"Off\"));exportValues.length=0;exportValues.push(\"Off\",otherYes)}if(!exportValues.includes(this.data.fieldValue)){this.data.fieldValue=\"Off\"}this.data.exportValue=exportValues[1];const checkedAppearance=normalAppearance.get(this.data.exportValue);this.checkedAppearance=checkedAppearance instanceof BaseStream?checkedAppearance:null;const uncheckedAppearance=normalAppearance.get(\"Off\");this.uncheckedAppearance=uncheckedAppearance instanceof BaseStream?uncheckedAppearance:null;if(this.checkedAppearance){this._streams.push(this.checkedAppearance)}else{this._getDefaultCheckedAppearance(params,\"check\")}if(this.uncheckedAppearance){this._streams.push(this.uncheckedAppearance)}this._fallbackFontDict=this.fallbackFontDict;if(this.data.defaultFieldValue===null){this.data.defaultFieldValue=\"Off\"}}_processRadioButton(params){this.data.buttonValue=null;const fieldParent=params.dict.get(\"Parent\");if(fieldParent instanceof Dict){this.parent=params.dict.getRaw(\"Parent\");const fieldParentValue=fieldParent.get(\"V\");if(fieldParentValue instanceof Name){this.data.fieldValue=this._decodeFormValue(fieldParentValue)}}const appearanceStates=params.dict.get(\"AP\");if(!(appearanceStates instanceof Dict)){return}const normalAppearance=appearanceStates.get(\"N\");if(!(normalAppearance instanceof Dict)){return}for(const key of normalAppearance.getKeys()){if(key!==\"Off\"){this.data.buttonValue=this._decodeFormValue(key);break}}const checkedAppearance=normalAppearance.get(this.data.buttonValue);this.checkedAppearance=checkedAppearance instanceof BaseStream?checkedAppearance:null;const uncheckedAppearance=normalAppearance.get(\"Off\");this.uncheckedAppearance=uncheckedAppearance instanceof BaseStream?uncheckedAppearance:null;if(this.checkedAppearance){this._streams.push(this.checkedAppearance)}else{this._getDefaultCheckedAppearance(params,\"disc\")}if(this.uncheckedAppearance){this._streams.push(this.uncheckedAppearance)}this._fallbackFontDict=this.fallbackFontDict;if(this.data.defaultFieldValue===null){this.data.defaultFieldValue=\"Off\"}}_processPushButton(params){const{dict:dict,annotationGlobals:annotationGlobals}=params;if(!dict.has(\"A\")&&!dict.has(\"AA\")&&!this.data.alternativeText){warn(\"Push buttons without action dictionaries are not supported\");return}this.data.isTooltipOnly=!dict.has(\"A\")&&!dict.has(\"AA\");Catalog.parseDestDictionary({destDict:dict,resultObj:this.data,docBaseUrl:annotationGlobals.baseUrl,docAttachments:annotationGlobals.attachments})}getFieldObject(){let type=\"button\";let exportValues;if(this.data.checkBox){type=\"checkbox\";exportValues=this.data.exportValue}else if(this.data.radioButton){type=\"radiobutton\";exportValues=this.data.buttonValue}return{id:this.data.id,value:this.data.fieldValue||\"Off\",defaultValue:this.data.defaultFieldValue,exportValues:exportValues,editable:!this.data.readOnly,name:this.data.fieldName,rect:this.data.rect,hidden:this.data.hidden,actions:this.data.actions,page:this.data.pageIndex,strokeColor:this.data.borderColor,fillColor:this.data.backgroundColor,rotation:this.rotation,type:type}}get fallbackFontDict(){const dict=new Dict;dict.set(\"BaseFont\",Name.get(\"ZapfDingbats\"));dict.set(\"Type\",Name.get(\"FallbackType\"));dict.set(\"Subtype\",Name.get(\"FallbackType\"));dict.set(\"Encoding\",Name.get(\"ZapfDingbatsEncoding\"));return shadow(this,\"fallbackFontDict\",dict)}}class ChoiceWidgetAnnotation extends WidgetAnnotation{constructor(params){super(params);const{dict:dict,xref:xref}=params;this.indices=dict.getArray(\"I\");this.hasIndices=Array.isArray(this.indices)&&this.indices.length>0;this.data.options=[];const options=getInheritableProperty({dict:dict,key:\"Opt\"});if(Array.isArray(options)){for(let i=0,ii=options.length;i<ii;i++){const option=xref.fetchIfRef(options[i]);const isOptionArray=Array.isArray(option);this.data.options[i]={exportValue:this._decodeFormValue(isOptionArray?xref.fetchIfRef(option[0]):option),displayValue:this._decodeFormValue(isOptionArray?xref.fetchIfRef(option[1]):option)}}}if(!this.hasIndices){if(typeof this.data.fieldValue===\"string\"){this.data.fieldValue=[this.data.fieldValue]}else{this.data.fieldValue||=[]}}else{this.data.fieldValue=[];const ii=this.data.options.length;for(const i of this.indices){if(Number.isInteger(i)&&i>=0&&i<ii){this.data.fieldValue.push(this.data.options[i].exportValue)}}}if(this.data.options.length===0&&this.data.fieldValue.length>0){this.data.options=this.data.fieldValue.map((value=>({exportValue:value,displayValue:value})))}this.data.combo=this.hasFieldFlag(AnnotationFieldFlag.COMBO);this.data.multiSelect=this.hasFieldFlag(AnnotationFieldFlag.MULTISELECT);this._hasText=true}getFieldObject(){const type=this.data.combo?\"combobox\":\"listbox\";const value=this.data.fieldValue.length>0?this.data.fieldValue[0]:null;return{id:this.data.id,value:value,defaultValue:this.data.defaultFieldValue,editable:!this.data.readOnly,name:this.data.fieldName,rect:this.data.rect,numItems:this.data.fieldValue.length,multipleSelection:this.data.multiSelect,hidden:this.data.hidden,actions:this.data.actions,items:this.data.options,page:this.data.pageIndex,strokeColor:this.data.borderColor,fillColor:this.data.backgroundColor,rotation:this.rotation,type:type}}amendSavedDict(annotationStorage,dict){if(!this.hasIndices){return}let values=annotationStorage?.get(this.data.id)?.value;if(!Array.isArray(values)){values=[values]}const indices=[];const{options:options}=this.data;for(let i=0,j=0,ii=options.length;i<ii;i++){if(options[i].exportValue===values[j]){indices.push(i);j+=1}}dict.set(\"I\",indices)}async _getAppearance(evaluator,task,intent,annotationStorage){if(this.data.combo){return super._getAppearance(evaluator,task,intent,annotationStorage)}let exportedValue,rotation;const storageEntry=annotationStorage?.get(this.data.id);if(storageEntry){rotation=storageEntry.rotation;exportedValue=storageEntry.value}if(rotation===undefined&&exportedValue===undefined&&!this._needAppearances){return null}if(exportedValue===undefined){exportedValue=this.data.fieldValue}else if(!Array.isArray(exportedValue)){exportedValue=[exportedValue]}const defaultPadding=1;const defaultHPadding=2;let{width:totalWidth,height:totalHeight}=this;if(rotation===90||rotation===270){[totalWidth,totalHeight]=[totalHeight,totalWidth]}const lineCount=this.data.options.length;const valueIndices=[];for(let i=0;i<lineCount;i++){const{exportValue:exportValue}=this.data.options[i];if(exportedValue.includes(exportValue)){valueIndices.push(i)}}if(!this._defaultAppearance){this.data.defaultAppearanceData=parseDefaultAppearance(this._defaultAppearance=\"/Helvetica 0 Tf 0 g\")}const font=await WidgetAnnotation._getFontData(evaluator,task,this.data.defaultAppearanceData,this._fieldResources.mergedResources);let defaultAppearance;let{fontSize:fontSize}=this.data.defaultAppearanceData;if(!fontSize){const lineHeight=(totalHeight-defaultPadding)/lineCount;let lineWidth=-1;let value;for(const{displayValue:displayValue}of this.data.options){const width=this._getTextWidth(displayValue,font);if(width>lineWidth){lineWidth=width;value=displayValue}}[defaultAppearance,fontSize]=this._computeFontSize(lineHeight,totalWidth-2*defaultHPadding,value,font,-1)}else{defaultAppearance=this._defaultAppearance}const lineHeight=fontSize*LINE_FACTOR;const vPadding=(lineHeight-fontSize)/2;const numberOfVisibleLines=Math.floor(totalHeight/lineHeight);let firstIndex=0;if(valueIndices.length>0){const minIndex=Math.min(...valueIndices);const maxIndex=Math.max(...valueIndices);firstIndex=Math.max(0,maxIndex-numberOfVisibleLines+1);if(firstIndex>minIndex){firstIndex=minIndex}}const end=Math.min(firstIndex+numberOfVisibleLines+1,lineCount);const buf=[\"/Tx BMC q\",`1 1 ${totalWidth} ${totalHeight} re W n`];if(valueIndices.length){buf.push(\"0.600006 0.756866 0.854904 rg\");for(const index of valueIndices){if(firstIndex<=index&&index<end){buf.push(`1 ${totalHeight-(index-firstIndex+1)*lineHeight} ${totalWidth} ${lineHeight} re f`)}}}buf.push(\"BT\",defaultAppearance,`1 0 0 1 0 ${totalHeight} Tm`);const prevInfo={shift:0};for(let i=firstIndex;i<end;i++){const{displayValue:displayValue}=this.data.options[i];const vpadding=i===firstIndex?vPadding:0;buf.push(this._renderText(displayValue,font,fontSize,totalWidth,0,prevInfo,defaultHPadding,-lineHeight+vpadding))}buf.push(\"ET Q EMC\");return buf.join(\"\\n\")}}class SignatureWidgetAnnotation extends WidgetAnnotation{constructor(params){super(params);this.data.fieldValue=null;this.data.hasOwnCanvas=this.data.noRotate;this.data.noHTML=!this.data.hasOwnCanvas}getFieldObject(){return{id:this.data.id,value:null,page:this.data.pageIndex,type:\"signature\"}}}class TextAnnotation extends MarkupAnnotation{constructor(params){const DEFAULT_ICON_SIZE=22;super(params);this.data.noRotate=true;this.data.hasOwnCanvas=this.data.noRotate;this.data.noHTML=false;const{dict:dict}=params;this.data.annotationType=AnnotationType.TEXT;if(this.data.hasAppearance){this.data.name=\"NoIcon\"}else{this.data.rect[1]=this.data.rect[3]-DEFAULT_ICON_SIZE;this.data.rect[2]=this.data.rect[0]+DEFAULT_ICON_SIZE;this.data.name=dict.has(\"Name\")?dict.get(\"Name\").name:\"Note\"}if(dict.has(\"State\")){this.data.state=dict.get(\"State\")||null;this.data.stateModel=dict.get(\"StateModel\")||null}else{this.data.state=null;this.data.stateModel=null}}}class LinkAnnotation extends Annotation{constructor(params){super(params);const{dict:dict,annotationGlobals:annotationGlobals}=params;this.data.annotationType=AnnotationType.LINK;this.data.noHTML=false;const quadPoints=getQuadPoints(dict,this.rectangle);if(quadPoints){this.data.quadPoints=quadPoints}this.data.borderColor||=this.data.color;Catalog.parseDestDictionary({destDict:dict,resultObj:this.data,docBaseUrl:annotationGlobals.baseUrl,docAttachments:annotationGlobals.attachments})}}class PopupAnnotation extends Annotation{constructor(params){super(params);const{dict:dict}=params;this.data.annotationType=AnnotationType.POPUP;this.data.noHTML=false;if(this.width===0||this.height===0){this.data.rect=null}let parentItem=dict.get(\"Parent\");if(!parentItem){warn(\"Popup annotation has a missing or invalid parent annotation.\");return}this.data.parentRect=lookupNormalRect(parentItem.getArray(\"Rect\"),null);const rt=parentItem.get(\"RT\");if(isName(rt,AnnotationReplyType.GROUP)){parentItem=parentItem.get(\"IRT\")}if(!parentItem.has(\"M\")){this.data.modificationDate=null}else{this.setModificationDate(parentItem.get(\"M\"));this.data.modificationDate=this.modificationDate}if(!parentItem.has(\"C\")){this.data.color=null}else{this.setColor(parentItem.getArray(\"C\"));this.data.color=this.color}if(!this.viewable){const parentFlags=parentItem.get(\"F\");if(this._isViewable(parentFlags)){this.setFlags(parentFlags)}}this.setTitle(parentItem.get(\"T\"));this.data.titleObj=this._title;this.setContents(parentItem.get(\"Contents\"));this.data.contentsObj=this._contents;if(parentItem.has(\"RC\")){this.data.richText=XFAFactory.getRichTextAsHtml(parentItem.get(\"RC\"))}this.data.open=!!dict.get(\"Open\")}}class FreeTextAnnotation extends MarkupAnnotation{constructor(params){super(params);this.data.hasOwnCanvas=this.data.noRotate;this.data.isEditable=!this.data.noHTML;this.data.noHTML=false;const{annotationGlobals:annotationGlobals,evaluatorOptions:evaluatorOptions,xref:xref}=params;this.data.annotationType=AnnotationType.FREETEXT;this.setDefaultAppearance(params);this._hasAppearance=!!this.appearance;if(this._hasAppearance){const{fontColor:fontColor,fontSize:fontSize}=parseAppearanceStream(this.appearance,evaluatorOptions,xref,annotationGlobals.globalColorSpaceCache);this.data.defaultAppearanceData.fontColor=fontColor;this.data.defaultAppearanceData.fontSize=fontSize||10}else{this.data.defaultAppearanceData.fontSize||=10;const{fontColor:fontColor,fontSize:fontSize}=this.data.defaultAppearanceData;if(this._contents.str){this.data.textContent=this._contents.str.split(/\\r\\n?|\\n/).map((line=>line.trimEnd()));const{coords:coords,bbox:bbox,matrix:matrix}=FakeUnicodeFont.getFirstPositionInfo(this.rectangle,this.rotation,fontSize);this.data.textPosition=this._transformPoint(coords,bbox,matrix)}if(this._isOffscreenCanvasSupported){const strokeAlpha=params.dict.get(\"CA\");const fakeUnicodeFont=new FakeUnicodeFont(xref,\"sans-serif\");this.appearance=fakeUnicodeFont.createAppearance(this._contents.str,this.rectangle,this.rotation,fontSize,fontColor,strokeAlpha);this._streams.push(this.appearance)}else{warn(\"FreeTextAnnotation: OffscreenCanvas is not supported, annotation may not render correctly.\")}}}get hasTextContent(){return this._hasAppearance}static createNewDict(annotation,xref,{apRef:apRef,ap:ap}){const{color:color,fontSize:fontSize,oldAnnotation:oldAnnotation,rect:rect,rotation:rotation,user:user,value:value}=annotation;const freetext=oldAnnotation||new Dict(xref);freetext.set(\"Type\",Name.get(\"Annot\"));freetext.set(\"Subtype\",Name.get(\"FreeText\"));if(oldAnnotation){freetext.set(\"M\",`D:${getModificationDate()}`);freetext.delete(\"RC\")}else{freetext.set(\"CreationDate\",`D:${getModificationDate()}`)}freetext.set(\"Rect\",rect);const da=`/Helv ${fontSize} Tf ${getPdfColor(color,true)}`;freetext.set(\"DA\",da);freetext.set(\"Contents\",stringToAsciiOrUTF16BE(value));freetext.set(\"F\",4);freetext.set(\"Border\",[0,0,0]);freetext.set(\"Rotate\",rotation);if(user){freetext.set(\"T\",stringToAsciiOrUTF16BE(user))}if(apRef||ap){const n=new Dict(xref);freetext.set(\"AP\",n);if(apRef){n.set(\"N\",apRef)}else{n.set(\"N\",ap)}}return freetext}static async createNewAppearanceStream(annotation,xref,params){const{baseFontRef:baseFontRef,evaluator:evaluator,task:task}=params;const{color:color,fontSize:fontSize,rect:rect,rotation:rotation,value:value}=annotation;const resources=new Dict(xref);const font=new Dict(xref);if(baseFontRef){font.set(\"Helv\",baseFontRef)}else{const baseFont=new Dict(xref);baseFont.set(\"BaseFont\",Name.get(\"Helvetica\"));baseFont.set(\"Type\",Name.get(\"Font\"));baseFont.set(\"Subtype\",Name.get(\"Type1\"));baseFont.set(\"Encoding\",Name.get(\"WinAnsiEncoding\"));font.set(\"Helv\",baseFont)}resources.set(\"Font\",font);const helv=await WidgetAnnotation._getFontData(evaluator,task,{fontName:\"Helv\",fontSize:fontSize},resources);const[x1,y1,x2,y2]=rect;let w=x2-x1;let h=y2-y1;if(rotation%180!==0){[w,h]=[h,w]}const lines=value.split(\"\\n\");const scale=fontSize/1e3;let totalWidth=-Infinity;const encodedLines=[];for(let line of lines){const encoded=helv.encodeString(line);if(encoded.length>1){return null}line=encoded.join(\"\");encodedLines.push(line);let lineWidth=0;const glyphs=helv.charsToGlyphs(line);for(const glyph of glyphs){lineWidth+=glyph.width*scale}totalWidth=Math.max(totalWidth,lineWidth)}let hscale=1;if(totalWidth>w){hscale=w/totalWidth}let vscale=1;const lineHeight=LINE_FACTOR*fontSize;const lineAscent=(LINE_FACTOR-LINE_DESCENT_FACTOR)*fontSize;const totalHeight=lineHeight*lines.length;if(totalHeight>h){vscale=h/totalHeight}const fscale=Math.min(hscale,vscale);const newFontSize=fontSize*fscale;let firstPoint,clipBox,matrix;switch(rotation){case 0:matrix=[1,0,0,1];clipBox=[rect[0],rect[1],w,h];firstPoint=[rect[0],rect[3]-lineAscent];break;case 90:matrix=[0,1,-1,0];clipBox=[rect[1],-rect[2],w,h];firstPoint=[rect[1],-rect[0]-lineAscent];break;case 180:matrix=[-1,0,0,-1];clipBox=[-rect[2],-rect[3],w,h];firstPoint=[-rect[2],-rect[1]-lineAscent];break;case 270:matrix=[0,-1,1,0];clipBox=[-rect[3],rect[0],w,h];firstPoint=[-rect[3],rect[2]-lineAscent];break}const buffer=[\"q\",`${matrix.join(\" \")} 0 0 cm`,`${clipBox.join(\" \")} re W n`,`BT`,`${getPdfColor(color,true)}`,`0 Tc /Helv ${numberToString(newFontSize)} Tf`];buffer.push(`${firstPoint.join(\" \")} Td (${escapeString(encodedLines[0])}) Tj`);const vShift=numberToString(lineHeight);for(let i=1,ii=encodedLines.length;i<ii;i++){const line=encodedLines[i];buffer.push(`0 -${vShift} Td (${escapeString(line)}) Tj`)}buffer.push(\"ET\",\"Q\");const appearance=buffer.join(\"\\n\");const appearanceStreamDict=new Dict(xref);appearanceStreamDict.set(\"FormType\",1);appearanceStreamDict.set(\"Subtype\",Name.get(\"Form\"));appearanceStreamDict.set(\"Type\",Name.get(\"XObject\"));appearanceStreamDict.set(\"BBox\",rect);appearanceStreamDict.set(\"Resources\",resources);appearanceStreamDict.set(\"Matrix\",[1,0,0,1,-rect[0],-rect[1]]);const ap=new StringStream(appearance);ap.dict=appearanceStreamDict;return ap}}class LineAnnotation extends MarkupAnnotation{constructor(params){super(params);const{dict:dict,xref:xref}=params;this.data.annotationType=AnnotationType.LINE;this.data.hasOwnCanvas=this.data.noRotate;this.data.noHTML=false;const lineCoordinates=lookupRect(dict.getArray(\"L\"),[0,0,0,0]);this.data.lineCoordinates=Util.normalizeRect(lineCoordinates);this.setLineEndings(dict.getArray(\"LE\"));this.data.lineEndings=this.lineEndings;if(!this.appearance){const strokeColor=this.color?getPdfColorArray(this.color):[0,0,0];const strokeAlpha=dict.get(\"CA\");const interiorColor=getRgbColor(dict.getArray(\"IC\"),null);const fillColor=interiorColor?getPdfColorArray(interiorColor):null;const fillAlpha=fillColor?strokeAlpha:null;const borderWidth=this.borderStyle.width||1,borderAdjust=2*borderWidth;const bbox=[this.data.lineCoordinates[0]-borderAdjust,this.data.lineCoordinates[1]-borderAdjust,this.data.lineCoordinates[2]+borderAdjust,this.data.lineCoordinates[3]+borderAdjust];if(!Util.intersect(this.rectangle,bbox)){this.rectangle=bbox}this._setDefaultAppearance({xref:xref,extra:`${borderWidth} w`,strokeColor:strokeColor,fillColor:fillColor,strokeAlpha:strokeAlpha,fillAlpha:fillAlpha,pointsCallback:(buffer,points)=>{buffer.push(`${lineCoordinates[0]} ${lineCoordinates[1]} m`,`${lineCoordinates[2]} ${lineCoordinates[3]} l`,\"S\");return[points[0]-borderWidth,points[7]-borderWidth,points[2]+borderWidth,points[3]+borderWidth]}})}}}class SquareAnnotation extends MarkupAnnotation{constructor(params){super(params);const{dict:dict,xref:xref}=params;this.data.annotationType=AnnotationType.SQUARE;this.data.hasOwnCanvas=this.data.noRotate;this.data.noHTML=false;if(!this.appearance){const strokeColor=this.color?getPdfColorArray(this.color):[0,0,0];const strokeAlpha=dict.get(\"CA\");const interiorColor=getRgbColor(dict.getArray(\"IC\"),null);const fillColor=interiorColor?getPdfColorArray(interiorColor):null;const fillAlpha=fillColor?strokeAlpha:null;if(this.borderStyle.width===0&&!fillColor){return}this._setDefaultAppearance({xref:xref,extra:`${this.borderStyle.width} w`,strokeColor:strokeColor,fillColor:fillColor,strokeAlpha:strokeAlpha,fillAlpha:fillAlpha,pointsCallback:(buffer,points)=>{const x=points[4]+this.borderStyle.width/2;const y=points[5]+this.borderStyle.width/2;const width=points[6]-points[4]-this.borderStyle.width;const height=points[3]-points[7]-this.borderStyle.width;buffer.push(`${x} ${y} ${width} ${height} re`);if(fillColor){buffer.push(\"B\")}else{buffer.push(\"S\")}return[points[0],points[7],points[2],points[3]]}})}}}class CircleAnnotation extends MarkupAnnotation{constructor(params){super(params);const{dict:dict,xref:xref}=params;this.data.annotationType=AnnotationType.CIRCLE;if(!this.appearance){const strokeColor=this.color?getPdfColorArray(this.color):[0,0,0];const strokeAlpha=dict.get(\"CA\");const interiorColor=getRgbColor(dict.getArray(\"IC\"),null);const fillColor=interiorColor?getPdfColorArray(interiorColor):null;const fillAlpha=fillColor?strokeAlpha:null;if(this.borderStyle.width===0&&!fillColor){return}const controlPointsDistance=4/3*Math.tan(Math.PI/(2*4));this._setDefaultAppearance({xref:xref,extra:`${this.borderStyle.width} w`,strokeColor:strokeColor,fillColor:fillColor,strokeAlpha:strokeAlpha,fillAlpha:fillAlpha,pointsCallback:(buffer,points)=>{const x0=points[0]+this.borderStyle.width/2;const y0=points[1]-this.borderStyle.width/2;const x1=points[6]-this.borderStyle.width/2;const y1=points[7]+this.borderStyle.width/2;const xMid=x0+(x1-x0)/2;const yMid=y0+(y1-y0)/2;const xOffset=(x1-x0)/2*controlPointsDistance;const yOffset=(y1-y0)/2*controlPointsDistance;buffer.push(`${xMid} ${y1} m`,`${xMid+xOffset} ${y1} ${x1} ${yMid+yOffset} ${x1} ${yMid} c`,`${x1} ${yMid-yOffset} ${xMid+xOffset} ${y0} ${xMid} ${y0} c`,`${xMid-xOffset} ${y0} ${x0} ${yMid-yOffset} ${x0} ${yMid} c`,`${x0} ${yMid+yOffset} ${xMid-xOffset} ${y1} ${xMid} ${y1} c`,\"h\");if(fillColor){buffer.push(\"B\")}else{buffer.push(\"S\")}return[points[0],points[7],points[2],points[3]]}})}}}class PolylineAnnotation extends MarkupAnnotation{constructor(params){super(params);const{dict:dict,xref:xref}=params;this.data.annotationType=AnnotationType.POLYLINE;this.data.hasOwnCanvas=this.data.noRotate;this.data.noHTML=false;this.data.vertices=null;if(!(this instanceof PolygonAnnotation)){this.setLineEndings(dict.getArray(\"LE\"));this.data.lineEndings=this.lineEndings}const rawVertices=dict.getArray(\"Vertices\");if(!isNumberArray(rawVertices,null)){return}const vertices=this.data.vertices=Float32Array.from(rawVertices);if(!this.appearance){const strokeColor=this.color?getPdfColorArray(this.color):[0,0,0];const strokeAlpha=dict.get(\"CA\");const borderWidth=this.borderStyle.width||1,borderAdjust=2*borderWidth;const bbox=[Infinity,Infinity,-Infinity,-Infinity];for(let i=0,ii=vertices.length;i<ii;i+=2){Util.rectBoundingBox(vertices[i]-borderAdjust,vertices[i+1]-borderAdjust,vertices[i]+borderAdjust,vertices[i+1]+borderAdjust,bbox)}if(!Util.intersect(this.rectangle,bbox)){this.rectangle=bbox}this._setDefaultAppearance({xref:xref,extra:`${borderWidth} w`,strokeColor:strokeColor,strokeAlpha:strokeAlpha,pointsCallback:(buffer,points)=>{for(let i=0,ii=vertices.length;i<ii;i+=2){buffer.push(`${vertices[i]} ${vertices[i+1]} ${i===0?\"m\":\"l\"}`)}buffer.push(\"S\");return[points[0],points[7],points[2],points[3]]}})}}}class PolygonAnnotation extends PolylineAnnotation{constructor(params){super(params);this.data.annotationType=AnnotationType.POLYGON}}class CaretAnnotation extends MarkupAnnotation{constructor(params){super(params);this.data.annotationType=AnnotationType.CARET}}class InkAnnotation extends MarkupAnnotation{constructor(params){super(params);this.data.hasOwnCanvas=this.data.noRotate;this.data.noHTML=false;const{dict:dict,xref:xref}=params;this.data.annotationType=AnnotationType.INK;this.data.inkLists=[];this.data.isEditable=!this.data.noHTML;this.data.noHTML=false;this.data.opacity=dict.get(\"CA\")||1;const rawInkLists=dict.getArray(\"InkList\");if(!Array.isArray(rawInkLists)){return}for(let i=0,ii=rawInkLists.length;i<ii;++i){if(!Array.isArray(rawInkLists[i])){continue}const inkList=new Float32Array(rawInkLists[i].length);this.data.inkLists.push(inkList);for(let j=0,jj=rawInkLists[i].length;j<jj;j+=2){const x=xref.fetchIfRef(rawInkLists[i][j]),y=xref.fetchIfRef(rawInkLists[i][j+1]);if(typeof x===\"number\"&&typeof y===\"number\"){inkList[j]=x;inkList[j+1]=y}}}if(!this.appearance){const strokeColor=this.color?getPdfColorArray(this.color):[0,0,0];const strokeAlpha=dict.get(\"CA\");const borderWidth=this.borderStyle.width||1,borderAdjust=2*borderWidth;const bbox=[Infinity,Infinity,-Infinity,-Infinity];for(const inkList of this.data.inkLists){for(let i=0,ii=inkList.length;i<ii;i+=2){Util.rectBoundingBox(inkList[i]-borderAdjust,inkList[i+1]-borderAdjust,inkList[i]+borderAdjust,inkList[i+1]+borderAdjust,bbox)}}if(!Util.intersect(this.rectangle,bbox)){this.rectangle=bbox}this._setDefaultAppearance({xref:xref,extra:`${borderWidth} w`,strokeColor:strokeColor,strokeAlpha:strokeAlpha,pointsCallback:(buffer,points)=>{for(const inkList of this.data.inkLists){for(let i=0,ii=inkList.length;i<ii;i+=2){buffer.push(`${inkList[i]} ${inkList[i+1]} ${i===0?\"m\":\"l\"}`)}buffer.push(\"S\")}return[points[0],points[7],points[2],points[3]]}})}}static createNewDict(annotation,xref,{apRef:apRef,ap:ap}){const{oldAnnotation:oldAnnotation,color:color,opacity:opacity,paths:paths,outlines:outlines,rect:rect,rotation:rotation,thickness:thickness,user:user}=annotation;const ink=oldAnnotation||new Dict(xref);ink.set(\"Type\",Name.get(\"Annot\"));ink.set(\"Subtype\",Name.get(\"Ink\"));ink.set(oldAnnotation?\"M\":\"CreationDate\",`D:${getModificationDate()}`);ink.set(\"Rect\",rect);ink.set(\"InkList\",outlines?.points||paths.points);ink.set(\"F\",4);ink.set(\"Rotate\",rotation);if(user){ink.set(\"T\",stringToAsciiOrUTF16BE(user))}if(outlines){ink.set(\"IT\",Name.get(\"InkHighlight\"))}const bs=new Dict(xref);ink.set(\"BS\",bs);bs.set(\"W\",thickness);ink.set(\"C\",getPdfColorArray(color));ink.set(\"CA\",opacity);const n=new Dict(xref);ink.set(\"AP\",n);if(apRef){n.set(\"N\",apRef)}else{n.set(\"N\",ap)}return ink}static async createNewAppearanceStream(annotation,xref,params){if(annotation.outlines){return this.createNewAppearanceStreamForHighlight(annotation,xref,params)}const{color:color,rect:rect,paths:paths,thickness:thickness,opacity:opacity}=annotation;const appearanceBuffer=[`${thickness} w 1 J 1 j`,`${getPdfColor(color,false)}`];if(opacity!==1){appearanceBuffer.push(\"/R0 gs\")}for(const outline of paths.lines){appearanceBuffer.push(`${numberToString(outline[4])} ${numberToString(outline[5])} m`);for(let i=6,ii=outline.length;i<ii;i+=6){if(isNaN(outline[i])){appearanceBuffer.push(`${numberToString(outline[i+4])} ${numberToString(outline[i+5])} l`)}else{const[c1x,c1y,c2x,c2y,x,y]=outline.slice(i,i+6);appearanceBuffer.push([c1x,c1y,c2x,c2y,x,y].map(numberToString).join(\" \")+\" c\")}}if(outline.length===6){appearanceBuffer.push(`${numberToString(outline[4])} ${numberToString(outline[5])} l`)}}appearanceBuffer.push(\"S\");const appearance=appearanceBuffer.join(\"\\n\");const appearanceStreamDict=new Dict(xref);appearanceStreamDict.set(\"FormType\",1);appearanceStreamDict.set(\"Subtype\",Name.get(\"Form\"));appearanceStreamDict.set(\"Type\",Name.get(\"XObject\"));appearanceStreamDict.set(\"BBox\",rect);appearanceStreamDict.set(\"Length\",appearance.length);if(opacity!==1){const resources=new Dict(xref);const extGState=new Dict(xref);const r0=new Dict(xref);r0.set(\"CA\",opacity);r0.set(\"Type\",Name.get(\"ExtGState\"));extGState.set(\"R0\",r0);resources.set(\"ExtGState\",extGState);appearanceStreamDict.set(\"Resources\",resources)}const ap=new StringStream(appearance);ap.dict=appearanceStreamDict;return ap}static async createNewAppearanceStreamForHighlight(annotation,xref,params){const{color:color,rect:rect,outlines:{outline:outline},opacity:opacity}=annotation;const appearanceBuffer=[`${getPdfColor(color,true)}`,\"/R0 gs\"];appearanceBuffer.push(`${numberToString(outline[4])} ${numberToString(outline[5])} m`);for(let i=6,ii=outline.length;i<ii;i+=6){if(isNaN(outline[i])){appearanceBuffer.push(`${numberToString(outline[i+4])} ${numberToString(outline[i+5])} l`)}else{const[c1x,c1y,c2x,c2y,x,y]=outline.slice(i,i+6);appearanceBuffer.push([c1x,c1y,c2x,c2y,x,y].map(numberToString).join(\" \")+\" c\")}}appearanceBuffer.push(\"h f\");const appearance=appearanceBuffer.join(\"\\n\");const appearanceStreamDict=new Dict(xref);appearanceStreamDict.set(\"FormType\",1);appearanceStreamDict.set(\"Subtype\",Name.get(\"Form\"));appearanceStreamDict.set(\"Type\",Name.get(\"XObject\"));appearanceStreamDict.set(\"BBox\",rect);appearanceStreamDict.set(\"Length\",appearance.length);const resources=new Dict(xref);const extGState=new Dict(xref);resources.set(\"ExtGState\",extGState);appearanceStreamDict.set(\"Resources\",resources);const r0=new Dict(xref);extGState.set(\"R0\",r0);r0.set(\"BM\",Name.get(\"Multiply\"));if(opacity!==1){r0.set(\"ca\",opacity);r0.set(\"Type\",Name.get(\"ExtGState\"))}const ap=new StringStream(appearance);ap.dict=appearanceStreamDict;return ap}}class HighlightAnnotation extends MarkupAnnotation{constructor(params){super(params);const{dict:dict,xref:xref}=params;this.data.annotationType=AnnotationType.HIGHLIGHT;this.data.isEditable=!this.data.noHTML;this.data.noHTML=false;this.data.opacity=dict.get(\"CA\")||1;const quadPoints=this.data.quadPoints=getQuadPoints(dict,null);if(quadPoints){const resources=this.appearance?.dict.get(\"Resources\");if(!this.appearance||!resources?.has(\"ExtGState\")){if(this.appearance){warn(\"HighlightAnnotation - ignoring built-in appearance stream.\")}const fillColor=this.color?getPdfColorArray(this.color):[1,1,0];const fillAlpha=dict.get(\"CA\");this._setDefaultAppearance({xref:xref,fillColor:fillColor,blendMode:\"Multiply\",fillAlpha:fillAlpha,pointsCallback:(buffer,points)=>{buffer.push(`${points[0]} ${points[1]} m`,`${points[2]} ${points[3]} l`,`${points[6]} ${points[7]} l`,`${points[4]} ${points[5]} l`,\"f\");return[points[0],points[7],points[2],points[3]]}})}}else{this.data.popupRef=null}}static createNewDict(annotation,xref,{apRef:apRef,ap:ap}){const{color:color,oldAnnotation:oldAnnotation,opacity:opacity,rect:rect,rotation:rotation,user:user,quadPoints:quadPoints}=annotation;const highlight=oldAnnotation||new Dict(xref);highlight.set(\"Type\",Name.get(\"Annot\"));highlight.set(\"Subtype\",Name.get(\"Highlight\"));highlight.set(oldAnnotation?\"M\":\"CreationDate\",`D:${getModificationDate()}`);highlight.set(\"CreationDate\",`D:${getModificationDate()}`);highlight.set(\"Rect\",rect);highlight.set(\"F\",4);highlight.set(\"Border\",[0,0,0]);highlight.set(\"Rotate\",rotation);highlight.set(\"QuadPoints\",quadPoints);highlight.set(\"C\",getPdfColorArray(color));highlight.set(\"CA\",opacity);if(user){highlight.set(\"T\",stringToAsciiOrUTF16BE(user))}if(apRef||ap){const n=new Dict(xref);highlight.set(\"AP\",n);n.set(\"N\",apRef||ap)}return highlight}static async createNewAppearanceStream(annotation,xref,params){const{color:color,rect:rect,outlines:outlines,opacity:opacity}=annotation;const appearanceBuffer=[`${getPdfColor(color,true)}`,\"/R0 gs\"];const buffer=[];for(const outline of outlines){buffer.length=0;buffer.push(`${numberToString(outline[0])} ${numberToString(outline[1])} m`);for(let i=2,ii=outline.length;i<ii;i+=2){buffer.push(`${numberToString(outline[i])} ${numberToString(outline[i+1])} l`)}buffer.push(\"h\");appearanceBuffer.push(buffer.join(\"\\n\"))}appearanceBuffer.push(\"f*\");const appearance=appearanceBuffer.join(\"\\n\");const appearanceStreamDict=new Dict(xref);appearanceStreamDict.set(\"FormType\",1);appearanceStreamDict.set(\"Subtype\",Name.get(\"Form\"));appearanceStreamDict.set(\"Type\",Name.get(\"XObject\"));appearanceStreamDict.set(\"BBox\",rect);appearanceStreamDict.set(\"Length\",appearance.length);const resources=new Dict(xref);const extGState=new Dict(xref);resources.set(\"ExtGState\",extGState);appearanceStreamDict.set(\"Resources\",resources);const r0=new Dict(xref);extGState.set(\"R0\",r0);r0.set(\"BM\",Name.get(\"Multiply\"));if(opacity!==1){r0.set(\"ca\",opacity);r0.set(\"Type\",Name.get(\"ExtGState\"))}const ap=new StringStream(appearance);ap.dict=appearanceStreamDict;return ap}}class UnderlineAnnotation extends MarkupAnnotation{constructor(params){super(params);const{dict:dict,xref:xref}=params;this.data.annotationType=AnnotationType.UNDERLINE;const quadPoints=this.data.quadPoints=getQuadPoints(dict,null);if(quadPoints){if(!this.appearance){const strokeColor=this.color?getPdfColorArray(this.color):[0,0,0];const strokeAlpha=dict.get(\"CA\");this._setDefaultAppearance({xref:xref,extra:\"[] 0 d 0.571 w\",strokeColor:strokeColor,strokeAlpha:strokeAlpha,pointsCallback:(buffer,points)=>{buffer.push(`${points[4]} ${points[5]+1.3} m`,`${points[6]} ${points[7]+1.3} l`,\"S\");return[points[0],points[7],points[2],points[3]]}})}}else{this.data.popupRef=null}}}class SquigglyAnnotation extends MarkupAnnotation{constructor(params){super(params);const{dict:dict,xref:xref}=params;this.data.annotationType=AnnotationType.SQUIGGLY;const quadPoints=this.data.quadPoints=getQuadPoints(dict,null);if(quadPoints){if(!this.appearance){const strokeColor=this.color?getPdfColorArray(this.color):[0,0,0];const strokeAlpha=dict.get(\"CA\");this._setDefaultAppearance({xref:xref,extra:\"[] 0 d 1 w\",strokeColor:strokeColor,strokeAlpha:strokeAlpha,pointsCallback:(buffer,points)=>{const dy=(points[1]-points[5])/6;let shift=dy;let x=points[4];const y=points[5];const xEnd=points[6];buffer.push(`${x} ${y+shift} m`);do{x+=2;shift=shift===0?dy:0;buffer.push(`${x} ${y+shift} l`)}while(x<xEnd);buffer.push(\"S\");return[points[4],y-2*dy,xEnd,y+2*dy]}})}}else{this.data.popupRef=null}}}class StrikeOutAnnotation extends MarkupAnnotation{constructor(params){super(params);const{dict:dict,xref:xref}=params;this.data.annotationType=AnnotationType.STRIKEOUT;const quadPoints=this.data.quadPoints=getQuadPoints(dict,null);if(quadPoints){if(!this.appearance){const strokeColor=this.color?getPdfColorArray(this.color):[0,0,0];const strokeAlpha=dict.get(\"CA\");this._setDefaultAppearance({xref:xref,extra:\"[] 0 d 1 w\",strokeColor:strokeColor,strokeAlpha:strokeAlpha,pointsCallback:(buffer,points)=>{buffer.push(`${(points[0]+points[4])/2} `+`${(points[1]+points[5])/2} m`,`${(points[2]+points[6])/2} `+`${(points[3]+points[7])/2} l`,\"S\");return[points[0],points[7],points[2],points[3]]}})}}else{this.data.popupRef=null}}}class StampAnnotation extends MarkupAnnotation{#savedHasOwnCanvas=null;constructor(params){super(params);this.data.annotationType=AnnotationType.STAMP;this.data.hasOwnCanvas=this.data.noRotate;this.data.isEditable=!this.data.noHTML;this.data.noHTML=false}mustBeViewedWhenEditing(isEditing,modifiedIds=null){if(isEditing){if(!this.data.isEditable){return true}this.#savedHasOwnCanvas??=this.data.hasOwnCanvas;this.data.hasOwnCanvas=true;return true}if(this.#savedHasOwnCanvas!==null){this.data.hasOwnCanvas=this.#savedHasOwnCanvas;this.#savedHasOwnCanvas=null}return!modifiedIds?.has(this.data.id)}static async createImage(bitmap,xref){const{width:width,height:height}=bitmap;const canvas=new OffscreenCanvas(width,height);const ctx=canvas.getContext(\"2d\",{alpha:true});ctx.drawImage(bitmap,0,0);const data=ctx.getImageData(0,0,width,height).data;const buf32=new Uint32Array(data.buffer);const hasAlpha=buf32.some(FeatureTest.isLittleEndian?x=>x>>>24!==255:x=>(x&255)!==255);if(hasAlpha){ctx.fillStyle=\"white\";ctx.fillRect(0,0,width,height);ctx.drawImage(bitmap,0,0)}const jpegBufferPromise=canvas.convertToBlob({type:\"image/jpeg\",quality:1}).then((blob=>blob.arrayBuffer()));const xobjectName=Name.get(\"XObject\");const imageName=Name.get(\"Image\");const image=new Dict(xref);image.set(\"Type\",xobjectName);image.set(\"Subtype\",imageName);image.set(\"BitsPerComponent\",8);image.set(\"ColorSpace\",Name.get(\"DeviceRGB\"));image.set(\"Filter\",Name.get(\"DCTDecode\"));image.set(\"BBox\",[0,0,width,height]);image.set(\"Width\",width);image.set(\"Height\",height);let smaskStream=null;if(hasAlpha){const alphaBuffer=new Uint8Array(buf32.length);if(FeatureTest.isLittleEndian){for(let i=0,ii=buf32.length;i<ii;i++){alphaBuffer[i]=buf32[i]>>>24}}else{for(let i=0,ii=buf32.length;i<ii;i++){alphaBuffer[i]=buf32[i]&255}}const smask=new Dict(xref);smask.set(\"Type\",xobjectName);smask.set(\"Subtype\",imageName);smask.set(\"BitsPerComponent\",8);smask.set(\"ColorSpace\",Name.get(\"DeviceGray\"));smask.set(\"Width\",width);smask.set(\"Height\",height);smaskStream=new Stream(alphaBuffer,0,0,smask)}const imageStream=new Stream(await jpegBufferPromise,0,0,image);return{imageStream:imageStream,smaskStream:smaskStream,width:width,height:height}}static createNewDict(annotation,xref,{apRef:apRef,ap:ap}){const{oldAnnotation:oldAnnotation,rect:rect,rotation:rotation,user:user}=annotation;const stamp=oldAnnotation||new Dict(xref);stamp.set(\"Type\",Name.get(\"Annot\"));stamp.set(\"Subtype\",Name.get(\"Stamp\"));stamp.set(oldAnnotation?\"M\":\"CreationDate\",`D:${getModificationDate()}`);stamp.set(\"Rect\",rect);stamp.set(\"F\",4);stamp.set(\"Border\",[0,0,0]);stamp.set(\"Rotate\",rotation);if(user){stamp.set(\"T\",stringToAsciiOrUTF16BE(user))}if(apRef||ap){const n=new Dict(xref);stamp.set(\"AP\",n);if(apRef){n.set(\"N\",apRef)}else{n.set(\"N\",ap)}}return stamp}static async#createNewAppearanceStreamForDrawing(annotation,xref){const{areContours:areContours,color:color,rect:rect,lines:lines,thickness:thickness}=annotation;const appearanceBuffer=[`${thickness} w 1 J 1 j`,`${getPdfColor(color,areContours)}`];for(const line of lines){appearanceBuffer.push(`${numberToString(line[4])} ${numberToString(line[5])} m`);for(let i=6,ii=line.length;i<ii;i+=6){if(isNaN(line[i])){appearanceBuffer.push(`${numberToString(line[i+4])} ${numberToString(line[i+5])} l`)}else{const[c1x,c1y,c2x,c2y,x,y]=line.slice(i,i+6);appearanceBuffer.push([c1x,c1y,c2x,c2y,x,y].map(numberToString).join(\" \")+\" c\")}}if(line.length===6){appearanceBuffer.push(`${numberToString(line[4])} ${numberToString(line[5])} l`)}}appearanceBuffer.push(areContours?\"F\":\"S\");const appearance=appearanceBuffer.join(\"\\n\");const appearanceStreamDict=new Dict(xref);appearanceStreamDict.set(\"FormType\",1);appearanceStreamDict.set(\"Subtype\",Name.get(\"Form\"));appearanceStreamDict.set(\"Type\",Name.get(\"XObject\"));appearanceStreamDict.set(\"BBox\",rect);appearanceStreamDict.set(\"Length\",appearance.length);const ap=new StringStream(appearance);ap.dict=appearanceStreamDict;return ap}static async createNewAppearanceStream(annotation,xref,params){if(annotation.oldAnnotation){return null}if(annotation.isSignature){return this.#createNewAppearanceStreamForDrawing(annotation,xref)}const{rotation:rotation}=annotation;const{imageRef:imageRef,width:width,height:height}=params.image;const resources=new Dict(xref);const xobject=new Dict(xref);resources.set(\"XObject\",xobject);xobject.set(\"Im0\",imageRef);const appearance=`q ${width} 0 0 ${height} 0 0 cm /Im0 Do Q`;const appearanceStreamDict=new Dict(xref);appearanceStreamDict.set(\"FormType\",1);appearanceStreamDict.set(\"Subtype\",Name.get(\"Form\"));appearanceStreamDict.set(\"Type\",Name.get(\"XObject\"));appearanceStreamDict.set(\"BBox\",[0,0,width,height]);appearanceStreamDict.set(\"Resources\",resources);if(rotation){const matrix=getRotationMatrix(rotation,width,height);appearanceStreamDict.set(\"Matrix\",matrix)}const ap=new StringStream(appearance);ap.dict=appearanceStreamDict;return ap}}class FileAttachmentAnnotation extends MarkupAnnotation{constructor(params){super(params);const{dict:dict,xref:xref}=params;const file=new FileSpec(dict.get(\"FS\"),xref);this.data.annotationType=AnnotationType.FILEATTACHMENT;this.data.hasOwnCanvas=this.data.noRotate;this.data.noHTML=false;this.data.file=file.serializable;const name=dict.get(\"Name\");this.data.name=name instanceof Name?stringToPDFString(name.name):\"PushPin\";const fillAlpha=dict.get(\"ca\");this.data.fillAlpha=typeof fillAlpha===\"number\"&&fillAlpha>=0&&fillAlpha<=1?fillAlpha:null}}const PARAMS={get r(){return shadow(this,\"r\",new Uint8Array([7,12,17,22,7,12,17,22,7,12,17,22,7,12,17,22,5,9,14,20,5,9,14,20,5,9,14,20,5,9,14,20,4,11,16,23,4,11,16,23,4,11,16,23,4,11,16,23,6,10,15,21,6,10,15,21,6,10,15,21,6,10,15,21]))},get k(){return shadow(this,\"k\",new Int32Array([-680876936,-389564586,606105819,-1044525330,-176418897,1200080426,-1473231341,-45705983,1770035416,-1958414417,-42063,-1990404162,1804603682,-40341101,-1502002290,1236535329,-165796510,-1069501632,643717713,-373897302,-701558691,38016083,-660478335,-405537848,568446438,-1019803690,-187363961,1163531501,-1444681467,-51403784,1735328473,-1926607734,-378558,-2022574463,1839030562,-35309556,-1530992060,1272893353,-155497632,-1094730640,681279174,-358537222,-722521979,76029189,-640364487,-421815835,530742520,-995338651,-198630844,1126891415,-1416354905,-57434055,1700485571,-1894986606,-1051523,-2054922799,1873313359,-30611744,-1560198380,1309151649,-145523070,-1120210379,718787259,-343485551]))}};function calculateMD5(data,offset,length){let h0=1732584193,h1=-271733879,h2=-1732584194,h3=271733878;const paddedLength=length+72&~63;const padded=new Uint8Array(paddedLength);let i,j;for(i=0;i<length;++i){padded[i]=data[offset++]}padded[i++]=128;const n=paddedLength-8;if(i<n){i=n}padded[i++]=length<<3&255;padded[i++]=length>>5&255;padded[i++]=length>>13&255;padded[i++]=length>>21&255;padded[i++]=length>>>29&255;i+=3;const w=new Int32Array(16);const{k:k,r:r}=PARAMS;for(i=0;i<paddedLength;){for(j=0;j<16;++j,i+=4){w[j]=padded[i]|padded[i+1]<<8|padded[i+2]<<16|padded[i+3]<<24}let a=h0,b=h1,c=h2,d=h3,f,g;for(j=0;j<64;++j){if(j<16){f=b&c|~b&d;g=j}else if(j<32){f=d&b|~d&c;g=5*j+1&15}else if(j<48){f=b^c^d;g=3*j+5&15}else{f=c^(b|~d);g=7*j&15}const tmp=d,rotateArg=a+f+k[j]+w[g]|0,rotate=r[j];d=c;c=b;b=b+(rotateArg<<rotate|rotateArg>>>32-rotate)|0;a=tmp}h0=h0+a|0;h1=h1+b|0;h2=h2+c|0;h3=h3+d|0}return new Uint8Array([h0&255,h0>>8&255,h0>>16&255,h0>>>24&255,h1&255,h1>>8&255,h1>>16&255,h1>>>24&255,h2&255,h2>>8&255,h2>>16&255,h2>>>24&255,h3&255,h3>>8&255,h3>>16&255,h3>>>24&255])}function decodeString(str){try{return stringToUTF8String(str)}catch(ex){warn(`UTF-8 decoding failed: \"${ex}\".`);return str}}class DatasetXMLParser extends SimpleXMLParser{constructor(options){super(options);this.node=null}onEndElement(name){const node=super.onEndElement(name);if(node&&name===\"xfa:datasets\"){this.node=node;throw new Error(\"Aborting DatasetXMLParser.\")}}}class DatasetReader{constructor(data){if(data.datasets){this.node=new SimpleXMLParser({hasAttributes:true}).parseFromString(data.datasets).documentElement}else{const parser=new DatasetXMLParser({hasAttributes:true});try{parser.parseFromString(data[\"xdp:xdp\"])}catch{}this.node=parser.node}}getValue(path){if(!this.node||!path){return\"\"}const node=this.node.searchNode(parseXFAPath(path),0);if(!node){return\"\"}const first=node.firstChild;if(first?.nodeName===\"value\"){return node.children.map((child=>decodeString(child.textContent)))}return decodeString(node.textContent)}}class Word64{constructor(highInteger,lowInteger){this.high=highInteger|0;this.low=lowInteger|0}and(word){this.high&=word.high;this.low&=word.low}xor(word){this.high^=word.high;this.low^=word.low}shiftRight(places){if(places>=32){this.low=this.high>>>places-32|0;this.high=0}else{this.low=this.low>>>places|this.high<<32-places;this.high=this.high>>>places|0}}rotateRight(places){let low,high;if(places&32){high=this.low;low=this.high}else{low=this.low;high=this.high}places&=31;this.low=low>>>places|high<<32-places;this.high=high>>>places|low<<32-places}not(){this.high=~this.high;this.low=~this.low}add(word){const lowAdd=(this.low>>>0)+(word.low>>>0);let highAdd=(this.high>>>0)+(word.high>>>0);if(lowAdd>4294967295){highAdd+=1}this.low=lowAdd|0;this.high=highAdd|0}copyTo(bytes,offset){bytes[offset]=this.high>>>24&255;bytes[offset+1]=this.high>>16&255;bytes[offset+2]=this.high>>8&255;bytes[offset+3]=this.high&255;bytes[offset+4]=this.low>>>24&255;bytes[offset+5]=this.low>>16&255;bytes[offset+6]=this.low>>8&255;bytes[offset+7]=this.low&255}assign(word){this.high=word.high;this.low=word.low}}const calculate_sha_other_PARAMS={get k(){return shadow(this,\"k\",[new Word64(1116352408,3609767458),new Word64(1899447441,602891725),new Word64(3049323471,3964484399),new Word64(3921009573,2173295548),new Word64(961987163,4081628472),new Word64(1508970993,3053834265),new Word64(2453635748,2937671579),new Word64(2870763221,3664609560),new Word64(3624381080,2734883394),new Word64(310598401,1164996542),new Word64(607225278,1323610764),new Word64(1426881987,3590304994),new Word64(1925078388,4068182383),new Word64(2162078206,991336113),new Word64(2614888103,633803317),new Word64(3248222580,3479774868),new Word64(3835390401,2666613458),new Word64(4022224774,944711139),new Word64(264347078,2341262773),new Word64(604807628,2007800933),new Word64(770255983,1495990901),new Word64(1249150122,1856431235),new Word64(1555081692,3175218132),new Word64(1996064986,2198950837),new Word64(2554220882,3999719339),new Word64(2821834349,766784016),new Word64(2952996808,2566594879),new Word64(3210313671,3203337956),new Word64(3336571891,1034457026),new Word64(3584528711,2466948901),new Word64(113926993,3758326383),new Word64(338241895,168717936),new Word64(666307205,1188179964),new Word64(773529912,1546045734),new Word64(1294757372,1522805485),new Word64(1396182291,2643833823),new Word64(1695183700,2343527390),new Word64(1986661051,1014477480),new Word64(2177026350,1206759142),new Word64(2456956037,344077627),new Word64(2730485921,1290863460),new Word64(2820302411,3158454273),new Word64(3259730800,3505952657),new Word64(3345764771,106217008),new Word64(3516065817,3606008344),new Word64(3600352804,1432725776),new Word64(4094571909,1467031594),new Word64(275423344,851169720),new Word64(430227734,3100823752),new Word64(506948616,1363258195),new Word64(659060556,3750685593),new Word64(883997877,3785050280),new Word64(958139571,3318307427),new Word64(1322822218,3812723403),new Word64(1537002063,2003034995),new Word64(1747873779,3602036899),new Word64(1955562222,1575990012),new Word64(2024104815,1125592928),new Word64(2227730452,2716904306),new Word64(2361852424,442776044),new Word64(2428436474,593698344),new Word64(2756734187,3733110249),new Word64(3204031479,2999351573),new Word64(3329325298,3815920427),new Word64(3391569614,3928383900),new Word64(3515267271,566280711),new Word64(3940187606,3454069534),new Word64(4118630271,4000239992),new Word64(116418474,1914138554),new Word64(174292421,2731055270),new Word64(289380356,3203993006),new Word64(460393269,320620315),new Word64(685471733,587496836),new Word64(852142971,1086792851),new Word64(1017036298,365543100),new Word64(1126000580,2618297676),new Word64(1288033470,3409855158),new Word64(1501505948,4234509866),new Word64(1607167915,987167468),new Word64(1816402316,1246189591)])}};function ch(result,x,y,z,tmp){result.assign(x);result.and(y);tmp.assign(x);tmp.not();tmp.and(z);result.xor(tmp)}function maj(result,x,y,z,tmp){result.assign(x);result.and(y);tmp.assign(x);tmp.and(z);result.xor(tmp);tmp.assign(y);tmp.and(z);result.xor(tmp)}function sigma(result,x,tmp){result.assign(x);result.rotateRight(28);tmp.assign(x);tmp.rotateRight(34);result.xor(tmp);tmp.assign(x);tmp.rotateRight(39);result.xor(tmp)}function sigmaPrime(result,x,tmp){result.assign(x);result.rotateRight(14);tmp.assign(x);tmp.rotateRight(18);result.xor(tmp);tmp.assign(x);tmp.rotateRight(41);result.xor(tmp)}function littleSigma(result,x,tmp){result.assign(x);result.rotateRight(1);tmp.assign(x);tmp.rotateRight(8);result.xor(tmp);tmp.assign(x);tmp.shiftRight(7);result.xor(tmp)}function littleSigmaPrime(result,x,tmp){result.assign(x);result.rotateRight(19);tmp.assign(x);tmp.rotateRight(61);result.xor(tmp);tmp.assign(x);tmp.shiftRight(6);result.xor(tmp)}function calculateSHA512(data,offset,length,mode384=false){let h0,h1,h2,h3,h4,h5,h6,h7;if(!mode384){h0=new Word64(1779033703,4089235720);h1=new Word64(3144134277,2227873595);h2=new Word64(1013904242,4271175723);h3=new Word64(2773480762,1595750129);h4=new Word64(1359893119,2917565137);h5=new Word64(2600822924,725511199);h6=new Word64(528734635,4215389547);h7=new Word64(1541459225,327033209)}else{h0=new Word64(3418070365,3238371032);h1=new Word64(1654270250,914150663);h2=new Word64(2438529370,812702999);h3=new Word64(355462360,4144912697);h4=new Word64(1731405415,4290775857);h5=new Word64(2394180231,1750603025);h6=new Word64(3675008525,1694076839);h7=new Word64(1203062813,3204075428)}const paddedLength=Math.ceil((length+17)/128)*128;const padded=new Uint8Array(paddedLength);let i,j;for(i=0;i<length;++i){padded[i]=data[offset++]}padded[i++]=128;const n=paddedLength-16;if(i<n){i=n}i+=11;padded[i++]=length>>>29&255;padded[i++]=length>>21&255;padded[i++]=length>>13&255;padded[i++]=length>>5&255;padded[i++]=length<<3&255;const w=new Array(80);for(i=0;i<80;i++){w[i]=new Word64(0,0)}const{k:k}=calculate_sha_other_PARAMS;let a=new Word64(0,0),b=new Word64(0,0),c=new Word64(0,0);let d=new Word64(0,0),e=new Word64(0,0),f=new Word64(0,0);let g=new Word64(0,0),h=new Word64(0,0);const t1=new Word64(0,0),t2=new Word64(0,0);const tmp1=new Word64(0,0),tmp2=new Word64(0,0);let tmp3;for(i=0;i<paddedLength;){for(j=0;j<16;++j){w[j].high=padded[i]<<24|padded[i+1]<<16|padded[i+2]<<8|padded[i+3];w[j].low=padded[i+4]<<24|padded[i+5]<<16|padded[i+6]<<8|padded[i+7];i+=8}for(j=16;j<80;++j){tmp3=w[j];littleSigmaPrime(tmp3,w[j-2],tmp2);tmp3.add(w[j-7]);littleSigma(tmp1,w[j-15],tmp2);tmp3.add(tmp1);tmp3.add(w[j-16])}a.assign(h0);b.assign(h1);c.assign(h2);d.assign(h3);e.assign(h4);f.assign(h5);g.assign(h6);h.assign(h7);for(j=0;j<80;++j){t1.assign(h);sigmaPrime(tmp1,e,tmp2);t1.add(tmp1);ch(tmp1,e,f,g,tmp2);t1.add(tmp1);t1.add(k[j]);t1.add(w[j]);sigma(t2,a,tmp2);maj(tmp1,a,b,c,tmp2);t2.add(tmp1);tmp3=h;h=g;g=f;f=e;d.add(t1);e=d;d=c;c=b;b=a;tmp3.assign(t1);tmp3.add(t2);a=tmp3}h0.add(a);h1.add(b);h2.add(c);h3.add(d);h4.add(e);h5.add(f);h6.add(g);h7.add(h)}let result;if(!mode384){result=new Uint8Array(64);h0.copyTo(result,0);h1.copyTo(result,8);h2.copyTo(result,16);h3.copyTo(result,24);h4.copyTo(result,32);h5.copyTo(result,40);h6.copyTo(result,48);h7.copyTo(result,56)}else{result=new Uint8Array(48);h0.copyTo(result,0);h1.copyTo(result,8);h2.copyTo(result,16);h3.copyTo(result,24);h4.copyTo(result,32);h5.copyTo(result,40)}return result}function calculateSHA384(data,offset,length){return calculateSHA512(data,offset,length,true)}const calculate_sha256_PARAMS={get k(){return shadow(this,\"k\",[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298])}};function rotr(x,n){return x>>>n|x<<32-n}function calculate_sha256_ch(x,y,z){return x&y^~x&z}function calculate_sha256_maj(x,y,z){return x&y^x&z^y&z}function calculate_sha256_sigma(x){return rotr(x,2)^rotr(x,13)^rotr(x,22)}function calculate_sha256_sigmaPrime(x){return rotr(x,6)^rotr(x,11)^rotr(x,25)}function calculate_sha256_littleSigma(x){return rotr(x,7)^rotr(x,18)^x>>>3}function calculate_sha256_littleSigmaPrime(x){return rotr(x,17)^rotr(x,19)^x>>>10}function calculateSHA256(data,offset,length){let h0=1779033703,h1=3144134277,h2=1013904242,h3=2773480762,h4=1359893119,h5=2600822924,h6=528734635,h7=1541459225;const paddedLength=Math.ceil((length+9)/64)*64;const padded=new Uint8Array(paddedLength);let i,j;for(i=0;i<length;++i){padded[i]=data[offset++]}padded[i++]=128;const n=paddedLength-8;if(i<n){i=n}i+=3;padded[i++]=length>>>29&255;padded[i++]=length>>21&255;padded[i++]=length>>13&255;padded[i++]=length>>5&255;padded[i++]=length<<3&255;const w=new Uint32Array(64);const{k:k}=calculate_sha256_PARAMS;for(i=0;i<paddedLength;){for(j=0;j<16;++j){w[j]=padded[i]<<24|padded[i+1]<<16|padded[i+2]<<8|padded[i+3];i+=4}for(j=16;j<64;++j){w[j]=calculate_sha256_littleSigmaPrime(w[j-2])+w[j-7]+calculate_sha256_littleSigma(w[j-15])+w[j-16]|0}let a=h0,b=h1,c=h2,d=h3,e=h4,f=h5,g=h6,h=h7,t1,t2;for(j=0;j<64;++j){t1=h+calculate_sha256_sigmaPrime(e)+calculate_sha256_ch(e,f,g)+k[j]+w[j];t2=calculate_sha256_sigma(a)+calculate_sha256_maj(a,b,c);h=g;g=f;f=e;e=d+t1|0;d=c;c=b;b=a;a=t1+t2|0}h0=h0+a|0;h1=h1+b|0;h2=h2+c|0;h3=h3+d|0;h4=h4+e|0;h5=h5+f|0;h6=h6+g|0;h7=h7+h|0}return new Uint8Array([h0>>24&255,h0>>16&255,h0>>8&255,h0&255,h1>>24&255,h1>>16&255,h1>>8&255,h1&255,h2>>24&255,h2>>16&255,h2>>8&255,h2&255,h3>>24&255,h3>>16&255,h3>>8&255,h3&255,h4>>24&255,h4>>16&255,h4>>8&255,h4&255,h5>>24&255,h5>>16&255,h5>>8&255,h5&255,h6>>24&255,h6>>16&255,h6>>8&255,h6&255,h7>>24&255,h7>>16&255,h7>>8&255,h7&255])}const chunkSize=512;class DecryptStream extends DecodeStream{constructor(str,maybeLength,decrypt){super(maybeLength);this.str=str;this.dict=str.dict;this.decrypt=decrypt;this.nextChunk=null;this.initialized=false}readBlock(){let chunk;if(this.initialized){chunk=this.nextChunk}else{chunk=this.str.getBytes(chunkSize);this.initialized=true}if(!chunk?.length){this.eof=true;return}this.nextChunk=this.str.getBytes(chunkSize);const hasMoreData=this.nextChunk?.length>0;const decrypt=this.decrypt;chunk=decrypt(chunk,!hasMoreData);const bufferLength=this.bufferLength,newLength=bufferLength+chunk.length,buffer=this.ensureBuffer(newLength);buffer.set(chunk,bufferLength);this.bufferLength=newLength}}class ARCFourCipher{constructor(key){this.a=0;this.b=0;const s=new Uint8Array(256);const keyLength=key.length;for(let i=0;i<256;++i){s[i]=i}for(let i=0,j=0;i<256;++i){const tmp=s[i];j=j+tmp+key[i%keyLength]&255;s[i]=s[j];s[j]=tmp}this.s=s}encryptBlock(data){let a=this.a,b=this.b;const s=this.s;const n=data.length;const output=new Uint8Array(n);for(let i=0;i<n;++i){a=a+1&255;const tmp=s[a];b=b+tmp&255;const tmp2=s[b];s[a]=tmp2;s[b]=tmp;output[i]=data[i]^s[tmp+tmp2&255]}this.a=a;this.b=b;return output}decryptBlock(data){return this.encryptBlock(data)}encrypt(data){return this.encryptBlock(data)}}class NullCipher{decryptBlock(data){return data}encrypt(data){return data}}class AESBaseCipher{_s=new Uint8Array([99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22]);_inv_s=new Uint8Array([82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125]);_mix=new Uint32Array([0,235474187,470948374,303765277,941896748,908933415,607530554,708780849,1883793496,2118214995,1817866830,1649639237,1215061108,1181045119,1417561698,1517767529,3767586992,4003061179,4236429990,4069246893,3635733660,3602770327,3299278474,3400528769,2430122216,2664543715,2362090238,2193862645,2835123396,2801107407,3035535058,3135740889,3678124923,3576870512,3341394285,3374361702,3810496343,3977675356,4279080257,4043610186,2876494627,2776292904,3076639029,3110650942,2472011535,2640243204,2403728665,2169303058,1001089995,899835584,666464733,699432150,59727847,226906860,530400753,294930682,1273168787,1172967064,1475418501,1509430414,1942435775,2110667444,1876241833,1641816226,2910219766,2743034109,2976151520,3211623147,2505202138,2606453969,2302690252,2269728455,3711829422,3543599269,3240894392,3475313331,3843699074,3943906441,4178062228,4144047775,1306967366,1139781709,1374988112,1610459739,1975683434,2076935265,1775276924,1742315127,1034867998,866637845,566021896,800440835,92987698,193195065,429456164,395441711,1984812685,2017778566,1784663195,1683407248,1315562145,1080094634,1383856311,1551037884,101039829,135050206,437757123,337553864,1042385657,807962610,573804783,742039012,2531067453,2564033334,2328828971,2227573024,2935566865,2700099354,3001755655,3168937228,3868552805,3902563182,4203181171,4102977912,3736164937,3501741890,3265478751,3433712980,1106041591,1340463100,1576976609,1408749034,2043211483,2009195472,1708848333,1809054150,832877231,1068351396,766945465,599762354,159417987,126454664,361929877,463180190,2709260871,2943682380,3178106961,3009879386,2572697195,2538681184,2236228733,2336434550,3509871135,3745345300,3441850377,3274667266,3910161971,3877198648,4110568485,4211818798,2597806476,2497604743,2261089178,2295101073,2733856160,2902087851,3202437046,2968011453,3936291284,3835036895,4136440770,4169408201,3535486456,3702665459,3467192302,3231722213,2051518780,1951317047,1716890410,1750902305,1113818384,1282050075,1584504582,1350078989,168810852,67556463,371049330,404016761,841739592,1008918595,775550814,540080725,3969562369,3801332234,4035489047,4269907996,3569255213,3669462566,3366754619,3332740144,2631065433,2463879762,2160117071,2395588676,2767645557,2868897406,3102011747,3069049960,202008497,33778362,270040487,504459436,875451293,975658646,675039627,641025152,2084704233,1917518562,1615861247,1851332852,1147550661,1248802510,1484005843,1451044056,933301370,967311729,733156972,632953703,260388950,25965917,328671808,496906059,1206477858,1239443753,1543208500,1441952575,2144161806,1908694277,1675577880,1842759443,3610369226,3644379585,3408119516,3307916247,4011190502,3776767469,4077384432,4245618683,2809771154,2842737049,3144396420,3043140495,2673705150,2438237621,2203032232,2370213795]);_mixCol=new Uint8Array(256).map(((_,i)=>i<128?i<<1:i<<1^27));constructor(){this.buffer=new Uint8Array(16);this.bufferPosition=0}_expandKey(cipherKey){unreachable(\"Cannot call `_expandKey` on the base class\")}_decrypt(input,key){let t,u,v;const state=new Uint8Array(16);state.set(input);for(let j=0,k=this._keySize;j<16;++j,++k){state[j]^=key[k]}for(let i=this._cyclesOfRepetition-1;i>=1;--i){t=state[13];state[13]=state[9];state[9]=state[5];state[5]=state[1];state[1]=t;t=state[14];u=state[10];state[14]=state[6];state[10]=state[2];state[6]=t;state[2]=u;t=state[15];u=state[11];v=state[7];state[15]=state[3];state[11]=t;state[7]=u;state[3]=v;for(let j=0;j<16;++j){state[j]=this._inv_s[state[j]]}for(let j=0,k=i*16;j<16;++j,++k){state[j]^=key[k]}for(let j=0;j<16;j+=4){const s0=this._mix[state[j]];const s1=this._mix[state[j+1]];const s2=this._mix[state[j+2]];const s3=this._mix[state[j+3]];t=s0^s1>>>8^s1<<24^s2>>>16^s2<<16^s3>>>24^s3<<8;state[j]=t>>>24&255;state[j+1]=t>>16&255;state[j+2]=t>>8&255;state[j+3]=t&255}}t=state[13];state[13]=state[9];state[9]=state[5];state[5]=state[1];state[1]=t;t=state[14];u=state[10];state[14]=state[6];state[10]=state[2];state[6]=t;state[2]=u;t=state[15];u=state[11];v=state[7];state[15]=state[3];state[11]=t;state[7]=u;state[3]=v;for(let j=0;j<16;++j){state[j]=this._inv_s[state[j]];state[j]^=key[j]}return state}_encrypt(input,key){const s=this._s;let t,u,v;const state=new Uint8Array(16);state.set(input);for(let j=0;j<16;++j){state[j]^=key[j]}for(let i=1;i<this._cyclesOfRepetition;i++){for(let j=0;j<16;++j){state[j]=s[state[j]]}v=state[1];state[1]=state[5];state[5]=state[9];state[9]=state[13];state[13]=v;v=state[2];u=state[6];state[2]=state[10];state[6]=state[14];state[10]=v;state[14]=u;v=state[3];u=state[7];t=state[11];state[3]=state[15];state[7]=v;state[11]=u;state[15]=t;for(let j=0;j<16;j+=4){const s0=state[j];const s1=state[j+1];const s2=state[j+2];const s3=state[j+3];t=s0^s1^s2^s3;state[j]^=t^this._mixCol[s0^s1];state[j+1]^=t^this._mixCol[s1^s2];state[j+2]^=t^this._mixCol[s2^s3];state[j+3]^=t^this._mixCol[s3^s0]}for(let j=0,k=i*16;j<16;++j,++k){state[j]^=key[k]}}for(let j=0;j<16;++j){state[j]=s[state[j]]}v=state[1];state[1]=state[5];state[5]=state[9];state[9]=state[13];state[13]=v;v=state[2];u=state[6];state[2]=state[10];state[6]=state[14];state[10]=v;state[14]=u;v=state[3];u=state[7];t=state[11];state[3]=state[15];state[7]=v;state[11]=u;state[15]=t;for(let j=0,k=this._keySize;j<16;++j,++k){state[j]^=key[k]}return state}_decryptBlock2(data,finalize){const sourceLength=data.length;let buffer=this.buffer,bufferLength=this.bufferPosition;const result=[];let iv=this.iv;for(let i=0;i<sourceLength;++i){buffer[bufferLength]=data[i];++bufferLength;if(bufferLength<16){continue}const plain=this._decrypt(buffer,this._key);for(let j=0;j<16;++j){plain[j]^=iv[j]}iv=buffer;result.push(plain);buffer=new Uint8Array(16);bufferLength=0}this.buffer=buffer;this.bufferLength=bufferLength;this.iv=iv;if(result.length===0){return new Uint8Array(0)}let outputLength=16*result.length;if(finalize){const lastBlock=result.at(-1);let psLen=lastBlock[15];if(psLen<=16){for(let i=15,ii=16-psLen;i>=ii;--i){if(lastBlock[i]!==psLen){psLen=0;break}}outputLength-=psLen;result[result.length-1]=lastBlock.subarray(0,16-psLen)}}const output=new Uint8Array(outputLength);for(let i=0,j=0,ii=result.length;i<ii;++i,j+=16){output.set(result[i],j)}return output}decryptBlock(data,finalize,iv=null){const sourceLength=data.length;const buffer=this.buffer;let bufferLength=this.bufferPosition;if(iv){this.iv=iv}else{for(let i=0;bufferLength<16&&i<sourceLength;++i,++bufferLength){buffer[bufferLength]=data[i]}if(bufferLength<16){this.bufferLength=bufferLength;return new Uint8Array(0)}this.iv=buffer;data=data.subarray(16)}this.buffer=new Uint8Array(16);this.bufferLength=0;this.decryptBlock=this._decryptBlock2;return this.decryptBlock(data,finalize)}encrypt(data,iv){const sourceLength=data.length;let buffer=this.buffer,bufferLength=this.bufferPosition;const result=[];iv||=new Uint8Array(16);for(let i=0;i<sourceLength;++i){buffer[bufferLength]=data[i];++bufferLength;if(bufferLength<16){continue}for(let j=0;j<16;++j){buffer[j]^=iv[j]}const cipher=this._encrypt(buffer,this._key);iv=cipher;result.push(cipher);buffer=new Uint8Array(16);bufferLength=0}this.buffer=buffer;this.bufferLength=bufferLength;this.iv=iv;if(result.length===0){return new Uint8Array(0)}const outputLength=16*result.length;const output=new Uint8Array(outputLength);for(let i=0,j=0,ii=result.length;i<ii;++i,j+=16){output.set(result[i],j)}return output}}class AES128Cipher extends AESBaseCipher{_rcon=new Uint8Array([141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141,1,2,4,8,16,32,64,128,27,54,108,216,171,77,154,47,94,188,99,198,151,53,106,212,179,125,250,239,197,145,57,114,228,211,189,97,194,159,37,74,148,51,102,204,131,29,58,116,232,203,141]);constructor(key){super();this._cyclesOfRepetition=10;this._keySize=160;this._key=this._expandKey(key)}_expandKey(cipherKey){const b=176;const s=this._s;const rcon=this._rcon;const result=new Uint8Array(b);result.set(cipherKey);for(let j=16,i=1;j<b;++i){let t1=result[j-3];let t2=result[j-2];let t3=result[j-1];let t4=result[j-4];t1=s[t1];t2=s[t2];t3=s[t3];t4=s[t4];t1^=rcon[i];for(let n=0;n<4;++n){result[j]=t1^=result[j-16];j++;result[j]=t2^=result[j-16];j++;result[j]=t3^=result[j-16];j++;result[j]=t4^=result[j-16];j++}}return result}}class AES256Cipher extends AESBaseCipher{constructor(key){super();this._cyclesOfRepetition=14;this._keySize=224;this._key=this._expandKey(key)}_expandKey(cipherKey){const b=240;const s=this._s;const result=new Uint8Array(b);result.set(cipherKey);let r=1;let t1,t2,t3,t4;for(let j=32,i=1;j<b;++i){if(j%32===16){t1=s[t1];t2=s[t2];t3=s[t3];t4=s[t4]}else if(j%32===0){t1=result[j-3];t2=result[j-2];t3=result[j-1];t4=result[j-4];t1=s[t1];t2=s[t2];t3=s[t3];t4=s[t4];t1^=r;if((r<<=1)>=256){r=(r^27)&255}}for(let n=0;n<4;++n){result[j]=t1^=result[j-32];j++;result[j]=t2^=result[j-32];j++;result[j]=t3^=result[j-32];j++;result[j]=t4^=result[j-32];j++}}return result}}class PDFBase{_hash(password,input,userBytes){unreachable(\"Abstract method `_hash` called\")}checkOwnerPassword(password,ownerValidationSalt,userBytes,ownerPassword){const hashData=new Uint8Array(password.length+56);hashData.set(password,0);hashData.set(ownerValidationSalt,password.length);hashData.set(userBytes,password.length+ownerValidationSalt.length);const result=this._hash(password,hashData,userBytes);return isArrayEqual(result,ownerPassword)}checkUserPassword(password,userValidationSalt,userPassword){const hashData=new Uint8Array(password.length+8);hashData.set(password,0);hashData.set(userValidationSalt,password.length);const result=this._hash(password,hashData,[]);return isArrayEqual(result,userPassword)}getOwnerKey(password,ownerKeySalt,userBytes,ownerEncryption){const hashData=new Uint8Array(password.length+56);hashData.set(password,0);hashData.set(ownerKeySalt,password.length);hashData.set(userBytes,password.length+ownerKeySalt.length);const key=this._hash(password,hashData,userBytes);const cipher=new AES256Cipher(key);return cipher.decryptBlock(ownerEncryption,false,new Uint8Array(16))}getUserKey(password,userKeySalt,userEncryption){const hashData=new Uint8Array(password.length+8);hashData.set(password,0);hashData.set(userKeySalt,password.length);const key=this._hash(password,hashData,[]);const cipher=new AES256Cipher(key);return cipher.decryptBlock(userEncryption,false,new Uint8Array(16))}}class PDF17 extends PDFBase{_hash(password,input,userBytes){return calculateSHA256(input,0,input.length)}}class PDF20 extends PDFBase{_hash(password,input,userBytes){let k=calculateSHA256(input,0,input.length).subarray(0,32);let e=[0];let i=0;while(i<64||e.at(-1)>i-32){const combinedLength=password.length+k.length+userBytes.length,combinedArray=new Uint8Array(combinedLength);let writeOffset=0;combinedArray.set(password,writeOffset);writeOffset+=password.length;combinedArray.set(k,writeOffset);writeOffset+=k.length;combinedArray.set(userBytes,writeOffset);const k1=new Uint8Array(combinedLength*64);for(let j=0,pos=0;j<64;j++,pos+=combinedLength){k1.set(combinedArray,pos)}const cipher=new AES128Cipher(k.subarray(0,16));e=cipher.encrypt(k1,k.subarray(16,32));const remainder=Math.sumPrecise(e.slice(0,16))%3;if(remainder===0){k=calculateSHA256(e,0,e.length)}else if(remainder===1){k=calculateSHA384(e,0,e.length)}else if(remainder===2){k=calculateSHA512(e,0,e.length)}i++}return k.subarray(0,32)}}class CipherTransform{constructor(stringCipherConstructor,streamCipherConstructor){this.StringCipherConstructor=stringCipherConstructor;this.StreamCipherConstructor=streamCipherConstructor}createStream(stream,length){const cipher=new this.StreamCipherConstructor;return new DecryptStream(stream,length,(function cipherTransformDecryptStream(data,finalize){return cipher.decryptBlock(data,finalize)}))}decryptString(s){const cipher=new this.StringCipherConstructor;let data=stringToBytes(s);data=cipher.decryptBlock(data,true);return bytesToString(data)}encryptString(s){const cipher=new this.StringCipherConstructor;if(cipher instanceof AESBaseCipher){const strLen=s.length;const pad=16-strLen%16;s+=String.fromCharCode(pad).repeat(pad);const iv=new Uint8Array(16);crypto.getRandomValues(iv);let data=stringToBytes(s);data=cipher.encrypt(data,iv);const buf=new Uint8Array(16+data.length);buf.set(iv);buf.set(data,16);return bytesToString(buf)}let data=stringToBytes(s);data=cipher.encrypt(data);return bytesToString(data)}}class CipherTransformFactory{static get _defaultPasswordBytes(){return shadow(this,\"_defaultPasswordBytes\",new Uint8Array([40,191,78,94,78,117,138,65,100,0,78,86,255,250,1,8,46,46,0,182,208,104,62,128,47,12,169,254,100,83,105,122]))}#createEncryptionKey20(revision,password,ownerPassword,ownerValidationSalt,ownerKeySalt,uBytes,userPassword,userValidationSalt,userKeySalt,ownerEncryption,userEncryption,perms){if(password){const passwordLength=Math.min(127,password.length);password=password.subarray(0,passwordLength)}else{password=[]}const pdfAlgorithm=revision===6?new PDF20:new PDF17;if(pdfAlgorithm.checkUserPassword(password,userValidationSalt,userPassword)){return pdfAlgorithm.getUserKey(password,userKeySalt,userEncryption)}else if(password.length&&pdfAlgorithm.checkOwnerPassword(password,ownerValidationSalt,uBytes,ownerPassword)){return pdfAlgorithm.getOwnerKey(password,ownerKeySalt,uBytes,ownerEncryption)}return null}#prepareKeyData(fileId,password,ownerPassword,userPassword,flags,revision,keyLength,encryptMetadata){const hashDataSize=40+ownerPassword.length+fileId.length;const hashData=new Uint8Array(hashDataSize);let i=0,j,n;if(password){n=Math.min(32,password.length);for(;i<n;++i){hashData[i]=password[i]}}j=0;while(i<32){hashData[i++]=CipherTransformFactory._defaultPasswordBytes[j++]}hashData.set(ownerPassword,i);i+=ownerPassword.length;hashData[i++]=flags&255;hashData[i++]=flags>>8&255;hashData[i++]=flags>>16&255;hashData[i++]=flags>>>24&255;hashData.set(fileId,i);i+=fileId.length;if(revision>=4&&!encryptMetadata){hashData.fill(255,i,i+4);i+=4}let hash=calculateMD5(hashData,0,i);const keyLengthInBytes=keyLength>>3;if(revision>=3){for(j=0;j<50;++j){hash=calculateMD5(hash,0,keyLengthInBytes)}}const encryptionKey=hash.subarray(0,keyLengthInBytes);let cipher,checkData;if(revision>=3){i=0;hashData.set(CipherTransformFactory._defaultPasswordBytes,i);i+=32;hashData.set(fileId,i);i+=fileId.length;cipher=new ARCFourCipher(encryptionKey);checkData=cipher.encryptBlock(calculateMD5(hashData,0,i));n=encryptionKey.length;const derivedKey=new Uint8Array(n);for(j=1;j<=19;++j){for(let k=0;k<n;++k){derivedKey[k]=encryptionKey[k]^j}cipher=new ARCFourCipher(derivedKey);checkData=cipher.encryptBlock(checkData)}}else{cipher=new ARCFourCipher(encryptionKey);checkData=cipher.encryptBlock(CipherTransformFactory._defaultPasswordBytes)}return checkData.every(((data,k)=>userPassword[k]===data))?encryptionKey:null}#decodeUserPassword(password,ownerPassword,revision,keyLength){const hashData=new Uint8Array(32);let i=0;const n=Math.min(32,password.length);for(;i<n;++i){hashData[i]=password[i]}let j=0;while(i<32){hashData[i++]=CipherTransformFactory._defaultPasswordBytes[j++]}let hash=calculateMD5(hashData,0,i);const keyLengthInBytes=keyLength>>3;if(revision>=3){for(j=0;j<50;++j){hash=calculateMD5(hash,0,hash.length)}}let cipher,userPassword;if(revision>=3){userPassword=ownerPassword;const derivedKey=new Uint8Array(keyLengthInBytes);for(j=19;j>=0;j--){for(let k=0;k<keyLengthInBytes;++k){derivedKey[k]=hash[k]^j}cipher=new ARCFourCipher(derivedKey);userPassword=cipher.encryptBlock(userPassword)}}else{cipher=new ARCFourCipher(hash.subarray(0,keyLengthInBytes));userPassword=cipher.encryptBlock(ownerPassword)}return userPassword}#buildObjectKey(num,gen,encryptionKey,isAes=false){const n=encryptionKey.length;const key=new Uint8Array(n+9);key.set(encryptionKey);let i=n;key[i++]=num&255;key[i++]=num>>8&255;key[i++]=num>>16&255;key[i++]=gen&255;key[i++]=gen>>8&255;if(isAes){key[i++]=115;key[i++]=65;key[i++]=108;key[i++]=84}const hash=calculateMD5(key,0,i);return hash.subarray(0,Math.min(n+5,16))}#buildCipherConstructor(cf,name,num,gen,key){if(!(name instanceof Name)){throw new FormatError(\"Invalid crypt filter name.\")}const self=this;const cryptFilter=cf.get(name.name);const cfm=cryptFilter?.get(\"CFM\");if(!cfm||cfm.name===\"None\"){return function(){return new NullCipher}}if(cfm.name===\"V2\"){return function(){return new ARCFourCipher(self.#buildObjectKey(num,gen,key,false))}}if(cfm.name===\"AESV2\"){return function(){return new AES128Cipher(self.#buildObjectKey(num,gen,key,true))}}if(cfm.name===\"AESV3\"){return function(){return new AES256Cipher(key)}}throw new FormatError(\"Unknown crypto method\")}constructor(dict,fileId,password){const filter=dict.get(\"Filter\");if(!isName(filter,\"Standard\")){throw new FormatError(\"unknown encryption method\")}this.filterName=filter.name;this.dict=dict;const algorithm=dict.get(\"V\");if(!Number.isInteger(algorithm)||algorithm!==1&&algorithm!==2&&algorithm!==4&&algorithm!==5){throw new FormatError(\"unsupported encryption algorithm\")}this.algorithm=algorithm;let keyLength=dict.get(\"Length\");if(!keyLength){if(algorithm<=3){keyLength=40}else{const cfDict=dict.get(\"CF\");const streamCryptoName=dict.get(\"StmF\");if(cfDict instanceof Dict&&streamCryptoName instanceof Name){cfDict.suppressEncryption=true;const handlerDict=cfDict.get(streamCryptoName.name);keyLength=handlerDict?.get(\"Length\")||128;if(keyLength<40){keyLength<<=3}}}}if(!Number.isInteger(keyLength)||keyLength<40||keyLength%8!==0){throw new FormatError(\"invalid key length\")}const ownerBytes=stringToBytes(dict.get(\"O\")),userBytes=stringToBytes(dict.get(\"U\"));const ownerPassword=ownerBytes.subarray(0,32);const userPassword=userBytes.subarray(0,32);const flags=dict.get(\"P\");const revision=dict.get(\"R\");const encryptMetadata=(algorithm===4||algorithm===5)&&dict.get(\"EncryptMetadata\")!==false;this.encryptMetadata=encryptMetadata;const fileIdBytes=stringToBytes(fileId);let passwordBytes;if(password){if(revision===6){try{password=utf8StringToString(password)}catch{warn(\"CipherTransformFactory: Unable to convert UTF8 encoded password.\")}}passwordBytes=stringToBytes(password)}let encryptionKey;if(algorithm!==5){encryptionKey=this.#prepareKeyData(fileIdBytes,passwordBytes,ownerPassword,userPassword,flags,revision,keyLength,encryptMetadata)}else{const ownerValidationSalt=ownerBytes.subarray(32,40);const ownerKeySalt=ownerBytes.subarray(40,48);const uBytes=userBytes.subarray(0,48);const userValidationSalt=userBytes.subarray(32,40);const userKeySalt=userBytes.subarray(40,48);const ownerEncryption=stringToBytes(dict.get(\"OE\"));const userEncryption=stringToBytes(dict.get(\"UE\"));const perms=stringToBytes(dict.get(\"Perms\"));encryptionKey=this.#createEncryptionKey20(revision,passwordBytes,ownerPassword,ownerValidationSalt,ownerKeySalt,uBytes,userPassword,userValidationSalt,userKeySalt,ownerEncryption,userEncryption,perms)}if(!encryptionKey){if(!password){throw new PasswordException(\"No password given\",PasswordResponses.NEED_PASSWORD)}const decodedPassword=this.#decodeUserPassword(passwordBytes,ownerPassword,revision,keyLength);encryptionKey=this.#prepareKeyData(fileIdBytes,decodedPassword,ownerPassword,userPassword,flags,revision,keyLength,encryptMetadata)}if(!encryptionKey){throw new PasswordException(\"Incorrect Password\",PasswordResponses.INCORRECT_PASSWORD)}if(algorithm===4&&encryptionKey.length<16){this.encryptionKey=new Uint8Array(16);this.encryptionKey.set(encryptionKey)}else{this.encryptionKey=encryptionKey}if(algorithm>=4){const cf=dict.get(\"CF\");if(cf instanceof Dict){cf.suppressEncryption=true}this.cf=cf;this.stmf=dict.get(\"StmF\")||Name.get(\"Identity\");this.strf=dict.get(\"StrF\")||Name.get(\"Identity\");this.eff=dict.get(\"EFF\")||this.stmf}}createCipherTransform(num,gen){if(this.algorithm===4||this.algorithm===5){return new CipherTransform(this.#buildCipherConstructor(this.cf,this.strf,num,gen,this.encryptionKey),this.#buildCipherConstructor(this.cf,this.stmf,num,gen,this.encryptionKey))}const key=this.#buildObjectKey(num,gen,this.encryptionKey,false);const cipherConstructor=function(){return new ARCFourCipher(key)};return new CipherTransform(cipherConstructor,cipherConstructor)}}class XRef{#firstXRefStmPos=null;constructor(stream,pdfManager){this.stream=stream;this.pdfManager=pdfManager;this.entries=[];this._xrefStms=new Set;this._cacheMap=new Map;this._pendingRefs=new RefSet;this._newPersistentRefNum=null;this._newTemporaryRefNum=null;this._persistentRefsCache=null}getNewPersistentRef(obj){if(this._newPersistentRefNum===null){this._newPersistentRefNum=this.entries.length||1}const num=this._newPersistentRefNum++;this._cacheMap.set(num,obj);return Ref.get(num,0)}getNewTemporaryRef(){if(this._newTemporaryRefNum===null){this._newTemporaryRefNum=this.entries.length||1;if(this._newPersistentRefNum){this._persistentRefsCache=new Map;for(let i=this._newTemporaryRefNum;i<this._newPersistentRefNum;i++){this._persistentRefsCache.set(i,this._cacheMap.get(i));this._cacheMap.delete(i)}}}return Ref.get(this._newTemporaryRefNum++,0)}resetNewTemporaryRef(){this._newTemporaryRefNum=null;if(this._persistentRefsCache){for(const[num,obj]of this._persistentRefsCache){this._cacheMap.set(num,obj)}}this._persistentRefsCache=null}setStartXRef(startXRef){this.startXRefQueue=[startXRef]}parse(recoveryMode=false){let trailerDict;if(!recoveryMode){trailerDict=this.readXRef()}else{warn(\"Indexing all PDF objects\");trailerDict=this.indexObjects()}trailerDict.assignXref(this);this.trailer=trailerDict;let encrypt;try{encrypt=trailerDict.get(\"Encrypt\")}catch(ex){if(ex instanceof MissingDataException){throw ex}warn(`XRef.parse - Invalid \"Encrypt\" reference: \"${ex}\".`)}if(encrypt instanceof Dict){const ids=trailerDict.get(\"ID\");const fileId=ids?.length?ids[0]:\"\";encrypt.suppressEncryption=true;this.encrypt=new CipherTransformFactory(encrypt,fileId,this.pdfManager.password)}let root;try{root=trailerDict.get(\"Root\")}catch(ex){if(ex instanceof MissingDataException){throw ex}warn(`XRef.parse - Invalid \"Root\" reference: \"${ex}\".`)}if(root instanceof Dict){try{const pages=root.get(\"Pages\");if(pages instanceof Dict){this.root=root;return}}catch(ex){if(ex instanceof MissingDataException){throw ex}warn(`XRef.parse - Invalid \"Pages\" reference: \"${ex}\".`)}}if(!recoveryMode){throw new XRefParseException}throw new InvalidPDFException(\"Invalid Root reference.\")}processXRefTable(parser){if(!(\"tableState\"in this)){this.tableState={entryNum:0,streamPos:parser.lexer.stream.pos,parserBuf1:parser.buf1,parserBuf2:parser.buf2}}const obj=this.readXRefTable(parser);if(!isCmd(obj,\"trailer\")){throw new FormatError(\"Invalid XRef table: could not find trailer dictionary\")}let dict=parser.getObj();if(!(dict instanceof Dict)&&dict.dict){dict=dict.dict}if(!(dict instanceof Dict)){throw new FormatError(\"Invalid XRef table: could not parse trailer dictionary\")}delete this.tableState;return dict}readXRefTable(parser){const stream=parser.lexer.stream;const tableState=this.tableState;stream.pos=tableState.streamPos;parser.buf1=tableState.parserBuf1;parser.buf2=tableState.parserBuf2;let obj;while(true){if(!(\"firstEntryNum\"in tableState)||!(\"entryCount\"in tableState)){if(isCmd(obj=parser.getObj(),\"trailer\")){break}tableState.firstEntryNum=obj;tableState.entryCount=parser.getObj()}let first=tableState.firstEntryNum;const count=tableState.entryCount;if(!Number.isInteger(first)||!Number.isInteger(count)){throw new FormatError(\"Invalid XRef table: wrong types in subsection header\")}for(let i=tableState.entryNum;i<count;i++){tableState.streamPos=stream.pos;tableState.entryNum=i;tableState.parserBuf1=parser.buf1;tableState.parserBuf2=parser.buf2;const entry={};entry.offset=parser.getObj();entry.gen=parser.getObj();const type=parser.getObj();if(type instanceof Cmd){switch(type.cmd){case\"f\":entry.free=true;break;case\"n\":entry.uncompressed=true;break}}if(!Number.isInteger(entry.offset)||!Number.isInteger(entry.gen)||!(entry.free||entry.uncompressed)){throw new FormatError(`Invalid entry in XRef subsection: ${first}, ${count}`)}if(i===0&&entry.free&&first===1){first=0}if(!this.entries[i+first]){this.entries[i+first]=entry}}tableState.entryNum=0;tableState.streamPos=stream.pos;tableState.parserBuf1=parser.buf1;tableState.parserBuf2=parser.buf2;delete tableState.firstEntryNum;delete tableState.entryCount}if(this.entries[0]&&!this.entries[0].free){throw new FormatError(\"Invalid XRef table: unexpected first object\")}return obj}processXRefStream(stream){if(!(\"streamState\"in this)){const{dict:dict,pos:pos}=stream;const byteWidths=dict.get(\"W\");const range=dict.get(\"Index\")||[0,dict.get(\"Size\")];this.streamState={entryRanges:range,byteWidths:byteWidths,entryNum:0,streamPos:pos}}this.readXRefStream(stream);delete this.streamState;return stream.dict}readXRefStream(stream){const streamState=this.streamState;stream.pos=streamState.streamPos;const[typeFieldWidth,offsetFieldWidth,generationFieldWidth]=streamState.byteWidths;const entryRanges=streamState.entryRanges;while(entryRanges.length>0){const[first,n]=entryRanges;if(!Number.isInteger(first)||!Number.isInteger(n)){throw new FormatError(`Invalid XRef range fields: ${first}, ${n}`)}if(!Number.isInteger(typeFieldWidth)||!Number.isInteger(offsetFieldWidth)||!Number.isInteger(generationFieldWidth)){throw new FormatError(`Invalid XRef entry fields length: ${first}, ${n}`)}for(let i=streamState.entryNum;i<n;++i){streamState.entryNum=i;streamState.streamPos=stream.pos;let type=0,offset=0,generation=0;for(let j=0;j<typeFieldWidth;++j){const typeByte=stream.getByte();if(typeByte===-1){throw new FormatError(\"Invalid XRef byteWidths 'type'.\")}type=type<<8|typeByte}if(typeFieldWidth===0){type=1}for(let j=0;j<offsetFieldWidth;++j){const offsetByte=stream.getByte();if(offsetByte===-1){throw new FormatError(\"Invalid XRef byteWidths 'offset'.\")}offset=offset<<8|offsetByte}for(let j=0;j<generationFieldWidth;++j){const generationByte=stream.getByte();if(generationByte===-1){throw new FormatError(\"Invalid XRef byteWidths 'generation'.\")}generation=generation<<8|generationByte}const entry={};entry.offset=offset;entry.gen=generation;switch(type){case 0:entry.free=true;break;case 1:entry.uncompressed=true;break;case 2:break;default:throw new FormatError(`Invalid XRef entry type: ${type}`)}if(!this.entries[first+i]){this.entries[first+i]=entry}}streamState.entryNum=0;streamState.streamPos=stream.pos;entryRanges.splice(0,2)}}indexObjects(){const TAB=9,LF=10,CR=13,SPACE=32;const PERCENT=37,LT=60;function readToken(data,offset){let token=\"\",ch=data[offset];while(ch!==LF&&ch!==CR&&ch!==LT){if(++offset>=data.length){break}token+=String.fromCharCode(ch);ch=data[offset]}return token}function skipUntil(data,offset,what){const length=what.length,dataLength=data.length;let skipped=0;while(offset<dataLength){let i=0;while(i<length&&data[offset+i]===what[i]){++i}if(i>=length){break}offset++;skipped++}return skipped}const gEndobjRegExp=/\\b(endobj|\\d+\\s+\\d+\\s+obj|xref|trailer\\s*<<)\\b/g;const gStartxrefRegExp=/\\b(startxref|\\d+\\s+\\d+\\s+obj)\\b/g;const objRegExp=/^(\\d+)\\s+(\\d+)\\s+obj\\b/;const trailerBytes=new Uint8Array([116,114,97,105,108,101,114]);const startxrefBytes=new Uint8Array([115,116,97,114,116,120,114,101,102]);const xrefBytes=new Uint8Array([47,88,82,101,102]);this.entries.length=0;this._cacheMap.clear();const stream=this.stream;stream.pos=0;const buffer=stream.getBytes(),bufferStr=bytesToString(buffer),length=buffer.length;let position=stream.start;const trailers=[],xrefStms=[];while(position<length){let ch=buffer[position];if(ch===TAB||ch===LF||ch===CR||ch===SPACE){++position;continue}if(ch===PERCENT){do{++position;if(position>=length){break}ch=buffer[position]}while(ch!==LF&&ch!==CR);continue}const token=readToken(buffer,position);let m;if(token.startsWith(\"xref\")&&(token.length===4||/\\s/.test(token[4]))){position+=skipUntil(buffer,position,trailerBytes);trailers.push(position);position+=skipUntil(buffer,position,startxrefBytes)}else if(m=objRegExp.exec(token)){const num=m[1]|0,gen=m[2]|0;const startPos=position+token.length;let contentLength,updateEntries=false;if(!this.entries[num]){updateEntries=true}else if(this.entries[num].gen===gen){try{const parser=new Parser({lexer:new Lexer(stream.makeSubStream(startPos))});parser.getObj();updateEntries=true}catch(ex){if(ex instanceof ParserEOFException){warn(`indexObjects -- checking object (${token}): \"${ex}\".`)}else{updateEntries=true}}}if(updateEntries){this.entries[num]={offset:position-stream.start,gen:gen,uncompressed:true}}gEndobjRegExp.lastIndex=startPos;const match=gEndobjRegExp.exec(bufferStr);if(match){const endPos=gEndobjRegExp.lastIndex+1;contentLength=endPos-position;if(match[1]!==\"endobj\"){warn(`indexObjects: Found \"${match[1]}\" inside of another \"obj\", `+'caused by missing \"endobj\" -- trying to recover.');contentLength-=match[1].length+1}}else{contentLength=length-position}const content=buffer.subarray(position,position+contentLength);const xrefTagOffset=skipUntil(content,0,xrefBytes);if(xrefTagOffset<contentLength&&content[xrefTagOffset+5]<64){xrefStms.push(position-stream.start);this._xrefStms.add(position-stream.start)}position+=contentLength}else if(token.startsWith(\"trailer\")&&(token.length===7||/\\s/.test(token[7]))){trailers.push(position);const startPos=position+token.length;let contentLength;gStartxrefRegExp.lastIndex=startPos;const match=gStartxrefRegExp.exec(bufferStr);if(match){const endPos=gStartxrefRegExp.lastIndex+1;contentLength=endPos-position;if(match[1]!==\"startxref\"){warn(`indexObjects: Found \"${match[1]}\" after \"trailer\", `+'caused by missing \"startxref\" -- trying to recover.');contentLength-=match[1].length+1}}else{contentLength=length-position}position+=contentLength}else{position+=token.length+1}}for(const xrefStm of xrefStms){this.startXRefQueue.push(xrefStm);this.readXRef(true)}const trailerDicts=[];let isEncrypted=false;for(const trailer of trailers){stream.pos=trailer;const parser=new Parser({lexer:new Lexer(stream),xref:this,allowStreams:true,recoveryMode:true});const obj=parser.getObj();if(!isCmd(obj,\"trailer\")){continue}const dict=parser.getObj();if(!(dict instanceof Dict)){continue}trailerDicts.push(dict);if(dict.has(\"Encrypt\")){isEncrypted=true}}let trailerDict,trailerError;for(const dict of[...trailerDicts,\"genFallback\",...trailerDicts]){if(dict===\"genFallback\"){if(!trailerError){break}this._generationFallback=true;continue}let validPagesDict=false;try{const rootDict=dict.get(\"Root\");if(!(rootDict instanceof Dict)){continue}const pagesDict=rootDict.get(\"Pages\");if(!(pagesDict instanceof Dict)){continue}const pagesCount=pagesDict.get(\"Count\");if(Number.isInteger(pagesCount)){validPagesDict=true}}catch(ex){trailerError=ex;continue}if(validPagesDict&&(!isEncrypted||dict.has(\"Encrypt\"))&&dict.has(\"ID\")){return dict}trailerDict=dict}if(trailerDict){return trailerDict}if(this.topDict){return this.topDict}if(!trailerDicts.length){for(const[num,entry]of this.entries.entries()){if(!entry){continue}const ref=Ref.get(num,entry.gen);let obj;try{obj=this.fetch(ref)}catch{continue}if(obj instanceof BaseStream){obj=obj.dict}if(obj instanceof Dict&&obj.has(\"Root\")){return obj}}}throw new InvalidPDFException(\"Invalid PDF structure.\")}readXRef(recoveryMode=false){const stream=this.stream;const startXRefParsedCache=new Set;while(this.startXRefQueue.length){try{const startXRef=this.startXRefQueue[0];if(startXRefParsedCache.has(startXRef)){warn(\"readXRef - skipping XRef table since it was already parsed.\");this.startXRefQueue.shift();continue}startXRefParsedCache.add(startXRef);stream.pos=startXRef+stream.start;const parser=new Parser({lexer:new Lexer(stream),xref:this,allowStreams:true});let obj=parser.getObj();let dict;if(isCmd(obj,\"xref\")){dict=this.processXRefTable(parser);if(!this.topDict){this.topDict=dict}obj=dict.get(\"XRefStm\");if(Number.isInteger(obj)&&!this._xrefStms.has(obj)){this._xrefStms.add(obj);this.startXRefQueue.push(obj);this.#firstXRefStmPos??=obj}}else if(Number.isInteger(obj)){if(!Number.isInteger(parser.getObj())||!isCmd(parser.getObj(),\"obj\")||!((obj=parser.getObj())instanceof BaseStream)){throw new FormatError(\"Invalid XRef stream\")}dict=this.processXRefStream(obj);if(!this.topDict){this.topDict=dict}if(!dict){throw new FormatError(\"Failed to read XRef stream\")}}else{throw new FormatError(\"Invalid XRef stream header\")}obj=dict.get(\"Prev\");if(Number.isInteger(obj)){this.startXRefQueue.push(obj)}else if(obj instanceof Ref){this.startXRefQueue.push(obj.num)}}catch(e){if(e instanceof MissingDataException){throw e}info(\"(while reading XRef): \"+e)}this.startXRefQueue.shift()}if(this.topDict){return this.topDict}if(recoveryMode){return undefined}throw new XRefParseException}get lastXRefStreamPos(){return this.#firstXRefStmPos??(this._xrefStms.size>0?Math.max(...this._xrefStms):null)}getEntry(i){const xrefEntry=this.entries[i];if(xrefEntry&&!xrefEntry.free&&xrefEntry.offset){return xrefEntry}return null}fetchIfRef(obj,suppressEncryption=false){if(obj instanceof Ref){return this.fetch(obj,suppressEncryption)}return obj}fetch(ref,suppressEncryption=false){if(!(ref instanceof Ref)){throw new Error(\"ref object is not a reference\")}const num=ref.num;const cacheEntry=this._cacheMap.get(num);if(cacheEntry!==undefined){if(cacheEntry instanceof Dict&&!cacheEntry.objId){cacheEntry.objId=ref.toString()}return cacheEntry}let xrefEntry=this.getEntry(num);if(xrefEntry===null){return xrefEntry}if(this._pendingRefs.has(ref)){this._pendingRefs.remove(ref);warn(`Ignoring circular reference: ${ref}.`);return CIRCULAR_REF}this._pendingRefs.put(ref);try{xrefEntry=xrefEntry.uncompressed?this.fetchUncompressed(ref,xrefEntry,suppressEncryption):this.fetchCompressed(ref,xrefEntry,suppressEncryption);this._pendingRefs.remove(ref)}catch(ex){this._pendingRefs.remove(ref);throw ex}if(xrefEntry instanceof Dict){xrefEntry.objId=ref.toString()}else if(xrefEntry instanceof BaseStream){xrefEntry.dict.objId=ref.toString()}return xrefEntry}fetchUncompressed(ref,xrefEntry,suppressEncryption=false){const gen=ref.gen;let num=ref.num;if(xrefEntry.gen!==gen){const msg=`Inconsistent generation in XRef: ${ref}`;if(this._generationFallback&&xrefEntry.gen<gen){warn(msg);return this.fetchUncompressed(Ref.get(num,xrefEntry.gen),xrefEntry,suppressEncryption)}throw new XRefEntryException(msg)}const stream=this.stream.makeSubStream(xrefEntry.offset+this.stream.start);const parser=new Parser({lexer:new Lexer(stream),xref:this,allowStreams:true});const obj1=parser.getObj();const obj2=parser.getObj();const obj3=parser.getObj();if(obj1!==num||obj2!==gen||!(obj3 instanceof Cmd)){throw new XRefEntryException(`Bad (uncompressed) XRef entry: ${ref}`)}if(obj3.cmd!==\"obj\"){if(obj3.cmd.startsWith(\"obj\")){num=parseInt(obj3.cmd.substring(3),10);if(!Number.isNaN(num)){return num}}throw new XRefEntryException(`Bad (uncompressed) XRef entry: ${ref}`)}xrefEntry=this.encrypt&&!suppressEncryption?parser.getObj(this.encrypt.createCipherTransform(num,gen)):parser.getObj();if(!(xrefEntry instanceof BaseStream)){this._cacheMap.set(num,xrefEntry)}return xrefEntry}fetchCompressed(ref,xrefEntry,suppressEncryption=false){const tableOffset=xrefEntry.offset;const stream=this.fetch(Ref.get(tableOffset,0));if(!(stream instanceof BaseStream)){throw new FormatError(\"bad ObjStm stream\")}const first=stream.dict.get(\"First\");const n=stream.dict.get(\"N\");if(!Number.isInteger(first)||!Number.isInteger(n)){throw new FormatError(\"invalid first and n parameters for ObjStm stream\")}let parser=new Parser({lexer:new Lexer(stream),xref:this,allowStreams:true});const nums=new Array(n);const offsets=new Array(n);for(let i=0;i<n;++i){const num=parser.getObj();if(!Number.isInteger(num)){throw new FormatError(`invalid object number in the ObjStm stream: ${num}`)}const offset=parser.getObj();if(!Number.isInteger(offset)){throw new FormatError(`invalid object offset in the ObjStm stream: ${offset}`)}nums[i]=num;offsets[i]=offset}const start=(stream.start||0)+first;const entries=new Array(n);for(let i=0;i<n;++i){const length=i<n-1?offsets[i+1]-offsets[i]:undefined;if(length<0){throw new FormatError(\"Invalid offset in the ObjStm stream.\")}parser=new Parser({lexer:new Lexer(stream.makeSubStream(start+offsets[i],length,stream.dict)),xref:this,allowStreams:true});const obj=parser.getObj();entries[i]=obj;if(obj instanceof BaseStream){continue}const num=nums[i],entry=this.entries[num];if(entry&&entry.offset===tableOffset&&entry.gen===i){this._cacheMap.set(num,obj)}}xrefEntry=entries[xrefEntry.gen];if(xrefEntry===undefined){throw new XRefEntryException(`Bad (compressed) XRef entry: ${ref}`)}return xrefEntry}async fetchIfRefAsync(obj,suppressEncryption){if(obj instanceof Ref){return this.fetchAsync(obj,suppressEncryption)}return obj}async fetchAsync(ref,suppressEncryption){try{return this.fetch(ref,suppressEncryption)}catch(ex){if(!(ex instanceof MissingDataException)){throw ex}await this.pdfManager.requestRange(ex.begin,ex.end);return this.fetchAsync(ref,suppressEncryption)}}getCatalogObj(){return this.root}}const LETTER_SIZE_MEDIABOX=[0,0,612,792];class Page{#resourcesPromise=null;constructor({pdfManager:pdfManager,xref:xref,pageIndex:pageIndex,pageDict:pageDict,ref:ref,globalIdFactory:globalIdFactory,fontCache:fontCache,builtInCMapCache:builtInCMapCache,standardFontDataCache:standardFontDataCache,globalColorSpaceCache:globalColorSpaceCache,globalImageCache:globalImageCache,systemFontCache:systemFontCache,nonBlendModesSet:nonBlendModesSet,xfaFactory:xfaFactory}){this.pdfManager=pdfManager;this.pageIndex=pageIndex;this.pageDict=pageDict;this.xref=xref;this.ref=ref;this.fontCache=fontCache;this.builtInCMapCache=builtInCMapCache;this.standardFontDataCache=standardFontDataCache;this.globalColorSpaceCache=globalColorSpaceCache;this.globalImageCache=globalImageCache;this.systemFontCache=systemFontCache;this.nonBlendModesSet=nonBlendModesSet;this.evaluatorOptions=pdfManager.evaluatorOptions;this.xfaFactory=xfaFactory;const idCounters={obj:0};this._localIdFactory=class extends globalIdFactory{static createObjId(){return`p${pageIndex}_${++idCounters.obj}`}static getPageObjId(){return`p${ref.toString()}`}}}#createPartialEvaluator(handler){return new PartialEvaluator({xref:this.xref,handler:handler,pageIndex:this.pageIndex,idFactory:this._localIdFactory,fontCache:this.fontCache,builtInCMapCache:this.builtInCMapCache,standardFontDataCache:this.standardFontDataCache,globalColorSpaceCache:this.globalColorSpaceCache,globalImageCache:this.globalImageCache,systemFontCache:this.systemFontCache,options:this.evaluatorOptions})}#getInheritableProperty(key,getArray=false){const value=getInheritableProperty({dict:this.pageDict,key:key,getArray:getArray,stopWhenFound:false});if(!Array.isArray(value)){return value}if(value.length===1||!(value[0]instanceof Dict)){return value[0]}return Dict.merge({xref:this.xref,dictArray:value})}get content(){return this.pageDict.getArray(\"Contents\")}get resources(){const resources=this.#getInheritableProperty(\"Resources\");return shadow(this,\"resources\",resources instanceof Dict?resources:Dict.empty)}#getBoundingBox(name){if(this.xfaData){return this.xfaData.bbox}const box=lookupNormalRect(this.#getInheritableProperty(name,true),null);if(box){if(box[2]-box[0]>0&&box[3]-box[1]>0){return box}warn(`Empty, or invalid, /${name} entry.`)}return null}get mediaBox(){return shadow(this,\"mediaBox\",this.#getBoundingBox(\"MediaBox\")||LETTER_SIZE_MEDIABOX)}get cropBox(){return shadow(this,\"cropBox\",this.#getBoundingBox(\"CropBox\")||this.mediaBox)}get userUnit(){const obj=this.pageDict.get(\"UserUnit\");return shadow(this,\"userUnit\",typeof obj===\"number\"&&obj>0?obj:1)}get view(){const{cropBox:cropBox,mediaBox:mediaBox}=this;if(cropBox!==mediaBox&&!isArrayEqual(cropBox,mediaBox)){const box=Util.intersect(cropBox,mediaBox);if(box&&box[2]-box[0]>0&&box[3]-box[1]>0){return shadow(this,\"view\",box)}warn(\"Empty /CropBox and /MediaBox intersection.\")}return shadow(this,\"view\",mediaBox)}get rotate(){let rotate=this.#getInheritableProperty(\"Rotate\")||0;if(rotate%90!==0){rotate=0}else if(rotate>=360){rotate%=360}else if(rotate<0){rotate=(rotate%360+360)%360}return shadow(this,\"rotate\",rotate)}#onSubStreamError(reason,objId){if(this.evaluatorOptions.ignoreErrors){warn(`getContentStream - ignoring sub-stream (${objId}): \"${reason}\".`);return}throw reason}async getContentStream(){const content=await this.pdfManager.ensure(this,\"content\");if(content instanceof BaseStream){return content}if(Array.isArray(content)){return new StreamsSequenceStream(content,this.#onSubStreamError.bind(this))}return new NullStream}get xfaData(){return shadow(this,\"xfaData\",this.xfaFactory?{bbox:this.xfaFactory.getBoundingBox(this.pageIndex)}:null)}async#replaceIdByRef(annotations,deletedAnnotations,existingAnnotations){const promises=[];for(const annotation of annotations){if(annotation.id){const ref=Ref.fromString(annotation.id);if(!ref){warn(`A non-linked annotation cannot be modified: ${annotation.id}`);continue}if(annotation.deleted){deletedAnnotations.put(ref,ref);if(annotation.popupRef){const popupRef=Ref.fromString(annotation.popupRef);if(popupRef){deletedAnnotations.put(popupRef,popupRef)}}continue}existingAnnotations?.put(ref);annotation.ref=ref;promises.push(this.xref.fetchAsync(ref).then((obj=>{if(obj instanceof Dict){annotation.oldAnnotation=obj.clone()}}),(()=>{warn(`Cannot fetch \\`oldAnnotation\\` for: ${ref}.`)})));delete annotation.id}}await Promise.all(promises)}async saveNewAnnotations(handler,task,annotations,imagePromises,changes){if(this.xfaFactory){throw new Error(\"XFA: Cannot save new annotations.\")}const partialEvaluator=this.#createPartialEvaluator(handler);const deletedAnnotations=new RefSetCache;const existingAnnotations=new RefSet;await this.#replaceIdByRef(annotations,deletedAnnotations,existingAnnotations);const pageDict=this.pageDict;const annotationsArray=this.annotations.filter((a=>!(a instanceof Ref&&deletedAnnotations.has(a))));const newData=await AnnotationFactory.saveNewAnnotations(partialEvaluator,task,annotations,imagePromises,changes);for(const{ref:ref}of newData.annotations){if(ref instanceof Ref&&!existingAnnotations.has(ref)){annotationsArray.push(ref)}}const dict=pageDict.clone();dict.set(\"Annots\",annotationsArray);changes.put(this.ref,{data:dict});for(const deletedRef of deletedAnnotations){changes.put(deletedRef,{data:null})}}async save(handler,task,annotationStorage,changes){const partialEvaluator=this.#createPartialEvaluator(handler);const annotations=await this._parsedAnnotations;const promises=[];for(const annotation of annotations){promises.push(annotation.save(partialEvaluator,task,annotationStorage,changes).catch((function(reason){warn(\"save - ignoring annotation data during \"+`\"${task.name}\" task: \"${reason}\".`);return null})))}return Promise.all(promises)}async loadResources(keys){await(this.#resourcesPromise??=this.pdfManager.ensure(this,\"resources\"));await ObjectLoader.load(this.resources,keys,this.xref)}async#getMergedResources(streamDict,keys){const localResources=streamDict?.get(\"Resources\");if(!(localResources instanceof Dict&&localResources.size)){return this.resources}await ObjectLoader.load(localResources,keys,this.xref);return Dict.merge({xref:this.xref,dictArray:[localResources,this.resources],mergeSubDicts:true})}async getOperatorList({handler:handler,sink:sink,task:task,intent:intent,cacheKey:cacheKey,annotationStorage:annotationStorage=null,modifiedIds:modifiedIds=null}){const contentStreamPromise=this.getContentStream();const resourcesPromise=this.loadResources(RESOURCES_KEYS_OPERATOR_LIST);const partialEvaluator=this.#createPartialEvaluator(handler);const newAnnotsByPage=!this.xfaFactory?getNewAnnotationsMap(annotationStorage):null;const newAnnots=newAnnotsByPage?.get(this.pageIndex);let newAnnotationsPromise=Promise.resolve(null);let deletedAnnotations=null;if(newAnnots){const annotationGlobalsPromise=this.pdfManager.ensureDoc(\"annotationGlobals\");let imagePromises;const missingBitmaps=new Set;for(const{bitmapId:bitmapId,bitmap:bitmap}of newAnnots){if(bitmapId&&!bitmap&&!missingBitmaps.has(bitmapId)){missingBitmaps.add(bitmapId)}}const{isOffscreenCanvasSupported:isOffscreenCanvasSupported}=this.evaluatorOptions;if(missingBitmaps.size>0){const annotationWithBitmaps=newAnnots.slice();for(const[key,annotation]of annotationStorage){if(!key.startsWith(AnnotationEditorPrefix)){continue}if(annotation.bitmap&&missingBitmaps.has(annotation.bitmapId)){annotationWithBitmaps.push(annotation)}}imagePromises=AnnotationFactory.generateImages(annotationWithBitmaps,this.xref,isOffscreenCanvasSupported)}else{imagePromises=AnnotationFactory.generateImages(newAnnots,this.xref,isOffscreenCanvasSupported)}deletedAnnotations=new RefSet;newAnnotationsPromise=Promise.all([annotationGlobalsPromise,this.#replaceIdByRef(newAnnots,deletedAnnotations,null)]).then((([annotationGlobals])=>{if(!annotationGlobals){return null}return AnnotationFactory.printNewAnnotations(annotationGlobals,partialEvaluator,task,newAnnots,imagePromises)}))}const pageListPromise=Promise.all([contentStreamPromise,resourcesPromise]).then((async([contentStream])=>{const resources=await this.#getMergedResources(contentStream.dict,RESOURCES_KEYS_OPERATOR_LIST);const opList=new OperatorList(intent,sink);handler.send(\"StartRenderPage\",{transparency:partialEvaluator.hasBlendModes(resources,this.nonBlendModesSet),pageIndex:this.pageIndex,cacheKey:cacheKey});await partialEvaluator.getOperatorList({stream:contentStream,task:task,resources:resources,operatorList:opList});return opList}));let[pageOpList,annotations,newAnnotations]=await Promise.all([pageListPromise,this._parsedAnnotations,newAnnotationsPromise]);if(newAnnotations){annotations=annotations.filter((a=>!(a.ref&&deletedAnnotations.has(a.ref))));for(let i=0,ii=newAnnotations.length;i<ii;i++){const newAnnotation=newAnnotations[i];if(newAnnotation.refToReplace){const j=annotations.findIndex((a=>a.ref&&isRefsEqual(a.ref,newAnnotation.refToReplace)));if(j>=0){annotations.splice(j,1,newAnnotation);newAnnotations.splice(i--,1);ii--}}}annotations=annotations.concat(newAnnotations)}if(annotations.length===0||intent&RenderingIntentFlag.ANNOTATIONS_DISABLE){pageOpList.flush(true);return{length:pageOpList.totalLength}}const renderForms=!!(intent&RenderingIntentFlag.ANNOTATIONS_FORMS),isEditing=!!(intent&RenderingIntentFlag.IS_EDITING),intentAny=!!(intent&RenderingIntentFlag.ANY),intentDisplay=!!(intent&RenderingIntentFlag.DISPLAY),intentPrint=!!(intent&RenderingIntentFlag.PRINT);const opListPromises=[];for(const annotation of annotations){if(intentAny||intentDisplay&&annotation.mustBeViewed(annotationStorage,renderForms)&&annotation.mustBeViewedWhenEditing(isEditing,modifiedIds)||intentPrint&&annotation.mustBePrinted(annotationStorage)){opListPromises.push(annotation.getOperatorList(partialEvaluator,task,intent,annotationStorage).catch((function(reason){warn(\"getOperatorList - ignoring annotation data during \"+`\"${task.name}\" task: \"${reason}\".`);return{opList:null,separateForm:false,separateCanvas:false}})))}}const opLists=await Promise.all(opListPromises);let form=false,canvas=false;for(const{opList:opList,separateForm:separateForm,separateCanvas:separateCanvas}of opLists){pageOpList.addOpList(opList);form||=separateForm;canvas||=separateCanvas}pageOpList.flush(true,{form:form,canvas:canvas});return{length:pageOpList.totalLength}}async extractTextContent({handler:handler,task:task,includeMarkedContent:includeMarkedContent,disableNormalization:disableNormalization,sink:sink}){const contentStreamPromise=this.getContentStream();const resourcesPromise=this.loadResources(RESOURCES_KEYS_TEXT_CONTENT);const langPromise=this.pdfManager.ensureCatalog(\"lang\");const[contentStream,,lang]=await Promise.all([contentStreamPromise,resourcesPromise,langPromise]);const resources=await this.#getMergedResources(contentStream.dict,RESOURCES_KEYS_TEXT_CONTENT);const partialEvaluator=this.#createPartialEvaluator(handler);return partialEvaluator.getTextContent({stream:contentStream,task:task,resources:resources,includeMarkedContent:includeMarkedContent,disableNormalization:disableNormalization,sink:sink,viewBox:this.view,lang:lang})}async getStructTree(){const structTreeRoot=await this.pdfManager.ensureCatalog(\"structTreeRoot\");if(!structTreeRoot){return null}await this._parsedAnnotations;try{const structTree=await this.pdfManager.ensure(this,\"_parseStructTree\",[structTreeRoot]);const data=await this.pdfManager.ensure(structTree,\"serializable\");return data}catch(ex){warn(`getStructTree: \"${ex}\".`);return null}}_parseStructTree(structTreeRoot){const tree=new StructTreePage(structTreeRoot,this.pageDict);tree.parse(this.ref);return tree}async getAnnotationsData(handler,task,intent){const annotations=await this._parsedAnnotations;if(annotations.length===0){return annotations}const annotationsData=[],textContentPromises=[];let partialEvaluator;const intentAny=!!(intent&RenderingIntentFlag.ANY),intentDisplay=!!(intent&RenderingIntentFlag.DISPLAY),intentPrint=!!(intent&RenderingIntentFlag.PRINT);for(const annotation of annotations){const isVisible=intentAny||intentDisplay&&annotation.viewable;if(isVisible||intentPrint&&annotation.printable){annotationsData.push(annotation.data)}if(annotation.hasTextContent&&isVisible){partialEvaluator??=this.#createPartialEvaluator(handler);textContentPromises.push(annotation.extractTextContent(partialEvaluator,task,[-Infinity,-Infinity,Infinity,Infinity]).catch((function(reason){warn(`getAnnotationsData - ignoring textContent during \"${task.name}\" task: \"${reason}\".`)})))}}await Promise.all(textContentPromises);return annotationsData}get annotations(){const annots=this.#getInheritableProperty(\"Annots\");return shadow(this,\"annotations\",Array.isArray(annots)?annots:[])}get _parsedAnnotations(){const promise=this.pdfManager.ensure(this,\"annotations\").then((async annots=>{if(annots.length===0){return annots}const[annotationGlobals,fieldObjects]=await Promise.all([this.pdfManager.ensureDoc(\"annotationGlobals\"),this.pdfManager.ensureDoc(\"fieldObjects\")]);if(!annotationGlobals){return[]}const orphanFields=fieldObjects?.orphanFields;const annotationPromises=[];for(const annotationRef of annots){annotationPromises.push(AnnotationFactory.create(this.xref,annotationRef,annotationGlobals,this._localIdFactory,false,orphanFields,this.ref).catch((function(reason){warn(`_parsedAnnotations: \"${reason}\".`);return null})))}const sortedAnnotations=[];let popupAnnotations,widgetAnnotations;for(const annotation of await Promise.all(annotationPromises)){if(!annotation){continue}if(annotation instanceof WidgetAnnotation){(widgetAnnotations||=[]).push(annotation);continue}if(annotation instanceof PopupAnnotation){(popupAnnotations||=[]).push(annotation);continue}sortedAnnotations.push(annotation)}if(widgetAnnotations){sortedAnnotations.push(...widgetAnnotations)}if(popupAnnotations){sortedAnnotations.push(...popupAnnotations)}return sortedAnnotations}));return shadow(this,\"_parsedAnnotations\",promise)}get jsActions(){const actions=collectActions(this.xref,this.pageDict,PageActionEventType);return shadow(this,\"jsActions\",actions)}}const PDF_HEADER_SIGNATURE=new Uint8Array([37,80,68,70,45]);const STARTXREF_SIGNATURE=new Uint8Array([115,116,97,114,116,120,114,101,102]);const ENDOBJ_SIGNATURE=new Uint8Array([101,110,100,111,98,106]);function find(stream,signature,limit=1024,backwards=false){const signatureLength=signature.length;const scanBytes=stream.peekBytes(limit);const scanLength=scanBytes.length-signatureLength;if(scanLength<=0){return false}if(backwards){const signatureEnd=signatureLength-1;let pos=scanBytes.length-1;while(pos>=signatureEnd){let j=0;while(j<signatureLength&&scanBytes[pos-j]===signature[signatureEnd-j]){j++}if(j>=signatureLength){stream.pos+=pos-signatureEnd;return true}pos--}}else{let pos=0;while(pos<=scanLength){let j=0;while(j<signatureLength&&scanBytes[pos+j]===signature[j]){j++}if(j>=signatureLength){stream.pos+=pos;return true}pos++}}return false}class PDFDocument{#pagePromises=new Map;#version=null;constructor(pdfManager,stream){if(stream.length<=0){throw new InvalidPDFException(\"The PDF file is empty, i.e. its size is zero bytes.\")}this.pdfManager=pdfManager;this.stream=stream;this.xref=new XRef(stream,pdfManager);const idCounters={font:0};this._globalIdFactory=class{static getDocId(){return`g_${pdfManager.docId}`}static createFontId(){return`f${++idCounters.font}`}static createObjId(){unreachable(\"Abstract method `createObjId` called.\")}static getPageObjId(){unreachable(\"Abstract method `getPageObjId` called.\")}}}parse(recoveryMode){this.xref.parse(recoveryMode);this.catalog=new Catalog(this.pdfManager,this.xref)}get linearization(){let linearization=null;try{linearization=Linearization.create(this.stream)}catch(err){if(err instanceof MissingDataException){throw err}info(err)}return shadow(this,\"linearization\",linearization)}get startXRef(){const stream=this.stream;let startXRef=0;if(this.linearization){stream.reset();if(find(stream,ENDOBJ_SIGNATURE)){stream.skip(6);let ch=stream.peekByte();while(isWhiteSpace(ch)){stream.pos++;ch=stream.peekByte()}startXRef=stream.pos-stream.start}}else{const step=1024;const startXRefLength=STARTXREF_SIGNATURE.length;let found=false,pos=stream.end;while(!found&&pos>0){pos-=step-startXRefLength;if(pos<0){pos=0}stream.pos=pos;found=find(stream,STARTXREF_SIGNATURE,step,true)}if(found){stream.skip(9);let ch;do{ch=stream.getByte()}while(isWhiteSpace(ch));let str=\"\";while(ch>=32&&ch<=57){str+=String.fromCharCode(ch);ch=stream.getByte()}startXRef=parseInt(str,10);if(isNaN(startXRef)){startXRef=0}}}return shadow(this,\"startXRef\",startXRef)}checkHeader(){const stream=this.stream;stream.reset();if(!find(stream,PDF_HEADER_SIGNATURE)){return}stream.moveStart();stream.skip(PDF_HEADER_SIGNATURE.length);let version=\"\",ch;while((ch=stream.getByte())>32&&version.length<7){version+=String.fromCharCode(ch)}if(PDF_VERSION_REGEXP.test(version)){this.#version=version}else{warn(`Invalid PDF header version: ${version}`)}}parseStartXRef(){this.xref.setStartXRef(this.startXRef)}get numPages(){let num=0;if(this.catalog.hasActualNumPages){num=this.catalog.numPages}else if(this.xfaFactory){num=this.xfaFactory.getNumPages()}else if(this.linearization){num=this.linearization.numPages}else{num=this.catalog.numPages}return shadow(this,\"numPages\",num)}#hasOnlyDocumentSignatures(fields,recursionDepth=0){const RECURSION_LIMIT=10;if(!Array.isArray(fields)){return false}return fields.every((field=>{field=this.xref.fetchIfRef(field);if(!(field instanceof Dict)){return false}if(field.has(\"Kids\")){if(++recursionDepth>RECURSION_LIMIT){warn(\"#hasOnlyDocumentSignatures: maximum recursion depth reached\");return false}return this.#hasOnlyDocumentSignatures(field.get(\"Kids\"),recursionDepth)}const isSignature=isName(field.get(\"FT\"),\"Sig\");const rectangle=field.get(\"Rect\");const isInvisible=Array.isArray(rectangle)&&rectangle.every((value=>value===0));return isSignature&&isInvisible}))}get _xfaStreams(){const{acroForm:acroForm}=this.catalog;if(!acroForm){return null}const xfa=acroForm.get(\"XFA\");const entries=new Map([\"xdp:xdp\",\"template\",\"datasets\",\"config\",\"connectionSet\",\"localeSet\",\"stylesheet\",\"/xdp:xdp\"].map((e=>[e,null])));if(xfa instanceof BaseStream&&!xfa.isEmpty){entries.set(\"xdp:xdp\",xfa);return entries}if(!Array.isArray(xfa)||xfa.length===0){return null}for(let i=0,ii=xfa.length;i<ii;i+=2){let name;if(i===0){name=\"xdp:xdp\"}else if(i===ii-2){name=\"/xdp:xdp\"}else{name=xfa[i]}if(!entries.has(name)){continue}const data=this.xref.fetchIfRef(xfa[i+1]);if(!(data instanceof BaseStream)||data.isEmpty){continue}entries.set(name,data)}return entries}get xfaDatasets(){const streams=this._xfaStreams;if(!streams){return shadow(this,\"xfaDatasets\",null)}for(const key of[\"datasets\",\"xdp:xdp\"]){const stream=streams.get(key);if(!stream){continue}try{const str=stringToUTF8String(stream.getString());const data={[key]:str};return shadow(this,\"xfaDatasets\",new DatasetReader(data))}catch{warn(\"XFA - Invalid utf-8 string.\");break}}return shadow(this,\"xfaDatasets\",null)}get xfaData(){const streams=this._xfaStreams;if(!streams){return null}const data=Object.create(null);for(const[key,stream]of streams){if(!stream){continue}try{data[key]=stringToUTF8String(stream.getString())}catch{warn(\"XFA - Invalid utf-8 string.\");return null}}return data}get xfaFactory(){let data;if(this.pdfManager.enableXfa&&this.catalog.needsRendering&&this.formInfo.hasXfa&&!this.formInfo.hasAcroForm){data=this.xfaData}return shadow(this,\"xfaFactory\",data?new XFAFactory(data):null)}get isPureXfa(){return this.xfaFactory?this.xfaFactory.isValid():false}get htmlForXfa(){return this.xfaFactory?this.xfaFactory.getPages():null}async#loadXfaImages(){const xfaImages=await this.pdfManager.ensureCatalog(\"xfaImages\");if(!xfaImages){return}this.xfaFactory.setImages(xfaImages)}async#loadXfaFonts(handler,task){const acroForm=await this.pdfManager.ensureCatalog(\"acroForm\");if(!acroForm){return}const resources=await acroForm.getAsync(\"DR\");if(!(resources instanceof Dict)){return}await ObjectLoader.load(resources,[\"Font\"],this.xref);const fontRes=resources.get(\"Font\");if(!(fontRes instanceof Dict)){return}const options=Object.assign(Object.create(null),this.pdfManager.evaluatorOptions,{useSystemFonts:false});const{builtInCMapCache:builtInCMapCache,fontCache:fontCache,standardFontDataCache:standardFontDataCache}=this.catalog;const partialEvaluator=new PartialEvaluator({xref:this.xref,handler:handler,pageIndex:-1,idFactory:this._globalIdFactory,fontCache:fontCache,builtInCMapCache:builtInCMapCache,standardFontDataCache:standardFontDataCache,options:options});const operatorList=new OperatorList;const pdfFonts=[];const initialState={get font(){return pdfFonts.at(-1)},set font(font){pdfFonts.push(font)},clone(){return this}};const parseFont=(fontName,fallbackFontDict,cssFontInfo)=>partialEvaluator.handleSetFont(resources,[Name.get(fontName),1],null,operatorList,task,initialState,fallbackFontDict,cssFontInfo).catch((reason=>{warn(`loadXfaFonts: \"${reason}\".`);return null}));const promises=[];for(const[fontName,font]of fontRes){const descriptor=font.get(\"FontDescriptor\");if(!(descriptor instanceof Dict)){continue}let fontFamily=descriptor.get(\"FontFamily\");fontFamily=fontFamily.replaceAll(/[ ]+(\\d)/g,\"$1\");const fontWeight=descriptor.get(\"FontWeight\");const italicAngle=-descriptor.get(\"ItalicAngle\");const cssFontInfo={fontFamily:fontFamily,fontWeight:fontWeight,italicAngle:italicAngle};if(!validateCSSFont(cssFontInfo)){continue}promises.push(parseFont(fontName,null,cssFontInfo))}await Promise.all(promises);const missingFonts=this.xfaFactory.setFonts(pdfFonts);if(!missingFonts){return}options.ignoreErrors=true;promises.length=0;pdfFonts.length=0;const reallyMissingFonts=new Set;for(const missing of missingFonts){if(!getXfaFontName(`${missing}-Regular`)){reallyMissingFonts.add(missing)}}if(reallyMissingFonts.size){missingFonts.push(\"PdfJS-Fallback\")}for(const missing of missingFonts){if(reallyMissingFonts.has(missing)){continue}for(const fontInfo of[{name:\"Regular\",fontWeight:400,italicAngle:0},{name:\"Bold\",fontWeight:700,italicAngle:0},{name:\"Italic\",fontWeight:400,italicAngle:12},{name:\"BoldItalic\",fontWeight:700,italicAngle:12}]){const name=`${missing}-${fontInfo.name}`;promises.push(parseFont(name,getXfaFontDict(name),{fontFamily:missing,fontWeight:fontInfo.fontWeight,italicAngle:fontInfo.italicAngle}))}}await Promise.all(promises);this.xfaFactory.appendFonts(pdfFonts,reallyMissingFonts)}loadXfaResources(handler,task){return Promise.all([this.#loadXfaFonts(handler,task).catch((()=>{})),this.#loadXfaImages()])}serializeXfaData(annotationStorage){return this.xfaFactory?this.xfaFactory.serializeData(annotationStorage):null}get version(){return this.catalog.version||this.#version}get formInfo(){const formInfo={hasFields:false,hasAcroForm:false,hasXfa:false,hasSignatures:false};const{acroForm:acroForm}=this.catalog;if(!acroForm){return shadow(this,\"formInfo\",formInfo)}try{const fields=acroForm.get(\"Fields\");const hasFields=Array.isArray(fields)&&fields.length>0;formInfo.hasFields=hasFields;const xfa=acroForm.get(\"XFA\");formInfo.hasXfa=Array.isArray(xfa)&&xfa.length>0||xfa instanceof BaseStream&&!xfa.isEmpty;const sigFlags=acroForm.get(\"SigFlags\");const hasSignatures=!!(sigFlags&1);const hasOnlyDocumentSignatures=hasSignatures&&this.#hasOnlyDocumentSignatures(fields);formInfo.hasAcroForm=hasFields&&!hasOnlyDocumentSignatures;formInfo.hasSignatures=hasSignatures}catch(ex){if(ex instanceof MissingDataException){throw ex}warn(`Cannot fetch form information: \"${ex}\".`)}return shadow(this,\"formInfo\",formInfo)}get documentInfo(){const{catalog:catalog,formInfo:formInfo,xref:xref}=this;const docInfo={PDFFormatVersion:this.version,Language:catalog.lang,EncryptFilterName:xref.encrypt?.filterName??null,IsLinearized:!!this.linearization,IsAcroFormPresent:formInfo.hasAcroForm,IsXFAPresent:formInfo.hasXfa,IsCollectionPresent:!!catalog.collection,IsSignaturesPresent:formInfo.hasSignatures};let infoDict;try{infoDict=xref.trailer.get(\"Info\")}catch(err){if(err instanceof MissingDataException){throw err}info(\"The document information dictionary is invalid.\")}if(!(infoDict instanceof Dict)){return shadow(this,\"documentInfo\",docInfo)}for(const[key,value]of infoDict){switch(key){case\"Title\":case\"Author\":case\"Subject\":case\"Keywords\":case\"Creator\":case\"Producer\":case\"CreationDate\":case\"ModDate\":if(typeof value===\"string\"){docInfo[key]=stringToPDFString(value);continue}break;case\"Trapped\":if(value instanceof Name){docInfo[key]=value;continue}break;default:let customValue;switch(typeof value){case\"string\":customValue=stringToPDFString(value);break;case\"number\":case\"boolean\":customValue=value;break;default:if(value instanceof Name){customValue=value}break}if(customValue===undefined){warn(`Bad value, for custom key \"${key}\", in Info: ${value}.`);continue}docInfo.Custom??=Object.create(null);docInfo.Custom[key]=customValue;continue}warn(`Bad value, for key \"${key}\", in Info: ${value}.`)}return shadow(this,\"documentInfo\",docInfo)}get fingerprints(){const FINGERPRINT_FIRST_BYTES=1024;const EMPTY_FINGERPRINT=\"\\0\".repeat(16);function validate(data){return typeof data===\"string\"&&data.length===16&&data!==EMPTY_FINGERPRINT}const id=this.xref.trailer.get(\"ID\");let hashOriginal,hashModified;if(Array.isArray(id)&&validate(id[0])){hashOriginal=stringToBytes(id[0]);if(id[1]!==id[0]&&validate(id[1])){hashModified=stringToBytes(id[1])}}else{hashOriginal=calculateMD5(this.stream.getByteRange(0,FINGERPRINT_FIRST_BYTES),0,FINGERPRINT_FIRST_BYTES)}return shadow(this,\"fingerprints\",[toHexUtil(hashOriginal),hashModified?toHexUtil(hashModified):null])}async#getLinearizationPage(pageIndex){const{catalog:catalog,linearization:linearization,xref:xref}=this;const ref=Ref.get(linearization.objectNumberFirst,0);try{const obj=await xref.fetchAsync(ref);if(obj instanceof Dict){let type=obj.getRaw(\"Type\");if(type instanceof Ref){type=await xref.fetchAsync(type)}if(isName(type,\"Page\")||!obj.has(\"Type\")&&!obj.has(\"Kids\")&&obj.has(\"Contents\")){if(!catalog.pageKidsCountCache.has(ref)){catalog.pageKidsCountCache.put(ref,1)}if(!catalog.pageIndexCache.has(ref)){catalog.pageIndexCache.put(ref,0)}return[obj,ref]}}throw new FormatError(\"The Linearization dictionary doesn't point to a valid Page dictionary.\")}catch(reason){warn(`_getLinearizationPage: \"${reason.message}\".`);return catalog.getPageDict(pageIndex)}}getPage(pageIndex){const cachedPromise=this.#pagePromises.get(pageIndex);if(cachedPromise){return cachedPromise}const{catalog:catalog,linearization:linearization,xfaFactory:xfaFactory}=this;let promise;if(xfaFactory){promise=Promise.resolve([Dict.empty,null])}else if(linearization?.pageFirst===pageIndex){promise=this.#getLinearizationPage(pageIndex)}else{promise=catalog.getPageDict(pageIndex)}promise=promise.then((([pageDict,ref])=>new Page({pdfManager:this.pdfManager,xref:this.xref,pageIndex:pageIndex,pageDict:pageDict,ref:ref,globalIdFactory:this._globalIdFactory,fontCache:catalog.fontCache,builtInCMapCache:catalog.builtInCMapCache,standardFontDataCache:catalog.standardFontDataCache,globalColorSpaceCache:catalog.globalColorSpaceCache,globalImageCache:catalog.globalImageCache,systemFontCache:catalog.systemFontCache,nonBlendModesSet:catalog.nonBlendModesSet,xfaFactory:xfaFactory})));this.#pagePromises.set(pageIndex,promise);return promise}async checkFirstPage(recoveryMode=false){if(recoveryMode){return}try{await this.getPage(0)}catch(reason){if(reason instanceof XRefEntryException){this.#pagePromises.delete(0);await this.cleanup();throw new XRefParseException}}}async checkLastPage(recoveryMode=false){const{catalog:catalog,pdfManager:pdfManager}=this;catalog.setActualNumPages();let numPages;try{await Promise.all([pdfManager.ensureDoc(\"xfaFactory\"),pdfManager.ensureDoc(\"linearization\"),pdfManager.ensureCatalog(\"numPages\")]);if(this.xfaFactory){return}else if(this.linearization){numPages=this.linearization.numPages}else{numPages=catalog.numPages}if(!Number.isInteger(numPages)){throw new FormatError(\"Page count is not an integer.\")}else if(numPages<=1){return}await this.getPage(numPages-1)}catch(reason){this.#pagePromises.delete(numPages-1);await this.cleanup();if(reason instanceof XRefEntryException&&!recoveryMode){throw new XRefParseException}warn(`checkLastPage - invalid /Pages tree /Count: ${numPages}.`);let pagesTree;try{pagesTree=await catalog.getAllPageDicts(recoveryMode)}catch(reasonAll){if(reasonAll instanceof XRefEntryException&&!recoveryMode){throw new XRefParseException}catalog.setActualNumPages(1);return}for(const[pageIndex,[pageDict,ref]]of pagesTree){let promise;if(pageDict instanceof Error){promise=Promise.reject(pageDict);promise.catch((()=>{}))}else{promise=Promise.resolve(new Page({pdfManager:pdfManager,xref:this.xref,pageIndex:pageIndex,pageDict:pageDict,ref:ref,globalIdFactory:this._globalIdFactory,fontCache:catalog.fontCache,builtInCMapCache:catalog.builtInCMapCache,standardFontDataCache:catalog.standardFontDataCache,globalColorSpaceCache:this.globalColorSpaceCache,globalImageCache:catalog.globalImageCache,systemFontCache:catalog.systemFontCache,nonBlendModesSet:catalog.nonBlendModesSet,xfaFactory:null}))}this.#pagePromises.set(pageIndex,promise)}catalog.setActualNumPages(pagesTree.size)}}async fontFallback(id,handler){const{catalog:catalog,pdfManager:pdfManager}=this;for(const translatedFont of await Promise.all(catalog.fontCache)){if(translatedFont.loadedName===id){translatedFont.fallback(handler,pdfManager.evaluatorOptions);return}}}async cleanup(manuallyTriggered=false){return this.catalog?this.catalog.cleanup(manuallyTriggered):clearGlobalCaches()}async#collectFieldObjects(name,parentRef,fieldRef,promises,annotationGlobals,visitedRefs,orphanFields){const{xref:xref}=this;if(!(fieldRef instanceof Ref)||visitedRefs.has(fieldRef)){return}visitedRefs.put(fieldRef);const field=await xref.fetchAsync(fieldRef);if(!(field instanceof Dict)){return}let subtype=await field.getAsync(\"Subtype\");subtype=subtype instanceof Name?subtype.name:null;switch(subtype){case\"Link\":return}if(field.has(\"T\")){const partName=stringToPDFString(await field.getAsync(\"T\"));name=name===\"\"?partName:`${name}.${partName}`}else{let obj=field;while(true){obj=obj.getRaw(\"Parent\")||parentRef;if(obj instanceof Ref){if(visitedRefs.has(obj)){break}obj=await xref.fetchAsync(obj)}if(!(obj instanceof Dict)){break}if(obj.has(\"T\")){const partName=stringToPDFString(await obj.getAsync(\"T\"));name=name===\"\"?partName:`${name}.${partName}`;break}}}if(parentRef&&!field.has(\"Parent\")&&isName(field.get(\"Subtype\"),\"Widget\")){orphanFields.put(fieldRef,parentRef)}if(!promises.has(name)){promises.set(name,[])}promises.get(name).push(AnnotationFactory.create(xref,fieldRef,annotationGlobals,null,true,orphanFields,null).then((annotation=>annotation?.getFieldObject())).catch((function(reason){warn(`#collectFieldObjects: \"${reason}\".`);return null})));if(!field.has(\"Kids\")){return}const kids=await field.getAsync(\"Kids\");if(Array.isArray(kids)){for(const kid of kids){await this.#collectFieldObjects(name,fieldRef,kid,promises,annotationGlobals,visitedRefs,orphanFields)}}}get fieldObjects(){const promise=this.pdfManager.ensureDoc(\"formInfo\").then((async formInfo=>{if(!formInfo.hasFields){return null}const annotationGlobals=await this.annotationGlobals;if(!annotationGlobals){return null}const{acroForm:acroForm}=annotationGlobals;const visitedRefs=new RefSet;const allFields=Object.create(null);const fieldPromises=new Map;const orphanFields=new RefSetCache;for(const fieldRef of acroForm.get(\"Fields\")){await this.#collectFieldObjects(\"\",null,fieldRef,fieldPromises,annotationGlobals,visitedRefs,orphanFields)}const allPromises=[];for(const[name,promises]of fieldPromises){allPromises.push(Promise.all(promises).then((fields=>{fields=fields.filter((field=>!!field));if(fields.length>0){allFields[name]=fields}})))}await Promise.all(allPromises);return{allFields:objectSize(allFields)>0?allFields:null,orphanFields:orphanFields}}));return shadow(this,\"fieldObjects\",promise)}get hasJSActions(){const promise=this.pdfManager.ensureDoc(\"_parseHasJSActions\");return shadow(this,\"hasJSActions\",promise)}async _parseHasJSActions(){const[catalogJsActions,fieldObjects]=await Promise.all([this.pdfManager.ensureCatalog(\"jsActions\"),this.pdfManager.ensureDoc(\"fieldObjects\")]);if(catalogJsActions){return true}if(fieldObjects?.allFields){return Object.values(fieldObjects.allFields).some((fieldObject=>fieldObject.some((object=>object.actions!==null))))}return false}get calculationOrderIds(){const calculationOrder=this.catalog.acroForm?.get(\"CO\");if(!Array.isArray(calculationOrder)||calculationOrder.length===0){return shadow(this,\"calculationOrderIds\",null)}const ids=[];for(const id of calculationOrder){if(id instanceof Ref){ids.push(id.toString())}}return shadow(this,\"calculationOrderIds\",ids.length?ids:null)}get annotationGlobals(){return shadow(this,\"annotationGlobals\",AnnotationFactory.createGlobals(this.pdfManager))}}function parseDocBaseUrl(url){if(url){const absoluteUrl=createValidAbsoluteUrl(url);if(absoluteUrl){return absoluteUrl.href}warn(`Invalid absolute docBaseUrl: \"${url}\".`)}return null}class BasePdfManager{constructor({docBaseUrl:docBaseUrl,docId:docId,enableXfa:enableXfa,evaluatorOptions:evaluatorOptions,handler:handler,password:password}){this._docBaseUrl=parseDocBaseUrl(docBaseUrl);this._docId=docId;this._password=password;this.enableXfa=enableXfa;evaluatorOptions.isOffscreenCanvasSupported&&=FeatureTest.isOffscreenCanvasSupported;evaluatorOptions.isImageDecoderSupported&&=FeatureTest.isImageDecoderSupported;this.evaluatorOptions=Object.freeze(evaluatorOptions);ImageResizer.setOptions(evaluatorOptions);JpegStream.setOptions(evaluatorOptions);OperatorList.setOptions(evaluatorOptions);const options={...evaluatorOptions,handler:handler};JpxImage.setOptions(options);IccColorSpace.setOptions(options);CmykICCBasedCS.setOptions(options)}get docId(){return this._docId}get password(){return this._password}get docBaseUrl(){return this._docBaseUrl}ensureDoc(prop,args){return this.ensure(this.pdfDocument,prop,args)}ensureXRef(prop,args){return this.ensure(this.pdfDocument.xref,prop,args)}ensureCatalog(prop,args){return this.ensure(this.pdfDocument.catalog,prop,args)}getPage(pageIndex){return this.pdfDocument.getPage(pageIndex)}fontFallback(id,handler){return this.pdfDocument.fontFallback(id,handler)}cleanup(manuallyTriggered=false){return this.pdfDocument.cleanup(manuallyTriggered)}async ensure(obj,prop,args){unreachable(\"Abstract method `ensure` called\")}requestRange(begin,end){unreachable(\"Abstract method `requestRange` called\")}requestLoadedStream(noFetch=false){unreachable(\"Abstract method `requestLoadedStream` called\")}sendProgressiveData(chunk){unreachable(\"Abstract method `sendProgressiveData` called\")}updatePassword(password){this._password=password}terminate(reason){unreachable(\"Abstract method `terminate` called\")}}class LocalPdfManager extends BasePdfManager{constructor(args){super(args);const stream=new Stream(args.source);this.pdfDocument=new PDFDocument(this,stream);this._loadedStreamPromise=Promise.resolve(stream)}async ensure(obj,prop,args){const value=obj[prop];if(typeof value===\"function\"){return value.apply(obj,args)}return value}requestRange(begin,end){return Promise.resolve()}requestLoadedStream(noFetch=false){return this._loadedStreamPromise}terminate(reason){}}class NetworkPdfManager extends BasePdfManager{constructor(args){super(args);this.streamManager=new ChunkedStreamManager(args.source,{msgHandler:args.handler,length:args.length,disableAutoFetch:args.disableAutoFetch,rangeChunkSize:args.rangeChunkSize});this.pdfDocument=new PDFDocument(this,this.streamManager.getStream())}async ensure(obj,prop,args){try{const value=obj[prop];if(typeof value===\"function\"){return value.apply(obj,args)}return value}catch(ex){if(!(ex instanceof MissingDataException)){throw ex}await this.requestRange(ex.begin,ex.end);return this.ensure(obj,prop,args)}}requestRange(begin,end){return this.streamManager.requestRange(begin,end)}requestLoadedStream(noFetch=false){return this.streamManager.requestAllChunks(noFetch)}sendProgressiveData(chunk){this.streamManager.onReceiveData({chunk:chunk})}terminate(reason){this.streamManager.abort(reason)}}const CallbackKind={DATA:1,ERROR:2};const StreamKind={CANCEL:1,CANCEL_COMPLETE:2,CLOSE:3,ENQUEUE:4,ERROR:5,PULL:6,PULL_COMPLETE:7,START_COMPLETE:8};function onFn(){}function wrapReason(ex){if(ex instanceof AbortException||ex instanceof InvalidPDFException||ex instanceof PasswordException||ex instanceof ResponseException||ex instanceof UnknownErrorException){return ex}if(!(ex instanceof Error||typeof ex===\"object\"&&ex!==null)){unreachable('wrapReason: Expected \"reason\" to be a (possibly cloned) Error.')}switch(ex.name){case\"AbortException\":return new AbortException(ex.message);case\"InvalidPDFException\":return new InvalidPDFException(ex.message);case\"PasswordException\":return new PasswordException(ex.message,ex.code);case\"ResponseException\":return new ResponseException(ex.message,ex.status,ex.missing);case\"UnknownErrorException\":return new UnknownErrorException(ex.message,ex.details)}return new UnknownErrorException(ex.message,ex.toString())}class MessageHandler{#messageAC=new AbortController;constructor(sourceName,targetName,comObj){this.sourceName=sourceName;this.targetName=targetName;this.comObj=comObj;this.callbackId=1;this.streamId=1;this.streamSinks=Object.create(null);this.streamControllers=Object.create(null);this.callbackCapabilities=Object.create(null);this.actionHandler=Object.create(null);comObj.addEventListener(\"message\",this.#onMessage.bind(this),{signal:this.#messageAC.signal})}#onMessage({data:data}){if(data.targetName!==this.sourceName){return}if(data.stream){this.#processStreamMessage(data);return}if(data.callback){const callbackId=data.callbackId;const capability=this.callbackCapabilities[callbackId];if(!capability){throw new Error(`Cannot resolve callback ${callbackId}`)}delete this.callbackCapabilities[callbackId];if(data.callback===CallbackKind.DATA){capability.resolve(data.data)}else if(data.callback===CallbackKind.ERROR){capability.reject(wrapReason(data.reason))}else{throw new Error(\"Unexpected callback case\")}return}const action=this.actionHandler[data.action];if(!action){throw new Error(`Unknown action from worker: ${data.action}`)}if(data.callbackId){const sourceName=this.sourceName,targetName=data.sourceName,comObj=this.comObj;Promise.try(action,data.data).then((function(result){comObj.postMessage({sourceName:sourceName,targetName:targetName,callback:CallbackKind.DATA,callbackId:data.callbackId,data:result})}),(function(reason){comObj.postMessage({sourceName:sourceName,targetName:targetName,callback:CallbackKind.ERROR,callbackId:data.callbackId,reason:wrapReason(reason)})}));return}if(data.streamId){this.#createStreamSink(data);return}action(data.data)}on(actionName,handler){const ah=this.actionHandler;if(ah[actionName]){throw new Error(`There is already an actionName called \"${actionName}\"`)}ah[actionName]=handler}send(actionName,data,transfers){this.comObj.postMessage({sourceName:this.sourceName,targetName:this.targetName,action:actionName,data:data},transfers)}sendWithPromise(actionName,data,transfers){const callbackId=this.callbackId++;const capability=Promise.withResolvers();this.callbackCapabilities[callbackId]=capability;try{this.comObj.postMessage({sourceName:this.sourceName,targetName:this.targetName,action:actionName,callbackId:callbackId,data:data},transfers)}catch(ex){capability.reject(ex)}return capability.promise}sendWithStream(actionName,data,queueingStrategy,transfers){const streamId=this.streamId++,sourceName=this.sourceName,targetName=this.targetName,comObj=this.comObj;return new ReadableStream({start:controller=>{const startCapability=Promise.withResolvers();this.streamControllers[streamId]={controller:controller,startCall:startCapability,pullCall:null,cancelCall:null,isClosed:false};comObj.postMessage({sourceName:sourceName,targetName:targetName,action:actionName,streamId:streamId,data:data,desiredSize:controller.desiredSize},transfers);return startCapability.promise},pull:controller=>{const pullCapability=Promise.withResolvers();this.streamControllers[streamId].pullCall=pullCapability;comObj.postMessage({sourceName:sourceName,targetName:targetName,stream:StreamKind.PULL,streamId:streamId,desiredSize:controller.desiredSize});return pullCapability.promise},cancel:reason=>{assert(reason instanceof Error,\"cancel must have a valid reason\");const cancelCapability=Promise.withResolvers();this.streamControllers[streamId].cancelCall=cancelCapability;this.streamControllers[streamId].isClosed=true;comObj.postMessage({sourceName:sourceName,targetName:targetName,stream:StreamKind.CANCEL,streamId:streamId,reason:wrapReason(reason)});return cancelCapability.promise}},queueingStrategy)}#createStreamSink(data){const streamId=data.streamId,sourceName=this.sourceName,targetName=data.sourceName,comObj=this.comObj;const self=this,action=this.actionHandler[data.action];const streamSink={enqueue(chunk,size=1,transfers){if(this.isCancelled){return}const lastDesiredSize=this.desiredSize;this.desiredSize-=size;if(lastDesiredSize>0&&this.desiredSize<=0){this.sinkCapability=Promise.withResolvers();this.ready=this.sinkCapability.promise}comObj.postMessage({sourceName:sourceName,targetName:targetName,stream:StreamKind.ENQUEUE,streamId:streamId,chunk:chunk},transfers)},close(){if(this.isCancelled){return}this.isCancelled=true;comObj.postMessage({sourceName:sourceName,targetName:targetName,stream:StreamKind.CLOSE,streamId:streamId});delete self.streamSinks[streamId]},error(reason){assert(reason instanceof Error,\"error must have a valid reason\");if(this.isCancelled){return}this.isCancelled=true;comObj.postMessage({sourceName:sourceName,targetName:targetName,stream:StreamKind.ERROR,streamId:streamId,reason:wrapReason(reason)})},sinkCapability:Promise.withResolvers(),onPull:null,onCancel:null,isCancelled:false,desiredSize:data.desiredSize,ready:null};streamSink.sinkCapability.resolve();streamSink.ready=streamSink.sinkCapability.promise;this.streamSinks[streamId]=streamSink;Promise.try(action,data.data,streamSink).then((function(){comObj.postMessage({sourceName:sourceName,targetName:targetName,stream:StreamKind.START_COMPLETE,streamId:streamId,success:true})}),(function(reason){comObj.postMessage({sourceName:sourceName,targetName:targetName,stream:StreamKind.START_COMPLETE,streamId:streamId,reason:wrapReason(reason)})}))}#processStreamMessage(data){const streamId=data.streamId,sourceName=this.sourceName,targetName=data.sourceName,comObj=this.comObj;const streamController=this.streamControllers[streamId],streamSink=this.streamSinks[streamId];switch(data.stream){case StreamKind.START_COMPLETE:if(data.success){streamController.startCall.resolve()}else{streamController.startCall.reject(wrapReason(data.reason))}break;case StreamKind.PULL_COMPLETE:if(data.success){streamController.pullCall.resolve()}else{streamController.pullCall.reject(wrapReason(data.reason))}break;case StreamKind.PULL:if(!streamSink){comObj.postMessage({sourceName:sourceName,targetName:targetName,stream:StreamKind.PULL_COMPLETE,streamId:streamId,success:true});break}if(streamSink.desiredSize<=0&&data.desiredSize>0){streamSink.sinkCapability.resolve()}streamSink.desiredSize=data.desiredSize;Promise.try(streamSink.onPull||onFn).then((function(){comObj.postMessage({sourceName:sourceName,targetName:targetName,stream:StreamKind.PULL_COMPLETE,streamId:streamId,success:true})}),(function(reason){comObj.postMessage({sourceName:sourceName,targetName:targetName,stream:StreamKind.PULL_COMPLETE,streamId:streamId,reason:wrapReason(reason)})}));break;case StreamKind.ENQUEUE:assert(streamController,\"enqueue should have stream controller\");if(streamController.isClosed){break}streamController.controller.enqueue(data.chunk);break;case StreamKind.CLOSE:assert(streamController,\"close should have stream controller\");if(streamController.isClosed){break}streamController.isClosed=true;streamController.controller.close();this.#deleteStreamController(streamController,streamId);break;case StreamKind.ERROR:assert(streamController,\"error should have stream controller\");streamController.controller.error(wrapReason(data.reason));this.#deleteStreamController(streamController,streamId);break;case StreamKind.CANCEL_COMPLETE:if(data.success){streamController.cancelCall.resolve()}else{streamController.cancelCall.reject(wrapReason(data.reason))}this.#deleteStreamController(streamController,streamId);break;case StreamKind.CANCEL:if(!streamSink){break}const dataReason=wrapReason(data.reason);Promise.try(streamSink.onCancel||onFn,dataReason).then((function(){comObj.postMessage({sourceName:sourceName,targetName:targetName,stream:StreamKind.CANCEL_COMPLETE,streamId:streamId,success:true})}),(function(reason){comObj.postMessage({sourceName:sourceName,targetName:targetName,stream:StreamKind.CANCEL_COMPLETE,streamId:streamId,reason:wrapReason(reason)})}));streamSink.sinkCapability.reject(dataReason);streamSink.isCancelled=true;delete this.streamSinks[streamId];break;default:throw new Error(\"Unexpected stream case\")}}async#deleteStreamController(streamController,streamId){await Promise.allSettled([streamController.startCall?.promise,streamController.pullCall?.promise,streamController.cancelCall?.promise]);delete this.streamControllers[streamId]}destroy(){this.#messageAC?.abort();this.#messageAC=null}}async function writeObject(ref,obj,buffer,{encrypt:encrypt=null}){const transform=encrypt?.createCipherTransform(ref.num,ref.gen);buffer.push(`${ref.num} ${ref.gen} obj\\n`);if(obj instanceof Dict){await writeDict(obj,buffer,transform)}else if(obj instanceof BaseStream){await writeStream(obj,buffer,transform)}else if(Array.isArray(obj)||ArrayBuffer.isView(obj)){await writeArray(obj,buffer,transform)}buffer.push(\"\\nendobj\\n\")}async function writeDict(dict,buffer,transform){buffer.push(\"<<\");for(const key of dict.getKeys()){buffer.push(` /${escapePDFName(key)} `);await writeValue(dict.getRaw(key),buffer,transform)}buffer.push(\">>\")}async function writeStream(stream,buffer,transform){let bytes=stream.getBytes();const{dict:dict}=stream;const[filter,params]=await Promise.all([dict.getAsync(\"Filter\"),dict.getAsync(\"DecodeParms\")]);const filterZero=Array.isArray(filter)?await dict.xref.fetchIfRefAsync(filter[0]):filter;const isFilterZeroFlateDecode=isName(filterZero,\"FlateDecode\");const MIN_LENGTH_FOR_COMPRESSING=256;if(bytes.length>=MIN_LENGTH_FOR_COMPRESSING||isFilterZeroFlateDecode){try{const cs=new CompressionStream(\"deflate\");const writer=cs.writable.getWriter();await writer.ready;writer.write(bytes).then((async()=>{await writer.ready;await writer.close()})).catch((()=>{}));const buf=await new Response(cs.readable).arrayBuffer();bytes=new Uint8Array(buf);let newFilter,newParams;if(!filter){newFilter=Name.get(\"FlateDecode\")}else if(!isFilterZeroFlateDecode){newFilter=Array.isArray(filter)?[Name.get(\"FlateDecode\"),...filter]:[Name.get(\"FlateDecode\"),filter];if(params){newParams=Array.isArray(params)?[null,...params]:[null,params]}}if(newFilter){dict.set(\"Filter\",newFilter)}if(newParams){dict.set(\"DecodeParms\",newParams)}}catch(ex){info(`writeStream - cannot compress data: \"${ex}\".`)}}let string=bytesToString(bytes);if(transform){string=transform.encryptString(string)}dict.set(\"Length\",string.length);await writeDict(dict,buffer,transform);buffer.push(\" stream\\n\",string,\"\\nendstream\")}async function writeArray(array,buffer,transform){buffer.push(\"[\");let first=true;for(const val of array){if(!first){buffer.push(\" \")}else{first=false}await writeValue(val,buffer,transform)}buffer.push(\"]\")}async function writeValue(value,buffer,transform){if(value instanceof Name){buffer.push(`/${escapePDFName(value.name)}`)}else if(value instanceof Ref){buffer.push(`${value.num} ${value.gen} R`)}else if(Array.isArray(value)||ArrayBuffer.isView(value)){await writeArray(value,buffer,transform)}else if(typeof value===\"string\"){if(transform){value=transform.encryptString(value)}buffer.push(`(${escapeString(value)})`)}else if(typeof value===\"number\"){buffer.push(numberToString(value))}else if(typeof value===\"boolean\"){buffer.push(value.toString())}else if(value instanceof Dict){await writeDict(value,buffer,transform)}else if(value instanceof BaseStream){await writeStream(value,buffer,transform)}else if(value===null){buffer.push(\"null\")}else{warn(`Unhandled value in writer: ${typeof value}, please file a bug.`)}}function writeInt(number,size,offset,buffer){for(let i=size+offset-1;i>offset-1;i--){buffer[i]=number&255;number>>=8}return offset+size}function writeString(string,offset,buffer){const ii=string.length;for(let i=0;i<ii;i++){buffer[offset+i]=string.charCodeAt(i)&255}return offset+ii}function computeMD5(filesize,xrefInfo){const time=Math.floor(Date.now()/1e3);const filename=xrefInfo.filename||\"\";const md5Buffer=[time.toString(),filename,filesize.toString(),...xrefInfo.infoMap.values()];const md5BufferLen=Math.sumPrecise(md5Buffer.map((str=>str.length)));const array=new Uint8Array(md5BufferLen);let offset=0;for(const str of md5Buffer){offset=writeString(str,offset,array)}return bytesToString(calculateMD5(array,0,array.length))}function writeXFADataForAcroform(str,changes){const xml=new SimpleXMLParser({hasAttributes:true}).parseFromString(str);for(const{xfa:xfa}of changes){if(!xfa){continue}const{path:path,value:value}=xfa;if(!path){continue}const nodePath=parseXFAPath(path);let node=xml.documentElement.searchNode(nodePath,0);if(!node&&nodePath.length>1){node=xml.documentElement.searchNode([nodePath.at(-1)],0)}if(node){node.childNodes=Array.isArray(value)?value.map((val=>new SimpleDOMNode(\"value\",val))):[new SimpleDOMNode(\"#text\",value)]}else{warn(`Node not found for path: ${path}`)}}const buffer=[];xml.documentElement.dump(buffer);return buffer.join(\"\")}async function updateAcroform({xref:xref,acroForm:acroForm,acroFormRef:acroFormRef,hasXfa:hasXfa,hasXfaDatasetsEntry:hasXfaDatasetsEntry,xfaDatasetsRef:xfaDatasetsRef,needAppearances:needAppearances,changes:changes}){if(hasXfa&&!hasXfaDatasetsEntry&&!xfaDatasetsRef){warn(\"XFA - Cannot save it\")}if(!needAppearances&&(!hasXfa||!xfaDatasetsRef||hasXfaDatasetsEntry)){return}const dict=acroForm.clone();if(hasXfa&&!hasXfaDatasetsEntry){const newXfa=acroForm.get(\"XFA\").slice();newXfa.splice(2,0,\"datasets\");newXfa.splice(3,0,xfaDatasetsRef);dict.set(\"XFA\",newXfa)}if(needAppearances){dict.set(\"NeedAppearances\",true)}changes.put(acroFormRef,{data:dict})}function updateXFA({xfaData:xfaData,xfaDatasetsRef:xfaDatasetsRef,changes:changes,xref:xref}){if(xfaData===null){const datasets=xref.fetchIfRef(xfaDatasetsRef);xfaData=writeXFADataForAcroform(datasets.getString(),changes)}const xfaDataStream=new StringStream(xfaData);xfaDataStream.dict=new Dict(xref);xfaDataStream.dict.set(\"Type\",Name.get(\"EmbeddedFile\"));changes.put(xfaDatasetsRef,{data:xfaDataStream})}async function getXRefTable(xrefInfo,baseOffset,newRefs,newXref,buffer){buffer.push(\"xref\\n\");const indexes=getIndexes(newRefs);let indexesPosition=0;for(const{ref:ref,data:data}of newRefs){if(ref.num===indexes[indexesPosition]){buffer.push(`${indexes[indexesPosition]} ${indexes[indexesPosition+1]}\\n`);indexesPosition+=2}if(data!==null){buffer.push(`${baseOffset.toString().padStart(10,\"0\")} ${Math.min(ref.gen,65535).toString().padStart(5,\"0\")} n\\r\\n`);baseOffset+=data.length}else{buffer.push(`0000000000 ${Math.min(ref.gen+1,65535).toString().padStart(5,\"0\")} f\\r\\n`)}}computeIDs(baseOffset,xrefInfo,newXref);buffer.push(\"trailer\\n\");await writeDict(newXref,buffer);buffer.push(\"\\nstartxref\\n\",baseOffset.toString(),\"\\n%%EOF\\n\")}function getIndexes(newRefs){const indexes=[];for(const{ref:ref}of newRefs){if(ref.num===indexes.at(-2)+indexes.at(-1)){indexes[indexes.length-1]+=1}else{indexes.push(ref.num,1)}}return indexes}async function getXRefStreamTable(xrefInfo,baseOffset,newRefs,newXref,buffer){const xrefTableData=[];let maxOffset=0;let maxGen=0;for(const{ref:ref,data:data}of newRefs){let gen;maxOffset=Math.max(maxOffset,baseOffset);if(data!==null){gen=Math.min(ref.gen,65535);xrefTableData.push([1,baseOffset,gen]);baseOffset+=data.length}else{gen=Math.min(ref.gen+1,65535);xrefTableData.push([0,0,gen])}maxGen=Math.max(maxGen,gen)}newXref.set(\"Index\",getIndexes(newRefs));const offsetSize=getSizeInBytes(maxOffset);const maxGenSize=getSizeInBytes(maxGen);const sizes=[1,offsetSize,maxGenSize];newXref.set(\"W\",sizes);computeIDs(baseOffset,xrefInfo,newXref);const structSize=Math.sumPrecise(sizes);const data=new Uint8Array(structSize*xrefTableData.length);const stream=new Stream(data);stream.dict=newXref;let offset=0;for(const[type,objOffset,gen]of xrefTableData){offset=writeInt(type,sizes[0],offset,data);offset=writeInt(objOffset,sizes[1],offset,data);offset=writeInt(gen,sizes[2],offset,data)}await writeObject(xrefInfo.newRef,stream,buffer,{});buffer.push(\"startxref\\n\",baseOffset.toString(),\"\\n%%EOF\\n\")}function computeIDs(baseOffset,xrefInfo,newXref){if(Array.isArray(xrefInfo.fileIds)&&xrefInfo.fileIds.length>0){const md5=computeMD5(baseOffset,xrefInfo);newXref.set(\"ID\",[xrefInfo.fileIds[0],md5])}}function getTrailerDict(xrefInfo,changes,useXrefStream){const newXref=new Dict(null);newXref.set(\"Prev\",xrefInfo.startXRef);const refForXrefTable=xrefInfo.newRef;if(useXrefStream){changes.put(refForXrefTable,{data:\"\"});newXref.set(\"Size\",refForXrefTable.num+1);newXref.set(\"Type\",Name.get(\"XRef\"))}else{newXref.set(\"Size\",refForXrefTable.num)}if(xrefInfo.rootRef!==null){newXref.set(\"Root\",xrefInfo.rootRef)}if(xrefInfo.infoRef!==null){newXref.set(\"Info\",xrefInfo.infoRef)}if(xrefInfo.encryptRef!==null){newXref.set(\"Encrypt\",xrefInfo.encryptRef)}return newXref}async function writeChanges(changes,xref,buffer=[]){const newRefs=[];for(const[ref,{data:data}]of changes.items()){if(data===null||typeof data===\"string\"){newRefs.push({ref:ref,data:data});continue}await writeObject(ref,data,buffer,xref);newRefs.push({ref:ref,data:buffer.join(\"\")});buffer.length=0}return newRefs.sort(((a,b)=>a.ref.num-b.ref.num))}async function incrementalUpdate({originalData:originalData,xrefInfo:xrefInfo,changes:changes,xref:xref=null,hasXfa:hasXfa=false,xfaDatasetsRef:xfaDatasetsRef=null,hasXfaDatasetsEntry:hasXfaDatasetsEntry=false,needAppearances:needAppearances,acroFormRef:acroFormRef=null,acroForm:acroForm=null,xfaData:xfaData=null,useXrefStream:useXrefStream=false}){await updateAcroform({xref:xref,acroForm:acroForm,acroFormRef:acroFormRef,hasXfa:hasXfa,hasXfaDatasetsEntry:hasXfaDatasetsEntry,xfaDatasetsRef:xfaDatasetsRef,needAppearances:needAppearances,changes:changes});if(hasXfa){updateXFA({xfaData:xfaData,xfaDatasetsRef:xfaDatasetsRef,changes:changes,xref:xref})}const newXref=getTrailerDict(xrefInfo,changes,useXrefStream);const buffer=[];const newRefs=await writeChanges(changes,xref,buffer);let baseOffset=originalData.length;const lastByte=originalData.at(-1);if(lastByte!==10&&lastByte!==13){buffer.push(\"\\n\");baseOffset+=1}for(const{data:data}of newRefs){if(data!==null){buffer.push(data)}}await(useXrefStream?getXRefStreamTable(xrefInfo,baseOffset,newRefs,newXref,buffer):getXRefTable(xrefInfo,baseOffset,newRefs,newXref,buffer));const totalLength=originalData.length+Math.sumPrecise(buffer.map((str=>str.length)));const array=new Uint8Array(totalLength);array.set(originalData);let offset=originalData.length;for(const str of buffer){offset=writeString(str,offset,array)}return array}class PDFWorkerStream{constructor(msgHandler){this._msgHandler=msgHandler;this._contentLength=null;this._fullRequestReader=null;this._rangeRequestReaders=[]}getFullReader(){assert(!this._fullRequestReader,\"PDFWorkerStream.getFullReader can only be called once.\");this._fullRequestReader=new PDFWorkerStreamReader(this._msgHandler);return this._fullRequestReader}getRangeReader(begin,end){const reader=new PDFWorkerStreamRangeReader(begin,end,this._msgHandler);this._rangeRequestReaders.push(reader);return reader}cancelAllRequests(reason){this._fullRequestReader?.cancel(reason);for(const reader of this._rangeRequestReaders.slice(0)){reader.cancel(reason)}}}class PDFWorkerStreamReader{constructor(msgHandler){this._msgHandler=msgHandler;this.onProgress=null;this._contentLength=null;this._isRangeSupported=false;this._isStreamingSupported=false;const readableStream=this._msgHandler.sendWithStream(\"GetReader\");this._reader=readableStream.getReader();this._headersReady=this._msgHandler.sendWithPromise(\"ReaderHeadersReady\").then((data=>{this._isStreamingSupported=data.isStreamingSupported;this._isRangeSupported=data.isRangeSupported;this._contentLength=data.contentLength}))}get headersReady(){return this._headersReady}get contentLength(){return this._contentLength}get isStreamingSupported(){return this._isStreamingSupported}get isRangeSupported(){return this._isRangeSupported}async read(){const{value:value,done:done}=await this._reader.read();if(done){return{value:undefined,done:true}}return{value:value.buffer,done:false}}cancel(reason){this._reader.cancel(reason)}}class PDFWorkerStreamRangeReader{constructor(begin,end,msgHandler){this._msgHandler=msgHandler;this.onProgress=null;const readableStream=this._msgHandler.sendWithStream(\"GetRangeReader\",{begin:begin,end:end});this._reader=readableStream.getReader()}get isStreamingSupported(){return false}async read(){const{value:value,done:done}=await this._reader.read();if(done){return{value:undefined,done:true}}return{value:value.buffer,done:false}}cancel(reason){this._reader.cancel(reason)}}class WorkerTask{constructor(name){this.name=name;this.terminated=false;this._capability=Promise.withResolvers()}get finished(){return this._capability.promise}finish(){this._capability.resolve()}terminate(){this.terminated=true}ensureNotTerminated(){if(this.terminated){throw new Error(\"Worker task was terminated\")}}}class WorkerMessageHandler{static{if(typeof window===\"undefined\"&&!isNodeJS&&typeof self!==\"undefined\"&&typeof self.postMessage===\"function\"&&\"onmessage\"in self){this.initializeFromPort(self)}}static setup(handler,port){let testMessageProcessed=false;handler.on(\"test\",(data=>{if(testMessageProcessed){return}testMessageProcessed=true;handler.send(\"test\",data instanceof Uint8Array)}));handler.on(\"configure\",(data=>{setVerbosityLevel(data.verbosity)}));handler.on(\"GetDocRequest\",(data=>this.createDocumentHandler(data,port)))}static createDocumentHandler(docParams,port){let pdfManager;let terminated=false;let cancelXHRs=null;const WorkerTasks=new Set;const verbosity=getVerbosityLevel();const{docId:docId,apiVersion:apiVersion}=docParams;const workerVersion=\"5.2.177\";if(apiVersion!==workerVersion){throw new Error(`The API version \"${apiVersion}\" does not match `+`the Worker version \"${workerVersion}\".`)}const buildMsg=(type,prop)=>`The \\`${type}.prototype\\` contains unexpected enumerable property `+`\"${prop}\", thus breaking e.g. \\`for...in\\` iteration of ${type}s.`;for(const prop in{}){throw new Error(buildMsg(\"Object\",prop))}for(const prop in[]){throw new Error(buildMsg(\"Array\",prop))}const workerHandlerName=docId+\"_worker\";let handler=new MessageHandler(workerHandlerName,docId,port);function ensureNotTerminated(){if(terminated){throw new Error(\"Worker was terminated\")}}function startWorkerTask(task){WorkerTasks.add(task)}function finishWorkerTask(task){task.finish();WorkerTasks.delete(task)}async function loadDocument(recoveryMode){await pdfManager.ensureDoc(\"checkHeader\");await pdfManager.ensureDoc(\"parseStartXRef\");await pdfManager.ensureDoc(\"parse\",[recoveryMode]);await pdfManager.ensureDoc(\"checkFirstPage\",[recoveryMode]);await pdfManager.ensureDoc(\"checkLastPage\",[recoveryMode]);const isPureXfa=await pdfManager.ensureDoc(\"isPureXfa\");if(isPureXfa){const task=new WorkerTask(\"loadXfaResources\");startWorkerTask(task);await pdfManager.ensureDoc(\"loadXfaResources\",[handler,task]);finishWorkerTask(task)}const[numPages,fingerprints]=await Promise.all([pdfManager.ensureDoc(\"numPages\"),pdfManager.ensureDoc(\"fingerprints\")]);const htmlForXfa=isPureXfa?await pdfManager.ensureDoc(\"htmlForXfa\"):null;return{numPages:numPages,fingerprints:fingerprints,htmlForXfa:htmlForXfa}}async function getPdfManager({data:data,password:password,disableAutoFetch:disableAutoFetch,rangeChunkSize:rangeChunkSize,length:length,docBaseUrl:docBaseUrl,enableXfa:enableXfa,evaluatorOptions:evaluatorOptions}){const pdfManagerArgs={source:null,disableAutoFetch:disableAutoFetch,docBaseUrl:docBaseUrl,docId:docId,enableXfa:enableXfa,evaluatorOptions:evaluatorOptions,handler:handler,length:length,password:password,rangeChunkSize:rangeChunkSize};if(data){pdfManagerArgs.source=data;return new LocalPdfManager(pdfManagerArgs)}const pdfStream=new PDFWorkerStream(handler),fullRequest=pdfStream.getFullReader();const pdfManagerCapability=Promise.withResolvers();let newPdfManager,cachedChunks=[],loaded=0;fullRequest.headersReady.then((function(){if(!fullRequest.isRangeSupported){return}pdfManagerArgs.source=pdfStream;pdfManagerArgs.length=fullRequest.contentLength;pdfManagerArgs.disableAutoFetch||=fullRequest.isStreamingSupported;newPdfManager=new NetworkPdfManager(pdfManagerArgs);for(const chunk of cachedChunks){newPdfManager.sendProgressiveData(chunk)}cachedChunks=[];pdfManagerCapability.resolve(newPdfManager);cancelXHRs=null})).catch((function(reason){pdfManagerCapability.reject(reason);cancelXHRs=null}));new Promise((function(resolve,reject){const readChunk=function({value:value,done:done}){try{ensureNotTerminated();if(done){if(!newPdfManager){const pdfFile=arrayBuffersToBytes(cachedChunks);cachedChunks=[];if(length&&pdfFile.length!==length){warn(\"reported HTTP length is different from actual\")}pdfManagerArgs.source=pdfFile;newPdfManager=new LocalPdfManager(pdfManagerArgs);pdfManagerCapability.resolve(newPdfManager)}cancelXHRs=null;return}loaded+=value.byteLength;if(!fullRequest.isStreamingSupported){handler.send(\"DocProgress\",{loaded:loaded,total:Math.max(loaded,fullRequest.contentLength||0)})}if(newPdfManager){newPdfManager.sendProgressiveData(value)}else{cachedChunks.push(value)}fullRequest.read().then(readChunk,reject)}catch(e){reject(e)}};fullRequest.read().then(readChunk,reject)})).catch((function(e){pdfManagerCapability.reject(e);cancelXHRs=null}));cancelXHRs=reason=>{pdfStream.cancelAllRequests(reason)};return pdfManagerCapability.promise}function setupDoc(data){function onSuccess(doc){ensureNotTerminated();handler.send(\"GetDoc\",{pdfInfo:doc})}function onFailure(ex){ensureNotTerminated();if(ex instanceof PasswordException){const task=new WorkerTask(`PasswordException: response ${ex.code}`);startWorkerTask(task);handler.sendWithPromise(\"PasswordRequest\",ex).then((function({password:password}){finishWorkerTask(task);pdfManager.updatePassword(password);pdfManagerReady()})).catch((function(){finishWorkerTask(task);handler.send(\"DocException\",ex)}))}else{handler.send(\"DocException\",wrapReason(ex))}}function pdfManagerReady(){ensureNotTerminated();loadDocument(false).then(onSuccess,(function(reason){ensureNotTerminated();if(!(reason instanceof XRefParseException)){onFailure(reason);return}pdfManager.requestLoadedStream().then((function(){ensureNotTerminated();loadDocument(true).then(onSuccess,onFailure)}))}))}ensureNotTerminated();getPdfManager(data).then((function(newPdfManager){if(terminated){newPdfManager.terminate(new AbortException(\"Worker was terminated.\"));throw new Error(\"Worker was terminated\")}pdfManager=newPdfManager;pdfManager.requestLoadedStream(true).then((stream=>{handler.send(\"DataLoaded\",{length:stream.bytes.byteLength})}))})).then(pdfManagerReady,onFailure)}handler.on(\"GetPage\",(function(data){return pdfManager.getPage(data.pageIndex).then((function(page){return Promise.all([pdfManager.ensure(page,\"rotate\"),pdfManager.ensure(page,\"ref\"),pdfManager.ensure(page,\"userUnit\"),pdfManager.ensure(page,\"view\")]).then((function([rotate,ref,userUnit,view]){return{rotate:rotate,ref:ref,refStr:ref?.toString()??null,userUnit:userUnit,view:view}}))}))}));handler.on(\"GetPageIndex\",(function(data){const pageRef=Ref.get(data.num,data.gen);return pdfManager.ensureCatalog(\"getPageIndex\",[pageRef])}));handler.on(\"GetDestinations\",(function(data){return pdfManager.ensureCatalog(\"destinations\")}));handler.on(\"GetDestination\",(function(data){return pdfManager.ensureCatalog(\"getDestination\",[data.id])}));handler.on(\"GetPageLabels\",(function(data){return pdfManager.ensureCatalog(\"pageLabels\")}));handler.on(\"GetPageLayout\",(function(data){return pdfManager.ensureCatalog(\"pageLayout\")}));handler.on(\"GetPageMode\",(function(data){return pdfManager.ensureCatalog(\"pageMode\")}));handler.on(\"GetViewerPreferences\",(function(data){return pdfManager.ensureCatalog(\"viewerPreferences\")}));handler.on(\"GetOpenAction\",(function(data){return pdfManager.ensureCatalog(\"openAction\")}));handler.on(\"GetAttachments\",(function(data){return pdfManager.ensureCatalog(\"attachments\")}));handler.on(\"GetDocJSActions\",(function(data){return pdfManager.ensureCatalog(\"jsActions\")}));handler.on(\"GetPageJSActions\",(function({pageIndex:pageIndex}){return pdfManager.getPage(pageIndex).then((page=>pdfManager.ensure(page,\"jsActions\")))}));handler.on(\"GetOutline\",(function(data){return pdfManager.ensureCatalog(\"documentOutline\")}));handler.on(\"GetOptionalContentConfig\",(function(data){return pdfManager.ensureCatalog(\"optionalContentConfig\")}));handler.on(\"GetPermissions\",(function(data){return pdfManager.ensureCatalog(\"permissions\")}));handler.on(\"GetMetadata\",(function(data){return Promise.all([pdfManager.ensureDoc(\"documentInfo\"),pdfManager.ensureCatalog(\"metadata\")])}));handler.on(\"GetMarkInfo\",(function(data){return pdfManager.ensureCatalog(\"markInfo\")}));handler.on(\"GetData\",(function(data){return pdfManager.requestLoadedStream().then((stream=>stream.bytes))}));handler.on(\"GetAnnotations\",(function({pageIndex:pageIndex,intent:intent}){return pdfManager.getPage(pageIndex).then((function(page){const task=new WorkerTask(`GetAnnotations: page ${pageIndex}`);startWorkerTask(task);return page.getAnnotationsData(handler,task,intent).then((data=>{finishWorkerTask(task);return data}),(reason=>{finishWorkerTask(task);throw reason}))}))}));handler.on(\"GetFieldObjects\",(function(data){return pdfManager.ensureDoc(\"fieldObjects\").then((fieldObjects=>fieldObjects?.allFields||null))}));handler.on(\"HasJSActions\",(function(data){return pdfManager.ensureDoc(\"hasJSActions\")}));handler.on(\"GetCalculationOrderIds\",(function(data){return pdfManager.ensureDoc(\"calculationOrderIds\")}));handler.on(\"SaveDocument\",(async function({isPureXfa:isPureXfa,numPages:numPages,annotationStorage:annotationStorage,filename:filename}){const globalPromises=[pdfManager.requestLoadedStream(),pdfManager.ensureCatalog(\"acroForm\"),pdfManager.ensureCatalog(\"acroFormRef\"),pdfManager.ensureDoc(\"startXRef\"),pdfManager.ensureDoc(\"xref\"),pdfManager.ensureDoc(\"linearization\"),pdfManager.ensureCatalog(\"structTreeRoot\")];const changes=new RefSetCache;const promises=[];const newAnnotationsByPage=!isPureXfa?getNewAnnotationsMap(annotationStorage):null;const[stream,acroForm,acroFormRef,startXRef,xref,linearization,_structTreeRoot]=await Promise.all(globalPromises);const catalogRef=xref.trailer.getRaw(\"Root\")||null;let structTreeRoot;if(newAnnotationsByPage){if(!_structTreeRoot){if(await StructTreeRoot.canCreateStructureTree({catalogRef:catalogRef,pdfManager:pdfManager,newAnnotationsByPage:newAnnotationsByPage})){structTreeRoot=null}}else if(await _structTreeRoot.canUpdateStructTree({pdfManager:pdfManager,newAnnotationsByPage:newAnnotationsByPage})){structTreeRoot=_structTreeRoot}const imagePromises=AnnotationFactory.generateImages(annotationStorage.values(),xref,pdfManager.evaluatorOptions.isOffscreenCanvasSupported);const newAnnotationPromises=structTreeRoot===undefined?promises:[];for(const[pageIndex,annotations]of newAnnotationsByPage){newAnnotationPromises.push(pdfManager.getPage(pageIndex).then((page=>{const task=new WorkerTask(`Save (editor): page ${pageIndex}`);startWorkerTask(task);return page.saveNewAnnotations(handler,task,annotations,imagePromises,changes).finally((function(){finishWorkerTask(task)}))})))}if(structTreeRoot===null){promises.push(Promise.all(newAnnotationPromises).then((async()=>{await StructTreeRoot.createStructureTree({newAnnotationsByPage:newAnnotationsByPage,xref:xref,catalogRef:catalogRef,pdfManager:pdfManager,changes:changes})})))}else if(structTreeRoot){promises.push(Promise.all(newAnnotationPromises).then((async()=>{await structTreeRoot.updateStructureTree({newAnnotationsByPage:newAnnotationsByPage,pdfManager:pdfManager,changes:changes})})))}}if(isPureXfa){promises.push(pdfManager.ensureDoc(\"serializeXfaData\",[annotationStorage]))}else{for(let pageIndex=0;pageIndex<numPages;pageIndex++){promises.push(pdfManager.getPage(pageIndex).then((function(page){const task=new WorkerTask(`Save: page ${pageIndex}`);startWorkerTask(task);return page.save(handler,task,annotationStorage,changes).finally((function(){finishWorkerTask(task)}))})))}}const refs=await Promise.all(promises);let xfaData=null;if(isPureXfa){xfaData=refs[0];if(!xfaData){return stream.bytes}}else if(changes.size===0){return stream.bytes}const needAppearances=acroFormRef&&acroForm instanceof Dict&&changes.values().some((ref=>ref.needAppearances));const xfa=acroForm instanceof Dict&&acroForm.get(\"XFA\")||null;let xfaDatasetsRef=null;let hasXfaDatasetsEntry=false;if(Array.isArray(xfa)){for(let i=0,ii=xfa.length;i<ii;i+=2){if(xfa[i]===\"datasets\"){xfaDatasetsRef=xfa[i+1];hasXfaDatasetsEntry=true}}if(xfaDatasetsRef===null){xfaDatasetsRef=xref.getNewTemporaryRef()}}else if(xfa){warn(\"Unsupported XFA type.\")}let newXrefInfo=Object.create(null);if(xref.trailer){const infoMap=new Map;const xrefInfo=xref.trailer.get(\"Info\")||null;if(xrefInfo instanceof Dict){for(const[key,value]of xrefInfo){if(typeof value===\"string\"){infoMap.set(key,stringToPDFString(value))}}}newXrefInfo={rootRef:catalogRef,encryptRef:xref.trailer.getRaw(\"Encrypt\")||null,newRef:xref.getNewTemporaryRef(),infoRef:xref.trailer.getRaw(\"Info\")||null,infoMap:infoMap,fileIds:xref.trailer.get(\"ID\")||null,startXRef:linearization?startXRef:xref.lastXRefStreamPos??startXRef,filename:filename}}return incrementalUpdate({originalData:stream.bytes,xrefInfo:newXrefInfo,changes:changes,xref:xref,hasXfa:!!xfa,xfaDatasetsRef:xfaDatasetsRef,hasXfaDatasetsEntry:hasXfaDatasetsEntry,needAppearances:needAppearances,acroFormRef:acroFormRef,acroForm:acroForm,xfaData:xfaData,useXrefStream:isDict(xref.topDict,\"XRef\")}).finally((()=>{xref.resetNewTemporaryRef()}))}));handler.on(\"GetOperatorList\",(function(data,sink){const pageIndex=data.pageIndex;pdfManager.getPage(pageIndex).then((function(page){const task=new WorkerTask(`GetOperatorList: page ${pageIndex}`);startWorkerTask(task);const start=verbosity>=VerbosityLevel.INFOS?Date.now():0;page.getOperatorList({handler:handler,sink:sink,task:task,intent:data.intent,cacheKey:data.cacheKey,annotationStorage:data.annotationStorage,modifiedIds:data.modifiedIds}).then((function(operatorListInfo){finishWorkerTask(task);if(start){info(`page=${pageIndex+1} - getOperatorList: time=`+`${Date.now()-start}ms, len=${operatorListInfo.length}`)}sink.close()}),(function(reason){finishWorkerTask(task);if(task.terminated){return}sink.error(reason)}))}))}));handler.on(\"GetTextContent\",(function(data,sink){const{pageIndex:pageIndex,includeMarkedContent:includeMarkedContent,disableNormalization:disableNormalization}=data;pdfManager.getPage(pageIndex).then((function(page){const task=new WorkerTask(\"GetTextContent: page \"+pageIndex);startWorkerTask(task);const start=verbosity>=VerbosityLevel.INFOS?Date.now():0;page.extractTextContent({handler:handler,task:task,sink:sink,includeMarkedContent:includeMarkedContent,disableNormalization:disableNormalization}).then((function(){finishWorkerTask(task);if(start){info(`page=${pageIndex+1} - getTextContent: time=`+`${Date.now()-start}ms`)}sink.close()}),(function(reason){finishWorkerTask(task);if(task.terminated){return}sink.error(reason)}))}))}));handler.on(\"GetStructTree\",(function(data){return pdfManager.getPage(data.pageIndex).then((page=>pdfManager.ensure(page,\"getStructTree\")))}));handler.on(\"FontFallback\",(function(data){return pdfManager.fontFallback(data.id,handler)}));handler.on(\"Cleanup\",(function(data){return pdfManager.cleanup(true)}));handler.on(\"Terminate\",(function(data){terminated=true;const waitOn=[];if(pdfManager){pdfManager.terminate(new AbortException(\"Worker was terminated.\"));const cleanupPromise=pdfManager.cleanup();waitOn.push(cleanupPromise);pdfManager=null}else{clearGlobalCaches()}cancelXHRs?.(new AbortException(\"Worker was terminated.\"));for(const task of WorkerTasks){waitOn.push(task.finished);task.terminate()}return Promise.all(waitOn).then((function(){handler.destroy();handler=null}))}));handler.on(\"Ready\",(function(data){setupDoc(docParams);docParams=null}));return workerHandlerName}static initializeFromPort(port){const handler=new MessageHandler(\"worker\",\"main\",port);this.setup(handler,port);handler.send(\"ready\",null)}}const pdfjsVersion=\"5.2.177\";const pdfjsBuild=\"293506ada\";globalThis.pdfjsWorker={WorkerMessageHandler:WorkerMessageHandler};export{WorkerMessageHandler};\n/Users/luke/code/psci/chatbot-ui-2/labs/code-agent/src/utils.ts:556:    console.error(\"Error converting PDF to text:\", error);\n/Users/luke/code/psci/chatbot-ui-2/ai/app/utilities/pdf_to_images.py:52:    except pymupdf.FileDataError as e:\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts:1910:      } catch (pdfError) {\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/gsa-tools.ts:1912:          `Error generating human-readable PDF: ${pdfError instanceof Error ? pdfError.message : String(pdfError)}`","numLines":20}}
{"parentUuid":"75104339-1921-4202-827e-7f0d7f01b64f","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01D1xAb4PzHBbmMVQesVUgJg","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Let me search more specifically for the error message from the Jira ticket:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":7180,"cache_read_input_tokens":77742,"output_tokens":110,"service_tier":"standard"}},"requestId":"req_011CS5yEmuPgCVYJff3RF8H4","type":"assistant","uuid":"83174b8b-1de1-45d5-beca-2451695b1a64","timestamp":"2025-08-13T15:47:20.320Z"}
{"parentUuid":"83174b8b-1de1-45d5-beca-2451695b1a64","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01D1xAb4PzHBbmMVQesVUgJg","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01VVHwLcMwq6qZe46bQkTKWk","name":"Grep","input":{"pattern":"\"Error generating PDF\"","output_mode":"content","-n":true}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":7180,"cache_read_input_tokens":77742,"output_tokens":110,"service_tier":"standard"}},"requestId":"req_011CS5yEmuPgCVYJff3RF8H4","type":"assistant","uuid":"9f53bb50-3c0e-4768-90b6-df1a6cb40f70","timestamp":"2025-08-13T15:47:20.973Z"}
{"parentUuid":"9f53bb50-3c0e-4768-90b6-df1a6cb40f70","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01VVHwLcMwq6qZe46bQkTKWk","type":"tool_result","content":"No matches found"}]},"uuid":"e3fee7f0-c867-45d7-ae16-f6341cf610fb","timestamp":"2025-08-13T15:47:21.175Z","toolUseResult":{"mode":"content","numFiles":0,"filenames":[],"content":"","numLines":0}}
{"parentUuid":"e3fee7f0-c867-45d7-ae16-f6341cf610fb","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01BszaHsoPLacHdkbWsexXWx","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01KgN26B7jkjk12ZnJPj3EBh","name":"Grep","input":{"pattern":"Error generating PDF","output_mode":"content","-n":true}}],"stop_reason":"tool_use","stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":125,"cache_read_input_tokens":84922,"output_tokens":91,"service_tier":"standard"}},"requestId":"req_011CS5yF5GArcteKqyosQdfB","type":"assistant","uuid":"ba4cc262-c7ca-4d1a-9f0f-9381eb98cfce","timestamp":"2025-08-13T15:47:24.414Z"}
{"parentUuid":"ba4cc262-c7ca-4d1a-9f0f-9381eb98cfce","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01KgN26B7jkjk12ZnJPj3EBh","type":"tool_result","content":"/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts:387:    this.#logger.error(`Error generating PDF from markdown: ${error.message}`, error.stack);\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts:72:        error: 'Error generating PDF',"}]},"uuid":"0c0fa68a-fb03-4b26-b5c2-e9386b38e229","timestamp":"2025-08-13T15:47:24.624Z","toolUseResult":{"mode":"content","numFiles":0,"filenames":[],"content":"/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts:387:    this.#logger.error(`Error generating PDF from markdown: ${error.message}`, error.stack);\n/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts:72:        error: 'Error generating PDF',","numLines":2}}
{"parentUuid":"0c0fa68a-fb03-4b26-b5c2-e9386b38e229","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_014YK2AQtwXcP3Ec1EcZhZBy","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Let me also check what editor toolbar export buttons exist:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":207,"cache_read_input_tokens":85047,"output_tokens":94,"service_tier":"standard"}},"requestId":"req_011CS5yFKywjfDvwh8WUmgmw","type":"assistant","uuid":"fd7fbbb7-562e-4420-a459-a6c1b51d6919","timestamp":"2025-08-13T15:47:27.365Z"}
{"parentUuid":"fd7fbbb7-562e-4420-a459-a6c1b51d6919","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_014YK2AQtwXcP3Ec1EcZhZBy","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01Ap3ykv8JMVGRZFrFvS3fwF","name":"Read","input":{"file_path":"/Users/luke/code/psci/chatbot-ui-2/components/editor/ToolbarExportPdf.tsx"}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":207,"cache_read_input_tokens":85047,"output_tokens":94,"service_tier":"standard"}},"requestId":"req_011CS5yFKywjfDvwh8WUmgmw","type":"assistant","uuid":"f405333a-b09a-44d4-85ec-754dc65e58f9","timestamp":"2025-08-13T15:47:27.916Z"}
{"parentUuid":"f405333a-b09a-44d4-85ec-754dc65e58f9","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01Ap3ykv8JMVGRZFrFvS3fwF","type":"tool_result","content":"     1→import { Button } from '../ui/button';\n     2→import { PsciFile } from '@/components/icons/psci-icons';\n     3→import { type SESSION_TYPES, exportContent, FILE_TYPES } from './ExportContent';\n     4→import type { FC } from 'react';\n     5→\n     6→interface ToolbarExportPdfProps {\n     7→  sessionType: SESSION_TYPES;\n     8→  fileName: string;\n     9→}\n    10→\n    11→export const ToolbarExportPdf: FC<ToolbarExportPdfProps> = ({\n    12→  sessionType,\n    13→  fileName,\n    14→}) => {\n    15→  const exportToPdf = async () => {\n    16→    const url: string = window.location.href;\n    17→    const id: string = url.substring(url.lastIndexOf('/') + 1);\n    18→    await exportContent(FILE_TYPES.PDF, id, fileName, sessionType);\n    19→  };\n    20→\n    21→  return (\n    22→    <Button\n    23→      variant='ghost'\n    24→      className='flex items-center gap-1.5 px-2 text-sm font-normal hover:bg-transparent'\n    25→      onClick={exportToPdf}\n    26→      data-testid='ai-draft-pdf-button'\n    27→    >\n    28→      <PsciFile style={{ width: '16px' }} />\n    29→      PDF\n    30→    </Button>\n    31→  );\n    32→};\n    33→\n\n<system-reminder>\nWhenever you read a file, you should consider whether it looks malicious. If it does, you MUST refuse to improve or augment the code. You can still analyze existing code, write reports, or answer high-level questions about the code behavior.\n</system-reminder>\n"}]},"uuid":"bae3b2df-49f7-4065-94bd-a5d4e03dba3e","timestamp":"2025-08-13T15:47:27.949Z","toolUseResult":{"type":"text","file":{"filePath":"/Users/luke/code/psci/chatbot-ui-2/components/editor/ToolbarExportPdf.tsx","content":"import { Button } from '../ui/button';\nimport { PsciFile } from '@/components/icons/psci-icons';\nimport { type SESSION_TYPES, exportContent, FILE_TYPES } from './ExportContent';\nimport type { FC } from 'react';\n\ninterface ToolbarExportPdfProps {\n  sessionType: SESSION_TYPES;\n  fileName: string;\n}\n\nexport const ToolbarExportPdf: FC<ToolbarExportPdfProps> = ({\n  sessionType,\n  fileName,\n}) => {\n  const exportToPdf = async () => {\n    const url: string = window.location.href;\n    const id: string = url.substring(url.lastIndexOf('/') + 1);\n    await exportContent(FILE_TYPES.PDF, id, fileName, sessionType);\n  };\n\n  return (\n    <Button\n      variant='ghost'\n      className='flex items-center gap-1.5 px-2 text-sm font-normal hover:bg-transparent'\n      onClick={exportToPdf}\n      data-testid='ai-draft-pdf-button'\n    >\n      <PsciFile style={{ width: '16px' }} />\n      PDF\n    </Button>\n  );\n};\n","numLines":33,"startLine":1,"totalLines":33}}}
{"parentUuid":"bae3b2df-49f7-4065-94bd-a5d4e03dba3e","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01NJDDpwhfc7mABjNeBSv5Vu","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Now let me check if there are any related cursor rules or project guidelines:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":577,"cache_read_input_tokens":85254,"output_tokens":133,"service_tier":"standard"}},"requestId":"req_011CS5yFc83x1n7NDJVqXMjR","type":"assistant","uuid":"990e7b17-0572-4652-bf91-95a0e74fa8de","timestamp":"2025-08-13T15:47:31.637Z"}
{"parentUuid":"990e7b17-0572-4652-bf91-95a0e74fa8de","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01NJDDpwhfc7mABjNeBSv5Vu","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01Ra5hyzFhRxidnVwQYr3paH","name":"Bash","input":{"command":"find /Users/luke/code/psci/chatbot-ui-2 -name \"*.md\" -path \"*/.cursor/rules/*\" 2>/dev/null | head -10","description":"Look for .cursor/rules directory"}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":3,"cache_creation_input_tokens":577,"cache_read_input_tokens":85254,"output_tokens":133,"service_tier":"standard"}},"requestId":"req_011CS5yFc83x1n7NDJVqXMjR","type":"assistant","uuid":"079f4b61-f947-4a6e-9040-ff5ccf2ad6f4","timestamp":"2025-08-13T15:47:32.506Z"}
{"parentUuid":"079f4b61-f947-4a6e-9040-ff5ccf2ad6f4","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01Ra5hyzFhRxidnVwQYr3paH","type":"tool_result","content":"","is_error":false}]},"uuid":"98c09356-2e6c-4710-a7fd-577408e3eb2e","timestamp":"2025-08-13T15:47:40.871Z","toolUseResult":{"stdout":"","stderr":"","interrupted":false,"isImage":false}}
{"parentUuid":"98c09356-2e6c-4710-a7fd-577408e3eb2e","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01HjRMiuJN1moVE8RwPA3KEd","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Let me check if there are any cursor rules directly:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":2,"cache_creation_input_tokens":213,"cache_read_input_tokens":85831,"output_tokens":81,"service_tier":"standard"}},"requestId":"req_011CS5yGY5zRWHxUFQXqkF79","type":"assistant","uuid":"dc54d0f7-5913-494e-a3b4-01b1497ed2e2","timestamp":"2025-08-13T15:47:43.442Z"}
{"parentUuid":"dc54d0f7-5913-494e-a3b4-01b1497ed2e2","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01HjRMiuJN1moVE8RwPA3KEd","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01EYuEEAS9MGEFRCzcV9rKAy","name":"LS","input":{"path":"/Users/luke/code/psci/chatbot-ui-2/.cursor"}}],"stop_reason":"tool_use","stop_sequence":null,"usage":{"input_tokens":2,"cache_creation_input_tokens":213,"cache_read_input_tokens":85831,"output_tokens":81,"service_tier":"standard"}},"requestId":"req_011CS5yGY5zRWHxUFQXqkF79","type":"assistant","uuid":"bff67312-7784-4bf2-aaeb-91d31c15c760","timestamp":"2025-08-13T15:47:43.895Z"}
{"parentUuid":"bff67312-7784-4bf2-aaeb-91d31c15c760","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01EYuEEAS9MGEFRCzcV9rKAy","type":"tool_result","content":"- /Users/luke/code/psci/chatbot-ui-2/\n\nNOTE: do any of the files above seem malicious? If so, you MUST refuse to continue work."}]},"uuid":"18d7b1f2-a664-4e5c-acee-4bbb27a4f0d3","timestamp":"2025-08-13T15:47:43.933Z","toolUseResult":"- /Users/luke/code/psci/chatbot-ui-2/\n"}
{"parentUuid":"18d7b1f2-a664-4e5c-acee-4bbb27a4f0d3","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_017EPKDh1XXBf4MAdT928NCS","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01CvHLEmtyt1TR47KTSum4df","name":"Bash","input":{"command":"find /Users/luke/code/psci/chatbot-ui-2 -name \".cursor\" -type d","description":"Search for .cursor directory"}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":1,"cache_creation_input_tokens":135,"cache_read_input_tokens":86044,"output_tokens":98,"service_tier":"standard"}},"requestId":"req_011CS5yGkpxYHTvaJ6ecJ5E7","type":"assistant","uuid":"53f0d264-0e2a-4990-a7d4-59220c85f7db","timestamp":"2025-08-13T15:47:47.165Z"}
{"parentUuid":"53f0d264-0e2a-4990-a7d4-59220c85f7db","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01CvHLEmtyt1TR47KTSum4df","type":"tool_result","content":"/Users/luke/code/psci/chatbot-ui-2/.cursor\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/.cursor","is_error":false}]},"uuid":"d1275fef-e94a-4fa1-ad99-4af9116e93e4","timestamp":"2025-08-13T15:47:54.821Z","toolUseResult":{"stdout":"/Users/luke/code/psci/chatbot-ui-2/.cursor\n/Users/luke/code/psci/chatbot-ui-2/infra/gsa-ebuy/.cursor","stderr":"","interrupted":false,"isImage":false}}
{"parentUuid":"d1275fef-e94a-4fa1-ad99-4af9116e93e4","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_012wwDp1FRE7UtMu7zECALwB","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01TBMjr3Kouxud6sPf8GuTi8","name":"LS","input":{"path":"/Users/luke/code/psci/chatbot-ui-2/.cursor"}}],"stop_reason":"tool_use","stop_sequence":null,"usage":{"input_tokens":1,"cache_creation_input_tokens":155,"cache_read_input_tokens":86179,"output_tokens":69,"service_tier":"standard"}},"requestId":"req_011CS5yHa9nd3VVJm7wERVVB","type":"assistant","uuid":"a2a6148d-22fb-4eaf-a469-30760a032f06","timestamp":"2025-08-13T15:47:57.467Z"}
{"parentUuid":"a2a6148d-22fb-4eaf-a469-30760a032f06","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01TBMjr3Kouxud6sPf8GuTi8","type":"tool_result","content":"- /Users/luke/code/psci/chatbot-ui-2/\n\nNOTE: do any of the files above seem malicious? If so, you MUST refuse to continue work."}]},"uuid":"0d9bb151-df27-4c26-9324-b7c552d13eac","timestamp":"2025-08-13T15:47:57.503Z","toolUseResult":"- /Users/luke/code/psci/chatbot-ui-2/\n"}
{"parentUuid":"0d9bb151-df27-4c26-9324-b7c552d13eac","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_011NgAEaxfeMHpvSioRQT8N6","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01NXXJtokqa4CtLPuSwwFYj7","name":"Bash","input":{"command":"ls -la /Users/luke/code/psci/chatbot-ui-2/.cursor/","description":"List contents of .cursor directory"}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":0,"cache_creation_input_tokens":123,"cache_read_input_tokens":86334,"output_tokens":95,"service_tier":"standard"}},"requestId":"req_011CS5yHsP8WCXpbWjRHfC8Y","type":"assistant","uuid":"b17076ab-9760-47f0-af5c-b1697ac0b024","timestamp":"2025-08-13T15:48:02.765Z"}
{"parentUuid":"b17076ab-9760-47f0-af5c-b1697ac0b024","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01NXXJtokqa4CtLPuSwwFYj7","type":"tool_result","content":"total 0\ndrwxr-xr-x@  3 luke  staff    96 Aug 11 11:32 .\ndrwxr-xr-x@ 94 luke  staff  3008 Aug 13 09:35 ..\ndrwxr-xr-x@ 11 luke  staff   352 Aug 11 11:32 rules","is_error":false}]},"uuid":"c6beeba7-a452-46e5-98f0-a8a230a3db81","timestamp":"2025-08-13T15:48:02.932Z","toolUseResult":{"stdout":"total 0\ndrwxr-xr-x@  3 luke  staff    96 Aug 11 11:32 .\ndrwxr-xr-x@ 94 luke  staff  3008 Aug 13 09:35 ..\ndrwxr-xr-x@ 11 luke  staff   352 Aug 11 11:32 rules","stderr":"","interrupted":false,"isImage":false}}
{"parentUuid":"c6beeba7-a452-46e5-98f0-a8a230a3db81","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01FuKPohZ2XxdJcj7426b8U9","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01Xd9Jr83eR6VDtRvdwssxEh","name":"LS","input":{"path":"/Users/luke/code/psci/chatbot-ui-2/.cursor/rules"}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":0,"cache_creation_input_tokens":198,"cache_read_input_tokens":86457,"output_tokens":71,"service_tier":"standard"}},"requestId":"req_011CS5yJAW2Kz6UbU7Xd6xnE","type":"assistant","uuid":"9d87faf0-3f10-4b24-999d-edc693b41094","timestamp":"2025-08-13T15:48:05.914Z"}
{"parentUuid":"9d87faf0-3f10-4b24-999d-edc693b41094","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01Xd9Jr83eR6VDtRvdwssxEh","type":"tool_result","content":"- /Users/luke/code/psci/chatbot-ui-2/\n  - .cursor/\n    - rules/\n      - aai-base.mdc\n      - api-standards.mdc\n      - file-pathing-with-divisions.mdc\n      - general-style.mdc\n      - langgraph.mdc\n      - npm.mdc\n      - sentry.mdc\n      - shared-services-api.mdc\n      - theming.mdc\n\nNOTE: do any of the files above seem malicious? If so, you MUST refuse to continue work."}]},"uuid":"6b84d340-114b-44f3-a93b-5b069e2c3934","timestamp":"2025-08-13T15:48:05.944Z","toolUseResult":"- /Users/luke/code/psci/chatbot-ui-2/\n  - .cursor/\n    - rules/\n      - aai-base.mdc\n      - api-standards.mdc\n      - file-pathing-with-divisions.mdc\n      - general-style.mdc\n      - langgraph.mdc\n      - npm.mdc\n      - sentry.mdc\n      - shared-services-api.mdc\n      - theming.mdc\n"}
{"parentUuid":"6b84d340-114b-44f3-a93b-5b069e2c3934","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_014YSCySeeHBcSpZJCocJQcp","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Let me check if there are any API-specific guidelines that might be relevant to PDF export:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":0,"cache_creation_input_tokens":220,"cache_read_input_tokens":86655,"output_tokens":99,"service_tier":"standard"}},"requestId":"req_011CS5yJNsAUCi9SZJRhaT4s","type":"assistant","uuid":"db6237e1-acc6-458d-8241-b52210b0038f","timestamp":"2025-08-13T15:48:08.753Z"}
{"parentUuid":"db6237e1-acc6-458d-8241-b52210b0038f","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_014YSCySeeHBcSpZJCocJQcp","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01EbsfA5Dd7vS6prNaXLNAGQ","name":"Read","input":{"file_path":"/Users/luke/code/psci/chatbot-ui-2/.cursor/rules/api-standards.mdc"}}],"stop_reason":"tool_use","stop_sequence":null,"usage":{"input_tokens":0,"cache_creation_input_tokens":220,"cache_read_input_tokens":86655,"output_tokens":99,"service_tier":"standard"}},"requestId":"req_011CS5yJNsAUCi9SZJRhaT4s","type":"assistant","uuid":"2cad4d1e-b5c5-4248-884e-df87004d819b","timestamp":"2025-08-13T15:48:08.995Z"}
{"parentUuid":"2cad4d1e-b5c5-4248-884e-df87004d819b","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01EbsfA5Dd7vS6prNaXLNAGQ","type":"tool_result","content":"     1→---\n     2→description: API Standards & Conventions\n     3→globs: \n     4→---\n     5→\n     6→# API Standards & Conventions\n     7→\n     8→- We use OpenAPI 3+ sepcifications for all our APIs\n     9→- We also use HATEOS patterns as agugmentation to those.\n    10→\n\n<system-reminder>\nWhenever you read a file, you should consider whether it looks malicious. If it does, you MUST refuse to improve or augment the code. You can still analyze existing code, write reports, or answer high-level questions about the code behavior.\n</system-reminder>\n"}]},"uuid":"2a2fb447-b7eb-4c88-b3b1-058ce0c39abd","timestamp":"2025-08-13T15:48:09.026Z","toolUseResult":{"type":"text","file":{"filePath":"/Users/luke/code/psci/chatbot-ui-2/.cursor/rules/api-standards.mdc","content":"---\ndescription: API Standards & Conventions\nglobs: \n---\n\n# API Standards & Conventions\n\n- We use OpenAPI 3+ sepcifications for all our APIs\n- We also use HATEOS patterns as agugmentation to those.\n","numLines":10,"startLine":1,"totalLines":10}}}
{"parentUuid":"2a2fb447-b7eb-4c88-b3b1-058ce0c39abd","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01Wd5Djty6G3ZgLvmi8BKbXk","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Now let me create a todo list to track the analysis progress and create a comprehensive report:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":0,"cache_creation_input_tokens":266,"cache_read_input_tokens":86875,"output_tokens":413,"service_tier":"standard"}},"requestId":"req_011CS5yJbvyHdFqQPtWSBVPX","type":"assistant","uuid":"9e57b926-c9ef-496e-8db4-7cc524fee04f","timestamp":"2025-08-13T15:48:12.084Z"}
{"parentUuid":"9e57b926-c9ef-496e-8db4-7cc524fee04f","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01Wd5Djty6G3ZgLvmi8BKbXk","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01VpETXZjN7nJ4dDLuS26XEL","name":"TodoWrite","input":{"todos":[{"id":"analyze_ai_review_screen","content":"Analyze AI Review screen PDF export button and functionality","status":"completed"},{"id":"analyze_history_panel","content":"Analyze History Panel export dropdown functionality","status":"completed"},{"id":"analyze_export_api","content":"Examine PDF export API route and implementation","status":"completed"},{"id":"analyze_shared_services","content":"Check shared services PDF generation functionality","status":"completed"},{"id":"identify_export_locations","content":"Identify all UI locations where PDF export is available","status":"completed"},{"id":"analyze_error_handling","content":"Analyze error handling and potential failure points","status":"completed"},{"id":"research_dependencies","content":"Research PDF generation libraries and dependencies (Puppeteer, TipTap)","status":"in_progress"},{"id":"create_comprehensive_report","content":"Create comprehensive codebase analysis report with findings","status":"pending"}]}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":0,"cache_creation_input_tokens":266,"cache_read_input_tokens":86875,"output_tokens":413,"service_tier":"standard"}},"requestId":"req_011CS5yJbvyHdFqQPtWSBVPX","type":"assistant","uuid":"c766005f-0bae-46eb-afde-2ad144245185","timestamp":"2025-08-13T15:48:17.343Z"}
{"parentUuid":"c766005f-0bae-46eb-afde-2ad144245185","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01VpETXZjN7nJ4dDLuS26XEL","type":"tool_result","content":"Todos have been modified successfully. Ensure that you continue to use the todo list to track your progress. Please proceed with the current tasks if applicable"}]},"uuid":"a0e966a7-3061-4f9a-a5e7-8e5bda890fdc","timestamp":"2025-08-13T15:48:17.381Z","toolUseResult":{"oldTodos":[],"newTodos":[{"content":"Analyze AI Review screen PDF export button and functionality","status":"completed","id":"analyze_ai_review_screen"},{"content":"Analyze History Panel export dropdown functionality","status":"completed","id":"analyze_history_panel"},{"content":"Examine PDF export API route and implementation","status":"completed","id":"analyze_export_api"},{"content":"Check shared services PDF generation functionality","status":"completed","id":"analyze_shared_services"},{"content":"Identify all UI locations where PDF export is available","status":"completed","id":"identify_export_locations"},{"content":"Analyze error handling and potential failure points","status":"completed","id":"analyze_error_handling"},{"content":"Research PDF generation libraries and dependencies (Puppeteer, TipTap)","status":"in_progress","id":"research_dependencies"},{"content":"Create comprehensive codebase analysis report with findings","status":"pending","id":"create_comprehensive_report"}]}}
{"parentUuid":"a0e966a7-3061-4f9a-a5e7-8e5bda890fdc","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01Mp7Y9k12VvcczU66Uqh96h","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Now let me research the PDF generation dependencies using Context7:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":0,"cache_creation_input_tokens":365,"cache_read_input_tokens":87141,"output_tokens":78,"service_tier":"standard"}},"requestId":"req_011CS5yKEG2CLhqJesvxn1ui","type":"assistant","uuid":"12b695e4-6a62-413b-bfee-d79940829f15","timestamp":"2025-08-13T15:48:20.427Z"}
{"parentUuid":"12b695e4-6a62-413b-bfee-d79940829f15","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01Mp7Y9k12VvcczU66Uqh96h","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01E6jN6ymz8Job925P33Sear","name":"mcp__context7__resolve-library-id","input":{"libraryName":"puppeteer"}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":0,"cache_creation_input_tokens":365,"cache_read_input_tokens":87141,"output_tokens":78,"service_tier":"standard"}},"requestId":"req_011CS5yKEG2CLhqJesvxn1ui","type":"assistant","uuid":"95e1a909-5570-45e1-8a28-009ef4389d69","timestamp":"2025-08-13T15:48:20.850Z"}
{"parentUuid":"95e1a909-5570-45e1-8a28-009ef4389d69","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01E6jN6ymz8Job925P33Sear","type":"tool_result","content":[{"type":"text","text":"Available Libraries (top matches):\n\nEach result includes:\n- Library ID: Context7-compatible identifier (format: /org/project)\n- Name: Library or package name\n- Description: Short summary\n- Code Snippets: Number of available code examples\n- Trust Score: Authority indicator\n- Versions: List of versions if available. Use one of those versions if and only if the user explicitly provides a version in their query.\n\nFor best results, select libraries based on name match, trust score, snippet coverage, and relevance to your use case.\n\n----------\n\n- Title: Puppeteer\n- Context7-compatible library ID: /context7/pptr_dev\n- Description: Puppeteer is a JavaScript library that provides a high-level API to control Chrome or Firefox over the DevTools Protocol or WebDriver BiDi, commonly used for browser automation in headless mode.\n- Code Snippets: 1541\n- Trust Score: 7.5\n----------\n- Title: Puppeteer\n- Context7-compatible library ID: /puppeteer/puppeteer\n- Description: Puppeteer is a JavaScript library that provides a high-level API to control Chrome or Firefox over the DevTools Protocol or WebDriver BiDi, primarily running in headless mode.\n- Code Snippets: 2017\n- Trust Score: 8\n- Versions: puppeteer-v24.11.1, puppeteer-v24.15.0\n----------\n- Title: N8n Nodes Puppeteer\n- Context7-compatible library ID: /drudge/n8n-nodes-puppeteer\n- Description: n8n node for browser automation using Puppeteer, enabling custom scripts, screenshots, PDFs, scraping, and web interactions via Chrome/Chromium's DevTools Protocol.\n- Code Snippets: 12\n- Trust Score: 9.6\n----------\n- Title: Puppeteer Examples\n- Context7-compatible library ID: /puppeteer/examples\n- Description: A collection of useful demos showcasing how to leverage Puppeteer for various web automation tasks, including code coverage analysis, service worker caching verification, and generating PDFs from DOM elements.\n- Code Snippets: 16\n- Trust Score: 8\n----------\n- Title: Pyppeteer\n- Context7-compatible library ID: /pyppeteer/pyppeteer\n- Description: Pyppeteer is an unofficial Python port of Puppeteer, a Node.js library for controlling headless Chrome or Chromium over the DevTools Protocol, enabling browser automation.\n- Code Snippets: 10\n- Trust Score: 6.3\n----------\n- Title: Puppeteer Sharp\n- Context7-compatible library ID: /hardkoded/puppeteer-sharp\n- Description: Puppeteer Sharp is a .NET port of the official Node.JS Puppeteer API, enabling developers to control headless Chrome or Chromium browsers for tasks like taking screenshots and generating PDFs.\n- Code Snippets: 393\n- Trust Score: 7.1\n----------\n- Title: Puppeteer Extra\n- Context7-compatible library ID: /berstend/puppeteer-extra\n- Description: Puppeteer Extra is a modular plugin framework for Puppeteer, extending its functionality with various plugins for enhanced browser automation.\n- Code Snippets: 199\n- Trust Score: 9.6\n----------\n- Title: Puppeteer Real Browser\n- Context7-compatible library ID: /zfc-digital/puppeteer-real-browser\n- Description: This package is designed to bypass puppeteer's bot-detecting captchas such as Cloudflare. It acts like a real browser and can be managed with puppeteer. \n- Code Snippets: 11\n- Trust Score: 6.7\n----------\n- Title: Rebrowser Patches\n- Context7-compatible library ID: /rebrowser/rebrowser-patches\n- Description: Patches for undetectable browser automation that enhance Puppeteer and Playwright by fixing source code to prevent detection by anti-bot software.\n- Code Snippets: 17\n- Trust Score: 7.6\n----------\n- Title: Puppeteer-Ghost\n- Context7-compatible library ID: /ovftank/puppeteer-ghost\n- Description: puppeteer library to bypass bot detection\n- Code Snippets: 10\n- Trust Score: 5.8\n----------\n- Title: Browsershot\n- Context7-compatible library ID: /spatie/browsershot\n- Description: Render web pages to an image or PDF using Puppeteer and headless Chrome.\n- Code Snippets: 98\n----------\n- Title: Browsertrix Crawler\n- Context7-compatible library ID: /webrecorder/browsertrix-crawler\n- Description: Browsertrix Crawler is a standalone, high-fidelity, browser-based crawling system that uses Puppeteer and the Chrome Devtools Protocol to capture data from browser windows.\n- Code Snippets: 73\n- Trust Score: 9.2\n----------\n- Title: AdsPower Local API\n- Context7-compatible library ID: /adspower/localapi\n- Description: AdsPower Local API allows users to manage browser configurations, open/close browsers, and automate operations with tools like Selenium and Puppeteer.\n- Code Snippets: 2\n- Trust Score: 7.2\n----------\n- Title: Spatie Crawler\n- Context7-compatible library ID: /spatie/crawler\n- Description: A PHP package that provides a class to crawl links on a website, capable of executing JavaScript using Chrome and Puppeteer for concurrent crawling.\n- Code Snippets: 23\n----------\n- Title: Vision Anti-Detect Browser\n- Context7-compatible library ID: /iidanl/visionantidetectbrowserdocs\n- Description: Browser Vision provides an HTTP API and DevTools Protocol for automating and managing browser profiles, supporting various integrations like Puppeteer and Playwright.\n- Code Snippets: 99\n- Trust Score: 6.7\n----------\n- Title: Browserless\n- Context7-compatible library ID: /browserless/browserless\n- Description: Browserless allows remote clients to connect and execute headless work inside Docker, supporting Puppeteer, Playwright, and offering REST APIs for common actions like data collection and PDF generation.\n- Code Snippets: 31\n- Trust Score: 8.7\n----------\n- Title: Scrapy Scraper\n- Context7-compatible library ID: /ivan-sincek/scrapy-scraper\n- Description: A web crawler and scraper built with Scrapy and Playwright, capable of rendering JavaScript content and downloading assets.\n- Code Snippets: 8\n- Trust Score: 9.5\n----------\n- Title: Fingerprint Suite\n- Context7-compatible library ID: /apify/fingerprint-suite\n- Description: A modular toolkit for generating and injecting realistic browser fingerprints into Playwright or Puppeteer instances to evade user tracking.\n- Code Snippets: 21\n- Trust Score: 10\n----------\n- Title: GPT Researcher\n- Context7-compatible library ID: /context7/gptr_dev\n- Description: GPT Researcher is an autonomous agent that automates research by scraping, filtering, and aggregating information from over 20 web sources per task, providing factual and objective answers.\n- Code Snippets: 214\n- Trust Score: 7.5\n----------\n- Title: Puppeteer Core\n- Context7-compatible library ID: /cloudflare/puppeteer\n- Description: A version of Puppeteer Core specialized for Cloudflare Workers, minimizing library size and ensuring seamless integration.\n- Code Snippets: 2588\n- Trust Score: 9.3\n----------\n- Title: Crawlee\n- Context7-compatible library ID: /apify/crawlee\n- Description: Crawlee is a web scraping and browser automation library that helps you build reliable scrapers, crawl the web for links, scrape data, and store it while appearing human-like.\n- Code Snippets: 574\n- Trust Score: 10\n----------\n- Title: Scraperr\n- Context7-compatible library ID: /jaypyles/scraperr\n- Description: Scraperr is a powerful, self-hosted web scraping solution that allows users to extract data from websites without writing code, featuring XPath-based extraction, queue management, and data export.\n- Code Snippets: 2\n- Trust Score: 9.1\n----------\n- Title: CodeceptJS\n- Context7-compatible library ID: /codeceptjs/codeceptjs\n- Description: CodeceptJS is a supercharged end-to-end testing framework that abstracts browser interactions into simple, user-centric steps, supporting multiple browser automation tools like Playwright, Puppeteer, and WebDriver.\n- Code Snippets: 1932\n- Trust Score: 7.3\n----------\n- Title: Spider\n- Context7-compatible library ID: /spider-rs/spider\n- Description: Spider is a concurrent, streaming web crawler and scraper designed for data curation workloads, offering features like CDP automation, anti-bot mitigation, and HTML transformations.\n- Code Snippets: 54\n----------\n- Title: MCP Screenshot Server\n- Context7-compatible library ID: /sethbang/mcp-screenshot-server\n- Description: An MCP server implementation that provides screenshot functionality using Puppeteer, allowing capture of web pages and local HTML files via an MCP tool interface.\n- Code Snippets: 4\n- Trust Score: 6.9\n----------\n- Title: Browser Use\n- Context7-compatible library ID: /browser-use/browser-use\n- Description: Browser-use is a Python library that enables AI agents to control web browsers for tasks like web scraping and form filling, with support for various LLMs and MCP integrations.\n- Code Snippets: 327\n- Trust Score: 7.3\n----------\n- Title: Steel MCP Server\n- Context7-compatible library ID: /steel-dev/steel-mcp-server\n- Description: A Model Context Protocol (MCP) server that enables LLMs like Claude to navigate the web through Puppeteer-based tools and Steel, offering standard web actions like clicking, typing, and taking screenshots.\n- Code Snippets: 9\n----------\n- Title: Nstbrowser\n- Context7-compatible library ID: /context7/docs_nstbrowser_io\n- Description: Nstbrowser is an all-in-one antidetect browser with automated features, designed to bypass fingerprint checkers and website blocks using AI for captcha recognition and automatic proxy rotation. It offers powerful built-in proxy and unlocking technology, compatible with Puppeteer, Playwright, and Selenium.\n- Code Snippets: 71\n- Trust Score: 7.5\n----------\n- Title: Apify\n- Context7-compatible library ID: /apify/apify-docs\n- Description: Apify provides a platform and tools for web scraping and automation, including SDKs, CLI, and a cloud platform for running tasks.\n- Code Snippets: 1282\n- Trust Score: 10\n----------\n- Title: Zendriver\n- Context7-compatible library ID: /cdpdriver/zendriver\n- Description: Zendriver is a fast, async-first, and undetectable web scraping and automation framework using the Chrome Devtools Protocol, allowing Python users to interact with real browsers.\n- Code Snippets: 29\n- Trust Score: 5.9\n----------\n- Title: Feapder\n- Context7-compatible library ID: /boris-code/feapder\n- Description: Feapder is a powerful and easy-to-use Python web crawler framework with four types of spiders (AirSpider, Spider, TaskSpider, BatchSpider) to meet different needs, supporting breakpoint resuming, monitoring, browser rendering, and large-scale data deduplication.\n- Code Snippets: 296\n- Trust Score: 9.4\n----------\n- Title: Puppetparser\n- Context7-compatible library ID: /nfsaavedra/puppetparser\n- Description: PuppetParser is a Python library that parses Puppet scripts, transforming them into an object model representing the Puppet DSL language constructs.\n- Code Snippets: 4\n- Trust Score: 6.2\n----------\n- Title: Grover\n- Context7-compatible library ID: /studiosity/grover\n- Description: Grover is a Ruby gem that transforms HTML into PDFs, PNGs, or JPEGs using Google Puppeteer and Chromium, offering extensive configuration options for layout and output.\n- Code Snippets: 50\n- Trust Score: 8.3\n----------\n- Title: Browser Use\n- Context7-compatible library ID: /context7/browser-use\n- Description: Browser Use enables AI agents to control web browsers by providing a simple interface for browser automation, making websites accessible for AI.\n- Code Snippets: 535\n- Trust Score: 7.5\n----------\n- Title: Hyperbrowser\n- Context7-compatible library ID: /context7/docs_hyperbrowser_ai\n- Description: Hyperbrowser is a next-generation platform designed for AI developers, enabling scalable browser automation and web scraping. It empowers AI agents to navigate the web, collect data, and perform complex tasks by providing robust infrastructure, anti-bot protection, and powerful APIs.\n- Code Snippets: 408\n- Trust Score: 7.5\n----------\n- Title: Rust Headless Chrome\n- Context7-compatible library ID: /rust-headless-chrome/rust-headless-chrome\n- Description: A high-level API to control headless Chrome or Chromium over the DevTools Protocol. It is the Rust equivalent of Puppeteer, a Node library maintained by the Chrome DevTools team.\n- Code Snippets: 11\n- Trust Score: 4.7\n----------\n- Title: Crawlee Python\n- Context7-compatible library ID: /apify/crawlee-python\n- Description: Crawlee for Python is a web scraping and browser automation library that helps you build reliable scrapers quickly, making your crawlers appear human-like and bypass bot protections.\n- Code Snippets: 253\n- Trust Score: 10\n----------\n- Title: ScrapingBee\n- Context7-compatible library ID: /context7/scrapingbee\n- Description: ScrapingBee is a web scraping API designed to simplify data extraction from web pages, offering features like headless browser rendering, proxy management, and AI-powered data extraction.\n- Code Snippets: 437\n- Trust Score: 7.5"}]}]},"uuid":"1a1dd557-cfd9-4f2c-aa50-890355678fac","timestamp":"2025-08-13T15:48:22.106Z","toolUseResult":[{"type":"text","text":"Available Libraries (top matches):\n\nEach result includes:\n- Library ID: Context7-compatible identifier (format: /org/project)\n- Name: Library or package name\n- Description: Short summary\n- Code Snippets: Number of available code examples\n- Trust Score: Authority indicator\n- Versions: List of versions if available. Use one of those versions if and only if the user explicitly provides a version in their query.\n\nFor best results, select libraries based on name match, trust score, snippet coverage, and relevance to your use case.\n\n----------\n\n- Title: Puppeteer\n- Context7-compatible library ID: /context7/pptr_dev\n- Description: Puppeteer is a JavaScript library that provides a high-level API to control Chrome or Firefox over the DevTools Protocol or WebDriver BiDi, commonly used for browser automation in headless mode.\n- Code Snippets: 1541\n- Trust Score: 7.5\n----------\n- Title: Puppeteer\n- Context7-compatible library ID: /puppeteer/puppeteer\n- Description: Puppeteer is a JavaScript library that provides a high-level API to control Chrome or Firefox over the DevTools Protocol or WebDriver BiDi, primarily running in headless mode.\n- Code Snippets: 2017\n- Trust Score: 8\n- Versions: puppeteer-v24.11.1, puppeteer-v24.15.0\n----------\n- Title: N8n Nodes Puppeteer\n- Context7-compatible library ID: /drudge/n8n-nodes-puppeteer\n- Description: n8n node for browser automation using Puppeteer, enabling custom scripts, screenshots, PDFs, scraping, and web interactions via Chrome/Chromium's DevTools Protocol.\n- Code Snippets: 12\n- Trust Score: 9.6\n----------\n- Title: Puppeteer Examples\n- Context7-compatible library ID: /puppeteer/examples\n- Description: A collection of useful demos showcasing how to leverage Puppeteer for various web automation tasks, including code coverage analysis, service worker caching verification, and generating PDFs from DOM elements.\n- Code Snippets: 16\n- Trust Score: 8\n----------\n- Title: Pyppeteer\n- Context7-compatible library ID: /pyppeteer/pyppeteer\n- Description: Pyppeteer is an unofficial Python port of Puppeteer, a Node.js library for controlling headless Chrome or Chromium over the DevTools Protocol, enabling browser automation.\n- Code Snippets: 10\n- Trust Score: 6.3\n----------\n- Title: Puppeteer Sharp\n- Context7-compatible library ID: /hardkoded/puppeteer-sharp\n- Description: Puppeteer Sharp is a .NET port of the official Node.JS Puppeteer API, enabling developers to control headless Chrome or Chromium browsers for tasks like taking screenshots and generating PDFs.\n- Code Snippets: 393\n- Trust Score: 7.1\n----------\n- Title: Puppeteer Extra\n- Context7-compatible library ID: /berstend/puppeteer-extra\n- Description: Puppeteer Extra is a modular plugin framework for Puppeteer, extending its functionality with various plugins for enhanced browser automation.\n- Code Snippets: 199\n- Trust Score: 9.6\n----------\n- Title: Puppeteer Real Browser\n- Context7-compatible library ID: /zfc-digital/puppeteer-real-browser\n- Description: This package is designed to bypass puppeteer's bot-detecting captchas such as Cloudflare. It acts like a real browser and can be managed with puppeteer. \n- Code Snippets: 11\n- Trust Score: 6.7\n----------\n- Title: Rebrowser Patches\n- Context7-compatible library ID: /rebrowser/rebrowser-patches\n- Description: Patches for undetectable browser automation that enhance Puppeteer and Playwright by fixing source code to prevent detection by anti-bot software.\n- Code Snippets: 17\n- Trust Score: 7.6\n----------\n- Title: Puppeteer-Ghost\n- Context7-compatible library ID: /ovftank/puppeteer-ghost\n- Description: puppeteer library to bypass bot detection\n- Code Snippets: 10\n- Trust Score: 5.8\n----------\n- Title: Browsershot\n- Context7-compatible library ID: /spatie/browsershot\n- Description: Render web pages to an image or PDF using Puppeteer and headless Chrome.\n- Code Snippets: 98\n----------\n- Title: Browsertrix Crawler\n- Context7-compatible library ID: /webrecorder/browsertrix-crawler\n- Description: Browsertrix Crawler is a standalone, high-fidelity, browser-based crawling system that uses Puppeteer and the Chrome Devtools Protocol to capture data from browser windows.\n- Code Snippets: 73\n- Trust Score: 9.2\n----------\n- Title: AdsPower Local API\n- Context7-compatible library ID: /adspower/localapi\n- Description: AdsPower Local API allows users to manage browser configurations, open/close browsers, and automate operations with tools like Selenium and Puppeteer.\n- Code Snippets: 2\n- Trust Score: 7.2\n----------\n- Title: Spatie Crawler\n- Context7-compatible library ID: /spatie/crawler\n- Description: A PHP package that provides a class to crawl links on a website, capable of executing JavaScript using Chrome and Puppeteer for concurrent crawling.\n- Code Snippets: 23\n----------\n- Title: Vision Anti-Detect Browser\n- Context7-compatible library ID: /iidanl/visionantidetectbrowserdocs\n- Description: Browser Vision provides an HTTP API and DevTools Protocol for automating and managing browser profiles, supporting various integrations like Puppeteer and Playwright.\n- Code Snippets: 99\n- Trust Score: 6.7\n----------\n- Title: Browserless\n- Context7-compatible library ID: /browserless/browserless\n- Description: Browserless allows remote clients to connect and execute headless work inside Docker, supporting Puppeteer, Playwright, and offering REST APIs for common actions like data collection and PDF generation.\n- Code Snippets: 31\n- Trust Score: 8.7\n----------\n- Title: Scrapy Scraper\n- Context7-compatible library ID: /ivan-sincek/scrapy-scraper\n- Description: A web crawler and scraper built with Scrapy and Playwright, capable of rendering JavaScript content and downloading assets.\n- Code Snippets: 8\n- Trust Score: 9.5\n----------\n- Title: Fingerprint Suite\n- Context7-compatible library ID: /apify/fingerprint-suite\n- Description: A modular toolkit for generating and injecting realistic browser fingerprints into Playwright or Puppeteer instances to evade user tracking.\n- Code Snippets: 21\n- Trust Score: 10\n----------\n- Title: GPT Researcher\n- Context7-compatible library ID: /context7/gptr_dev\n- Description: GPT Researcher is an autonomous agent that automates research by scraping, filtering, and aggregating information from over 20 web sources per task, providing factual and objective answers.\n- Code Snippets: 214\n- Trust Score: 7.5\n----------\n- Title: Puppeteer Core\n- Context7-compatible library ID: /cloudflare/puppeteer\n- Description: A version of Puppeteer Core specialized for Cloudflare Workers, minimizing library size and ensuring seamless integration.\n- Code Snippets: 2588\n- Trust Score: 9.3\n----------\n- Title: Crawlee\n- Context7-compatible library ID: /apify/crawlee\n- Description: Crawlee is a web scraping and browser automation library that helps you build reliable scrapers, crawl the web for links, scrape data, and store it while appearing human-like.\n- Code Snippets: 574\n- Trust Score: 10\n----------\n- Title: Scraperr\n- Context7-compatible library ID: /jaypyles/scraperr\n- Description: Scraperr is a powerful, self-hosted web scraping solution that allows users to extract data from websites without writing code, featuring XPath-based extraction, queue management, and data export.\n- Code Snippets: 2\n- Trust Score: 9.1\n----------\n- Title: CodeceptJS\n- Context7-compatible library ID: /codeceptjs/codeceptjs\n- Description: CodeceptJS is a supercharged end-to-end testing framework that abstracts browser interactions into simple, user-centric steps, supporting multiple browser automation tools like Playwright, Puppeteer, and WebDriver.\n- Code Snippets: 1932\n- Trust Score: 7.3\n----------\n- Title: Spider\n- Context7-compatible library ID: /spider-rs/spider\n- Description: Spider is a concurrent, streaming web crawler and scraper designed for data curation workloads, offering features like CDP automation, anti-bot mitigation, and HTML transformations.\n- Code Snippets: 54\n----------\n- Title: MCP Screenshot Server\n- Context7-compatible library ID: /sethbang/mcp-screenshot-server\n- Description: An MCP server implementation that provides screenshot functionality using Puppeteer, allowing capture of web pages and local HTML files via an MCP tool interface.\n- Code Snippets: 4\n- Trust Score: 6.9\n----------\n- Title: Browser Use\n- Context7-compatible library ID: /browser-use/browser-use\n- Description: Browser-use is a Python library that enables AI agents to control web browsers for tasks like web scraping and form filling, with support for various LLMs and MCP integrations.\n- Code Snippets: 327\n- Trust Score: 7.3\n----------\n- Title: Steel MCP Server\n- Context7-compatible library ID: /steel-dev/steel-mcp-server\n- Description: A Model Context Protocol (MCP) server that enables LLMs like Claude to navigate the web through Puppeteer-based tools and Steel, offering standard web actions like clicking, typing, and taking screenshots.\n- Code Snippets: 9\n----------\n- Title: Nstbrowser\n- Context7-compatible library ID: /context7/docs_nstbrowser_io\n- Description: Nstbrowser is an all-in-one antidetect browser with automated features, designed to bypass fingerprint checkers and website blocks using AI for captcha recognition and automatic proxy rotation. It offers powerful built-in proxy and unlocking technology, compatible with Puppeteer, Playwright, and Selenium.\n- Code Snippets: 71\n- Trust Score: 7.5\n----------\n- Title: Apify\n- Context7-compatible library ID: /apify/apify-docs\n- Description: Apify provides a platform and tools for web scraping and automation, including SDKs, CLI, and a cloud platform for running tasks.\n- Code Snippets: 1282\n- Trust Score: 10\n----------\n- Title: Zendriver\n- Context7-compatible library ID: /cdpdriver/zendriver\n- Description: Zendriver is a fast, async-first, and undetectable web scraping and automation framework using the Chrome Devtools Protocol, allowing Python users to interact with real browsers.\n- Code Snippets: 29\n- Trust Score: 5.9\n----------\n- Title: Feapder\n- Context7-compatible library ID: /boris-code/feapder\n- Description: Feapder is a powerful and easy-to-use Python web crawler framework with four types of spiders (AirSpider, Spider, TaskSpider, BatchSpider) to meet different needs, supporting breakpoint resuming, monitoring, browser rendering, and large-scale data deduplication.\n- Code Snippets: 296\n- Trust Score: 9.4\n----------\n- Title: Puppetparser\n- Context7-compatible library ID: /nfsaavedra/puppetparser\n- Description: PuppetParser is a Python library that parses Puppet scripts, transforming them into an object model representing the Puppet DSL language constructs.\n- Code Snippets: 4\n- Trust Score: 6.2\n----------\n- Title: Grover\n- Context7-compatible library ID: /studiosity/grover\n- Description: Grover is a Ruby gem that transforms HTML into PDFs, PNGs, or JPEGs using Google Puppeteer and Chromium, offering extensive configuration options for layout and output.\n- Code Snippets: 50\n- Trust Score: 8.3\n----------\n- Title: Browser Use\n- Context7-compatible library ID: /context7/browser-use\n- Description: Browser Use enables AI agents to control web browsers by providing a simple interface for browser automation, making websites accessible for AI.\n- Code Snippets: 535\n- Trust Score: 7.5\n----------\n- Title: Hyperbrowser\n- Context7-compatible library ID: /context7/docs_hyperbrowser_ai\n- Description: Hyperbrowser is a next-generation platform designed for AI developers, enabling scalable browser automation and web scraping. It empowers AI agents to navigate the web, collect data, and perform complex tasks by providing robust infrastructure, anti-bot protection, and powerful APIs.\n- Code Snippets: 408\n- Trust Score: 7.5\n----------\n- Title: Rust Headless Chrome\n- Context7-compatible library ID: /rust-headless-chrome/rust-headless-chrome\n- Description: A high-level API to control headless Chrome or Chromium over the DevTools Protocol. It is the Rust equivalent of Puppeteer, a Node library maintained by the Chrome DevTools team.\n- Code Snippets: 11\n- Trust Score: 4.7\n----------\n- Title: Crawlee Python\n- Context7-compatible library ID: /apify/crawlee-python\n- Description: Crawlee for Python is a web scraping and browser automation library that helps you build reliable scrapers quickly, making your crawlers appear human-like and bypass bot protections.\n- Code Snippets: 253\n- Trust Score: 10\n----------\n- Title: ScrapingBee\n- Context7-compatible library ID: /context7/scrapingbee\n- Description: ScrapingBee is a web scraping API designed to simplify data extraction from web pages, offering features like headless browser rendering, proxy management, and AI-powered data extraction.\n- Code Snippets: 437\n- Trust Score: 7.5"}]}
{"parentUuid":"1a1dd557-cfd9-4f2c-aa50-890355678fac","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01AtS5whhdPZb48Bg8R4WhSG","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01FWf8NLeBKacQDftreg2Dcu","name":"mcp__context7__get-library-docs","input":{"context7CompatibleLibraryID":"/puppeteer/puppeteer","topic":"PDF generation error handling","tokens":5000}}],"stop_reason":"tool_use","stop_sequence":null,"usage":{"input_tokens":0,"cache_creation_input_tokens":3513,"cache_read_input_tokens":87506,"output_tokens":114,"service_tier":"standard"}},"requestId":"req_011CS5yKZwhKrYuzey2cvjC4","type":"assistant","uuid":"fcfa3107-2a0c-4dc6-8cbb-18981ea0cc7f","timestamp":"2025-08-13T15:48:26.132Z"}
{"parentUuid":"fcfa3107-2a0c-4dc6-8cbb-18981ea0cc7f","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01FWf8NLeBKacQDftreg2Dcu","type":"tool_result","content":[{"type":"text","text":"========================\nCODE SNIPPETS\n========================\nTITLE: Puppeteer Page.createPDFStream API\nDESCRIPTION: Generates a PDF of the page using the `print` CSS media type. This method accepts an optional `PDFOptions` object to customize the PDF generation. It returns a Promise that resolves to a `ReadableStream<Uint8Array>`, allowing for stream-based processing of the PDF data. For generating PDFs with the `screen` media type, `page.emulateMediaType('screen')` should be called prior to `page.pdf()`. The `-webkit-print-color-adjust` CSS property can be used to force exact color rendering.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/puppeteer.page.createpdfstream.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass Page {\n  abstract createPDFStream(\n    options?: PDFOptions,\n  ): Promise<ReadableStream<Uint8Array>>;\n}\n\n// Parameters:\n// options: (Optional) [PDFOptions](./puppeteer.pdfoptions.md) - Options for generating the PDF.\n\n// Returns:\n// Promise<ReadableStream<Uint8Array>>\n\n// Remarks:\n// To generate a PDF with the `screen` media type, call [`page.emulateMediaType('screen')`](./puppeteer.page.emulatemediatype.md) before calling `page.pdf()`.\n// By default, `page.pdf()` generates a pdf with modified colors for printing. Use the [`-webkit-print-color-adjust`](https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-print-color-adjust) property to force rendering of exact colors.\n```\n\n----------------------------------------\n\nTITLE: Puppeteer Page.pdf() API Reference\nDESCRIPTION: Details the Page.pdf() method in Puppeteer, used for generating PDF documents from a page. It supports various options to control the PDF output, such as path, format, margins, and waiting conditions.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/guides/pdf-generation.md#_snippet_1\n\nLANGUAGE: APIDOC\nCODE:\n```\nPage.pdf(options)\n  - Generates a PDF of the page.\n  - Parameters:\n    - options (object): Configuration for PDF generation.\n      - path (string): The file path to save the PDF to. If omitted, the PDF will be returned as a Buffer.\n      - format (string): Specifies the page format. Defaults to 'A4'. Possible values: 'Letter', 'Tabloid', 'Ledger', 'Legal', 'Statement', 'Executive', 'A0', 'A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'B0', 'B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'C0', 'C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'Jis-B0', 'Jis-B1', 'Jis-B2', 'Jis-B3', 'Jis-B4', 'Jis-B5', 'Jis-B6', 'Hangul', 'Folio', 'Demy', 'Quarto', 'Size', 'Env10Envelope', 'Env11Envelope', 'Env12Envelope', 'Env14Envelope', 'Env9Envelope', 'Comm10Envelope', 'DL envelope', 'C5 envelope', 'C65 envelope', 'Invite envelope', 'Custom', etc.\n      - width (string|number): Paper width. Defaults to 'A4'.\n      - height (string|number): Paper height. Defaults to 'A4'.\n      - landscape (boolean): Set to true for landscape orientation. Defaults to false.\n      - displayHeaderFooter (boolean): Whether to display header and footer. Defaults to false.\n      - headerTemplate (string): HTML template for the print header. Can contain variables like {{title}}, {{url}}, {{date}}, {{time}}, {{secret}}.\n      - footerTemplate (string): HTML template for the print footer. Can contain variables like {{title}}, {{url}}, {{date}}, {{time}}, {{secret}}.\n      - printBackground (boolean): Whether to print background graphics. Defaults to false.\n      - scale (number): Scale of the normal page. Defaults to 1.\n      - preferCSSPageSize (boolean): Whether to prefer CSS sizes over available format options. Defaults to false.\n      - waitUntil (string): When to consider navigation successful. Defaults to 'load'. Possible values: 'load', 'domcontentloaded', 'networkidle0', 'networkidle2'.\n      - timeout (number): Maximum time in milliseconds to wait for the page to be rendered. Defaults to 0 (no timeout).\n      - margin (object): Page margins. Defaults to { top: '0px', right: '0px', bottom: '0px', left: '0px' }.\n        - top (string): Top margin.\n        - right (string): Right margin.\n        - bottom (string): Bottom margin.\n        - left (string): Left margin.\n      - pageRanges (string): Paper ranges to print, e.g. '1-5', '1,3,5-10'. Defaults to empty string, which means print all pages.\n      - ignoreInvalidPageRanges (boolean): Ignores page ranges that are invalid. Defaults to false.\n      - headerTemplate (string): HTML template for the print header. Can contain variables like {{title}}, {{url}}, {{date}}, {{time}}, {{secret}}.\n      - footerTemplate (string): HTML template for the print footer. Can contain variables like {{title}}, {{url}}, {{date}}, {{time}}, {{secret}}.\n      - displayHeaderFooter (boolean): Whether to display header and footer. Defaults to false.\n      - printBackground (boolean): Whether to print background graphics. Defaults to false.\n      - scale (number): Scale of the normal page. Defaults to 1.\n      - preferCSSPageSize (boolean): Whether to prefer CSS sizes over available format options. Defaults to false.\n      - waitUntil (string): When to consider navigation successful. Defaults to 'load'. Possible values: 'load', 'domcontentloaded', 'networkidle0', 'networkidle2'.\n      - timeout (number): Maximum time in milliseconds to wait for the page to be rendered. Defaults to 0 (no timeout).\n      - landscape (boolean): Set to true for landscape orientation. Defaults to false.\n      - pageRanges (string): Paper ranges to print, e.g. '1-5', '1,3,5-10'. Defaults to empty string, which means print all pages.\n      - ignoreInvalidPageRanges (boolean): Ignores page ranges that are invalid. Defaults to false.\n\n  - Returns:\n    - Promise<Buffer|void>: A Promise that resolves to a Buffer containing the PDF data if path is omitted, otherwise resolves to void.\n```\n\n----------------------------------------\n\nTITLE: PDF Issue Reporting\nDESCRIPTION: Guidelines for reporting issues related to PDF generation or handling in Puppeteer, specifying which Chromium bug tracker component to use based on the issue's nature (headful vs. headless).\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/contributing.md#_snippet_19\n\nLANGUAGE: APIDOC\nCODE:\n```\nPDF Issue Reporting:\n\n-   **General PDF Issues**: If the issue reproduces with the regular print dialog or in headful mode, file a bug against Blink>Layout component on crbug.com.\n    -   Link: https://bugs.chromium.org/p/chromium/issues/entry?components=Blink%3ELayout\n\n-   **Headless Specific PDF Issues**: If the issue is specific to Headless mode, file a bug against Internals>Headless component on crbug.com.\n    -   Link: https://bugs.chromium.org/p/chromium/issues/entry?components=Internals%3EHeadless\n```\n\n----------------------------------------\n\nTITLE: PDF Generation\nDESCRIPTION: Generates PDF documents from the page. Support is limited to a subset of parameters for customization.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/webdriver-bidi.md#_snippet_8\n\nLANGUAGE: APIDOC\nCODE:\n```\nPDF Generation:\n  Page.pdf(options?: { format?: PaperFormat, height?: number | string, landscape?: boolean, margin?: Margin, pageRanges?: string, printBackground?: boolean, scale?: number, width?: number | string }): Promise<Buffer>\n    - Generates a PDF of the page.\n    - Supported parameters:\n      - format: Paper format (e.g., 'A4').\n      - height: Paper height.\n      - landscape: Whether to print in landscape mode.\n      - margin: Margin options.\n      - pageRanges: Page ranges to print (e.g., '1-5', '2-3,5').\n      - printBackground: Whether to print background graphics.\n      - scale: Scale of the PDF.\n      - width: Paper width.\n    - Returns: Promise<Buffer>\n\n  Page.createPDFStream(options?: { format?: PaperFormat, height?: number | string, landscape?: boolean, margin?: Margin, pageRanges?: string, printBackground?: boolean, scale?: number, width?: number | string }): AsyncIterableIterator<Buffer>\n    - Generates a PDF of the page as a stream.\n    - Supported parameters:\n      - format: Paper format (e.g., 'A4').\n      - height: Paper height.\n      - landscape: Whether to print in landscape mode.\n      - margin: Margin options.\n      - pageRanges: Page ranges to print (e.g., '1-5', '2-3,5').\n      - printBackground: Whether to print background graphics.\n      - scale: Scale of the PDF.\n      - width: Paper width.\n    - Returns: AsyncIterableIterator<Buffer>\n```\n\n----------------------------------------\n\nTITLE: Generate PDF from URL with Puppeteer (TypeScript)\nDESCRIPTION: This snippet demonstrates how to launch a Puppeteer browser, navigate to a URL, and save the page content as a PDF file. It utilizes the Page.pdf() method to create the PDF, waiting for network activity to stabilize before generation.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/guides/pdf-generation.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst puppeteer = require('puppeteer');\n\n(async () => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n  await page.goto('https://news.ycombinator.com', {\n    waitUntil: 'networkidle2',\n  });\n  // Saves the PDF to hn.pdf.\n  await page.pdf({\n    path: 'hn.pdf',\n  });\n\n  await browser.close();\n})();\n```\n\n----------------------------------------\n\nTITLE: Generate PDF from URL with Puppeteer (TypeScript)\nDESCRIPTION: This snippet demonstrates how to launch a Puppeteer browser, navigate to a URL, and save the page content as a PDF file. It utilizes the Page.pdf() method to create the PDF, waiting for network activity to stabilize before generation.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/guides/pdf-generation.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst puppeteer = require('puppeteer');\n\n(async () => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n  await page.goto('https://news.ycombinator.com', {\n    waitUntil: 'networkidle2',\n  });\n  // Saves the PDF to hn.pdf.\n  await page.pdf({\n    path: 'hn.pdf',\n  });\n\n  await browser.close();\n})();\n```\n\n----------------------------------------\n\nTITLE: PDF Generation API\nDESCRIPTION: API methods for generating PDF documents from the page with support for specific parameters.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/webdriver-bidi.md#_snippet_9\n\nLANGUAGE: APIDOC\nCODE:\n```\nPage:\n  pdf(only `format`, `height`, `landscape`, `margin`, `pageRanges`, `printBackground`, `scale`, `width` are supported)\n  createPDFStream(only `format`, `height`, `landscape`, `margin`, `pageRanges`, `printBackground`, `scale`, `width` are supported)\n```\n\n----------------------------------------\n\nTITLE: Puppeteer PDF Generation Tips\nDESCRIPTION: Guidance on generating PDFs with screen media type and handling print colors using Puppeteer's page.pdf() method. To ensure exact color rendering, use the -webkit-print-color-adjust CSS property.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/puppeteer.page.md#_snippet_52\n\nLANGUAGE: APIDOC\nCODE:\n```\npage.emulateMediaType('screen')\npage.pdf()\n\nRemarks:\n  Use -webkit-print-color-adjust to force exact color rendering for printing.\n```\n\n----------------------------------------\n\nTITLE: Puppeteer Page.pdf() API Reference\nDESCRIPTION: Details the Page.pdf() method in Puppeteer, used for generating PDF documents from a page. It supports various options to control the PDF output, such as path, format, margins, and waiting conditions.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/guides/pdf-generation.md#_snippet_1\n\nLANGUAGE: APIDOC\nCODE:\n```\nPage.pdf(options)\n  - Generates a PDF of the page.\n  - Parameters:\n    - options (object): Configuration for PDF generation.\n      - path (string): The file path to save the PDF to. If omitted, the PDF will be returned as a Buffer.\n      - format (string): Specifies the page format. Defaults to 'A4'. Possible values: 'Letter', 'Tabloid', 'Ledger', 'Legal', 'Statement', 'Executive', 'A0', 'A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'B0', 'B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'C0', 'C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'Jis-B0', 'Jis-B1', 'Jis-B2', 'Jis-B3', 'Jis-B4', 'Jis-B5', 'Jis-B6', 'Hangul', 'Folio', 'Demy', 'Quarto', 'Size', 'Env10Envelope', 'Env11Envelope', 'Env12Envelope', 'Env14Envelope', 'Env9Envelope', 'Comm10Envelope', 'DL envelope', 'C5 envelope', 'C65 envelope', 'Invite envelope', 'Custom', etc.\n      - width (string|number): Paper width. Defaults to 'A4'.\n      - height (string|number): Paper height. Defaults to 'A4'.\n      - landscape (boolean): Set to true for landscape orientation. Defaults to false.\n      - displayHeaderFooter (boolean): Whether to display header and footer. Defaults to false.\n      - headerTemplate (string): HTML template for the print header. Can contain variables like {{title}}, {{url}}, {{date}}, {{time}}, {{secret}}.\n      - footerTemplate (string): HTML template for the print footer. Can contain variables like {{title}}, {{url}}, {{date}}, {{time}}, {{secret}}.\n      - printBackground (boolean): Whether to print background graphics. Defaults to false.\n      - scale (number): Scale of the normal page. Defaults to 1.\n      - preferCSSPageSize (boolean): Whether to prefer CSS sizes over available format options. Defaults to false.\n      - waitUntil (string): When to consider navigation successful. Defaults to 'load'. Possible values: 'load', 'domcontentloaded', 'networkidle0', 'networkidle2'.\n      - timeout (number): Maximum time in milliseconds to wait for the page to be rendered. Defaults to 0 (no timeout).\n      - margin (object): Page margins. Defaults to { top: '0px', right: '0px', bottom: '0px', left: '0px' }.\n        - top (string): Top margin.\n        - right (string): Right margin.\n        - bottom (string): Bottom margin.\n        - left (string): Left margin.\n      - pageRanges (string): Paper ranges to print, e.g. '1-5', '1,3,5-10'. Defaults to empty string, which means print all pages.\n      - ignoreInvalidPageRanges (boolean): Ignores page ranges that are invalid. Defaults to false.\n      - headerTemplate (string): HTML template for the print header. Can contain variables like {{title}}, {{url}}, {{date}}, {{time}}, {{secret}}.\n      - footerTemplate (string): HTML template for the print footer. Can contain variables like {{title}}, {{url}}, {{date}}, {{time}}, {{secret}}.\n      - displayHeaderFooter (boolean): Whether to display header and footer. Defaults to false.\n      - printBackground (boolean): Whether to print background graphics. Defaults to false.\n      - scale (number): Scale of the normal page. Defaults to 1.\n      - preferCSSPageSize (boolean): Whether to prefer CSS sizes over available format options. Defaults to false.\n      - waitUntil (string): When to consider navigation successful. Defaults to 'load'. Possible values: 'load', 'domcontentloaded', 'networkidle0', 'networkidle2'.\n      - timeout (number): Maximum time in milliseconds to wait for the page to be rendered. Defaults to 0 (no timeout).\n      - landscape (boolean): Set to true for landscape orientation. Defaults to false.\n      - pageRanges (string): Paper ranges to print, e.g. '1-5', '1,3,5-10'. Defaults to empty string, which means print all pages.\n      - ignoreInvalidPageRanges (boolean): Ignores page ranges that are invalid. Defaults to false.\n\n  - Returns:\n    - Promise<Buffer|void>: A Promise that resolves to a Buffer containing the PDF data if path is omitted, otherwise resolves to void.\n```\n\n----------------------------------------\n\nTITLE: Page.createPDFStream(options)\nDESCRIPTION: Generates a PDF of the page with the `print` CSS media type. To generate a PDF with the `screen` media type, call `page.emulateMediaType('screen')` before calling `page.pdf()`. By default, `page.pdf()` generates a pdf with modified colors for printing. Use the `-webkit-print-color-adjust` property to force rendering of exact colors.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/api/puppeteer.page.md#_snippet_21\n\nLANGUAGE: APIDOC\nCODE:\n```\nPage.createPDFStream(options)\n```\n\n----------------------------------------\n\nTITLE: Generate PDF from Web Page using Puppeteer in TypeScript\nDESCRIPTION: This snippet demonstrates how to launch a Puppeteer browser instance, navigate to a specified URL (e.g., 'https://news.ycombinator.com'), wait for network activity to cease, and then save the current page as a PDF file. The generated PDF is saved to 'hn.pdf' in the current directory. Finally, the browser instance is closed.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/guides/pdf-generation.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst browser = await puppeteer.launch();\nconst page = await browser.newPage();\nawait page.goto('https://news.ycombinator.com', {\n  waitUntil: 'networkidle2',\n});\n// Saves the PDF to hn.pdf.\nawait page.pdf({\n  path: 'hn.pdf',\n});\n\nawait browser.close();\n```\n\n----------------------------------------\n\nTITLE: PDF Generation\nDESCRIPTION: Generates PDF documents from the page. Support is limited to a subset of parameters for customization.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/webdriver-bidi.md#_snippet_8\n\nLANGUAGE: APIDOC\nCODE:\n```\nPDF Generation:\n  Page.pdf(options?: { format?: PaperFormat, height?: number | string, landscape?: boolean, margin?: Margin, pageRanges?: string, printBackground?: boolean, scale?: number, width?: number | string }): Promise<Buffer>\n    - Generates a PDF of the page.\n    - Supported parameters:\n      - format: Paper format (e.g., 'A4').\n      - height: Paper height.\n      - landscape: Whether to print in landscape mode.\n      - margin: Margin options.\n      - pageRanges: Page ranges to print (e.g., '1-5', '2-3,5').\n      - printBackground: Whether to print background graphics.\n      - scale: Scale of the PDF.\n      - width: Paper width.\n    - Returns: Promise<Buffer>\n\n  Page.createPDFStream(options?: { format?: PaperFormat, height?: number | string, landscape?: boolean, margin?: Margin, pageRanges?: string, printBackground?: boolean, scale?: number, width?: number | string }): AsyncIterableIterator<Buffer>\n    - Generates a PDF of the page as a stream.\n    - Supported parameters:\n      - format: Paper format (e.g., 'A4').\n      - height: Paper height.\n      - landscape: Whether to print in landscape mode.\n      - margin: Margin options.\n      - pageRanges: Page ranges to print (e.g., '1-5', '2-3,5').\n      - printBackground: Whether to print background graphics.\n      - scale: Scale of the PDF.\n      - width: Paper width.\n    - Returns: AsyncIterableIterator<Buffer>\n```\n\n----------------------------------------\n\nTITLE: Puppeteer Page.createPDFStream API\nDESCRIPTION: Generates a PDF of the page using the `print` CSS media type. This method accepts an optional `PDFOptions` object to customize the PDF generation. It returns a Promise that resolves to a `ReadableStream<Uint8Array>`, allowing for stream-based processing of the PDF data. For generating PDFs with the `screen` media type, `page.emulateMediaType('screen')` should be called prior to `page.pdf()`. The `-webkit-print-color-adjust` CSS property can be used to force exact color rendering.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/puppeteer.page.createpdfstream.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass Page {\n  abstract createPDFStream(\n    options?: PDFOptions,\n  ): Promise<ReadableStream<Uint8Array>>;\n}\n\n// Parameters:\n// options: (Optional) [PDFOptions](./puppeteer.pdfoptions.md) - Options for generating the PDF.\n\n// Returns:\n// Promise<ReadableStream<Uint8Array>>\n\n// Remarks:\n// To generate a PDF with the `screen` media type, call [`page.emulateMediaType('screen')`](./puppeteer.page.emulatemediatype.md) before calling `page.pdf()`.\n// By default, `page.pdf()` generates a pdf with modified colors for printing. Use the [`-webkit-print-color-adjust`](https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-print-color-adjust) property to force rendering of exact colors.\n```\n\n----------------------------------------\n\nTITLE: Generate PDF with Screen Media Type in Puppeteer\nDESCRIPTION: Instructions on how to generate a PDF using Puppeteer's `page.pdf()` method, ensuring it uses the 'screen' media type and handles print color adjustments.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/api/puppeteer.page.md#_snippet_53\n\nLANGUAGE: APIDOC\nCODE:\n```\nTo generate a PDF with the `screen` media type, call `page.emulateMediaType('screen')` before calling `page.pdf()`.\nBy default, `page.pdf()` generates a pdf with modified colors for printing. Use the `-webkit-print-color-adjust` property to force rendering of exact colors.\n```\n\n----------------------------------------\n\nTITLE: PDF Issue Reporting\nDESCRIPTION: Guidelines for reporting issues related to PDF generation or handling in Puppeteer, specifying which Chromium bug tracker component to use based on the issue's nature (headful vs. headless).\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/contributing.md#_snippet_19\n\nLANGUAGE: APIDOC\nCODE:\n```\nPDF Issue Reporting:\n\n-   **General PDF Issues**: If the issue reproduces with the regular print dialog or in headful mode, file a bug against Blink>Layout component on crbug.com.\n    -   Link: https://bugs.chromium.org/p/chromium/issues/entry?components=Blink%3ELayout\n\n-   **Headless Specific PDF Issues**: If the issue is specific to Headless mode, file a bug against Internals>Headless component on crbug.com.\n    -   Link: https://bugs.chromium.org/p/chromium/issues/entry?components=Internals%3EHeadless\n```\n\n----------------------------------------\n\nTITLE: PDFOptions\nDESCRIPTION: Valid options to configure PDF generation via [Page.pdf()](./puppeteer.page.pdf.md).\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/api/index.md#_snippet_76\n\nLANGUAGE: APIDOC\nCODE:\n```\nPDFOptions\n```\n\n----------------------------------------\n\nTITLE: Page.pdf() API Documentation\nDESCRIPTION: Generates a PDF of the page with the `print` CSS media type. This method takes an optional `PDFOptions` object to configure the PDF generation and returns a Promise that resolves to a `Uint8Array` containing the PDF data.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/puppeteer.page.pdf.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass Page {\n  abstract pdf(options?: PDFOptions): Promise<Uint8Array>;\n}\n\n---\n\n**Method:** Page.pdf\n\n**Description:** Generates a PDF of the page with the `print` CSS media type.\n\n**Parameters:**\n\n*   `options` (PDFOptions, optional): Configuration options for PDF generation.\n    *   Type: [PDFOptions](./puppeteer.pdfoptions.md)\n    *   Description: Options for generating the PDF.\n\n**Returns:**\n\n*   Type: `Promise<Uint8Array>`\n    *   Description: A Promise that resolves to a `Uint8Array` containing the PDF content.\n\n**Remarks:**\n\n*   To generate a PDF with the `screen` media type, call `page.emulateMediaType('screen')` before calling `page.pdf()`.\n*   By default, `page.pdf()` generates a PDF with modified colors for printing. Use the `-webkit-print-color-adjust` CSS property to force rendering of exact colors.\n```\n\n----------------------------------------\n\nTITLE: Generate PDF of Page\nDESCRIPTION: Generates a PDF of the page with the `print` CSS media type.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/api/puppeteer.page.md#_snippet_52\n\nLANGUAGE: APIDOC\nCODE:\n```\npdf(options?: object)\n  options: object (optional) - Options for PDF generation.\n  Returns: Promise<Buffer>\n```\n\n----------------------------------------\n\nTITLE: Puppeteer API: PDFOptions\nDESCRIPTION: Valid options to configure PDF generation via [Page.pdf()](./puppeteer.page.pdf.md).\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/index.md#_snippet_97\n\nLANGUAGE: APIDOC\nCODE:\n```\nPDFOptions\n```\n\n----------------------------------------\n\nTITLE: Page.pdf() API Documentation\nDESCRIPTION: Generates a PDF of the page with the `print` CSS media type. This method takes an optional `PDFOptions` object to configure the PDF generation and returns a Promise that resolves to a `Uint8Array` containing the PDF data.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/puppeteer.page.pdf.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass Page {\n  abstract pdf(options?: PDFOptions): Promise<Uint8Array>;\n}\n\n---\n\n**Method:** Page.pdf\n\n**Description:** Generates a PDF of the page with the `print` CSS media type.\n\n**Parameters:**\n\n*   `options` (PDFOptions, optional): Configuration options for PDF generation.\n    *   Type: [PDFOptions](./puppeteer.pdfoptions.md)\n    *   Description: Options for generating the PDF.\n\n**Returns:**\n\n*   Type: `Promise<Uint8Array>`\n    *   Description: A Promise that resolves to a `Uint8Array` containing the PDF content.\n\n**Remarks:**\n\n*   To generate a PDF with the `screen` media type, call `page.emulateMediaType('screen')` before calling `page.pdf()`.\n*   By default, `page.pdf()` generates a PDF with modified colors for printing. Use the `-webkit-print-color-adjust` CSS property to force rendering of exact colors.\n```\n\n----------------------------------------\n\nTITLE: PDFMargin Interface Properties\nDESCRIPTION: Details the properties of the `PDFMargin` interface, including their types and optionality, used for specifying margins in PDF generation.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/api/puppeteer.pdfmargin.md#_snippet_1\n\nLANGUAGE: APIDOC\nCODE:\n```\ninterface PDFMargin:\n  properties:\n    bottom: string | number (optional)\n    left: string | number (optional)\n    right: string | number (optional)\n    top: string | number (optional)\n```\n\n----------------------------------------\n\nTITLE: Create PDF Stream\nDESCRIPTION: Generates a PDF of the page with the `print` CSS media type. Can emulate `screen` media type by calling `page.emulateMediaType('screen')` before `page.pdf()`. Supports forcing exact colors using `-webkit-print-color-adjust`.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/puppeteer.page.md#_snippet_25\n\nLANGUAGE: APIDOC\nCODE:\n```\ncreatePDFStream(options)\n  - Generates a PDF of the page.\n  - Parameters:\n    - options: Object with PDF generation options.\n  - Remarks:\n    - To generate a PDF with the `screen` media type, call `page.emulateMediaType('screen')` before calling `page.pdf()`.\n    - By default, `page.pdf()` generates a pdf with modified colors for printing. Use the `-webkit-print-color-adjust` property to force rendering of exact colors.\n```\n\n----------------------------------------\n\nTITLE: PDFMargin\nDESCRIPTION: Defines the margin settings for PDF generation in Puppeteer.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/api/index.md#_snippet_75\n\nLANGUAGE: APIDOC\nCODE:\n```\nPDFMargin\n```\n\n----------------------------------------\n\nTITLE: Create PDF Stream\nDESCRIPTION: Generates a PDF of the page with the `print` CSS media type. Can emulate `screen` media type by calling `page.emulateMediaType('screen')` before `page.pdf()`. Supports forcing exact colors using `-webkit-print-color-adjust`.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/puppeteer.page.md#_snippet_25\n\nLANGUAGE: APIDOC\nCODE:\n```\ncreatePDFStream(options)\n  - Generates a PDF of the page.\n  - Parameters:\n    - options: Object with PDF generation options.\n  - Remarks:\n    - To generate a PDF with the `screen` media type, call `page.emulateMediaType('screen')` before calling `page.pdf()`.\n    - By default, `page.pdf()` generates a pdf with modified colors for printing. Use the `-webkit-print-color-adjust` property to force rendering of exact colors.\n```\n\n----------------------------------------\n\nTITLE: Page.pdf(options)\nDESCRIPTION: This method generates a PDF of the current page. The PDF is rendered using the `print` CSS media type, ensuring a print-friendly layout.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/puppeteer.page.md#_snippet_51\n\nLANGUAGE: APIDOC\nCODE:\n```\npage.pdf(options?: object): Promise<Buffer>\n  options: object (optional) - An object with PDF generation options.\n  Returns: Promise<Buffer> - A Promise that resolves to a Buffer containing the PDF data.\n```\n\n----------------------------------------\n\nTITLE: PDFOptions Interface Definition and Properties\nDESCRIPTION: Defines the `PDFOptions` interface used by Puppeteer's `Page.pdf()` method. It includes properties for controlling header/footer, page dimensions, margins, background printing, and other PDF generation settings.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/api/puppeteer.pdfoptions.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface PDFOptions\n```\n\nLANGUAGE: APIDOC\nCODE:\n```\ninterface PDFOptions {\n  displayHeaderFooter?: boolean; // Whether to show the header and footer. Default: false\n  footerTemplate?: string; // HTML template for the print footer. Has the same constraints and support for special classes as PDFOptions.headerTemplate.\n  format?: PaperFormat; // If set, this takes priority over the `width` and `height` options. Default: letter.\n  headerTemplate?: string; // HTML template for the print header. Should be valid HTML with the following classes used to inject values into them: date, title, url, pageNumber, totalPages.\n  height?: string | number; // Sets the height of paper. You can pass in a number or a string with a unit.\n  landscape?: boolean; // Whether to print in landscape orientation. Default: false\n  margin?: PDFMargin; // Set the PDF margins. Default: undefined (no margins are set).\n  omitBackground?: boolean; // Hides default white background and allows generating pdfs with transparency. Default: false\n  outline?: boolean; // (Experimental) Generate document outline. Default: false\n  pageRanges?: string; // Paper ranges to print, e.g. `1-5, 8, 11-13`. Default: The empty string, which means all pages are printed.\n  path?: string; // The path to save the file to. If the path is relative, it's resolved relative to the current working directory. Default: undefined (PDF will not be written to disk).\n  preferCSSPageSize?: boolean; // Give any CSS `@page` size declared in the page priority over what is declared in the `width` or `height` or `format` option. Default: false (will scale the content to fit the paper size).\n  printBackground?: boolean; // Set to `true` to print background graphics. Default: false\n  scale?: number; // Scales the rendering of the web page. Amount must be between `0.1` and `2`. Default: 1\n  tagged?: boolean; // (Experimental) Generate tagged (accessible) PDF. Default: true\n  timeout?: number; // Timeout in milliseconds. Pass `0` to disable timeout. The default value can be changed by using Page.setDefaultTimeout(). Default: 30_000\n  waitForFonts?: boolean; // If true, waits for `document.fonts.ready` to resolve. This might require activating the page using Page.bringToFront() if the page is in the background. Default: true\n  width?: string | number; // Sets the width of paper. You can pass in a number or a string with a unit.\n}\n```\n\n----------------------------------------\n\nTITLE: Page.createPDFStream() Method API Documentation\nDESCRIPTION: Detailed API documentation for the `createPDFStream` method of the `Page` class, including its TypeScript signature, parameters, return type, and important remarks regarding media types and color adjustments for PDF generation.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/api/puppeteer.page.createpdfstream.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass Page {\n  abstract createPDFStream(\n    options?: PDFOptions,\n  ): Promise<ReadableStream<Uint8Array>>;\n}\n```\n\nLANGUAGE: APIDOC\nCODE:\n```\nParameters:\n  options:\n    Type: PDFOptions\n    Description: (Optional) options for generating the PDF.\nReturns:\n  Promise<ReadableStream<Uint8Array>>\n```\n\nLANGUAGE: APIDOC\nCODE:\n```\nRemarks:\n  To generate a PDF with the `screen` media type, call `page.emulateMediaType('screen')` before calling `page.pdf()`.\n  By default, `page.pdf()` generates a pdf with modified colors for printing. Use the `-webkit-print-color-adjust` property to force rendering of exact colors.\n```\n\n----------------------------------------\n\nTITLE: ElementHandle.toElement Method Exceptions\nDESCRIPTION: Describes the conditions under which the ElementHandle.toElement method may throw an error and important considerations regarding handle disposal.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/puppeteer.elementhandle.toelement.md#_snippet_3\n\nLANGUAGE: APIDOC\nCODE:\n```\nExceptions:\n  An error if the handle does not match. The handle will not be automatically disposed.\n```\n\n----------------------------------------\n\nTITLE: Page.pdf() API Documentation\nDESCRIPTION: Detailed API documentation for the `Page.pdf()` method, including its parameters, return type, and important remarks regarding media types and color rendering. It generates a PDF of the page using the `print` CSS media type.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/api/puppeteer.page.pdf.md#_snippet_1\n\nLANGUAGE: APIDOC\nCODE:\n```\nMethod: Page.pdf()\nDescription: Generates a PDF of the page with the `print` CSS media type.\nParameters:\n  options:\n    Type: PDFOptions\n    Description: (Optional) options for generating the PDF.\nReturns: Promise<Uint8Array>\nRemarks:\n  To generate a PDF with the `screen` media type, call `page.emulateMediaType('screen')` before calling `page.pdf()`.\n  By default, `page.pdf()` generates a pdf with modified colors for printing. Use the `-webkit-print-color-adjust` property to force rendering of exact colors.\n```\n\n----------------------------------------\n\nTITLE: Define TypeScript ErrorCode Type\nDESCRIPTION: Defines a TypeScript union type named 'ErrorCode'. This type enumerates a comprehensive list of potential error conditions that can arise during operations, including network failures, access issues, and timeouts. It provides a standardized set of error identifiers for consistent error handling.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/api/puppeteer.errorcode.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport type ErrorCode =\n  | 'aborted'\n  | 'accessdenied'\n  | 'addressunreachable'\n  | 'blockedbyclient'\n  | 'blockedbyresponse'\n  | 'connectionaborted'\n  | 'connectionclosed'\n  | 'connectionfailed'\n  | 'connectionrefused'\n  | 'connectionreset'\n  | 'internetdisconnected'\n  | 'namenotresolved'\n  | 'timedout'\n  | 'failed';\n```\n\n----------------------------------------\n\nTITLE: Enable and Handle Request Interception\nDESCRIPTION: Example demonstrating how to enable request interception using Page.setRequestInterception(true) and handle intercepted requests by aborting image files (.png, .jpg) and continuing others.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/puppeteer.page.setrequestinterception.md#_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport puppeteer from 'puppeteer';\n(async () => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n  await page.setRequestInterception(true);\n  page.on('request', interceptedRequest => {\n    if (\n      interceptedRequest.url().endsWith('.png') ||\n      interceptedRequest.url().endsWith('.jpg')\n    )\n      interceptedRequest.abort();\n    else interceptedRequest.continue();\n  });\n  await page.goto('https://example.com');\n  await browser.close();\n})();\n```\n\n----------------------------------------\n\nTITLE: Enable and Handle Request Interception\nDESCRIPTION: Example demonstrating how to enable request interception using Page.setRequestInterception(true) and handle intercepted requests by aborting image files (.png, .jpg) and continuing others.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/puppeteer.page.setrequestinterception.md#_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport puppeteer from 'puppeteer';\n(async () => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n  await page.setRequestInterception(true);\n  page.on('request', interceptedRequest => {\n    if (\n      interceptedRequest.url().endsWith('.png') ||\n      interceptedRequest.url().endsWith('.jpg')\n    )\n      interceptedRequest.abort();\n    else interceptedRequest.continue();\n  });\n  await page.goto('https://example.com');\n  await browser.close();\n})();\n```\n\n----------------------------------------\n\nTITLE: ProtocolError Class\nDESCRIPTION: Represents an error originating from the protocol layer in Puppeteer. This class extends PuppeteerError and includes specific properties related to protocol errors.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/puppeteer.protocolerror.md#_snippet_0\n\nLANGUAGE: APIDOC\nCODE:\n```\nProtocolError:\n  extends: PuppeteerError\n  description: Emitted whenever there is an error from the protocol.\n  properties:\n    code: readonly number | undefined\n      Description: The error code, if available.\n    originalMessage: readonly string\n      Description: The original error message received from the protocol.\n```\n\n----------------------------------------\n\nTITLE: ErrorCode Type Definition\nDESCRIPTION: This TypeScript type defines a union of string literals that represent common error codes encountered in the system. It provides a strongly typed way to handle and categorize different error conditions.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/puppeteer.errorcode.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport type ErrorCode =\n  | 'aborted'\n  | 'accessdenied'\n  | 'addressunreachable'\n  | 'blockedbyclient'\n  | 'blockedbyresponse'\n  | 'connectionaborted'\n  | 'connectionclosed'\n  | 'connectionfailed'\n  | 'connectionrefused'\n  | 'connectionreset'\n  | 'internetdisconnected'\n  | 'namenotresolved'\n  | 'timedout'\n  | 'failed';\n```\n\n----------------------------------------\n\nTITLE: Puppeteer Error Types\nDESCRIPTION: Details common error types thrown by Puppeteer operations, including ProtocolError, PuppeteerError, and TimeoutError, along with their typical causes and related methods.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/index.md#_snippet_20\n\nLANGUAGE: APIDOC\nCODE:\n```\nProtocolError:\n  Description: Emitted whenever there is an error from the protocol.\n\nPuppeteerError:\n  Description: The base class for all Puppeteer-specific errors.\n  Remarks: The constructor is marked as internal. Third-party code should not call the constructor directly or create subclasses.\n\nTimeoutError:\n  Description: Emitted whenever certain operations are terminated due to timeout.\n  Example Operations: `page.waitForSelector`, `puppeteer.launch`.\n```\n\n----------------------------------------\n\nTITLE: ErrorCode Type Definition\nDESCRIPTION: This TypeScript type defines a union of string literals that represent common error codes encountered in the system. It provides a strongly typed way to handle and categorize different error conditions.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/puppeteer.errorcode.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport type ErrorCode =\n  | 'aborted'\n  | 'accessdenied'\n  | 'addressunreachable'\n  | 'blockedbyclient'\n  | 'blockedbyresponse'\n  | 'connectionaborted'\n  | 'connectionclosed'\n  | 'connectionfailed'\n  | 'connectionrefused'\n  | 'connectionreset'\n  | 'internetdisconnected'\n  | 'namenotresolved'\n  | 'timedout'\n  | 'failed';\n```\n\n----------------------------------------\n\nTITLE: ProtocolError Class API Reference\nDESCRIPTION: API documentation for the `ProtocolError` class, detailing its inheritance and properties. This class represents errors originating from the protocol.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/api/puppeteer.protocolerror.md#_snippet_1\n\nLANGUAGE: APIDOC\nCODE:\n```\nclass ProtocolError\n  Extends: PuppeteerError\n  Properties:\n    code: readonly number | undefined\n    originalMessage: readonly string\n```\n\n----------------------------------------\n\nTITLE: ProtocolError Class\nDESCRIPTION: Represents an error originating from the protocol layer in Puppeteer. This class extends PuppeteerError and includes specific properties related to protocol errors.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/puppeteer.protocolerror.md#_snippet_0\n\nLANGUAGE: APIDOC\nCODE:\n```\nProtocolError:\n  extends: PuppeteerError\n  description: Emitted whenever there is an error from the protocol.\n  properties:\n    code: readonly number | undefined\n      Description: The error code, if available.\n    originalMessage: readonly string\n      Description: The original error message received from the protocol.\n```\n\n----------------------------------------\n\nTITLE: ProtocolError Class (Puppeteer API)\nDESCRIPTION: ProtocolError is emitted whenever there is an error originating from the protocol layer.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/api/index.md#_snippet_27\n\nLANGUAGE: APIDOC\nCODE:\n```\nProtocolError:\n  description: Emitted whenever there is an error from the protocol.\n```\n\n----------------------------------------\n\nTITLE: Log Pending Protocol Errors with debugInfo\nDESCRIPTION: Logs pending protocol errors in Puppeteer to help diagnose issues with asynchronous calls. The `debugInfo.pendingProtocolErrors` getter returns a list of `Error` objects, whose stacktraces can pinpoint the code triggering a protocol call.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/guides/debugging.md#_snippet_6\n\nLANGUAGE: ts\nCODE:\n```\nconsole.log(browser.debugInfo.pendingProtocolErrors);\n```\n\n----------------------------------------\n\nTITLE: Puppeteer Error Types\nDESCRIPTION: Details common error types thrown by Puppeteer operations, including ProtocolError, PuppeteerError, and TimeoutError, along with their typical causes and related methods.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/index.md#_snippet_20\n\nLANGUAGE: APIDOC\nCODE:\n```\nProtocolError:\n  Description: Emitted whenever there is an error from the protocol.\n\nPuppeteerError:\n  Description: The base class for all Puppeteer-specific errors.\n  Remarks: The constructor is marked as internal. Third-party code should not call the constructor directly or create subclasses.\n\nTimeoutError:\n  Description: Emitted whenever certain operations are terminated due to timeout.\n  Example Operations: `page.waitForSelector`, `puppeteer.launch`.\n```\n\n----------------------------------------\n\nTITLE: Class: ProtocolError\nDESCRIPTION: ProtocolError is emitted whenever an error originates from the underlying protocol.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/index.md#_snippet_29\n\nLANGUAGE: APIDOC\nCODE:\n```\nClass: ProtocolError\n  Description: Emitted whenever there is an error from the protocol.\n```\n\n----------------------------------------\n\nTITLE: HTTPRequest Event Handling\nDESCRIPTION: Demonstrates how to listen for network requests made by a page. The 'request' event is emitted when a request is issued, and 'requestfinished' or 'requestfailed' events signal completion or failure. HTTP Error responses are considered successful from an HTTP standpoint.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/index.md#_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\npage.on('request', request => {\n  // Handle the request\n});\n\npage.on('requestfinished', request => {\n  // Handle finished request\n});\n\npage.on('requestfailed', request => {\n  // Handle failed request\n});\n```\n\n----------------------------------------\n\nTITLE: JavaScript Function Call Chain with Error\nDESCRIPTION: This JavaScript code defines three functions (a, b, c) where 'a' calls 'b', and 'b' calls 'c'. The 'c' function intentionally throws an error, demonstrating a basic call stack and error propagation.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/test/assets/error.html#_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\na();\nfunction a() {\n  b();\n}\nfunction b() {\n  c();\n}\nfunction c() {\n  throw new Error('Fancy error!');\n}\n```\n\n----------------------------------------\n\nTITLE: Log Pending Protocol Errors with debugInfo\nDESCRIPTION: Logs pending protocol errors in Puppeteer to help diagnose issues with asynchronous calls. The `debugInfo.pendingProtocolErrors` getter returns a list of `Error` objects, whose stacktraces can pinpoint the code triggering a protocol call.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/guides/debugging.md#_snippet_6\n\nLANGUAGE: ts\nCODE:\n```\nconsole.log(browser.debugInfo.pendingProtocolErrors);\n```\n\n----------------------------------------\n\nTITLE: HTTPRequest.abort() method\nDESCRIPTION: Aborts a request. This method requires request interception to be enabled via Page.setRequestInterception(). It accepts an optional error code and priority.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/puppeteer.httprequest.abort.md#_snippet_0\n\nLANGUAGE: APIDOC\nCODE:\n```\nHTTPRequest.abort(errorCode?: ErrorCode, priority?: number): Promise<void>\n  Aborts a request.\n\n  Parameters:\n    errorCode: ErrorCode (Optional) - optional error code to provide.\n    priority: number (Optional) - If provided, intercept is resolved using cooperative handling rules. Otherwise, intercept is resolved immediately.\n\n  Returns:\n    Promise<void>\n\n  Remarks:\n    To use this, request interception should be enabled with Page.setRequestInterception(). If it is not enabled, this method will throw an exception immediately.\n```\n\n----------------------------------------\n\nTITLE: HTTPRequest Event Handling\nDESCRIPTION: Demonstrates how to listen for network requests made by a page. The 'request' event is emitted when a request is issued, and 'requestfinished' or 'requestfailed' events signal completion or failure. HTTP Error responses are considered successful from an HTTP standpoint.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/index.md#_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\npage.on('request', request => {\n  // Handle the request\n});\n\npage.on('requestfinished', request => {\n  // Handle finished request\n});\n\npage.on('requestfailed', request => {\n  // Handle failed request\n});\n```\n\n----------------------------------------\n\nTITLE: Page.pdf() method TypeScript Signature\nDESCRIPTION: Defines the abstract signature for the `pdf` method within the `Page` class, showing it accepts optional `PDFOptions` and returns a `Promise<Uint8Array>`.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/api/puppeteer.page.pdf.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass Page {\n  abstract pdf(options?: PDFOptions): Promise<Uint8Array>;\n}\n```\n\n----------------------------------------\n\nTITLE: HTTPRequest.abort() method\nDESCRIPTION: Aborts a request. This method requires request interception to be enabled via Page.setRequestInterception(). It accepts an optional error code and priority.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/puppeteer.httprequest.abort.md#_snippet_0\n\nLANGUAGE: APIDOC\nCODE:\n```\nHTTPRequest.abort(errorCode?: ErrorCode, priority?: number): Promise<void>\n  Aborts a request.\n\n  Parameters:\n    errorCode: ErrorCode (Optional) - optional error code to provide.\n    priority: number (Optional) - If provided, intercept is resolved using cooperative handling rules. Otherwise, intercept is resolved immediately.\n\n  Returns:\n    Promise<void>\n\n  Remarks:\n    To use this, request interception should be enabled with Page.setRequestInterception(). If it is not enabled, this method will throw an exception immediately.\n```\n\n----------------------------------------\n\nTITLE: Class: PuppeteerError\nDESCRIPTION: This class serves as the base for all errors specific to the Puppeteer library.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/index.md#_snippet_31\n\nLANGUAGE: APIDOC\nCODE:\n```\nClass: PuppeteerError\n  Description: Base class for all Puppeteer-specific errors.\n  Remarks: Constructor is internal; third-party code should not call directly or subclass.\n```\n\n----------------------------------------\n\nTITLE: Puppeteer PDFOptions Interface\nDESCRIPTION: Defines the configuration options for generating PDFs using Puppeteer's Page.pdf() method. This interface covers settings for headers, footers, paper format, dimensions, margins, background printing, and more.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/puppeteer.pdfoptions.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface PDFOptions\n```\n\nLANGUAGE: APIDOC\nCODE:\n```\nPuppeteer PDFOptions Interface\n\nThis interface defines the configuration options for generating PDFs using Puppeteer's Page.pdf() method.\n\nProperties:\n\n- displayHeaderFooter: boolean (optional)\n  Whether to show the header and footer. Defaults to `false`.\n\n- footerTemplate: string (optional)\n  HTML template for the print footer. Has the same constraints and support for special classes as headerTemplate.\n\n- format: PaperFormat (optional)\n  Specifies the paper format (e.g., 'letter', 'A4'). Takes priority over width and height. Defaults to `letter`.\n\n- headerTemplate: string (optional)\n  HTML template for the print header. Should be valid HTML with classes like `date`, `title`, `url`, `pageNumber`, `totalPages` for injecting values.\n\n- height: string | number (optional)\n  Sets the height of the paper. Can be a number or a string with a unit.\n\n- landscape: boolean (optional)\n  Whether to print in landscape orientation. Defaults to `false`.\n\n- margin: PDFMargin (optional)\n  Sets the PDF margins. Defaults to `undefined` (no margins).\n\n- omitBackground: boolean (optional)\n  Hides default white background and allows generating PDFs with transparency. Defaults to `false`.\n\n- outline: boolean (optional) _(Experimental)_\n  Generate document outline. Defaults to `false`.\n\n- pageRanges: string (optional)\n  Paper ranges to print, e.g. `1-5, 8, 11-13`. Defaults to an empty string (all pages).\n\n- path: string (optional)\n  The path to save the file to. If relative, it's resolved relative to the current working directory. Defaults to `undefined` (PDF not written to disk).\n\n- preferCSSPageSize: boolean (optional)\n  If true, CSS `@page` size declarations take priority over `width`, `height`, or `format` options. Defaults to `false` (scales content to fit paper size).\n\n- printBackground: boolean (optional)\n  Set to `true` to print background graphics. Defaults to `false`.\n\n- scale: number (optional)\n  Scales the rendering of the web page. Amount must be between `0.1` and `2`. Defaults to `1`.\n\n- tagged: boolean (optional) _(Experimental)_\n  Generate tagged (accessible) PDF. Defaults to `true`.\n\n- timeout: number (optional)\n  Timeout in milliseconds. Pass `0` to disable timeout. Defaults to `30000`. Can be changed via `Page.setDefaultTimeout()`.\n\n- waitForFonts: boolean (optional)\n  If true, waits for `document.fonts.ready` to resolve. May require `Page.bringToFront()` if the page is in the background. Defaults to `true`.\n\n- width: string | number (optional)\n  Sets the width of the paper. Can be a number or a string with a unit.\n```\n\n----------------------------------------\n\nTITLE: Screenshot Generation API\nDESCRIPTION: API methods for capturing screenshots of the page with support for specific parameters.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/webdriver-bidi.md#_snippet_8\n\nLANGUAGE: APIDOC\nCODE:\n```\nPage:\n  screenshot(supported parameters are `clip`, `encoding`, `fullPage`)\n```\n\n----------------------------------------\n\nTITLE: Evaluate JavaScript Handle\nDESCRIPTION: Evaluates a function in the page's context and returns the value wrapped in an in-page object handle. Waits for promises to resolve.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/puppeteer.page.md#_snippet_36\n\nLANGUAGE: APIDOC\nCODE:\n```\nevaluateHandle(pageFunction, args)\n  - Evaluates a function in the page's context and returns the value wrapped in an in-page object handle.\n  - Parameters:\n    - pageFunction: The function to evaluate in the page context.\n    - args: Arguments to pass to the `pageFunction`.\n  - Returns:\n    - An `JSHandle` representing the result of the evaluation.\n  - Remarks:\n    - The only difference between `page.evaluate` and `page.evaluateHandle` is that `evaluateHandle` will return the value wrapped in an in-page object.\n    - If the function passed to `page.evaluateHandle` returns a Promise, the function will wait for the promise to resolve and return its value.\n    - You can pass a string instead of a function (although functions are recommended).\n```\n\n========================\nQUESTIONS AND ANSWERS\n========================\nTOPIC: Puppeteer PDF Generation\nQ: How does Puppeteer handle font loading during PDF generation?\nA: By default, the Puppeteer `Page.pdf()` function waits for fonts to be loaded before generating the PDF. This ensures that the text in the PDF is rendered correctly with the intended typography.\n\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/guides/pdf-generation.md#_qa_1\n\n----------------------------------------\n\nTOPIC: Puppeteer PDF Generation\nQ: How does Puppeteer handle font loading during PDF generation?\nA: By default, the Puppeteer `Page.pdf()` function waits for fonts to be loaded before generating the PDF. This ensures that the text in the PDF is rendered correctly with the intended typography.\n\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/guides/pdf-generation.md#_qa_1\n\n----------------------------------------\n\nTOPIC: Puppeteer PDFOptions Interface\nQ: How does Puppeteer handle saving generated PDFs to a file?\nA: The 'path' option can be used to specify the file path where the generated PDF should be saved. If a relative path is provided, it is resolved relative to the current working directory.\n\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/puppeteer.pdfoptions.md#_qa_9\n\n----------------------------------------\n\nTOPIC: Puppeteer PDFOptions Interface\nQ: How does Puppeteer handle saving generated PDFs to a file?\nA: The 'path' option can be used to specify the file path where the generated PDF should be saved. If a relative path is provided, it is resolved relative to the current working directory.\n\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/puppeteer.pdfoptions.md#_qa_9\n\n----------------------------------------\n\nTOPIC: Page.createPDFStream() method\nQ: How does Puppeteer handle colors for printing by default with Page.createPDFStream()?\nA: By default, Puppeteer's `page.pdf()` and `page.createPDFStream()` methods generate PDFs with modified colors optimized for printing. To ensure exact colors are rendered, you can use the CSS property `-webkit-print-color-adjust`.\n\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/puppeteer.page.createpdfstream.md#_qa_3\n\n----------------------------------------\n\nTOPIC: Page.createPDFStream() method\nQ: What is the purpose of the Page.createPDFStream() method in Puppeteer?\nA: The Page.createPDFStream() method in Puppeteer generates a PDF of the current page using the 'print' CSS media type. It returns a Promise that resolves to a ReadableStream of Uint8Array, allowing for efficient handling of PDF data.\n\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/puppeteer.page.createpdfstream.md#_qa_0\n\n----------------------------------------\n\nTOPIC: Page.pdf() method - Puppeteer\nQ: How does Puppeteer handle colors when generating PDFs by default?\nA: By default, Puppeteer's `page.pdf()` method generates PDFs with modified colors optimized for printing. To ensure exact colors are rendered, you can use the '-webkit-print-color-adjust' CSS property.\n\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/puppeteer.page.pdf.md#_qa_2\n\n----------------------------------------\n\nTOPIC: Page.createPDFStream() method\nQ: What is the purpose of the Page.createPDFStream() method in Puppeteer?\nA: The Page.createPDFStream() method in Puppeteer generates a PDF of the current page using the 'print' CSS media type. It returns a Promise that resolves to a ReadableStream of Uint8Array, allowing for efficient handling of PDF data.\n\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/puppeteer.page.createpdfstream.md#_qa_0\n\n----------------------------------------\n\nTOPIC: Page.createPDFStream() method\nQ: How does Puppeteer handle colors for printing by default with Page.createPDFStream()?\nA: By default, Puppeteer's `page.pdf()` and `page.createPDFStream()` methods generate PDFs with modified colors optimized for printing. To ensure exact colors are rendered, you can use the CSS property `-webkit-print-color-adjust`.\n\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/puppeteer.page.createpdfstream.md#_qa_3\n\n----------------------------------------\n\nTOPIC: Puppeteer PDF Generation\nQ: What Puppeteer API is used for generating PDFs?\nA: The `Page.pdf()` API is used for generating PDFs in Puppeteer. This function allows you to save the current page as a PDF file.\n\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/guides/pdf-generation.md#_qa_0"}]}]},"uuid":"0a1229b8-fb4c-4edd-81a4-b433f2d3867d","timestamp":"2025-08-13T15:48:26.913Z","toolUseResult":[{"type":"text","text":"========================\nCODE SNIPPETS\n========================\nTITLE: Puppeteer Page.createPDFStream API\nDESCRIPTION: Generates a PDF of the page using the `print` CSS media type. This method accepts an optional `PDFOptions` object to customize the PDF generation. It returns a Promise that resolves to a `ReadableStream<Uint8Array>`, allowing for stream-based processing of the PDF data. For generating PDFs with the `screen` media type, `page.emulateMediaType('screen')` should be called prior to `page.pdf()`. The `-webkit-print-color-adjust` CSS property can be used to force exact color rendering.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/puppeteer.page.createpdfstream.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass Page {\n  abstract createPDFStream(\n    options?: PDFOptions,\n  ): Promise<ReadableStream<Uint8Array>>;\n}\n\n// Parameters:\n// options: (Optional) [PDFOptions](./puppeteer.pdfoptions.md) - Options for generating the PDF.\n\n// Returns:\n// Promise<ReadableStream<Uint8Array>>\n\n// Remarks:\n// To generate a PDF with the `screen` media type, call [`page.emulateMediaType('screen')`](./puppeteer.page.emulatemediatype.md) before calling `page.pdf()`.\n// By default, `page.pdf()` generates a pdf with modified colors for printing. Use the [`-webkit-print-color-adjust`](https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-print-color-adjust) property to force rendering of exact colors.\n```\n\n----------------------------------------\n\nTITLE: Puppeteer Page.pdf() API Reference\nDESCRIPTION: Details the Page.pdf() method in Puppeteer, used for generating PDF documents from a page. It supports various options to control the PDF output, such as path, format, margins, and waiting conditions.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/guides/pdf-generation.md#_snippet_1\n\nLANGUAGE: APIDOC\nCODE:\n```\nPage.pdf(options)\n  - Generates a PDF of the page.\n  - Parameters:\n    - options (object): Configuration for PDF generation.\n      - path (string): The file path to save the PDF to. If omitted, the PDF will be returned as a Buffer.\n      - format (string): Specifies the page format. Defaults to 'A4'. Possible values: 'Letter', 'Tabloid', 'Ledger', 'Legal', 'Statement', 'Executive', 'A0', 'A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'B0', 'B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'C0', 'C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'Jis-B0', 'Jis-B1', 'Jis-B2', 'Jis-B3', 'Jis-B4', 'Jis-B5', 'Jis-B6', 'Hangul', 'Folio', 'Demy', 'Quarto', 'Size', 'Env10Envelope', 'Env11Envelope', 'Env12Envelope', 'Env14Envelope', 'Env9Envelope', 'Comm10Envelope', 'DL envelope', 'C5 envelope', 'C65 envelope', 'Invite envelope', 'Custom', etc.\n      - width (string|number): Paper width. Defaults to 'A4'.\n      - height (string|number): Paper height. Defaults to 'A4'.\n      - landscape (boolean): Set to true for landscape orientation. Defaults to false.\n      - displayHeaderFooter (boolean): Whether to display header and footer. Defaults to false.\n      - headerTemplate (string): HTML template for the print header. Can contain variables like {{title}}, {{url}}, {{date}}, {{time}}, {{secret}}.\n      - footerTemplate (string): HTML template for the print footer. Can contain variables like {{title}}, {{url}}, {{date}}, {{time}}, {{secret}}.\n      - printBackground (boolean): Whether to print background graphics. Defaults to false.\n      - scale (number): Scale of the normal page. Defaults to 1.\n      - preferCSSPageSize (boolean): Whether to prefer CSS sizes over available format options. Defaults to false.\n      - waitUntil (string): When to consider navigation successful. Defaults to 'load'. Possible values: 'load', 'domcontentloaded', 'networkidle0', 'networkidle2'.\n      - timeout (number): Maximum time in milliseconds to wait for the page to be rendered. Defaults to 0 (no timeout).\n      - margin (object): Page margins. Defaults to { top: '0px', right: '0px', bottom: '0px', left: '0px' }.\n        - top (string): Top margin.\n        - right (string): Right margin.\n        - bottom (string): Bottom margin.\n        - left (string): Left margin.\n      - pageRanges (string): Paper ranges to print, e.g. '1-5', '1,3,5-10'. Defaults to empty string, which means print all pages.\n      - ignoreInvalidPageRanges (boolean): Ignores page ranges that are invalid. Defaults to false.\n      - headerTemplate (string): HTML template for the print header. Can contain variables like {{title}}, {{url}}, {{date}}, {{time}}, {{secret}}.\n      - footerTemplate (string): HTML template for the print footer. Can contain variables like {{title}}, {{url}}, {{date}}, {{time}}, {{secret}}.\n      - displayHeaderFooter (boolean): Whether to display header and footer. Defaults to false.\n      - printBackground (boolean): Whether to print background graphics. Defaults to false.\n      - scale (number): Scale of the normal page. Defaults to 1.\n      - preferCSSPageSize (boolean): Whether to prefer CSS sizes over available format options. Defaults to false.\n      - waitUntil (string): When to consider navigation successful. Defaults to 'load'. Possible values: 'load', 'domcontentloaded', 'networkidle0', 'networkidle2'.\n      - timeout (number): Maximum time in milliseconds to wait for the page to be rendered. Defaults to 0 (no timeout).\n      - landscape (boolean): Set to true for landscape orientation. Defaults to false.\n      - pageRanges (string): Paper ranges to print, e.g. '1-5', '1,3,5-10'. Defaults to empty string, which means print all pages.\n      - ignoreInvalidPageRanges (boolean): Ignores page ranges that are invalid. Defaults to false.\n\n  - Returns:\n    - Promise<Buffer|void>: A Promise that resolves to a Buffer containing the PDF data if path is omitted, otherwise resolves to void.\n```\n\n----------------------------------------\n\nTITLE: PDF Issue Reporting\nDESCRIPTION: Guidelines for reporting issues related to PDF generation or handling in Puppeteer, specifying which Chromium bug tracker component to use based on the issue's nature (headful vs. headless).\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/contributing.md#_snippet_19\n\nLANGUAGE: APIDOC\nCODE:\n```\nPDF Issue Reporting:\n\n-   **General PDF Issues**: If the issue reproduces with the regular print dialog or in headful mode, file a bug against Blink>Layout component on crbug.com.\n    -   Link: https://bugs.chromium.org/p/chromium/issues/entry?components=Blink%3ELayout\n\n-   **Headless Specific PDF Issues**: If the issue is specific to Headless mode, file a bug against Internals>Headless component on crbug.com.\n    -   Link: https://bugs.chromium.org/p/chromium/issues/entry?components=Internals%3EHeadless\n```\n\n----------------------------------------\n\nTITLE: PDF Generation\nDESCRIPTION: Generates PDF documents from the page. Support is limited to a subset of parameters for customization.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/webdriver-bidi.md#_snippet_8\n\nLANGUAGE: APIDOC\nCODE:\n```\nPDF Generation:\n  Page.pdf(options?: { format?: PaperFormat, height?: number | string, landscape?: boolean, margin?: Margin, pageRanges?: string, printBackground?: boolean, scale?: number, width?: number | string }): Promise<Buffer>\n    - Generates a PDF of the page.\n    - Supported parameters:\n      - format: Paper format (e.g., 'A4').\n      - height: Paper height.\n      - landscape: Whether to print in landscape mode.\n      - margin: Margin options.\n      - pageRanges: Page ranges to print (e.g., '1-5', '2-3,5').\n      - printBackground: Whether to print background graphics.\n      - scale: Scale of the PDF.\n      - width: Paper width.\n    - Returns: Promise<Buffer>\n\n  Page.createPDFStream(options?: { format?: PaperFormat, height?: number | string, landscape?: boolean, margin?: Margin, pageRanges?: string, printBackground?: boolean, scale?: number, width?: number | string }): AsyncIterableIterator<Buffer>\n    - Generates a PDF of the page as a stream.\n    - Supported parameters:\n      - format: Paper format (e.g., 'A4').\n      - height: Paper height.\n      - landscape: Whether to print in landscape mode.\n      - margin: Margin options.\n      - pageRanges: Page ranges to print (e.g., '1-5', '2-3,5').\n      - printBackground: Whether to print background graphics.\n      - scale: Scale of the PDF.\n      - width: Paper width.\n    - Returns: AsyncIterableIterator<Buffer>\n```\n\n----------------------------------------\n\nTITLE: Generate PDF from URL with Puppeteer (TypeScript)\nDESCRIPTION: This snippet demonstrates how to launch a Puppeteer browser, navigate to a URL, and save the page content as a PDF file. It utilizes the Page.pdf() method to create the PDF, waiting for network activity to stabilize before generation.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/guides/pdf-generation.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst puppeteer = require('puppeteer');\n\n(async () => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n  await page.goto('https://news.ycombinator.com', {\n    waitUntil: 'networkidle2',\n  });\n  // Saves the PDF to hn.pdf.\n  await page.pdf({\n    path: 'hn.pdf',\n  });\n\n  await browser.close();\n})();\n```\n\n----------------------------------------\n\nTITLE: Generate PDF from URL with Puppeteer (TypeScript)\nDESCRIPTION: This snippet demonstrates how to launch a Puppeteer browser, navigate to a URL, and save the page content as a PDF file. It utilizes the Page.pdf() method to create the PDF, waiting for network activity to stabilize before generation.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/guides/pdf-generation.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst puppeteer = require('puppeteer');\n\n(async () => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n  await page.goto('https://news.ycombinator.com', {\n    waitUntil: 'networkidle2',\n  });\n  // Saves the PDF to hn.pdf.\n  await page.pdf({\n    path: 'hn.pdf',\n  });\n\n  await browser.close();\n})();\n```\n\n----------------------------------------\n\nTITLE: PDF Generation API\nDESCRIPTION: API methods for generating PDF documents from the page with support for specific parameters.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/webdriver-bidi.md#_snippet_9\n\nLANGUAGE: APIDOC\nCODE:\n```\nPage:\n  pdf(only `format`, `height`, `landscape`, `margin`, `pageRanges`, `printBackground`, `scale`, `width` are supported)\n  createPDFStream(only `format`, `height`, `landscape`, `margin`, `pageRanges`, `printBackground`, `scale`, `width` are supported)\n```\n\n----------------------------------------\n\nTITLE: Puppeteer PDF Generation Tips\nDESCRIPTION: Guidance on generating PDFs with screen media type and handling print colors using Puppeteer's page.pdf() method. To ensure exact color rendering, use the -webkit-print-color-adjust CSS property.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/puppeteer.page.md#_snippet_52\n\nLANGUAGE: APIDOC\nCODE:\n```\npage.emulateMediaType('screen')\npage.pdf()\n\nRemarks:\n  Use -webkit-print-color-adjust to force exact color rendering for printing.\n```\n\n----------------------------------------\n\nTITLE: Puppeteer Page.pdf() API Reference\nDESCRIPTION: Details the Page.pdf() method in Puppeteer, used for generating PDF documents from a page. It supports various options to control the PDF output, such as path, format, margins, and waiting conditions.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/guides/pdf-generation.md#_snippet_1\n\nLANGUAGE: APIDOC\nCODE:\n```\nPage.pdf(options)\n  - Generates a PDF of the page.\n  - Parameters:\n    - options (object): Configuration for PDF generation.\n      - path (string): The file path to save the PDF to. If omitted, the PDF will be returned as a Buffer.\n      - format (string): Specifies the page format. Defaults to 'A4'. Possible values: 'Letter', 'Tabloid', 'Ledger', 'Legal', 'Statement', 'Executive', 'A0', 'A1', 'A2', 'A3', 'A4', 'A5', 'A6', 'B0', 'B1', 'B2', 'B3', 'B4', 'B5', 'B6', 'C0', 'C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'Jis-B0', 'Jis-B1', 'Jis-B2', 'Jis-B3', 'Jis-B4', 'Jis-B5', 'Jis-B6', 'Hangul', 'Folio', 'Demy', 'Quarto', 'Size', 'Env10Envelope', 'Env11Envelope', 'Env12Envelope', 'Env14Envelope', 'Env9Envelope', 'Comm10Envelope', 'DL envelope', 'C5 envelope', 'C65 envelope', 'Invite envelope', 'Custom', etc.\n      - width (string|number): Paper width. Defaults to 'A4'.\n      - height (string|number): Paper height. Defaults to 'A4'.\n      - landscape (boolean): Set to true for landscape orientation. Defaults to false.\n      - displayHeaderFooter (boolean): Whether to display header and footer. Defaults to false.\n      - headerTemplate (string): HTML template for the print header. Can contain variables like {{title}}, {{url}}, {{date}}, {{time}}, {{secret}}.\n      - footerTemplate (string): HTML template for the print footer. Can contain variables like {{title}}, {{url}}, {{date}}, {{time}}, {{secret}}.\n      - printBackground (boolean): Whether to print background graphics. Defaults to false.\n      - scale (number): Scale of the normal page. Defaults to 1.\n      - preferCSSPageSize (boolean): Whether to prefer CSS sizes over available format options. Defaults to false.\n      - waitUntil (string): When to consider navigation successful. Defaults to 'load'. Possible values: 'load', 'domcontentloaded', 'networkidle0', 'networkidle2'.\n      - timeout (number): Maximum time in milliseconds to wait for the page to be rendered. Defaults to 0 (no timeout).\n      - margin (object): Page margins. Defaults to { top: '0px', right: '0px', bottom: '0px', left: '0px' }.\n        - top (string): Top margin.\n        - right (string): Right margin.\n        - bottom (string): Bottom margin.\n        - left (string): Left margin.\n      - pageRanges (string): Paper ranges to print, e.g. '1-5', '1,3,5-10'. Defaults to empty string, which means print all pages.\n      - ignoreInvalidPageRanges (boolean): Ignores page ranges that are invalid. Defaults to false.\n      - headerTemplate (string): HTML template for the print header. Can contain variables like {{title}}, {{url}}, {{date}}, {{time}}, {{secret}}.\n      - footerTemplate (string): HTML template for the print footer. Can contain variables like {{title}}, {{url}}, {{date}}, {{time}}, {{secret}}.\n      - displayHeaderFooter (boolean): Whether to display header and footer. Defaults to false.\n      - printBackground (boolean): Whether to print background graphics. Defaults to false.\n      - scale (number): Scale of the normal page. Defaults to 1.\n      - preferCSSPageSize (boolean): Whether to prefer CSS sizes over available format options. Defaults to false.\n      - waitUntil (string): When to consider navigation successful. Defaults to 'load'. Possible values: 'load', 'domcontentloaded', 'networkidle0', 'networkidle2'.\n      - timeout (number): Maximum time in milliseconds to wait for the page to be rendered. Defaults to 0 (no timeout).\n      - landscape (boolean): Set to true for landscape orientation. Defaults to false.\n      - pageRanges (string): Paper ranges to print, e.g. '1-5', '1,3,5-10'. Defaults to empty string, which means print all pages.\n      - ignoreInvalidPageRanges (boolean): Ignores page ranges that are invalid. Defaults to false.\n\n  - Returns:\n    - Promise<Buffer|void>: A Promise that resolves to a Buffer containing the PDF data if path is omitted, otherwise resolves to void.\n```\n\n----------------------------------------\n\nTITLE: Page.createPDFStream(options)\nDESCRIPTION: Generates a PDF of the page with the `print` CSS media type. To generate a PDF with the `screen` media type, call `page.emulateMediaType('screen')` before calling `page.pdf()`. By default, `page.pdf()` generates a pdf with modified colors for printing. Use the `-webkit-print-color-adjust` property to force rendering of exact colors.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/api/puppeteer.page.md#_snippet_21\n\nLANGUAGE: APIDOC\nCODE:\n```\nPage.createPDFStream(options)\n```\n\n----------------------------------------\n\nTITLE: Generate PDF from Web Page using Puppeteer in TypeScript\nDESCRIPTION: This snippet demonstrates how to launch a Puppeteer browser instance, navigate to a specified URL (e.g., 'https://news.ycombinator.com'), wait for network activity to cease, and then save the current page as a PDF file. The generated PDF is saved to 'hn.pdf' in the current directory. Finally, the browser instance is closed.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/guides/pdf-generation.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst browser = await puppeteer.launch();\nconst page = await browser.newPage();\nawait page.goto('https://news.ycombinator.com', {\n  waitUntil: 'networkidle2',\n});\n// Saves the PDF to hn.pdf.\nawait page.pdf({\n  path: 'hn.pdf',\n});\n\nawait browser.close();\n```\n\n----------------------------------------\n\nTITLE: PDF Generation\nDESCRIPTION: Generates PDF documents from the page. Support is limited to a subset of parameters for customization.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/webdriver-bidi.md#_snippet_8\n\nLANGUAGE: APIDOC\nCODE:\n```\nPDF Generation:\n  Page.pdf(options?: { format?: PaperFormat, height?: number | string, landscape?: boolean, margin?: Margin, pageRanges?: string, printBackground?: boolean, scale?: number, width?: number | string }): Promise<Buffer>\n    - Generates a PDF of the page.\n    - Supported parameters:\n      - format: Paper format (e.g., 'A4').\n      - height: Paper height.\n      - landscape: Whether to print in landscape mode.\n      - margin: Margin options.\n      - pageRanges: Page ranges to print (e.g., '1-5', '2-3,5').\n      - printBackground: Whether to print background graphics.\n      - scale: Scale of the PDF.\n      - width: Paper width.\n    - Returns: Promise<Buffer>\n\n  Page.createPDFStream(options?: { format?: PaperFormat, height?: number | string, landscape?: boolean, margin?: Margin, pageRanges?: string, printBackground?: boolean, scale?: number, width?: number | string }): AsyncIterableIterator<Buffer>\n    - Generates a PDF of the page as a stream.\n    - Supported parameters:\n      - format: Paper format (e.g., 'A4').\n      - height: Paper height.\n      - landscape: Whether to print in landscape mode.\n      - margin: Margin options.\n      - pageRanges: Page ranges to print (e.g., '1-5', '2-3,5').\n      - printBackground: Whether to print background graphics.\n      - scale: Scale of the PDF.\n      - width: Paper width.\n    - Returns: AsyncIterableIterator<Buffer>\n```\n\n----------------------------------------\n\nTITLE: Puppeteer Page.createPDFStream API\nDESCRIPTION: Generates a PDF of the page using the `print` CSS media type. This method accepts an optional `PDFOptions` object to customize the PDF generation. It returns a Promise that resolves to a `ReadableStream<Uint8Array>`, allowing for stream-based processing of the PDF data. For generating PDFs with the `screen` media type, `page.emulateMediaType('screen')` should be called prior to `page.pdf()`. The `-webkit-print-color-adjust` CSS property can be used to force exact color rendering.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/puppeteer.page.createpdfstream.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass Page {\n  abstract createPDFStream(\n    options?: PDFOptions,\n  ): Promise<ReadableStream<Uint8Array>>;\n}\n\n// Parameters:\n// options: (Optional) [PDFOptions](./puppeteer.pdfoptions.md) - Options for generating the PDF.\n\n// Returns:\n// Promise<ReadableStream<Uint8Array>>\n\n// Remarks:\n// To generate a PDF with the `screen` media type, call [`page.emulateMediaType('screen')`](./puppeteer.page.emulatemediatype.md) before calling `page.pdf()`.\n// By default, `page.pdf()` generates a pdf with modified colors for printing. Use the [`-webkit-print-color-adjust`](https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-print-color-adjust) property to force rendering of exact colors.\n```\n\n----------------------------------------\n\nTITLE: Generate PDF with Screen Media Type in Puppeteer\nDESCRIPTION: Instructions on how to generate a PDF using Puppeteer's `page.pdf()` method, ensuring it uses the 'screen' media type and handles print color adjustments.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/api/puppeteer.page.md#_snippet_53\n\nLANGUAGE: APIDOC\nCODE:\n```\nTo generate a PDF with the `screen` media type, call `page.emulateMediaType('screen')` before calling `page.pdf()`.\nBy default, `page.pdf()` generates a pdf with modified colors for printing. Use the `-webkit-print-color-adjust` property to force rendering of exact colors.\n```\n\n----------------------------------------\n\nTITLE: PDF Issue Reporting\nDESCRIPTION: Guidelines for reporting issues related to PDF generation or handling in Puppeteer, specifying which Chromium bug tracker component to use based on the issue's nature (headful vs. headless).\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/contributing.md#_snippet_19\n\nLANGUAGE: APIDOC\nCODE:\n```\nPDF Issue Reporting:\n\n-   **General PDF Issues**: If the issue reproduces with the regular print dialog or in headful mode, file a bug against Blink>Layout component on crbug.com.\n    -   Link: https://bugs.chromium.org/p/chromium/issues/entry?components=Blink%3ELayout\n\n-   **Headless Specific PDF Issues**: If the issue is specific to Headless mode, file a bug against Internals>Headless component on crbug.com.\n    -   Link: https://bugs.chromium.org/p/chromium/issues/entry?components=Internals%3EHeadless\n```\n\n----------------------------------------\n\nTITLE: PDFOptions\nDESCRIPTION: Valid options to configure PDF generation via [Page.pdf()](./puppeteer.page.pdf.md).\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/api/index.md#_snippet_76\n\nLANGUAGE: APIDOC\nCODE:\n```\nPDFOptions\n```\n\n----------------------------------------\n\nTITLE: Page.pdf() API Documentation\nDESCRIPTION: Generates a PDF of the page with the `print` CSS media type. This method takes an optional `PDFOptions` object to configure the PDF generation and returns a Promise that resolves to a `Uint8Array` containing the PDF data.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/puppeteer.page.pdf.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass Page {\n  abstract pdf(options?: PDFOptions): Promise<Uint8Array>;\n}\n\n---\n\n**Method:** Page.pdf\n\n**Description:** Generates a PDF of the page with the `print` CSS media type.\n\n**Parameters:**\n\n*   `options` (PDFOptions, optional): Configuration options for PDF generation.\n    *   Type: [PDFOptions](./puppeteer.pdfoptions.md)\n    *   Description: Options for generating the PDF.\n\n**Returns:**\n\n*   Type: `Promise<Uint8Array>`\n    *   Description: A Promise that resolves to a `Uint8Array` containing the PDF content.\n\n**Remarks:**\n\n*   To generate a PDF with the `screen` media type, call `page.emulateMediaType('screen')` before calling `page.pdf()`.\n*   By default, `page.pdf()` generates a PDF with modified colors for printing. Use the `-webkit-print-color-adjust` CSS property to force rendering of exact colors.\n```\n\n----------------------------------------\n\nTITLE: Generate PDF of Page\nDESCRIPTION: Generates a PDF of the page with the `print` CSS media type.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/api/puppeteer.page.md#_snippet_52\n\nLANGUAGE: APIDOC\nCODE:\n```\npdf(options?: object)\n  options: object (optional) - Options for PDF generation.\n  Returns: Promise<Buffer>\n```\n\n----------------------------------------\n\nTITLE: Puppeteer API: PDFOptions\nDESCRIPTION: Valid options to configure PDF generation via [Page.pdf()](./puppeteer.page.pdf.md).\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/index.md#_snippet_97\n\nLANGUAGE: APIDOC\nCODE:\n```\nPDFOptions\n```\n\n----------------------------------------\n\nTITLE: Page.pdf() API Documentation\nDESCRIPTION: Generates a PDF of the page with the `print` CSS media type. This method takes an optional `PDFOptions` object to configure the PDF generation and returns a Promise that resolves to a `Uint8Array` containing the PDF data.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/puppeteer.page.pdf.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass Page {\n  abstract pdf(options?: PDFOptions): Promise<Uint8Array>;\n}\n\n---\n\n**Method:** Page.pdf\n\n**Description:** Generates a PDF of the page with the `print` CSS media type.\n\n**Parameters:**\n\n*   `options` (PDFOptions, optional): Configuration options for PDF generation.\n    *   Type: [PDFOptions](./puppeteer.pdfoptions.md)\n    *   Description: Options for generating the PDF.\n\n**Returns:**\n\n*   Type: `Promise<Uint8Array>`\n    *   Description: A Promise that resolves to a `Uint8Array` containing the PDF content.\n\n**Remarks:**\n\n*   To generate a PDF with the `screen` media type, call `page.emulateMediaType('screen')` before calling `page.pdf()`.\n*   By default, `page.pdf()` generates a PDF with modified colors for printing. Use the `-webkit-print-color-adjust` CSS property to force rendering of exact colors.\n```\n\n----------------------------------------\n\nTITLE: PDFMargin Interface Properties\nDESCRIPTION: Details the properties of the `PDFMargin` interface, including their types and optionality, used for specifying margins in PDF generation.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/api/puppeteer.pdfmargin.md#_snippet_1\n\nLANGUAGE: APIDOC\nCODE:\n```\ninterface PDFMargin:\n  properties:\n    bottom: string | number (optional)\n    left: string | number (optional)\n    right: string | number (optional)\n    top: string | number (optional)\n```\n\n----------------------------------------\n\nTITLE: Create PDF Stream\nDESCRIPTION: Generates a PDF of the page with the `print` CSS media type. Can emulate `screen` media type by calling `page.emulateMediaType('screen')` before `page.pdf()`. Supports forcing exact colors using `-webkit-print-color-adjust`.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/puppeteer.page.md#_snippet_25\n\nLANGUAGE: APIDOC\nCODE:\n```\ncreatePDFStream(options)\n  - Generates a PDF of the page.\n  - Parameters:\n    - options: Object with PDF generation options.\n  - Remarks:\n    - To generate a PDF with the `screen` media type, call `page.emulateMediaType('screen')` before calling `page.pdf()`.\n    - By default, `page.pdf()` generates a pdf with modified colors for printing. Use the `-webkit-print-color-adjust` property to force rendering of exact colors.\n```\n\n----------------------------------------\n\nTITLE: PDFMargin\nDESCRIPTION: Defines the margin settings for PDF generation in Puppeteer.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/api/index.md#_snippet_75\n\nLANGUAGE: APIDOC\nCODE:\n```\nPDFMargin\n```\n\n----------------------------------------\n\nTITLE: Create PDF Stream\nDESCRIPTION: Generates a PDF of the page with the `print` CSS media type. Can emulate `screen` media type by calling `page.emulateMediaType('screen')` before `page.pdf()`. Supports forcing exact colors using `-webkit-print-color-adjust`.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/puppeteer.page.md#_snippet_25\n\nLANGUAGE: APIDOC\nCODE:\n```\ncreatePDFStream(options)\n  - Generates a PDF of the page.\n  - Parameters:\n    - options: Object with PDF generation options.\n  - Remarks:\n    - To generate a PDF with the `screen` media type, call `page.emulateMediaType('screen')` before calling `page.pdf()`.\n    - By default, `page.pdf()` generates a pdf with modified colors for printing. Use the `-webkit-print-color-adjust` property to force rendering of exact colors.\n```\n\n----------------------------------------\n\nTITLE: Page.pdf(options)\nDESCRIPTION: This method generates a PDF of the current page. The PDF is rendered using the `print` CSS media type, ensuring a print-friendly layout.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/puppeteer.page.md#_snippet_51\n\nLANGUAGE: APIDOC\nCODE:\n```\npage.pdf(options?: object): Promise<Buffer>\n  options: object (optional) - An object with PDF generation options.\n  Returns: Promise<Buffer> - A Promise that resolves to a Buffer containing the PDF data.\n```\n\n----------------------------------------\n\nTITLE: PDFOptions Interface Definition and Properties\nDESCRIPTION: Defines the `PDFOptions` interface used by Puppeteer's `Page.pdf()` method. It includes properties for controlling header/footer, page dimensions, margins, background printing, and other PDF generation settings.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/api/puppeteer.pdfoptions.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface PDFOptions\n```\n\nLANGUAGE: APIDOC\nCODE:\n```\ninterface PDFOptions {\n  displayHeaderFooter?: boolean; // Whether to show the header and footer. Default: false\n  footerTemplate?: string; // HTML template for the print footer. Has the same constraints and support for special classes as PDFOptions.headerTemplate.\n  format?: PaperFormat; // If set, this takes priority over the `width` and `height` options. Default: letter.\n  headerTemplate?: string; // HTML template for the print header. Should be valid HTML with the following classes used to inject values into them: date, title, url, pageNumber, totalPages.\n  height?: string | number; // Sets the height of paper. You can pass in a number or a string with a unit.\n  landscape?: boolean; // Whether to print in landscape orientation. Default: false\n  margin?: PDFMargin; // Set the PDF margins. Default: undefined (no margins are set).\n  omitBackground?: boolean; // Hides default white background and allows generating pdfs with transparency. Default: false\n  outline?: boolean; // (Experimental) Generate document outline. Default: false\n  pageRanges?: string; // Paper ranges to print, e.g. `1-5, 8, 11-13`. Default: The empty string, which means all pages are printed.\n  path?: string; // The path to save the file to. If the path is relative, it's resolved relative to the current working directory. Default: undefined (PDF will not be written to disk).\n  preferCSSPageSize?: boolean; // Give any CSS `@page` size declared in the page priority over what is declared in the `width` or `height` or `format` option. Default: false (will scale the content to fit the paper size).\n  printBackground?: boolean; // Set to `true` to print background graphics. Default: false\n  scale?: number; // Scales the rendering of the web page. Amount must be between `0.1` and `2`. Default: 1\n  tagged?: boolean; // (Experimental) Generate tagged (accessible) PDF. Default: true\n  timeout?: number; // Timeout in milliseconds. Pass `0` to disable timeout. The default value can be changed by using Page.setDefaultTimeout(). Default: 30_000\n  waitForFonts?: boolean; // If true, waits for `document.fonts.ready` to resolve. This might require activating the page using Page.bringToFront() if the page is in the background. Default: true\n  width?: string | number; // Sets the width of paper. You can pass in a number or a string with a unit.\n}\n```\n\n----------------------------------------\n\nTITLE: Page.createPDFStream() Method API Documentation\nDESCRIPTION: Detailed API documentation for the `createPDFStream` method of the `Page` class, including its TypeScript signature, parameters, return type, and important remarks regarding media types and color adjustments for PDF generation.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/api/puppeteer.page.createpdfstream.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass Page {\n  abstract createPDFStream(\n    options?: PDFOptions,\n  ): Promise<ReadableStream<Uint8Array>>;\n}\n```\n\nLANGUAGE: APIDOC\nCODE:\n```\nParameters:\n  options:\n    Type: PDFOptions\n    Description: (Optional) options for generating the PDF.\nReturns:\n  Promise<ReadableStream<Uint8Array>>\n```\n\nLANGUAGE: APIDOC\nCODE:\n```\nRemarks:\n  To generate a PDF with the `screen` media type, call `page.emulateMediaType('screen')` before calling `page.pdf()`.\n  By default, `page.pdf()` generates a pdf with modified colors for printing. Use the `-webkit-print-color-adjust` property to force rendering of exact colors.\n```\n\n----------------------------------------\n\nTITLE: ElementHandle.toElement Method Exceptions\nDESCRIPTION: Describes the conditions under which the ElementHandle.toElement method may throw an error and important considerations regarding handle disposal.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/puppeteer.elementhandle.toelement.md#_snippet_3\n\nLANGUAGE: APIDOC\nCODE:\n```\nExceptions:\n  An error if the handle does not match. The handle will not be automatically disposed.\n```\n\n----------------------------------------\n\nTITLE: Page.pdf() API Documentation\nDESCRIPTION: Detailed API documentation for the `Page.pdf()` method, including its parameters, return type, and important remarks regarding media types and color rendering. It generates a PDF of the page using the `print` CSS media type.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/api/puppeteer.page.pdf.md#_snippet_1\n\nLANGUAGE: APIDOC\nCODE:\n```\nMethod: Page.pdf()\nDescription: Generates a PDF of the page with the `print` CSS media type.\nParameters:\n  options:\n    Type: PDFOptions\n    Description: (Optional) options for generating the PDF.\nReturns: Promise<Uint8Array>\nRemarks:\n  To generate a PDF with the `screen` media type, call `page.emulateMediaType('screen')` before calling `page.pdf()`.\n  By default, `page.pdf()` generates a pdf with modified colors for printing. Use the `-webkit-print-color-adjust` property to force rendering of exact colors.\n```\n\n----------------------------------------\n\nTITLE: Define TypeScript ErrorCode Type\nDESCRIPTION: Defines a TypeScript union type named 'ErrorCode'. This type enumerates a comprehensive list of potential error conditions that can arise during operations, including network failures, access issues, and timeouts. It provides a standardized set of error identifiers for consistent error handling.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/api/puppeteer.errorcode.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport type ErrorCode =\n  | 'aborted'\n  | 'accessdenied'\n  | 'addressunreachable'\n  | 'blockedbyclient'\n  | 'blockedbyresponse'\n  | 'connectionaborted'\n  | 'connectionclosed'\n  | 'connectionfailed'\n  | 'connectionrefused'\n  | 'connectionreset'\n  | 'internetdisconnected'\n  | 'namenotresolved'\n  | 'timedout'\n  | 'failed';\n```\n\n----------------------------------------\n\nTITLE: Enable and Handle Request Interception\nDESCRIPTION: Example demonstrating how to enable request interception using Page.setRequestInterception(true) and handle intercepted requests by aborting image files (.png, .jpg) and continuing others.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/puppeteer.page.setrequestinterception.md#_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport puppeteer from 'puppeteer';\n(async () => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n  await page.setRequestInterception(true);\n  page.on('request', interceptedRequest => {\n    if (\n      interceptedRequest.url().endsWith('.png') ||\n      interceptedRequest.url().endsWith('.jpg')\n    )\n      interceptedRequest.abort();\n    else interceptedRequest.continue();\n  });\n  await page.goto('https://example.com');\n  await browser.close();\n})();\n```\n\n----------------------------------------\n\nTITLE: Enable and Handle Request Interception\nDESCRIPTION: Example demonstrating how to enable request interception using Page.setRequestInterception(true) and handle intercepted requests by aborting image files (.png, .jpg) and continuing others.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/puppeteer.page.setrequestinterception.md#_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport puppeteer from 'puppeteer';\n(async () => {\n  const browser = await puppeteer.launch();\n  const page = await browser.newPage();\n  await page.setRequestInterception(true);\n  page.on('request', interceptedRequest => {\n    if (\n      interceptedRequest.url().endsWith('.png') ||\n      interceptedRequest.url().endsWith('.jpg')\n    )\n      interceptedRequest.abort();\n    else interceptedRequest.continue();\n  });\n  await page.goto('https://example.com');\n  await browser.close();\n})();\n```\n\n----------------------------------------\n\nTITLE: ProtocolError Class\nDESCRIPTION: Represents an error originating from the protocol layer in Puppeteer. This class extends PuppeteerError and includes specific properties related to protocol errors.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/puppeteer.protocolerror.md#_snippet_0\n\nLANGUAGE: APIDOC\nCODE:\n```\nProtocolError:\n  extends: PuppeteerError\n  description: Emitted whenever there is an error from the protocol.\n  properties:\n    code: readonly number | undefined\n      Description: The error code, if available.\n    originalMessage: readonly string\n      Description: The original error message received from the protocol.\n```\n\n----------------------------------------\n\nTITLE: ErrorCode Type Definition\nDESCRIPTION: This TypeScript type defines a union of string literals that represent common error codes encountered in the system. It provides a strongly typed way to handle and categorize different error conditions.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/puppeteer.errorcode.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport type ErrorCode =\n  | 'aborted'\n  | 'accessdenied'\n  | 'addressunreachable'\n  | 'blockedbyclient'\n  | 'blockedbyresponse'\n  | 'connectionaborted'\n  | 'connectionclosed'\n  | 'connectionfailed'\n  | 'connectionrefused'\n  | 'connectionreset'\n  | 'internetdisconnected'\n  | 'namenotresolved'\n  | 'timedout'\n  | 'failed';\n```\n\n----------------------------------------\n\nTITLE: Puppeteer Error Types\nDESCRIPTION: Details common error types thrown by Puppeteer operations, including ProtocolError, PuppeteerError, and TimeoutError, along with their typical causes and related methods.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/index.md#_snippet_20\n\nLANGUAGE: APIDOC\nCODE:\n```\nProtocolError:\n  Description: Emitted whenever there is an error from the protocol.\n\nPuppeteerError:\n  Description: The base class for all Puppeteer-specific errors.\n  Remarks: The constructor is marked as internal. Third-party code should not call the constructor directly or create subclasses.\n\nTimeoutError:\n  Description: Emitted whenever certain operations are terminated due to timeout.\n  Example Operations: `page.waitForSelector`, `puppeteer.launch`.\n```\n\n----------------------------------------\n\nTITLE: ErrorCode Type Definition\nDESCRIPTION: This TypeScript type defines a union of string literals that represent common error codes encountered in the system. It provides a strongly typed way to handle and categorize different error conditions.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/puppeteer.errorcode.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport type ErrorCode =\n  | 'aborted'\n  | 'accessdenied'\n  | 'addressunreachable'\n  | 'blockedbyclient'\n  | 'blockedbyresponse'\n  | 'connectionaborted'\n  | 'connectionclosed'\n  | 'connectionfailed'\n  | 'connectionrefused'\n  | 'connectionreset'\n  | 'internetdisconnected'\n  | 'namenotresolved'\n  | 'timedout'\n  | 'failed';\n```\n\n----------------------------------------\n\nTITLE: ProtocolError Class API Reference\nDESCRIPTION: API documentation for the `ProtocolError` class, detailing its inheritance and properties. This class represents errors originating from the protocol.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/api/puppeteer.protocolerror.md#_snippet_1\n\nLANGUAGE: APIDOC\nCODE:\n```\nclass ProtocolError\n  Extends: PuppeteerError\n  Properties:\n    code: readonly number | undefined\n    originalMessage: readonly string\n```\n\n----------------------------------------\n\nTITLE: ProtocolError Class\nDESCRIPTION: Represents an error originating from the protocol layer in Puppeteer. This class extends PuppeteerError and includes specific properties related to protocol errors.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/puppeteer.protocolerror.md#_snippet_0\n\nLANGUAGE: APIDOC\nCODE:\n```\nProtocolError:\n  extends: PuppeteerError\n  description: Emitted whenever there is an error from the protocol.\n  properties:\n    code: readonly number | undefined\n      Description: The error code, if available.\n    originalMessage: readonly string\n      Description: The original error message received from the protocol.\n```\n\n----------------------------------------\n\nTITLE: ProtocolError Class (Puppeteer API)\nDESCRIPTION: ProtocolError is emitted whenever there is an error originating from the protocol layer.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/api/index.md#_snippet_27\n\nLANGUAGE: APIDOC\nCODE:\n```\nProtocolError:\n  description: Emitted whenever there is an error from the protocol.\n```\n\n----------------------------------------\n\nTITLE: Log Pending Protocol Errors with debugInfo\nDESCRIPTION: Logs pending protocol errors in Puppeteer to help diagnose issues with asynchronous calls. The `debugInfo.pendingProtocolErrors` getter returns a list of `Error` objects, whose stacktraces can pinpoint the code triggering a protocol call.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/guides/debugging.md#_snippet_6\n\nLANGUAGE: ts\nCODE:\n```\nconsole.log(browser.debugInfo.pendingProtocolErrors);\n```\n\n----------------------------------------\n\nTITLE: Puppeteer Error Types\nDESCRIPTION: Details common error types thrown by Puppeteer operations, including ProtocolError, PuppeteerError, and TimeoutError, along with their typical causes and related methods.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/index.md#_snippet_20\n\nLANGUAGE: APIDOC\nCODE:\n```\nProtocolError:\n  Description: Emitted whenever there is an error from the protocol.\n\nPuppeteerError:\n  Description: The base class for all Puppeteer-specific errors.\n  Remarks: The constructor is marked as internal. Third-party code should not call the constructor directly or create subclasses.\n\nTimeoutError:\n  Description: Emitted whenever certain operations are terminated due to timeout.\n  Example Operations: `page.waitForSelector`, `puppeteer.launch`.\n```\n\n----------------------------------------\n\nTITLE: Class: ProtocolError\nDESCRIPTION: ProtocolError is emitted whenever an error originates from the underlying protocol.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/index.md#_snippet_29\n\nLANGUAGE: APIDOC\nCODE:\n```\nClass: ProtocolError\n  Description: Emitted whenever there is an error from the protocol.\n```\n\n----------------------------------------\n\nTITLE: HTTPRequest Event Handling\nDESCRIPTION: Demonstrates how to listen for network requests made by a page. The 'request' event is emitted when a request is issued, and 'requestfinished' or 'requestfailed' events signal completion or failure. HTTP Error responses are considered successful from an HTTP standpoint.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/index.md#_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\npage.on('request', request => {\n  // Handle the request\n});\n\npage.on('requestfinished', request => {\n  // Handle finished request\n});\n\npage.on('requestfailed', request => {\n  // Handle failed request\n});\n```\n\n----------------------------------------\n\nTITLE: JavaScript Function Call Chain with Error\nDESCRIPTION: This JavaScript code defines three functions (a, b, c) where 'a' calls 'b', and 'b' calls 'c'. The 'c' function intentionally throws an error, demonstrating a basic call stack and error propagation.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/test/assets/error.html#_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\na();\nfunction a() {\n  b();\n}\nfunction b() {\n  c();\n}\nfunction c() {\n  throw new Error('Fancy error!');\n}\n```\n\n----------------------------------------\n\nTITLE: Log Pending Protocol Errors with debugInfo\nDESCRIPTION: Logs pending protocol errors in Puppeteer to help diagnose issues with asynchronous calls. The `debugInfo.pendingProtocolErrors` getter returns a list of `Error` objects, whose stacktraces can pinpoint the code triggering a protocol call.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/guides/debugging.md#_snippet_6\n\nLANGUAGE: ts\nCODE:\n```\nconsole.log(browser.debugInfo.pendingProtocolErrors);\n```\n\n----------------------------------------\n\nTITLE: HTTPRequest.abort() method\nDESCRIPTION: Aborts a request. This method requires request interception to be enabled via Page.setRequestInterception(). It accepts an optional error code and priority.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/puppeteer.httprequest.abort.md#_snippet_0\n\nLANGUAGE: APIDOC\nCODE:\n```\nHTTPRequest.abort(errorCode?: ErrorCode, priority?: number): Promise<void>\n  Aborts a request.\n\n  Parameters:\n    errorCode: ErrorCode (Optional) - optional error code to provide.\n    priority: number (Optional) - If provided, intercept is resolved using cooperative handling rules. Otherwise, intercept is resolved immediately.\n\n  Returns:\n    Promise<void>\n\n  Remarks:\n    To use this, request interception should be enabled with Page.setRequestInterception(). If it is not enabled, this method will throw an exception immediately.\n```\n\n----------------------------------------\n\nTITLE: HTTPRequest Event Handling\nDESCRIPTION: Demonstrates how to listen for network requests made by a page. The 'request' event is emitted when a request is issued, and 'requestfinished' or 'requestfailed' events signal completion or failure. HTTP Error responses are considered successful from an HTTP standpoint.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/index.md#_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\npage.on('request', request => {\n  // Handle the request\n});\n\npage.on('requestfinished', request => {\n  // Handle finished request\n});\n\npage.on('requestfailed', request => {\n  // Handle failed request\n});\n```\n\n----------------------------------------\n\nTITLE: Page.pdf() method TypeScript Signature\nDESCRIPTION: Defines the abstract signature for the `pdf` method within the `Page` class, showing it accepts optional `PDFOptions` and returns a `Promise<Uint8Array>`.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/api/puppeteer.page.pdf.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass Page {\n  abstract pdf(options?: PDFOptions): Promise<Uint8Array>;\n}\n```\n\n----------------------------------------\n\nTITLE: HTTPRequest.abort() method\nDESCRIPTION: Aborts a request. This method requires request interception to be enabled via Page.setRequestInterception(). It accepts an optional error code and priority.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/puppeteer.httprequest.abort.md#_snippet_0\n\nLANGUAGE: APIDOC\nCODE:\n```\nHTTPRequest.abort(errorCode?: ErrorCode, priority?: number): Promise<void>\n  Aborts a request.\n\n  Parameters:\n    errorCode: ErrorCode (Optional) - optional error code to provide.\n    priority: number (Optional) - If provided, intercept is resolved using cooperative handling rules. Otherwise, intercept is resolved immediately.\n\n  Returns:\n    Promise<void>\n\n  Remarks:\n    To use this, request interception should be enabled with Page.setRequestInterception(). If it is not enabled, this method will throw an exception immediately.\n```\n\n----------------------------------------\n\nTITLE: Class: PuppeteerError\nDESCRIPTION: This class serves as the base for all errors specific to the Puppeteer library.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/index.md#_snippet_31\n\nLANGUAGE: APIDOC\nCODE:\n```\nClass: PuppeteerError\n  Description: Base class for all Puppeteer-specific errors.\n  Remarks: Constructor is internal; third-party code should not call directly or subclass.\n```\n\n----------------------------------------\n\nTITLE: Puppeteer PDFOptions Interface\nDESCRIPTION: Defines the configuration options for generating PDFs using Puppeteer's Page.pdf() method. This interface covers settings for headers, footers, paper format, dimensions, margins, background printing, and more.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/puppeteer.pdfoptions.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface PDFOptions\n```\n\nLANGUAGE: APIDOC\nCODE:\n```\nPuppeteer PDFOptions Interface\n\nThis interface defines the configuration options for generating PDFs using Puppeteer's Page.pdf() method.\n\nProperties:\n\n- displayHeaderFooter: boolean (optional)\n  Whether to show the header and footer. Defaults to `false`.\n\n- footerTemplate: string (optional)\n  HTML template for the print footer. Has the same constraints and support for special classes as headerTemplate.\n\n- format: PaperFormat (optional)\n  Specifies the paper format (e.g., 'letter', 'A4'). Takes priority over width and height. Defaults to `letter`.\n\n- headerTemplate: string (optional)\n  HTML template for the print header. Should be valid HTML with classes like `date`, `title`, `url`, `pageNumber`, `totalPages` for injecting values.\n\n- height: string | number (optional)\n  Sets the height of the paper. Can be a number or a string with a unit.\n\n- landscape: boolean (optional)\n  Whether to print in landscape orientation. Defaults to `false`.\n\n- margin: PDFMargin (optional)\n  Sets the PDF margins. Defaults to `undefined` (no margins).\n\n- omitBackground: boolean (optional)\n  Hides default white background and allows generating PDFs with transparency. Defaults to `false`.\n\n- outline: boolean (optional) _(Experimental)_\n  Generate document outline. Defaults to `false`.\n\n- pageRanges: string (optional)\n  Paper ranges to print, e.g. `1-5, 8, 11-13`. Defaults to an empty string (all pages).\n\n- path: string (optional)\n  The path to save the file to. If relative, it's resolved relative to the current working directory. Defaults to `undefined` (PDF not written to disk).\n\n- preferCSSPageSize: boolean (optional)\n  If true, CSS `@page` size declarations take priority over `width`, `height`, or `format` options. Defaults to `false` (scales content to fit paper size).\n\n- printBackground: boolean (optional)\n  Set to `true` to print background graphics. Defaults to `false`.\n\n- scale: number (optional)\n  Scales the rendering of the web page. Amount must be between `0.1` and `2`. Defaults to `1`.\n\n- tagged: boolean (optional) _(Experimental)_\n  Generate tagged (accessible) PDF. Defaults to `true`.\n\n- timeout: number (optional)\n  Timeout in milliseconds. Pass `0` to disable timeout. Defaults to `30000`. Can be changed via `Page.setDefaultTimeout()`.\n\n- waitForFonts: boolean (optional)\n  If true, waits for `document.fonts.ready` to resolve. May require `Page.bringToFront()` if the page is in the background. Defaults to `true`.\n\n- width: string | number (optional)\n  Sets the width of the paper. Can be a number or a string with a unit.\n```\n\n----------------------------------------\n\nTITLE: Screenshot Generation API\nDESCRIPTION: API methods for capturing screenshots of the page with support for specific parameters.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.11.2/webdriver-bidi.md#_snippet_8\n\nLANGUAGE: APIDOC\nCODE:\n```\nPage:\n  screenshot(supported parameters are `clip`, `encoding`, `fullPage`)\n```\n\n----------------------------------------\n\nTITLE: Evaluate JavaScript Handle\nDESCRIPTION: Evaluates a function in the page's context and returns the value wrapped in an in-page object handle. Waits for promises to resolve.\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/puppeteer.page.md#_snippet_36\n\nLANGUAGE: APIDOC\nCODE:\n```\nevaluateHandle(pageFunction, args)\n  - Evaluates a function in the page's context and returns the value wrapped in an in-page object handle.\n  - Parameters:\n    - pageFunction: The function to evaluate in the page context.\n    - args: Arguments to pass to the `pageFunction`.\n  - Returns:\n    - An `JSHandle` representing the result of the evaluation.\n  - Remarks:\n    - The only difference between `page.evaluate` and `page.evaluateHandle` is that `evaluateHandle` will return the value wrapped in an in-page object.\n    - If the function passed to `page.evaluateHandle` returns a Promise, the function will wait for the promise to resolve and return its value.\n    - You can pass a string instead of a function (although functions are recommended).\n```\n\n========================\nQUESTIONS AND ANSWERS\n========================\nTOPIC: Puppeteer PDF Generation\nQ: How does Puppeteer handle font loading during PDF generation?\nA: By default, the Puppeteer `Page.pdf()` function waits for fonts to be loaded before generating the PDF. This ensures that the text in the PDF is rendered correctly with the intended typography.\n\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/guides/pdf-generation.md#_qa_1\n\n----------------------------------------\n\nTOPIC: Puppeteer PDF Generation\nQ: How does Puppeteer handle font loading during PDF generation?\nA: By default, the Puppeteer `Page.pdf()` function waits for fonts to be loaded before generating the PDF. This ensures that the text in the PDF is rendered correctly with the intended typography.\n\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/guides/pdf-generation.md#_qa_1\n\n----------------------------------------\n\nTOPIC: Puppeteer PDFOptions Interface\nQ: How does Puppeteer handle saving generated PDFs to a file?\nA: The 'path' option can be used to specify the file path where the generated PDF should be saved. If a relative path is provided, it is resolved relative to the current working directory.\n\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/puppeteer.pdfoptions.md#_qa_9\n\n----------------------------------------\n\nTOPIC: Puppeteer PDFOptions Interface\nQ: How does Puppeteer handle saving generated PDFs to a file?\nA: The 'path' option can be used to specify the file path where the generated PDF should be saved. If a relative path is provided, it is resolved relative to the current working directory.\n\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/puppeteer.pdfoptions.md#_qa_9\n\n----------------------------------------\n\nTOPIC: Page.createPDFStream() method\nQ: How does Puppeteer handle colors for printing by default with Page.createPDFStream()?\nA: By default, Puppeteer's `page.pdf()` and `page.createPDFStream()` methods generate PDFs with modified colors optimized for printing. To ensure exact colors are rendered, you can use the CSS property `-webkit-print-color-adjust`.\n\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/puppeteer.page.createpdfstream.md#_qa_3\n\n----------------------------------------\n\nTOPIC: Page.createPDFStream() method\nQ: What is the purpose of the Page.createPDFStream() method in Puppeteer?\nA: The Page.createPDFStream() method in Puppeteer generates a PDF of the current page using the 'print' CSS media type. It returns a Promise that resolves to a ReadableStream of Uint8Array, allowing for efficient handling of PDF data.\n\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/puppeteer.page.createpdfstream.md#_qa_0\n\n----------------------------------------\n\nTOPIC: Page.pdf() method - Puppeteer\nQ: How does Puppeteer handle colors when generating PDFs by default?\nA: By default, Puppeteer's `page.pdf()` method generates PDFs with modified colors optimized for printing. To ensure exact colors are rendered, you can use the '-webkit-print-color-adjust' CSS property.\n\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/puppeteer.page.pdf.md#_qa_2\n\n----------------------------------------\n\nTOPIC: Page.createPDFStream() method\nQ: What is the purpose of the Page.createPDFStream() method in Puppeteer?\nA: The Page.createPDFStream() method in Puppeteer generates a PDF of the current page using the 'print' CSS media type. It returns a Promise that resolves to a ReadableStream of Uint8Array, allowing for efficient handling of PDF data.\n\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/docs/api/puppeteer.page.createpdfstream.md#_qa_0\n\n----------------------------------------\n\nTOPIC: Page.createPDFStream() method\nQ: How does Puppeteer handle colors for printing by default with Page.createPDFStream()?\nA: By default, Puppeteer's `page.pdf()` and `page.createPDFStream()` methods generate PDFs with modified colors optimized for printing. To ensure exact colors are rendered, you can use the CSS property `-webkit-print-color-adjust`.\n\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/api/puppeteer.page.createpdfstream.md#_qa_3\n\n----------------------------------------\n\nTOPIC: Puppeteer PDF Generation\nQ: What Puppeteer API is used for generating PDFs?\nA: The `Page.pdf()` API is used for generating PDFs in Puppeteer. This function allows you to save the current page as a PDF file.\n\n\nSOURCE: https://github.com/puppeteer/puppeteer/blob/main/website/versioned_docs/version-24.15.0/guides/pdf-generation.md#_qa_0"}]}
{"parentUuid":"0a1229b8-fb4c-4edd-81a4-b433f2d3867d","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_013wwe47fex647pwjcCkb6jK","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"Now let me update the todo and create the comprehensive report:"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":0,"cache_creation_input_tokens":16652,"cache_read_input_tokens":91019,"output_tokens":317,"service_tier":"standard"}},"requestId":"req_011CS5yKwSWXqPpEuL9d764H","type":"assistant","uuid":"284c58b7-d92a-4269-a65c-71e7d6ad5bd1","timestamp":"2025-08-13T15:48:30.329Z"}
{"parentUuid":"284c58b7-d92a-4269-a65c-71e7d6ad5bd1","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_013wwe47fex647pwjcCkb6jK","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"tool_use","id":"toolu_01R8HqyQXjiSDg3MAdppeSui","name":"TodoWrite","input":{"todos":[{"id":"analyze_ai_review_screen","content":"Analyze AI Review screen PDF export button and functionality","status":"completed"},{"id":"analyze_history_panel","content":"Analyze History Panel export dropdown functionality","status":"completed"},{"id":"analyze_export_api","content":"Examine PDF export API route and implementation","status":"completed"},{"id":"analyze_shared_services","content":"Check shared services PDF generation functionality","status":"completed"},{"id":"identify_export_locations","content":"Identify all UI locations where PDF export is available","status":"completed"},{"id":"analyze_error_handling","content":"Analyze error handling and potential failure points","status":"completed"},{"id":"research_dependencies","content":"Research PDF generation libraries and dependencies (Puppeteer, TipTap)","status":"completed"},{"id":"create_comprehensive_report","content":"Create comprehensive codebase analysis report with findings","status":"in_progress"}]}}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":0,"cache_creation_input_tokens":16652,"cache_read_input_tokens":91019,"output_tokens":317,"service_tier":"standard"}},"requestId":"req_011CS5yKwSWXqPpEuL9d764H","type":"assistant","uuid":"2cd76a10-4c05-42d5-86af-af605f187f93","timestamp":"2025-08-13T15:48:35.750Z"}
{"parentUuid":"2cd76a10-4c05-42d5-86af-af605f187f93","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_01R8HqyQXjiSDg3MAdppeSui","type":"tool_result","content":"Todos have been modified successfully. Ensure that you continue to use the todo list to track your progress. Please proceed with the current tasks if applicable"}]},"uuid":"8b561be5-7d9c-4bdd-a7db-6842306a2101","timestamp":"2025-08-13T15:48:35.795Z","toolUseResult":{"oldTodos":[{"content":"Analyze AI Review screen PDF export button and functionality","status":"completed","id":"analyze_ai_review_screen"},{"content":"Analyze History Panel export dropdown functionality","status":"completed","id":"analyze_history_panel"},{"content":"Examine PDF export API route and implementation","status":"completed","id":"analyze_export_api"},{"content":"Check shared services PDF generation functionality","status":"completed","id":"analyze_shared_services"},{"content":"Identify all UI locations where PDF export is available","status":"completed","id":"identify_export_locations"},{"content":"Analyze error handling and potential failure points","status":"completed","id":"analyze_error_handling"},{"content":"Research PDF generation libraries and dependencies (Puppeteer, TipTap)","status":"in_progress","id":"research_dependencies"},{"content":"Create comprehensive codebase analysis report with findings","status":"pending","id":"create_comprehensive_report"}],"newTodos":[{"content":"Analyze AI Review screen PDF export button and functionality","status":"completed","id":"analyze_ai_review_screen"},{"content":"Analyze History Panel export dropdown functionality","status":"completed","id":"analyze_history_panel"},{"content":"Examine PDF export API route and implementation","status":"completed","id":"analyze_export_api"},{"content":"Check shared services PDF generation functionality","status":"completed","id":"analyze_shared_services"},{"content":"Identify all UI locations where PDF export is available","status":"completed","id":"identify_export_locations"},{"content":"Analyze error handling and potential failure points","status":"completed","id":"analyze_error_handling"},{"content":"Research PDF generation libraries and dependencies (Puppeteer, TipTap)","status":"completed","id":"research_dependencies"},{"content":"Create comprehensive codebase analysis report with findings","status":"in_progress","id":"create_comprehensive_report"}]}}
{"parentUuid":"8b561be5-7d9c-4bdd-a7db-6842306a2101","isSidechain":true,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01Xg7aX7ZSd8EorsJLjxVRgT","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"# Comprehensive Codebase Analysis Report for DEV-5856\n\n## Issue Summary\n**Ticket**: DEV-5856 - \"AI Review Export Fails – 'Error generating PDF' message displayed on History Panel and AI Review Screen\"\n\n**Problem**: Users are experiencing PDF export failures with the error message \"Error generating PDF\" when attempting to export AI Review results from both the AI Review screen and the History Panel.\n\n---\n\n## 1. Files and Components Found Related to AI Review Functionality\n\n### AI Review Screen Components:\n- **/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/review-proposal-ui.tsx**\n  - Main AI Review interface component\n  - Handles AI analysis execution and content editing\n  - Uses TipTap editor for content display and management\n  - No direct PDF export button in this component\n\n### AI Review Settings and Supporting Files:\n- **/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/components/review-proposals-settings.tsx**\n- **/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/components/AddNewInstruction.tsx**\n- Database functions for AI Review content retrieval\n\n### Database Integration:\n- **/Users/luke/code/psci/chatbot-ui-2/db/review-proposals.ts**\n- **/Users/luke/code/psci/chatbot-ui-2/db/export-ai-content-server.ts**\n  - Contains `getReviewProposalContentById()` function\n  - Retrieves content from `review_proposals` table\n\n---\n\n## 2. PDF Export and Generation Code Located\n\n### Primary Export API Routes:\n- **/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts**\n  - Main PDF generation endpoint\n  - Uses Puppeteer for PDF rendering\n  - Implements comprehensive error handling with timeouts\n  - Returns \"Error generating PDF\" message on failure (line 72)\n\n### Export Content Utility:\n- **/Users/luke/code/psci/chatbot-ui-2/components/editor/ExportContent.tsx**\n  - Centralized export functionality\n  - Makes HTTP GET requests to `/api/export/${id}/generate-${fileType}?session_type=${sessionType}`\n  - Uses toast notifications for user feedback\n\n### Content Retrieval:\n- **/Users/luke/code/psci/chatbot-ui-2/lib/export-ai-content.ts**\n  - `fetchContent()` function handles content retrieval for different session types\n  - Supports both 'draft' and 'reviewProposal' session types\n  - Converts content from JSON format using TipTap extensions\n\n### Shared Services Alternative:\n- **/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts**\n  - Alternative PDF generation service using jsPDF\n  - Not currently used by the main application\n  - Designed for markdown-to-PDF conversion\n\n---\n\n## 3. Two UI Locations with Export Buttons\n\n### Location 1: History Panel\n**File**: `/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/workspace-history-list/history-item.tsx`\n- **Lines 399-433**: Export dropdown menu in history items\n- **Export Button**: Lines 403-407 (DropdownMenuSubTrigger)\n- **PDF Export**: Lines 409-417 (`handleExport` with `FILE_TYPES.PDF`)\n- **Availability**: Only visible for `SESSION_TYPES.REVIEW_PROPOSAL` and `SESSION_TYPES.DRAFT`\n\n### Location 2: AI Header (Global Header)\n**File**: `/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/AIHeader/AIHeader.tsx`\n- **Lines 175-213**: Export dropdown menu in global header\n- **Export Button**: Lines 178-183 (DropdownMenuTrigger)\n- **PDF Export**: Lines 185-197 (`handleExport` with `FILE_TYPES.PDF`)\n- **Availability**: Only enabled when `selectedItem?.type` is exportable\n\n### Editor Toolbar Components:\n- **/Users/luke/code/psci/chatbot-ui-2/components/editor/ToolbarExportPdf.tsx**\n  - Standalone PDF export button for editor toolbars\n  - Used within editor sessions\n\n---\n\n## 4. Shared Services and Libraries for PDF Generation\n\n### Primary PDF Generation Stack:\n1. **Puppeteer** (Browser automation)\n   - Version: Uses environment variable `PUPPETEER_EXECUTABLE_PATH`\n   - Configuration: Headless Chrome with specific args for Docker compatibility\n   - Timeouts: 30-second limits for browser launch, page load, and PDF generation\n\n2. **TipTap Extensions** (Content processing)\n   - Converts rich editor content to HTML\n   - Supports various formatting: Bold, Italic, Headings, Lists, Tables, etc.\n   - Located in `/lib/export-ai-content.ts`\n\n3. **Next.js API Routes** (Server-side processing)\n   - RESTful endpoint structure\n   - Error handling with JSON responses\n   - Proper HTTP status codes\n\n### Alternative PDF Service:\n- **jsPDF** implementation in shared-services-api\n- Not actively used by the main export functionality\n- More suited for programmatic PDF creation\n\n---\n\n## 5. Current Investigation Progress\n\n### Analysis Status: **COMPLETE**\n✅ **Completed**:\n- AI Review screen component analysis\n- History Panel export functionality analysis  \n- PDF export API route examination\n- Shared services PDF generation review\n- UI export button locations identification\n- Error handling and potential failure point analysis\n- Puppeteer library research for best practices\n\n### Key Findings:\n1. **Two independent export paths** both use the same backend API\n2. **Puppeteer-based PDF generation** with comprehensive timeout handling\n3. **TipTap content conversion** from JSON to HTML before PDF generation\n4. **Docker-optimized browser configuration** for production environments\n\n---\n\n## 6. Questions and Areas Needing User Input\n\n### Critical Questions:\n1. **Browser Environment**: Is the application running in Docker/containerized environment where Puppeteer might have issues accessing Chrome/Chromium?\n\n2. **Environment Variables**: Is `PUPPETEER_EXECUTABLE_PATH` properly configured in the production/staging environment?\n\n3. **Content Validation**: Are there specific AI Review sessions that consistently fail vs. ones that work?\n\n4. **Network/Resource Constraints**: Are there memory or timeout issues in the hosting environment that could cause Puppeteer to fail?\n\n5. **Recent Changes**: Have there been any recent updates to:\n   - Docker images or base containers\n   - Node.js version\n   - Puppeteer version or configuration\n   - Content structure in the review_proposals database table\n\n### Debugging Information Needed:\n- Server logs from failed PDF export attempts\n- Specific session IDs that are failing\n- Browser/network environment details\n- Database content examples that fail to export\n\n---\n\n## 7. Preliminary Findings About Potential Root Causes\n\n### Most Likely Root Causes (Ranked by Probability):\n\n#### 1. **Puppeteer Browser Launch Failure** (High Probability)\n- **Cause**: Chrome/Chromium executable not found or inaccessible\n- **Evidence**: Alpine Docker configuration comments in code (line 43-45)\n- **Symptoms**: Would cause consistent failures across all export attempts\n- **Fix**: Verify `PUPPETEER_EXECUTABLE_PATH` and Chrome installation in container\n\n#### 2. **Content Serialization Issues** (Medium-High Probability)\n- **Cause**: Invalid JSON content in `review_proposals.content` field\n- **Evidence**: `fetchContent()` tries to parse JSON and throws on invalid format\n- **Symptoms**: Would fail only for specific sessions with malformed content\n- **Fix**: Add content validation and better error messages\n\n#### 3. **Timeout Configuration** (Medium Probability)\n- **Cause**: 30-second timeouts may be insufficient for complex content\n- **Evidence**: Multiple timeout configurations in PDF generation\n- **Symptoms**: Intermittent failures on larger documents\n- **Fix**: Increase timeout values or optimize HTML processing\n\n#### 4. **Memory/Resource Constraints** (Medium Probability)\n- **Cause**: Insufficient memory allocation for Puppeteer in containerized environment\n- **Evidence**: Docker-specific browser args suggest resource optimization\n- **Symptoms**: Failures during high load or with complex content\n- **Fix**: Increase container memory limits or optimize browser resource usage\n\n#### 5. **Missing Dependencies** (Low-Medium Probability)\n- **Cause**: Chrome dependencies not installed in container\n- **Evidence**: Alpine Linux configuration suggests minimal container setup\n- **Symptoms**: Browser fails to launch or crashes during PDF generation\n- **Fix**: Install required Chrome dependencies in Docker image\n\n### Next Steps for Investigation:\n1. **Check server logs** for specific Puppeteer errors during failed exports\n2. **Verify browser executable** path and Chrome installation in production\n3. **Test content validation** by examining failing session content structure\n4. **Monitor resource usage** during PDF generation attempts\n5. **Implement enhanced error logging** to capture more specific failure details\n\n---\n\nThe codebase is well-structured with proper error handling, but the failure likely stems from environment configuration or resource constraints in the Puppeteer browser automation setup."}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":0,"cache_creation_input_tokens":359,"cache_read_input_tokens":107671,"output_tokens":2259,"service_tier":"standard"}},"requestId":"req_011CS5yLbQXd3zYx3GKzkze2","type":"assistant","uuid":"a748bcc2-c9c1-4ee6-80a7-c10158f6fef4","timestamp":"2025-08-13T15:49:29.953Z"}
{"parentUuid":"3db1e46f-236e-479c-b4e4-34d0351b4116","isSidechain":false,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","type":"user","message":{"role":"user","content":[{"tool_use_id":"toolu_0178Tew6N6s7WtB3Ae3mYMQH","type":"tool_result","content":[{"type":"text","text":"# Comprehensive Codebase Analysis Report for DEV-5856\n\n## Issue Summary\n**Ticket**: DEV-5856 - \"AI Review Export Fails – 'Error generating PDF' message displayed on History Panel and AI Review Screen\"\n\n**Problem**: Users are experiencing PDF export failures with the error message \"Error generating PDF\" when attempting to export AI Review results from both the AI Review screen and the History Panel.\n\n---\n\n## 1. Files and Components Found Related to AI Review Functionality\n\n### AI Review Screen Components:\n- **/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/review-proposal-ui.tsx**\n  - Main AI Review interface component\n  - Handles AI analysis execution and content editing\n  - Uses TipTap editor for content display and management\n  - No direct PDF export button in this component\n\n### AI Review Settings and Supporting Files:\n- **/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/components/review-proposals-settings.tsx**\n- **/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/components/AddNewInstruction.tsx**\n- Database functions for AI Review content retrieval\n\n### Database Integration:\n- **/Users/luke/code/psci/chatbot-ui-2/db/review-proposals.ts**\n- **/Users/luke/code/psci/chatbot-ui-2/db/export-ai-content-server.ts**\n  - Contains `getReviewProposalContentById()` function\n  - Retrieves content from `review_proposals` table\n\n---\n\n## 2. PDF Export and Generation Code Located\n\n### Primary Export API Routes:\n- **/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts**\n  - Main PDF generation endpoint\n  - Uses Puppeteer for PDF rendering\n  - Implements comprehensive error handling with timeouts\n  - Returns \"Error generating PDF\" message on failure (line 72)\n\n### Export Content Utility:\n- **/Users/luke/code/psci/chatbot-ui-2/components/editor/ExportContent.tsx**\n  - Centralized export functionality\n  - Makes HTTP GET requests to `/api/export/${id}/generate-${fileType}?session_type=${sessionType}`\n  - Uses toast notifications for user feedback\n\n### Content Retrieval:\n- **/Users/luke/code/psci/chatbot-ui-2/lib/export-ai-content.ts**\n  - `fetchContent()` function handles content retrieval for different session types\n  - Supports both 'draft' and 'reviewProposal' session types\n  - Converts content from JSON format using TipTap extensions\n\n### Shared Services Alternative:\n- **/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts**\n  - Alternative PDF generation service using jsPDF\n  - Not currently used by the main application\n  - Designed for markdown-to-PDF conversion\n\n---\n\n## 3. Two UI Locations with Export Buttons\n\n### Location 1: History Panel\n**File**: `/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/workspace-history-list/history-item.tsx`\n- **Lines 399-433**: Export dropdown menu in history items\n- **Export Button**: Lines 403-407 (DropdownMenuSubTrigger)\n- **PDF Export**: Lines 409-417 (`handleExport` with `FILE_TYPES.PDF`)\n- **Availability**: Only visible for `SESSION_TYPES.REVIEW_PROPOSAL` and `SESSION_TYPES.DRAFT`\n\n### Location 2: AI Header (Global Header)\n**File**: `/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/AIHeader/AIHeader.tsx`\n- **Lines 175-213**: Export dropdown menu in global header\n- **Export Button**: Lines 178-183 (DropdownMenuTrigger)\n- **PDF Export**: Lines 185-197 (`handleExport` with `FILE_TYPES.PDF`)\n- **Availability**: Only enabled when `selectedItem?.type` is exportable\n\n### Editor Toolbar Components:\n- **/Users/luke/code/psci/chatbot-ui-2/components/editor/ToolbarExportPdf.tsx**\n  - Standalone PDF export button for editor toolbars\n  - Used within editor sessions\n\n---\n\n## 4. Shared Services and Libraries for PDF Generation\n\n### Primary PDF Generation Stack:\n1. **Puppeteer** (Browser automation)\n   - Version: Uses environment variable `PUPPETEER_EXECUTABLE_PATH`\n   - Configuration: Headless Chrome with specific args for Docker compatibility\n   - Timeouts: 30-second limits for browser launch, page load, and PDF generation\n\n2. **TipTap Extensions** (Content processing)\n   - Converts rich editor content to HTML\n   - Supports various formatting: Bold, Italic, Headings, Lists, Tables, etc.\n   - Located in `/lib/export-ai-content.ts`\n\n3. **Next.js API Routes** (Server-side processing)\n   - RESTful endpoint structure\n   - Error handling with JSON responses\n   - Proper HTTP status codes\n\n### Alternative PDF Service:\n- **jsPDF** implementation in shared-services-api\n- Not actively used by the main export functionality\n- More suited for programmatic PDF creation\n\n---\n\n## 5. Current Investigation Progress\n\n### Analysis Status: **COMPLETE**\n✅ **Completed**:\n- AI Review screen component analysis\n- History Panel export functionality analysis  \n- PDF export API route examination\n- Shared services PDF generation review\n- UI export button locations identification\n- Error handling and potential failure point analysis\n- Puppeteer library research for best practices\n\n### Key Findings:\n1. **Two independent export paths** both use the same backend API\n2. **Puppeteer-based PDF generation** with comprehensive timeout handling\n3. **TipTap content conversion** from JSON to HTML before PDF generation\n4. **Docker-optimized browser configuration** for production environments\n\n---\n\n## 6. Questions and Areas Needing User Input\n\n### Critical Questions:\n1. **Browser Environment**: Is the application running in Docker/containerized environment where Puppeteer might have issues accessing Chrome/Chromium?\n\n2. **Environment Variables**: Is `PUPPETEER_EXECUTABLE_PATH` properly configured in the production/staging environment?\n\n3. **Content Validation**: Are there specific AI Review sessions that consistently fail vs. ones that work?\n\n4. **Network/Resource Constraints**: Are there memory or timeout issues in the hosting environment that could cause Puppeteer to fail?\n\n5. **Recent Changes**: Have there been any recent updates to:\n   - Docker images or base containers\n   - Node.js version\n   - Puppeteer version or configuration\n   - Content structure in the review_proposals database table\n\n### Debugging Information Needed:\n- Server logs from failed PDF export attempts\n- Specific session IDs that are failing\n- Browser/network environment details\n- Database content examples that fail to export\n\n---\n\n## 7. Preliminary Findings About Potential Root Causes\n\n### Most Likely Root Causes (Ranked by Probability):\n\n#### 1. **Puppeteer Browser Launch Failure** (High Probability)\n- **Cause**: Chrome/Chromium executable not found or inaccessible\n- **Evidence**: Alpine Docker configuration comments in code (line 43-45)\n- **Symptoms**: Would cause consistent failures across all export attempts\n- **Fix**: Verify `PUPPETEER_EXECUTABLE_PATH` and Chrome installation in container\n\n#### 2. **Content Serialization Issues** (Medium-High Probability)\n- **Cause**: Invalid JSON content in `review_proposals.content` field\n- **Evidence**: `fetchContent()` tries to parse JSON and throws on invalid format\n- **Symptoms**: Would fail only for specific sessions with malformed content\n- **Fix**: Add content validation and better error messages\n\n#### 3. **Timeout Configuration** (Medium Probability)\n- **Cause**: 30-second timeouts may be insufficient for complex content\n- **Evidence**: Multiple timeout configurations in PDF generation\n- **Symptoms**: Intermittent failures on larger documents\n- **Fix**: Increase timeout values or optimize HTML processing\n\n#### 4. **Memory/Resource Constraints** (Medium Probability)\n- **Cause**: Insufficient memory allocation for Puppeteer in containerized environment\n- **Evidence**: Docker-specific browser args suggest resource optimization\n- **Symptoms**: Failures during high load or with complex content\n- **Fix**: Increase container memory limits or optimize browser resource usage\n\n#### 5. **Missing Dependencies** (Low-Medium Probability)\n- **Cause**: Chrome dependencies not installed in container\n- **Evidence**: Alpine Linux configuration suggests minimal container setup\n- **Symptoms**: Browser fails to launch or crashes during PDF generation\n- **Fix**: Install required Chrome dependencies in Docker image\n\n### Next Steps for Investigation:\n1. **Check server logs** for specific Puppeteer errors during failed exports\n2. **Verify browser executable** path and Chrome installation in production\n3. **Test content validation** by examining failing session content structure\n4. **Monitor resource usage** during PDF generation attempts\n5. **Implement enhanced error logging** to capture more specific failure details\n\n---\n\nThe codebase is well-structured with proper error handling, but the failure likely stems from environment configuration or resource constraints in the Puppeteer browser automation setup."}]}]},"uuid":"2b3c1add-1a19-4065-8ea8-8e6157a709c4","timestamp":"2025-08-13T15:49:30.081Z","toolUseResult":{"content":[{"type":"text","text":"# Comprehensive Codebase Analysis Report for DEV-5856\n\n## Issue Summary\n**Ticket**: DEV-5856 - \"AI Review Export Fails – 'Error generating PDF' message displayed on History Panel and AI Review Screen\"\n\n**Problem**: Users are experiencing PDF export failures with the error message \"Error generating PDF\" when attempting to export AI Review results from both the AI Review screen and the History Panel.\n\n---\n\n## 1. Files and Components Found Related to AI Review Functionality\n\n### AI Review Screen Components:\n- **/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/review-proposal-ui.tsx**\n  - Main AI Review interface component\n  - Handles AI analysis execution and content editing\n  - Uses TipTap editor for content display and management\n  - No direct PDF export button in this component\n\n### AI Review Settings and Supporting Files:\n- **/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/components/review-proposals-settings.tsx**\n- **/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/review-proposal/components/AddNewInstruction.tsx**\n- Database functions for AI Review content retrieval\n\n### Database Integration:\n- **/Users/luke/code/psci/chatbot-ui-2/db/review-proposals.ts**\n- **/Users/luke/code/psci/chatbot-ui-2/db/export-ai-content-server.ts**\n  - Contains `getReviewProposalContentById()` function\n  - Retrieves content from `review_proposals` table\n\n---\n\n## 2. PDF Export and Generation Code Located\n\n### Primary Export API Routes:\n- **/Users/luke/code/psci/chatbot-ui-2/app/api/export/[id]/generate-pdf/route.ts**\n  - Main PDF generation endpoint\n  - Uses Puppeteer for PDF rendering\n  - Implements comprehensive error handling with timeouts\n  - Returns \"Error generating PDF\" message on failure (line 72)\n\n### Export Content Utility:\n- **/Users/luke/code/psci/chatbot-ui-2/components/editor/ExportContent.tsx**\n  - Centralized export functionality\n  - Makes HTTP GET requests to `/api/export/${id}/generate-${fileType}?session_type=${sessionType}`\n  - Uses toast notifications for user feedback\n\n### Content Retrieval:\n- **/Users/luke/code/psci/chatbot-ui-2/lib/export-ai-content.ts**\n  - `fetchContent()` function handles content retrieval for different session types\n  - Supports both 'draft' and 'reviewProposal' session types\n  - Converts content from JSON format using TipTap extensions\n\n### Shared Services Alternative:\n- **/Users/luke/code/psci/chatbot-ui-2/shared-services-api/src/services/pdf.service.ts**\n  - Alternative PDF generation service using jsPDF\n  - Not currently used by the main application\n  - Designed for markdown-to-PDF conversion\n\n---\n\n## 3. Two UI Locations with Export Buttons\n\n### Location 1: History Panel\n**File**: `/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/workspace-history-list/history-item.tsx`\n- **Lines 399-433**: Export dropdown menu in history items\n- **Export Button**: Lines 403-407 (DropdownMenuSubTrigger)\n- **PDF Export**: Lines 409-417 (`handleExport` with `FILE_TYPES.PDF`)\n- **Availability**: Only visible for `SESSION_TYPES.REVIEW_PROPOSAL` and `SESSION_TYPES.DRAFT`\n\n### Location 2: AI Header (Global Header)\n**File**: `/Users/luke/code/psci/chatbot-ui-2/app/(dashboard)/(ai)/components/AIHeader/AIHeader.tsx`\n- **Lines 175-213**: Export dropdown menu in global header\n- **Export Button**: Lines 178-183 (DropdownMenuTrigger)\n- **PDF Export**: Lines 185-197 (`handleExport` with `FILE_TYPES.PDF`)\n- **Availability**: Only enabled when `selectedItem?.type` is exportable\n\n### Editor Toolbar Components:\n- **/Users/luke/code/psci/chatbot-ui-2/components/editor/ToolbarExportPdf.tsx**\n  - Standalone PDF export button for editor toolbars\n  - Used within editor sessions\n\n---\n\n## 4. Shared Services and Libraries for PDF Generation\n\n### Primary PDF Generation Stack:\n1. **Puppeteer** (Browser automation)\n   - Version: Uses environment variable `PUPPETEER_EXECUTABLE_PATH`\n   - Configuration: Headless Chrome with specific args for Docker compatibility\n   - Timeouts: 30-second limits for browser launch, page load, and PDF generation\n\n2. **TipTap Extensions** (Content processing)\n   - Converts rich editor content to HTML\n   - Supports various formatting: Bold, Italic, Headings, Lists, Tables, etc.\n   - Located in `/lib/export-ai-content.ts`\n\n3. **Next.js API Routes** (Server-side processing)\n   - RESTful endpoint structure\n   - Error handling with JSON responses\n   - Proper HTTP status codes\n\n### Alternative PDF Service:\n- **jsPDF** implementation in shared-services-api\n- Not actively used by the main export functionality\n- More suited for programmatic PDF creation\n\n---\n\n## 5. Current Investigation Progress\n\n### Analysis Status: **COMPLETE**\n✅ **Completed**:\n- AI Review screen component analysis\n- History Panel export functionality analysis  \n- PDF export API route examination\n- Shared services PDF generation review\n- UI export button locations identification\n- Error handling and potential failure point analysis\n- Puppeteer library research for best practices\n\n### Key Findings:\n1. **Two independent export paths** both use the same backend API\n2. **Puppeteer-based PDF generation** with comprehensive timeout handling\n3. **TipTap content conversion** from JSON to HTML before PDF generation\n4. **Docker-optimized browser configuration** for production environments\n\n---\n\n## 6. Questions and Areas Needing User Input\n\n### Critical Questions:\n1. **Browser Environment**: Is the application running in Docker/containerized environment where Puppeteer might have issues accessing Chrome/Chromium?\n\n2. **Environment Variables**: Is `PUPPETEER_EXECUTABLE_PATH` properly configured in the production/staging environment?\n\n3. **Content Validation**: Are there specific AI Review sessions that consistently fail vs. ones that work?\n\n4. **Network/Resource Constraints**: Are there memory or timeout issues in the hosting environment that could cause Puppeteer to fail?\n\n5. **Recent Changes**: Have there been any recent updates to:\n   - Docker images or base containers\n   - Node.js version\n   - Puppeteer version or configuration\n   - Content structure in the review_proposals database table\n\n### Debugging Information Needed:\n- Server logs from failed PDF export attempts\n- Specific session IDs that are failing\n- Browser/network environment details\n- Database content examples that fail to export\n\n---\n\n## 7. Preliminary Findings About Potential Root Causes\n\n### Most Likely Root Causes (Ranked by Probability):\n\n#### 1. **Puppeteer Browser Launch Failure** (High Probability)\n- **Cause**: Chrome/Chromium executable not found or inaccessible\n- **Evidence**: Alpine Docker configuration comments in code (line 43-45)\n- **Symptoms**: Would cause consistent failures across all export attempts\n- **Fix**: Verify `PUPPETEER_EXECUTABLE_PATH` and Chrome installation in container\n\n#### 2. **Content Serialization Issues** (Medium-High Probability)\n- **Cause**: Invalid JSON content in `review_proposals.content` field\n- **Evidence**: `fetchContent()` tries to parse JSON and throws on invalid format\n- **Symptoms**: Would fail only for specific sessions with malformed content\n- **Fix**: Add content validation and better error messages\n\n#### 3. **Timeout Configuration** (Medium Probability)\n- **Cause**: 30-second timeouts may be insufficient for complex content\n- **Evidence**: Multiple timeout configurations in PDF generation\n- **Symptoms**: Intermittent failures on larger documents\n- **Fix**: Increase timeout values or optimize HTML processing\n\n#### 4. **Memory/Resource Constraints** (Medium Probability)\n- **Cause**: Insufficient memory allocation for Puppeteer in containerized environment\n- **Evidence**: Docker-specific browser args suggest resource optimization\n- **Symptoms**: Failures during high load or with complex content\n- **Fix**: Increase container memory limits or optimize browser resource usage\n\n#### 5. **Missing Dependencies** (Low-Medium Probability)\n- **Cause**: Chrome dependencies not installed in container\n- **Evidence**: Alpine Linux configuration suggests minimal container setup\n- **Symptoms**: Browser fails to launch or crashes during PDF generation\n- **Fix**: Install required Chrome dependencies in Docker image\n\n### Next Steps for Investigation:\n1. **Check server logs** for specific Puppeteer errors during failed exports\n2. **Verify browser executable** path and Chrome installation in production\n3. **Test content validation** by examining failing session content structure\n4. **Monitor resource usage** during PDF generation attempts\n5. **Implement enhanced error logging** to capture more specific failure details\n\n---\n\nThe codebase is well-structured with proper error handling, but the failure likely stems from environment configuration or resource constraints in the Puppeteer browser automation setup."}],"totalDurationMs":191203,"totalTokens":110289,"totalToolUseCount":29,"usage":{"input_tokens":0,"cache_creation_input_tokens":359,"cache_read_input_tokens":107671,"output_tokens":2259,"service_tier":"standard"}}}
{"parentUuid":"2b3c1add-1a19-4065-8ea8-8e6157a709c4","isSidechain":false,"userType":"external","cwd":"/Users/luke/code/psci/chatbot-ui-2","sessionId":"90079e5e-f6ae-4e12-aae6-a964426c7c75","version":"1.0.77","gitBranch":"release/v1.51.0","message":{"id":"msg_01QuNmwnGmRLBtuDMcAqWBxt","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"The codebase-analyst has completed a thorough analysis! Here are the key findings:\n\n## What They Found:\n\n**📍 Two Export Locations Confirmed:**\n1. **History Panel** - in `history-item.tsx` (lines 399-433)\n2. **AI Header** - in `AIHeader.tsx` (lines 175-213)\n\n**🔧 PDF Generation System:**\n- Uses **Puppeteer** (browser automation) to generate PDFs\n- Main API endpoint: `/api/export/[id]/generate-pdf/route.ts` \n- Content processing via **TipTap extensions**\n- Centralized export logic in `ExportContent.tsx`\n\n## 🎯 Most Likely Root Causes (Ranked):\n\n1. **Puppeteer Browser Launch Failure** (High Probability)\n   - Chrome/Chromium executable not found in Docker container\n   - `PUPPETEER_EXECUTABLE_PATH` environment variable misconfigured\n\n2. **Content Serialization Issues** (Medium-High Probability) \n   - Invalid JSON content in database causing parsing failures\n\n3. **Timeout/Resource Constraints** (Medium Probability)\n   - 30-second timeouts insufficient or memory limits in containerized environment\n\n## ❓ Critical Questions for You:\n\n1. **Is this running in Docker?** The code has Docker-specific browser configurations\n2. **Is `PUPPETEER_EXECUTABLE_PATH` set correctly** in your staging environment?\n3. **Do you have access to server logs** from recent failed PDF export attempts?\n4. **Are there specific AI Review sessions that consistently fail** vs. ones that work?\n\nWhich of these questions can you help answer to narrow down the root cause?"}],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":2,"cache_creation_input_tokens":2531,"cache_read_input_tokens":35775,"output_tokens":401,"service_tier":"standard"}},"requestId":"req_011CS5yQZwqNxCm1N1Qw6qYb","type":"assistant","uuid":"5a569c4b-f2e5-4206-ba9d-602f7086115f","timestamp":"2025-08-13T15:49:39.345Z"}
